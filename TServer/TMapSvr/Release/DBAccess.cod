; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\DBAccess.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BB@KCHGIENF@CTBLChannelChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@DFIJDCCK@CTBLChannelList?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@NAFKIKLK@CTBLServerChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@EHOPGBMH@CTBLFormulaChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@IJPCID@CTBLAICondition?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@BGIKPMOF@CTBLAICommand?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@CCMPPDIF@CTBLAIChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@FNPLOPMJ@CTBLMonster?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07PLIEIMII@CTBLPet?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@GCBODBJI@CTBLMonSpawn?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@PMGDDPLK@CTBLMonParty?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@CLFGIJLB@CTBLMapMon?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@CGLPNFOC@CTBLLevelChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@KKLBPBNN@CTBLClassChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@GJEOEDNH@CTBLSkillChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@NIBNECBP@CTBLItemChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@BEIEHINO@CTBLRaceChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09EAGHDKO@CTBLSkill?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09FLDGMDOH@CTBLInven?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08KLHKJGDK@CTBLItem?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08DBFGMAPO@CTBLChar?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@CGFODEPN@CTBLSoulmateTable?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@HFJFAGJP@CTBLProtectedTable?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@KDICEIP@CTBLCharGuild?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@KMFPJMMM@CTBLCharTactics?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@FNBBGHEG@CTBLCharGuildInfo?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@GNGCDJFD@CTBLSkillMaintain?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@KLMDCPCF@CTBLSkillData?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@BPNLEJHH@CTBLQuestChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@FPLMGNFI@CTBLQuestConditionChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@EAJLALIO@CTBLQuestRewardChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@OCGLNJNE@CTBLQuestMagicItemChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@BOHJADFB@CTBLQuestTermChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@FLMMBLKB@CTBLQuestTable?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@FKGOFBIH@CTBLQuestTermTable?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@FEMHEDED@CTBLCabinetTable?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@LDOMJEMG@CTBLSpawnPos?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@MGBKMIKC@CTBLIndunChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07FECMEJCJ@CTBLNpc?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@NILHLJGK@CTBLNpcItem?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@HLDAEBHA@CTBLMonItem?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@CBLGIHPG@CTBLPostTable?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@JLJLDPDK@CTBLHotKey?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@PDCBGENO@CTBLBattleZoneChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@BHJHBODJ@CTBLLocalTable?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@FEIOLMMB@CTBLCastleTable?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@FJNLONLJ@CTBLItemAttrChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@MKKIPGEA@CTBLItemGradeChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@GPFBMNEO@CTBLItemMagicChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@EBJKHPCD@CTBLItemSetChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@FKAOJOJE@CTBLFindChar?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@PBEPFHDD@CTBLLocalInfo?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@DECINPDK@CTBLItemUsed?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@DKAAALAI@CTBLSpawnPath?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@PAGKMGJM@CTBLRecallMon?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@NIDGMBCB@CTBLPortalChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@HOGANJA@CTBLDestinationChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@KDHNAKEA@CTBLGateChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@NCLJGPCO@CTBLSwitchChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@DCCCNCDJ@CTBLOperatorChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@MMEIPPMI@CTBLPetTable?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@JLPOMNGI@CTBLMonAttr?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@HKDAILMJ@CTBLItemMagicSkill?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@GIHLAPGK@CTBLCashItemCabinet?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@CKCJFDDH@CTBLCashShopItem?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@GBEKHCCK@CTBLCashCategory?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@OLFFNDG@CTBLGamble?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@CAFCPGKD@CTBLGodTower?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@ENLGOCKM@CTBLGodBall?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@IDGCOEKI@CTBLLocalOccupy?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@KDDMBKPB@CTBLDuringItem?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@DDHAJLGO@CTBLExpItem?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@IOKEJNAJ@CTBLSkillPoint?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@MHEPPGPJ@CTBLRecallMaintain?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@LMFKOODM@CTBLSvrMsg?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@CFIOCMPH@CTBLPvPointChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@ICCNFCGA@CTBLPvPRecent?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@EPODMDNB@CTBLDuelCharList?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@EPGDKCBJ@CTBLDuelCharScore?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@KGPMLMDC@CTBLMonsterShop?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@PGAGDFLB@CTBLCashGambleChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@BOFEEHJC@CTBLAuctionTable?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@EJNLEJEB@CTBLAuctionInterest?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@GCFOENGO@CTBLAuctionBidList?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@JPDCKDNI@CTBLALLAuctionBidder?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@FPNBGEJP@CTBLAuctionRegList?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@MAPHLBOO@CTBLMonthRankTable?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@IMHJOJNN@CTBLFirstGradeGroup?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@NMEIAFLJ@CTBLPostItem?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BPCBLBCE@CTBLPostBill?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@CJJCAENO@CTBLHeroTable?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@GKEPILDD@CTBLTutorialCharItem?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@DFDJDDIP@CTBLHelpMessage?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@MBNGIBKG@CTBLMissionTable?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@CGFJGBED@CTBLRPSGame?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09NLBEDAFG@CTBLArena?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@EHICCAHL@CTBLAidTable?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@KBGBHHPH@CSPCreateRecallMon?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@BPPADGEL@CSPSaveRecallMon?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@NIFMANIC@CSPEnterServer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@DFHCCFBK@CSPGetServerID?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@JMHOGABD@CSPSaveInven?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@DEHBNGEB@CSPSaveItem?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@KOFNIAIF@CSPSaveChar?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09FMDGFNJM@CSPLogout?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08ELCCIPKB@CSPRoute?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@MDEONAFK@CSPSaveSkill?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@NIDOFGNK@CSPSaveSkillMaintain?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@IOOBJLBO@CSPSaveQuest?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@EKKINMNJ@CSPSaveQuestTerm?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@BDCNMICA@CSPSaveCabinet?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@IBLOOOKC@CSPSaveHotkey?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@PAKGKKPG@CSPSaveLocalOccupy?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@LMOHDPJJ@CSPSaveCastleOccupy?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@GGJCLGEN@CSPPostCanSend?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@FNDCIFPG@CSPSavePost?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@KLJKIDND@CSPPostRead?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@NBPELKJC@CSPPostDelete?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@KLLIFGCI@CSPPostGetItem?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@HLMICCHJ@CSPSaveItemUsed?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@MEAJGGBL@CSPClearCurrentUser?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@BJNJMJOJ@CSPRecallmonDel?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@EOLAMDPB@CSPLogSkill?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@LAGALIBN@CSPProtectedInsert?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@OJEHGOP@CSPProtectedDelete?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@LHFIMBJJ@CSPPetDelete?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@EPCAFCMO@CSPSavePet?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@NOILHOMJ@CSPSaveCharDataStart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@PCEMMOCL@CSPSaveCharDataEnd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@BMAJLAAB@CSPSaveItemDataStart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@MGAFFNJM@CSPSaveItemDataEnd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@EOMPGPJC@CSPLoadService?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@LBAOFIBN@CSPSaveSMS?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@CGOEDDEN@CSPGetPcBangData?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@FEAEGPEI@CSPEventQuarter?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@PGJMCPPI@CSPGetCash?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@JJMKNAKC@CSPCashItemGet?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@HJMPNKN@CSPCashItemBuy?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@LLGEMHHG@CSPSaveDuringItem?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@MHPIKMN@CSPSaveExpItem?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@CDMHKLGI@CSPSaveItemDirect?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@ICGANCLP@CSPGuildItemPutIn?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@OLANJJJB@CSPGuildItemTakeOut?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@HKJBIGFB@CSPGuildItemRollback?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@PFLMGCAG@CSPSaveEXP?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@KKKBPAFD@CSPSaveMoney?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@NADADAPK@CSPSaveActEnd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@CEIJJCMA@CSPCashCabinetBuy?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@NIKJIGFC@CSPCashItemPutin?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EIMKHAJ@CSPGetCashCabinetUseTime?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@CKCNPPEK@CSPInitGenItemID?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@GKDMPOAN@CSPDeleteDealItem?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@FDJOJBBC@CSPSaveRecallMaintain?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@JNMKAOE@CSPCheckDuplicateName?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@MIAACEO@CSPHeroSelect?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@IFJJLPNO@CSPStopTheClock?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@OKFNCCNL@CSPSaveCharBase?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@CAGAKGIN@CSPGetLimitedLevel?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@KEAKLAPB@CSPGetNation?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@LPACKMBP@CSPQuestSendPost?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@PKCCEPBN@CSPGetPvPRecord?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@FNPEAKJG@CSPSavePvPRecord?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@GNLHKCLH@CSPSavePvPRecent?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@ECNNALID@CSPDuelScore?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@KCNFKBEK@CSPDuelCharAdd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@NEENLJKB@CSPSaveProtectedOption?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@BFNPLBEO@CSPAuctionReg?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@ECKBINFG@CSPAuctionRegCancel?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@GHPBEMHG@CSPAuctionBid?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@IPOHBAIB@CSPAuctionBuyDirect?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@PPGJGCEK@CSPAuctionEnd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@HOJHKDNG@CSPSaveAuctionInterest?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@GHLMOLCL@CSPGainCashBonus?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@JGHBDNBK@CSPGetMonthPvPoint?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@JJKPAFHN@CSPSaveMonthPvPoint?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@DCKKNBGN@CSPSaveWarlordSay?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@CNBPHJDO@CSPGetPostInfo?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@HCCKHDOF@CSPPostView?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@LHLNMLKP@CSPPostBillsUpdate?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@JGAPCJOE@CSPTournamentReward?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@JHKBAIGF@CSPSaveCharPosition?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@FGFIEEGL@CSPSaveMissionOccupy?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@PJDMFFDP@CSPMonthPvPointClear?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@FOOMFNIG@CSPTCMGiftLog?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?InitQueryTMapSvr@@YAHPAVCSqlDatabase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@GIG@std@@YAXPAGIABGAAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTAICONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTAICONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@YAXPAPAUtagTAICONDITION@@0AAV?$allocator@PAUtagTAICONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMONITEM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMONITEM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMONITEM@@V?$allocator@PAUtagTMONITEM@@@std@@@std@@YAXPAPAUtagTMONITEM@@0AAV?$allocator@PAUtagTMONITEM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMAPMON@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMAPMON@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@YAXPAPAUtagTMAPMON@@0AAV?$allocator@PAUtagTMAPMON@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagPATHPOINT@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagPATHPOINT@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagPATHPOINT@@V?$allocator@PAUtagPATHPOINT@@@std@@@std@@YAXPAPAUtagPATHPOINT@@0AAV?$allocator@PAUtagPATHPOINT@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTCONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTCONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTCONDITION@@V?$allocator@PAUtagQUESTCONDITION@@@std@@@std@@YAXPAPAUtagQUESTCONDITION@@0AAV?$allocator@PAUtagQUESTCONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTREWARD@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTREWARD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTREWARD@@V?$allocator@PAUtagQUESTREWARD@@@std@@@std@@YAXPAPAUtagQUESTREWARD@@0AAV?$allocator@PAUtagQUESTREWARD@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTTERM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTTERM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@0AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTCASHITMSALE@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTCASHITMSALE@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagTCASHITMSALE@@IU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@IABU1@AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagMONREGEN@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagMONREGEN@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagMONREGEN@@IU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@IABU1@AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagLOTTERY@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagLOTTERY@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagLOTTERY@@IU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@IABU1@AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAGPAGV?$allocator@G@std@@@std@@YAPAGPAG00AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAGPAG@std@@YAPAGPAG00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@VCTPlayer@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTPlayer@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@0AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagTCASHITMSALE@@PAU1@@std@@YAPAUtagTCASHITMSALE@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@0AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagMONREGEN@@PAU1@@std@@YAPAUtagMONREGEN@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@0AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagLOTTERY@@PAU1@@std@@YAPAUtagLOTTERY@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAGIG@std@@YAXPAGIABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@GG@std@@YAPAGPAG00AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagTCASHITMSALE@@U1@@std@@YAXPAUtagTCASHITMSALE@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTCASHITMSALE@@@std@@YAXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagMONREGEN@@U1@@std@@YAXPAUtagMONREGEN@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagMONREGEN@@@std@@YAXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagLOTTERY@@U1@@std@@YAXPAUtagLOTTERY@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagLOTTERY@@@std@@YAXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPTCMGiftLog@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BP@ODAIIEOC@?$HL?5CALL?5TCMGiftLog?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPTCMGiftLog@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPTCMGiftLog@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPTCMGiftLog@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPTCMGiftLog@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTCMGiftLog@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPMonthPvPointClear@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BM@ODIPLIJG@?$HL?5CALL?5TMonthPvPointClear?5?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPMonthPvPointClear@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPMonthPvPointClear@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPMonthPvPointClear@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveMissionOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CI@PNBOFEED@?$HL?5?$DP?5?$DN?5CALL?5TSaveMissionOccupy?$CI?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveMissionOccupy@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveMissionOccupy@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveMissionOccupy@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveMissionOccupy@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveMissionOccupy@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveCharPosition@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CK@JMBAPFHB@?$HL?$DP?5?$DN?5CALL?5TSaveCharPosition?$CI?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveCharPosition@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveCharPosition@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveCharPosition@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveCharPosition@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveCharPosition@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPTournamentReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EM@CDGOFCOF@?$HLCALL?5TTournamentReward?$CI?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPTournamentReward@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPTournamentReward@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPTournamentReward@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPTournamentReward@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTournamentReward@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPPostBillsUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CL@GLFIEBPI@?$HL?$DP?5?$DN?5CALL?5TPostBillsUpdate?$CI?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPPostBillsUpdate@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPPostBillsUpdate@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPPostBillsUpdate@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPPostBillsUpdate@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPPostBillsUpdate@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPPostView@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DA@NPPLBBCI@?$HL?$DP?5?$DN?5CALL?5TPostView?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPPostView@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPPostView@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPPostView@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPPostView@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPPostView@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGetPostInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BP@KFAALJLF@?$HLCALL?5TGetPostInfo?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGetPostInfo@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGetPostInfo@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGetPostInfo@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGetPostInfo@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetPostInfo@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveWarlordSay@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CE@EICKELFH@?$HL?$DP?5?$DN?5CALL?5TSaveWarlordSay?$CI?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveWarlordSay@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveWarlordSay@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveWarlordSay@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveWarlordSay@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveWarlordSay@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CG@BCLLDKOA@?$HLCALL?5TSaveMonthPvPoint?$CI?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveMonthPvPoint@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveMonthPvPoint@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveMonthPvPoint@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveMonthPvPoint@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveMonthPvPoint@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGetMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CF@LINCEDJC@?$HLCALL?5TGetMonthPvPoint?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGetMonthPvPoint@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGetMonthPvPoint@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGetMonthPvPoint@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGetMonthPvPoint@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetMonthPvPoint@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGainCashBonus@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CE@DLCKDLE@?$HL?5?$DP?5?$DN?5CALL?5TGainCashBonus?$CI?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGainCashBonus@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGainCashBonus@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGainCashBonus@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGainCashBonus@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGainCashBonus@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveAuctionInterest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@LACBEJAB@?$HLCALL?5TSaveAuctionInterest?$CI?$DP?0?$DP?$CJ?$HN@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveAuctionInterest@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveAuctionInterest@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveAuctionInterest@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveAuctionInterest@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveAuctionInterest@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPAuctionEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CH@FCCGOHHA@?$HL?5?$DP?5?$DN?5CALL?5TAuctionEnd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPAuctionEnd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPAuctionEnd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPAuctionEnd@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPAuctionEnd@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPAuctionEnd@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPAuctionBuyDirect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DD@PNGBOCNJ@?$HL?5?$DP?5?$DN?5CALL?5TAuctionBuyDirect?$CI?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPAuctionBuyDirect@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPAuctionBuyDirect@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPAuctionBuyDirect@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPAuctionBuyDirect@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPAuctionBuyDirect@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPAuctionBid@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CJ@EJJPIBAB@?$HL?5?$DP?5?$DN?5CALL?5TAuctionBid?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPAuctionBid@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPAuctionBid@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPAuctionBid@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPAuctionBid@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPAuctionBid@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPAuctionRegCancel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CM@LLKMDBFH@?$HL?5?$DP?5?$DN?5CALL?5TAuctionRegCancel?$CI?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPAuctionRegCancel@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPAuctionRegCancel@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPAuctionRegCancel@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPAuctionRegCancel@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPAuctionRegCancel@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPAuctionReg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CL@JBKCJOLC@?$HL?5?$DP?5?$DN?5CALL?5TAuctionReg?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPAuctionReg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPAuctionReg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPAuctionReg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPAuctionReg@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPAuctionReg@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveProtectedOption@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CD@KOOCPODB@?$HLCALL?5TSaveProtectedOption?$CI?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveProtectedOption@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveProtectedOption@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveProtectedOption@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveProtectedOption@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveProtectedOption@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPDuelCharAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CH@LCAOLEAM@?$HL?$DP?5?$DN?5CALL?5TDuelCharAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPDuelCharAdd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPDuelCharAdd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPDuelCharAdd@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPDuelCharAdd@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPDuelCharAdd@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPDuelScore@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DB@ICOHJADD@?$HL?$DP?5?$DN?5CALL?5TDuelScore?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPDuelScore@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPDuelScore@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPDuelScore@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPDuelScore@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPDuelScore@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSavePvPRecent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CF@MFBNHAAG@?$HLCALL?5TSavePvPRecent?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSavePvPRecent@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSavePvPRecent@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSavePvPRecent@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSavePvPRecent@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSavePvPRecent@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSavePvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DF@MGGMNJMH@?$HLCALL?5TSavePvPRecord?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSavePvPRecord@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSavePvPRecord@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSavePvPRecord@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSavePvPRecord@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSavePvPRecord@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGetPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DI@FDGCJLNM@?$HLCALL?5TGetPvPRecord?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGetPvPRecord@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGetPvPRecord@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGetPvPRecord@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGetPvPRecord@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetPvPRecord@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPQuestSendPost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FH@LNLLMHHA@?$HL?5?$DP?5?$DN?5CALL?5TQuestSendPost?$CI?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPQuestSendPost@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPQuestSendPost@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPQuestSendPost@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPQuestSendPost@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPQuestSendPost@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGetNation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BF@MGHBOKLC@?$HLCALL?5TGetNation?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGetNation@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGetNation@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGetNation@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGetNation@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetNation@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGetLimitedLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BM@GKCNHNAL@?$HL?5CALL?5TGetLimitedLevel?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGetLimitedLevel@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGetLimitedLevel@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGetLimitedLevel@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGetLimitedLevel@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetLimitedLevel@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveCharBase@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BP@JKAJDJAN@?$HL?5CALL?5TSaveCharBase?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveCharBase@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveCharBase@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveCharBase@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveCharBase@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveCharBase@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPStopTheClock@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BP@EAICODNF@?$HL?5?$DP?5?$DN?5CALL?5TStopTheClock?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPStopTheClock@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPStopTheClock@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPStopTheClock@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPStopTheClock@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPStopTheClock@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPHeroSelect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CE@GEBMGABJ@?$HL?5?$DP?5?$DN?5CALL?5THeroSelect?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPHeroSelect@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPHeroSelect@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPHeroSelect@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPHeroSelect@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPHeroSelect@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPCheckDuplicateName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CF@GHNNGFIP@?$HL?5?$DP?5?$DN?5CALL?5TCheckDuplicateName?$CI?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPCheckDuplicateName@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPCheckDuplicateName@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPCheckDuplicateName@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPCheckDuplicateName@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPCheckDuplicateName@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveRecallMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DE@IBAPBHNA@?$HL?$DP?5?$DN?5CALL?5TSaveRecallMaintain?$CI?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveRecallMaintain@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveRecallMaintain@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveRecallMaintain@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveRecallMaintain@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveRecallMaintain@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPDeleteDealItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BL@IGEMDNJL@?$HL?5CALL?5TDeleteDealItem?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPDeleteDealItem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPDeleteDealItem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPDeleteDealItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPDeleteDealItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPDeleteDealItem@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPInitGenItemID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BM@JKDEHEA@?$HL?5CALL?5TInitGenItemID?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPInitGenItemID@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPInitGenItemID@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPInitGenItemID@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPInitGenItemID@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPInitGenItemID@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGetCashCabinetUseTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CM@DJINDKIA@?$HL?5?$DP?5?$DN?5CALL?5TGetCashCabinetUseTim@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGetCashCabinetUseTime@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGetCashCabinetUseTime@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGetCashCabinetUseTime@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGetCashCabinetUseTime@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetCashCabinetUseTime@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPCashItemPutin@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CI@ECCGJFBO@?$HL?5?$DP?5?$DN?5CALL?5TCashItemPutin?$CI?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPCashItemPutin@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPCashItemPutin@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPCashItemPutin@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPCashItemPutin@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPCashItemPutin@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPCashCabinetBuy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CH@COGOJAOJ@?$HL?5?$DP?5?$DN?5CALL?5TCashCabinetBuy?$CI?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPCashCabinetBuy@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPCashCabinetBuy@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPCashCabinetBuy@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPCashCabinetBuy@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPCashCabinetBuy@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveActEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BH@OKDFEELC@?$HL?5CALL?5TSaveActEnd?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveActEnd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveActEnd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveActEnd@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveActEnd@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveActEnd@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveMoney@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BM@CCKPCLKC@?$HL?5CALL?5TSaveMoney?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveMoney@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveMoney@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveMoney@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveMoney@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveMoney@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveEXP@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BG@FIIGNJJH@?$HL?5CALL?5TSaveEXP?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveEXP@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveEXP@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveEXP@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveEXP@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveEXP@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildItemRollback@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FH@OCNAOBOL@?$HLCALL?5TGuildItemRollback?$CI?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildItemRollback@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildItemRollback@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildItemRollback@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildItemRollback@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildItemRollback@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildItemTakeOut@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FL@JJIDANDC@?$HL?5?$DP?5?$DN?5CALL?5TGuildItemTakeOut?$CI?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildItemTakeOut@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildItemTakeOut@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildItemTakeOut@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildItemTakeOut@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildItemTakeOut@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildItemPutIn@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FJ@FDELKAMI@?$HL?5?$DP?5?$DN?5CALL?5TGuildItemPutIn?$CI?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildItemPutIn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildItemPutIn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildItemPutIn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildItemPutIn@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildItemPutIn@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveItemDirect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FL@DINLIHEL@?$HL?5CALL?5TSaveItemDirect?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveItemDirect@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveItemDirect@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveItemDirect@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveItemDirect@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveItemDirect@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveExpItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CA@EPKIBBOM@?$HL?5CALL?5TSaveExpItem?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveExpItem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveExpItem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveExpItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveExpItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveExpItem@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveDuringItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CD@HNFHNNLK@?$HL?5CALL?5TSaveDuringItem?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveDuringItem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveDuringItem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveDuringItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveDuringItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveDuringItem@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPCashItemBuy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CN@MGFKPHMM@?$HL?$DP?5?$DN?5CALL?5TCashItemBuy?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPCashItemBuy@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPCashItemBuy@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPCashItemBuy@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPCashItemBuy@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPCashItemBuy@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPCashItemGet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FL@LKOBIECC@?$HL?$DP?5?$DN?5CALL?5TCashItemGet?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPCashItemGet@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPCashItemGet@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPCashItemGet@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPCashItemGet@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPCashItemGet@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGetCash@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BH@HHNDKFPN@?$HLCALL?5TCashGet?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGetCash@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGetCash@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGetCash@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGetCash@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetCash@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPEventQuarter@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BP@KFGLDCKH@?$HL?5CALL?5TEventQuarter?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPEventQuarter@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPEventQuarter@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPEventQuarter@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPEventQuarter@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPEventQuarter@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGetPcBangData@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CE@DAFLKCOF@?$HL?5CALL?5TGetPcBangData?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGetPcBangData@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGetPcBangData@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGetPcBangData@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGetPcBangData@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetPcBangData@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveSMS@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CC@LHBJACLK@?$HL?5?$DP?5?$DN?5CALL?5TSaveSMS?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveSMS@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveSMS@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveSMS@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveSMS@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveSMS@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPLoadService@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BN@FKLLIGDD@?$HLCALL?5TLoadService?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPLoadService@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPLoadService@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPLoadService@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPLoadService@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPLoadService@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveItemDataEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BL@DCNPANMD@?$HLCALL?5TSaveItemDataEnd?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveItemDataEnd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveItemDataEnd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveItemDataEnd@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveItemDataEnd@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveItemDataEnd@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveItemDataStart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BN@IGJCHCEP@?$HLCALL?5TSaveItemDataStart?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveItemDataStart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveItemDataStart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveItemDataStart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveItemDataStart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveItemDataStart@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveCharDataEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BL@ENCAHNLA@?$HLCALL?5TSaveCharDataEnd?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveCharDataEnd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveCharDataEnd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveCharDataEnd@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveCharDataEnd@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveCharDataEnd@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveCharDataStart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BN@NCIFFGLJ@?$HLCALL?5TSaveCharDataStart?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveCharDataStart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveCharDataStart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveCharDataStart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveCharDataStart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveCharDataStart@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSavePet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BJ@PINFLPPI@?$HLCALL?5TSavePet?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSavePet@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSavePet@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSavePet@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSavePet@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSavePet@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPPetDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BH@JNKNPKHH@?$HLCALL?5TPetDelete?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPPetDelete@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPPetDelete@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPPetDelete@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPPetDelete@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPPetDelete@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPProtectedDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BN@GLHBIPLO@?$HLCALL?5TProtectedDelete?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPProtectedDelete@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPProtectedDelete@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPProtectedDelete@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPProtectedDelete@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPProtectedDelete@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPProtectedInsert@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CF@PLLGJGJJ@?$HL?$DP?5?$DN?5CALL?5TProtectedInsert?$CI?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPProtectedInsert@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPProtectedInsert@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPProtectedInsert@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPProtectedInsert@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPProtectedInsert@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPLogSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BP@BJEMNMNE@?$HL?5CALL?5TLogSkill?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPLogSkill@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPLogSkill@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPLogSkill@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPLogSkill@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPLogSkill@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPRecallmonDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BL@MHINMLJP@?$HL?5CALL?5TRecallMonDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPRecallmonDel@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPRecallmonDel@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPRecallmonDel@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPRecallmonDel@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPRecallmonDel@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPClearCurrentUser@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BN@FAHNLGDM@?$HL?5CALL?5TClearCurrentUser?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPClearCurrentUser@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPClearCurrentUser@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPClearCurrentUser@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPClearCurrentUser@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPClearCurrentUser@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveItemUsed@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BM@PMDNGICE@?$HLCALL?5TSaveItemUsed?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveItemUsed@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveItemUsed@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveItemUsed@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveItemUsed@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveItemUsed@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPPostGetItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BK@ELGJCACK@?$HL?5CALL?5TPostGetItem?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPPostGetItem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPPostGetItem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPPostGetItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPPostGetItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPPostGetItem@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPPostDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BN@EACOLDLF@?$HL?5?$DP?5?$DN?5CALL?5TPostDelete?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPPostDelete@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPPostDelete@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPPostDelete@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPPostDelete@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPPostDelete@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPPostRead@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BJ@IANFNGLH@?$HL?5CALL?5TPostRead?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPPostRead@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPPostRead@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPPostRead@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPPostRead@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPPostRead@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSavePost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DD@LALPOAKK@?$HL?5?$DP?5?$DN?5CALL?5TSavePost?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSavePost@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSavePost@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSavePost@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSavePost@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSavePost@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPPostCanSend@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CC@NCLLANDK@?$HL?5?$DP?5?$DN?5CALL?5TPostCanSend?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPPostCanSend@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPPostCanSend@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPPostCanSend@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPPostCanSend@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPPostCanSend@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveCastleOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CH@KHFDBGOL@?$HL?5?$DP?5?$DN?5CALL?5TSaveCastleOccupy?$CI?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveCastleOccupy@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveCastleOccupy@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveCastleOccupy@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveCastleOccupy@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveCastleOccupy@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveLocalOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CK@KLFCEMIA@?$HL?5?$DP?5?$DN?5CALL?5TSaveLocalOccupy?$CI?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveLocalOccupy@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveLocalOccupy@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveLocalOccupy@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveLocalOccupy@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveLocalOccupy@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveHotkey@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EL@KBONMKDN@?$HL?5CALL?5TSaveHotkey?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveHotkey@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveHotkey@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveHotkey@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveHotkey@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveHotkey@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CA@EFMLLMEB@?$HL?5?$DP?5?$DN?5CALL?5TSaveCabinet?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveCabinet@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveCabinet@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveCabinet@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveCabinet@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveCabinet@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveQuestTerm@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CG@GPJKJFDM@?$HL?5?$DP?5?$DN?5CALL?5TSaveQuestTerm?$CI?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveQuestTerm@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveQuestTerm@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveQuestTerm@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveQuestTerm@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveQuestTerm@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveQuest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CC@FBPDEFGB@?$HL?5?$DP?5?$DN?5CALL?5TSaveQuest?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveQuest@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveQuest@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveQuest@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveQuest@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveQuest@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveSkillMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DB@PBHONOMA@?$HL?$DP?5?$DN?5CALL?5TSaveSkillMaintain?$CI?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveSkillMaintain@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveSkillMaintain@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveSkillMaintain@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveSkillMaintain@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveSkillMaintain@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BP@NBFCBHFL@?$HL?$DP?5?$DN?5CALL?5TSaveSkill?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveSkill@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveSkill@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveSkill@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveSkill@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveSkill@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPRoute@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BO@LDFDEPKD@?$HL?5?$DP?5?$DN?5CALL?5TRoute?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPRoute@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPRoute@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPRoute@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPRoute@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPRoute@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPLogout@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BJ@MDCKIAOD@?$HL?5?$DP?5?$DN?5CALL?5TLogout?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPLogout@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPLogout@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPLogout@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPLogout@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPLogout@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EL@FIGPJBOC@?$HL?5?$DP?5?$DN?5CALL?5TSaveChar?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveChar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveChar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveChar@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveChar@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveChar@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FJ@FFNPGGJI@?$HL?5?$DP?5?$DN?5CALL?5TSaveItem?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveItem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveItem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveItem@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveInven@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CC@NHCIBNDE@?$HL?5?$DP?5?$DN?5CALL?5TSaveInven?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveInven@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveInven@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveInven@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveInven@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveInven@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGetServerID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CC@OLIGDILL@?$HL?5?$DP?5?$DN?5CALL?5TGetServerID?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGetServerID@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGetServerID@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGetServerID@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGetServerID@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetServerID@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPEnterServer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CI@DAHMPMGN@?$HL?5?$DP?5?$DN?5CALL?5TEnterServer?$CI?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPEnterServer@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPEnterServer@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPEnterServer@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPEnterServer@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPEnterServer@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DH@KKONHIIO@?$HL?$DP?5?$DN?5CALL?5TSaveRecallMon?$CI?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveRecallMon@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveRecallMon@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveRecallMon@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveRecallMon@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveRecallMon@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPCreateRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DI@PDEGIMCN@?$HL?5?$DP?5?$DN?5CALL?5TCreateRecallMon?$CI?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPCreateRecallMon@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPCreateRecallMon@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPCreateRecallMon@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPCreateRecallMon@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPCreateRecallMon@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLAidTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DM@MDICDKJM@SELECT?5?7bCountry?0?5?7dDate?5?7FROM?5T@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLAidTable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLAidTable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLAidTable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLAidTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLAidTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLAidTable@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLAidTable@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLArena@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DL@LNPPHAAN@SELECT?5wID?0?5bType?0?5wInPos?0?5wOutP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLArena@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLArena@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLArena@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLArena@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLArena@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLRPSGame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0ME@JILIGHLK@SELECT?5?7bType?0?5?7bWinCount?0?5?7wIte@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLRPSGame@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLRPSGame@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLRPSGame@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLRPSGame@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLRPSGame@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLMissionTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DC@MFHGBGIK@SELECT?5?7wMissionID?0?5?7bCountry?5?7F@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLMissionTable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLMissionTable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLMissionTable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLMissionTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMissionTable@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLHelpMessage@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DL@IHJCHPMI@SELECT?5bID?0?5dStart?0?5dEnd?0?5szMess@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLHelpMessage@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLHelpMessage@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLHelpMessage@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLHelpMessage@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLHelpMessage@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLTutorialCharItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0JG@JLIPLCFN@SELECT?5?7bCountry?0?5?7bClass?0?5?7bSex@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLTutorialCharItem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLTutorialCharItem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLTutorialCharItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLTutorialCharItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTutorialCharItem@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLHeroTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BAB@HIHJAPAM@SELECT?5?7bMonth?0?5?7bType?0?5?7bOrder?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLHeroTable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLHeroTable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLHeroTable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLHeroTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLHeroTable@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLPostBill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FD@HDBAHMKP@SELECT?5dwPostID?0?5timeRecv?5FROM?5T@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLPostBill@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLPostBill@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLPostBill@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLPostBill@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLPostBill@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLPostBill@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLPostBill@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLPostItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BIN@DIECFCGK@SELECT?5?7dlID?0?5?7bItemID?0?5?7wItemID@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLPostItem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLPostItem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLPostItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLPostItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLPostItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLPostItem@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLPostItem@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLFirstGradeGroup@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BAB@HGCAMCMO@SELECT?5?7bRank?0?5?7dwCharID?0?5?7szNam@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLFirstGradeGroup@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLFirstGradeGroup@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLFirstGradeGroup@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLFirstGradeGroup@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLFirstGradeGroup@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLFirstGradeGroup@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLFirstGradeGroup@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLMonthRankTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BCM@JCGKNOOJ@SELECT?5?7bMonth?0?5?7bRank?0?5?7bMonthR@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLMonthRankTable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLMonthRankTable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLMonthRankTable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLMonthRankTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonthRankTable@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLAuctionRegList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DM@MGOJJHBJ@SELECT?5?7dwAuctionID?5?7FROM?5TAUCTI@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLAuctionRegList@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLAuctionRegList@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLAuctionRegList@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLAuctionRegList@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLAuctionRegList@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLAuctionRegList@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLAuctionRegList@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLALLAuctionBidder@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EL@HHNIBHIK@SELECT?5?7dwAuctionID?0?5?7dwCharID?0?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLALLAuctionBidder@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLALLAuctionBidder@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLALLAuctionBidder@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLALLAuctionBidder@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLALLAuctionBidder@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLAuctionBidList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FE@CPKPFGEH@SELECT?5?7dwAuctionID?0?5?7dlBidPrice@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLAuctionBidList@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLAuctionBidList@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLAuctionBidList@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLAuctionBidList@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLAuctionBidList@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLAuctionBidList@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLAuctionBidList@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLAuctionInterest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DP@PPKIJFCL@SELECT?5?7dwAuctionID?5?7FROM?5TAUCTI@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLAuctionInterest@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLAuctionInterest@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLAuctionInterest@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLAuctionInterest@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLAuctionInterest@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLAuctionInterest@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLAuctionInterest@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLAuctionTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CHD@OLLCLNAK@SELECT?5?7A?4dwAuctionID?0?5?7A?4dwChar@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLAuctionTable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLAuctionTable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLAuctionTable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLAuctionTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLAuctionTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLAuctionTable@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLAuctionTable@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLCashGambleChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BFE@ICIFPNNJ@SELECT?5?7dwID?0?5?7dwProb?0?5?7wGroup?0?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLCashGambleChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLCashGambleChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLCashGambleChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLCashGambleChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLCashGambleChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLMonsterShop@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EH@FKKHJNOO@SELECT?5wID?0?5wNpcID?0?5wSpawnID?0?5dw@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLMonsterShop@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLMonsterShop@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLMonsterShop@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLMonsterShop@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonsterShop@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLDuelCharScore@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0PC@JGNCOHLM@SELECT?5?7?7dwWarriorLose?0?5?7?7dwWarr@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLDuelCharScore@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLDuelCharScore@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLDuelCharScore@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLDuelCharScore@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLDuelCharScore@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLDuelCharScore@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLDuelCharScore@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLDuelCharList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0GK@JDNPBOBP@SELECT?5TOP?510?5?7szName?0?5?7bClass?0?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLDuelCharList@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLDuelCharList@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLDuelCharList@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLDuelCharList@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLDuelCharList@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLDuelCharList@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLDuelCharList@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLPvPRecent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FL@EJHHGDEL@SELECT?5szName?0?5bClass?0?5bLevel?0?5b@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLPvPRecent@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLPvPRecent@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLPvPRecent@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLPvPRecent@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLPvPRecent@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLPvPRecent@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLPvPRecent@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLPvPointChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FF@CEPMKION@SELECT?5wLocalID?0?5bStatus?0?5bEvent@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLPvPointChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLPvPointChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLPvPointChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLPvPointChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLPvPointChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLSvrMsg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CJ@JJBDOFJM@SELECT?5dwID?0?5szMessage?5FROM?5TSVR@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLSvrMsg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLSvrMsg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLSvrMsg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLSvrMsg@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSvrMsg@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLRecallMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0KI@JDJDIFFG@SELECT?5?7dwRecallID?0?5?7wSkillID?0?5?7@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLRecallMaintain@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLRecallMaintain@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLRecallMaintain@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLRecallMaintain@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLRecallMaintain@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLRecallMaintain@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLRecallMaintain@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLSkillPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0GG@FGFPLDPP@SELECT?5?7wID?0?5?7bLevel?0?5?7bSkillPoi@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLSkillPoint@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLSkillPoint@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLSkillPoint@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLSkillPoint@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSkillPoint@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLExpItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FK@EHCEGHEE@SELECT?5?7wItemID?0?5?7bType?0?5?7dwRema@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLExpItem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLExpItem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLExpItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLExpItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLExpItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLExpItem@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLExpItem@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLDuringItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0GC@EGHGOCFE@SELECT?5?7wItemID?0?5?7bType?0?5?7dwRema@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLDuringItem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLDuringItem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLDuringItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLDuringItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLDuringItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLDuringItem@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLDuringItem@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLLocalOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EE@NJFIBMEI@SELECT?5?7wLocalID?0?5?7bDay?0?5?7dwGuil@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLLocalOccupy@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLLocalOccupy@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLLocalOccupy@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLLocalOccupy@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLLocalOccupy@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLGodBall@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EJ@NJBKJIJJ@SELECT?5?7wID?0?5?7bCamp?0?5?7wMapID?0?5?7f@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLGodBall@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLGodBall@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLGodBall@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLGodBall@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGodBall@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLGodTower@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EC@FEMNPAOE@SELECT?5?7wID?0?5?7wMapID?0?5?7fPosX?0?5?7f@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLGodTower@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLGodTower@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLGodTower@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLGodTower@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGodTower@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLGamble@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0GC@MAEHGHNK@SELECT?5?7bType?0?5?7bKind?0?5?7wReplace@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLGamble@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLGamble@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLGamble@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLGamble@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGamble@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLCashCategory@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EA@EBCOKAMH@SELECT?5bID?0?5szName?5FROM?5TVIEW_CA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLCashCategory@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLCashCategory@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLCashCategory@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLCashCategory@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLCashCategory@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLCashShopItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BJP@LMNPNEDP@SELECT?5?7wID?0?5?7wInfoID?0?5?7dwMoney?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLCashShopItem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLCashShopItem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLCashShopItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLCashShopItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLCashShopItem@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLCashItemCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BGC@NMBJCIEB@SELECT?5?5?5?5?5TOP?5500?5?7dwID?0?5?7wItem@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLCashItemCabinet@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLCashItemCabinet@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLCashItemCabinet@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLCashItemCabinet@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLCashItemCabinet@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLCashItemCabinet@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLCashItemCabinet@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLItemMagicSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FP@KEEECGEK@SELECT?5?7bMagic?0?5?7dwKind?0?5?7wSkill@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLItemMagicSkill@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLItemMagicSkill@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLItemMagicSkill@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLItemMagicSkill@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLItemMagicSkill@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLMonAttr@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0NG@DCEOMPEH@SELECT?5?7wID?0?5?7bLevel?0?5?7wAP?0?5?7wLA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLMonAttr@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLMonAttr@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLMonAttr@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLMonAttr@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonAttr@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLPetTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EB@HKCHJAFD@SELECT?5wPetID?0?5szName?0?5timeUse?5F@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLPetTable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLPetTable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLPetTable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLPetTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLPetTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLPetTable@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLPetTable@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLOperatorChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CI@BMBMLPNP@SELECT?5dwOperatorID?5FROM?5TOPERAT@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLOperatorChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLOperatorChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLOperatorChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLOperatorChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLOperatorChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLSwitchChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0HA@FJGAKNJP@SELECT?5dwSwitchID?0?5wMapID?0?5wPosX@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLSwitchChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLSwitchChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLSwitchChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLSwitchChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSwitchChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLGateChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FA@FJFDDCLI@SELECT?5dwGateID?0?5dwSwitchID?0?5bTy@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLGateChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLGateChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLGateChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLGateChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGateChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLDestinationChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0KO@IECIEPCP@SELECT?5?7wDestID?0?5?7dwPrice?0?5?7bEna@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLDestinationChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLDestinationChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLDestinationChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLDestinationChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLDestinationChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLDestinationChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLDestinationChart@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLPortalChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FD@HIEHBJGJ@SELECT?5?7wPortalID?0?5?7bCountry?0?5?7w@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLPortalChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLPortalChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLPortalChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLPortalChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLPortalChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0IJ@PKABGAEA@SELECT?5dwID?0?5wMonID?0?5wPetID?0?5dwA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLRecallMon@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLRecallMon@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLRecallMon@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLRecallMon@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLRecallMon@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLRecallMon@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLRecallMon@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLSpawnPath@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EK@KDIJNJDN@SELECT?5wSpawnID?0?5fPosX?0?5fPosY?0?5f@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLSpawnPath@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLSpawnPath@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLSpawnPath@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLSpawnPath@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSpawnPath@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLItemUsed@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EE@EJEOCMN@SELECT?5wDelayGroupID?0?5dwTick?5FRO@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLItemUsed@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLItemUsed@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLItemUsed@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLItemUsed@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLItemUsed@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLItemUsed@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLItemUsed@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLLocalInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0HK@DCCBLJIH@SELECT?5wLocalID?0?5bCountry?0?5dwGui@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLLocalInfo@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLLocalInfo@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLLocalInfo@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLLocalInfo@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLLocalInfo@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLLocalInfo@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLLocalInfo@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLFindChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CN@IIPCJEOA@SELECT?5dwID?5FROM?5TCHARTABLE?5WHER@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLFindChar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLFindChar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLFindChar@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLFindChar@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLFindChar@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLFindChar@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLFindChar@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLItemSetChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0NC@OIABMFHG@SELECT?5?7wBaseID?0?5?7wSetID?0?5?7bLeve@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLItemSetChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLItemSetChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLItemSetChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLItemSetChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLItemSetChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLItemMagicChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0LA@BEIJPHEB@SELECT?5?7bMagic?0?5?7dwKind?0?5?7bRvTyp@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLItemMagicChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLItemMagicChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLItemMagicChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLItemMagicChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLItemMagicChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLItemGradeChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EA@GLGGHBOD@SELECT?5?7bLevel?0?5?7bGrade?0?5?7bProb?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLItemGradeChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLItemGradeChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLItemGradeChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLItemGradeChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLItemGradeChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLItemAttrChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0HC@LCHAMGIK@SELECT?5?7wID?0?5?7bKind?0?5?7bGrade?0?5?7w@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLItemAttrChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLItemAttrChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLItemAttrChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLItemAttrChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLItemAttrChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLCastleTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BAJ@NFJDJNKL@SELECT?5?7TCASTLETABLE?4wCastle?0?5?7T@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLCastleTable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLCastleTable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLCastleTable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLCastleTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLCastleTable@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLLocalTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BBG@HDMAMPFO@SELECT?5?7TLOCALTABLE?4wLocalID?0?5?7T@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLLocalTable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLLocalTable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLLocalTable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLLocalTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLLocalTable@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLBattleZoneChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0PO@DNEJDEGL@SELECT?5?7wID?0?5?7szName?0?5?7wMapID?0?5?7@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLBattleZoneChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLBattleZoneChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLBattleZoneChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLBattleZoneChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLBattleZoneChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLHotKey@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CO@FIDMGCBF@SELECT?5?$CK?5FROM?5THOTKEYTABLE?5WHERE@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLHotKey@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLHotKey@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLHotKey@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLHotKey@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLHotKey@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLHotKey@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLHotKey@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLPostTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0IN@HHKCALGA@SELECT?5TOP?57?5dwPostID?0?5bRead?0?5ti@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLPostTable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLPostTable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLPostTable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLPostTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLPostTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLPostTable@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLPostTable@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLMonItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BAE@PADFFDPL@SELECT?5?7bChartType?0?5?7wItemID?0?5?7w@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLMonItem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLMonItem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLMonItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLMonItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLMonItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonItem@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLMonItem@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLNpcItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DF@MJGBFCJJ@SELECT?5?7dwItemID?5?7FROM?5TNPCITEMC@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLNpcItem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLNpcItem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLNpcItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLNpcItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLNpcItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLNpcItem@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLNpcItem@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLNpc@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0IP@JKFLCDC@SELECT?5?7wID?0?5?7bType?0?5?7bCountryID@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLNpc@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLNpc@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLNpc@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLNpc@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLNpc@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLIndunChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0ED@KOMKBDMH@SELECT?5wMapID?0?5wInSpawn?0?5wOutSpa@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLIndunChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLIndunChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLIndunChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLIndunChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLIndunChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLSpawnPos@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EK@JEJOMDKE@SELECT?5?7wID?0?5?7wMapID?0?5?7fPosX?0?5?7f@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLSpawnPos@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLSpawnPos@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLSpawnPos@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLSpawnPos@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSpawnPos@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLCabinetTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FC@IPLGIGIC@SELECT?5bCabinetID?0?5bUse?5FROM?5TCA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLCabinetTable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLCabinetTable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLCabinetTable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLCabinetTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLCabinetTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLCabinetTable@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLCabinetTable@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLQuestTermTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FM@BKNNEPPJ@SELECT?5?7dwQuestID?0?5?7dwTermID?0?5?7b@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLQuestTermTable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLQuestTermTable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLQuestTermTable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLQuestTermTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLQuestTermTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLQuestTermTable@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLQuestTermTable@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLQuestTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0GC@BINMAAHP@SELECT?5?7dwQuestID?0?5?7dwTick?0?5?7bCo@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLQuestTable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLQuestTable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLQuestTable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLQuestTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLQuestTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLQuestTable@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLQuestTable@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLQuestTermChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0GO@DBOJCJCG@SELECT?5?7dwTermID?0?5?7bTermType?0?5?7b@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLQuestTermChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLQuestTermChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLQuestTermChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLQuestTermChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLQuestTermChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLQuestTermChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLQuestTermChart@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLQuestMagicItemChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BEN@MDOBMPLP@SELECT?5?5?5?5?5dwID?0?5?7wItemID?0?5?7bLev@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLQuestMagicItemChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLQuestMagicItemChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLQuestMagicItemChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLQuestMagicItemChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLQuestMagicItemChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLQuestMagicItemChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLQuestMagicItemChart@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLQuestRewardChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0HM@IEGGFAGO@SELECT?5?7dwRewardID?0?5?7bRewardType@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLQuestRewardChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLQuestRewardChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLQuestRewardChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLQuestRewardChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLQuestRewardChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLQuestRewardChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLQuestRewardChart@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLQuestConditionChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0HK@GFBLNELM@SELECT?5?7dwConditionID?0?5?7bConditi@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLQuestConditionChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLQuestConditionChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLQuestConditionChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLQuestConditionChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLQuestConditionChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLQuestConditionChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLQuestConditionChart@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLQuestChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0JO@GBGIFKGC@SELECT?5?7dwQuestID?0?5?7dwTriggerID?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLQuestChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLQuestChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLQuestChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLQuestChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLQuestChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLQuestChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLQuestChart@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLSkillData@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0GH@FAGKEIKL@SELECT?5bAction?0?5bType?0?5bAttr?0?5bE@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLSkillData@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLSkillData@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLSkillData@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLSkillData@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLSkillData@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSkillData@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLSkillData@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLSkillMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0JK@BBDDEPMN@SELECT?5?7wSkillID?0?5?7bLevel?0?5?7dwRe@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLSkillMaintain@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLSkillMaintain@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLSkillMaintain@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLSkillMaintain@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLSkillMaintain@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSkillMaintain@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLSkillMaintain@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLCharGuildInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DP@BKLFPKIO@SELECT?5?7dwFame?0?5?7dwFameColor?5?7FR@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLCharGuildInfo@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLCharGuildInfo@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLCharGuildInfo@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLCharGuildInfo@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLCharGuildInfo@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLCharGuildInfo@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLCharGuildInfo@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLCharTactics@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DP@NIPKINMH@SELECT?5?7dwGuildID?5?7FROM?5TGUILDTA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLCharTactics@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLCharTactics@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLCharTactics@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLCharTactics@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLCharTactics@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLCharTactics@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLCharTactics@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLCharGuild@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EO@CFDFCLBG@SELECT?5?7dwGuildID?0?5?7bDuty?0?5?7bPee@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLCharGuild@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLCharGuild@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLCharGuild@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLCharGuild@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLCharGuild@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLCharGuild@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLCharGuild@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLProtectedTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EM@IOGIBEMC@SELECT?5dwProtected?0?5szName?0?5bOpt@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLProtectedTable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLProtectedTable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLProtectedTable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLProtectedTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLProtectedTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLProtectedTable@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLProtectedTable@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLSoulmateTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EH@IFIEJLKD@SELECT?5dwTarget?0?5szNAME?0?5dwTime?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLSoulmateTable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLSoulmateTable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLSoulmateTable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLSoulmateTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLSoulmateTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSoulmateTable@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLSoulmateTable@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BKE@HHBPLBHL@SELECT?5?7szNAME?0?5?7bStartAct?0?5?7bRe@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLChar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLChar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLChar@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLChar@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLChar@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLChar@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLChar@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BLB@MEBPMIIO@SELECT?5?7dlID?0?5?7bStorageType?0?5?7dw@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLItem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLItem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLItem@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLItem@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLInven@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FD@PAHIPHFP@SELECT?5?7bInvenID?0?5?7wItemID?0?5?7dEn@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLInven@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLInven@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLInven@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLInven@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLInven@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLInven@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLInven@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EP@EJMPPMGN@SELECT?5?7wSkillID?0?5?7bLevel?0?5?7dwRe@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLSkill@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLSkill@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLSkill@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLSkill@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLSkill@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSkill@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLSkill@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLRaceChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EL@DHDECCIN@SELECT?5?7bRaceID?0?5?7wSTR?0?5?7wDEX?0?5?7@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLRaceChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLRaceChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLRaceChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLRaceChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLRaceChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLItemChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CGI@DMDJPGLM@SELECT?5?7wItemID?0?5?7bType?0?5?7bKind?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLItemChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLItemChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLItemChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLItemChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLItemChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLSkillChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CMF@FPIAJMLL@SELECT?5?7wID?0?5?7wPrevActiveID?0?5?7wP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLSkillChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLSkillChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLSkillChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLSkillChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSkillChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLClassChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EN@BLHOHNNG@SELECT?5?7bClassID?0?5?7wSTR?0?5?7wDEX?0?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLClassChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLClassChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLClassChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLClassChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLClassChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLLevelChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0LL@NCCFJPCG@SELECT?5?7bLevel?0?5?7dwEXP?0?5?7dwHP?0?5?7@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLLevelChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLLevelChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLLevelChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLLevelChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLLevelChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLMapMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FF@LPEMIGKP@SELECT?5?7wMonID?0?5?7bLeader?0?5?7bEsse@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLMapMon@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLMapMon@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLMapMon@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLMapMon@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLMapMon@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMapMon@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLMapMon@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLMonParty@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DC@BCPHBOJJ@SELECT?5wID?5FROM?5TMONSPAWNCHART?5W@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLMonParty@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLMonParty@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLMonParty@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLMonParty@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLMonParty@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonParty@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLMonParty@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLMonSpawn@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BJD@PGELOGEA@SELECT?5?7wID?0?5?7wGroup?0?5?7wMapID?0?5?7@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLMonSpawn@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLMonSpawn@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLMonSpawn@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLMonSpawn@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLMonSpawn@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonSpawn@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLMonSpawn@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLPet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0LL@HIACPJFN@SELECT?5?7?7?5?5wID?0?5?7?7?5?5bPetType?0?5?7?7@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLPet@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLPet@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLPet@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLPet@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLPet@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLMonster@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BGI@IJGBKMBA@SELECT?5?7wID?0?5?7bClass?0?5?7wKind?0?5?7b@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLMonster@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLMonster@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLMonster@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLMonster@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonster@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLAIChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FI@PIAMGPED@SELECT?5?7dwTriggerID?0?5?7dwCmdID?0?5?7@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLAIChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLAIChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLAIChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLAIChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLAIChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLAICommand@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CN@KGIIFNGI@SELECT?5?7dwCmdID?0?5?7bCmdType?5?7FROM@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLAICommand@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLAICommand@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLAICommand@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLAICommand@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLAICommand@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLAICondition@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EM@LNGEJGC@SELECT?5?7dwConditionID?0?5?7bConditi@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLAICondition@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLAICondition@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLAICondition@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLAICondition@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLAICondition@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLAICondition@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLAICondition@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLFormulaChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EE@HFIHKIDG@SELECT?5?7bID?0?5?7szName?0?5?7dwInit?0?5?7@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLFormulaChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLFormulaChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLFormulaChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLFormulaChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLFormulaChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLServerChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EJ@HEJIFFOB@SELECT?5?7bChannel?0?5?7wMapID?0?5?7wUni@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLServerChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLServerChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLServerChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLServerChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLServerChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLServerChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLServerChart@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLChannelList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CA@GPMJNEOA@SELECT?5?7bChannel?5?7FROM?5TCHANNEL?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLChannelList@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLChannelList@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLChannelList@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLChannelList@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLChannelList@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLChannelChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BMK@EFEAEJGO@SELECT?5?7TCHANNELCHART?4wMapID?0?5?7T@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLChannelChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLChannelChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLChannelChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLChannelChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLChannelChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLChannelChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLChannelChart@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC NEAR	; std::char_traits<char>::assign, COMDAT

; 331  : 		_Left = _Right;

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Right$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	8b 54 24 04	 mov	 edx, DWORD PTR __Left$[esp-4]
  0000a	88 0a		 mov	 BYTE PTR [edx], cl

; 332  : 		}

  0000c	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogty
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC NEAR		; std::char_traits<char>::length, COMDAT

; 352  : 		return (::strlen(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L155724:
  00007	8a 08		 mov	 cl, BYTE PTR [eax]
  00009	40		 inc	 eax
  0000a	84 c9		 test	 cl, cl
  0000c	75 f9		 jne	 SHORT $L155724
  0000e	2b c2		 sub	 eax, edx

; 353  : 		}

  00010	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
; Function compile flags: /Ogty
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::copy, COMDAT

; 358  : 		return ((_Elem *)::memcpy(_First1, _First2, _Count));

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR __First2$[esp]
  00009	57		 push	 edi
  0000a	8b 7c 24 0c	 mov	 edi, DWORD PTR __First1$[esp+4]
  0000e	8b c1		 mov	 eax, ecx
  00010	8b d7		 mov	 edx, edi
  00012	c1 e9 02	 shr	 ecx, 2
  00015	f3 a5		 rep movsd
  00017	8b c8		 mov	 ecx, eax
  00019	83 e1 03	 and	 ecx, 3
  0001c	f3 a4		 rep movsb
  0001e	5f		 pop	 edi
  0001f	8b c2		 mov	 eax, edx
  00021	5e		 pop	 esi

; 359  : 		}

  00022	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
EXTRN	_memmove:NEAR
; Function compile flags: /Ogty
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::move, COMDAT

; 370  : 		return ((_Elem *)::memmove(_First1, _First2, _Count));

  00000	e9 00 00 00 00	 jmp	 _memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1109 : 		return (_Mysize);

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]

; 1110 : 		}

  00003	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L155738
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  00009	c3		 ret	 0
$L155738:

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L155746
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  00009	c3		 ret	 0
$L155746:

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC NEAR	; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 1494 : 		{	// test if _Ptr points inside string

  00000	56		 push	 esi

; 1495 : 		if (_Ptr < _Myptr() || _Myptr() + _Mysize <= _Ptr)

  00001	8b 71 18	 mov	 esi, DWORD PTR [ecx+24]
  00004	83 fe 10	 cmp	 esi, 16			; 00000010H
  00007	57		 push	 edi
  00008	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0000b	72 04		 jb	 SHORT $L155758
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	eb 02		 jmp	 SHORT $L155759
$L155758:
  00011	8b d0		 mov	 edx, eax
$L155759:
  00013	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  00017	3b fa		 cmp	 edi, edx
  00019	72 17		 jb	 SHORT $L150517
  0001b	83 fe 10	 cmp	 esi, 16			; 00000010H
  0001e	72 02		 jb	 SHORT $L155766
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L155766:
  00022	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00025	03 c8		 add	 ecx, eax
  00027	3b cf		 cmp	 ecx, edi
  00029	76 07		 jbe	 SHORT $L150517
  0002b	5f		 pop	 edi

; 1497 : 		else
; 1498 : 			return (true);

  0002c	b0 01		 mov	 al, 1
  0002e	5e		 pop	 esi

; 1499 : 		}

  0002f	c2 04 00	 ret	 4
$L150517:
  00032	5f		 pop	 edi

; 1496 : 			return (false);	// don't ask

  00033	32 c0		 xor	 al, al
  00035	5e		 pop	 esi

; 1499 : 		}

  00036	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC NEAR			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC NEAR		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	83 c8 ff	 or	 eax, -1

; 159  : 		}

  00003	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC NEAR		; std::_Allocate<char>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 35   : 	}

  0000d	c3		 ret	 0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z PROC NEAR ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 34   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 35   : 		}

  00002	c2 04 00	 ret	 4
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogty
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	8b 44 24 04	 mov	 eax, DWORD PTR __Newsize$[esp-4]
  00008	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0000b	72 0a		 jb	 SHORT $L155793
  0000d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00010	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1476 : 		}

  00014	c2 04 00	 ret	 4

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

$L155793:
  00017	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 1476 : 		}

  0001c	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1114 : 		size_type _Num = _Mybase::_Alval.max_size();
; 1115 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH

; 1116 : 		}

  00005	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC NEAR	; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 138  : 		}

  0000d	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1510 : 		if (!_Built)

  00000	8a 44 24 04	 mov	 al, BYTE PTR __Built$[esp-4]
  00004	84 c0		 test	 al, al
  00006	53		 push	 ebx
  00007	55		 push	 ebp
  00008	8b 6c 24 10	 mov	 ebp, DWORD PTR __Newsize$[esp+4]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	74 2f		 je	 SHORT $L155826

; 1511 : 			;
; 1512 : 		else if (_BUF_SIZE <= _Myres)

  00010	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  00014	72 29		 jb	 SHORT $L155826

; 1513 : 			{	// copy any leftovers to small buffer and deallocate
; 1514 : 			_Elem *_Ptr = _Bx._Ptr;
; 1515 : 			if (0 < _Newsize)

  00016	85 ed		 test	 ebp, ebp
  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	57		 push	 edi
  0001c	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  0001f	76 14		 jbe	 SHORT $L155823
  00021	56		 push	 esi

; 1516 : 				_Traits::copy(_Bx._Buf, _Ptr, _Newsize);

  00022	8b cd		 mov	 ecx, ebp
  00024	8b d1		 mov	 edx, ecx
  00026	c1 e9 02	 shr	 ecx, 2
  00029	8b f0		 mov	 esi, eax
  0002b	f3 a5		 rep movsd
  0002d	8b ca		 mov	 ecx, edx
  0002f	83 e1 03	 and	 ecx, 3
  00032	f3 a4		 rep movsb
  00034	5e		 pop	 esi
$L155823:

; 1517 : 			_Mybase::_Alval.deallocate(_Ptr, _Myres + 1);

  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003b	83 c4 04	 add	 esp, 4
  0003e	5f		 pop	 edi
$L155826:

; 1518 : 			}
; 1519 : 		_Myres = _BUF_SIZE - 1;
; 1520 : 		_Eos(_Newsize);

  0003f	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00042	c7 43 18 0f 00
	00 00		 mov	 DWORD PTR [ebx+24], 15	; 0000000fH
  00049	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0004e	5d		 pop	 ebp
  0004f	5b		 pop	 ebx

; 1521 : 		}

  00050	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
EXTRN	?_Xran@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xran
; Function compile flags: /Ogty
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 792  : 		{	// erase elements [_Off, _Off + _Count)

  00000	55		 push	 ebp

; 793  : 		if (_Mysize < _Off)

  00001	8b 6c 24 08	 mov	 ebp, DWORD PTR __Off$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	39 6e 14	 cmp	 DWORD PTR [esi+20], ebp
  0000b	57		 push	 edi
  0000c	73 05		 jae	 SHORT $L149765

; 794  : 			_String_base::_Xran();	// _Off off end

  0000e	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L149765:

; 795  : 		if (_Mysize - _Off < _Count)

  00013	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00016	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  0001a	2b c5		 sub	 eax, ebp
  0001c	3b c7		 cmp	 eax, edi
  0001e	73 02		 jae	 SHORT $L149766

; 796  : 			_Count = _Mysize - _Off;	// trim _Count

  00020	8b f8		 mov	 edi, eax
$L149766:

; 797  : 		if (0 < _Count)

  00022	85 ff		 test	 edi, edi
  00024	76 47		 jbe	 SHORT $L155891

; 798  : 			{	// move elements down
; 799  : 			_Traits::move(_Myptr() + _Off, _Myptr() + _Off + _Count,
; 800  : 				_Mysize - _Off - _Count);

  00026	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00029	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0002c	53		 push	 ebx
  0002d	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00030	72 04		 jb	 SHORT $L155856
  00032	8b 13		 mov	 edx, DWORD PTR [ebx]
  00034	eb 02		 jmp	 SHORT $L155857
$L155856:
  00036	8b d3		 mov	 edx, ebx
$L155857:
  00038	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0003b	72 04		 jb	 SHORT $L155863
  0003d	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0003f	eb 02		 jmp	 SHORT $L155864
$L155863:
  00041	8b cb		 mov	 ecx, ebx
$L155864:
  00043	2b c7		 sub	 eax, edi

; 803  : 			}
; 804  : 		return (*this);

  00045	03 d5		 add	 edx, ebp
  00047	50		 push	 eax
  00048	03 d7		 add	 edx, edi
  0004a	52		 push	 edx
  0004b	03 cd		 add	 ecx, ebp
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 _memmove
  00053	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00056	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00059	2b c7		 sub	 eax, edi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00061	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00064	72 02		 jb	 SHORT $L155886

; 801  : 			size_type _Newsize = _Mysize - _Count;
; 802  : 			_Eos(_Newsize);

  00066	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$L155886:
  00068	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0
  0006c	5b		 pop	 ebx
$L155891:
  0006d	5f		 pop	 edi

; 803  : 			}
; 804  : 		return (*this);

  0006e	8b c6		 mov	 eax, esi
  00070	5e		 pop	 esi
  00071	5d		 pop	 ebp

; 805  : 		}

  00072	c2 08 00	 ret	 8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
EXTRN	__CxxThrowException@8:NEAR
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T156099 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
$T156101 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L155899
$T156102 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L155897
$T156100 DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:$T156101
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:$T156102
$T156093 DD	019930520H
	DD	04H
	DD	FLAT:$T156099
	DD	02H
	DD	FLAT:$T156100
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 1444 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1445 : 		size_type _Newres = _Newsize | _ALLOC_MASK;

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	8b d8		 mov	 ebx, eax
  00022	83 cb 0f	 or	 ebx, 15			; 0000000fH

; 1446 : 		if (max_size() < _Newres)

  00025	83 fb fe	 cmp	 ebx, -2			; fffffffeH
  00028	57		 push	 edi
  00029	8b f1		 mov	 esi, ecx
  0002b	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00031	76 04		 jbe	 SHORT $L150507

; 1447 : 			_Newres = _Newsize;	// undo roundup if too big

  00033	8b d8		 mov	 ebx, eax

; 1448 : 		else if (_Newres / 3 < _Myres / 2

  00035	eb 22		 jmp	 SHORT $L150509
$L150507:

; 1449 : 			&& _Myres <= max_size() - _Myres / 2)

  00037	8b 7e 18	 mov	 edi, DWORD PTR [esi+24]
  0003a	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  0003f	f7 e3		 mul	 ebx
  00041	8b cf		 mov	 ecx, edi
  00043	d1 e9		 shr	 ecx, 1
  00045	d1 ea		 shr	 edx, 1
  00047	3b d1		 cmp	 edx, ecx
  00049	73 0e		 jae	 SHORT $L150509
  0004b	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00050	2b c1		 sub	 eax, ecx
  00052	3b f8		 cmp	 edi, eax
  00054	77 03		 ja	 SHORT $L150509

; 1450 : 			_Newres = _Myres + _Myres / 2;	// grow exponentially if possible

  00056	8d 1c 39	 lea	 ebx, DWORD PTR [ecx+edi]
$L150509:

; 1451 : 		_Elem *_Ptr;
; 1452 : 
; 1453 : 		_TRY_BEGIN
; 1454 : 			_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00059	8d 4b 01	 lea	 ecx, DWORD PTR [ebx+1]
  0005c	51		 push	 ecx
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00064	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00069	8b d0		 mov	 edx, eax
  0006b	83 c4 04	 add	 esp, 4
  0006e	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
  00071	eb 29		 jmp	 SHORT $L150511
$L155897:

; 1455 : 		_CATCH_ALL
; 1456 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  00073	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00076	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax

; 1457 : 			_TRY_BEGIN
; 1458 : 				_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00079	40		 inc	 eax
  0007a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0007d	50		 push	 eax
  0007e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00082	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00087	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  0008a	83 c4 04	 add	 esp, 4

; 1462 : 			_CATCH_END
; 1463 : 		_CATCH_END

  0008d	b8 00 00 00 00	 mov	 eax, $L156094
  00092	c3		 ret	 0
$L156094:
  00093	8b 5d e8	 mov	 ebx, DWORD PTR __Newres$[ebp]
  00096	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  00099	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$L150511:

; 1464 : 
; 1465 : 		if (0 < _Oldlen)

  0009c	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  0009f	85 c9		 test	 ecx, ecx
  000a1	76 24		 jbe	 SHORT $L156017

; 1466 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

  000a3	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000a7	72 05		 jb	 SHORT $L156013
  000a9	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  000ac	eb 03		 jmp	 SHORT $L156014
$L156013:
  000ae	83 c6 04	 add	 esi, 4
$L156014:
  000b1	8b c1		 mov	 eax, ecx
  000b3	c1 e9 02	 shr	 ecx, 2
  000b6	8b fa		 mov	 edi, edx
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb
  000c1	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  000c4	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
$L156017:

; 1467 : 		_Tidy(true);

  000c7	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000cb	72 12		 jb	 SHORT $L156052
  000cd	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000d0	51		 push	 ecx
  000d1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000d6	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  000d9	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  000dc	83 c4 04	 add	 esp, 4
$L156052:

; 1468 : 		_Bx._Ptr = _Ptr;
; 1469 : 		_Myres = _Newres;
; 1470 : 		_Eos(_Oldlen);

  000df	83 fb 10	 cmp	 ebx, 16			; 00000010H
  000e2	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000e5	c6 00 00	 mov	 BYTE PTR [eax], 0
  000e8	89 10		 mov	 DWORD PTR [eax], edx
  000ea	89 5e 18	 mov	 DWORD PTR [esi+24], ebx
  000ed	89 4e 14	 mov	 DWORD PTR [esi+20], ecx
  000f0	72 02		 jb	 SHORT $L156087
  000f2	8b c2		 mov	 eax, edx
$L156087:

; 1471 : 		}

  000f4	5f		 pop	 edi
  000f5	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0
  000f9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000fc	5e		 pop	 esi
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00104	5b		 pop	 ebx
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c2 08 00	 ret	 8
$L155899:

; 1459 : 			_CATCH_ALL
; 1460 : 			_Tidy(true);	// failed again, discard storage and reraise

  0010b	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  0010e	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00112	72 0c		 jb	 SHORT $L155991
  00114	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00117	52		 push	 edx
  00118	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0011d	83 c4 04	 add	 esp, 4
$L155991:

; 1461 : 			_RERAISE;

  00120	6a 00		 push	 0
  00122	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00129	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00130	6a 00		 push	 0
  00132	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00136	e8 00 00 00 00	 call	 __CxxThrowException@8
$L156104:
$L156098:
  0013b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156093
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 456  : 		{	// destroy the string

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 457  : 		_Tidy(true);

  00003	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00007	72 0c		 jb	 SHORT $L156142
  00009	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	83 c4 04	 add	 esp, 4
$L156142:
  00015	33 c0		 xor	 eax, eax
  00017	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  0001e	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00021	88 46 04	 mov	 BYTE PTR [esi+4], al
  00024	5e		 pop	 esi

; 458  : 		}

  00025	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
EXTRN	?_Xlen@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xlen
; Function compile flags: /Ogty
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 1480 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	56		 push	 esi

; 1481 : 		if (max_size() < _Newsize)

  00002	8b 74 24 0c	 mov	 esi, DWORD PTR __Newsize$[esp+4]
  00006	83 fe fe	 cmp	 esi, -2			; fffffffeH
  00009	8b e9		 mov	 ebp, ecx
  0000b	76 05		 jbe	 SHORT $L149774

; 1482 : 			_String_base::_Xlen();	// result too long

  0000d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L149774:

; 1483 : 		if (_Myres < _Newsize)

  00012	8b 45 18	 mov	 eax, DWORD PTR [ebp+24]
  00015	3b c6		 cmp	 eax, esi
  00017	73 19		 jae	 SHORT $L149775

; 1484 : 			_Copy(_Newsize, _Mysize);	// reallocate to grow

  00019	8b 45 14	 mov	 eax, DWORD PTR [ebp+20]
  0001c	50		 push	 eax
  0001d	56		 push	 esi
  0001e	8b cd		 mov	 ecx, ebp
  00020	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  00025	33 c0		 xor	 eax, eax
  00027	3b c6		 cmp	 eax, esi
  00029	1b c0		 sbb	 eax, eax
  0002b	5e		 pop	 esi
  0002c	f7 d8		 neg	 eax
  0002e	5d		 pop	 ebp

; 1491 : 		}

  0002f	c2 08 00	 ret	 8
$L149775:

; 1485 : 		else if (_Trim && _Newsize < _BUF_SIZE)

  00032	8a 4c 24 10	 mov	 cl, BYTE PTR __Trim$[esp+4]
  00036	84 c9		 test	 cl, cl
  00038	74 5c		 je	 SHORT $L149777
  0003a	83 fe 10	 cmp	 esi, 16			; 00000010H
  0003d	73 57		 jae	 SHORT $L149777
  0003f	53		 push	 ebx

; 1486 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1487 : 				_Newsize < _Mysize ? _Newsize : _Mysize);

  00040	8b 5d 14	 mov	 ebx, DWORD PTR [ebp+20]
  00043	3b f3		 cmp	 esi, ebx
  00045	73 02		 jae	 SHORT $L156163
  00047	8b de		 mov	 ebx, esi
$L156163:
  00049	83 f8 10	 cmp	 eax, 16			; 00000010H
  0004c	72 2b		 jb	 SHORT $L156223
  0004e	85 db		 test	 ebx, ebx
  00050	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00053	57		 push	 edi
  00054	8d 7d 04	 lea	 edi, DWORD PTR [ebp+4]
  00057	76 16		 jbe	 SHORT $L156222
  00059	8b cb		 mov	 ecx, ebx
  0005b	8b d1		 mov	 edx, ecx
  0005d	c1 e9 02	 shr	 ecx, 2
  00060	8b f0		 mov	 esi, eax
  00062	f3 a5		 rep movsd
  00064	8b ca		 mov	 ecx, edx
  00066	83 e1 03	 and	 ecx, 3
  00069	f3 a4		 rep movsb
  0006b	8b 74 24 14	 mov	 esi, DWORD PTR __Newsize$[esp+12]
$L156222:
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00075	83 c4 04	 add	 esp, 4
  00078	5f		 pop	 edi
$L156223:
  00079	89 5d 14	 mov	 DWORD PTR [ebp+20], ebx

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  0007c	33 c0		 xor	 eax, eax
  0007e	c7 45 18 0f 00
	00 00		 mov	 DWORD PTR [ebp+24], 15	; 0000000fH
  00085	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0008a	3b c6		 cmp	 eax, esi
  0008c	5b		 pop	 ebx
  0008d	1b c0		 sbb	 eax, eax
  0008f	5e		 pop	 esi
  00090	f7 d8		 neg	 eax
  00092	5d		 pop	 ebp

; 1491 : 		}

  00093	c2 08 00	 ret	 8
$L149777:

; 1488 : 		else if (_Newsize == 0)

  00096	85 f6		 test	 esi, esi
  00098	75 23		 jne	 SHORT $L156254

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

  0009a	83 f8 10	 cmp	 eax, 16			; 00000010H
  0009d	89 75 14	 mov	 DWORD PTR [ebp+20], esi
  000a0	72 14		 jb	 SHORT $L156252
  000a2	8b 6d 04	 mov	 ebp, DWORD PTR [ebp+4]

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000a5	33 c0		 xor	 eax, eax
  000a7	3b c6		 cmp	 eax, esi
  000a9	1b c0		 sbb	 eax, eax
  000ab	5e		 pop	 esi
  000ac	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
  000b0	f7 d8		 neg	 eax
  000b2	5d		 pop	 ebp

; 1491 : 		}

  000b3	c2 08 00	 ret	 8

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

$L156252:
  000b6	83 c5 04	 add	 ebp, 4
  000b9	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
$L156254:

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000bd	33 c0		 xor	 eax, eax
  000bf	3b c6		 cmp	 eax, esi
  000c1	1b c0		 sbb	 eax, eax
  000c3	5e		 pop	 esi
  000c4	f7 d8		 neg	 eax
  000c6	5d		 pop	 ebp

; 1491 : 		}

  000c7	c2 08 00	 ret	 8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 590  : 		{	// assign _Right [_Roff, _Roff + _Count)

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi

; 591  : 		if (_Right.size() < _Roff)

  00003	8b 74 24 14	 mov	 esi, DWORD PTR __Roff$[esp+8]
  00007	57		 push	 edi
  00008	8b 7c 24 14	 mov	 edi, DWORD PTR __Right$[esp+12]
  0000c	39 77 14	 cmp	 DWORD PTR [edi+20], esi
  0000f	8b d9		 mov	 ebx, ecx
  00011	73 05		 jae	 SHORT $L148837

; 592  : 			_String_base::_Xran();	// _Roff off end

  00013	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L148837:

; 593  : 		size_type _Num = _Right.size() - _Roff;

  00018	8b 6f 14	 mov	 ebp, DWORD PTR [edi+20]

; 594  : 		if (_Count < _Num)

  0001b	8b 44 24 1c	 mov	 eax, DWORD PTR __Count$[esp+12]
  0001f	2b ee		 sub	 ebp, esi
  00021	3b c5		 cmp	 eax, ebp
  00023	73 02		 jae	 SHORT $L148839

; 595  : 			_Num = _Count;	// trim _Num to size

  00025	8b e8		 mov	 ebp, eax
$L148839:

; 596  : 
; 597  : 		if (this == &_Right)

  00027	3b df		 cmp	 ebx, edi
  00029	75 1f		 jne	 SHORT $L148840

; 598  : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

  0002b	6a ff		 push	 -1
  0002d	03 ee		 add	 ebp, esi
  0002f	55		 push	 ebp
  00030	8b cb		 mov	 ecx, ebx
  00032	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00037	56		 push	 esi
  00038	6a 00		 push	 0
  0003a	8b cb		 mov	 ecx, ebx
  0003c	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00044	8b c3		 mov	 eax, ebx
  00046	5b		 pop	 ebx

; 605  : 		}

  00047	c2 0c 00	 ret	 12			; 0000000cH
$L148840:

; 599  : 		else if (_Grow(_Num))

  0004a	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  0004d	76 07		 jbe	 SHORT $L156365
  0004f	8b cb		 mov	 ecx, ebx
  00051	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L156365:
  00056	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00059	3b c5		 cmp	 eax, ebp
  0005b	73 21		 jae	 SHORT $L156366
  0005d	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00060	50		 push	 eax
  00061	55		 push	 ebp
  00062	8b cb		 mov	 ecx, ebx
  00064	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00069	85 ed		 test	 ebp, ebp
$L156453:
  0006b	76 6d		 jbe	 SHORT $L156452

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

  0006d	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00070	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00075	3b c8		 cmp	 ecx, eax
  00077	72 2f		 jb	 SHORT $L156418
  00079	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0007c	eb 2d		 jmp	 SHORT $L156419

; 599  : 		else if (_Grow(_Num))

$L156366:
  0007e	85 ed		 test	 ebp, ebp
  00080	75 e9		 jne	 SHORT $L156453
  00082	83 f8 10	 cmp	 eax, 16			; 00000010H
  00085	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00088	72 0f		 jb	 SHORT $L156409
  0008a	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	c6 00 00	 mov	 BYTE PTR [eax], 0
  00092	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00093	8b c3		 mov	 eax, ebx
  00095	5b		 pop	 ebx

; 605  : 		}

  00096	c2 0c 00	 ret	 12			; 0000000cH

; 599  : 		else if (_Grow(_Num))

$L156409:
  00099	5f		 pop	 edi
  0009a	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0009d	5e		 pop	 esi
  0009e	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a1	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000a2	8b c3		 mov	 eax, ebx
  000a4	5b		 pop	 ebx

; 605  : 		}

  000a5	c2 0c 00	 ret	 12			; 0000000cH

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

$L156418:
  000a8	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
$L156419:
  000ab	39 43 18	 cmp	 DWORD PTR [ebx+24], eax
  000ae	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000b1	72 04		 jb	 SHORT $L156425
  000b3	8b 38		 mov	 edi, DWORD PTR [eax]
  000b5	eb 02		 jmp	 SHORT $L156426
$L156425:
  000b7	8b f8		 mov	 edi, eax
$L156426:
  000b9	03 f2		 add	 esi, edx
  000bb	8b cd		 mov	 ecx, ebp
  000bd	8b d1		 mov	 edx, ecx
  000bf	c1 e9 02	 shr	 ecx, 2
  000c2	f3 a5		 rep movsd
  000c4	8b ca		 mov	 ecx, edx
  000c6	83 e1 03	 and	 ecx, 3
  000c9	f3 a4		 rep movsb

; 602  : 			_Eos(_Num);

  000cb	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000cf	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000d2	72 02		 jb	 SHORT $L156449
  000d4	8b 00		 mov	 eax, DWORD PTR [eax]
$L156449:
  000d6	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L156452:
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000dd	8b c3		 mov	 eax, ebx
  000df	5b		 pop	 ebx

; 605  : 		}

  000e0	c2 0c 00	 ret	 12			; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Num$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 608  : 		{	// assign [_Ptr, _Ptr + _Num)

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx

; 609  : 		if (_Inside(_Ptr))

  00003	8b 53 18	 mov	 edx, DWORD PTR [ebx+24]
  00006	83 fa 10	 cmp	 edx, 16			; 00000010H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	72 05		 jb	 SHORT $L156475
  0000d	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00010	eb 03		 jmp	 SHORT $L156476
$L156475:
  00012	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$L156476:
  00015	8b 74 24 10	 mov	 esi, DWORD PTR __Ptr$[esp+8]
  00019	3b f0		 cmp	 esi, eax
  0001b	72 34		 jb	 SHORT $L149761
  0001d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00020	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00023	72 04		 jb	 SHORT $L156479
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	eb 02		 jmp	 SHORT $L156480
$L156479:
  00029	8b c8		 mov	 ecx, eax
$L156480:
  0002b	8b 7b 14	 mov	 edi, DWORD PTR [ebx+20]
  0002e	03 f9		 add	 edi, ecx
  00030	3b fe		 cmp	 edi, esi
  00032	76 1d		 jbe	 SHORT $L149761

; 610  : 			return (assign(*this, _Ptr - _Myptr(), _Num));	// substring

  00034	83 fa 10	 cmp	 edx, 16			; 00000010H
  00037	72 02		 jb	 SHORT $L156492
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$L156492:
  0003b	8b 4c 24 14	 mov	 ecx, DWORD PTR __Num$[esp+8]
  0003f	51		 push	 ecx
  00040	2b f0		 sub	 esi, eax
  00042	56		 push	 esi
  00043	53		 push	 ebx
  00044	8b cb		 mov	 ecx, ebx
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx

; 618  : 		}

  0004e	c2 08 00	 ret	 8
$L149761:
  00051	55		 push	 ebp

; 611  : 
; 612  : 		if (_Grow(_Num))

  00052	8b 6c 24 18	 mov	 ebp, DWORD PTR __Num$[esp+12]
  00056	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  00059	76 07		 jbe	 SHORT $L156590
  0005b	8b cb		 mov	 ecx, ebx
  0005d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L156590:
  00062	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00065	3b c5		 cmp	 eax, ebp
  00067	73 1b		 jae	 SHORT $L156591
  00069	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  0006c	52		 push	 edx
  0006d	55		 push	 ebp
  0006e	8b cb		 mov	 ecx, ebx
  00070	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00075	85 ed		 test	 ebp, ebp
$L156671:
  00077	76 68		 jbe	 SHORT $L156668

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

  00079	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  0007d	72 2f		 jb	 SHORT $L156643
  0007f	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
  00082	eb 2d		 jmp	 SHORT $L156644

; 611  : 
; 612  : 		if (_Grow(_Num))

$L156591:
  00084	85 ed		 test	 ebp, ebp
  00086	75 ef		 jne	 SHORT $L156671
  00088	83 f8 10	 cmp	 eax, 16			; 00000010H
  0008b	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  0008e	72 0f		 jb	 SHORT $L156634
  00090	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00093	5d		 pop	 ebp
  00094	5f		 pop	 edi
  00095	c6 00 00	 mov	 BYTE PTR [eax], 0
  00098	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  00099	8b c3		 mov	 eax, ebx
  0009b	5b		 pop	 ebx

; 618  : 		}

  0009c	c2 08 00	 ret	 8

; 611  : 
; 612  : 		if (_Grow(_Num))

$L156634:
  0009f	5d		 pop	 ebp
  000a0	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000a3	5f		 pop	 edi
  000a4	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a7	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000a8	8b c3		 mov	 eax, ebx
  000aa	5b		 pop	 ebx

; 618  : 		}

  000ab	c2 08 00	 ret	 8

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

$L156643:
  000ae	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
$L156644:
  000b1	8b cd		 mov	 ecx, ebp
  000b3	8b c1		 mov	 eax, ecx
  000b5	c1 e9 02	 shr	 ecx, 2
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb

; 615  : 			_Eos(_Num);

  000c1	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000c5	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000c8	72 10		 jb	 SHORT $L156666
  000ca	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000cd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
  000d1	5d		 pop	 ebp
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000d4	8b c3		 mov	 eax, ebx
  000d6	5b		 pop	 ebx

; 618  : 		}

  000d7	c2 08 00	 ret	 8

; 615  : 			_Eos(_Num);

$L156666:
  000da	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000dd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L156668:
  000e1	5d		 pop	 ebp
  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000e4	8b c3		 mov	 eax, ebx
  000e6	5b		 pop	 ebx

; 618  : 		}

  000e7	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 323  : 		{	// construct by copying _Right

  00000	56		 push	 esi

; 324  : 		_Tidy();

  00001	33 c0		 xor	 eax, eax
  00003	8b f1		 mov	 esi, ecx

; 325  : 		assign(_Right, 0, npos);

  00005	6a ff		 push	 -1
  00007	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	50		 push	 eax
  00012	88 46 04	 mov	 BYTE PTR [esi+4], al
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Right$[esp+8]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 326  : 		}

  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 621  : 		{	// assign [_Ptr, <null>)

  00000	56		 push	 esi

; 622  : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __Ptr$[esp]
  00005	8b c6		 mov	 eax, esi
  00007	57		 push	 edi
  00008	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000b	eb 03 8d 49 00	 npad	 5
$L156744:
  00010	8a 10		 mov	 dl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 d2		 test	 dl, dl
  00015	75 f9		 jne	 SHORT $L156744
  00017	2b c7		 sub	 eax, edi
  00019	50		 push	 eax
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi

; 623  : 		}

  00022	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 361  : 		_Tidy();
; 362  : 		assign(_Ptr);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Ptr$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b c2		 mov	 eax, edx
  00009	57		 push	 edi
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00018	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  0001c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0001f	90		 npad	 1
$L156819:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L156819
  00027	2b c7		 sub	 eax, edi
  00029	50		 push	 eax
  0002a	52		 push	 edx
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00032	5f		 pop	 edi

; 363  : 		}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0CTBLChannelList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLChannelList::CTBLChannelList
PUBLIC	?GetNumCol@CTBLChannelList@@UAEHXZ		; CTBLChannelList::GetNumCol
PUBLIC	?BindColumns@CTBLChannelList@@UAEFXZ		; CTBLChannelList::BindColumns
PUBLIC	??_7CTBLChannelList@@6B@			; CTBLChannelList::`vftable'
PUBLIC	??_GCTBLChannelList@@UAEPAXI@Z			; CTBLChannelList::`scalar deleting destructor'
PUBLIC	??_C@_0CA@GPMJNEOA@SELECT?5?7bChannel?5?7FROM?5TCHANNEL?$AA@ ; `string'
EXTRN	?GetNumParam@CSqlBase@@UAEHXZ:NEAR		; CSqlBase::GetNumParam
EXTRN	??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z:NEAR ; CSqlQuery::CSqlQuery
EXTRN	?AllocStatement@CSqlQuery@@UAEHXZ:NEAR		; CSqlQuery::AllocStatement
EXTRN	?BindParameters@CSqlQuery@@UAEFH@Z:NEAR		; CSqlQuery::BindParameters
EXTRN	??_ECTBLChannelList@@UAEPAXI@Z:NEAR		; CTBLChannelList::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T156998 DD	0ffffffffH
	DD	FLAT:$L156824
$T156995 DD	019930520H
	DD	01H
	DD	FLAT:$T156998
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CA@GPMJNEOA@SELECT?5?7bChannel?5?7FROM?5TCHANNEL?$AA@
CONST	SEGMENT
??_C@_0CA@GPMJNEOA@SELECT?5?7bChannel?5?7FROM?5TCHANNEL?$AA@ DB 'SELECT ', 09H
	DB	'bChannel ', 09H, 'FROM TCHANNEL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLChannelList@@6B@
CONST	SEGMENT
??_7CTBLChannelList@@6B@ DD FLAT:??_ECTBLChannelList@@UAEPAXI@Z ; CTBLChannelList::`vftable'
	DD	FLAT:?GetNumCol@CTBLChannelList@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLChannelList@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLChannelList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T156823 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLChannelList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLChannelList::CTBLChannelList, COMDAT
; _this$ = ecx

; 10   : 	FROM TCHANNEL"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLChannelList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CA@GPMJNEOA@SELECT?5?7bChannel?5?7FROM?5TCHANNEL?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T156823[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLChannelList@@6B@
  0005e	72 0d		 jb	 SHORT $L156996
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L156996:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156824:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLChannelList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156995
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLChannelList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLChannelList::CTBLChannelList
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLChannelList@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLChannelList@@UAEHXZ PROC NEAR		; CTBLChannelList::GetNumCol, COMDAT
; _this$ = ecx

; 12   : BEGIN_COLUMN(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumCol@CTBLChannelList@@UAEHXZ ENDP			; CTBLChannelList::GetNumCol
_TEXT	ENDS
EXTRN	?BindCol@CSqlBase@@QAEFFPAE@Z:NEAR		; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindColumns@CTBLChannelList@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLChannelList@@UAEFXZ PROC NEAR		; CTBLChannelList::BindColumns, COMDAT
; _this$ = ecx

; 13   : 	COLUMN_ENTRY(m_bChannel)

  00000	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00006	50		 push	 eax
  00007	6a 01		 push	 1
  00009	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol

; 14   : END_COL()

  0000e	c3		 ret	 0
?BindColumns@CTBLChannelList@@UAEFXZ ENDP		; CTBLChannelList::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLChannelList@@UAE@XZ			; CTBLChannelList::~CTBLChannelList
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLChannelList@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLChannelList@@UAEPAXI@Z PROC NEAR		; CTBLChannelList::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLChannelList@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L157010
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L157010:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLChannelList@@UAEPAXI@Z ENDP			; CTBLChannelList::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CSqlQuery@@UAE@XZ:NEAR			; CSqlQuery::~CSqlQuery
; Function compile flags: /Ogty
;	COMDAT ??1CTBLChannelList@@UAE@XZ
_TEXT	SEGMENT
??1CTBLChannelList@@UAE@XZ PROC NEAR			; CTBLChannelList::~CTBLChannelList, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLChannelList@@UAE@XZ ENDP				; CTBLChannelList::~CTBLChannelList
_TEXT	ENDS
PUBLIC	??0CTBLChannelChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLChannelChart::CTBLChannelChart
PUBLIC	?GetNumCol@CTBLChannelChart@@UAEHXZ		; CTBLChannelChart::GetNumCol
PUBLIC	?BindColumns@CTBLChannelChart@@UAEFXZ		; CTBLChannelChart::BindColumns
PUBLIC	?GetNumParam@CTBLChannelChart@@UAEHXZ		; CTBLChannelChart::GetNumParam
PUBLIC	?BindParameters@CTBLChannelChart@@UAEFH@Z	; CTBLChannelChart::BindParameters
PUBLIC	??_7CTBLChannelChart@@6B@			; CTBLChannelChart::`vftable'
PUBLIC	??_GCTBLChannelChart@@UAEPAXI@Z			; CTBLChannelChart::`scalar deleting destructor'
PUBLIC	??_C@_0BMK@EFEAEJGO@SELECT?5?7TCHANNELCHART?4wMapID?0?5?7T@ ; `string'
EXTRN	??_ECTBLChannelChart@@UAEPAXI@Z:NEAR		; CTBLChannelChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T157193 DD	0ffffffffH
	DD	FLAT:$L157019
$T157190 DD	019930520H
	DD	01H
	DD	FLAT:$T157193
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BMK@EFEAEJGO@SELECT?5?7TCHANNELCHART?4wMapID?0?5?7T@
CONST	SEGMENT
??_C@_0BMK@EFEAEJGO@SELECT?5?7TCHANNELCHART?4wMapID?0?5?7T@ DB 'SELECT ', 09H
	DB	'TCHANNELCHART.wMapID, ', 09H, 'TCHANNELCHART.bLogChannel, ', 09H
	DB	'TCHANNELCHART.bPhyChannel ', 09H, 'FROM TCHANNELCHART ', 09H, 'I'
	DB	'NNER JOIN TSVRCHART ON ', 09H, 'TCHANNELCHART.wMapID = TSVRCH'
	DB	'ART.wMapID AND ', 09H, 'TCHANNELCHART.bGroupID = TSVRCHART.bG'
	DB	'roup AND ', 09H, 'TCHANNELCHART.wUnitID = TSVRCHART.wUnitID A'
	DB	'ND ', 09H, 'TCHANNELCHART.bPhyChannel = TSVRCHART.bChannel ', 09H
	DB	'WHERE TSVRCHART.bServerID = ? ', 09H, 'GROUP BY ', 09H, 'TCHA'
	DB	'NNELCHART.wMapID, ', 09H, 'TCHANNELCHART.bLogChannel, ', 09H, 'T'
	DB	'CHANNELCHART.bPhyChannel, ', 09H, 'TSVRCHART.bServerID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLChannelChart@@6B@
CONST	SEGMENT
??_7CTBLChannelChart@@6B@ DD FLAT:??_ECTBLChannelChart@@UAEPAXI@Z ; CTBLChannelChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLChannelChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLChannelChart@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLChannelChart@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLChannelChart@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLChannelChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T157018 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLChannelChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLChannelChart::CTBLChannelChart, COMDAT
; _this$ = ecx

; 41   : 	TSVRCHART.bServerID"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLChannelChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BMK@EFEAEJGO@SELECT?5?7TCHANNELCHART?4wMapID?0?5?7T@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T157018[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLChannelChart@@6B@
  0005e	72 0d		 jb	 SHORT $L157191
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L157191:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L157019:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLChannelChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T157190
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLChannelChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLChannelChart::CTBLChannelChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLChannelChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLChannelChart@@UAEHXZ PROC NEAR		; CTBLChannelChart::GetNumCol, COMDAT
; _this$ = ecx

; 43   : BEGIN_COLUMN(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumCol@CTBLChannelChart@@UAEHXZ ENDP		; CTBLChannelChart::GetNumCol
_TEXT	ENDS
EXTRN	?BindCol@CSqlBase@@QAEFFPAG@Z:NEAR		; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindColumns@CTBLChannelChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLChannelChart@@UAEFXZ PROC NEAR		; CTBLChannelChart::BindColumns, COMDAT
; _this$ = ecx

; 43   : BEGIN_COLUMN(3)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 44   : 	COLUMN_ENTRY(m_wMapID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L128669
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 2b		 jne	 SHORT $L128665
$L128669:

; 45   : 	COLUMN_ENTRY(m_bLogChannel)

  0001c	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L128670
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 10		 jne	 SHORT $L128665
$L128670:

; 46   : 	COLUMN_ENTRY(m_bPhyChannel)

  00037	8d 96 2f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3119]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L128665:
  00047	5e		 pop	 esi

; 47   : END_COL()

  00048	c3		 ret	 0
?BindColumns@CTBLChannelChart@@UAEFXZ ENDP		; CTBLChannelChart::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLChannelChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLChannelChart@@UAEHXZ PROC NEAR		; CTBLChannelChart::GetNumParam, COMDAT
; _this$ = ecx

; 49   : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLChannelChart@@UAEHXZ ENDP		; CTBLChannelChart::GetNumParam
_TEXT	ENDS
EXTRN	?BindParam@CSqlBase@@QAEFFFPAE@Z:NEAR		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParameters@CTBLChannelChart@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLChannelChart@@UAEFH@Z PROC NEAR	; CTBLChannelChart::BindParameters, COMDAT
; _this$ = ecx

; 50   : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bServerID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L128676
  00010	8d 81 30 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3120]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L128676:

; 51   : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLChannelChart@@UAEFH@Z ENDP		; CTBLChannelChart::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLChannelChart@@UAE@XZ			; CTBLChannelChart::~CTBLChannelChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLChannelChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLChannelChart@@UAEPAXI@Z PROC NEAR		; CTBLChannelChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLChannelChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L157211
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L157211:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLChannelChart@@UAEPAXI@Z ENDP			; CTBLChannelChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLChannelChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLChannelChart@@UAE@XZ PROC NEAR			; CTBLChannelChart::~CTBLChannelChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLChannelChart@@UAE@XZ ENDP			; CTBLChannelChart::~CTBLChannelChart
_TEXT	ENDS
PUBLIC	??0CTBLServerChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLServerChart::CTBLServerChart
PUBLIC	?GetNumCol@CTBLServerChart@@UAEHXZ		; CTBLServerChart::GetNumCol
PUBLIC	?BindColumns@CTBLServerChart@@UAEFXZ		; CTBLServerChart::BindColumns
PUBLIC	?GetNumParam@CTBLServerChart@@UAEHXZ		; CTBLServerChart::GetNumParam
PUBLIC	?BindParameters@CTBLServerChart@@UAEFH@Z	; CTBLServerChart::BindParameters
PUBLIC	??_7CTBLServerChart@@6B@			; CTBLServerChart::`vftable'
PUBLIC	??_GCTBLServerChart@@UAEPAXI@Z			; CTBLServerChart::`scalar deleting destructor'
PUBLIC	??_C@_0EJ@HEJIFFOB@SELECT?5?7bChannel?0?5?7wMapID?0?5?7wUni@ ; `string'
EXTRN	??_ECTBLServerChart@@UAEPAXI@Z:NEAR		; CTBLServerChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T157394 DD	0ffffffffH
	DD	FLAT:$L157220
$T157391 DD	019930520H
	DD	01H
	DD	FLAT:$T157394
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EJ@HEJIFFOB@SELECT?5?7bChannel?0?5?7wMapID?0?5?7wUni@
CONST	SEGMENT
??_C@_0EJ@HEJIFFOB@SELECT?5?7bChannel?0?5?7wMapID?0?5?7wUni@ DB 'SELECT ', 09H
	DB	'bChannel, ', 09H, 'wMapID, ', 09H, 'wUnitID ', 09H, 'FROM TSV'
	DB	'RCHART ', 09H, 'WHERE bServerID = ?', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLServerChart@@6B@
CONST	SEGMENT
??_7CTBLServerChart@@6B@ DD FLAT:??_ECTBLServerChart@@UAEPAXI@Z ; CTBLServerChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLServerChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLServerChart@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLServerChart@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLServerChart@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLServerChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T157219 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLServerChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLServerChart::CTBLServerChart, COMDAT
; _this$ = ecx

; 68   : 	WHERE bServerID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLServerChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EJ@HEJIFFOB@SELECT?5?7bChannel?0?5?7wMapID?0?5?7wUni@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T157219[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLServerChart@@6B@
  0005e	72 0d		 jb	 SHORT $L157392
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L157392:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L157220:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLServerChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T157391
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLServerChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLServerChart::CTBLServerChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLServerChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLServerChart@@UAEHXZ PROC NEAR		; CTBLServerChart::GetNumCol, COMDAT
; _this$ = ecx

; 70   : BEGIN_COLUMN(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumCol@CTBLServerChart@@UAEHXZ ENDP			; CTBLServerChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLServerChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLServerChart@@UAEFXZ PROC NEAR		; CTBLServerChart::BindColumns, COMDAT
; _this$ = ecx

; 70   : BEGIN_COLUMN(3)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 71   : 	COLUMN_ENTRY(m_bChannel)

  00003	8d 86 2d 0c 00
	00		 lea	 eax, DWORD PTR [esi+3117]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L128728
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 2b		 jne	 SHORT $L128724
$L128728:

; 72   : 	COLUMN_ENTRY(m_wMapID)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L128729
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 10		 jne	 SHORT $L128724
$L128729:

; 73   : 	COLUMN_ENTRY(m_wUnitID)

  00037	8d 96 2e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3118]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
$L128724:
  00047	5e		 pop	 esi

; 74   : END_COL()

  00048	c3		 ret	 0
?BindColumns@CTBLServerChart@@UAEFXZ ENDP		; CTBLServerChart::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLServerChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLServerChart@@UAEHXZ PROC NEAR		; CTBLServerChart::GetNumParam, COMDAT
; _this$ = ecx

; 76   : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLServerChart@@UAEHXZ ENDP		; CTBLServerChart::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLServerChart@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLServerChart@@UAEFH@Z PROC NEAR	; CTBLServerChart::BindParameters, COMDAT
; _this$ = ecx

; 77   : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bServerID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L128735
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L128735:

; 78   : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLServerChart@@UAEFH@Z ENDP		; CTBLServerChart::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLServerChart@@UAE@XZ			; CTBLServerChart::~CTBLServerChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLServerChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLServerChart@@UAEPAXI@Z PROC NEAR		; CTBLServerChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLServerChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L157412
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L157412:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLServerChart@@UAEPAXI@Z ENDP			; CTBLServerChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLServerChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLServerChart@@UAE@XZ PROC NEAR			; CTBLServerChart::~CTBLServerChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLServerChart@@UAE@XZ ENDP				; CTBLServerChart::~CTBLServerChart
_TEXT	ENDS
PUBLIC	??0CTBLFormulaChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLFormulaChart::CTBLFormulaChart
PUBLIC	?GetNumCol@CTBLFormulaChart@@UAEHXZ		; CTBLFormulaChart::GetNumCol
PUBLIC	?BindColumns@CTBLFormulaChart@@UAEFXZ		; CTBLFormulaChart::BindColumns
PUBLIC	??_7CTBLFormulaChart@@6B@			; CTBLFormulaChart::`vftable'
PUBLIC	??_GCTBLFormulaChart@@UAEPAXI@Z			; CTBLFormulaChart::`scalar deleting destructor'
PUBLIC	??_C@_0EE@HFIHKIDG@SELECT?5?7bID?0?5?7szName?0?5?7dwInit?0?5?7@ ; `string'
EXTRN	??_ECTBLFormulaChart@@UAEPAXI@Z:NEAR		; CTBLFormulaChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T157595 DD	0ffffffffH
	DD	FLAT:$L157421
$T157592 DD	019930520H
	DD	01H
	DD	FLAT:$T157595
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EE@HFIHKIDG@SELECT?5?7bID?0?5?7szName?0?5?7dwInit?0?5?7@
CONST	SEGMENT
??_C@_0EE@HFIHKIDG@SELECT?5?7bID?0?5?7szName?0?5?7dwInit?0?5?7@ DB 'SELEC'
	DB	'T ', 09H, 'bID, ', 09H, 'szName, ', 09H, 'dwInit, ', 09H, 'fR'
	DB	'ateX, ', 09H, 'fRateY ', 09H, 'FROM TFORMULACHART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLFormulaChart@@6B@
CONST	SEGMENT
??_7CTBLFormulaChart@@6B@ DD FLAT:??_ECTBLFormulaChart@@UAEPAXI@Z ; CTBLFormulaChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLFormulaChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLFormulaChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLFormulaChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T157420 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLFormulaChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLFormulaChart::CTBLFormulaChart, COMDAT
; _this$ = ecx

; 96   : 	FROM TFORMULACHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLFormulaChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@HFIHKIDG@SELECT?5?7bID?0?5?7szName?0?5?7dwInit?0?5?7@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T157420[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLFormulaChart@@6B@
  0005e	72 0d		 jb	 SHORT $L157593
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L157593:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L157421:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLFormulaChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T157592
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLFormulaChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLFormulaChart::CTBLFormulaChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLFormulaChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLFormulaChart@@UAEHXZ PROC NEAR		; CTBLFormulaChart::GetNumCol, COMDAT
; _this$ = ecx

; 98   : BEGIN_COLUMN(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumCol@CTBLFormulaChart@@UAEHXZ ENDP		; CTBLFormulaChart::GetNumCol
_TEXT	ENDS
EXTRN	?BindCol@CSqlBase@@QAEFFPAM@Z:NEAR		; CSqlBase::BindCol
EXTRN	?BindCol@CSqlBase@@QAEFFPAK@Z:NEAR		; CSqlBase::BindCol
EXTRN	?BindColStr@CSqlBase@@QAEFFPADJ@Z:NEAR		; CSqlBase::BindColStr
; Function compile flags: /Ogty
;	COMDAT ?BindColumns@CTBLFormulaChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLFormulaChart@@UAEFXZ PROC NEAR		; CTBLFormulaChart::BindColumns, COMDAT
; _this$ = ecx

; 98   : BEGIN_COLUMN(5)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 99   : 	COLUMN_ENTRY(m_bID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L128785
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 63		 jne	 SHORT $L128781
$L128785:

; 100  : 	COLUMN_ENTRY_STR(m_szName)

  0001c	6a 33		 push	 51			; 00000033H
  0001e	8d 8e 2d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3117]
  00024	51		 push	 ecx
  00025	6a 02		 push	 2
  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  0002e	66 85 c0	 test	 ax, ax
  00031	74 06		 je	 SHORT $L128786
  00033	66 3d 01 00	 cmp	 ax, 1
  00037	75 46		 jne	 SHORT $L128781
$L128786:

; 101  : 	COLUMN_ENTRY(m_dwInit)

  00039	8d 96 60 0c 00
	00		 lea	 edx, DWORD PTR [esi+3168]
  0003f	52		 push	 edx
  00040	6a 03		 push	 3
  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00049	66 85 c0	 test	 ax, ax
  0004c	74 06		 je	 SHORT $L128787
  0004e	66 3d 01 00	 cmp	 ax, 1
  00052	75 2b		 jne	 SHORT $L128781
$L128787:

; 102  : 	COLUMN_ENTRY(m_fRateX)

  00054	8d 86 64 0c 00
	00		 lea	 eax, DWORD PTR [esi+3172]
  0005a	50		 push	 eax
  0005b	6a 04		 push	 4
  0005d	8b ce		 mov	 ecx, esi
  0005f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  00064	66 85 c0	 test	 ax, ax
  00067	74 06		 je	 SHORT $L128788
  00069	66 3d 01 00	 cmp	 ax, 1
  0006d	75 10		 jne	 SHORT $L128781
$L128788:

; 103  : 	COLUMN_ENTRY(m_fRateY)

  0006f	8d 8e 68 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3176]
  00075	51		 push	 ecx
  00076	6a 05		 push	 5
  00078	8b ce		 mov	 ecx, esi
  0007a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
$L128781:
  0007f	5e		 pop	 esi

; 104  : END_COL()

  00080	c3		 ret	 0
?BindColumns@CTBLFormulaChart@@UAEFXZ ENDP		; CTBLFormulaChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLFormulaChart@@UAE@XZ			; CTBLFormulaChart::~CTBLFormulaChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLFormulaChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLFormulaChart@@UAEPAXI@Z PROC NEAR		; CTBLFormulaChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLFormulaChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L157607
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L157607:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLFormulaChart@@UAEPAXI@Z ENDP			; CTBLFormulaChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLFormulaChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLFormulaChart@@UAE@XZ PROC NEAR			; CTBLFormulaChart::~CTBLFormulaChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLFormulaChart@@UAE@XZ ENDP			; CTBLFormulaChart::~CTBLFormulaChart
_TEXT	ENDS
PUBLIC	??0CTBLChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLChar::CTBLChar
PUBLIC	?GetNumCol@CTBLChar@@UAEHXZ			; CTBLChar::GetNumCol
PUBLIC	?BindColumns@CTBLChar@@UAEFXZ			; CTBLChar::BindColumns
PUBLIC	?GetNumParam@CTBLChar@@UAEHXZ			; CTBLChar::GetNumParam
PUBLIC	?BindParameters@CTBLChar@@UAEFH@Z		; CTBLChar::BindParameters
PUBLIC	??_7CTBLChar@@6B@				; CTBLChar::`vftable'
PUBLIC	??_GCTBLChar@@UAEPAXI@Z				; CTBLChar::`scalar deleting destructor'
PUBLIC	??_C@_0BKE@HHBPLBHL@SELECT?5?7szNAME?0?5?7bStartAct?0?5?7bRe@ ; `string'
EXTRN	??_ECTBLChar@@UAEPAXI@Z:NEAR			; CTBLChar::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T157790 DD	0ffffffffH
	DD	FLAT:$L157616
$T157787 DD	019930520H
	DD	01H
	DD	FLAT:$T157790
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BKE@HHBPLBHL@SELECT?5?7szNAME?0?5?7bStartAct?0?5?7bRe@
CONST	SEGMENT
??_C@_0BKE@HHBPLBHL@SELECT?5?7szNAME?0?5?7bStartAct?0?5?7bRe@ DB 'SELECT '
	DB	09H, 'szNAME, ', 09H, 'bStartAct, ', 09H, 'bRealSex, ', 09H, 'b'
	DB	'Class, ', 09H, 'bLevel, ', 09H, 'bRace, ', 09H, 'bCountry, ', 09H
	DB	'bOriCountry, ', 09H, 'bSex, ', 09H, 'bHair, ', 09H, 'bFace, ', 09H
	DB	'bBody, ', 09H, 'bPants, ', 09H, 'bHand, ', 09H, 'bFoot, ', 09H
	DB	'bHelmetHide, ', 09H, 'dwCooper, ', 09H, 'dwSilver, ', 09H, 'd'
	DB	'wGold, ', 09H, 'dwEXP, ', 09H, 'dwHP, ', 09H, 'dwMP, ', 09H, 'w'
	DB	'SkillPoint, ', 09H, 'dwRegion, ', 09H, 'bGuildLeave, ', 09H, 'd'
	DB	'wGuildLeaveTime, ', 09H, 'wMapID, ', 09H, 'wSpawnID, ', 09H, 'w'
	DB	'LastSpawnID, ', 09H, 'dwLastDestination, ', 09H, 'wTemptedMon'
	DB	', ', 09H, 'bAftermath, ', 09H, 'fPosX, ', 09H, 'fPosY, ', 09H
	DB	'fPosZ, ', 09H, 'wDIR ', 09H, 'FROM TCHARTABLE ', 09H, 'WHERE '
	DB	'dwCharID = ?', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLChar@@6B@
CONST	SEGMENT
??_7CTBLChar@@6B@ DD FLAT:??_ECTBLChar@@UAEPAXI@Z	; CTBLChar::`vftable'
	DD	FLAT:?GetNumCol@CTBLChar@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLChar@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLChar@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLChar@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T157615 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLChar::CTBLChar, COMDAT
; _this$ = ecx

; 194  : 	WHERE dwCharID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BKE@HHBPLBHL@SELECT?5?7szNAME?0?5?7bStartAct?0?5?7bRe@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T157615[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLChar@@6B@
  0005e	72 0d		 jb	 SHORT $L157788
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L157788:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L157616:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T157787
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLChar::CTBLChar
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLChar@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLChar@@UAEHXZ PROC NEAR			; CTBLChar::GetNumCol, COMDAT
; _this$ = ecx

; 196  : BEGIN_COLUMN(35)

  00000	b8 23 00 00 00	 mov	 eax, 35			; 00000023H
  00005	c3		 ret	 0
?GetNumCol@CTBLChar@@UAEHXZ ENDP			; CTBLChar::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLChar@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLChar@@UAEFXZ PROC NEAR			; CTBLChar::BindColumns, COMDAT
; _this$ = ecx

; 196  : BEGIN_COLUMN(35)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 197  : 	COLUMN_ENTRY_STR(m_szNAME)

  00003	6a 33		 push	 51			; 00000033H
  00005	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0000b	50		 push	 eax
  0000c	6a 01		 push	 1
  0000e	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00013	66 85 c0	 test	 ax, ax
  00016	74 0a		 je	 SHORT $L128869
  00018	66 3d 01 00	 cmp	 ax, 1
  0001c	0f 85 1a 04 00
	00		 jne	 $L128865
$L128869:

; 198  : 	COLUMN_ENTRY(m_bStartAct)

  00022	8d 8e 64 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3172]
  00028	51		 push	 ecx
  00029	6a 02		 push	 2
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00032	66 85 c0	 test	 ax, ax
  00035	74 0a		 je	 SHORT $L128870
  00037	66 3d 01 00	 cmp	 ax, 1
  0003b	0f 85 fb 03 00
	00		 jne	 $L128865
$L128870:

; 199  : 	COLUMN_ENTRY(m_bRealSex)

  00041	8d 96 65 0c 00
	00		 lea	 edx, DWORD PTR [esi+3173]
  00047	52		 push	 edx
  00048	6a 03		 push	 3
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00051	66 85 c0	 test	 ax, ax
  00054	74 0a		 je	 SHORT $L128871
  00056	66 3d 01 00	 cmp	 ax, 1
  0005a	0f 85 dc 03 00
	00		 jne	 $L128865
$L128871:

; 200  : 	COLUMN_ENTRY(m_bClass)

  00060	8d 86 66 0c 00
	00		 lea	 eax, DWORD PTR [esi+3174]
  00066	50		 push	 eax
  00067	6a 04		 push	 4
  00069	8b ce		 mov	 ecx, esi
  0006b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00070	66 85 c0	 test	 ax, ax
  00073	74 0a		 je	 SHORT $L128872
  00075	66 3d 01 00	 cmp	 ax, 1
  00079	0f 85 bd 03 00
	00		 jne	 $L128865
$L128872:

; 201  : 	COLUMN_ENTRY(m_bLevel)

  0007f	8d 8e 67 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3175]
  00085	51		 push	 ecx
  00086	6a 05		 push	 5
  00088	8b ce		 mov	 ecx, esi
  0008a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0008f	66 85 c0	 test	 ax, ax
  00092	74 0a		 je	 SHORT $L128873
  00094	66 3d 01 00	 cmp	 ax, 1
  00098	0f 85 9e 03 00
	00		 jne	 $L128865
$L128873:

; 202  : 	COLUMN_ENTRY(m_bRace)

  0009e	8d 96 68 0c 00
	00		 lea	 edx, DWORD PTR [esi+3176]
  000a4	52		 push	 edx
  000a5	6a 06		 push	 6
  000a7	8b ce		 mov	 ecx, esi
  000a9	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ae	66 85 c0	 test	 ax, ax
  000b1	74 0a		 je	 SHORT $L128874
  000b3	66 3d 01 00	 cmp	 ax, 1
  000b7	0f 85 7f 03 00
	00		 jne	 $L128865
$L128874:

; 203  : 	COLUMN_ENTRY(m_bCountry)

  000bd	8d 86 69 0c 00
	00		 lea	 eax, DWORD PTR [esi+3177]
  000c3	50		 push	 eax
  000c4	6a 07		 push	 7
  000c6	8b ce		 mov	 ecx, esi
  000c8	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000cd	66 85 c0	 test	 ax, ax
  000d0	74 0a		 je	 SHORT $L128875
  000d2	66 3d 01 00	 cmp	 ax, 1
  000d6	0f 85 60 03 00
	00		 jne	 $L128865
$L128875:

; 204  : 	COLUMN_ENTRY(m_bOriCountry)

  000dc	8d 8e 6a 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3178]
  000e2	51		 push	 ecx
  000e3	6a 08		 push	 8
  000e5	8b ce		 mov	 ecx, esi
  000e7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ec	66 85 c0	 test	 ax, ax
  000ef	74 0a		 je	 SHORT $L128876
  000f1	66 3d 01 00	 cmp	 ax, 1
  000f5	0f 85 41 03 00
	00		 jne	 $L128865
$L128876:

; 205  : 	COLUMN_ENTRY(m_bSex)

  000fb	8d 96 6b 0c 00
	00		 lea	 edx, DWORD PTR [esi+3179]
  00101	52		 push	 edx
  00102	6a 09		 push	 9
  00104	8b ce		 mov	 ecx, esi
  00106	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0010b	66 85 c0	 test	 ax, ax
  0010e	74 0a		 je	 SHORT $L128877
  00110	66 3d 01 00	 cmp	 ax, 1
  00114	0f 85 22 03 00
	00		 jne	 $L128865
$L128877:

; 206  : 	COLUMN_ENTRY(m_bHair)

  0011a	8d 86 6c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3180]
  00120	50		 push	 eax
  00121	6a 0a		 push	 10			; 0000000aH
  00123	8b ce		 mov	 ecx, esi
  00125	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0012a	66 85 c0	 test	 ax, ax
  0012d	74 0a		 je	 SHORT $L128878
  0012f	66 3d 01 00	 cmp	 ax, 1
  00133	0f 85 03 03 00
	00		 jne	 $L128865
$L128878:

; 207  : 	COLUMN_ENTRY(m_bFace)

  00139	8d 8e 6d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3181]
  0013f	51		 push	 ecx
  00140	6a 0b		 push	 11			; 0000000bH
  00142	8b ce		 mov	 ecx, esi
  00144	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00149	66 85 c0	 test	 ax, ax
  0014c	74 0a		 je	 SHORT $L128879
  0014e	66 3d 01 00	 cmp	 ax, 1
  00152	0f 85 e4 02 00
	00		 jne	 $L128865
$L128879:

; 208  : 	COLUMN_ENTRY(m_bBody)

  00158	8d 96 6e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3182]
  0015e	52		 push	 edx
  0015f	6a 0c		 push	 12			; 0000000cH
  00161	8b ce		 mov	 ecx, esi
  00163	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00168	66 85 c0	 test	 ax, ax
  0016b	74 0a		 je	 SHORT $L128880
  0016d	66 3d 01 00	 cmp	 ax, 1
  00171	0f 85 c5 02 00
	00		 jne	 $L128865
$L128880:

; 209  : 	COLUMN_ENTRY(m_bPants)

  00177	8d 86 6f 0c 00
	00		 lea	 eax, DWORD PTR [esi+3183]
  0017d	50		 push	 eax
  0017e	6a 0d		 push	 13			; 0000000dH
  00180	8b ce		 mov	 ecx, esi
  00182	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00187	66 85 c0	 test	 ax, ax
  0018a	74 0a		 je	 SHORT $L128881
  0018c	66 3d 01 00	 cmp	 ax, 1
  00190	0f 85 a6 02 00
	00		 jne	 $L128865
$L128881:

; 210  : 	COLUMN_ENTRY(m_bHand)

  00196	8d 8e 70 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3184]
  0019c	51		 push	 ecx
  0019d	6a 0e		 push	 14			; 0000000eH
  0019f	8b ce		 mov	 ecx, esi
  001a1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001a6	66 85 c0	 test	 ax, ax
  001a9	74 0a		 je	 SHORT $L128882
  001ab	66 3d 01 00	 cmp	 ax, 1
  001af	0f 85 87 02 00
	00		 jne	 $L128865
$L128882:

; 211  : 	COLUMN_ENTRY(m_bFoot)

  001b5	8d 96 71 0c 00
	00		 lea	 edx, DWORD PTR [esi+3185]
  001bb	52		 push	 edx
  001bc	6a 0f		 push	 15			; 0000000fH
  001be	8b ce		 mov	 ecx, esi
  001c0	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001c5	66 85 c0	 test	 ax, ax
  001c8	74 0a		 je	 SHORT $L128883
  001ca	66 3d 01 00	 cmp	 ax, 1
  001ce	0f 85 68 02 00
	00		 jne	 $L128865
$L128883:

; 212  : 	COLUMN_ENTRY(m_bHelmetHide)

  001d4	8d 86 72 0c 00
	00		 lea	 eax, DWORD PTR [esi+3186]
  001da	50		 push	 eax
  001db	6a 10		 push	 16			; 00000010H
  001dd	8b ce		 mov	 ecx, esi
  001df	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001e4	66 85 c0	 test	 ax, ax
  001e7	74 0a		 je	 SHORT $L128884
  001e9	66 3d 01 00	 cmp	 ax, 1
  001ed	0f 85 49 02 00
	00		 jne	 $L128865
$L128884:

; 213  : 	COLUMN_ENTRY(m_dwCooper)

  001f3	8d 8e 74 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3188]
  001f9	51		 push	 ecx
  001fa	6a 11		 push	 17			; 00000011H
  001fc	8b ce		 mov	 ecx, esi
  001fe	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00203	66 85 c0	 test	 ax, ax
  00206	74 0a		 je	 SHORT $L128885
  00208	66 3d 01 00	 cmp	 ax, 1
  0020c	0f 85 2a 02 00
	00		 jne	 $L128865
$L128885:

; 214  : 	COLUMN_ENTRY(m_dwSilver)

  00212	8d 96 78 0c 00
	00		 lea	 edx, DWORD PTR [esi+3192]
  00218	52		 push	 edx
  00219	6a 12		 push	 18			; 00000012H
  0021b	8b ce		 mov	 ecx, esi
  0021d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00222	66 85 c0	 test	 ax, ax
  00225	74 0a		 je	 SHORT $L128886
  00227	66 3d 01 00	 cmp	 ax, 1
  0022b	0f 85 0b 02 00
	00		 jne	 $L128865
$L128886:

; 215  : 	COLUMN_ENTRY(m_dwGold)

  00231	8d 86 7c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3196]
  00237	50		 push	 eax
  00238	6a 13		 push	 19			; 00000013H
  0023a	8b ce		 mov	 ecx, esi
  0023c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00241	66 85 c0	 test	 ax, ax
  00244	74 0a		 je	 SHORT $L128887
  00246	66 3d 01 00	 cmp	 ax, 1
  0024a	0f 85 ec 01 00
	00		 jne	 $L128865
$L128887:

; 216  : 	COLUMN_ENTRY(m_dwEXP)

  00250	8d 8e 80 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3200]
  00256	51		 push	 ecx
  00257	6a 14		 push	 20			; 00000014H
  00259	8b ce		 mov	 ecx, esi
  0025b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00260	66 85 c0	 test	 ax, ax
  00263	74 0a		 je	 SHORT $L128888
  00265	66 3d 01 00	 cmp	 ax, 1
  00269	0f 85 cd 01 00
	00		 jne	 $L128865
$L128888:

; 217  : 	COLUMN_ENTRY(m_dwHP)

  0026f	8d 96 84 0c 00
	00		 lea	 edx, DWORD PTR [esi+3204]
  00275	52		 push	 edx
  00276	6a 15		 push	 21			; 00000015H
  00278	8b ce		 mov	 ecx, esi
  0027a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0027f	66 85 c0	 test	 ax, ax
  00282	74 0a		 je	 SHORT $L128889
  00284	66 3d 01 00	 cmp	 ax, 1
  00288	0f 85 ae 01 00
	00		 jne	 $L128865
$L128889:

; 218  : 	COLUMN_ENTRY(m_dwMP)

  0028e	8d 86 88 0c 00
	00		 lea	 eax, DWORD PTR [esi+3208]
  00294	50		 push	 eax
  00295	6a 16		 push	 22			; 00000016H
  00297	8b ce		 mov	 ecx, esi
  00299	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0029e	66 85 c0	 test	 ax, ax
  002a1	74 0a		 je	 SHORT $L128890
  002a3	66 3d 01 00	 cmp	 ax, 1
  002a7	0f 85 8f 01 00
	00		 jne	 $L128865
$L128890:

; 219  : 	COLUMN_ENTRY(m_wSkillPoint)

  002ad	8d 8e 8c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3212]
  002b3	51		 push	 ecx
  002b4	6a 17		 push	 23			; 00000017H
  002b6	8b ce		 mov	 ecx, esi
  002b8	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  002bd	66 85 c0	 test	 ax, ax
  002c0	74 0a		 je	 SHORT $L128891
  002c2	66 3d 01 00	 cmp	 ax, 1
  002c6	0f 85 70 01 00
	00		 jne	 $L128865
$L128891:

; 220  : 	COLUMN_ENTRY(m_dwRegion)

  002cc	8d 96 90 0c 00
	00		 lea	 edx, DWORD PTR [esi+3216]
  002d2	52		 push	 edx
  002d3	6a 18		 push	 24			; 00000018H
  002d5	8b ce		 mov	 ecx, esi
  002d7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  002dc	66 85 c0	 test	 ax, ax
  002df	74 0a		 je	 SHORT $L128892
  002e1	66 3d 01 00	 cmp	 ax, 1
  002e5	0f 85 51 01 00
	00		 jne	 $L128865
$L128892:

; 221  : 	COLUMN_ENTRY(m_bGuildLeave)

  002eb	8d 86 94 0c 00
	00		 lea	 eax, DWORD PTR [esi+3220]
  002f1	50		 push	 eax
  002f2	6a 19		 push	 25			; 00000019H
  002f4	8b ce		 mov	 ecx, esi
  002f6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  002fb	66 85 c0	 test	 ax, ax
  002fe	74 0a		 je	 SHORT $L128893
  00300	66 3d 01 00	 cmp	 ax, 1
  00304	0f 85 32 01 00
	00		 jne	 $L128865
$L128893:

; 222  : 	COLUMN_ENTRY(m_dwGuildLeaveTime)

  0030a	8d 8e 98 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3224]
  00310	51		 push	 ecx
  00311	6a 1a		 push	 26			; 0000001aH
  00313	8b ce		 mov	 ecx, esi
  00315	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0031a	66 85 c0	 test	 ax, ax
  0031d	74 0a		 je	 SHORT $L128894
  0031f	66 3d 01 00	 cmp	 ax, 1
  00323	0f 85 13 01 00
	00		 jne	 $L128865
$L128894:

; 223  : 	COLUMN_ENTRY(m_wMapID)

  00329	8d 96 a8 0c 00
	00		 lea	 edx, DWORD PTR [esi+3240]
  0032f	52		 push	 edx
  00330	6a 1b		 push	 27			; 0000001bH
  00332	8b ce		 mov	 ecx, esi
  00334	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00339	66 85 c0	 test	 ax, ax
  0033c	74 0a		 je	 SHORT $L128895
  0033e	66 3d 01 00	 cmp	 ax, 1
  00342	0f 85 f4 00 00
	00		 jne	 $L128865
$L128895:

; 224  : 	COLUMN_ENTRY(m_wSpawnID)

  00348	8d 86 a0 0c 00
	00		 lea	 eax, DWORD PTR [esi+3232]
  0034e	50		 push	 eax
  0034f	6a 1c		 push	 28			; 0000001cH
  00351	8b ce		 mov	 ecx, esi
  00353	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00358	66 85 c0	 test	 ax, ax
  0035b	74 0a		 je	 SHORT $L128896
  0035d	66 3d 01 00	 cmp	 ax, 1
  00361	0f 85 d5 00 00
	00		 jne	 $L128865
$L128896:

; 225  : 	COLUMN_ENTRY(m_wLastSpawnID)

  00367	8d 8e a2 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3234]
  0036d	51		 push	 ecx
  0036e	6a 1d		 push	 29			; 0000001dH
  00370	8b ce		 mov	 ecx, esi
  00372	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00377	66 85 c0	 test	 ax, ax
  0037a	74 0a		 je	 SHORT $L128897
  0037c	66 3d 01 00	 cmp	 ax, 1
  00380	0f 85 b6 00 00
	00		 jne	 $L128865
$L128897:

; 226  : 	COLUMN_ENTRY(m_dwLastDestination)

  00386	8d 96 a4 0c 00
	00		 lea	 edx, DWORD PTR [esi+3236]
  0038c	52		 push	 edx
  0038d	6a 1e		 push	 30			; 0000001eH
  0038f	8b ce		 mov	 ecx, esi
  00391	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00396	66 85 c0	 test	 ax, ax
  00399	74 0a		 je	 SHORT $L128898
  0039b	66 3d 01 00	 cmp	 ax, 1
  0039f	0f 85 97 00 00
	00		 jne	 $L128865
$L128898:

; 227  : 	COLUMN_ENTRY(m_wTemptedMon)

  003a5	8d 86 9c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3228]
  003ab	50		 push	 eax
  003ac	6a 1f		 push	 31			; 0000001fH
  003ae	8b ce		 mov	 ecx, esi
  003b0	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  003b5	66 85 c0	 test	 ax, ax
  003b8	74 06		 je	 SHORT $L128899
  003ba	66 3d 01 00	 cmp	 ax, 1
  003be	75 7c		 jne	 SHORT $L128865
$L128899:

; 228  : 	COLUMN_ENTRY(m_bAftermath)

  003c0	8d 8e 9e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3230]
  003c6	51		 push	 ecx
  003c7	6a 20		 push	 32			; 00000020H
  003c9	8b ce		 mov	 ecx, esi
  003cb	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  003d0	66 85 c0	 test	 ax, ax
  003d3	74 06		 je	 SHORT $L128900
  003d5	66 3d 01 00	 cmp	 ax, 1
  003d9	75 61		 jne	 SHORT $L128865
$L128900:

; 229  : 	COLUMN_ENTRY(m_fPosX)

  003db	8d 96 ac 0c 00
	00		 lea	 edx, DWORD PTR [esi+3244]
  003e1	52		 push	 edx
  003e2	6a 21		 push	 33			; 00000021H
  003e4	8b ce		 mov	 ecx, esi
  003e6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  003eb	66 85 c0	 test	 ax, ax
  003ee	74 06		 je	 SHORT $L128901
  003f0	66 3d 01 00	 cmp	 ax, 1
  003f4	75 46		 jne	 SHORT $L128865
$L128901:

; 230  : 	COLUMN_ENTRY(m_fPosY)

  003f6	8d 86 b0 0c 00
	00		 lea	 eax, DWORD PTR [esi+3248]
  003fc	50		 push	 eax
  003fd	6a 22		 push	 34			; 00000022H
  003ff	8b ce		 mov	 ecx, esi
  00401	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  00406	66 85 c0	 test	 ax, ax
  00409	74 06		 je	 SHORT $L128902
  0040b	66 3d 01 00	 cmp	 ax, 1
  0040f	75 2b		 jne	 SHORT $L128865
$L128902:

; 231  : 	COLUMN_ENTRY(m_fPosZ)

  00411	8d 8e b4 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3252]
  00417	51		 push	 ecx
  00418	6a 23		 push	 35			; 00000023H
  0041a	8b ce		 mov	 ecx, esi
  0041c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  00421	66 85 c0	 test	 ax, ax
  00424	74 06		 je	 SHORT $L128903
  00426	66 3d 01 00	 cmp	 ax, 1
  0042a	75 10		 jne	 SHORT $L128865
$L128903:

; 232  : 	COLUMN_ENTRY(m_wDIR)

  0042c	8d 96 b8 0c 00
	00		 lea	 edx, DWORD PTR [esi+3256]
  00432	52		 push	 edx
  00433	6a 24		 push	 36			; 00000024H
  00435	8b ce		 mov	 ecx, esi
  00437	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
$L128865:
  0043c	5e		 pop	 esi

; 233  : END_COL()

  0043d	c3		 ret	 0
?BindColumns@CTBLChar@@UAEFXZ ENDP			; CTBLChar::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLChar@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLChar@@UAEHXZ PROC NEAR			; CTBLChar::GetNumParam, COMDAT
; _this$ = ecx

; 235  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLChar@@UAEHXZ ENDP			; CTBLChar::GetNumParam
_TEXT	ENDS
EXTRN	?BindParam@CSqlBase@@QAEFFFPAK@Z:NEAR		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParameters@CTBLChar@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLChar@@UAEFH@Z PROC NEAR		; CTBLChar::BindParameters, COMDAT
; _this$ = ecx

; 236  : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L128909
  00010	8d 81 60 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3168]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L128909:

; 237  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLChar@@UAEFH@Z ENDP			; CTBLChar::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLChar@@UAE@XZ				; CTBLChar::~CTBLChar
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLChar@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLChar@@UAEPAXI@Z PROC NEAR			; CTBLChar::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLChar@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L157808
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L157808:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLChar@@UAEPAXI@Z ENDP				; CTBLChar::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLChar@@UAE@XZ
_TEXT	SEGMENT
??1CTBLChar@@UAE@XZ PROC NEAR				; CTBLChar::~CTBLChar, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLChar@@UAE@XZ ENDP				; CTBLChar::~CTBLChar
_TEXT	ENDS
PUBLIC	??0CTBLSoulmateTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSoulmateTable::CTBLSoulmateTable
PUBLIC	?GetNumCol@CTBLSoulmateTable@@UAEHXZ		; CTBLSoulmateTable::GetNumCol
PUBLIC	?BindColumns@CTBLSoulmateTable@@UAEFXZ		; CTBLSoulmateTable::BindColumns
PUBLIC	?GetNumParam@CTBLSoulmateTable@@UAEHXZ		; CTBLSoulmateTable::GetNumParam
PUBLIC	?BindParameters@CTBLSoulmateTable@@UAEFH@Z	; CTBLSoulmateTable::BindParameters
PUBLIC	??_7CTBLSoulmateTable@@6B@			; CTBLSoulmateTable::`vftable'
PUBLIC	??_GCTBLSoulmateTable@@UAEPAXI@Z		; CTBLSoulmateTable::`scalar deleting destructor'
PUBLIC	??_C@_0EH@IFIEJLKD@SELECT?5dwTarget?0?5szNAME?0?5dwTime?5@ ; `string'
EXTRN	??_ECTBLSoulmateTable@@UAEPAXI@Z:NEAR		; CTBLSoulmateTable::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T157991 DD	0ffffffffH
	DD	FLAT:$L157817
$T157988 DD	019930520H
	DD	01H
	DD	FLAT:$T157991
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EH@IFIEJLKD@SELECT?5dwTarget?0?5szNAME?0?5dwTime?5@
CONST	SEGMENT
??_C@_0EH@IFIEJLKD@SELECT?5dwTarget?0?5szNAME?0?5dwTime?5@ DB 'SELECT dwT'
	DB	'arget, szNAME, dwTime FROM TVIEW_SOULMATE WHERE dwCharID = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLSoulmateTable@@6B@
CONST	SEGMENT
??_7CTBLSoulmateTable@@6B@ DD FLAT:??_ECTBLSoulmateTable@@UAEPAXI@Z ; CTBLSoulmateTable::`vftable'
	DD	FLAT:?GetNumCol@CTBLSoulmateTable@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLSoulmateTable@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLSoulmateTable@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLSoulmateTable@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLSoulmateTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T157816 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLSoulmateTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLSoulmateTable::CTBLSoulmateTable, COMDAT
; _this$ = ecx

; 249  : DEF_QUERY(CTBLSoulmateTable, _T("SELECT dwTarget, szNAME, dwTime FROM TVIEW_SOULMATE WHERE dwCharID = ?"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLSoulmateTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EH@IFIEJLKD@SELECT?5dwTarget?0?5szNAME?0?5dwTime?5@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T157816[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLSoulmateTable@@6B@
  0005e	72 0d		 jb	 SHORT $L157989
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L157989:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L157817:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLSoulmateTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T157988
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLSoulmateTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLSoulmateTable::CTBLSoulmateTable
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLSoulmateTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLSoulmateTable@@UAEHXZ PROC NEAR		; CTBLSoulmateTable::GetNumCol, COMDAT
; _this$ = ecx

; 251  : BEGIN_COLUMN(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumCol@CTBLSoulmateTable@@UAEHXZ ENDP		; CTBLSoulmateTable::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSoulmateTable@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLSoulmateTable@@UAEFXZ PROC NEAR	; CTBLSoulmateTable::BindColumns, COMDAT
; _this$ = ecx

; 251  : BEGIN_COLUMN(3)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 252  : 	COLUMN_ENTRY(m_dwSoulmate)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L128961
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 2d		 jne	 SHORT $L128957
$L128961:

; 253  : 	COLUMN_ENTRY_STR(m_szName)

  0001c	6a 33		 push	 51			; 00000033H
  0001e	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00024	51		 push	 ecx
  00025	6a 02		 push	 2
  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  0002e	66 85 c0	 test	 ax, ax
  00031	74 06		 je	 SHORT $L128962
  00033	66 3d 01 00	 cmp	 ax, 1
  00037	75 10		 jne	 SHORT $L128957
$L128962:

; 254  : 	COLUMN_ENTRY(m_dwTime)

  00039	8d 96 68 0c 00
	00		 lea	 edx, DWORD PTR [esi+3176]
  0003f	52		 push	 edx
  00040	6a 03		 push	 3
  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L128957:
  00049	5e		 pop	 esi

; 255  : END_COL()

  0004a	c3		 ret	 0
?BindColumns@CTBLSoulmateTable@@UAEFXZ ENDP		; CTBLSoulmateTable::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLSoulmateTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLSoulmateTable@@UAEHXZ PROC NEAR	; CTBLSoulmateTable::GetNumParam, COMDAT
; _this$ = ecx

; 257  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLSoulmateTable@@UAEHXZ ENDP		; CTBLSoulmateTable::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLSoulmateTable@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLSoulmateTable@@UAEFH@Z PROC NEAR	; CTBLSoulmateTable::BindParameters, COMDAT
; _this$ = ecx

; 258  : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L128968
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L128968:

; 259  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLSoulmateTable@@UAEFH@Z ENDP		; CTBLSoulmateTable::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLSoulmateTable@@UAE@XZ			; CTBLSoulmateTable::~CTBLSoulmateTable
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLSoulmateTable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLSoulmateTable@@UAEPAXI@Z PROC NEAR		; CTBLSoulmateTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLSoulmateTable@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L158009
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L158009:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLSoulmateTable@@UAEPAXI@Z ENDP			; CTBLSoulmateTable::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLSoulmateTable@@UAE@XZ
_TEXT	SEGMENT
??1CTBLSoulmateTable@@UAE@XZ PROC NEAR			; CTBLSoulmateTable::~CTBLSoulmateTable, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLSoulmateTable@@UAE@XZ ENDP			; CTBLSoulmateTable::~CTBLSoulmateTable
_TEXT	ENDS
PUBLIC	??0CTBLProtectedTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLProtectedTable::CTBLProtectedTable
PUBLIC	?GetNumCol@CTBLProtectedTable@@UAEHXZ		; CTBLProtectedTable::GetNumCol
PUBLIC	?BindColumns@CTBLProtectedTable@@UAEFXZ		; CTBLProtectedTable::BindColumns
PUBLIC	?GetNumParam@CTBLProtectedTable@@UAEHXZ		; CTBLProtectedTable::GetNumParam
PUBLIC	?BindParameters@CTBLProtectedTable@@UAEFH@Z	; CTBLProtectedTable::BindParameters
PUBLIC	??_7CTBLProtectedTable@@6B@			; CTBLProtectedTable::`vftable'
PUBLIC	??_GCTBLProtectedTable@@UAEPAXI@Z		; CTBLProtectedTable::`scalar deleting destructor'
PUBLIC	??_C@_0EM@IOGIBEMC@SELECT?5dwProtected?0?5szName?0?5bOpt@ ; `string'
EXTRN	??_ECTBLProtectedTable@@UAEPAXI@Z:NEAR		; CTBLProtectedTable::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T158192 DD	0ffffffffH
	DD	FLAT:$L158018
$T158189 DD	019930520H
	DD	01H
	DD	FLAT:$T158192
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EM@IOGIBEMC@SELECT?5dwProtected?0?5szName?0?5bOpt@
CONST	SEGMENT
??_C@_0EM@IOGIBEMC@SELECT?5dwProtected?0?5szName?0?5bOpt@ DB 'SELECT dwPr'
	DB	'otected, szName, bOption FROM TPROTECTEDTABLE WHERE dwCharID '
	DB	'= ?', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7CTBLProtectedTable@@6B@
CONST	SEGMENT
??_7CTBLProtectedTable@@6B@ DD FLAT:??_ECTBLProtectedTable@@UAEPAXI@Z ; CTBLProtectedTable::`vftable'
	DD	FLAT:?GetNumCol@CTBLProtectedTable@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLProtectedTable@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLProtectedTable@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLProtectedTable@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLProtectedTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T158017 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLProtectedTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLProtectedTable::CTBLProtectedTable, COMDAT
; _this$ = ecx

; 270  : DEF_QUERY(CTBLProtectedTable, _T("SELECT dwProtected, szName, bOption FROM TPROTECTEDTABLE WHERE dwCharID = ?"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLProtectedTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EM@IOGIBEMC@SELECT?5dwProtected?0?5szName?0?5bOpt@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T158017[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLProtectedTable@@6B@
  0005e	72 0d		 jb	 SHORT $L158190
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L158190:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L158018:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLProtectedTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T158189
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLProtectedTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLProtectedTable::CTBLProtectedTable
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLProtectedTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLProtectedTable@@UAEHXZ PROC NEAR		; CTBLProtectedTable::GetNumCol, COMDAT
; _this$ = ecx

; 272  : BEGIN_COLUMN(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumCol@CTBLProtectedTable@@UAEHXZ ENDP		; CTBLProtectedTable::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLProtectedTable@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLProtectedTable@@UAEFXZ PROC NEAR	; CTBLProtectedTable::BindColumns, COMDAT
; _this$ = ecx

; 272  : BEGIN_COLUMN(3)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 273  : 	COLUMN_ENTRY(m_dwProtected)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L129020
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 2d		 jne	 SHORT $L129016
$L129020:

; 274  : 	COLUMN_ENTRY_STR(m_szName)

  0001c	6a 33		 push	 51			; 00000033H
  0001e	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00024	51		 push	 ecx
  00025	6a 02		 push	 2
  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  0002e	66 85 c0	 test	 ax, ax
  00031	74 06		 je	 SHORT $L129021
  00033	66 3d 01 00	 cmp	 ax, 1
  00037	75 10		 jne	 SHORT $L129016
$L129021:

; 275  : 	COLUMN_ENTRY(m_bOption)

  00039	8d 96 67 0c 00
	00		 lea	 edx, DWORD PTR [esi+3175]
  0003f	52		 push	 edx
  00040	6a 03		 push	 3
  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L129016:
  00049	5e		 pop	 esi

; 276  : END_COL()

  0004a	c3		 ret	 0
?BindColumns@CTBLProtectedTable@@UAEFXZ ENDP		; CTBLProtectedTable::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLProtectedTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLProtectedTable@@UAEHXZ PROC NEAR	; CTBLProtectedTable::GetNumParam, COMDAT
; _this$ = ecx

; 278  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLProtectedTable@@UAEHXZ ENDP		; CTBLProtectedTable::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLProtectedTable@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLProtectedTable@@UAEFH@Z PROC NEAR	; CTBLProtectedTable::BindParameters, COMDAT
; _this$ = ecx

; 279  : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L129027
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L129027:

; 280  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLProtectedTable@@UAEFH@Z ENDP	; CTBLProtectedTable::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLProtectedTable@@UAE@XZ			; CTBLProtectedTable::~CTBLProtectedTable
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLProtectedTable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLProtectedTable@@UAEPAXI@Z PROC NEAR		; CTBLProtectedTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLProtectedTable@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L158210
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L158210:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLProtectedTable@@UAEPAXI@Z ENDP			; CTBLProtectedTable::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLProtectedTable@@UAE@XZ
_TEXT	SEGMENT
??1CTBLProtectedTable@@UAE@XZ PROC NEAR			; CTBLProtectedTable::~CTBLProtectedTable, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLProtectedTable@@UAE@XZ ENDP			; CTBLProtectedTable::~CTBLProtectedTable
_TEXT	ENDS
PUBLIC	??0CTBLCharGuild@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCharGuild::CTBLCharGuild
PUBLIC	?GetNumCol@CTBLCharGuild@@UAEHXZ		; CTBLCharGuild::GetNumCol
PUBLIC	?BindColumns@CTBLCharGuild@@UAEFXZ		; CTBLCharGuild::BindColumns
PUBLIC	?GetNumParam@CTBLCharGuild@@UAEHXZ		; CTBLCharGuild::GetNumParam
PUBLIC	?BindParameters@CTBLCharGuild@@UAEFH@Z		; CTBLCharGuild::BindParameters
PUBLIC	??_7CTBLCharGuild@@6B@				; CTBLCharGuild::`vftable'
PUBLIC	??_GCTBLCharGuild@@UAEPAXI@Z			; CTBLCharGuild::`scalar deleting destructor'
PUBLIC	??_C@_0EO@CFDFCLBG@SELECT?5?7dwGuildID?0?5?7bDuty?0?5?7bPee@ ; `string'
EXTRN	??_ECTBLCharGuild@@UAEPAXI@Z:NEAR		; CTBLCharGuild::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T158393 DD	0ffffffffH
	DD	FLAT:$L158219
$T158390 DD	019930520H
	DD	01H
	DD	FLAT:$T158393
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EO@CFDFCLBG@SELECT?5?7dwGuildID?0?5?7bDuty?0?5?7bPee@
CONST	SEGMENT
??_C@_0EO@CFDFCLBG@SELECT?5?7dwGuildID?0?5?7bDuty?0?5?7bPee@ DB 'SELECT ', 09H
	DB	'dwGuildID, ', 09H, 'bDuty, ', 09H, 'bPeer ', 09H, 'FROM TGUIL'
	DB	'DMEMBERTABLE ', 09H, 'WHERE dwCharID = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLCharGuild@@6B@
CONST	SEGMENT
??_7CTBLCharGuild@@6B@ DD FLAT:??_ECTBLCharGuild@@UAEPAXI@Z ; CTBLCharGuild::`vftable'
	DD	FLAT:?GetNumCol@CTBLCharGuild@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLCharGuild@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLCharGuild@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLCharGuild@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLCharGuild@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T158218 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLCharGuild@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLCharGuild::CTBLCharGuild, COMDAT
; _this$ = ecx

; 297  : 	WHERE dwCharID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLCharGuild@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EO@CFDFCLBG@SELECT?5?7dwGuildID?0?5?7bDuty?0?5?7bPee@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T158218[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLCharGuild@@6B@
  0005e	72 0d		 jb	 SHORT $L158391
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L158391:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L158219:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLCharGuild@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T158390
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLCharGuild@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLCharGuild::CTBLCharGuild
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLCharGuild@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLCharGuild@@UAEHXZ PROC NEAR		; CTBLCharGuild::GetNumCol, COMDAT
; _this$ = ecx

; 299  : BEGIN_COLUMN(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumCol@CTBLCharGuild@@UAEHXZ ENDP			; CTBLCharGuild::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLCharGuild@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLCharGuild@@UAEFXZ PROC NEAR		; CTBLCharGuild::BindColumns, COMDAT
; _this$ = ecx

; 299  : BEGIN_COLUMN(3)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 300  : 	COLUMN_ENTRY(m_dwGuildID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L129079
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 2b		 jne	 SHORT $L129075
$L129079:

; 301  : 	COLUMN_ENTRY(m_bDuty)

  0001c	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L129080
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 10		 jne	 SHORT $L129075
$L129080:

; 302  : 	COLUMN_ENTRY(m_bPeer)

  00037	8d 96 35 0c 00
	00		 lea	 edx, DWORD PTR [esi+3125]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L129075:
  00047	5e		 pop	 esi

; 303  : END_COL()

  00048	c3		 ret	 0
?BindColumns@CTBLCharGuild@@UAEFXZ ENDP			; CTBLCharGuild::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLCharGuild@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLCharGuild@@UAEHXZ PROC NEAR		; CTBLCharGuild::GetNumParam, COMDAT
; _this$ = ecx

; 305  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLCharGuild@@UAEHXZ ENDP			; CTBLCharGuild::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLCharGuild@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLCharGuild@@UAEFH@Z PROC NEAR	; CTBLCharGuild::BindParameters, COMDAT
; _this$ = ecx

; 306  : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L129086
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L129086:

; 307  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLCharGuild@@UAEFH@Z ENDP		; CTBLCharGuild::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLCharGuild@@UAE@XZ			; CTBLCharGuild::~CTBLCharGuild
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLCharGuild@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLCharGuild@@UAEPAXI@Z PROC NEAR			; CTBLCharGuild::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLCharGuild@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L158411
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L158411:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLCharGuild@@UAEPAXI@Z ENDP			; CTBLCharGuild::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLCharGuild@@UAE@XZ
_TEXT	SEGMENT
??1CTBLCharGuild@@UAE@XZ PROC NEAR			; CTBLCharGuild::~CTBLCharGuild, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLCharGuild@@UAE@XZ ENDP				; CTBLCharGuild::~CTBLCharGuild
_TEXT	ENDS
PUBLIC	??0CTBLCharTactics@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCharTactics::CTBLCharTactics
PUBLIC	?GetNumCol@CTBLCharTactics@@UAEHXZ		; CTBLCharTactics::GetNumCol
PUBLIC	?BindColumns@CTBLCharTactics@@UAEFXZ		; CTBLCharTactics::BindColumns
PUBLIC	?GetNumParam@CTBLCharTactics@@UAEHXZ		; CTBLCharTactics::GetNumParam
PUBLIC	?BindParameters@CTBLCharTactics@@UAEFH@Z	; CTBLCharTactics::BindParameters
PUBLIC	??_7CTBLCharTactics@@6B@			; CTBLCharTactics::`vftable'
PUBLIC	??_GCTBLCharTactics@@UAEPAXI@Z			; CTBLCharTactics::`scalar deleting destructor'
PUBLIC	??_C@_0DP@NIPKINMH@SELECT?5?7dwGuildID?5?7FROM?5TGUILDTA@ ; `string'
EXTRN	??_ECTBLCharTactics@@UAEPAXI@Z:NEAR		; CTBLCharTactics::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T158594 DD	0ffffffffH
	DD	FLAT:$L158420
$T158591 DD	019930520H
	DD	01H
	DD	FLAT:$T158594
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DP@NIPKINMH@SELECT?5?7dwGuildID?5?7FROM?5TGUILDTA@
CONST	SEGMENT
??_C@_0DP@NIPKINMH@SELECT?5?7dwGuildID?5?7FROM?5TGUILDTA@ DB 'SELECT ', 09H
	DB	'dwGuildID ', 09H, 'FROM TGUILDTACTICSTABLE ', 09H, 'WHERE dwC'
	DB	'harID = ?', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLCharTactics@@6B@
CONST	SEGMENT
??_7CTBLCharTactics@@6B@ DD FLAT:??_ECTBLCharTactics@@UAEPAXI@Z ; CTBLCharTactics::`vftable'
	DD	FLAT:?GetNumCol@CTBLCharTactics@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLCharTactics@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLCharTactics@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLCharTactics@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLCharTactics@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T158419 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLCharTactics@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLCharTactics::CTBLCharTactics, COMDAT
; _this$ = ecx

; 320  : 	WHERE dwCharID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLCharTactics@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@NIPKINMH@SELECT?5?7dwGuildID?5?7FROM?5TGUILDTA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T158419[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLCharTactics@@6B@
  0005e	72 0d		 jb	 SHORT $L158592
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L158592:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L158420:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLCharTactics@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T158591
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLCharTactics@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLCharTactics::CTBLCharTactics
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLCharTactics@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLCharTactics@@UAEHXZ PROC NEAR		; CTBLCharTactics::GetNumCol, COMDAT
; _this$ = ecx

; 322  : BEGIN_COLUMN(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumCol@CTBLCharTactics@@UAEHXZ ENDP			; CTBLCharTactics::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLCharTactics@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLCharTactics@@UAEFXZ PROC NEAR		; CTBLCharTactics::BindColumns, COMDAT
; _this$ = ecx

; 323  : 	COLUMN_ENTRY(m_dwGuildID)

  00000	8d 81 30 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3120]
  00006	50		 push	 eax
  00007	6a 01		 push	 1
  00009	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol

; 324  : END_COL()

  0000e	c3		 ret	 0
?BindColumns@CTBLCharTactics@@UAEFXZ ENDP		; CTBLCharTactics::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLCharTactics@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLCharTactics@@UAEHXZ PROC NEAR		; CTBLCharTactics::GetNumParam, COMDAT
; _this$ = ecx

; 326  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLCharTactics@@UAEHXZ ENDP		; CTBLCharTactics::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLCharTactics@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLCharTactics@@UAEFH@Z PROC NEAR	; CTBLCharTactics::BindParameters, COMDAT
; _this$ = ecx

; 327  : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L129141
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L129141:

; 328  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLCharTactics@@UAEFH@Z ENDP		; CTBLCharTactics::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLCharTactics@@UAE@XZ			; CTBLCharTactics::~CTBLCharTactics
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLCharTactics@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLCharTactics@@UAEPAXI@Z PROC NEAR		; CTBLCharTactics::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLCharTactics@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L158612
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L158612:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLCharTactics@@UAEPAXI@Z ENDP			; CTBLCharTactics::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLCharTactics@@UAE@XZ
_TEXT	SEGMENT
??1CTBLCharTactics@@UAE@XZ PROC NEAR			; CTBLCharTactics::~CTBLCharTactics, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLCharTactics@@UAE@XZ ENDP				; CTBLCharTactics::~CTBLCharTactics
_TEXT	ENDS
PUBLIC	??0CTBLCharGuildInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCharGuildInfo::CTBLCharGuildInfo
PUBLIC	?GetNumCol@CTBLCharGuildInfo@@UAEHXZ		; CTBLCharGuildInfo::GetNumCol
PUBLIC	?BindColumns@CTBLCharGuildInfo@@UAEFXZ		; CTBLCharGuildInfo::BindColumns
PUBLIC	?GetNumParam@CTBLCharGuildInfo@@UAEHXZ		; CTBLCharGuildInfo::GetNumParam
PUBLIC	?BindParameters@CTBLCharGuildInfo@@UAEFH@Z	; CTBLCharGuildInfo::BindParameters
PUBLIC	??_7CTBLCharGuildInfo@@6B@			; CTBLCharGuildInfo::`vftable'
PUBLIC	??_GCTBLCharGuildInfo@@UAEPAXI@Z		; CTBLCharGuildInfo::`scalar deleting destructor'
PUBLIC	??_C@_0DP@BKLFPKIO@SELECT?5?7dwFame?0?5?7dwFameColor?5?7FR@ ; `string'
EXTRN	??_ECTBLCharGuildInfo@@UAEPAXI@Z:NEAR		; CTBLCharGuildInfo::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T158795 DD	0ffffffffH
	DD	FLAT:$L158621
$T158792 DD	019930520H
	DD	01H
	DD	FLAT:$T158795
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DP@BKLFPKIO@SELECT?5?7dwFame?0?5?7dwFameColor?5?7FR@
CONST	SEGMENT
??_C@_0DP@BKLFPKIO@SELECT?5?7dwFame?0?5?7dwFameColor?5?7FR@ DB 'SELECT ', 09H
	DB	'dwFame, ', 09H, 'dwFameColor ', 09H, 'FROM TGUILDTABLE ', 09H
	DB	'WHERE dwID = ?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CTBLCharGuildInfo@@6B@
CONST	SEGMENT
??_7CTBLCharGuildInfo@@6B@ DD FLAT:??_ECTBLCharGuildInfo@@UAEPAXI@Z ; CTBLCharGuildInfo::`vftable'
	DD	FLAT:?GetNumCol@CTBLCharGuildInfo@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLCharGuildInfo@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLCharGuildInfo@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLCharGuildInfo@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLCharGuildInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T158620 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLCharGuildInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLCharGuildInfo::CTBLCharGuildInfo, COMDAT
; _this$ = ecx

; 342  : 	WHERE dwID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLCharGuildInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@BKLFPKIO@SELECT?5?7dwFame?0?5?7dwFameColor?5?7FR@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T158620[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLCharGuildInfo@@6B@
  0005e	72 0d		 jb	 SHORT $L158793
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L158793:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L158621:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLCharGuildInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T158792
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLCharGuildInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLCharGuildInfo::CTBLCharGuildInfo
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLCharGuildInfo@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLCharGuildInfo@@UAEHXZ PROC NEAR		; CTBLCharGuildInfo::GetNumCol, COMDAT
; _this$ = ecx

; 344  : BEGIN_COLUMN(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumCol@CTBLCharGuildInfo@@UAEHXZ ENDP		; CTBLCharGuildInfo::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLCharGuildInfo@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLCharGuildInfo@@UAEFXZ PROC NEAR	; CTBLCharGuildInfo::BindColumns, COMDAT
; _this$ = ecx

; 344  : BEGIN_COLUMN(2)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 345  : 	COLUMN_ENTRY(m_dwFame)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L129192
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 10		 jne	 SHORT $L129188
$L129192:

; 346  : 	COLUMN_ENTRY(m_dwFameColor)

  0001c	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L129188:
  0002c	5e		 pop	 esi

; 347  : END_COL()

  0002d	c3		 ret	 0
?BindColumns@CTBLCharGuildInfo@@UAEFXZ ENDP		; CTBLCharGuildInfo::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLCharGuildInfo@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLCharGuildInfo@@UAEHXZ PROC NEAR	; CTBLCharGuildInfo::GetNumParam, COMDAT
; _this$ = ecx

; 349  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLCharGuildInfo@@UAEHXZ ENDP		; CTBLCharGuildInfo::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLCharGuildInfo@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLCharGuildInfo@@UAEFH@Z PROC NEAR	; CTBLCharGuildInfo::BindParameters, COMDAT
; _this$ = ecx

; 350  : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwGuildID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L129198
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L129198:

; 351  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLCharGuildInfo@@UAEFH@Z ENDP		; CTBLCharGuildInfo::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLCharGuildInfo@@UAE@XZ			; CTBLCharGuildInfo::~CTBLCharGuildInfo
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLCharGuildInfo@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLCharGuildInfo@@UAEPAXI@Z PROC NEAR		; CTBLCharGuildInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLCharGuildInfo@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L158813
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L158813:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLCharGuildInfo@@UAEPAXI@Z ENDP			; CTBLCharGuildInfo::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLCharGuildInfo@@UAE@XZ
_TEXT	SEGMENT
??1CTBLCharGuildInfo@@UAE@XZ PROC NEAR			; CTBLCharGuildInfo::~CTBLCharGuildInfo, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLCharGuildInfo@@UAE@XZ ENDP			; CTBLCharGuildInfo::~CTBLCharGuildInfo
_TEXT	ENDS
PUBLIC	??0CTBLAIChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLAIChart::CTBLAIChart
PUBLIC	?GetNumCol@CTBLAIChart@@UAEHXZ			; CTBLAIChart::GetNumCol
PUBLIC	?BindColumns@CTBLAIChart@@UAEFXZ		; CTBLAIChart::BindColumns
PUBLIC	??_7CTBLAIChart@@6B@				; CTBLAIChart::`vftable'
PUBLIC	??_GCTBLAIChart@@UAEPAXI@Z			; CTBLAIChart::`scalar deleting destructor'
PUBLIC	??_C@_0FI@PIAMGPED@SELECT?5?7dwTriggerID?0?5?7dwCmdID?0?5?7@ ; `string'
EXTRN	??_ECTBLAIChart@@UAEPAXI@Z:NEAR			; CTBLAIChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T158996 DD	0ffffffffH
	DD	FLAT:$L158822
$T158993 DD	019930520H
	DD	01H
	DD	FLAT:$T158996
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FI@PIAMGPED@SELECT?5?7dwTriggerID?0?5?7dwCmdID?0?5?7@
CONST	SEGMENT
??_C@_0FI@PIAMGPED@SELECT?5?7dwTriggerID?0?5?7dwCmdID?0?5?7@ DB 'SELECT ', 09H
	DB	'dwTriggerID, ', 09H, 'dwCmdID, ', 09H, 'dwDelay, ', 09H, 'bTr'
	DB	'iggerType, ', 09H, 'bAIType, ', 09H, 'bLoop ', 09H, 'FROM TAI'
	DB	'CHART', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7CTBLAIChart@@6B@
CONST	SEGMENT
??_7CTBLAIChart@@6B@ DD FLAT:??_ECTBLAIChart@@UAEPAXI@Z	; CTBLAIChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLAIChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLAIChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLAIChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T158821 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLAIChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLAIChart::CTBLAIChart, COMDAT
; _this$ = ecx

; 372  : 	FROM TAICHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLAIChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FI@PIAMGPED@SELECT?5?7dwTriggerID?0?5?7dwCmdID?0?5?7@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T158821[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLAIChart@@6B@
  0005e	72 0d		 jb	 SHORT $L158994
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L158994:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L158822:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLAIChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T158993
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLAIChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLAIChart::CTBLAIChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLAIChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLAIChart@@UAEHXZ PROC NEAR		; CTBLAIChart::GetNumCol, COMDAT
; _this$ = ecx

; 374  : BEGIN_COLUMN(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumCol@CTBLAIChart@@UAEHXZ ENDP			; CTBLAIChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLAIChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLAIChart@@UAEFXZ PROC NEAR		; CTBLAIChart::BindColumns, COMDAT
; _this$ = ecx

; 374  : BEGIN_COLUMN(6)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 375  : 	COLUMN_ENTRY(m_dwTriggerID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L129249
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 7c		 jne	 SHORT $L129245
$L129249:

; 376  : 	COLUMN_ENTRY(m_dwCmdID)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L129250
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 61		 jne	 SHORT $L129245
$L129250:

; 377  : 	COLUMN_ENTRY(m_dwDelay)

  00037	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L129251
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 46		 jne	 SHORT $L129245
$L129251:

; 378  : 	COLUMN_ENTRY(m_bTriggerType)

  00052	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00062	66 85 c0	 test	 ax, ax
  00065	74 06		 je	 SHORT $L129252
  00067	66 3d 01 00	 cmp	 ax, 1
  0006b	75 2b		 jne	 SHORT $L129245
$L129252:

; 379  : 	COLUMN_ENTRY(m_bAIType)

  0006d	8d 8e 39 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3129]
  00073	51		 push	 ecx
  00074	6a 05		 push	 5
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0007d	66 85 c0	 test	 ax, ax
  00080	74 06		 je	 SHORT $L129253
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 10		 jne	 SHORT $L129245
$L129253:

; 380  : 	COLUMN_ENTRY(m_bLoop)

  00088	8d 96 3a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3130]
  0008e	52		 push	 edx
  0008f	6a 06		 push	 6
  00091	8b ce		 mov	 ecx, esi
  00093	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L129245:
  00098	5e		 pop	 esi

; 381  : END_COL()

  00099	c3		 ret	 0
?BindColumns@CTBLAIChart@@UAEFXZ ENDP			; CTBLAIChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLAIChart@@UAE@XZ				; CTBLAIChart::~CTBLAIChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLAIChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLAIChart@@UAEPAXI@Z PROC NEAR			; CTBLAIChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLAIChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L159008
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L159008:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLAIChart@@UAEPAXI@Z ENDP				; CTBLAIChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLAIChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLAIChart@@UAE@XZ PROC NEAR			; CTBLAIChart::~CTBLAIChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLAIChart@@UAE@XZ ENDP				; CTBLAIChart::~CTBLAIChart
_TEXT	ENDS
PUBLIC	??0CTBLAICommand@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLAICommand::CTBLAICommand
PUBLIC	?GetNumCol@CTBLAICommand@@UAEHXZ		; CTBLAICommand::GetNumCol
PUBLIC	?BindColumns@CTBLAICommand@@UAEFXZ		; CTBLAICommand::BindColumns
PUBLIC	??_7CTBLAICommand@@6B@				; CTBLAICommand::`vftable'
PUBLIC	??_GCTBLAICommand@@UAEPAXI@Z			; CTBLAICommand::`scalar deleting destructor'
PUBLIC	??_C@_0CN@KGIIFNGI@SELECT?5?7dwCmdID?0?5?7bCmdType?5?7FROM@ ; `string'
EXTRN	??_ECTBLAICommand@@UAEPAXI@Z:NEAR		; CTBLAICommand::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T159191 DD	0ffffffffH
	DD	FLAT:$L159017
$T159188 DD	019930520H
	DD	01H
	DD	FLAT:$T159191
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CN@KGIIFNGI@SELECT?5?7dwCmdID?0?5?7bCmdType?5?7FROM@
CONST	SEGMENT
??_C@_0CN@KGIIFNGI@SELECT?5?7dwCmdID?0?5?7bCmdType?5?7FROM@ DB 'SELECT ', 09H
	DB	'dwCmdID, ', 09H, 'bCmdType ', 09H, 'FROM TAICMDCHART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLAICommand@@6B@
CONST	SEGMENT
??_7CTBLAICommand@@6B@ DD FLAT:??_ECTBLAICommand@@UAEPAXI@Z ; CTBLAICommand::`vftable'
	DD	FLAT:?GetNumCol@CTBLAICommand@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLAICommand@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLAICommand@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T159016 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLAICommand@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLAICommand::CTBLAICommand, COMDAT
; _this$ = ecx

; 394  : 	FROM TAICMDCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLAICommand@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CN@KGIIFNGI@SELECT?5?7dwCmdID?0?5?7bCmdType?5?7FROM@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T159016[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLAICommand@@6B@
  0005e	72 0d		 jb	 SHORT $L159189
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L159189:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L159017:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLAICommand@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159188
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLAICommand@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLAICommand::CTBLAICommand
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLAICommand@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLAICommand@@UAEHXZ PROC NEAR		; CTBLAICommand::GetNumCol, COMDAT
; _this$ = ecx

; 396  : BEGIN_COLUMN(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumCol@CTBLAICommand@@UAEHXZ ENDP			; CTBLAICommand::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLAICommand@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLAICommand@@UAEFXZ PROC NEAR		; CTBLAICommand::BindColumns, COMDAT
; _this$ = ecx

; 396  : BEGIN_COLUMN(2)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 397  : 	COLUMN_ENTRY(m_dwID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L129296
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 10		 jne	 SHORT $L129292
$L129296:

; 398  : 	COLUMN_ENTRY(m_bType)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L129292:
  0002c	5e		 pop	 esi

; 399  : END_COL()

  0002d	c3		 ret	 0
?BindColumns@CTBLAICommand@@UAEFXZ ENDP			; CTBLAICommand::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLAICommand@@UAE@XZ			; CTBLAICommand::~CTBLAICommand
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLAICommand@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLAICommand@@UAEPAXI@Z PROC NEAR			; CTBLAICommand::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLAICommand@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L159203
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L159203:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLAICommand@@UAEPAXI@Z ENDP			; CTBLAICommand::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLAICommand@@UAE@XZ
_TEXT	SEGMENT
??1CTBLAICommand@@UAE@XZ PROC NEAR			; CTBLAICommand::~CTBLAICommand, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLAICommand@@UAE@XZ ENDP				; CTBLAICommand::~CTBLAICommand
_TEXT	ENDS
PUBLIC	??0CTBLAICondition@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLAICondition::CTBLAICondition
PUBLIC	?GetNumCol@CTBLAICondition@@UAEHXZ		; CTBLAICondition::GetNumCol
PUBLIC	?BindColumns@CTBLAICondition@@UAEFXZ		; CTBLAICondition::BindColumns
PUBLIC	?GetNumParam@CTBLAICondition@@UAEHXZ		; CTBLAICondition::GetNumParam
PUBLIC	?BindParameters@CTBLAICondition@@UAEFH@Z	; CTBLAICondition::BindParameters
PUBLIC	??_7CTBLAICondition@@6B@			; CTBLAICondition::`vftable'
PUBLIC	??_GCTBLAICondition@@UAEPAXI@Z			; CTBLAICondition::`scalar deleting destructor'
PUBLIC	??_C@_0EM@LNGEJGC@SELECT?5?7dwConditionID?0?5?7bConditi@ ; `string'
EXTRN	??_ECTBLAICondition@@UAEPAXI@Z:NEAR		; CTBLAICondition::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T159386 DD	0ffffffffH
	DD	FLAT:$L159212
$T159383 DD	019930520H
	DD	01H
	DD	FLAT:$T159386
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EM@LNGEJGC@SELECT?5?7dwConditionID?0?5?7bConditi@
CONST	SEGMENT
??_C@_0EM@LNGEJGC@SELECT?5?7dwConditionID?0?5?7bConditi@ DB 'SELECT ', 09H
	DB	'dwConditionID, ', 09H, 'bConditionType ', 09H, 'FROM TAICONCH'
	DB	'ART ', 09H, 'WHERE dwCmdID = ?', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLAICondition@@6B@
CONST	SEGMENT
??_7CTBLAICondition@@6B@ DD FLAT:??_ECTBLAICondition@@UAEPAXI@Z ; CTBLAICondition::`vftable'
	DD	FLAT:?GetNumCol@CTBLAICondition@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLAICondition@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLAICondition@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLAICondition@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLAICondition@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T159211 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLAICondition@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLAICondition::CTBLAICondition, COMDAT
; _this$ = ecx

; 414  : 	WHERE dwCmdID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLAICondition@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EM@LNGEJGC@SELECT?5?7dwConditionID?0?5?7bConditi@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T159211[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLAICondition@@6B@
  0005e	72 0d		 jb	 SHORT $L159384
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L159384:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L159212:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLAICondition@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159383
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLAICondition@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLAICondition::CTBLAICondition
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLAICondition@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLAICondition@@UAEHXZ PROC NEAR		; CTBLAICondition::GetNumCol, COMDAT
; _this$ = ecx

; 416  : BEGIN_COLUMN(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumCol@CTBLAICondition@@UAEHXZ ENDP			; CTBLAICondition::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLAICondition@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLAICondition@@UAEFXZ PROC NEAR		; CTBLAICondition::BindColumns, COMDAT
; _this$ = ecx

; 416  : BEGIN_COLUMN(2)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 417  : 	COLUMN_ENTRY(m_dwID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L129343
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 10		 jne	 SHORT $L129339
$L129343:

; 418  : 	COLUMN_ENTRY(m_bType)

  0001c	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L129339:
  0002c	5e		 pop	 esi

; 419  : END_COL()

  0002d	c3		 ret	 0
?BindColumns@CTBLAICondition@@UAEFXZ ENDP		; CTBLAICondition::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLAICondition@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLAICondition@@UAEHXZ PROC NEAR		; CTBLAICondition::GetNumParam, COMDAT
; _this$ = ecx

; 421  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLAICondition@@UAEHXZ ENDP		; CTBLAICondition::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLAICondition@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLAICondition@@UAEFH@Z PROC NEAR	; CTBLAICondition::BindParameters, COMDAT
; _this$ = ecx

; 422  : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCmdID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L129349
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L129349:

; 423  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLAICondition@@UAEFH@Z ENDP		; CTBLAICondition::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLAICondition@@UAE@XZ			; CTBLAICondition::~CTBLAICondition
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLAICondition@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLAICondition@@UAEPAXI@Z PROC NEAR		; CTBLAICondition::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLAICondition@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L159404
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L159404:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLAICondition@@UAEPAXI@Z ENDP			; CTBLAICondition::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLAICondition@@UAE@XZ
_TEXT	SEGMENT
??1CTBLAICondition@@UAE@XZ PROC NEAR			; CTBLAICondition::~CTBLAICondition, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLAICondition@@UAE@XZ ENDP				; CTBLAICondition::~CTBLAICondition
_TEXT	ENDS
PUBLIC	??0CTBLMonster@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonster::CTBLMonster
PUBLIC	?GetNumCol@CTBLMonster@@UAEHXZ			; CTBLMonster::GetNumCol
PUBLIC	?BindColumns@CTBLMonster@@UAEFXZ		; CTBLMonster::BindColumns
PUBLIC	??_7CTBLMonster@@6B@				; CTBLMonster::`vftable'
PUBLIC	??_GCTBLMonster@@UAEPAXI@Z			; CTBLMonster::`scalar deleting destructor'
PUBLIC	??_C@_0BGI@IJGBKMBA@SELECT?5?7wID?0?5?7bClass?0?5?7wKind?0?5?7b@ ; `string'
EXTRN	??_ECTBLMonster@@UAEPAXI@Z:NEAR			; CTBLMonster::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T159587 DD	0ffffffffH
	DD	FLAT:$L159413
$T159584 DD	019930520H
	DD	01H
	DD	FLAT:$T159587
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BGI@IJGBKMBA@SELECT?5?7wID?0?5?7bClass?0?5?7wKind?0?5?7b@
CONST	SEGMENT
??_C@_0BGI@IJGBKMBA@SELECT?5?7wID?0?5?7bClass?0?5?7wKind?0?5?7b@ DB 'SELE'
	DB	'CT ', 09H, 'wID, ', 09H, 'bClass, ', 09H, 'wKind, ', 09H, 'bL'
	DB	'evel, ', 09H, 'bRace, ', 09H, 'bRoamProb, ', 09H, 'bAIType, ', 09H
	DB	'bRange, ', 09H, 'wChaseRange, ', 09H, 'bMoneyProb, ', 09H, 'd'
	DB	'wMinMoney, ', 09H, 'dwMaxMoney, ', 09H, 'bItemProb, ', 09H, 'b'
	DB	'DropCount, ', 09H, 'wExp, ', 09H, 'bRecallType, ', 09H, 'bCan'
	DB	'Select, ', 09H, 'bIsSelf, ', 09H, 'bCanAttack, ', 09H, 'bTame'
	DB	', ', 09H, 'bCall, ', 09H, 'bRemove, ', 09H, 'wTransSkillID, ', 09H
	DB	'fSize, ', 09H, 'bIsSpecial, ', 09H, 'wMonAttr, ', 09H, 'wSumm'
	DB	'onAttr, ', 09H, 'wSkill1, ', 09H, 'wSkill2, ', 09H, 'wSkill3,'
	DB	' ', 09H, 'wSkill4 ', 09H, 'FROM TMONSTERCHART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLMonster@@6B@
CONST	SEGMENT
??_7CTBLMonster@@6B@ DD FLAT:??_ECTBLMonster@@UAEPAXI@Z	; CTBLMonster::`vftable'
	DD	FLAT:?GetNumCol@CTBLMonster@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLMonster@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLMonster@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T159412 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLMonster@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLMonster::CTBLMonster, COMDAT
; _this$ = ecx

; 496  : 	FROM TMONSTERCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLMonster@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BGI@IJGBKMBA@SELECT?5?7wID?0?5?7bClass?0?5?7wKind?0?5?7b@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T159412[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLMonster@@6B@
  0005e	72 0d		 jb	 SHORT $L159585
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L159585:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L159413:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLMonster@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159584
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLMonster@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLMonster::CTBLMonster
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLMonster@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLMonster@@UAEHXZ PROC NEAR		; CTBLMonster::GetNumCol, COMDAT
; _this$ = ecx

; 498  : BEGIN_COLUMN(31)

  00000	b8 1f 00 00 00	 mov	 eax, 31			; 0000001fH
  00005	c3		 ret	 0
?GetNumCol@CTBLMonster@@UAEHXZ ENDP			; CTBLMonster::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonster@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLMonster@@UAEFXZ PROC NEAR		; CTBLMonster::BindColumns, COMDAT
; _this$ = ecx

; 498  : BEGIN_COLUMN(31)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 499  : 	COLUMN_ENTRY(m_wID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L129422
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 51 03 00
	00		 jne	 $L129418
$L129422:

; 500  : 	COLUMN_ENTRY(m_bClass)

  00020	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L129423
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 32 03 00
	00		 jne	 $L129418
$L129423:

; 501  : 	COLUMN_ENTRY(m_wKind)

  0003f	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L129424
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 13 03 00
	00		 jne	 $L129418
$L129424:

; 502  : 	COLUMN_ENTRY(m_bLevel)

  0005e	8d 86 32 0c 00
	00		 lea	 eax, DWORD PTR [esi+3122]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L129425
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 f4 02 00
	00		 jne	 $L129418
$L129425:

; 503  : 	COLUMN_ENTRY(m_bRace)

  0007d	8d 8e 33 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3123]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L129426
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 d5 02 00
	00		 jne	 $L129418
$L129426:

; 504  : 	COLUMN_ENTRY(m_bRoamProb)

  0009c	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L129427
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 b6 02 00
	00		 jne	 $L129418
$L129427:

; 505  : 	COLUMN_ENTRY(m_bAIType)

  000bb	8d 86 35 0c 00
	00		 lea	 eax, DWORD PTR [esi+3125]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 0a		 je	 SHORT $L129428
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	0f 85 97 02 00
	00		 jne	 $L129418
$L129428:

; 506  : 	COLUMN_ENTRY(m_bRange)

  000da	8d 8e 36 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3126]
  000e0	51		 push	 ecx
  000e1	6a 08		 push	 8
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ea	66 85 c0	 test	 ax, ax
  000ed	74 0a		 je	 SHORT $L129429
  000ef	66 3d 01 00	 cmp	 ax, 1
  000f3	0f 85 78 02 00
	00		 jne	 $L129418
$L129429:

; 507  : 	COLUMN_ENTRY(m_wChaseRange)

  000f9	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  000ff	52		 push	 edx
  00100	6a 09		 push	 9
  00102	8b ce		 mov	 ecx, esi
  00104	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00109	66 85 c0	 test	 ax, ax
  0010c	74 0a		 je	 SHORT $L129430
  0010e	66 3d 01 00	 cmp	 ax, 1
  00112	0f 85 59 02 00
	00		 jne	 $L129418
$L129430:

; 508  : 	COLUMN_ENTRY(m_bMoneyProb)

  00118	8d 86 3a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3130]
  0011e	50		 push	 eax
  0011f	6a 0a		 push	 10			; 0000000aH
  00121	8b ce		 mov	 ecx, esi
  00123	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00128	66 85 c0	 test	 ax, ax
  0012b	74 0a		 je	 SHORT $L129431
  0012d	66 3d 01 00	 cmp	 ax, 1
  00131	0f 85 3a 02 00
	00		 jne	 $L129418
$L129431:

; 509  : 	COLUMN_ENTRY(m_dwMinMoney)

  00137	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  0013d	51		 push	 ecx
  0013e	6a 0b		 push	 11			; 0000000bH
  00140	8b ce		 mov	 ecx, esi
  00142	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00147	66 85 c0	 test	 ax, ax
  0014a	74 0a		 je	 SHORT $L129432
  0014c	66 3d 01 00	 cmp	 ax, 1
  00150	0f 85 1b 02 00
	00		 jne	 $L129418
$L129432:

; 510  : 	COLUMN_ENTRY(m_dwMaxMoney)

  00156	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  0015c	52		 push	 edx
  0015d	6a 0c		 push	 12			; 0000000cH
  0015f	8b ce		 mov	 ecx, esi
  00161	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00166	66 85 c0	 test	 ax, ax
  00169	74 0a		 je	 SHORT $L129433
  0016b	66 3d 01 00	 cmp	 ax, 1
  0016f	0f 85 fc 01 00
	00		 jne	 $L129418
$L129433:

; 511  : 	COLUMN_ENTRY(m_bItemProb)

  00175	8d 86 44 0c 00
	00		 lea	 eax, DWORD PTR [esi+3140]
  0017b	50		 push	 eax
  0017c	6a 0d		 push	 13			; 0000000dH
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00185	66 85 c0	 test	 ax, ax
  00188	74 0a		 je	 SHORT $L129434
  0018a	66 3d 01 00	 cmp	 ax, 1
  0018e	0f 85 dd 01 00
	00		 jne	 $L129418
$L129434:

; 512  : 	COLUMN_ENTRY(m_bDropCount)

  00194	8d 8e 45 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3141]
  0019a	51		 push	 ecx
  0019b	6a 0e		 push	 14			; 0000000eH
  0019d	8b ce		 mov	 ecx, esi
  0019f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001a4	66 85 c0	 test	 ax, ax
  001a7	74 0a		 je	 SHORT $L129435
  001a9	66 3d 01 00	 cmp	 ax, 1
  001ad	0f 85 be 01 00
	00		 jne	 $L129418
$L129435:

; 513  : 	COLUMN_ENTRY(m_wExp)

  001b3	8d 96 46 0c 00
	00		 lea	 edx, DWORD PTR [esi+3142]
  001b9	52		 push	 edx
  001ba	6a 0f		 push	 15			; 0000000fH
  001bc	8b ce		 mov	 ecx, esi
  001be	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  001c3	66 85 c0	 test	 ax, ax
  001c6	74 0a		 je	 SHORT $L129436
  001c8	66 3d 01 00	 cmp	 ax, 1
  001cc	0f 85 9f 01 00
	00		 jne	 $L129418
$L129436:

; 514  : 	COLUMN_ENTRY(m_bRecallType)

  001d2	8d 86 48 0c 00
	00		 lea	 eax, DWORD PTR [esi+3144]
  001d8	50		 push	 eax
  001d9	6a 10		 push	 16			; 00000010H
  001db	8b ce		 mov	 ecx, esi
  001dd	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001e2	66 85 c0	 test	 ax, ax
  001e5	74 0a		 je	 SHORT $L129437
  001e7	66 3d 01 00	 cmp	 ax, 1
  001eb	0f 85 80 01 00
	00		 jne	 $L129418
$L129437:

; 515  : 	COLUMN_ENTRY(m_bCanSelect)

  001f1	8d 8e 49 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3145]
  001f7	51		 push	 ecx
  001f8	6a 11		 push	 17			; 00000011H
  001fa	8b ce		 mov	 ecx, esi
  001fc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00201	66 85 c0	 test	 ax, ax
  00204	74 0a		 je	 SHORT $L129438
  00206	66 3d 01 00	 cmp	 ax, 1
  0020a	0f 85 61 01 00
	00		 jne	 $L129418
$L129438:

; 516  : 	COLUMN_ENTRY(m_bIsSelf)

  00210	8d 96 37 0c 00
	00		 lea	 edx, DWORD PTR [esi+3127]
  00216	52		 push	 edx
  00217	6a 12		 push	 18			; 00000012H
  00219	8b ce		 mov	 ecx, esi
  0021b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00220	66 85 c0	 test	 ax, ax
  00223	74 0a		 je	 SHORT $L129439
  00225	66 3d 01 00	 cmp	 ax, 1
  00229	0f 85 42 01 00
	00		 jne	 $L129418
$L129439:

; 517  : 	COLUMN_ENTRY(m_bCanAttack)

  0022f	8d 86 4a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3146]
  00235	50		 push	 eax
  00236	6a 13		 push	 19			; 00000013H
  00238	8b ce		 mov	 ecx, esi
  0023a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0023f	66 85 c0	 test	 ax, ax
  00242	74 0a		 je	 SHORT $L129440
  00244	66 3d 01 00	 cmp	 ax, 1
  00248	0f 85 23 01 00
	00		 jne	 $L129418
$L129440:

; 518  : 	COLUMN_ENTRY(m_bTame)

  0024e	8d 8e 4b 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3147]
  00254	51		 push	 ecx
  00255	6a 14		 push	 20			; 00000014H
  00257	8b ce		 mov	 ecx, esi
  00259	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0025e	66 85 c0	 test	 ax, ax
  00261	74 0a		 je	 SHORT $L129441
  00263	66 3d 01 00	 cmp	 ax, 1
  00267	0f 85 04 01 00
	00		 jne	 $L129418
$L129441:

; 519  : 	COLUMN_ENTRY(m_bCall)

  0026d	8d 96 4c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3148]
  00273	52		 push	 edx
  00274	6a 15		 push	 21			; 00000015H
  00276	8b ce		 mov	 ecx, esi
  00278	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0027d	66 85 c0	 test	 ax, ax
  00280	74 0a		 je	 SHORT $L129442
  00282	66 3d 01 00	 cmp	 ax, 1
  00286	0f 85 e5 00 00
	00		 jne	 $L129418
$L129442:

; 520  : 	COLUMN_ENTRY(m_bRemove)

  0028c	8d 86 4d 0c 00
	00		 lea	 eax, DWORD PTR [esi+3149]
  00292	50		 push	 eax
  00293	6a 16		 push	 22			; 00000016H
  00295	8b ce		 mov	 ecx, esi
  00297	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0029c	66 85 c0	 test	 ax, ax
  0029f	74 0a		 je	 SHORT $L129443
  002a1	66 3d 01 00	 cmp	 ax, 1
  002a5	0f 85 c6 00 00
	00		 jne	 $L129418
$L129443:

; 521  : 	COLUMN_ENTRY(m_wTransSkillID)

  002ab	8d 8e 4e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3150]
  002b1	51		 push	 ecx
  002b2	6a 17		 push	 23			; 00000017H
  002b4	8b ce		 mov	 ecx, esi
  002b6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  002bb	66 85 c0	 test	 ax, ax
  002be	74 0a		 je	 SHORT $L129444
  002c0	66 3d 01 00	 cmp	 ax, 1
  002c4	0f 85 a7 00 00
	00		 jne	 $L129418
$L129444:

; 522  : 	COLUMN_ENTRY(m_fSize);

  002ca	8d 96 50 0c 00
	00		 lea	 edx, DWORD PTR [esi+3152]
  002d0	52		 push	 edx
  002d1	6a 18		 push	 24			; 00000018H
  002d3	8b ce		 mov	 ecx, esi
  002d5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  002da	66 85 c0	 test	 ax, ax
  002dd	74 0a		 je	 SHORT $L129445
  002df	66 3d 01 00	 cmp	 ax, 1
  002e3	0f 85 88 00 00
	00		 jne	 $L129418
$L129445:

; 523  : 	COLUMN_ENTRY(m_bIsSpecial);

  002e9	8d 86 54 0c 00
	00		 lea	 eax, DWORD PTR [esi+3156]
  002ef	50		 push	 eax
  002f0	6a 19		 push	 25			; 00000019H
  002f2	8b ce		 mov	 ecx, esi
  002f4	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  002f9	66 85 c0	 test	 ax, ax
  002fc	74 06		 je	 SHORT $L129446
  002fe	66 3d 01 00	 cmp	 ax, 1
  00302	75 6d		 jne	 SHORT $L129418
$L129446:

; 524  : 	COLUMN_ENTRY(m_wMonAttr);

  00304	8d 8e 56 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3158]
  0030a	51		 push	 ecx
  0030b	6a 1a		 push	 26			; 0000001aH
  0030d	8b ce		 mov	 ecx, esi
  0030f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00314	66 85 c0	 test	 ax, ax
  00317	74 06		 je	 SHORT $L129447
  00319	66 3d 01 00	 cmp	 ax, 1
  0031d	75 52		 jne	 SHORT $L129418
$L129447:
  0031f	53		 push	 ebx

; 525  : 	COLUMN_ENTRY(m_wSummonAttr);

  00320	8d 96 58 0c 00
	00		 lea	 edx, DWORD PTR [esi+3160]
  00326	52		 push	 edx
  00327	6a 1b		 push	 27			; 0000001bH
  00329	8b ce		 mov	 ecx, esi
  0032b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00330	66 85 c0	 test	 ax, ax
  00333	bb 1c 00 00 00	 mov	 ebx, 28			; 0000001cH
  00338	74 06		 je	 SHORT $L129448
  0033a	66 3d 01 00	 cmp	 ax, 1
  0033e	75 30		 jne	 SHORT $L159599
$L129448:
  00340	55		 push	 ebp
  00341	57		 push	 edi

; 526  : 	for(int i=0; i<4; i++)

  00342	33 ed		 xor	 ebp, ebp
  00344	8d be 5a 0c 00
	00		 lea	 edi, DWORD PTR [esi+3162]
  0034a	8d 9b 00 00 00
	00		 npad	 6
$L129450:

; 527  : 	{
; 528  : 		COLUMN_ENTRY(m_wSkill[i]);

  00350	57		 push	 edi
  00351	53		 push	 ebx
  00352	8b ce		 mov	 ecx, esi
  00354	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00359	43		 inc	 ebx
  0035a	66 85 c0	 test	 ax, ax
  0035d	74 06		 je	 SHORT $L129451
  0035f	66 3d 01 00	 cmp	 ax, 1
  00363	75 09		 jne	 SHORT $L159600
$L129451:

; 526  : 	for(int i=0; i<4; i++)

  00365	45		 inc	 ebp
  00366	83 c7 02	 add	 edi, 2
  00369	83 fd 04	 cmp	 ebp, 4
  0036c	7c e2		 jl	 SHORT $L129450
$L159600:
  0036e	5f		 pop	 edi
  0036f	5d		 pop	 ebp
$L159599:
  00370	5b		 pop	 ebx
$L129418:
  00371	5e		 pop	 esi

; 529  : 	}
; 530  : END_COL()

  00372	c3		 ret	 0
?BindColumns@CTBLMonster@@UAEFXZ ENDP			; CTBLMonster::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLMonster@@UAE@XZ				; CTBLMonster::~CTBLMonster
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLMonster@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLMonster@@UAEPAXI@Z PROC NEAR			; CTBLMonster::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLMonster@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L159605
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L159605:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLMonster@@UAEPAXI@Z ENDP				; CTBLMonster::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLMonster@@UAE@XZ
_TEXT	SEGMENT
??1CTBLMonster@@UAE@XZ PROC NEAR			; CTBLMonster::~CTBLMonster, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLMonster@@UAE@XZ ENDP				; CTBLMonster::~CTBLMonster
_TEXT	ENDS
PUBLIC	??0CTBLPet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLPet::CTBLPet
PUBLIC	?GetNumCol@CTBLPet@@UAEHXZ			; CTBLPet::GetNumCol
PUBLIC	?BindColumns@CTBLPet@@UAEFXZ			; CTBLPet::BindColumns
PUBLIC	??_7CTBLPet@@6B@				; CTBLPet::`vftable'
PUBLIC	??_GCTBLPet@@UAEPAXI@Z				; CTBLPet::`scalar deleting destructor'
PUBLIC	??_C@_0LL@HIACPJFN@SELECT?5?7?7?5?5wID?0?5?7?7?5?5bPetType?0?5?7?7@ ; `string'
EXTRN	??_ECTBLPet@@UAEPAXI@Z:NEAR			; CTBLPet::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T159788 DD	0ffffffffH
	DD	FLAT:$L159614
$T159785 DD	019930520H
	DD	01H
	DD	FLAT:$T159788
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0LL@HIACPJFN@SELECT?5?7?7?5?5wID?0?5?7?7?5?5bPetType?0?5?7?7@
CONST	SEGMENT
??_C@_0LL@HIACPJFN@SELECT?5?7?7?5?5wID?0?5?7?7?5?5bPetType?0?5?7?7@ DB 'S'
	DB	'ELECT ', 09H, 09H, '  wID, ', 09H, 09H, '  bPetType, ', 09H, 09H
	DB	'  bRace, ', 09H, 09H, '  wMonID, ', 09H, 09H, '  bRecallKind1'
	DB	', ', 09H, 09H, '  bRecallKind2, ', 09H, 09H, '  wRecallValue1'
	DB	', ', 09H, 09H, '  wRecallValue2, ', 09H, 09H, '  bConditionTy'
	DB	'pe, ', 09H, 09H, '  dwConditionValue ', 09H, 09H, '  FROM TPE'
	DB	'TCHART', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLPet@@6B@
CONST	SEGMENT
??_7CTBLPet@@6B@ DD FLAT:??_ECTBLPet@@UAEPAXI@Z		; CTBLPet::`vftable'
	DD	FLAT:?GetNumCol@CTBLPet@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLPet@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLPet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T159613 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLPet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLPet::CTBLPet, COMDAT
; _this$ = ecx

; 558  : 		  FROM TPETCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLPet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0LL@HIACPJFN@SELECT?5?7?7?5?5wID?0?5?7?7?5?5bPetType?0?5?7?7@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T159613[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLPet@@6B@
  0005e	72 0d		 jb	 SHORT $L159786
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L159786:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L159614:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLPet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159785
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLPet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLPet::CTBLPet
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLPet@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLPet@@UAEHXZ PROC NEAR			; CTBLPet::GetNumCol, COMDAT
; _this$ = ecx

; 560  : BEGIN_COLUMN(9)

  00000	b8 09 00 00 00	 mov	 eax, 9
  00005	c3		 ret	 0
?GetNumCol@CTBLPet@@UAEHXZ ENDP				; CTBLPet::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLPet@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLPet@@UAEFXZ PROC NEAR			; CTBLPet::BindColumns, COMDAT
; _this$ = ecx

; 560  : BEGIN_COLUMN(9)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 561  : 	COLUMN_ENTRY(m_wID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L129503
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 f4 00 00
	00		 jne	 $L129499
$L129503:

; 562  : 	COLUMN_ENTRY(m_bPetType)

  00020	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L129504
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 d5 00 00
	00		 jne	 $L129499
$L129504:

; 563  : 	COLUMN_ENTRY(m_bRace)

  0003f	8d 96 2f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3119]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L129505
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 b6 00 00
	00		 jne	 $L129499
$L129505:

; 564  : 	COLUMN_ENTRY(m_wMonID)

  0005e	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L129506
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 97 00 00
	00		 jne	 $L129499
$L129506:

; 565  : 	COLUMN_ENTRY(m_bRecallKind1)

  0007d	8d 8e 32 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3122]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 06		 je	 SHORT $L129507
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	75 7c		 jne	 SHORT $L129499
$L129507:

; 566  : 	COLUMN_ENTRY(m_bRecallKind2)

  00098	8d 96 33 0c 00
	00		 lea	 edx, DWORD PTR [esi+3123]
  0009e	52		 push	 edx
  0009f	6a 06		 push	 6
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000a8	66 85 c0	 test	 ax, ax
  000ab	74 06		 je	 SHORT $L129508
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	75 61		 jne	 SHORT $L129499
$L129508:

; 567  : 	COLUMN_ENTRY(m_wRecallValue1)

  000b3	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  000b9	50		 push	 eax
  000ba	6a 07		 push	 7
  000bc	8b ce		 mov	 ecx, esi
  000be	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000c3	66 85 c0	 test	 ax, ax
  000c6	74 06		 je	 SHORT $L129509
  000c8	66 3d 01 00	 cmp	 ax, 1
  000cc	75 46		 jne	 SHORT $L129499
$L129509:

; 568  : 	COLUMN_ENTRY(m_wRecallValue2)

  000ce	8d 8e 36 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3126]
  000d4	51		 push	 ecx
  000d5	6a 08		 push	 8
  000d7	8b ce		 mov	 ecx, esi
  000d9	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000de	66 85 c0	 test	 ax, ax
  000e1	74 06		 je	 SHORT $L129510
  000e3	66 3d 01 00	 cmp	 ax, 1
  000e7	75 2b		 jne	 SHORT $L129499
$L129510:

; 569  : 	COLUMN_ENTRY(m_bConditionType)

  000e9	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  000ef	52		 push	 edx
  000f0	6a 09		 push	 9
  000f2	8b ce		 mov	 ecx, esi
  000f4	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000f9	66 85 c0	 test	 ax, ax
  000fc	74 06		 je	 SHORT $L129511
  000fe	66 3d 01 00	 cmp	 ax, 1
  00102	75 10		 jne	 SHORT $L129499
$L129511:

; 570  : 	COLUMN_ENTRY(m_dwConditionValue)

  00104	8d 86 3c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3132]
  0010a	50		 push	 eax
  0010b	6a 0a		 push	 10			; 0000000aH
  0010d	8b ce		 mov	 ecx, esi
  0010f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L129499:
  00114	5e		 pop	 esi

; 571  : END_COL()

  00115	c3		 ret	 0
?BindColumns@CTBLPet@@UAEFXZ ENDP			; CTBLPet::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLPet@@UAE@XZ				; CTBLPet::~CTBLPet
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLPet@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLPet@@UAEPAXI@Z PROC NEAR			; CTBLPet::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLPet@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L159800
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L159800:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLPet@@UAEPAXI@Z ENDP				; CTBLPet::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLPet@@UAE@XZ
_TEXT	SEGMENT
??1CTBLPet@@UAE@XZ PROC NEAR				; CTBLPet::~CTBLPet, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLPet@@UAE@XZ ENDP					; CTBLPet::~CTBLPet
_TEXT	ENDS
PUBLIC	??0CTBLMonParty@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonParty::CTBLMonParty
PUBLIC	?GetNumCol@CTBLMonParty@@UAEHXZ			; CTBLMonParty::GetNumCol
PUBLIC	?BindColumns@CTBLMonParty@@UAEFXZ		; CTBLMonParty::BindColumns
PUBLIC	?GetNumParam@CTBLMonParty@@UAEHXZ		; CTBLMonParty::GetNumParam
PUBLIC	?BindParameters@CTBLMonParty@@UAEFH@Z		; CTBLMonParty::BindParameters
PUBLIC	??_7CTBLMonParty@@6B@				; CTBLMonParty::`vftable'
PUBLIC	??_GCTBLMonParty@@UAEPAXI@Z			; CTBLMonParty::`scalar deleting destructor'
PUBLIC	??_C@_0DC@BCPHBOJJ@SELECT?5wID?5FROM?5TMONSPAWNCHART?5W@ ; `string'
EXTRN	??_ECTBLMonParty@@UAEPAXI@Z:NEAR		; CTBLMonParty::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T159983 DD	0ffffffffH
	DD	FLAT:$L159809
$T159980 DD	019930520H
	DD	01H
	DD	FLAT:$T159983
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DC@BCPHBOJJ@SELECT?5wID?5FROM?5TMONSPAWNCHART?5W@
CONST	SEGMENT
??_C@_0DC@BCPHBOJJ@SELECT?5wID?5FROM?5TMONSPAWNCHART?5W@ DB 'SELECT wID F'
	DB	'ROM TMONSPAWNCHART WHERE wPartyID = ?', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLMonParty@@6B@
CONST	SEGMENT
??_7CTBLMonParty@@6B@ DD FLAT:??_ECTBLMonParty@@UAEPAXI@Z ; CTBLMonParty::`vftable'
	DD	FLAT:?GetNumCol@CTBLMonParty@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLMonParty@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLMonParty@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLMonParty@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLMonParty@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T159808 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLMonParty@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLMonParty::CTBLMonParty, COMDAT
; _this$ = ecx

; 580  : DEF_QUERY( CTBLMonParty, _T("SELECT wID FROM TMONSPAWNCHART WHERE wPartyID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLMonParty@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DC@BCPHBOJJ@SELECT?5wID?5FROM?5TMONSPAWNCHART?5W@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T159808[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLMonParty@@6B@
  0005e	72 0d		 jb	 SHORT $L159981
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L159981:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L159809:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLMonParty@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T159980
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLMonParty@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLMonParty::CTBLMonParty
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLMonParty@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLMonParty@@UAEHXZ PROC NEAR		; CTBLMonParty::GetNumCol, COMDAT
; _this$ = ecx

; 582  : BEGIN_COLUMN(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumCol@CTBLMonParty@@UAEHXZ ENDP			; CTBLMonParty::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonParty@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLMonParty@@UAEFXZ PROC NEAR		; CTBLMonParty::BindColumns, COMDAT
; _this$ = ecx

; 583  : 	COLUMN_ENTRY(m_wSpawnID)

  00000	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00006	50		 push	 eax
  00007	6a 01		 push	 1
  00009	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol

; 584  : END_COL()

  0000e	c3		 ret	 0
?BindColumns@CTBLMonParty@@UAEFXZ ENDP			; CTBLMonParty::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLMonParty@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLMonParty@@UAEHXZ PROC NEAR		; CTBLMonParty::GetNumParam, COMDAT
; _this$ = ecx

; 586  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLMonParty@@UAEHXZ ENDP			; CTBLMonParty::GetNumParam
_TEXT	ENDS
EXTRN	?BindParam@CSqlBase@@QAEFFFPAG@Z:NEAR		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParameters@CTBLMonParty@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLMonParty@@UAEFH@Z PROC NEAR		; CTBLMonParty::BindParameters, COMDAT
; _this$ = ecx

; 587  : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wPartyID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L129562
  00010	8d 81 2e 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3118]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L129562:

; 588  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLMonParty@@UAEFH@Z ENDP		; CTBLMonParty::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLMonParty@@UAE@XZ				; CTBLMonParty::~CTBLMonParty
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLMonParty@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLMonParty@@UAEPAXI@Z PROC NEAR			; CTBLMonParty::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLMonParty@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L160001
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L160001:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLMonParty@@UAEPAXI@Z ENDP			; CTBLMonParty::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLMonParty@@UAE@XZ
_TEXT	SEGMENT
??1CTBLMonParty@@UAE@XZ PROC NEAR			; CTBLMonParty::~CTBLMonParty, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLMonParty@@UAE@XZ ENDP				; CTBLMonParty::~CTBLMonParty
_TEXT	ENDS
PUBLIC	??0CTBLMonSpawn@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonSpawn::CTBLMonSpawn
PUBLIC	?GetNumCol@CTBLMonSpawn@@UAEHXZ			; CTBLMonSpawn::GetNumCol
PUBLIC	?BindColumns@CTBLMonSpawn@@UAEFXZ		; CTBLMonSpawn::BindColumns
PUBLIC	?GetNumParam@CTBLMonSpawn@@UAEHXZ		; CTBLMonSpawn::GetNumParam
PUBLIC	?BindParameters@CTBLMonSpawn@@UAEFH@Z		; CTBLMonSpawn::BindParameters
PUBLIC	??_7CTBLMonSpawn@@6B@				; CTBLMonSpawn::`vftable'
PUBLIC	??_GCTBLMonSpawn@@UAEPAXI@Z			; CTBLMonSpawn::`scalar deleting destructor'
PUBLIC	??_C@_0BJD@PGELOGEA@SELECT?5?7wID?0?5?7wGroup?0?5?7wMapID?0?5?7@ ; `string'
EXTRN	??_ECTBLMonSpawn@@UAEPAXI@Z:NEAR		; CTBLMonSpawn::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T160184 DD	0ffffffffH
	DD	FLAT:$L160010
$T160181 DD	019930520H
	DD	01H
	DD	FLAT:$T160184
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BJD@PGELOGEA@SELECT?5?7wID?0?5?7wGroup?0?5?7wMapID?0?5?7@
CONST	SEGMENT
??_C@_0BJD@PGELOGEA@SELECT?5?7wID?0?5?7wGroup?0?5?7wMapID?0?5?7@ DB 'SELE'
	DB	'CT ', 09H, 'wID, ', 09H, 'wGroup, ', 09H, 'wMapID, ', 09H, 'w'
	DB	'LocalID, ', 09H, 'fPosX, ', 09H, 'fPosY, ', 09H, 'fPosZ, ', 09H
	DB	'wDir, ', 09H, 'bCountry, ', 09H, 'bCount, ', 09H, 'bRange, ', 09H
	DB	'bArea, ', 09H, 'bLink, ', 09H, 'bProb, ', 09H, 'bRoamType, ', 09H
	DB	'dwRegion, ', 09H, 'dwDelay, ', 09H, 'bEvent, ', 09H, 'wPartyI'
	DB	'D ', 09H, 'FROM TMONSPAWNCHART ', 09H, 'WHERE wMapID IN (', 09H
	DB	'SELECT wMapID ', 09H, 'FROM TSVRCHART ', 09H, 'WHERE bServerI'
	DB	'D = ?) AND ', 09H, 'CAST(fPosZ / 1024 AS SMALLINT) * 256 + CA'
	DB	'ST(fPosX / 1024 AS SMALLINT) IN (', 09H, 'SELECT wUnitID ', 09H
	DB	'FROM TSVRCHART ', 09H, 'WHERE bServerID = ?)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLMonSpawn@@6B@
CONST	SEGMENT
??_7CTBLMonSpawn@@6B@ DD FLAT:??_ECTBLMonSpawn@@UAEPAXI@Z ; CTBLMonSpawn::`vftable'
	DD	FLAT:?GetNumCol@CTBLMonSpawn@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLMonSpawn@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLMonSpawn@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLMonSpawn@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLMonSpawn@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T160009 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLMonSpawn@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLMonSpawn::CTBLMonSpawn, COMDAT
; _this$ = ecx

; 646  : 	WHERE bServerID = ?)"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLMonSpawn@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJD@PGELOGEA@SELECT?5?7wID?0?5?7wGroup?0?5?7wMapID?0?5?7@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T160009[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLMonSpawn@@6B@
  0005e	72 0d		 jb	 SHORT $L160182
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L160182:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L160010:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLMonSpawn@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160181
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLMonSpawn@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLMonSpawn::CTBLMonSpawn
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLMonSpawn@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLMonSpawn@@UAEHXZ PROC NEAR		; CTBLMonSpawn::GetNumCol, COMDAT
; _this$ = ecx

; 648  : BEGIN_COLUMN(19)

  00000	b8 13 00 00 00	 mov	 eax, 19			; 00000013H
  00005	c3		 ret	 0
?GetNumCol@CTBLMonSpawn@@UAEHXZ ENDP			; CTBLMonSpawn::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonSpawn@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLMonSpawn@@UAEFXZ PROC NEAR		; CTBLMonSpawn::BindColumns, COMDAT
; _this$ = ecx

; 648  : BEGIN_COLUMN(19)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 649  : 	COLUMN_ENTRY(m_wID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L129630
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 0b 02 00
	00		 jne	 $L129626
$L129630:

; 650  : 	COLUMN_ENTRY(m_wGroup)

  00020	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L129631
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 ec 01 00
	00		 jne	 $L129626
$L129631:

; 651  : 	COLUMN_ENTRY(m_wMapID)

  0003f	8d 96 32 0c 00
	00		 lea	 edx, DWORD PTR [esi+3122]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L129632
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 cd 01 00
	00		 jne	 $L129626
$L129632:

; 652  : 	COLUMN_ENTRY(m_wLocalID)

  0005e	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L129633
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 ae 01 00
	00		 jne	 $L129626
$L129633:

; 653  : 	COLUMN_ENTRY(m_fPosX)

  0007d	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L129634
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 8f 01 00
	00		 jne	 $L129626
$L129634:

; 654  : 	COLUMN_ENTRY(m_fPosY)

  0009c	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L129635
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 70 01 00
	00		 jne	 $L129626
$L129635:

; 655  : 	COLUMN_ENTRY(m_fPosZ)

  000bb	8d 86 3c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3132]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 0a		 je	 SHORT $L129636
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	0f 85 51 01 00
	00		 jne	 $L129626
$L129636:

; 656  : 	COLUMN_ENTRY(m_wDir)

  000da	8d 8e 40 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3136]
  000e0	51		 push	 ecx
  000e1	6a 08		 push	 8
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000ea	66 85 c0	 test	 ax, ax
  000ed	74 0a		 je	 SHORT $L129637
  000ef	66 3d 01 00	 cmp	 ax, 1
  000f3	0f 85 32 01 00
	00		 jne	 $L129626
$L129637:

; 657  : 	COLUMN_ENTRY(m_bCountry)

  000f9	8d 96 49 0c 00
	00		 lea	 edx, DWORD PTR [esi+3145]
  000ff	52		 push	 edx
  00100	6a 09		 push	 9
  00102	8b ce		 mov	 ecx, esi
  00104	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00109	66 85 c0	 test	 ax, ax
  0010c	74 0a		 je	 SHORT $L129638
  0010e	66 3d 01 00	 cmp	 ax, 1
  00112	0f 85 13 01 00
	00		 jne	 $L129626
$L129638:

; 658  : 	COLUMN_ENTRY(m_bCount)

  00118	8d 86 43 0c 00
	00		 lea	 eax, DWORD PTR [esi+3139]
  0011e	50		 push	 eax
  0011f	6a 0a		 push	 10			; 0000000aH
  00121	8b ce		 mov	 ecx, esi
  00123	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00128	66 85 c0	 test	 ax, ax
  0012b	74 0a		 je	 SHORT $L129639
  0012d	66 3d 01 00	 cmp	 ax, 1
  00131	0f 85 f4 00 00
	00		 jne	 $L129626
$L129639:

; 659  : 	COLUMN_ENTRY(m_bRange)

  00137	8d 8e 44 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3140]
  0013d	51		 push	 ecx
  0013e	6a 0b		 push	 11			; 0000000bH
  00140	8b ce		 mov	 ecx, esi
  00142	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00147	66 85 c0	 test	 ax, ax
  0014a	74 0a		 je	 SHORT $L129640
  0014c	66 3d 01 00	 cmp	 ax, 1
  00150	0f 85 d5 00 00
	00		 jne	 $L129626
$L129640:

; 660  : 	COLUMN_ENTRY(m_bArea)

  00156	8d 96 45 0c 00
	00		 lea	 edx, DWORD PTR [esi+3141]
  0015c	52		 push	 edx
  0015d	6a 0c		 push	 12			; 0000000cH
  0015f	8b ce		 mov	 ecx, esi
  00161	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00166	66 85 c0	 test	 ax, ax
  00169	74 0a		 je	 SHORT $L129641
  0016b	66 3d 01 00	 cmp	 ax, 1
  0016f	0f 85 b6 00 00
	00		 jne	 $L129626
$L129641:

; 661  : 	COLUMN_ENTRY(m_bLink)

  00175	8d 86 46 0c 00
	00		 lea	 eax, DWORD PTR [esi+3142]
  0017b	50		 push	 eax
  0017c	6a 0d		 push	 13			; 0000000dH
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00185	66 85 c0	 test	 ax, ax
  00188	74 0a		 je	 SHORT $L129642
  0018a	66 3d 01 00	 cmp	 ax, 1
  0018e	0f 85 97 00 00
	00		 jne	 $L129626
$L129642:

; 662  : 	COLUMN_ENTRY(m_bProb)

  00194	8d 8e 47 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3143]
  0019a	51		 push	 ecx
  0019b	6a 0e		 push	 14			; 0000000eH
  0019d	8b ce		 mov	 ecx, esi
  0019f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001a4	66 85 c0	 test	 ax, ax
  001a7	74 06		 je	 SHORT $L129643
  001a9	66 3d 01 00	 cmp	 ax, 1
  001ad	75 7c		 jne	 SHORT $L129626
$L129643:

; 663  : 	COLUMN_ENTRY(m_bRoamType)

  001af	8d 96 48 0c 00
	00		 lea	 edx, DWORD PTR [esi+3144]
  001b5	52		 push	 edx
  001b6	6a 0f		 push	 15			; 0000000fH
  001b8	8b ce		 mov	 ecx, esi
  001ba	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001bf	66 85 c0	 test	 ax, ax
  001c2	74 06		 je	 SHORT $L129644
  001c4	66 3d 01 00	 cmp	 ax, 1
  001c8	75 61		 jne	 SHORT $L129626
$L129644:

; 664  : 	COLUMN_ENTRY(m_dwRegion)

  001ca	8d 86 4c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3148]
  001d0	50		 push	 eax
  001d1	6a 10		 push	 16			; 00000010H
  001d3	8b ce		 mov	 ecx, esi
  001d5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  001da	66 85 c0	 test	 ax, ax
  001dd	74 06		 je	 SHORT $L129645
  001df	66 3d 01 00	 cmp	 ax, 1
  001e3	75 46		 jne	 SHORT $L129626
$L129645:

; 665  : 	COLUMN_ENTRY(m_dwDelay)

  001e5	8d 8e 50 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3152]
  001eb	51		 push	 ecx
  001ec	6a 11		 push	 17			; 00000011H
  001ee	8b ce		 mov	 ecx, esi
  001f0	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  001f5	66 85 c0	 test	 ax, ax
  001f8	74 06		 je	 SHORT $L129646
  001fa	66 3d 01 00	 cmp	 ax, 1
  001fe	75 2b		 jne	 SHORT $L129626
$L129646:

; 666  : 	COLUMN_ENTRY(m_bEvent)

  00200	8d 96 54 0c 00
	00		 lea	 edx, DWORD PTR [esi+3156]
  00206	52		 push	 edx
  00207	6a 12		 push	 18			; 00000012H
  00209	8b ce		 mov	 ecx, esi
  0020b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00210	66 85 c0	 test	 ax, ax
  00213	74 06		 je	 SHORT $L129647
  00215	66 3d 01 00	 cmp	 ax, 1
  00219	75 10		 jne	 SHORT $L129626
$L129647:

; 667  : 	COLUMN_ENTRY(m_wPartyID)

  0021b	8d 86 4a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3146]
  00221	50		 push	 eax
  00222	6a 13		 push	 19			; 00000013H
  00224	8b ce		 mov	 ecx, esi
  00226	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
$L129626:
  0022b	5e		 pop	 esi

; 668  : END_COL()

  0022c	c3		 ret	 0
?BindColumns@CTBLMonSpawn@@UAEFXZ ENDP			; CTBLMonSpawn::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLMonSpawn@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLMonSpawn@@UAEHXZ PROC NEAR		; CTBLMonSpawn::GetNumParam, COMDAT
; _this$ = ecx

; 670  : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CTBLMonSpawn@@UAEHXZ ENDP			; CTBLMonSpawn::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLMonSpawn@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLMonSpawn@@UAEFH@Z PROC NEAR		; CTBLMonSpawn::BindParameters, COMDAT
; _this$ = ecx

; 670  : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 671  : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bServerID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L129658
  00014	8d 86 42 0c 00
	00		 lea	 eax, DWORD PTR [esi+3138]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L129658
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L129653
$L129658:

; 672  : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bServerID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L129653
  0003d	8d 8e 42 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3138]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L129653:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 673  : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CTBLMonSpawn@@UAEFH@Z ENDP		; CTBLMonSpawn::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLMonSpawn@@UAE@XZ				; CTBLMonSpawn::~CTBLMonSpawn
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLMonSpawn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLMonSpawn@@UAEPAXI@Z PROC NEAR			; CTBLMonSpawn::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLMonSpawn@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L160202
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L160202:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLMonSpawn@@UAEPAXI@Z ENDP			; CTBLMonSpawn::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLMonSpawn@@UAE@XZ
_TEXT	SEGMENT
??1CTBLMonSpawn@@UAE@XZ PROC NEAR			; CTBLMonSpawn::~CTBLMonSpawn, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLMonSpawn@@UAE@XZ ENDP				; CTBLMonSpawn::~CTBLMonSpawn
_TEXT	ENDS
PUBLIC	??0CTBLCastleTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCastleTable::CTBLCastleTable
PUBLIC	?GetNumCol@CTBLCastleTable@@UAEHXZ		; CTBLCastleTable::GetNumCol
PUBLIC	?BindColumns@CTBLCastleTable@@UAEFXZ		; CTBLCastleTable::BindColumns
PUBLIC	??_7CTBLCastleTable@@6B@			; CTBLCastleTable::`vftable'
PUBLIC	??_GCTBLCastleTable@@UAEPAXI@Z			; CTBLCastleTable::`scalar deleting destructor'
PUBLIC	??_C@_0BAJ@NFJDJNKL@SELECT?5?7TCASTLETABLE?4wCastle?0?5?7T@ ; `string'
EXTRN	??_ECTBLCastleTable@@UAEPAXI@Z:NEAR		; CTBLCastleTable::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T160385 DD	0ffffffffH
	DD	FLAT:$L160211
$T160382 DD	019930520H
	DD	01H
	DD	FLAT:$T160385
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BAJ@NFJDJNKL@SELECT?5?7TCASTLETABLE?4wCastle?0?5?7T@
CONST	SEGMENT
??_C@_0BAJ@NFJDJNKL@SELECT?5?7TCASTLETABLE?4wCastle?0?5?7T@ DB 'SELECT ', 09H
	DB	'TCASTLETABLE.wCastle, ', 09H, 'TCASTLETABLE.bCountry, ', 09H, 'T'
	DB	'CASTLETABLE.dwGuildID, ', 09H, 'TGUILDTABLE.szName, ', 09H, 'T'
	DB	'CASTLETABLE.dateWarTime, ', 09H, 'TCASTLETABLE.szHero, ', 09H
	DB	'TCASTLETABLE.dateHero ', 09H, 'FROM TCASTLETABLE LEFT OUTER J'
	DB	'OIN TGUILDTABLE ', 09H, 'ON TCASTLETABLE.dwGuildID = TGUILDTA'
	DB	'BLE.dwID', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLCastleTable@@6B@
CONST	SEGMENT
??_7CTBLCastleTable@@6B@ DD FLAT:??_ECTBLCastleTable@@UAEPAXI@Z ; CTBLCastleTable::`vftable'
	DD	FLAT:?GetNumCol@CTBLCastleTable@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLCastleTable@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLCastleTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T160210 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLCastleTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLCastleTable::CTBLCastleTable, COMDAT
; _this$ = ecx

; 696  : 	ON TCASTLETABLE.dwGuildID = TGUILDTABLE.dwID"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLCastleTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BAJ@NFJDJNKL@SELECT?5?7TCASTLETABLE?4wCastle?0?5?7T@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T160210[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLCastleTable@@6B@
  0005e	72 0d		 jb	 SHORT $L160383
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L160383:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L160211:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLCastleTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160382
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLCastleTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLCastleTable::CTBLCastleTable
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLCastleTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLCastleTable@@UAEHXZ PROC NEAR		; CTBLCastleTable::GetNumCol, COMDAT
; _this$ = ecx

; 698  : BEGIN_COLUMN(7)

  00000	b8 07 00 00 00	 mov	 eax, 7
  00005	c3		 ret	 0
?GetNumCol@CTBLCastleTable@@UAEHXZ ENDP			; CTBLCastleTable::GetNumCol
_TEXT	ENDS
EXTRN	?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z:NEAR ; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindColumns@CTBLCastleTable@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLCastleTable@@UAEFXZ PROC NEAR		; CTBLCastleTable::BindColumns, COMDAT
; _this$ = ecx

; 698  : BEGIN_COLUMN(7)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 699  : 	COLUMN_ENTRY(m_wCastle)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L129707
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 9f 00 00
	00		 jne	 $L129703
$L129707:

; 700  : 	COLUMN_ENTRY(m_bCountry)

  00020	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L129708
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 80 00 00
	00		 jne	 $L129703
$L129708:

; 701  : 	COLUMN_ENTRY(m_dwGuild)

  0003f	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L129709
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 65		 jne	 SHORT $L129703
$L129709:

; 702  : 	COLUMN_ENTRY_STR(m_szGuildName)

  0005a	6a 33		 push	 51			; 00000033H
  0005c	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  00062	50		 push	 eax
  00063	6a 04		 push	 4
  00065	8b ce		 mov	 ecx, esi
  00067	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  0006c	66 85 c0	 test	 ax, ax
  0006f	74 06		 je	 SHORT $L129710
  00071	66 3d 01 00	 cmp	 ax, 1
  00075	75 48		 jne	 SHORT $L129703
$L129710:

; 703  : 	COLUMN_ENTRY(m_dateWarTime)

  00077	8d 8e 68 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3176]
  0007d	51		 push	 ecx
  0007e	6a 05		 push	 5
  00080	8b ce		 mov	 ecx, esi
  00082	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
  00087	66 85 c0	 test	 ax, ax
  0008a	74 06		 je	 SHORT $L129711
  0008c	66 3d 01 00	 cmp	 ax, 1
  00090	75 2d		 jne	 SHORT $L129703
$L129711:

; 704  : 	COLUMN_ENTRY_STR(m_szHero)

  00092	6a 33		 push	 51			; 00000033H
  00094	8d 96 78 0c 00
	00		 lea	 edx, DWORD PTR [esi+3192]
  0009a	52		 push	 edx
  0009b	6a 06		 push	 6
  0009d	8b ce		 mov	 ecx, esi
  0009f	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  000a4	66 85 c0	 test	 ax, ax
  000a7	74 06		 je	 SHORT $L129712
  000a9	66 3d 01 00	 cmp	 ax, 1
  000ad	75 10		 jne	 SHORT $L129703
$L129712:

; 705  : 	COLUMN_ENTRY(m_dateHero)

  000af	8d 86 ac 0c 00
	00		 lea	 eax, DWORD PTR [esi+3244]
  000b5	50		 push	 eax
  000b6	6a 07		 push	 7
  000b8	8b ce		 mov	 ecx, esi
  000ba	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
$L129703:
  000bf	5e		 pop	 esi

; 706  : END_COL()

  000c0	c3		 ret	 0
?BindColumns@CTBLCastleTable@@UAEFXZ ENDP		; CTBLCastleTable::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLCastleTable@@UAE@XZ			; CTBLCastleTable::~CTBLCastleTable
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLCastleTable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLCastleTable@@UAEPAXI@Z PROC NEAR		; CTBLCastleTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLCastleTable@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L160397
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L160397:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLCastleTable@@UAEPAXI@Z ENDP			; CTBLCastleTable::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLCastleTable@@UAE@XZ
_TEXT	SEGMENT
??1CTBLCastleTable@@UAE@XZ PROC NEAR			; CTBLCastleTable::~CTBLCastleTable, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLCastleTable@@UAE@XZ ENDP				; CTBLCastleTable::~CTBLCastleTable
_TEXT	ENDS
PUBLIC	??0CTBLBattleZoneChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLBattleZoneChart::CTBLBattleZoneChart
PUBLIC	?GetNumCol@CTBLBattleZoneChart@@UAEHXZ		; CTBLBattleZoneChart::GetNumCol
PUBLIC	?BindColumns@CTBLBattleZoneChart@@UAEFXZ	; CTBLBattleZoneChart::BindColumns
PUBLIC	??_7CTBLBattleZoneChart@@6B@			; CTBLBattleZoneChart::`vftable'
PUBLIC	??_GCTBLBattleZoneChart@@UAEPAXI@Z		; CTBLBattleZoneChart::`scalar deleting destructor'
PUBLIC	??_C@_0PO@DNEJDEGL@SELECT?5?7wID?0?5?7szName?0?5?7wMapID?0?5?7@ ; `string'
EXTRN	??_ECTBLBattleZoneChart@@UAEPAXI@Z:NEAR		; CTBLBattleZoneChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T160580 DD	0ffffffffH
	DD	FLAT:$L160406
$T160577 DD	019930520H
	DD	01H
	DD	FLAT:$T160580
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0PO@DNEJDEGL@SELECT?5?7wID?0?5?7szName?0?5?7wMapID?0?5?7@
CONST	SEGMENT
??_C@_0PO@DNEJDEGL@SELECT?5?7wID?0?5?7szName?0?5?7wMapID?0?5?7@ DB 'SELEC'
	DB	'T ', 09H, 'wID, ', 09H, 'szName, ', 09H, 'wMapID, ', 09H, 'wC'
	DB	'astle, ', 09H, 'wBossSpawnID, ', 09H, 'wLGateKeeperSpawnID, ', 09H
	DB	'wRGateKeeperSpawnID, ', 09H, 'wCGateKeeperSpawnID, ', 09H, 'd'
	DB	'wLSwitchID, ', 09H, 'dwRSwitchID, ', 09H, 'dwCSwitchID, ', 09H
	DB	'wNormalItem, ', 09H, 'wChiefItem, ', 09H, 'bLine, ', 09H, 'wS'
	DB	'kill1, ', 09H, 'wSkill2, ', 09H, 'bItemLevel ', 09H, 'FROM TB'
	DB	'ATTLEZONECHART', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CTBLBattleZoneChart@@6B@
CONST	SEGMENT
??_7CTBLBattleZoneChart@@6B@ DD FLAT:??_ECTBLBattleZoneChart@@UAEPAXI@Z ; CTBLBattleZoneChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLBattleZoneChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLBattleZoneChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLBattleZoneChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T160405 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLBattleZoneChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLBattleZoneChart::CTBLBattleZoneChart, COMDAT
; _this$ = ecx

; 748  : 	FROM TBATTLEZONECHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLBattleZoneChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0PO@DNEJDEGL@SELECT?5?7wID?0?5?7szName?0?5?7wMapID?0?5?7@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T160405[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLBattleZoneChart@@6B@
  0005e	72 0d		 jb	 SHORT $L160578
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L160578:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L160406:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLBattleZoneChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160577
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLBattleZoneChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLBattleZoneChart::CTBLBattleZoneChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLBattleZoneChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLBattleZoneChart@@UAEHXZ PROC NEAR	; CTBLBattleZoneChart::GetNumCol, COMDAT
; _this$ = ecx

; 750  : BEGIN_COLUMN(17)

  00000	b8 11 00 00 00	 mov	 eax, 17			; 00000011H
  00005	c3		 ret	 0
?GetNumCol@CTBLBattleZoneChart@@UAEHXZ ENDP		; CTBLBattleZoneChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLBattleZoneChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLBattleZoneChart@@UAEFXZ PROC NEAR	; CTBLBattleZoneChart::BindColumns, COMDAT
; _this$ = ecx

; 750  : BEGIN_COLUMN(17)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 751  : 	COLUMN_ENTRY(m_wID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L129770
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 cf 01 00
	00		 jne	 $L129766
$L129770:

; 752  : 	COLUMN_ENTRY_STR(m_szName)

  00020	6a 33		 push	 51			; 00000033H
  00022	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00028	51		 push	 ecx
  00029	6a 02		 push	 2
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00032	66 85 c0	 test	 ax, ax
  00035	74 0a		 je	 SHORT $L129771
  00037	66 3d 01 00	 cmp	 ax, 1
  0003b	0f 85 ae 01 00
	00		 jne	 $L129766
$L129771:

; 753  : 	COLUMN_ENTRY(m_wMapID)

  00041	8d 96 62 0c 00
	00		 lea	 edx, DWORD PTR [esi+3170]
  00047	52		 push	 edx
  00048	6a 03		 push	 3
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00051	66 85 c0	 test	 ax, ax
  00054	74 0a		 je	 SHORT $L129772
  00056	66 3d 01 00	 cmp	 ax, 1
  0005a	0f 85 8f 01 00
	00		 jne	 $L129766
$L129772:

; 754  : 	COLUMN_ENTRY(m_wCastle)

  00060	8d 86 64 0c 00
	00		 lea	 eax, DWORD PTR [esi+3172]
  00066	50		 push	 eax
  00067	6a 04		 push	 4
  00069	8b ce		 mov	 ecx, esi
  0006b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00070	66 85 c0	 test	 ax, ax
  00073	74 0a		 je	 SHORT $L129773
  00075	66 3d 01 00	 cmp	 ax, 1
  00079	0f 85 70 01 00
	00		 jne	 $L129766
$L129773:

; 755  : 	COLUMN_ENTRY(m_wBossSpawnID)

  0007f	8d 8e 66 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3174]
  00085	51		 push	 ecx
  00086	6a 05		 push	 5
  00088	8b ce		 mov	 ecx, esi
  0008a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0008f	66 85 c0	 test	 ax, ax
  00092	74 0a		 je	 SHORT $L129774
  00094	66 3d 01 00	 cmp	 ax, 1
  00098	0f 85 51 01 00
	00		 jne	 $L129766
$L129774:

; 756  : 	COLUMN_ENTRY(m_wLGateKeeperSpawnID)

  0009e	8d 96 68 0c 00
	00		 lea	 edx, DWORD PTR [esi+3176]
  000a4	52		 push	 edx
  000a5	6a 06		 push	 6
  000a7	8b ce		 mov	 ecx, esi
  000a9	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000ae	66 85 c0	 test	 ax, ax
  000b1	74 0a		 je	 SHORT $L129775
  000b3	66 3d 01 00	 cmp	 ax, 1
  000b7	0f 85 32 01 00
	00		 jne	 $L129766
$L129775:

; 757  : 	COLUMN_ENTRY(m_wRGateKeeperSpawnID)

  000bd	8d 86 6a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3178]
  000c3	50		 push	 eax
  000c4	6a 07		 push	 7
  000c6	8b ce		 mov	 ecx, esi
  000c8	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000cd	66 85 c0	 test	 ax, ax
  000d0	74 0a		 je	 SHORT $L129776
  000d2	66 3d 01 00	 cmp	 ax, 1
  000d6	0f 85 13 01 00
	00		 jne	 $L129766
$L129776:

; 758  : 	COLUMN_ENTRY(m_wCGateKeeperSpawnID)

  000dc	8d 8e 6c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3180]
  000e2	51		 push	 ecx
  000e3	6a 08		 push	 8
  000e5	8b ce		 mov	 ecx, esi
  000e7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000ec	66 85 c0	 test	 ax, ax
  000ef	74 0a		 je	 SHORT $L129777
  000f1	66 3d 01 00	 cmp	 ax, 1
  000f5	0f 85 f4 00 00
	00		 jne	 $L129766
$L129777:

; 759  : 	COLUMN_ENTRY(m_dwLSwitchID)

  000fb	8d 96 70 0c 00
	00		 lea	 edx, DWORD PTR [esi+3184]
  00101	52		 push	 edx
  00102	6a 09		 push	 9
  00104	8b ce		 mov	 ecx, esi
  00106	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0010b	66 85 c0	 test	 ax, ax
  0010e	74 0a		 je	 SHORT $L129778
  00110	66 3d 01 00	 cmp	 ax, 1
  00114	0f 85 d5 00 00
	00		 jne	 $L129766
$L129778:

; 760  : 	COLUMN_ENTRY(m_dwRSwitchID)

  0011a	8d 86 74 0c 00
	00		 lea	 eax, DWORD PTR [esi+3188]
  00120	50		 push	 eax
  00121	6a 0a		 push	 10			; 0000000aH
  00123	8b ce		 mov	 ecx, esi
  00125	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0012a	66 85 c0	 test	 ax, ax
  0012d	74 0a		 je	 SHORT $L129779
  0012f	66 3d 01 00	 cmp	 ax, 1
  00133	0f 85 b6 00 00
	00		 jne	 $L129766
$L129779:

; 761  : 	COLUMN_ENTRY(m_dwCSwitchID)

  00139	8d 8e 78 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3192]
  0013f	51		 push	 ecx
  00140	6a 0b		 push	 11			; 0000000bH
  00142	8b ce		 mov	 ecx, esi
  00144	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00149	66 85 c0	 test	 ax, ax
  0014c	74 0a		 je	 SHORT $L129780
  0014e	66 3d 01 00	 cmp	 ax, 1
  00152	0f 85 97 00 00
	00		 jne	 $L129766
$L129780:

; 762  : 	COLUMN_ENTRY(m_wNormalItem)

  00158	8d 96 7c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3196]
  0015e	52		 push	 edx
  0015f	6a 0c		 push	 12			; 0000000cH
  00161	8b ce		 mov	 ecx, esi
  00163	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00168	66 85 c0	 test	 ax, ax
  0016b	74 06		 je	 SHORT $L129781
  0016d	66 3d 01 00	 cmp	 ax, 1
  00171	75 7c		 jne	 SHORT $L129766
$L129781:

; 763  : 	COLUMN_ENTRY(m_wChiefItem)

  00173	8d 86 7e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3198]
  00179	50		 push	 eax
  0017a	6a 0d		 push	 13			; 0000000dH
  0017c	8b ce		 mov	 ecx, esi
  0017e	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00183	66 85 c0	 test	 ax, ax
  00186	74 06		 je	 SHORT $L129782
  00188	66 3d 01 00	 cmp	 ax, 1
  0018c	75 61		 jne	 SHORT $L129766
$L129782:

; 764  : 	COLUMN_ENTRY(m_bLine)

  0018e	8d 8e 80 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3200]
  00194	51		 push	 ecx
  00195	6a 0e		 push	 14			; 0000000eH
  00197	8b ce		 mov	 ecx, esi
  00199	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0019e	66 85 c0	 test	 ax, ax
  001a1	74 06		 je	 SHORT $L129783
  001a3	66 3d 01 00	 cmp	 ax, 1
  001a7	75 46		 jne	 SHORT $L129766
$L129783:

; 765  : 	COLUMN_ENTRY(m_wSkill1)

  001a9	8d 96 82 0c 00
	00		 lea	 edx, DWORD PTR [esi+3202]
  001af	52		 push	 edx
  001b0	6a 0f		 push	 15			; 0000000fH
  001b2	8b ce		 mov	 ecx, esi
  001b4	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  001b9	66 85 c0	 test	 ax, ax
  001bc	74 06		 je	 SHORT $L129784
  001be	66 3d 01 00	 cmp	 ax, 1
  001c2	75 2b		 jne	 SHORT $L129766
$L129784:

; 766  : 	COLUMN_ENTRY(m_wSkill2)

  001c4	8d 86 84 0c 00
	00		 lea	 eax, DWORD PTR [esi+3204]
  001ca	50		 push	 eax
  001cb	6a 10		 push	 16			; 00000010H
  001cd	8b ce		 mov	 ecx, esi
  001cf	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  001d4	66 85 c0	 test	 ax, ax
  001d7	74 06		 je	 SHORT $L129785
  001d9	66 3d 01 00	 cmp	 ax, 1
  001dd	75 10		 jne	 SHORT $L129766
$L129785:

; 767  : 	COLUMN_ENTRY(m_bItemLevel)

  001df	8d 8e 86 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3206]
  001e5	51		 push	 ecx
  001e6	6a 11		 push	 17			; 00000011H
  001e8	8b ce		 mov	 ecx, esi
  001ea	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L129766:
  001ef	5e		 pop	 esi

; 768  : END_COL()

  001f0	c3		 ret	 0
?BindColumns@CTBLBattleZoneChart@@UAEFXZ ENDP		; CTBLBattleZoneChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLBattleZoneChart@@UAE@XZ			; CTBLBattleZoneChart::~CTBLBattleZoneChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLBattleZoneChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLBattleZoneChart@@UAEPAXI@Z PROC NEAR		; CTBLBattleZoneChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLBattleZoneChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L160592
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L160592:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLBattleZoneChart@@UAEPAXI@Z ENDP			; CTBLBattleZoneChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLBattleZoneChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLBattleZoneChart@@UAE@XZ PROC NEAR		; CTBLBattleZoneChart::~CTBLBattleZoneChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLBattleZoneChart@@UAE@XZ ENDP			; CTBLBattleZoneChart::~CTBLBattleZoneChart
_TEXT	ENDS
PUBLIC	??0CTBLLocalTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLLocalTable::CTBLLocalTable
PUBLIC	?GetNumCol@CTBLLocalTable@@UAEHXZ		; CTBLLocalTable::GetNumCol
PUBLIC	?BindColumns@CTBLLocalTable@@UAEFXZ		; CTBLLocalTable::BindColumns
PUBLIC	??_7CTBLLocalTable@@6B@				; CTBLLocalTable::`vftable'
PUBLIC	??_GCTBLLocalTable@@UAEPAXI@Z			; CTBLLocalTable::`scalar deleting destructor'
PUBLIC	??_C@_0BBG@HDMAMPFO@SELECT?5?7TLOCALTABLE?4wLocalID?0?5?7T@ ; `string'
EXTRN	??_ECTBLLocalTable@@UAEPAXI@Z:NEAR		; CTBLLocalTable::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T160775 DD	0ffffffffH
	DD	FLAT:$L160601
$T160772 DD	019930520H
	DD	01H
	DD	FLAT:$T160775
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BBG@HDMAMPFO@SELECT?5?7TLOCALTABLE?4wLocalID?0?5?7T@
CONST	SEGMENT
??_C@_0BBG@HDMAMPFO@SELECT?5?7TLOCALTABLE?4wLocalID?0?5?7T@ DB 'SELECT ', 09H
	DB	'TLOCALTABLE.wLocalID, ', 09H, 'TLOCALTABLE.bCountry, ', 09H, 'T'
	DB	'LOCALTABLE.dwGuild, ', 09H, 'TGUILDTABLE.szName, ', 09H, 'TLO'
	DB	'CALTABLE.dateOccupy, ', 09H, 'TLOCALTABLE.dateDefend, ', 09H, 'T'
	DB	'LOCALTABLE.szHero, ', 09H, 'TLOCALTABLE.dateHero ', 09H, 'FRO'
	DB	'M TLOCALTABLE LEFT OUTER JOIN TGUILDTABLE ', 09H, 'ON TLOCALT'
	DB	'ABLE.dwGuild = TGUILDTABLE.dwID', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLLocalTable@@6B@
CONST	SEGMENT
??_7CTBLLocalTable@@6B@ DD FLAT:??_ECTBLLocalTable@@UAEPAXI@Z ; CTBLLocalTable::`vftable'
	DD	FLAT:?GetNumCol@CTBLLocalTable@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLLocalTable@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLLocalTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T160600 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLLocalTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLLocalTable::CTBLLocalTable, COMDAT
; _this$ = ecx

; 793  : 	ON TLOCALTABLE.dwGuild = TGUILDTABLE.dwID"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLLocalTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BBG@HDMAMPFO@SELECT?5?7TLOCALTABLE?4wLocalID?0?5?7T@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T160600[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLLocalTable@@6B@
  0005e	72 0d		 jb	 SHORT $L160773
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L160773:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L160601:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLLocalTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160772
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLLocalTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLLocalTable::CTBLLocalTable
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLLocalTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLLocalTable@@UAEHXZ PROC NEAR		; CTBLLocalTable::GetNumCol, COMDAT
; _this$ = ecx

; 795  : BEGIN_COLUMN(8)

  00000	b8 08 00 00 00	 mov	 eax, 8
  00005	c3		 ret	 0
?GetNumCol@CTBLLocalTable@@UAEHXZ ENDP			; CTBLLocalTable::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLLocalTable@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLLocalTable@@UAEFXZ PROC NEAR		; CTBLLocalTable::BindColumns, COMDAT
; _this$ = ecx

; 795  : BEGIN_COLUMN(8)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 796  : 	COLUMN_ENTRY(m_wLocal)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L129834
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 be 00 00
	00		 jne	 $L129830
$L129834:

; 797  : 	COLUMN_ENTRY(m_bCountry)

  00020	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L129835
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 9f 00 00
	00		 jne	 $L129830
$L129835:

; 798  : 	COLUMN_ENTRY(m_dwGuild)

  0003f	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L129836
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 80 00 00
	00		 jne	 $L129830
$L129836:

; 799  : 	COLUMN_ENTRY_STR(m_szGuildName)		//IsNull Check...nCol=3

  0005e	6a 33		 push	 51			; 00000033H
  00060	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  00066	50		 push	 eax
  00067	6a 04		 push	 4
  00069	8b ce		 mov	 ecx, esi
  0006b	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00070	66 85 c0	 test	 ax, ax
  00073	74 06		 je	 SHORT $L129837
  00075	66 3d 01 00	 cmp	 ax, 1
  00079	75 63		 jne	 SHORT $L129830
$L129837:

; 800  : 	COLUMN_ENTRY(m_dateOccupy)

  0007b	8d 8e 68 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3176]
  00081	51		 push	 ecx
  00082	6a 05		 push	 5
  00084	8b ce		 mov	 ecx, esi
  00086	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
  0008b	66 85 c0	 test	 ax, ax
  0008e	74 06		 je	 SHORT $L129838
  00090	66 3d 01 00	 cmp	 ax, 1
  00094	75 48		 jne	 SHORT $L129830
$L129838:

; 801  : 	COLUMN_ENTRY(m_dateDefend)

  00096	8d 96 78 0c 00
	00		 lea	 edx, DWORD PTR [esi+3192]
  0009c	52		 push	 edx
  0009d	6a 06		 push	 6
  0009f	8b ce		 mov	 ecx, esi
  000a1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
  000a6	66 85 c0	 test	 ax, ax
  000a9	74 06		 je	 SHORT $L129839
  000ab	66 3d 01 00	 cmp	 ax, 1
  000af	75 2d		 jne	 SHORT $L129830
$L129839:

; 802  : 	COLUMN_ENTRY_STR(m_szHero)

  000b1	6a 33		 push	 51			; 00000033H
  000b3	8d 86 88 0c 00
	00		 lea	 eax, DWORD PTR [esi+3208]
  000b9	50		 push	 eax
  000ba	6a 07		 push	 7
  000bc	8b ce		 mov	 ecx, esi
  000be	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  000c3	66 85 c0	 test	 ax, ax
  000c6	74 06		 je	 SHORT $L129840
  000c8	66 3d 01 00	 cmp	 ax, 1
  000cc	75 10		 jne	 SHORT $L129830
$L129840:

; 803  : 	COLUMN_ENTRY(m_dateHero)

  000ce	8d 8e bc 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3260]
  000d4	51		 push	 ecx
  000d5	6a 08		 push	 8
  000d7	8b ce		 mov	 ecx, esi
  000d9	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
$L129830:
  000de	5e		 pop	 esi

; 804  : END_COL()

  000df	c3		 ret	 0
?BindColumns@CTBLLocalTable@@UAEFXZ ENDP		; CTBLLocalTable::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLLocalTable@@UAE@XZ			; CTBLLocalTable::~CTBLLocalTable
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLLocalTable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLLocalTable@@UAEPAXI@Z PROC NEAR			; CTBLLocalTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLLocalTable@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L160787
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L160787:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLLocalTable@@UAEPAXI@Z ENDP			; CTBLLocalTable::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLLocalTable@@UAE@XZ
_TEXT	SEGMENT
??1CTBLLocalTable@@UAE@XZ PROC NEAR			; CTBLLocalTable::~CTBLLocalTable, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLLocalTable@@UAE@XZ ENDP				; CTBLLocalTable::~CTBLLocalTable
_TEXT	ENDS
PUBLIC	??0CTBLMapMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMapMon::CTBLMapMon
PUBLIC	?GetNumCol@CTBLMapMon@@UAEHXZ			; CTBLMapMon::GetNumCol
PUBLIC	?BindColumns@CTBLMapMon@@UAEFXZ			; CTBLMapMon::BindColumns
PUBLIC	?GetNumParam@CTBLMapMon@@UAEHXZ			; CTBLMapMon::GetNumParam
PUBLIC	?BindParameters@CTBLMapMon@@UAEFH@Z		; CTBLMapMon::BindParameters
PUBLIC	??_7CTBLMapMon@@6B@				; CTBLMapMon::`vftable'
PUBLIC	??_GCTBLMapMon@@UAEPAXI@Z			; CTBLMapMon::`scalar deleting destructor'
PUBLIC	??_C@_0FF@LPEMIGKP@SELECT?5?7wMonID?0?5?7bLeader?0?5?7bEsse@ ; `string'
EXTRN	??_ECTBLMapMon@@UAEPAXI@Z:NEAR			; CTBLMapMon::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T160970 DD	0ffffffffH
	DD	FLAT:$L160796
$T160967 DD	019930520H
	DD	01H
	DD	FLAT:$T160970
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FF@LPEMIGKP@SELECT?5?7wMonID?0?5?7bLeader?0?5?7bEsse@
CONST	SEGMENT
??_C@_0FF@LPEMIGKP@SELECT?5?7wMonID?0?5?7bLeader?0?5?7bEsse@ DB 'SELECT ', 09H
	DB	'wMonID, ', 09H, 'bLeader, ', 09H, 'bEssential, ', 09H, 'bProb'
	DB	' ', 09H, 'FROM TMAPMONCHART ', 09H, 'WHERE wSpawnID = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLMapMon@@6B@
CONST	SEGMENT
??_7CTBLMapMon@@6B@ DD FLAT:??_ECTBLMapMon@@UAEPAXI@Z	; CTBLMapMon::`vftable'
	DD	FLAT:?GetNumCol@CTBLMapMon@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLMapMon@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLMapMon@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLMapMon@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLMapMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T160795 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLMapMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLMapMon::CTBLMapMon, COMDAT
; _this$ = ecx

; 823  : 	WHERE wSpawnID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLMapMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FF@LPEMIGKP@SELECT?5?7wMonID?0?5?7bLeader?0?5?7bEsse@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T160795[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLMapMon@@6B@
  0005e	72 0d		 jb	 SHORT $L160968
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L160968:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L160796:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLMapMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T160967
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLMapMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLMapMon::CTBLMapMon
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLMapMon@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLMapMon@@UAEHXZ PROC NEAR			; CTBLMapMon::GetNumCol, COMDAT
; _this$ = ecx

; 825  : BEGIN_COLUMN(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumCol@CTBLMapMon@@UAEHXZ ENDP			; CTBLMapMon::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMapMon@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLMapMon@@UAEFXZ PROC NEAR		; CTBLMapMon::BindColumns, COMDAT
; _this$ = ecx

; 825  : BEGIN_COLUMN(4)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 826  : 	COLUMN_ENTRY(m_wMonID)

  00003	8d 86 2e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3118]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L129889
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 46		 jne	 SHORT $L129885
$L129889:

; 827  : 	COLUMN_ENTRY(m_bLeader)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L129890
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 2b		 jne	 SHORT $L129885
$L129890:

; 828  : 	COLUMN_ENTRY(m_bEssential)

  00037	8d 96 31 0c 00
	00		 lea	 edx, DWORD PTR [esi+3121]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L129891
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 10		 jne	 SHORT $L129885
$L129891:

; 829  : 	COLUMN_ENTRY(m_bProb)

  00052	8d 86 32 0c 00
	00		 lea	 eax, DWORD PTR [esi+3122]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L129885:
  00062	5e		 pop	 esi

; 830  : END_COL()

  00063	c3		 ret	 0
?BindColumns@CTBLMapMon@@UAEFXZ ENDP			; CTBLMapMon::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLMapMon@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLMapMon@@UAEHXZ PROC NEAR		; CTBLMapMon::GetNumParam, COMDAT
; _this$ = ecx

; 832  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLMapMon@@UAEHXZ ENDP			; CTBLMapMon::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLMapMon@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLMapMon@@UAEFH@Z PROC NEAR		; CTBLMapMon::BindParameters, COMDAT
; _this$ = ecx

; 833  : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wSpawnID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L129897
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L129897:

; 834  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLMapMon@@UAEFH@Z ENDP		; CTBLMapMon::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLMapMon@@UAE@XZ				; CTBLMapMon::~CTBLMapMon
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLMapMon@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLMapMon@@UAEPAXI@Z PROC NEAR			; CTBLMapMon::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLMapMon@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L160988
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L160988:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLMapMon@@UAEPAXI@Z ENDP				; CTBLMapMon::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLMapMon@@UAE@XZ
_TEXT	SEGMENT
??1CTBLMapMon@@UAE@XZ PROC NEAR				; CTBLMapMon::~CTBLMapMon, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLMapMon@@UAE@XZ ENDP				; CTBLMapMon::~CTBLMapMon
_TEXT	ENDS
PUBLIC	??0CTBLSpawnPath@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSpawnPath::CTBLSpawnPath
PUBLIC	?GetNumCol@CTBLSpawnPath@@UAEHXZ		; CTBLSpawnPath::GetNumCol
PUBLIC	?BindColumns@CTBLSpawnPath@@UAEFXZ		; CTBLSpawnPath::BindColumns
PUBLIC	??_7CTBLSpawnPath@@6B@				; CTBLSpawnPath::`vftable'
PUBLIC	??_GCTBLSpawnPath@@UAEPAXI@Z			; CTBLSpawnPath::`scalar deleting destructor'
PUBLIC	??_C@_0EK@KDIJNJDN@SELECT?5wSpawnID?0?5fPosX?0?5fPosY?0?5f@ ; `string'
EXTRN	??_ECTBLSpawnPath@@UAEPAXI@Z:NEAR		; CTBLSpawnPath::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T161171 DD	0ffffffffH
	DD	FLAT:$L160997
$T161168 DD	019930520H
	DD	01H
	DD	FLAT:$T161171
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EK@KDIJNJDN@SELECT?5wSpawnID?0?5fPosX?0?5fPosY?0?5f@
CONST	SEGMENT
??_C@_0EK@KDIJNJDN@SELECT?5wSpawnID?0?5fPosX?0?5fPosY?0?5f@ DB 'SELECT wS'
	DB	'pawnID, fPosX, fPosY, fPosZ, bProb, fRadius FROM TSPAWNPATHCH'
	DB	'ART', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7CTBLSpawnPath@@6B@
CONST	SEGMENT
??_7CTBLSpawnPath@@6B@ DD FLAT:??_ECTBLSpawnPath@@UAEPAXI@Z ; CTBLSpawnPath::`vftable'
	DD	FLAT:?GetNumCol@CTBLSpawnPath@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLSpawnPath@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLSpawnPath@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T160996 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLSpawnPath@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLSpawnPath::CTBLSpawnPath, COMDAT
; _this$ = ecx

; 847  : DEF_QUERY(CTBLSpawnPath, _T("SELECT wSpawnID, fPosX, fPosY, fPosZ, bProb, fRadius FROM TSPAWNPATHCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLSpawnPath@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EK@KDIJNJDN@SELECT?5wSpawnID?0?5fPosX?0?5fPosY?0?5f@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T160996[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLSpawnPath@@6B@
  0005e	72 0d		 jb	 SHORT $L161169
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L161169:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L160997:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLSpawnPath@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161168
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLSpawnPath@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLSpawnPath::CTBLSpawnPath
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLSpawnPath@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLSpawnPath@@UAEHXZ PROC NEAR		; CTBLSpawnPath::GetNumCol, COMDAT
; _this$ = ecx

; 849  : BEGIN_COLUMN(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumCol@CTBLSpawnPath@@UAEHXZ ENDP			; CTBLSpawnPath::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSpawnPath@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLSpawnPath@@UAEFXZ PROC NEAR		; CTBLSpawnPath::BindColumns, COMDAT
; _this$ = ecx

; 849  : BEGIN_COLUMN(6)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 850  : 	COLUMN_ENTRY(m_wSpawnID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L129948
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 7c		 jne	 SHORT $L129944
$L129948:

; 851  : 	COLUMN_ENTRY(m_fPosX)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L129949
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 61		 jne	 SHORT $L129944
$L129949:

; 852  : 	COLUMN_ENTRY(m_fPosY)

  00037	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L129950
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 46		 jne	 SHORT $L129944
$L129950:

; 853  : 	COLUMN_ENTRY(m_fPosZ)

  00052	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  00062	66 85 c0	 test	 ax, ax
  00065	74 06		 je	 SHORT $L129951
  00067	66 3d 01 00	 cmp	 ax, 1
  0006b	75 2b		 jne	 SHORT $L129944
$L129951:

; 854  : 	COLUMN_ENTRY(m_bProb)

  0006d	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  00073	51		 push	 ecx
  00074	6a 05		 push	 5
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0007d	66 85 c0	 test	 ax, ax
  00080	74 06		 je	 SHORT $L129952
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 10		 jne	 SHORT $L129944
$L129952:

; 855  : 	COLUMN_ENTRY(m_fRadius)

  00088	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  0008e	52		 push	 edx
  0008f	6a 06		 push	 6
  00091	8b ce		 mov	 ecx, esi
  00093	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
$L129944:
  00098	5e		 pop	 esi

; 856  : END_COL()

  00099	c3		 ret	 0
?BindColumns@CTBLSpawnPath@@UAEFXZ ENDP			; CTBLSpawnPath::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLSpawnPath@@UAE@XZ			; CTBLSpawnPath::~CTBLSpawnPath
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLSpawnPath@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLSpawnPath@@UAEPAXI@Z PROC NEAR			; CTBLSpawnPath::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLSpawnPath@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L161183
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L161183:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLSpawnPath@@UAEPAXI@Z ENDP			; CTBLSpawnPath::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLSpawnPath@@UAE@XZ
_TEXT	SEGMENT
??1CTBLSpawnPath@@UAE@XZ PROC NEAR			; CTBLSpawnPath::~CTBLSpawnPath, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLSpawnPath@@UAE@XZ ENDP				; CTBLSpawnPath::~CTBLSpawnPath
_TEXT	ENDS
PUBLIC	??0CTBLClassChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLClassChart::CTBLClassChart
PUBLIC	?GetNumCol@CTBLClassChart@@UAEHXZ		; CTBLClassChart::GetNumCol
PUBLIC	?BindColumns@CTBLClassChart@@UAEFXZ		; CTBLClassChart::BindColumns
PUBLIC	??_7CTBLClassChart@@6B@				; CTBLClassChart::`vftable'
PUBLIC	??_GCTBLClassChart@@UAEPAXI@Z			; CTBLClassChart::`scalar deleting destructor'
PUBLIC	??_C@_0EN@BLHOHNNG@SELECT?5?7bClassID?0?5?7wSTR?0?5?7wDEX?0?5@ ; `string'
EXTRN	??_ECTBLClassChart@@UAEPAXI@Z:NEAR		; CTBLClassChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T161366 DD	0ffffffffH
	DD	FLAT:$L161192
$T161363 DD	019930520H
	DD	01H
	DD	FLAT:$T161366
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EN@BLHOHNNG@SELECT?5?7bClassID?0?5?7wSTR?0?5?7wDEX?0?5@
CONST	SEGMENT
??_C@_0EN@BLHOHNNG@SELECT?5?7bClassID?0?5?7wSTR?0?5?7wDEX?0?5@ DB 'SELECT'
	DB	' ', 09H, 'bClassID, ', 09H, 'wSTR, ', 09H, 'wDEX, ', 09H, 'wC'
	DB	'ON, ', 09H, 'wINT, ', 09H, 'wWIS, ', 09H, 'wMEN ', 09H, 'FROM'
	DB	' TCLASSCHART', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLClassChart@@6B@
CONST	SEGMENT
??_7CTBLClassChart@@6B@ DD FLAT:??_ECTBLClassChart@@UAEPAXI@Z ; CTBLClassChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLClassChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLClassChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLClassChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T161191 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLClassChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLClassChart::CTBLClassChart, COMDAT
; _this$ = ecx

; 879  : 	FROM TCLASSCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLClassChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EN@BLHOHNNG@SELECT?5?7bClassID?0?5?7wSTR?0?5?7wDEX?0?5@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T161191[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLClassChart@@6B@
  0005e	72 0d		 jb	 SHORT $L161364
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L161364:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161192:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLClassChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161363
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLClassChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLClassChart::CTBLClassChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLClassChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLClassChart@@UAEHXZ PROC NEAR		; CTBLClassChart::GetNumCol, COMDAT
; _this$ = ecx

; 881  : BEGIN_COLUMN(7)

  00000	b8 07 00 00 00	 mov	 eax, 7
  00005	c3		 ret	 0
?GetNumCol@CTBLClassChart@@UAEHXZ ENDP			; CTBLClassChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLClassChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLClassChart@@UAEFXZ PROC NEAR		; CTBLClassChart::BindColumns, COMDAT
; _this$ = ecx

; 881  : BEGIN_COLUMN(7)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 882  : 	COLUMN_ENTRY(m_bClassID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L130000
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 97 00 00
	00		 jne	 $L129996
$L130000:

; 883  : 	COLUMN_ENTRY(m_wSTR)

  00020	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 06		 je	 SHORT $L130001
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	75 7c		 jne	 SHORT $L129996
$L130001:

; 884  : 	COLUMN_ENTRY(m_wDEX)

  0003b	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00041	52		 push	 edx
  00042	6a 03		 push	 3
  00044	8b ce		 mov	 ecx, esi
  00046	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0004b	66 85 c0	 test	 ax, ax
  0004e	74 06		 je	 SHORT $L130002
  00050	66 3d 01 00	 cmp	 ax, 1
  00054	75 61		 jne	 SHORT $L129996
$L130002:

; 885  : 	COLUMN_ENTRY(m_wCON)

  00056	8d 86 32 0c 00
	00		 lea	 eax, DWORD PTR [esi+3122]
  0005c	50		 push	 eax
  0005d	6a 04		 push	 4
  0005f	8b ce		 mov	 ecx, esi
  00061	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00066	66 85 c0	 test	 ax, ax
  00069	74 06		 je	 SHORT $L130003
  0006b	66 3d 01 00	 cmp	 ax, 1
  0006f	75 46		 jne	 SHORT $L129996
$L130003:

; 886  : 	COLUMN_ENTRY(m_wINT)

  00071	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00077	51		 push	 ecx
  00078	6a 05		 push	 5
  0007a	8b ce		 mov	 ecx, esi
  0007c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00081	66 85 c0	 test	 ax, ax
  00084	74 06		 je	 SHORT $L130004
  00086	66 3d 01 00	 cmp	 ax, 1
  0008a	75 2b		 jne	 SHORT $L129996
$L130004:

; 887  : 	COLUMN_ENTRY(m_wWIS)

  0008c	8d 96 36 0c 00
	00		 lea	 edx, DWORD PTR [esi+3126]
  00092	52		 push	 edx
  00093	6a 06		 push	 6
  00095	8b ce		 mov	 ecx, esi
  00097	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0009c	66 85 c0	 test	 ax, ax
  0009f	74 06		 je	 SHORT $L130005
  000a1	66 3d 01 00	 cmp	 ax, 1
  000a5	75 10		 jne	 SHORT $L129996
$L130005:

; 888  : 	COLUMN_ENTRY(m_wMEN)

  000a7	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  000ad	50		 push	 eax
  000ae	6a 07		 push	 7
  000b0	8b ce		 mov	 ecx, esi
  000b2	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
$L129996:
  000b7	5e		 pop	 esi

; 889  : END_COL()

  000b8	c3		 ret	 0
?BindColumns@CTBLClassChart@@UAEFXZ ENDP		; CTBLClassChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLClassChart@@UAE@XZ			; CTBLClassChart::~CTBLClassChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLClassChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLClassChart@@UAEPAXI@Z PROC NEAR			; CTBLClassChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLClassChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L161378
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L161378:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLClassChart@@UAEPAXI@Z ENDP			; CTBLClassChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLClassChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLClassChart@@UAE@XZ PROC NEAR			; CTBLClassChart::~CTBLClassChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLClassChart@@UAE@XZ ENDP				; CTBLClassChart::~CTBLClassChart
_TEXT	ENDS
PUBLIC	??0CTBLRaceChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLRaceChart::CTBLRaceChart
PUBLIC	?GetNumCol@CTBLRaceChart@@UAEHXZ		; CTBLRaceChart::GetNumCol
PUBLIC	?BindColumns@CTBLRaceChart@@UAEFXZ		; CTBLRaceChart::BindColumns
PUBLIC	??_7CTBLRaceChart@@6B@				; CTBLRaceChart::`vftable'
PUBLIC	??_GCTBLRaceChart@@UAEPAXI@Z			; CTBLRaceChart::`scalar deleting destructor'
PUBLIC	??_C@_0EL@DHDECCIN@SELECT?5?7bRaceID?0?5?7wSTR?0?5?7wDEX?0?5?7@ ; `string'
EXTRN	??_ECTBLRaceChart@@UAEPAXI@Z:NEAR		; CTBLRaceChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T161561 DD	0ffffffffH
	DD	FLAT:$L161387
$T161558 DD	019930520H
	DD	01H
	DD	FLAT:$T161561
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EL@DHDECCIN@SELECT?5?7bRaceID?0?5?7wSTR?0?5?7wDEX?0?5?7@
CONST	SEGMENT
??_C@_0EL@DHDECCIN@SELECT?5?7bRaceID?0?5?7wSTR?0?5?7wDEX?0?5?7@ DB 'SELEC'
	DB	'T ', 09H, 'bRaceID, ', 09H, 'wSTR, ', 09H, 'wDEX, ', 09H, 'wC'
	DB	'ON, ', 09H, 'wINT, ', 09H, 'wWIS, ', 09H, 'wMEN ', 09H, 'FROM'
	DB	' TRACECHART', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLRaceChart@@6B@
CONST	SEGMENT
??_7CTBLRaceChart@@6B@ DD FLAT:??_ECTBLRaceChart@@UAEPAXI@Z ; CTBLRaceChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLRaceChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLRaceChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLRaceChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T161386 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLRaceChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLRaceChart::CTBLRaceChart, COMDAT
; _this$ = ecx

; 914  : 	FROM TRACECHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLRaceChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EL@DHDECCIN@SELECT?5?7bRaceID?0?5?7wSTR?0?5?7wDEX?0?5?7@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T161386[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLRaceChart@@6B@
  0005e	72 0d		 jb	 SHORT $L161559
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L161559:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161387:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLRaceChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161558
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLRaceChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLRaceChart::CTBLRaceChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLRaceChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLRaceChart@@UAEHXZ PROC NEAR		; CTBLRaceChart::GetNumCol, COMDAT
; _this$ = ecx

; 916  : BEGIN_COLUMN(7)

  00000	b8 07 00 00 00	 mov	 eax, 7
  00005	c3		 ret	 0
?GetNumCol@CTBLRaceChart@@UAEHXZ ENDP			; CTBLRaceChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLRaceChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLRaceChart@@UAEFXZ PROC NEAR		; CTBLRaceChart::BindColumns, COMDAT
; _this$ = ecx

; 916  : BEGIN_COLUMN(7)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 917  : 	COLUMN_ENTRY(m_bRaceID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L130053
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 97 00 00
	00		 jne	 $L130049
$L130053:

; 918  : 	COLUMN_ENTRY(m_wSTR)

  00020	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 06		 je	 SHORT $L130054
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	75 7c		 jne	 SHORT $L130049
$L130054:

; 919  : 	COLUMN_ENTRY(m_wDEX)

  0003b	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00041	52		 push	 edx
  00042	6a 03		 push	 3
  00044	8b ce		 mov	 ecx, esi
  00046	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0004b	66 85 c0	 test	 ax, ax
  0004e	74 06		 je	 SHORT $L130055
  00050	66 3d 01 00	 cmp	 ax, 1
  00054	75 61		 jne	 SHORT $L130049
$L130055:

; 920  : 	COLUMN_ENTRY(m_wCON)

  00056	8d 86 32 0c 00
	00		 lea	 eax, DWORD PTR [esi+3122]
  0005c	50		 push	 eax
  0005d	6a 04		 push	 4
  0005f	8b ce		 mov	 ecx, esi
  00061	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00066	66 85 c0	 test	 ax, ax
  00069	74 06		 je	 SHORT $L130056
  0006b	66 3d 01 00	 cmp	 ax, 1
  0006f	75 46		 jne	 SHORT $L130049
$L130056:

; 921  : 	COLUMN_ENTRY(m_wINT)

  00071	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00077	51		 push	 ecx
  00078	6a 05		 push	 5
  0007a	8b ce		 mov	 ecx, esi
  0007c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00081	66 85 c0	 test	 ax, ax
  00084	74 06		 je	 SHORT $L130057
  00086	66 3d 01 00	 cmp	 ax, 1
  0008a	75 2b		 jne	 SHORT $L130049
$L130057:

; 922  : 	COLUMN_ENTRY(m_wWIS)

  0008c	8d 96 36 0c 00
	00		 lea	 edx, DWORD PTR [esi+3126]
  00092	52		 push	 edx
  00093	6a 06		 push	 6
  00095	8b ce		 mov	 ecx, esi
  00097	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0009c	66 85 c0	 test	 ax, ax
  0009f	74 06		 je	 SHORT $L130058
  000a1	66 3d 01 00	 cmp	 ax, 1
  000a5	75 10		 jne	 SHORT $L130049
$L130058:

; 923  : 	COLUMN_ENTRY(m_wMEN)

  000a7	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  000ad	50		 push	 eax
  000ae	6a 07		 push	 7
  000b0	8b ce		 mov	 ecx, esi
  000b2	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
$L130049:
  000b7	5e		 pop	 esi

; 924  : END_COL()

  000b8	c3		 ret	 0
?BindColumns@CTBLRaceChart@@UAEFXZ ENDP			; CTBLRaceChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLRaceChart@@UAE@XZ			; CTBLRaceChart::~CTBLRaceChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLRaceChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLRaceChart@@UAEPAXI@Z PROC NEAR			; CTBLRaceChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLRaceChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L161573
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L161573:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLRaceChart@@UAEPAXI@Z ENDP			; CTBLRaceChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLRaceChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLRaceChart@@UAE@XZ PROC NEAR			; CTBLRaceChart::~CTBLRaceChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLRaceChart@@UAE@XZ ENDP				; CTBLRaceChart::~CTBLRaceChart
_TEXT	ENDS
PUBLIC	??0CTBLLevelChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLLevelChart::CTBLLevelChart
PUBLIC	?GetNumCol@CTBLLevelChart@@UAEHXZ		; CTBLLevelChart::GetNumCol
PUBLIC	?BindColumns@CTBLLevelChart@@UAEFXZ		; CTBLLevelChart::BindColumns
PUBLIC	??_7CTBLLevelChart@@6B@				; CTBLLevelChart::`vftable'
PUBLIC	??_GCTBLLevelChart@@UAEPAXI@Z			; CTBLLevelChart::`scalar deleting destructor'
PUBLIC	??_C@_0LL@NCCFJPCG@SELECT?5?7bLevel?0?5?7dwEXP?0?5?7dwHP?0?5?7@ ; `string'
EXTRN	??_ECTBLLevelChart@@UAEPAXI@Z:NEAR		; CTBLLevelChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T161756 DD	0ffffffffH
	DD	FLAT:$L161582
$T161753 DD	019930520H
	DD	01H
	DD	FLAT:$T161756
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0LL@NCCFJPCG@SELECT?5?7bLevel?0?5?7dwEXP?0?5?7dwHP?0?5?7@
CONST	SEGMENT
??_C@_0LL@NCCFJPCG@SELECT?5?7bLevel?0?5?7dwEXP?0?5?7dwHP?0?5?7@ DB 'SELEC'
	DB	'T ', 09H, 'bLevel, ', 09H, 'dwEXP, ', 09H, 'dwHP, ', 09H, 'dw'
	DB	'MP, ', 09H, 'bSkillPoint, ', 09H, 'dwMoney, ', 09H, 'dwRegCos'
	DB	't, ', 09H, 'dwSearchCost, ', 09H, 'dwGambleCost, ', 09H, 'dwR'
	DB	'epCost, ', 09H, 'dwRepairCost, ', 09H, 'dwRefineCost, ', 09H, 'w'
	DB	'PvPoint, ', 09H, 'dwPvPMoney ', 09H, 'FROM TLEVELCHART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLLevelChart@@6B@
CONST	SEGMENT
??_7CTBLLevelChart@@6B@ DD FLAT:??_ECTBLLevelChart@@UAEPAXI@Z ; CTBLLevelChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLLevelChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLLevelChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLLevelChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T161581 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLLevelChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLLevelChart::CTBLLevelChart, COMDAT
; _this$ = ecx

; 962  : 	FROM TLEVELCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLLevelChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0LL@NCCFJPCG@SELECT?5?7bLevel?0?5?7dwEXP?0?5?7dwHP?0?5?7@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T161581[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLLevelChart@@6B@
  0005e	72 0d		 jb	 SHORT $L161754
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L161754:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161582:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLLevelChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161753
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLLevelChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLLevelChart::CTBLLevelChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLLevelChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLLevelChart@@UAEHXZ PROC NEAR		; CTBLLevelChart::GetNumCol, COMDAT
; _this$ = ecx

; 964  : BEGIN_COLUMN(14)

  00000	b8 0e 00 00 00	 mov	 eax, 14			; 0000000eH
  00005	c3		 ret	 0
?GetNumCol@CTBLLevelChart@@UAEHXZ ENDP			; CTBLLevelChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLLevelChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLLevelChart@@UAEFXZ PROC NEAR		; CTBLLevelChart::BindColumns, COMDAT
; _this$ = ecx

; 964  : BEGIN_COLUMN(14)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 965  : 	COLUMN_ENTRY(m_bLevel)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L130113
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 70 01 00
	00		 jne	 $L130109
$L130113:

; 966  : 	COLUMN_ENTRY(m_dwEXP)

  00020	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L130114
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 51 01 00
	00		 jne	 $L130109
$L130114:

; 967  : 	COLUMN_ENTRY(m_dwHP)

  0003f	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L130115
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 32 01 00
	00		 jne	 $L130109
$L130115:

; 968  : 	COLUMN_ENTRY(m_dwMP)

  0005e	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L130116
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 13 01 00
	00		 jne	 $L130109
$L130116:

; 969  : 	COLUMN_ENTRY(m_bSkillPoint)

  0007d	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L130117
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 f4 00 00
	00		 jne	 $L130109
$L130117:

; 970  : 	COLUMN_ENTRY(m_dwMoney)

  0009c	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L130118
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 d5 00 00
	00		 jne	 $L130109
$L130118:

; 971  : 	COLUMN_ENTRY(m_dwRegCost)

  000bb	8d 86 44 0c 00
	00		 lea	 eax, DWORD PTR [esi+3140]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 0a		 je	 SHORT $L130119
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	0f 85 b6 00 00
	00		 jne	 $L130109
$L130119:

; 972  : 	COLUMN_ENTRY(m_dwSearchCost)

  000da	8d 8e 48 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3144]
  000e0	51		 push	 ecx
  000e1	6a 08		 push	 8
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000ea	66 85 c0	 test	 ax, ax
  000ed	74 0a		 je	 SHORT $L130120
  000ef	66 3d 01 00	 cmp	 ax, 1
  000f3	0f 85 97 00 00
	00		 jne	 $L130109
$L130120:

; 973  : 	COLUMN_ENTRY(m_dwGambleCost)

  000f9	8d 96 4c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3148]
  000ff	52		 push	 edx
  00100	6a 09		 push	 9
  00102	8b ce		 mov	 ecx, esi
  00104	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00109	66 85 c0	 test	 ax, ax
  0010c	74 06		 je	 SHORT $L130121
  0010e	66 3d 01 00	 cmp	 ax, 1
  00112	75 7c		 jne	 SHORT $L130109
$L130121:

; 974  : 	COLUMN_ENTRY(m_dwRepCost)

  00114	8d 86 50 0c 00
	00		 lea	 eax, DWORD PTR [esi+3152]
  0011a	50		 push	 eax
  0011b	6a 0a		 push	 10			; 0000000aH
  0011d	8b ce		 mov	 ecx, esi
  0011f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00124	66 85 c0	 test	 ax, ax
  00127	74 06		 je	 SHORT $L130122
  00129	66 3d 01 00	 cmp	 ax, 1
  0012d	75 61		 jne	 SHORT $L130109
$L130122:

; 975  : 	COLUMN_ENTRY(m_dwRepairCost)

  0012f	8d 8e 54 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3156]
  00135	51		 push	 ecx
  00136	6a 0b		 push	 11			; 0000000bH
  00138	8b ce		 mov	 ecx, esi
  0013a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0013f	66 85 c0	 test	 ax, ax
  00142	74 06		 je	 SHORT $L130123
  00144	66 3d 01 00	 cmp	 ax, 1
  00148	75 46		 jne	 SHORT $L130109
$L130123:

; 976  : 	COLUMN_ENTRY(m_dwRefineCost)

  0014a	8d 96 58 0c 00
	00		 lea	 edx, DWORD PTR [esi+3160]
  00150	52		 push	 edx
  00151	6a 0c		 push	 12			; 0000000cH
  00153	8b ce		 mov	 ecx, esi
  00155	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0015a	66 85 c0	 test	 ax, ax
  0015d	74 06		 je	 SHORT $L130124
  0015f	66 3d 01 00	 cmp	 ax, 1
  00163	75 2b		 jne	 SHORT $L130109
$L130124:

; 977  : 	COLUMN_ENTRY(m_wPvPoint)

  00165	8d 86 5c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3164]
  0016b	50		 push	 eax
  0016c	6a 0d		 push	 13			; 0000000dH
  0016e	8b ce		 mov	 ecx, esi
  00170	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00175	66 85 c0	 test	 ax, ax
  00178	74 06		 je	 SHORT $L130125
  0017a	66 3d 01 00	 cmp	 ax, 1
  0017e	75 10		 jne	 SHORT $L130109
$L130125:

; 978  : 	COLUMN_ENTRY(m_dwPvPMoney)

  00180	8d 8e 60 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3168]
  00186	51		 push	 ecx
  00187	6a 0e		 push	 14			; 0000000eH
  00189	8b ce		 mov	 ecx, esi
  0018b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L130109:
  00190	5e		 pop	 esi

; 979  : END_COL()

  00191	c3		 ret	 0
?BindColumns@CTBLLevelChart@@UAEFXZ ENDP		; CTBLLevelChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLLevelChart@@UAE@XZ			; CTBLLevelChart::~CTBLLevelChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLLevelChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLLevelChart@@UAEPAXI@Z PROC NEAR			; CTBLLevelChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLLevelChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L161768
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L161768:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLLevelChart@@UAEPAXI@Z ENDP			; CTBLLevelChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLLevelChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLLevelChart@@UAE@XZ PROC NEAR			; CTBLLevelChart::~CTBLLevelChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLLevelChart@@UAE@XZ ENDP				; CTBLLevelChart::~CTBLLevelChart
_TEXT	ENDS
PUBLIC	??0CTBLItemChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLItemChart::CTBLItemChart
PUBLIC	?GetNumCol@CTBLItemChart@@UAEHXZ		; CTBLItemChart::GetNumCol
PUBLIC	?BindColumns@CTBLItemChart@@UAEFXZ		; CTBLItemChart::BindColumns
PUBLIC	??_7CTBLItemChart@@6B@				; CTBLItemChart::`vftable'
PUBLIC	??_GCTBLItemChart@@UAEPAXI@Z			; CTBLItemChart::`scalar deleting destructor'
PUBLIC	??_C@_0CGI@DMDJPGLM@SELECT?5?7wItemID?0?5?7bType?0?5?7bKind?0@ ; `string'
EXTRN	??_ECTBLItemChart@@UAEPAXI@Z:NEAR		; CTBLItemChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T161951 DD	0ffffffffH
	DD	FLAT:$L161777
$T161948 DD	019930520H
	DD	01H
	DD	FLAT:$T161951
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CGI@DMDJPGLM@SELECT?5?7wItemID?0?5?7bType?0?5?7bKind?0@
CONST	SEGMENT
??_C@_0CGI@DMDJPGLM@SELECT?5?7wItemID?0?5?7bType?0?5?7bKind?0@ DB 'SELECT'
	DB	' ', 09H, 'wItemID, ', 09H, 'bType, ', 09H, 'bKind, ', 09H, 'w'
	DB	'AttrID, ', 09H, 'wUseValue, ', 09H, 'dwClassID, ', 09H, 'dwSl'
	DB	'otID, ', 09H, 'bPrmSlotID, ', 09H, 'bSubSlotID, ', 09H, 'bSlo'
	DB	'tCount, ', 09H, 'fPrice, ', 09H, 'fPvPrice, ', 09H, 'bIsSell,'
	DB	' ', 09H, 'bMinRange, ', 09H, 'bMaxRange, ', 09H, 'bLevel, ', 09H
	DB	'bStack, ', 09H, 'bEquipSkill, ', 09H, 'bUseItemKind, ', 09H, 'b'
	DB	'UseItemCount, ', 09H, 'bGrade, ', 09H, 'wUseTime, ', 09H, 'bU'
	DB	'seType, ', 09H, 'bCanGrade, ', 09H, 'bCanMagic, ', 09H, 'bCan'
	DB	'Rare, ', 09H, 'bDropLevel, ', 09H, 'dwSpeedInc, ', 09H, 'bIte'
	DB	'mCountry, ', 09H, 'bIsSpecial, ', 09H, 'dwDelay, ', 09H, 'bCa'
	DB	'nGamble, ', 09H, 'wItemProb_G, ', 09H, 'bGambleProb, ', 09H, 'b'
	DB	'DestroyProb, ', 09H, 'dwDuraMax, ', 09H, 'bRefineMax, ', 09H, 'b'
	DB	'CanRepair, ', 09H, 'wDelayGroupID, ', 09H, 'wWeight, ', 09H, 'b'
	DB	'GroupID, ', 09H, 'bInitState, ', 09H, 'bCanWrap, ', 09H, 'dwC'
	DB	'ode, ', 09H, 'bCanColor, ', 09H, 'fRevision, ', 09H, 'fMRevis'
	DB	'ion, ', 09H, 'fAtRate, ', 09H, 'fMAtRate, ', 09H, 'bConsumabl'
	DB	'e ', 09H, 'FROM TITEMCHART', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CTBLItemChart@@6B@
CONST	SEGMENT
??_7CTBLItemChart@@6B@ DD FLAT:??_ECTBLItemChart@@UAEPAXI@Z ; CTBLItemChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLItemChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLItemChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLItemChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T161776 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLItemChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLItemChart::CTBLItemChart, COMDAT
; _this$ = ecx

; 1087 : 	FROM TITEMCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLItemChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CGI@DMDJPGLM@SELECT?5?7wItemID?0?5?7bType?0?5?7bKind?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T161776[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLItemChart@@6B@
  0005e	72 0d		 jb	 SHORT $L161949
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L161949:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161777:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLItemChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161948
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLItemChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLItemChart::CTBLItemChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLItemChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLItemChart@@UAEHXZ PROC NEAR		; CTBLItemChart::GetNumCol, COMDAT
; _this$ = ecx

; 1089 : BEGIN_COLUMN(50)

  00000	b8 32 00 00 00	 mov	 eax, 50			; 00000032H
  00005	c3		 ret	 0
?GetNumCol@CTBLItemChart@@UAEHXZ ENDP			; CTBLItemChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLItemChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLItemChart@@UAEFXZ PROC NEAR		; CTBLItemChart::BindColumns, COMDAT
; _this$ = ecx

; 1089 : BEGIN_COLUMN(50)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1090 : 	COLUMN_ENTRY(m_wItemID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L130213
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 88 05 00
	00		 jne	 $L130209
$L130213:

; 1091 : 	COLUMN_ENTRY(m_bType)

  00020	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L130214
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 69 05 00
	00		 jne	 $L130209
$L130214:

; 1092 : 	COLUMN_ENTRY(m_bKind)

  0003f	8d 96 2f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3119]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L130215
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 4a 05 00
	00		 jne	 $L130209
$L130215:

; 1093 : 	COLUMN_ENTRY(m_wAttrID)

  0005e	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L130216
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 2b 05 00
	00		 jne	 $L130209
$L130216:

; 1094 : 	COLUMN_ENTRY(m_wUseValue)

  0007d	8d 8e 32 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3122]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L130217
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 0c 05 00
	00		 jne	 $L130209
$L130217:

; 1095 : 	COLUMN_ENTRY(m_dwClassID)

  0009c	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L130218
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 ed 04 00
	00		 jne	 $L130209
$L130218:

; 1096 : 	COLUMN_ENTRY(m_dwSlotID)

  000bb	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 0a		 je	 SHORT $L130219
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	0f 85 ce 04 00
	00		 jne	 $L130209
$L130219:

; 1097 : 	COLUMN_ENTRY(m_bPrmSlotID)

  000da	8d 8e 44 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3140]
  000e0	51		 push	 ecx
  000e1	6a 08		 push	 8
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ea	66 85 c0	 test	 ax, ax
  000ed	74 0a		 je	 SHORT $L130220
  000ef	66 3d 01 00	 cmp	 ax, 1
  000f3	0f 85 af 04 00
	00		 jne	 $L130209
$L130220:

; 1098 : 	COLUMN_ENTRY(m_bSubSlotID)

  000f9	8d 96 45 0c 00
	00		 lea	 edx, DWORD PTR [esi+3141]
  000ff	52		 push	 edx
  00100	6a 09		 push	 9
  00102	8b ce		 mov	 ecx, esi
  00104	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00109	66 85 c0	 test	 ax, ax
  0010c	74 0a		 je	 SHORT $L130221
  0010e	66 3d 01 00	 cmp	 ax, 1
  00112	0f 85 90 04 00
	00		 jne	 $L130209
$L130221:

; 1099 : 	COLUMN_ENTRY(m_bSlotCount)

  00118	8d 86 46 0c 00
	00		 lea	 eax, DWORD PTR [esi+3142]
  0011e	50		 push	 eax
  0011f	6a 0a		 push	 10			; 0000000aH
  00121	8b ce		 mov	 ecx, esi
  00123	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00128	66 85 c0	 test	 ax, ax
  0012b	74 0a		 je	 SHORT $L130222
  0012d	66 3d 01 00	 cmp	 ax, 1
  00131	0f 85 71 04 00
	00		 jne	 $L130209
$L130222:

; 1100 : 	COLUMN_ENTRY(m_fPrice)

  00137	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  0013d	51		 push	 ecx
  0013e	6a 0b		 push	 11			; 0000000bH
  00140	8b ce		 mov	 ecx, esi
  00142	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  00147	66 85 c0	 test	 ax, ax
  0014a	74 0a		 je	 SHORT $L130223
  0014c	66 3d 01 00	 cmp	 ax, 1
  00150	0f 85 52 04 00
	00		 jne	 $L130209
$L130223:

; 1101 : 	COLUMN_ENTRY(m_fPvPrice)

  00156	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  0015c	52		 push	 edx
  0015d	6a 0c		 push	 12			; 0000000cH
  0015f	8b ce		 mov	 ecx, esi
  00161	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  00166	66 85 c0	 test	 ax, ax
  00169	74 0a		 je	 SHORT $L130224
  0016b	66 3d 01 00	 cmp	 ax, 1
  0016f	0f 85 33 04 00
	00		 jne	 $L130209
$L130224:

; 1102 : 	COLUMN_ENTRY(m_bIsSell)

  00175	8d 86 4c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3148]
  0017b	50		 push	 eax
  0017c	6a 0d		 push	 13			; 0000000dH
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00185	66 85 c0	 test	 ax, ax
  00188	74 0a		 je	 SHORT $L130225
  0018a	66 3d 01 00	 cmp	 ax, 1
  0018e	0f 85 14 04 00
	00		 jne	 $L130209
$L130225:

; 1103 : 	COLUMN_ENTRY(m_bMinRange)

  00194	8d 8e 47 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3143]
  0019a	51		 push	 ecx
  0019b	6a 0e		 push	 14			; 0000000eH
  0019d	8b ce		 mov	 ecx, esi
  0019f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001a4	66 85 c0	 test	 ax, ax
  001a7	74 0a		 je	 SHORT $L130226
  001a9	66 3d 01 00	 cmp	 ax, 1
  001ad	0f 85 f5 03 00
	00		 jne	 $L130209
$L130226:

; 1104 : 	COLUMN_ENTRY(m_bMaxRange)

  001b3	8d 96 48 0c 00
	00		 lea	 edx, DWORD PTR [esi+3144]
  001b9	52		 push	 edx
  001ba	6a 0f		 push	 15			; 0000000fH
  001bc	8b ce		 mov	 ecx, esi
  001be	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001c3	66 85 c0	 test	 ax, ax
  001c6	74 0a		 je	 SHORT $L130227
  001c8	66 3d 01 00	 cmp	 ax, 1
  001cc	0f 85 d6 03 00
	00		 jne	 $L130209
$L130227:

; 1105 : 	COLUMN_ENTRY(m_bDefaultLevel)

  001d2	8d 86 49 0c 00
	00		 lea	 eax, DWORD PTR [esi+3145]
  001d8	50		 push	 eax
  001d9	6a 10		 push	 16			; 00000010H
  001db	8b ce		 mov	 ecx, esi
  001dd	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001e2	66 85 c0	 test	 ax, ax
  001e5	74 0a		 je	 SHORT $L130228
  001e7	66 3d 01 00	 cmp	 ax, 1
  001eb	0f 85 b7 03 00
	00		 jne	 $L130209
$L130228:

; 1106 : 	COLUMN_ENTRY(m_bStack)

  001f1	8d 8e 4a 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3146]
  001f7	51		 push	 ecx
  001f8	6a 11		 push	 17			; 00000011H
  001fa	8b ce		 mov	 ecx, esi
  001fc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00201	66 85 c0	 test	 ax, ax
  00204	74 0a		 je	 SHORT $L130229
  00206	66 3d 01 00	 cmp	 ax, 1
  0020a	0f 85 98 03 00
	00		 jne	 $L130209
$L130229:

; 1107 : 	COLUMN_ENTRY(m_bEquipSkill)

  00210	8d 96 4b 0c 00
	00		 lea	 edx, DWORD PTR [esi+3147]
  00216	52		 push	 edx
  00217	6a 12		 push	 18			; 00000012H
  00219	8b ce		 mov	 ecx, esi
  0021b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00220	66 85 c0	 test	 ax, ax
  00223	74 0a		 je	 SHORT $L130230
  00225	66 3d 01 00	 cmp	 ax, 1
  00229	0f 85 79 03 00
	00		 jne	 $L130209
$L130230:

; 1108 : 	COLUMN_ENTRY(m_bUseItemKind)

  0022f	8d 86 4d 0c 00
	00		 lea	 eax, DWORD PTR [esi+3149]
  00235	50		 push	 eax
  00236	6a 13		 push	 19			; 00000013H
  00238	8b ce		 mov	 ecx, esi
  0023a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0023f	66 85 c0	 test	 ax, ax
  00242	74 0a		 je	 SHORT $L130231
  00244	66 3d 01 00	 cmp	 ax, 1
  00248	0f 85 5a 03 00
	00		 jne	 $L130209
$L130231:

; 1109 : 	COLUMN_ENTRY(m_bUseItemCount)

  0024e	8d 8e 4e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3150]
  00254	51		 push	 ecx
  00255	6a 14		 push	 20			; 00000014H
  00257	8b ce		 mov	 ecx, esi
  00259	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0025e	66 85 c0	 test	 ax, ax
  00261	74 0a		 je	 SHORT $L130232
  00263	66 3d 01 00	 cmp	 ax, 1
  00267	0f 85 3b 03 00
	00		 jne	 $L130209
$L130232:

; 1110 : 	COLUMN_ENTRY(m_bGrade)

  0026d	8d 96 4f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3151]
  00273	52		 push	 edx
  00274	6a 15		 push	 21			; 00000015H
  00276	8b ce		 mov	 ecx, esi
  00278	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0027d	66 85 c0	 test	 ax, ax
  00280	74 0a		 je	 SHORT $L130233
  00282	66 3d 01 00	 cmp	 ax, 1
  00286	0f 85 1c 03 00
	00		 jne	 $L130209
$L130233:

; 1111 : 	COLUMN_ENTRY(m_wUseTime)

  0028c	8d 86 50 0c 00
	00		 lea	 eax, DWORD PTR [esi+3152]
  00292	50		 push	 eax
  00293	6a 16		 push	 22			; 00000016H
  00295	8b ce		 mov	 ecx, esi
  00297	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0029c	66 85 c0	 test	 ax, ax
  0029f	74 0a		 je	 SHORT $L130234
  002a1	66 3d 01 00	 cmp	 ax, 1
  002a5	0f 85 fd 02 00
	00		 jne	 $L130209
$L130234:

; 1112 : 	COLUMN_ENTRY(m_bUseType)

  002ab	8d 8e 52 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3154]
  002b1	51		 push	 ecx
  002b2	6a 17		 push	 23			; 00000017H
  002b4	8b ce		 mov	 ecx, esi
  002b6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  002bb	66 85 c0	 test	 ax, ax
  002be	74 0a		 je	 SHORT $L130235
  002c0	66 3d 01 00	 cmp	 ax, 1
  002c4	0f 85 de 02 00
	00		 jne	 $L130209
$L130235:

; 1113 : 	COLUMN_ENTRY(m_bCanGrade)

  002ca	8d 96 53 0c 00
	00		 lea	 edx, DWORD PTR [esi+3155]
  002d0	52		 push	 edx
  002d1	6a 18		 push	 24			; 00000018H
  002d3	8b ce		 mov	 ecx, esi
  002d5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  002da	66 85 c0	 test	 ax, ax
  002dd	74 0a		 je	 SHORT $L130236
  002df	66 3d 01 00	 cmp	 ax, 1
  002e3	0f 85 bf 02 00
	00		 jne	 $L130209
$L130236:

; 1114 : 	COLUMN_ENTRY(m_bCanMagic)

  002e9	8d 86 54 0c 00
	00		 lea	 eax, DWORD PTR [esi+3156]
  002ef	50		 push	 eax
  002f0	6a 19		 push	 25			; 00000019H
  002f2	8b ce		 mov	 ecx, esi
  002f4	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  002f9	66 85 c0	 test	 ax, ax
  002fc	74 0a		 je	 SHORT $L130237
  002fe	66 3d 01 00	 cmp	 ax, 1
  00302	0f 85 a0 02 00
	00		 jne	 $L130209
$L130237:

; 1115 : 	COLUMN_ENTRY(m_bCanRare)

  00308	8d 8e 55 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3157]
  0030e	51		 push	 ecx
  0030f	6a 1a		 push	 26			; 0000001aH
  00311	8b ce		 mov	 ecx, esi
  00313	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00318	66 85 c0	 test	 ax, ax
  0031b	74 0a		 je	 SHORT $L130238
  0031d	66 3d 01 00	 cmp	 ax, 1
  00321	0f 85 81 02 00
	00		 jne	 $L130209
$L130238:

; 1116 : 	COLUMN_ENTRY(m_bDropLevel)

  00327	8d 96 56 0c 00
	00		 lea	 edx, DWORD PTR [esi+3158]
  0032d	52		 push	 edx
  0032e	6a 1b		 push	 27			; 0000001bH
  00330	8b ce		 mov	 ecx, esi
  00332	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00337	66 85 c0	 test	 ax, ax
  0033a	74 0a		 je	 SHORT $L130239
  0033c	66 3d 01 00	 cmp	 ax, 1
  00340	0f 85 62 02 00
	00		 jne	 $L130209
$L130239:

; 1117 : 	COLUMN_ENTRY(m_dwSpeedInc)

  00346	8d 86 58 0c 00
	00		 lea	 eax, DWORD PTR [esi+3160]
  0034c	50		 push	 eax
  0034d	6a 1c		 push	 28			; 0000001cH
  0034f	8b ce		 mov	 ecx, esi
  00351	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00356	66 85 c0	 test	 ax, ax
  00359	74 0a		 je	 SHORT $L130240
  0035b	66 3d 01 00	 cmp	 ax, 1
  0035f	0f 85 43 02 00
	00		 jne	 $L130209
$L130240:

; 1118 : 	COLUMN_ENTRY(m_bItemCountry)

  00365	8d 8e 5c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3164]
  0036b	51		 push	 ecx
  0036c	6a 1d		 push	 29			; 0000001dH
  0036e	8b ce		 mov	 ecx, esi
  00370	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00375	66 85 c0	 test	 ax, ax
  00378	74 0a		 je	 SHORT $L130241
  0037a	66 3d 01 00	 cmp	 ax, 1
  0037e	0f 85 24 02 00
	00		 jne	 $L130209
$L130241:

; 1119 : 	COLUMN_ENTRY(m_bIsSpecial)

  00384	8d 96 5d 0c 00
	00		 lea	 edx, DWORD PTR [esi+3165]
  0038a	52		 push	 edx
  0038b	6a 1e		 push	 30			; 0000001eH
  0038d	8b ce		 mov	 ecx, esi
  0038f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00394	66 85 c0	 test	 ax, ax
  00397	74 0a		 je	 SHORT $L130242
  00399	66 3d 01 00	 cmp	 ax, 1
  0039d	0f 85 05 02 00
	00		 jne	 $L130209
$L130242:

; 1120 : 	COLUMN_ENTRY(m_dwDelay)

  003a3	8d 86 64 0c 00
	00		 lea	 eax, DWORD PTR [esi+3172]
  003a9	50		 push	 eax
  003aa	6a 1f		 push	 31			; 0000001fH
  003ac	8b ce		 mov	 ecx, esi
  003ae	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  003b3	66 85 c0	 test	 ax, ax
  003b6	74 0a		 je	 SHORT $L130243
  003b8	66 3d 01 00	 cmp	 ax, 1
  003bc	0f 85 e6 01 00
	00		 jne	 $L130209
$L130243:

; 1121 : 	COLUMN_ENTRY(m_bCanGamble)

  003c2	8d 8e 5e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3166]
  003c8	51		 push	 ecx
  003c9	6a 20		 push	 32			; 00000020H
  003cb	8b ce		 mov	 ecx, esi
  003cd	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  003d2	66 85 c0	 test	 ax, ax
  003d5	74 0a		 je	 SHORT $L130244
  003d7	66 3d 01 00	 cmp	 ax, 1
  003db	0f 85 c7 01 00
	00		 jne	 $L130209
$L130244:

; 1122 : 	COLUMN_ENTRY(m_wItemProb_G)

  003e1	8d 96 60 0c 00
	00		 lea	 edx, DWORD PTR [esi+3168]
  003e7	52		 push	 edx
  003e8	6a 21		 push	 33			; 00000021H
  003ea	8b ce		 mov	 ecx, esi
  003ec	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  003f1	66 85 c0	 test	 ax, ax
  003f4	74 0a		 je	 SHORT $L130245
  003f6	66 3d 01 00	 cmp	 ax, 1
  003fa	0f 85 a8 01 00
	00		 jne	 $L130209
$L130245:

; 1123 : 	COLUMN_ENTRY(m_bGambleProb)

  00400	8d 86 62 0c 00
	00		 lea	 eax, DWORD PTR [esi+3170]
  00406	50		 push	 eax
  00407	6a 22		 push	 34			; 00000022H
  00409	8b ce		 mov	 ecx, esi
  0040b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00410	66 85 c0	 test	 ax, ax
  00413	74 0a		 je	 SHORT $L130246
  00415	66 3d 01 00	 cmp	 ax, 1
  00419	0f 85 89 01 00
	00		 jne	 $L130209
$L130246:

; 1124 : 	COLUMN_ENTRY(m_bDestroyProb)

  0041f	8d 8e 63 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3171]
  00425	51		 push	 ecx
  00426	6a 23		 push	 35			; 00000023H
  00428	8b ce		 mov	 ecx, esi
  0042a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0042f	66 85 c0	 test	 ax, ax
  00432	74 0a		 je	 SHORT $L130247
  00434	66 3d 01 00	 cmp	 ax, 1
  00438	0f 85 6a 01 00
	00		 jne	 $L130209
$L130247:

; 1125 : 	COLUMN_ENTRY(m_dwDuraMax)

  0043e	8d 96 68 0c 00
	00		 lea	 edx, DWORD PTR [esi+3176]
  00444	52		 push	 edx
  00445	6a 24		 push	 36			; 00000024H
  00447	8b ce		 mov	 ecx, esi
  00449	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0044e	66 85 c0	 test	 ax, ax
  00451	74 0a		 je	 SHORT $L130248
  00453	66 3d 01 00	 cmp	 ax, 1
  00457	0f 85 4b 01 00
	00		 jne	 $L130209
$L130248:

; 1126 : 	COLUMN_ENTRY(m_bRefineMax)

  0045d	8d 86 6c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3180]
  00463	50		 push	 eax
  00464	6a 25		 push	 37			; 00000025H
  00466	8b ce		 mov	 ecx, esi
  00468	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0046d	66 85 c0	 test	 ax, ax
  00470	74 0a		 je	 SHORT $L130249
  00472	66 3d 01 00	 cmp	 ax, 1
  00476	0f 85 2c 01 00
	00		 jne	 $L130209
$L130249:

; 1127 : 	COLUMN_ENTRY(m_bCanRepair)

  0047c	8d 8e 6d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3181]
  00482	51		 push	 ecx
  00483	6a 26		 push	 38			; 00000026H
  00485	8b ce		 mov	 ecx, esi
  00487	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0048c	66 85 c0	 test	 ax, ax
  0048f	74 0a		 je	 SHORT $L130250
  00491	66 3d 01 00	 cmp	 ax, 1
  00495	0f 85 0d 01 00
	00		 jne	 $L130209
$L130250:

; 1128 : 	COLUMN_ENTRY(m_wDelayGroupID)

  0049b	8d 96 6e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3182]
  004a1	52		 push	 edx
  004a2	6a 27		 push	 39			; 00000027H
  004a4	8b ce		 mov	 ecx, esi
  004a6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  004ab	66 85 c0	 test	 ax, ax
  004ae	74 0a		 je	 SHORT $L130251
  004b0	66 3d 01 00	 cmp	 ax, 1
  004b4	0f 85 ee 00 00
	00		 jne	 $L130209
$L130251:

; 1129 : 	COLUMN_ENTRY(m_wWeight)

  004ba	8d 86 70 0c 00
	00		 lea	 eax, DWORD PTR [esi+3184]
  004c0	50		 push	 eax
  004c1	6a 28		 push	 40			; 00000028H
  004c3	8b ce		 mov	 ecx, esi
  004c5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  004ca	66 85 c0	 test	 ax, ax
  004cd	74 0a		 je	 SHORT $L130252
  004cf	66 3d 01 00	 cmp	 ax, 1
  004d3	0f 85 cf 00 00
	00		 jne	 $L130209
$L130252:

; 1130 : 	COLUMN_ENTRY(m_bGroupID)

  004d9	8d 8e 72 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3186]
  004df	51		 push	 ecx
  004e0	6a 29		 push	 41			; 00000029H
  004e2	8b ce		 mov	 ecx, esi
  004e4	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  004e9	66 85 c0	 test	 ax, ax
  004ec	74 0a		 je	 SHORT $L130253
  004ee	66 3d 01 00	 cmp	 ax, 1
  004f2	0f 85 b0 00 00
	00		 jne	 $L130209
$L130253:

; 1131 : 	COLUMN_ENTRY(m_bInitState)

  004f8	8d 96 73 0c 00
	00		 lea	 edx, DWORD PTR [esi+3187]
  004fe	52		 push	 edx
  004ff	6a 2a		 push	 42			; 0000002aH
  00501	8b ce		 mov	 ecx, esi
  00503	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00508	66 85 c0	 test	 ax, ax
  0050b	74 0a		 je	 SHORT $L130254
  0050d	66 3d 01 00	 cmp	 ax, 1
  00511	0f 85 91 00 00
	00		 jne	 $L130209
$L130254:

; 1132 : 	COLUMN_ENTRY(m_bCanWrap)

  00517	8d 86 74 0c 00
	00		 lea	 eax, DWORD PTR [esi+3188]
  0051d	50		 push	 eax
  0051e	6a 2b		 push	 43			; 0000002bH
  00520	8b ce		 mov	 ecx, esi
  00522	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00527	66 85 c0	 test	 ax, ax
  0052a	74 06		 je	 SHORT $L130255
  0052c	66 3d 01 00	 cmp	 ax, 1
  00530	75 76		 jne	 SHORT $L130209
$L130255:

; 1133 : 	COLUMN_ENTRY(m_dwCode)

  00532	8d 8e 78 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3192]
  00538	51		 push	 ecx
  00539	6a 2c		 push	 44			; 0000002cH
  0053b	8b ce		 mov	 ecx, esi
  0053d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00542	66 85 c0	 test	 ax, ax
  00545	74 06		 je	 SHORT $L130256
  00547	66 3d 01 00	 cmp	 ax, 1
  0054b	75 5b		 jne	 SHORT $L130209
$L130256:
  0054d	57		 push	 edi

; 1134 : 	COLUMN_ENTRY(m_bCanColor)

  0054e	8d 96 7c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3196]
  00554	52		 push	 edx
  00555	6a 2d		 push	 45			; 0000002dH
  00557	8b ce		 mov	 ecx, esi
  00559	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0055e	66 85 c0	 test	 ax, ax
  00561	bf 2e 00 00 00	 mov	 edi, 46			; 0000002eH
  00566	74 06		 je	 SHORT $L130257
  00568	66 3d 01 00	 cmp	 ax, 1
  0056c	75 39		 jne	 SHORT $L161963
$L130257:
  0056e	53		 push	 ebx
  0056f	55		 push	 ebp

; 1135 : 	for(int i=0; i<4; i++)

  00570	33 ed		 xor	 ebp, ebp
  00572	8d 9e 80 0c 00
	00		 lea	 ebx, DWORD PTR [esi+3200]
$L130259:

; 1136 : 	{
; 1137 : 		COLUMN_ENTRY(m_fRevision[i])

  00578	53		 push	 ebx
  00579	57		 push	 edi
  0057a	8b ce		 mov	 ecx, esi
  0057c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  00581	47		 inc	 edi
  00582	66 85 c0	 test	 ax, ax
  00585	74 06		 je	 SHORT $L130260
  00587	66 3d 01 00	 cmp	 ax, 1
  0058b	75 18		 jne	 SHORT $L161964
$L130260:

; 1135 : 	for(int i=0; i<4; i++)

  0058d	45		 inc	 ebp
  0058e	83 c3 04	 add	 ebx, 4
  00591	83 fd 04	 cmp	 ebp, 4
  00594	7c e2		 jl	 SHORT $L130259

; 1138 : 	}
; 1139 : 	COLUMN_ENTRY(m_bConsumable)

  00596	8d 86 90 0c 00
	00		 lea	 eax, DWORD PTR [esi+3216]
  0059c	50		 push	 eax
  0059d	57		 push	 edi
  0059e	8b ce		 mov	 ecx, esi
  005a0	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L161964:
  005a5	5d		 pop	 ebp
  005a6	5b		 pop	 ebx
$L161963:
  005a7	5f		 pop	 edi
$L130209:
  005a8	5e		 pop	 esi

; 1140 : END_COL()

  005a9	c3		 ret	 0
?BindColumns@CTBLItemChart@@UAEFXZ ENDP			; CTBLItemChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLItemChart@@UAE@XZ			; CTBLItemChart::~CTBLItemChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLItemChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLItemChart@@UAEPAXI@Z PROC NEAR			; CTBLItemChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLItemChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L161969
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L161969:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLItemChart@@UAEPAXI@Z ENDP			; CTBLItemChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLItemChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLItemChart@@UAE@XZ PROC NEAR			; CTBLItemChart::~CTBLItemChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLItemChart@@UAE@XZ ENDP				; CTBLItemChart::~CTBLItemChart
_TEXT	ENDS
PUBLIC	??0CTBLItemAttrChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLItemAttrChart::CTBLItemAttrChart
PUBLIC	?GetNumCol@CTBLItemAttrChart@@UAEHXZ		; CTBLItemAttrChart::GetNumCol
PUBLIC	?BindColumns@CTBLItemAttrChart@@UAEFXZ		; CTBLItemAttrChart::BindColumns
PUBLIC	??_7CTBLItemAttrChart@@6B@			; CTBLItemAttrChart::`vftable'
PUBLIC	??_GCTBLItemAttrChart@@UAEPAXI@Z		; CTBLItemAttrChart::`scalar deleting destructor'
PUBLIC	??_C@_0HC@LCHAMGIK@SELECT?5?7wID?0?5?7bKind?0?5?7bGrade?0?5?7w@ ; `string'
EXTRN	??_ECTBLItemAttrChart@@UAEPAXI@Z:NEAR		; CTBLItemAttrChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T162152 DD	0ffffffffH
	DD	FLAT:$L161978
$T162149 DD	019930520H
	DD	01H
	DD	FLAT:$T162152
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0HC@LCHAMGIK@SELECT?5?7wID?0?5?7bKind?0?5?7bGrade?0?5?7w@
CONST	SEGMENT
??_C@_0HC@LCHAMGIK@SELECT?5?7wID?0?5?7bKind?0?5?7bGrade?0?5?7w@ DB 'SELEC'
	DB	'T ', 09H, 'wID, ', 09H, 'bKind, ', 09H, 'bGrade, ', 09H, 'wMi'
	DB	'nAP, ', 09H, 'wMaxAP, ', 09H, 'wDP, ', 09H, 'wMinMAP, ', 09H, 'w'
	DB	'MaxMAP, ', 09H, 'wMDP, ', 09H, 'bBlockProb ', 09H, 'FROM TITE'
	DB	'MATTRCHART', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLItemAttrChart@@6B@
CONST	SEGMENT
??_7CTBLItemAttrChart@@6B@ DD FLAT:??_ECTBLItemAttrChart@@UAEPAXI@Z ; CTBLItemAttrChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLItemAttrChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLItemAttrChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLItemAttrChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T161977 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLItemAttrChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLItemAttrChart::CTBLItemAttrChart, COMDAT
; _this$ = ecx

; 1168 : 	FROM TITEMATTRCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLItemAttrChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0HC@LCHAMGIK@SELECT?5?7wID?0?5?7bKind?0?5?7bGrade?0?5?7w@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T161977[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLItemAttrChart@@6B@
  0005e	72 0d		 jb	 SHORT $L162150
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L162150:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161978:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLItemAttrChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162149
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLItemAttrChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLItemAttrChart::CTBLItemAttrChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLItemAttrChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLItemAttrChart@@UAEHXZ PROC NEAR		; CTBLItemAttrChart::GetNumCol, COMDAT
; _this$ = ecx

; 1170 : BEGIN_COLUMN(10)

  00000	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  00005	c3		 ret	 0
?GetNumCol@CTBLItemAttrChart@@UAEHXZ ENDP		; CTBLItemAttrChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLItemAttrChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLItemAttrChart@@UAEFXZ PROC NEAR	; CTBLItemAttrChart::BindColumns, COMDAT
; _this$ = ecx

; 1170 : BEGIN_COLUMN(10)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1171 : 	COLUMN_ENTRY(m_wID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L130313
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 f4 00 00
	00		 jne	 $L130309
$L130313:

; 1172 : 	COLUMN_ENTRY(m_bKind)

  00020	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L130314
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 d5 00 00
	00		 jne	 $L130309
$L130314:

; 1173 : 	COLUMN_ENTRY(m_bGrade)

  0003f	8d 96 2f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3119]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L130315
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 b6 00 00
	00		 jne	 $L130309
$L130315:

; 1174 : 	COLUMN_ENTRY(m_wMinAP)

  0005e	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L130316
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 97 00 00
	00		 jne	 $L130309
$L130316:

; 1175 : 	COLUMN_ENTRY(m_wMaxAP)

  0007d	8d 8e 32 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3122]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 06		 je	 SHORT $L130317
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	75 7c		 jne	 SHORT $L130309
$L130317:

; 1176 : 	COLUMN_ENTRY(m_wDP)

  00098	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0009e	52		 push	 edx
  0009f	6a 06		 push	 6
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000a8	66 85 c0	 test	 ax, ax
  000ab	74 06		 je	 SHORT $L130318
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	75 61		 jne	 SHORT $L130309
$L130318:

; 1177 : 	COLUMN_ENTRY(m_wMinMAP)

  000b3	8d 86 36 0c 00
	00		 lea	 eax, DWORD PTR [esi+3126]
  000b9	50		 push	 eax
  000ba	6a 07		 push	 7
  000bc	8b ce		 mov	 ecx, esi
  000be	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000c3	66 85 c0	 test	 ax, ax
  000c6	74 06		 je	 SHORT $L130319
  000c8	66 3d 01 00	 cmp	 ax, 1
  000cc	75 46		 jne	 SHORT $L130309
$L130319:

; 1178 : 	COLUMN_ENTRY(m_wMaxMAP)

  000ce	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  000d4	51		 push	 ecx
  000d5	6a 08		 push	 8
  000d7	8b ce		 mov	 ecx, esi
  000d9	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000de	66 85 c0	 test	 ax, ax
  000e1	74 06		 je	 SHORT $L130320
  000e3	66 3d 01 00	 cmp	 ax, 1
  000e7	75 2b		 jne	 SHORT $L130309
$L130320:

; 1179 : 	COLUMN_ENTRY(m_wMDP)

  000e9	8d 96 3a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3130]
  000ef	52		 push	 edx
  000f0	6a 09		 push	 9
  000f2	8b ce		 mov	 ecx, esi
  000f4	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000f9	66 85 c0	 test	 ax, ax
  000fc	74 06		 je	 SHORT $L130321
  000fe	66 3d 01 00	 cmp	 ax, 1
  00102	75 10		 jne	 SHORT $L130309
$L130321:

; 1180 : 	COLUMN_ENTRY(m_bBlockProb)

  00104	8d 86 3c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3132]
  0010a	50		 push	 eax
  0010b	6a 0a		 push	 10			; 0000000aH
  0010d	8b ce		 mov	 ecx, esi
  0010f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L130309:
  00114	5e		 pop	 esi

; 1181 : END_COL()

  00115	c3		 ret	 0
?BindColumns@CTBLItemAttrChart@@UAEFXZ ENDP		; CTBLItemAttrChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLItemAttrChart@@UAE@XZ			; CTBLItemAttrChart::~CTBLItemAttrChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLItemAttrChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLItemAttrChart@@UAEPAXI@Z PROC NEAR		; CTBLItemAttrChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLItemAttrChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L162164
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L162164:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLItemAttrChart@@UAEPAXI@Z ENDP			; CTBLItemAttrChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLItemAttrChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLItemAttrChart@@UAE@XZ PROC NEAR			; CTBLItemAttrChart::~CTBLItemAttrChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLItemAttrChart@@UAE@XZ ENDP			; CTBLItemAttrChart::~CTBLItemAttrChart
_TEXT	ENDS
PUBLIC	??0CTBLItemGradeChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLItemGradeChart::CTBLItemGradeChart
PUBLIC	?GetNumCol@CTBLItemGradeChart@@UAEHXZ		; CTBLItemGradeChart::GetNumCol
PUBLIC	?BindColumns@CTBLItemGradeChart@@UAEFXZ		; CTBLItemGradeChart::BindColumns
PUBLIC	??_7CTBLItemGradeChart@@6B@			; CTBLItemGradeChart::`vftable'
PUBLIC	??_GCTBLItemGradeChart@@UAEPAXI@Z		; CTBLItemGradeChart::`scalar deleting destructor'
PUBLIC	??_C@_0EA@GLGGHBOD@SELECT?5?7bLevel?0?5?7bGrade?0?5?7bProb?0@ ; `string'
EXTRN	??_ECTBLItemGradeChart@@UAEPAXI@Z:NEAR		; CTBLItemGradeChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T162347 DD	0ffffffffH
	DD	FLAT:$L162173
$T162344 DD	019930520H
	DD	01H
	DD	FLAT:$T162347
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EA@GLGGHBOD@SELECT?5?7bLevel?0?5?7bGrade?0?5?7bProb?0@
CONST	SEGMENT
??_C@_0EA@GLGGHBOD@SELECT?5?7bLevel?0?5?7bGrade?0?5?7bProb?0@ DB 'SELECT '
	DB	09H, 'bLevel, ', 09H, 'bGrade, ', 09H, 'bProb, ', 09H, 'dwMone'
	DB	'y ', 09H, 'FROM TITEMGRADECHART', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLItemGradeChart@@6B@
CONST	SEGMENT
??_7CTBLItemGradeChart@@6B@ DD FLAT:??_ECTBLItemGradeChart@@UAEPAXI@Z ; CTBLItemGradeChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLItemGradeChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLItemGradeChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLItemGradeChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T162172 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLItemGradeChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLItemGradeChart::CTBLItemGradeChart, COMDAT
; _this$ = ecx

; 1197 : 	FROM TITEMGRADECHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLItemGradeChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@GLGGHBOD@SELECT?5?7bLevel?0?5?7bGrade?0?5?7bProb?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T162172[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLItemGradeChart@@6B@
  0005e	72 0d		 jb	 SHORT $L162345
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L162345:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L162173:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLItemGradeChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162344
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLItemGradeChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLItemGradeChart::CTBLItemGradeChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLItemGradeChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLItemGradeChart@@UAEHXZ PROC NEAR		; CTBLItemGradeChart::GetNumCol, COMDAT
; _this$ = ecx

; 1199 : BEGIN_COLUMN(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumCol@CTBLItemGradeChart@@UAEHXZ ENDP		; CTBLItemGradeChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLItemGradeChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLItemGradeChart@@UAEFXZ PROC NEAR	; CTBLItemGradeChart::BindColumns, COMDAT
; _this$ = ecx

; 1199 : BEGIN_COLUMN(4)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1200 : 	COLUMN_ENTRY(m_bLevel)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L130366
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 46		 jne	 SHORT $L130362
$L130366:

; 1201 : 	COLUMN_ENTRY(m_bGrade)

  0001c	8d 8e 2d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3117]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L130367
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 2b		 jne	 SHORT $L130362
$L130367:

; 1202 : 	COLUMN_ENTRY(m_bProb)

  00037	8d 96 2e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3118]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L130368
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 10		 jne	 SHORT $L130362
$L130368:

; 1203 : 	COLUMN_ENTRY(m_dwMoney)

  00052	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L130362:
  00062	5e		 pop	 esi

; 1204 : END_COL()

  00063	c3		 ret	 0
?BindColumns@CTBLItemGradeChart@@UAEFXZ ENDP		; CTBLItemGradeChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLItemGradeChart@@UAE@XZ			; CTBLItemGradeChart::~CTBLItemGradeChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLItemGradeChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLItemGradeChart@@UAEPAXI@Z PROC NEAR		; CTBLItemGradeChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLItemGradeChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L162359
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L162359:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLItemGradeChart@@UAEPAXI@Z ENDP			; CTBLItemGradeChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLItemGradeChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLItemGradeChart@@UAE@XZ PROC NEAR			; CTBLItemGradeChart::~CTBLItemGradeChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLItemGradeChart@@UAE@XZ ENDP			; CTBLItemGradeChart::~CTBLItemGradeChart
_TEXT	ENDS
PUBLIC	??0CTBLInven@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLInven::CTBLInven
PUBLIC	?GetNumCol@CTBLInven@@UAEHXZ			; CTBLInven::GetNumCol
PUBLIC	?BindColumns@CTBLInven@@UAEFXZ			; CTBLInven::BindColumns
PUBLIC	?GetNumParam@CTBLInven@@UAEHXZ			; CTBLInven::GetNumParam
PUBLIC	?BindParameters@CTBLInven@@UAEFH@Z		; CTBLInven::BindParameters
PUBLIC	??_7CTBLInven@@6B@				; CTBLInven::`vftable'
PUBLIC	??_GCTBLInven@@UAEPAXI@Z			; CTBLInven::`scalar deleting destructor'
PUBLIC	??_C@_0FD@PAHIPHFP@SELECT?5?7bInvenID?0?5?7wItemID?0?5?7dEn@ ; `string'
EXTRN	??_ECTBLInven@@UAEPAXI@Z:NEAR			; CTBLInven::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T162542 DD	0ffffffffH
	DD	FLAT:$L162368
$T162539 DD	019930520H
	DD	01H
	DD	FLAT:$T162542
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FD@PAHIPHFP@SELECT?5?7bInvenID?0?5?7wItemID?0?5?7dEn@
CONST	SEGMENT
??_C@_0FD@PAHIPHFP@SELECT?5?7bInvenID?0?5?7wItemID?0?5?7dEn@ DB 'SELECT ', 09H
	DB	'bInvenID, ', 09H, 'wItemID, ', 09H, 'dEndTime, ', 09H, 'bELD '
	DB	09H, 'FROM TINVENTABLE ', 09H, 'WHERE dwCharID = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLInven@@6B@
CONST	SEGMENT
??_7CTBLInven@@6B@ DD FLAT:??_ECTBLInven@@UAEPAXI@Z	; CTBLInven::`vftable'
	DD	FLAT:?GetNumCol@CTBLInven@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLInven@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLInven@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLInven@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLInven@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T162367 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLInven@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLInven::CTBLInven, COMDAT
; _this$ = ecx

; 1223 : 	WHERE dwCharID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLInven@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FD@PAHIPHFP@SELECT?5?7bInvenID?0?5?7wItemID?0?5?7dEn@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T162367[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLInven@@6B@
  0005e	72 0d		 jb	 SHORT $L162540
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L162540:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L162368:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLInven@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162539
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLInven@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLInven::CTBLInven
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLInven@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLInven@@UAEHXZ PROC NEAR			; CTBLInven::GetNumCol, COMDAT
; _this$ = ecx

; 1225 : BEGIN_COLUMN(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumCol@CTBLInven@@UAEHXZ ENDP			; CTBLInven::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLInven@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLInven@@UAEFXZ PROC NEAR		; CTBLInven::BindColumns, COMDAT
; _this$ = ecx

; 1225 : BEGIN_COLUMN(4)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1226 : 	COLUMN_ENTRY(m_bInvenID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L130417
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 46		 jne	 SHORT $L130413
$L130417:

; 1227 : 	COLUMN_ENTRY(m_wItemID)

  0001c	8d 8e 32 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3122]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L130418
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 2b		 jne	 SHORT $L130413
$L130418:

; 1228 : 	COLUMN_ENTRY(m_dEndTime)

  00037	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L130419
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 10		 jne	 SHORT $L130413
$L130419:

; 1229 : 	COLUMN_ENTRY(m_bELD)

  00052	8d 86 44 0c 00
	00		 lea	 eax, DWORD PTR [esi+3140]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L130413:
  00062	5e		 pop	 esi

; 1230 : END_COL()

  00063	c3		 ret	 0
?BindColumns@CTBLInven@@UAEFXZ ENDP			; CTBLInven::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLInven@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLInven@@UAEHXZ PROC NEAR		; CTBLInven::GetNumParam, COMDAT
; _this$ = ecx

; 1232 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLInven@@UAEHXZ ENDP			; CTBLInven::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLInven@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLInven@@UAEFH@Z PROC NEAR		; CTBLInven::BindParameters, COMDAT
; _this$ = ecx

; 1233 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L130425
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L130425:

; 1234 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLInven@@UAEFH@Z ENDP			; CTBLInven::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLInven@@UAE@XZ				; CTBLInven::~CTBLInven
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLInven@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLInven@@UAEPAXI@Z PROC NEAR			; CTBLInven::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLInven@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L162560
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L162560:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLInven@@UAEPAXI@Z ENDP				; CTBLInven::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLInven@@UAE@XZ
_TEXT	SEGMENT
??1CTBLInven@@UAE@XZ PROC NEAR				; CTBLInven::~CTBLInven, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLInven@@UAE@XZ ENDP				; CTBLInven::~CTBLInven
_TEXT	ENDS
PUBLIC	??0CTBLItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLItem::CTBLItem
PUBLIC	?GetNumCol@CTBLItem@@UAEHXZ			; CTBLItem::GetNumCol
PUBLIC	?BindColumns@CTBLItem@@UAEFXZ			; CTBLItem::BindColumns
PUBLIC	?GetNumParam@CTBLItem@@UAEHXZ			; CTBLItem::GetNumParam
PUBLIC	?BindParameters@CTBLItem@@UAEFH@Z		; CTBLItem::BindParameters
PUBLIC	??_7CTBLItem@@6B@				; CTBLItem::`vftable'
PUBLIC	??_GCTBLItem@@UAEPAXI@Z				; CTBLItem::`scalar deleting destructor'
PUBLIC	??_C@_0BLB@MEBPMIIO@SELECT?5?7dlID?0?5?7bStorageType?0?5?7dw@ ; `string'
EXTRN	??_ECTBLItem@@UAEPAXI@Z:NEAR			; CTBLItem::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T162743 DD	0ffffffffH
	DD	FLAT:$L162569
$T162740 DD	019930520H
	DD	01H
	DD	FLAT:$T162743
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BLB@MEBPMIIO@SELECT?5?7dlID?0?5?7bStorageType?0?5?7dw@
CONST	SEGMENT
??_C@_0BLB@MEBPMIIO@SELECT?5?7dlID?0?5?7bStorageType?0?5?7dw@ DB 'SELECT '
	DB	09H, 'dlID, ', 09H, 'bStorageType, ', 09H, 'dwStorageID, ', 09H
	DB	'bOwnerType, ', 09H, 'dwOwnerID, ', 09H, 'bItemID, ', 09H, 'wI'
	DB	'temID, ', 09H, 'bLevel, ', 09H, 'bCount, ', 09H, 'bGLevel, ', 09H
	DB	'dwDuraMax, ', 09H, 'dwDuraCur, ', 09H, 'bRefineCur, ', 09H, 'd'
	DB	'EndTime, ', 09H, 'bGradeEffect, ', 09H, 'bMagic1, ', 09H, 'bM'
	DB	'agic2, ', 09H, 'bMagic3, ', 09H, 'bMagic4, ', 09H, 'bMagic5, '
	DB	09H, 'bMagic6, ', 09H, 'wValue1, ', 09H, 'wValue2, ', 09H, 'wV'
	DB	'alue3, ', 09H, 'wValue4, ', 09H, 'wValue5, ', 09H, 'wValue6, '
	DB	09H, 'dwTime1, ', 09H, 'dwTime2, ', 09H, 'dwTime3, ', 09H, 'dw'
	DB	'Time4, ', 09H, 'dwTime5, ', 09H, 'dwTime6 ', 09H, 'FROM TITEM'
	DB	'TABLE ', 09H, 'WHERE dwOwnerID = ? AND bOwnerType=? AND bStor'
	DB	'ageType<>2', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLItem@@6B@
CONST	SEGMENT
??_7CTBLItem@@6B@ DD FLAT:??_ECTBLItem@@UAEPAXI@Z	; CTBLItem::`vftable'
	DD	FLAT:?GetNumCol@CTBLItem@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLItem@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLItem@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLItem@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T162568 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLItem::CTBLItem, COMDAT
; _this$ = ecx

; 1282 : 	WHERE dwOwnerID = ? AND bOwnerType=? AND bStorageType<>2"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BLB@MEBPMIIO@SELECT?5?7dlID?0?5?7bStorageType?0?5?7dw@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T162568[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLItem@@6B@
  0005e	72 0d		 jb	 SHORT $L162741
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L162741:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L162569:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162740
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLItem::CTBLItem
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLItem@@UAEHXZ PROC NEAR			; CTBLItem::GetNumCol, COMDAT
; _this$ = ecx

; 1284 : BEGIN_COLUMN(33)

  00000	b8 21 00 00 00	 mov	 eax, 33			; 00000021H
  00005	c3		 ret	 0
?GetNumCol@CTBLItem@@UAEHXZ ENDP			; CTBLItem::GetNumCol
_TEXT	ENDS
EXTRN	?BindCol@CSqlBase@@QAEFFPA_J@Z:NEAR		; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindColumns@CTBLItem@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLItem@@UAEFXZ PROC NEAR			; CTBLItem::BindColumns, COMDAT
; _this$ = ecx

; 1284 : BEGIN_COLUMN(33)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1285 : 	COLUMN_ENTRY(m_item.m_dlID)

  00003	8d 86 40 0c 00
	00		 lea	 eax, DWORD PTR [esi+3136]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPA_J@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L130478
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 bd 03 00
	00		 jne	 $L130474
$L130478:

; 1286 : 	COLUMN_ENTRY(m_bStorageType)

  00020	8d 8e 2c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3116]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L130479
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 9e 03 00
	00		 jne	 $L130474
$L130479:

; 1287 : 	COLUMN_ENTRY(m_dwStorageID)

  0003f	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L130480
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 7f 03 00
	00		 jne	 $L130474
$L130480:

; 1288 : 	COLUMN_ENTRY(m_bOwnerType)

  0005e	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L130481
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 60 03 00
	00		 jne	 $L130474
$L130481:

; 1289 : 	COLUMN_ENTRY(m_dwOwnerID)

  0007d	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L130482
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 41 03 00
	00		 jne	 $L130474
$L130482:

; 1290 : 	COLUMN_ENTRY(m_item.m_bItemID)

  0009c	8d 96 48 0c 00
	00		 lea	 edx, DWORD PTR [esi+3144]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L130483
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 22 03 00
	00		 jne	 $L130474
$L130483:

; 1291 : 	COLUMN_ENTRY(m_item.m_wItemID)

  000bb	8d 86 4a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3146]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 0a		 je	 SHORT $L130484
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	0f 85 03 03 00
	00		 jne	 $L130474
$L130484:

; 1292 : 	COLUMN_ENTRY(m_item.m_bLevel)

  000da	8d 8e 4c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3148]
  000e0	51		 push	 ecx
  000e1	6a 08		 push	 8
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ea	66 85 c0	 test	 ax, ax
  000ed	74 0a		 je	 SHORT $L130485
  000ef	66 3d 01 00	 cmp	 ax, 1
  000f3	0f 85 e4 02 00
	00		 jne	 $L130474
$L130485:

; 1293 : 	COLUMN_ENTRY(m_item.m_bCount)

  000f9	8d 96 4d 0c 00
	00		 lea	 edx, DWORD PTR [esi+3149]
  000ff	52		 push	 edx
  00100	6a 09		 push	 9
  00102	8b ce		 mov	 ecx, esi
  00104	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00109	66 85 c0	 test	 ax, ax
  0010c	74 0a		 je	 SHORT $L130486
  0010e	66 3d 01 00	 cmp	 ax, 1
  00112	0f 85 c5 02 00
	00		 jne	 $L130474
$L130486:

; 1294 : 	COLUMN_ENTRY(m_item.m_bGLevel)

  00118	8d 86 4e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3150]
  0011e	50		 push	 eax
  0011f	6a 0a		 push	 10			; 0000000aH
  00121	8b ce		 mov	 ecx, esi
  00123	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00128	66 85 c0	 test	 ax, ax
  0012b	74 0a		 je	 SHORT $L130487
  0012d	66 3d 01 00	 cmp	 ax, 1
  00131	0f 85 a6 02 00
	00		 jne	 $L130474
$L130487:

; 1295 : 	COLUMN_ENTRY(m_item.m_dwDuraMax)

  00137	8d 8e 50 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3152]
  0013d	51		 push	 ecx
  0013e	6a 0b		 push	 11			; 0000000bH
  00140	8b ce		 mov	 ecx, esi
  00142	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00147	66 85 c0	 test	 ax, ax
  0014a	74 0a		 je	 SHORT $L130488
  0014c	66 3d 01 00	 cmp	 ax, 1
  00150	0f 85 87 02 00
	00		 jne	 $L130474
$L130488:

; 1296 : 	COLUMN_ENTRY(m_item.m_dwDuraCur)

  00156	8d 96 54 0c 00
	00		 lea	 edx, DWORD PTR [esi+3156]
  0015c	52		 push	 edx
  0015d	6a 0c		 push	 12			; 0000000cH
  0015f	8b ce		 mov	 ecx, esi
  00161	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00166	66 85 c0	 test	 ax, ax
  00169	74 0a		 je	 SHORT $L130489
  0016b	66 3d 01 00	 cmp	 ax, 1
  0016f	0f 85 68 02 00
	00		 jne	 $L130474
$L130489:

; 1297 : 	COLUMN_ENTRY(m_item.m_bRefineCur)

  00175	8d 86 58 0c 00
	00		 lea	 eax, DWORD PTR [esi+3160]
  0017b	50		 push	 eax
  0017c	6a 0d		 push	 13			; 0000000dH
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00185	66 85 c0	 test	 ax, ax
  00188	74 0a		 je	 SHORT $L130490
  0018a	66 3d 01 00	 cmp	 ax, 1
  0018e	0f 85 49 02 00
	00		 jne	 $L130474
$L130490:

; 1298 : 	COLUMN_ENTRY(m_item.m_dEndTime)

  00194	8d 8e 5c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3164]
  0019a	51		 push	 ecx
  0019b	6a 0e		 push	 14			; 0000000eH
  0019d	8b ce		 mov	 ecx, esi
  0019f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
  001a4	66 85 c0	 test	 ax, ax
  001a7	74 0a		 je	 SHORT $L130491
  001a9	66 3d 01 00	 cmp	 ax, 1
  001ad	0f 85 2a 02 00
	00		 jne	 $L130474
$L130491:

; 1299 : 	COLUMN_ENTRY(m_item.m_bGradeEffect)

  001b3	8d 96 6c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3180]
  001b9	52		 push	 edx
  001ba	6a 0f		 push	 15			; 0000000fH
  001bc	8b ce		 mov	 ecx, esi
  001be	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001c3	66 85 c0	 test	 ax, ax
  001c6	74 0a		 je	 SHORT $L130492
  001c8	66 3d 01 00	 cmp	 ax, 1
  001cc	0f 85 0b 02 00
	00		 jne	 $L130474
$L130492:

; 1300 : 	COLUMN_ENTRY(m_item.m_bMagic[0])

  001d2	8d 86 6d 0c 00
	00		 lea	 eax, DWORD PTR [esi+3181]
  001d8	50		 push	 eax
  001d9	6a 10		 push	 16			; 00000010H
  001db	8b ce		 mov	 ecx, esi
  001dd	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001e2	66 85 c0	 test	 ax, ax
  001e5	74 0a		 je	 SHORT $L130493
  001e7	66 3d 01 00	 cmp	 ax, 1
  001eb	0f 85 ec 01 00
	00		 jne	 $L130474
$L130493:

; 1301 : 	COLUMN_ENTRY(m_item.m_bMagic[1])

  001f1	8d 8e 6e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3182]
  001f7	51		 push	 ecx
  001f8	6a 11		 push	 17			; 00000011H
  001fa	8b ce		 mov	 ecx, esi
  001fc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00201	66 85 c0	 test	 ax, ax
  00204	74 0a		 je	 SHORT $L130494
  00206	66 3d 01 00	 cmp	 ax, 1
  0020a	0f 85 cd 01 00
	00		 jne	 $L130474
$L130494:

; 1302 : 	COLUMN_ENTRY(m_item.m_bMagic[2])

  00210	8d 96 6f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3183]
  00216	52		 push	 edx
  00217	6a 12		 push	 18			; 00000012H
  00219	8b ce		 mov	 ecx, esi
  0021b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00220	66 85 c0	 test	 ax, ax
  00223	74 0a		 je	 SHORT $L130495
  00225	66 3d 01 00	 cmp	 ax, 1
  00229	0f 85 ae 01 00
	00		 jne	 $L130474
$L130495:

; 1303 : 	COLUMN_ENTRY(m_item.m_bMagic[3])

  0022f	8d 86 70 0c 00
	00		 lea	 eax, DWORD PTR [esi+3184]
  00235	50		 push	 eax
  00236	6a 13		 push	 19			; 00000013H
  00238	8b ce		 mov	 ecx, esi
  0023a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0023f	66 85 c0	 test	 ax, ax
  00242	74 0a		 je	 SHORT $L130496
  00244	66 3d 01 00	 cmp	 ax, 1
  00248	0f 85 8f 01 00
	00		 jne	 $L130474
$L130496:

; 1304 : 	COLUMN_ENTRY(m_item.m_bMagic[4])

  0024e	8d 8e 71 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3185]
  00254	51		 push	 ecx
  00255	6a 14		 push	 20			; 00000014H
  00257	8b ce		 mov	 ecx, esi
  00259	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0025e	66 85 c0	 test	 ax, ax
  00261	74 0a		 je	 SHORT $L130497
  00263	66 3d 01 00	 cmp	 ax, 1
  00267	0f 85 70 01 00
	00		 jne	 $L130474
$L130497:

; 1305 : 	COLUMN_ENTRY(m_item.m_bMagic[5])

  0026d	8d 96 72 0c 00
	00		 lea	 edx, DWORD PTR [esi+3186]
  00273	52		 push	 edx
  00274	6a 15		 push	 21			; 00000015H
  00276	8b ce		 mov	 ecx, esi
  00278	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0027d	66 85 c0	 test	 ax, ax
  00280	74 0a		 je	 SHORT $L130498
  00282	66 3d 01 00	 cmp	 ax, 1
  00286	0f 85 51 01 00
	00		 jne	 $L130474
$L130498:

; 1306 : 	COLUMN_ENTRY(m_item.m_wValue[0])

  0028c	8d 86 74 0c 00
	00		 lea	 eax, DWORD PTR [esi+3188]
  00292	50		 push	 eax
  00293	6a 16		 push	 22			; 00000016H
  00295	8b ce		 mov	 ecx, esi
  00297	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0029c	66 85 c0	 test	 ax, ax
  0029f	74 0a		 je	 SHORT $L130499
  002a1	66 3d 01 00	 cmp	 ax, 1
  002a5	0f 85 32 01 00
	00		 jne	 $L130474
$L130499:

; 1307 : 	COLUMN_ENTRY(m_item.m_wValue[1])

  002ab	8d 8e 76 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3190]
  002b1	51		 push	 ecx
  002b2	6a 17		 push	 23			; 00000017H
  002b4	8b ce		 mov	 ecx, esi
  002b6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  002bb	66 85 c0	 test	 ax, ax
  002be	74 0a		 je	 SHORT $L130500
  002c0	66 3d 01 00	 cmp	 ax, 1
  002c4	0f 85 13 01 00
	00		 jne	 $L130474
$L130500:

; 1308 : 	COLUMN_ENTRY(m_item.m_wValue[2])

  002ca	8d 96 78 0c 00
	00		 lea	 edx, DWORD PTR [esi+3192]
  002d0	52		 push	 edx
  002d1	6a 18		 push	 24			; 00000018H
  002d3	8b ce		 mov	 ecx, esi
  002d5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  002da	66 85 c0	 test	 ax, ax
  002dd	74 0a		 je	 SHORT $L130501
  002df	66 3d 01 00	 cmp	 ax, 1
  002e3	0f 85 f4 00 00
	00		 jne	 $L130474
$L130501:

; 1309 : 	COLUMN_ENTRY(m_item.m_wValue[3])

  002e9	8d 86 7a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3194]
  002ef	50		 push	 eax
  002f0	6a 19		 push	 25			; 00000019H
  002f2	8b ce		 mov	 ecx, esi
  002f4	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  002f9	66 85 c0	 test	 ax, ax
  002fc	74 0a		 je	 SHORT $L130502
  002fe	66 3d 01 00	 cmp	 ax, 1
  00302	0f 85 d5 00 00
	00		 jne	 $L130474
$L130502:

; 1310 : 	COLUMN_ENTRY(m_item.m_wValue[4])

  00308	8d 8e 7c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3196]
  0030e	51		 push	 ecx
  0030f	6a 1a		 push	 26			; 0000001aH
  00311	8b ce		 mov	 ecx, esi
  00313	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00318	66 85 c0	 test	 ax, ax
  0031b	74 0a		 je	 SHORT $L130503
  0031d	66 3d 01 00	 cmp	 ax, 1
  00321	0f 85 b6 00 00
	00		 jne	 $L130474
$L130503:

; 1311 : 	COLUMN_ENTRY(m_item.m_wValue[5])

  00327	8d 96 7e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3198]
  0032d	52		 push	 edx
  0032e	6a 1b		 push	 27			; 0000001bH
  00330	8b ce		 mov	 ecx, esi
  00332	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00337	66 85 c0	 test	 ax, ax
  0033a	74 0a		 je	 SHORT $L130504
  0033c	66 3d 01 00	 cmp	 ax, 1
  00340	0f 85 97 00 00
	00		 jne	 $L130474
$L130504:

; 1312 : 	COLUMN_ENTRY(m_item.m_dwExtValue[0])

  00346	8d 86 80 0c 00
	00		 lea	 eax, DWORD PTR [esi+3200]
  0034c	50		 push	 eax
  0034d	6a 1c		 push	 28			; 0000001cH
  0034f	8b ce		 mov	 ecx, esi
  00351	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00356	66 85 c0	 test	 ax, ax
  00359	74 06		 je	 SHORT $L130505
  0035b	66 3d 01 00	 cmp	 ax, 1
  0035f	75 7c		 jne	 SHORT $L130474
$L130505:

; 1313 : 	COLUMN_ENTRY(m_item.m_dwExtValue[1])

  00361	8d 8e 84 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3204]
  00367	51		 push	 ecx
  00368	6a 1d		 push	 29			; 0000001dH
  0036a	8b ce		 mov	 ecx, esi
  0036c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00371	66 85 c0	 test	 ax, ax
  00374	74 06		 je	 SHORT $L130506
  00376	66 3d 01 00	 cmp	 ax, 1
  0037a	75 61		 jne	 SHORT $L130474
$L130506:

; 1314 : 	COLUMN_ENTRY(m_item.m_dwExtValue[2])

  0037c	8d 96 88 0c 00
	00		 lea	 edx, DWORD PTR [esi+3208]
  00382	52		 push	 edx
  00383	6a 1e		 push	 30			; 0000001eH
  00385	8b ce		 mov	 ecx, esi
  00387	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0038c	66 85 c0	 test	 ax, ax
  0038f	74 06		 je	 SHORT $L130507
  00391	66 3d 01 00	 cmp	 ax, 1
  00395	75 46		 jne	 SHORT $L130474
$L130507:

; 1315 : 	COLUMN_ENTRY(m_item.m_dwExtValue[3])

  00397	8d 86 8c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3212]
  0039d	50		 push	 eax
  0039e	6a 1f		 push	 31			; 0000001fH
  003a0	8b ce		 mov	 ecx, esi
  003a2	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  003a7	66 85 c0	 test	 ax, ax
  003aa	74 06		 je	 SHORT $L130508
  003ac	66 3d 01 00	 cmp	 ax, 1
  003b0	75 2b		 jne	 SHORT $L130474
$L130508:

; 1316 : 	COLUMN_ENTRY(m_item.m_dwExtValue[4])

  003b2	8d 8e 90 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3216]
  003b8	51		 push	 ecx
  003b9	6a 20		 push	 32			; 00000020H
  003bb	8b ce		 mov	 ecx, esi
  003bd	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  003c2	66 85 c0	 test	 ax, ax
  003c5	74 06		 je	 SHORT $L130509
  003c7	66 3d 01 00	 cmp	 ax, 1
  003cb	75 10		 jne	 SHORT $L130474
$L130509:

; 1317 : 	COLUMN_ENTRY(m_item.m_dwExtValue[5])

  003cd	8d 96 94 0c 00
	00		 lea	 edx, DWORD PTR [esi+3220]
  003d3	52		 push	 edx
  003d4	6a 21		 push	 33			; 00000021H
  003d6	8b ce		 mov	 ecx, esi
  003d8	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L130474:
  003dd	5e		 pop	 esi

; 1318 : END_COL()

  003de	c3		 ret	 0
?BindColumns@CTBLItem@@UAEFXZ ENDP			; CTBLItem::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLItem@@UAEHXZ PROC NEAR			; CTBLItem::GetNumParam, COMDAT
; _this$ = ecx

; 1320 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CTBLItem@@UAEHXZ ENDP			; CTBLItem::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLItem@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLItem@@UAEFH@Z PROC NEAR		; CTBLItem::BindParameters, COMDAT
; _this$ = ecx

; 1320 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1321 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwOwnerID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L130520
  00014	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L130520
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L130515
$L130520:

; 1322 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bOwnerType)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L130515
  0003d	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L130515:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1323 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CTBLItem@@UAEFH@Z ENDP			; CTBLItem::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLItem@@UAE@XZ				; CTBLItem::~CTBLItem
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLItem@@UAEPAXI@Z PROC NEAR			; CTBLItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLItem@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L162761
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L162761:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLItem@@UAEPAXI@Z ENDP				; CTBLItem::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLItem@@UAE@XZ
_TEXT	SEGMENT
??1CTBLItem@@UAE@XZ PROC NEAR				; CTBLItem::~CTBLItem, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLItem@@UAE@XZ ENDP				; CTBLItem::~CTBLItem
_TEXT	ENDS
PUBLIC	??0CTBLPostItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLPostItem::CTBLPostItem
PUBLIC	?GetNumCol@CTBLPostItem@@UAEHXZ			; CTBLPostItem::GetNumCol
PUBLIC	?BindColumns@CTBLPostItem@@UAEFXZ		; CTBLPostItem::BindColumns
PUBLIC	?GetNumParam@CTBLPostItem@@UAEHXZ		; CTBLPostItem::GetNumParam
PUBLIC	?BindParameters@CTBLPostItem@@UAEFH@Z		; CTBLPostItem::BindParameters
PUBLIC	??_7CTBLPostItem@@6B@				; CTBLPostItem::`vftable'
PUBLIC	??_GCTBLPostItem@@UAEPAXI@Z			; CTBLPostItem::`scalar deleting destructor'
PUBLIC	??_C@_0BIN@DIECFCGK@SELECT?5?7dlID?0?5?7bItemID?0?5?7wItemID@ ; `string'
EXTRN	??_ECTBLPostItem@@UAEPAXI@Z:NEAR		; CTBLPostItem::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T162944 DD	0ffffffffH
	DD	FLAT:$L162770
$T162941 DD	019930520H
	DD	01H
	DD	FLAT:$T162944
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BIN@DIECFCGK@SELECT?5?7dlID?0?5?7bItemID?0?5?7wItemID@
CONST	SEGMENT
??_C@_0BIN@DIECFCGK@SELECT?5?7dlID?0?5?7bItemID?0?5?7wItemID@ DB 'SELECT '
	DB	09H, 'dlID, ', 09H, 'bItemID, ', 09H, 'wItemID, ', 09H, 'bLeve'
	DB	'l, ', 09H, 'bCount, ', 09H, 'bGLevel, ', 09H, 'dwDuraMax, ', 09H
	DB	'dwDuraCur, ', 09H, 'bRefineCur, ', 09H, 'dEndTime, ', 09H, 'b'
	DB	'GradeEffect, ', 09H, 'bMagic1, ', 09H, 'bMagic2, ', 09H, 'bMa'
	DB	'gic3, ', 09H, 'bMagic4, ', 09H, 'bMagic5, ', 09H, 'bMagic6, ', 09H
	DB	'wValue1, ', 09H, 'wValue2, ', 09H, 'wValue3, ', 09H, 'wValue4'
	DB	', ', 09H, 'wValue5, ', 09H, 'wValue6, ', 09H, 'dwTime1, ', 09H
	DB	'dwTime2, ', 09H, 'dwTime3, ', 09H, 'dwTime4, ', 09H, 'dwTime5'
	DB	', ', 09H, 'dwTime6 ', 09H, 'FROM TITEMTABLE ', 09H, 'WHERE dw'
	DB	'OwnerID = ? AND bOwnerType=? AND bStorageType=? AND dwStorage'
	DB	'ID=? ', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7CTBLPostItem@@6B@
CONST	SEGMENT
??_7CTBLPostItem@@6B@ DD FLAT:??_ECTBLPostItem@@UAEPAXI@Z ; CTBLPostItem::`vftable'
	DD	FLAT:?GetNumCol@CTBLPostItem@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLPostItem@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLPostItem@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLPostItem@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLPostItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T162769 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLPostItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLPostItem::CTBLPostItem, COMDAT
; _this$ = ecx

; 1366 : 	WHERE dwOwnerID = ? AND bOwnerType=? AND bStorageType=? AND dwStorageID=? "))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLPostItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BIN@DIECFCGK@SELECT?5?7dlID?0?5?7bItemID?0?5?7wItemID@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T162769[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLPostItem@@6B@
  0005e	72 0d		 jb	 SHORT $L162942
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L162942:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L162770:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLPostItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T162941
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLPostItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLPostItem::CTBLPostItem
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLPostItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLPostItem@@UAEHXZ PROC NEAR		; CTBLPostItem::GetNumCol, COMDAT
; _this$ = ecx

; 1368 : BEGIN_COLUMN(29)

  00000	b8 1d 00 00 00	 mov	 eax, 29			; 0000001dH
  00005	c3		 ret	 0
?GetNumCol@CTBLPostItem@@UAEHXZ ENDP			; CTBLPostItem::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLPostItem@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLPostItem@@UAEFXZ PROC NEAR		; CTBLPostItem::BindColumns, COMDAT
; _this$ = ecx

; 1368 : BEGIN_COLUMN(29)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1369 : 	COLUMN_ENTRY(m_item.m_dlID)

  00003	8d 86 40 0c 00
	00		 lea	 eax, DWORD PTR [esi+3136]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPA_J@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L130570
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 41 03 00
	00		 jne	 $L130566
$L130570:

; 1370 : 	COLUMN_ENTRY(m_item.m_bItemID)

  00020	8d 8e 48 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3144]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L130571
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 22 03 00
	00		 jne	 $L130566
$L130571:

; 1371 : 	COLUMN_ENTRY(m_item.m_wItemID)

  0003f	8d 96 4a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3146]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L130572
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 03 03 00
	00		 jne	 $L130566
$L130572:

; 1372 : 	COLUMN_ENTRY(m_item.m_bLevel)

  0005e	8d 86 4c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3148]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L130573
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 e4 02 00
	00		 jne	 $L130566
$L130573:

; 1373 : 	COLUMN_ENTRY(m_item.m_bCount)

  0007d	8d 8e 4d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3149]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L130574
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 c5 02 00
	00		 jne	 $L130566
$L130574:

; 1374 : 	COLUMN_ENTRY(m_item.m_bGLevel)

  0009c	8d 96 4e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3150]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L130575
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 a6 02 00
	00		 jne	 $L130566
$L130575:

; 1375 : 	COLUMN_ENTRY(m_item.m_dwDuraMax)

  000bb	8d 86 50 0c 00
	00		 lea	 eax, DWORD PTR [esi+3152]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 0a		 je	 SHORT $L130576
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	0f 85 87 02 00
	00		 jne	 $L130566
$L130576:

; 1376 : 	COLUMN_ENTRY(m_item.m_dwDuraCur)

  000da	8d 8e 54 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3156]
  000e0	51		 push	 ecx
  000e1	6a 08		 push	 8
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000ea	66 85 c0	 test	 ax, ax
  000ed	74 0a		 je	 SHORT $L130577
  000ef	66 3d 01 00	 cmp	 ax, 1
  000f3	0f 85 68 02 00
	00		 jne	 $L130566
$L130577:

; 1377 : 	COLUMN_ENTRY(m_item.m_bRefineCur)

  000f9	8d 96 58 0c 00
	00		 lea	 edx, DWORD PTR [esi+3160]
  000ff	52		 push	 edx
  00100	6a 09		 push	 9
  00102	8b ce		 mov	 ecx, esi
  00104	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00109	66 85 c0	 test	 ax, ax
  0010c	74 0a		 je	 SHORT $L130578
  0010e	66 3d 01 00	 cmp	 ax, 1
  00112	0f 85 49 02 00
	00		 jne	 $L130566
$L130578:

; 1378 : 	COLUMN_ENTRY(m_item.m_dEndTime)

  00118	8d 86 5c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3164]
  0011e	50		 push	 eax
  0011f	6a 0a		 push	 10			; 0000000aH
  00121	8b ce		 mov	 ecx, esi
  00123	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
  00128	66 85 c0	 test	 ax, ax
  0012b	74 0a		 je	 SHORT $L130579
  0012d	66 3d 01 00	 cmp	 ax, 1
  00131	0f 85 2a 02 00
	00		 jne	 $L130566
$L130579:

; 1379 : 	COLUMN_ENTRY(m_item.m_bGradeEffect)

  00137	8d 8e 6c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3180]
  0013d	51		 push	 ecx
  0013e	6a 0b		 push	 11			; 0000000bH
  00140	8b ce		 mov	 ecx, esi
  00142	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00147	66 85 c0	 test	 ax, ax
  0014a	74 0a		 je	 SHORT $L130580
  0014c	66 3d 01 00	 cmp	 ax, 1
  00150	0f 85 0b 02 00
	00		 jne	 $L130566
$L130580:

; 1380 : 	COLUMN_ENTRY(m_item.m_bMagic[0])

  00156	8d 96 6d 0c 00
	00		 lea	 edx, DWORD PTR [esi+3181]
  0015c	52		 push	 edx
  0015d	6a 0c		 push	 12			; 0000000cH
  0015f	8b ce		 mov	 ecx, esi
  00161	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00166	66 85 c0	 test	 ax, ax
  00169	74 0a		 je	 SHORT $L130581
  0016b	66 3d 01 00	 cmp	 ax, 1
  0016f	0f 85 ec 01 00
	00		 jne	 $L130566
$L130581:

; 1381 : 	COLUMN_ENTRY(m_item.m_bMagic[1])

  00175	8d 86 6e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3182]
  0017b	50		 push	 eax
  0017c	6a 0d		 push	 13			; 0000000dH
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00185	66 85 c0	 test	 ax, ax
  00188	74 0a		 je	 SHORT $L130582
  0018a	66 3d 01 00	 cmp	 ax, 1
  0018e	0f 85 cd 01 00
	00		 jne	 $L130566
$L130582:

; 1382 : 	COLUMN_ENTRY(m_item.m_bMagic[2])

  00194	8d 8e 6f 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3183]
  0019a	51		 push	 ecx
  0019b	6a 0e		 push	 14			; 0000000eH
  0019d	8b ce		 mov	 ecx, esi
  0019f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001a4	66 85 c0	 test	 ax, ax
  001a7	74 0a		 je	 SHORT $L130583
  001a9	66 3d 01 00	 cmp	 ax, 1
  001ad	0f 85 ae 01 00
	00		 jne	 $L130566
$L130583:

; 1383 : 	COLUMN_ENTRY(m_item.m_bMagic[3])

  001b3	8d 96 70 0c 00
	00		 lea	 edx, DWORD PTR [esi+3184]
  001b9	52		 push	 edx
  001ba	6a 0f		 push	 15			; 0000000fH
  001bc	8b ce		 mov	 ecx, esi
  001be	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001c3	66 85 c0	 test	 ax, ax
  001c6	74 0a		 je	 SHORT $L130584
  001c8	66 3d 01 00	 cmp	 ax, 1
  001cc	0f 85 8f 01 00
	00		 jne	 $L130566
$L130584:

; 1384 : 	COLUMN_ENTRY(m_item.m_bMagic[4])

  001d2	8d 86 71 0c 00
	00		 lea	 eax, DWORD PTR [esi+3185]
  001d8	50		 push	 eax
  001d9	6a 10		 push	 16			; 00000010H
  001db	8b ce		 mov	 ecx, esi
  001dd	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001e2	66 85 c0	 test	 ax, ax
  001e5	74 0a		 je	 SHORT $L130585
  001e7	66 3d 01 00	 cmp	 ax, 1
  001eb	0f 85 70 01 00
	00		 jne	 $L130566
$L130585:

; 1385 : 	COLUMN_ENTRY(m_item.m_bMagic[5])

  001f1	8d 8e 72 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3186]
  001f7	51		 push	 ecx
  001f8	6a 11		 push	 17			; 00000011H
  001fa	8b ce		 mov	 ecx, esi
  001fc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00201	66 85 c0	 test	 ax, ax
  00204	74 0a		 je	 SHORT $L130586
  00206	66 3d 01 00	 cmp	 ax, 1
  0020a	0f 85 51 01 00
	00		 jne	 $L130566
$L130586:

; 1386 : 	COLUMN_ENTRY(m_item.m_wValue[0])

  00210	8d 96 74 0c 00
	00		 lea	 edx, DWORD PTR [esi+3188]
  00216	52		 push	 edx
  00217	6a 12		 push	 18			; 00000012H
  00219	8b ce		 mov	 ecx, esi
  0021b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00220	66 85 c0	 test	 ax, ax
  00223	74 0a		 je	 SHORT $L130587
  00225	66 3d 01 00	 cmp	 ax, 1
  00229	0f 85 32 01 00
	00		 jne	 $L130566
$L130587:

; 1387 : 	COLUMN_ENTRY(m_item.m_wValue[1])

  0022f	8d 86 76 0c 00
	00		 lea	 eax, DWORD PTR [esi+3190]
  00235	50		 push	 eax
  00236	6a 13		 push	 19			; 00000013H
  00238	8b ce		 mov	 ecx, esi
  0023a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0023f	66 85 c0	 test	 ax, ax
  00242	74 0a		 je	 SHORT $L130588
  00244	66 3d 01 00	 cmp	 ax, 1
  00248	0f 85 13 01 00
	00		 jne	 $L130566
$L130588:

; 1388 : 	COLUMN_ENTRY(m_item.m_wValue[2])

  0024e	8d 8e 78 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3192]
  00254	51		 push	 ecx
  00255	6a 14		 push	 20			; 00000014H
  00257	8b ce		 mov	 ecx, esi
  00259	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0025e	66 85 c0	 test	 ax, ax
  00261	74 0a		 je	 SHORT $L130589
  00263	66 3d 01 00	 cmp	 ax, 1
  00267	0f 85 f4 00 00
	00		 jne	 $L130566
$L130589:

; 1389 : 	COLUMN_ENTRY(m_item.m_wValue[3])

  0026d	8d 96 7a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3194]
  00273	52		 push	 edx
  00274	6a 15		 push	 21			; 00000015H
  00276	8b ce		 mov	 ecx, esi
  00278	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0027d	66 85 c0	 test	 ax, ax
  00280	74 0a		 je	 SHORT $L130590
  00282	66 3d 01 00	 cmp	 ax, 1
  00286	0f 85 d5 00 00
	00		 jne	 $L130566
$L130590:

; 1390 : 	COLUMN_ENTRY(m_item.m_wValue[4])

  0028c	8d 86 7c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3196]
  00292	50		 push	 eax
  00293	6a 16		 push	 22			; 00000016H
  00295	8b ce		 mov	 ecx, esi
  00297	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0029c	66 85 c0	 test	 ax, ax
  0029f	74 0a		 je	 SHORT $L130591
  002a1	66 3d 01 00	 cmp	 ax, 1
  002a5	0f 85 b6 00 00
	00		 jne	 $L130566
$L130591:

; 1391 : 	COLUMN_ENTRY(m_item.m_wValue[5])

  002ab	8d 8e 7e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3198]
  002b1	51		 push	 ecx
  002b2	6a 17		 push	 23			; 00000017H
  002b4	8b ce		 mov	 ecx, esi
  002b6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  002bb	66 85 c0	 test	 ax, ax
  002be	74 0a		 je	 SHORT $L130592
  002c0	66 3d 01 00	 cmp	 ax, 1
  002c4	0f 85 97 00 00
	00		 jne	 $L130566
$L130592:

; 1392 : 	COLUMN_ENTRY(m_item.m_dwExtValue[0])

  002ca	8d 96 80 0c 00
	00		 lea	 edx, DWORD PTR [esi+3200]
  002d0	52		 push	 edx
  002d1	6a 18		 push	 24			; 00000018H
  002d3	8b ce		 mov	 ecx, esi
  002d5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  002da	66 85 c0	 test	 ax, ax
  002dd	74 06		 je	 SHORT $L130593
  002df	66 3d 01 00	 cmp	 ax, 1
  002e3	75 7c		 jne	 SHORT $L130566
$L130593:

; 1393 : 	COLUMN_ENTRY(m_item.m_dwExtValue[1])

  002e5	8d 86 84 0c 00
	00		 lea	 eax, DWORD PTR [esi+3204]
  002eb	50		 push	 eax
  002ec	6a 19		 push	 25			; 00000019H
  002ee	8b ce		 mov	 ecx, esi
  002f0	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  002f5	66 85 c0	 test	 ax, ax
  002f8	74 06		 je	 SHORT $L130594
  002fa	66 3d 01 00	 cmp	 ax, 1
  002fe	75 61		 jne	 SHORT $L130566
$L130594:

; 1394 : 	COLUMN_ENTRY(m_item.m_dwExtValue[2])

  00300	8d 8e 88 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3208]
  00306	51		 push	 ecx
  00307	6a 1a		 push	 26			; 0000001aH
  00309	8b ce		 mov	 ecx, esi
  0030b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00310	66 85 c0	 test	 ax, ax
  00313	74 06		 je	 SHORT $L130595
  00315	66 3d 01 00	 cmp	 ax, 1
  00319	75 46		 jne	 SHORT $L130566
$L130595:

; 1395 : 	COLUMN_ENTRY(m_item.m_dwExtValue[3])

  0031b	8d 96 8c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3212]
  00321	52		 push	 edx
  00322	6a 1b		 push	 27			; 0000001bH
  00324	8b ce		 mov	 ecx, esi
  00326	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0032b	66 85 c0	 test	 ax, ax
  0032e	74 06		 je	 SHORT $L130596
  00330	66 3d 01 00	 cmp	 ax, 1
  00334	75 2b		 jne	 SHORT $L130566
$L130596:

; 1396 : 	COLUMN_ENTRY(m_item.m_dwExtValue[4])

  00336	8d 86 90 0c 00
	00		 lea	 eax, DWORD PTR [esi+3216]
  0033c	50		 push	 eax
  0033d	6a 1c		 push	 28			; 0000001cH
  0033f	8b ce		 mov	 ecx, esi
  00341	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00346	66 85 c0	 test	 ax, ax
  00349	74 06		 je	 SHORT $L130597
  0034b	66 3d 01 00	 cmp	 ax, 1
  0034f	75 10		 jne	 SHORT $L130566
$L130597:

; 1397 : 	COLUMN_ENTRY(m_item.m_dwExtValue[5])

  00351	8d 8e 94 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3220]
  00357	51		 push	 ecx
  00358	6a 1d		 push	 29			; 0000001dH
  0035a	8b ce		 mov	 ecx, esi
  0035c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L130566:
  00361	5e		 pop	 esi

; 1398 : END_COL()

  00362	c3		 ret	 0
?BindColumns@CTBLPostItem@@UAEFXZ ENDP			; CTBLPostItem::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLPostItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLPostItem@@UAEHXZ PROC NEAR		; CTBLPostItem::GetNumParam, COMDAT
; _this$ = ecx

; 1400 : BEGIN_PARAM(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumParam@CTBLPostItem@@UAEHXZ ENDP			; CTBLPostItem::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLPostItem@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLPostItem@@UAEFH@Z PROC NEAR		; CTBLPostItem::BindParameters, COMDAT
; _this$ = ecx

; 1400 : BEGIN_PARAM(4)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 1401 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwOwnerID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1b		 jne	 SHORT $L130608
  00017	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 06		 je	 SHORT $L130608
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	75 6a		 jne	 SHORT $L130603
$L130608:

; 1402 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bOwnerType)

  00032	3b fb		 cmp	 edi, ebx
  00034	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003a	75 12		 jne	 SHORT $L130609
  0003c	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00042	51		 push	 ecx
  00043	6a 02		 push	 2
  00045	6a 01		 push	 1
  00047	8b ce		 mov	 ecx, esi
  00049	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L130609:
  0004e	66 3b c3	 cmp	 ax, bx
  00051	74 06		 je	 SHORT $L130610
  00053	66 3d 01 00	 cmp	 ax, 1
  00057	75 43		 jne	 SHORT $L130603
$L130610:

; 1403 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bStorageType)

  00059	3b fb		 cmp	 edi, ebx
  0005b	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00061	75 12		 jne	 SHORT $L130611
  00063	8d 96 2c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3116]
  00069	52		 push	 edx
  0006a	6a 03		 push	 3
  0006c	6a 01		 push	 1
  0006e	8b ce		 mov	 ecx, esi
  00070	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L130611:
  00075	66 3b c3	 cmp	 ax, bx
  00078	74 06		 je	 SHORT $L130612
  0007a	66 3d 01 00	 cmp	 ax, 1
  0007e	75 1c		 jne	 SHORT $L130603
$L130612:

; 1404 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwStorageID)

  00080	3b fb		 cmp	 edi, ebx
  00082	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00088	75 12		 jne	 SHORT $L130603
  0008a	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00090	50		 push	 eax
  00091	6a 04		 push	 4
  00093	6a 01		 push	 1
  00095	8b ce		 mov	 ecx, esi
  00097	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L130603:
  0009c	5f		 pop	 edi
  0009d	5e		 pop	 esi
  0009e	5b		 pop	 ebx

; 1405 : END_PARAM()

  0009f	c2 04 00	 ret	 4
?BindParameters@CTBLPostItem@@UAEFH@Z ENDP		; CTBLPostItem::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLPostItem@@UAE@XZ				; CTBLPostItem::~CTBLPostItem
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLPostItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLPostItem@@UAEPAXI@Z PROC NEAR			; CTBLPostItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLPostItem@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L162962
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L162962:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLPostItem@@UAEPAXI@Z ENDP			; CTBLPostItem::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLPostItem@@UAE@XZ
_TEXT	SEGMENT
??1CTBLPostItem@@UAE@XZ PROC NEAR			; CTBLPostItem::~CTBLPostItem, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLPostItem@@UAE@XZ ENDP				; CTBLPostItem::~CTBLPostItem
_TEXT	ENDS
PUBLIC	??0CTBLSkillChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSkillChart::CTBLSkillChart
PUBLIC	?GetNumCol@CTBLSkillChart@@UAEHXZ		; CTBLSkillChart::GetNumCol
PUBLIC	?BindColumns@CTBLSkillChart@@UAEFXZ		; CTBLSkillChart::BindColumns
PUBLIC	??_7CTBLSkillChart@@6B@				; CTBLSkillChart::`vftable'
PUBLIC	??_GCTBLSkillChart@@UAEPAXI@Z			; CTBLSkillChart::`scalar deleting destructor'
PUBLIC	??_C@_0CMF@FPIAJMLL@SELECT?5?7wID?0?5?7wPrevActiveID?0?5?7wP@ ; `string'
EXTRN	??_ECTBLSkillChart@@UAEPAXI@Z:NEAR		; CTBLSkillChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T163145 DD	0ffffffffH
	DD	FLAT:$L162971
$T163142 DD	019930520H
	DD	01H
	DD	FLAT:$T163145
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CMF@FPIAJMLL@SELECT?5?7wID?0?5?7wPrevActiveID?0?5?7wP@
CONST	SEGMENT
??_C@_0CMF@FPIAJMLL@SELECT?5?7wID?0?5?7wPrevActiveID?0?5?7wP@ DB 'SELECT '
	DB	09H, 'wID, ', 09H, 'wPrevActiveID, ', 09H, 'wParentSkillID, ', 09H
	DB	'wItemID, ', 09H, 'wMaxRange, ', 09H, 'wMinRange, ', 09H, 'wPo'
	DB	'sture, ', 09H, 'dwConditionID, ', 09H, 'dwWeaponID, ', 09H, 'd'
	DB	'wClassID, ', 09H, 'bKind, ', 09H, 'fPrice, ', 09H, 'dwUseMP, '
	DB	09H, 'bUseMPType, ', 09H, 'dwUseHP, ', 09H, 'bUseHPType, ', 09H
	DB	'dwActionTime, ', 09H, 'dwDuration, ', 09H, 'dwDurationInc, ', 09H
	DB	'dwReuseDelay, ', 09H, 'nReuseDelayInc, ', 09H, 'dwLoopDelay, '
	DB	09H, 'dwKindDelay, ', 09H, 'dwAggro, ', 09H, 'bLevel, ', 09H, 'b'
	DB	'MaxLevel, ', 09H, 'bNextLevel, ', 09H, 'bTarget, ', 09H, 'bTa'
	DB	'rgetRange, ', 09H, 'bIsuse, ', 09H, 'bTargetHit, ', 09H, 'bPo'
	DB	'sitive, ', 09H, 'bPriority, ', 09H, 'bSpeedApply, ', 09H, 'bC'
	DB	'anLearn, ', 09H, 'bORadius, ', 09H, 'bIsRide, ', 09H, 'bIsDis'
	DB	'mount, ', 09H, 'wTargetActiveID, ', 09H, 'bMaintainType, ', 09H
	DB	'bDuraSlot, ', 09H, 'bCanCancel, ', 09H, 'bHitTest, ', 09H, 'b'
	DB	'HitInit, ', 09H, 'bHitInc, ', 09H, 'bGlobal, ', 09H, 'bRadius'
	DB	', ', 09H, 'bStatic, ', 09H, 'bEraseAct, ', 09H, 'bEraseHide, '
	DB	09H, 'bIsHideSkill, ', 09H, 'bRunFromServer, ', 09H, 'bCheckAt'
	DB	'tacker, ', 09H, 'wTriggerID, ', 09H, 'wMapID ', 09H, 'FROM TS'
	DB	'KILLCHART', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLSkillChart@@6B@
CONST	SEGMENT
??_7CTBLSkillChart@@6B@ DD FLAT:??_ECTBLSkillChart@@UAEPAXI@Z ; CTBLSkillChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLSkillChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLSkillChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLSkillChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T162970 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLSkillChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLSkillChart::CTBLSkillChart, COMDAT
; _this$ = ecx

; 1531 : 	FROM TSKILLCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLSkillChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CMF@FPIAJMLL@SELECT?5?7wID?0?5?7wPrevActiveID?0?5?7wP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T162970[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLSkillChart@@6B@
  0005e	72 0d		 jb	 SHORT $L163143
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L163143:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L162971:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLSkillChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163142
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLSkillChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLSkillChart::CTBLSkillChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLSkillChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLSkillChart@@UAEHXZ PROC NEAR		; CTBLSkillChart::GetNumCol, COMDAT
; _this$ = ecx

; 1533 : BEGIN_COLUMN(58)

  00000	b8 3a 00 00 00	 mov	 eax, 58			; 0000003aH
  00005	c3		 ret	 0
?GetNumCol@CTBLSkillChart@@UAEHXZ ENDP			; CTBLSkillChart::GetNumCol
_TEXT	ENDS
EXTRN	?BindCol@CSqlBase@@QAEFFPAH@Z:NEAR		; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindColumns@CTBLSkillChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLSkillChart@@UAEFXZ PROC NEAR		; CTBLSkillChart::BindColumns, COMDAT
; _this$ = ecx

; 1533 : BEGIN_COLUMN(58)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1534 : 	COLUMN_ENTRY(m_wID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L130709
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 67 06 00
	00		 jne	 $L130705
$L130709:

; 1535 : 	COLUMN_ENTRY(m_wPrevActiveID)

  00020	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L130710
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 48 06 00
	00		 jne	 $L130705
$L130710:

; 1536 : 	COLUMN_ENTRY(m_wParentSkillID)

  0003f	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L130711
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 29 06 00
	00		 jne	 $L130705
$L130711:

; 1537 : 	COLUMN_ENTRY(m_wUseItem)

  0005e	8d 86 3a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3130]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L130712
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 0a 06 00
	00		 jne	 $L130705
$L130712:

; 1538 : 	COLUMN_ENTRY(m_wMaxRange)

  0007d	8d 8e 32 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3122]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L130713
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 eb 05 00
	00		 jne	 $L130705
$L130713:

; 1539 : 	COLUMN_ENTRY(m_wMinRange)

  0009c	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L130714
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 cc 05 00
	00		 jne	 $L130705
$L130714:

; 1540 : 	COLUMN_ENTRY(m_wPosture)

  000bb	8d 86 36 0c 00
	00		 lea	 eax, DWORD PTR [esi+3126]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 0a		 je	 SHORT $L130715
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	0f 85 ad 05 00
	00		 jne	 $L130705
$L130715:

; 1541 : 	COLUMN_ENTRY(m_dwConditionID)

  000da	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  000e0	51		 push	 ecx
  000e1	6a 08		 push	 8
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000ea	66 85 c0	 test	 ax, ax
  000ed	74 0a		 je	 SHORT $L130716
  000ef	66 3d 01 00	 cmp	 ax, 1
  000f3	0f 85 8e 05 00
	00		 jne	 $L130705
$L130716:

; 1542 : 	COLUMN_ENTRY(m_dwWeaponID)

  000f9	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  000ff	52		 push	 edx
  00100	6a 09		 push	 9
  00102	8b ce		 mov	 ecx, esi
  00104	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00109	66 85 c0	 test	 ax, ax
  0010c	74 0a		 je	 SHORT $L130717
  0010e	66 3d 01 00	 cmp	 ax, 1
  00112	0f 85 6f 05 00
	00		 jne	 $L130705
$L130717:

; 1543 : 	COLUMN_ENTRY(m_dwClassID)

  00118	8d 86 44 0c 00
	00		 lea	 eax, DWORD PTR [esi+3140]
  0011e	50		 push	 eax
  0011f	6a 0a		 push	 10			; 0000000aH
  00121	8b ce		 mov	 ecx, esi
  00123	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00128	66 85 c0	 test	 ax, ax
  0012b	74 0a		 je	 SHORT $L130718
  0012d	66 3d 01 00	 cmp	 ax, 1
  00131	0f 85 50 05 00
	00		 jne	 $L130705
$L130718:

; 1544 : 	COLUMN_ENTRY(m_bKind)

  00137	8d 8e 48 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3144]
  0013d	51		 push	 ecx
  0013e	6a 0b		 push	 11			; 0000000bH
  00140	8b ce		 mov	 ecx, esi
  00142	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00147	66 85 c0	 test	 ax, ax
  0014a	74 0a		 je	 SHORT $L130719
  0014c	66 3d 01 00	 cmp	 ax, 1
  00150	0f 85 31 05 00
	00		 jne	 $L130705
$L130719:

; 1545 : 	COLUMN_ENTRY(m_fPrice)

  00156	8d 96 7c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3196]
  0015c	52		 push	 edx
  0015d	6a 0c		 push	 12			; 0000000cH
  0015f	8b ce		 mov	 ecx, esi
  00161	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  00166	66 85 c0	 test	 ax, ax
  00169	74 0a		 je	 SHORT $L130720
  0016b	66 3d 01 00	 cmp	 ax, 1
  0016f	0f 85 12 05 00
	00		 jne	 $L130705
$L130720:

; 1546 : 	COLUMN_ENTRY(m_dwUseMP)

  00175	8d 86 64 0c 00
	00		 lea	 eax, DWORD PTR [esi+3172]
  0017b	50		 push	 eax
  0017c	6a 0d		 push	 13			; 0000000dH
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00185	66 85 c0	 test	 ax, ax
  00188	74 0a		 je	 SHORT $L130721
  0018a	66 3d 01 00	 cmp	 ax, 1
  0018e	0f 85 f3 04 00
	00		 jne	 $L130705
$L130721:

; 1547 : 	COLUMN_ENTRY(m_bUseMPType)

  00194	8d 8e 6d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3181]
  0019a	51		 push	 ecx
  0019b	6a 0e		 push	 14			; 0000000eH
  0019d	8b ce		 mov	 ecx, esi
  0019f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001a4	66 85 c0	 test	 ax, ax
  001a7	74 0a		 je	 SHORT $L130722
  001a9	66 3d 01 00	 cmp	 ax, 1
  001ad	0f 85 d4 04 00
	00		 jne	 $L130705
$L130722:

; 1548 : 	COLUMN_ENTRY(m_dwUseHP)

  001b3	8d 96 68 0c 00
	00		 lea	 edx, DWORD PTR [esi+3176]
  001b9	52		 push	 edx
  001ba	6a 0f		 push	 15			; 0000000fH
  001bc	8b ce		 mov	 ecx, esi
  001be	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  001c3	66 85 c0	 test	 ax, ax
  001c6	74 0a		 je	 SHORT $L130723
  001c8	66 3d 01 00	 cmp	 ax, 1
  001cc	0f 85 b5 04 00
	00		 jne	 $L130705
$L130723:

; 1549 : 	COLUMN_ENTRY(m_bUseHPType)

  001d2	8d 86 6c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3180]
  001d8	50		 push	 eax
  001d9	6a 10		 push	 16			; 00000010H
  001db	8b ce		 mov	 ecx, esi
  001dd	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001e2	66 85 c0	 test	 ax, ax
  001e5	74 0a		 je	 SHORT $L130724
  001e7	66 3d 01 00	 cmp	 ax, 1
  001eb	0f 85 96 04 00
	00		 jne	 $L130705
$L130724:

; 1550 : 	COLUMN_ENTRY(m_dwActionTime)

  001f1	8d 8e 4c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3148]
  001f7	51		 push	 ecx
  001f8	6a 11		 push	 17			; 00000011H
  001fa	8b ce		 mov	 ecx, esi
  001fc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00201	66 85 c0	 test	 ax, ax
  00204	74 0a		 je	 SHORT $L130725
  00206	66 3d 01 00	 cmp	 ax, 1
  0020a	0f 85 77 04 00
	00		 jne	 $L130705
$L130725:

; 1551 : 	COLUMN_ENTRY(m_dwDuration)

  00210	8d 96 50 0c 00
	00		 lea	 edx, DWORD PTR [esi+3152]
  00216	52		 push	 edx
  00217	6a 12		 push	 18			; 00000012H
  00219	8b ce		 mov	 ecx, esi
  0021b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00220	66 85 c0	 test	 ax, ax
  00223	74 0a		 je	 SHORT $L130726
  00225	66 3d 01 00	 cmp	 ax, 1
  00229	0f 85 58 04 00
	00		 jne	 $L130705
$L130726:

; 1552 : 	COLUMN_ENTRY(m_dwDurationInc)

  0022f	8d 86 54 0c 00
	00		 lea	 eax, DWORD PTR [esi+3156]
  00235	50		 push	 eax
  00236	6a 13		 push	 19			; 00000013H
  00238	8b ce		 mov	 ecx, esi
  0023a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0023f	66 85 c0	 test	 ax, ax
  00242	74 0a		 je	 SHORT $L130727
  00244	66 3d 01 00	 cmp	 ax, 1
  00248	0f 85 39 04 00
	00		 jne	 $L130705
$L130727:

; 1553 : 	COLUMN_ENTRY(m_dwReuseDelay)

  0024e	8d 8e 58 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3160]
  00254	51		 push	 ecx
  00255	6a 14		 push	 20			; 00000014H
  00257	8b ce		 mov	 ecx, esi
  00259	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0025e	66 85 c0	 test	 ax, ax
  00261	74 0a		 je	 SHORT $L130728
  00263	66 3d 01 00	 cmp	 ax, 1
  00267	0f 85 1a 04 00
	00		 jne	 $L130705
$L130728:

; 1554 : 	COLUMN_ENTRY(m_nReuseDelayInc)

  0026d	8d 96 78 0c 00
	00		 lea	 edx, DWORD PTR [esi+3192]
  00273	52		 push	 edx
  00274	6a 15		 push	 21			; 00000015H
  00276	8b ce		 mov	 ecx, esi
  00278	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAH@Z ; CSqlBase::BindCol
  0027d	66 85 c0	 test	 ax, ax
  00280	74 0a		 je	 SHORT $L130729
  00282	66 3d 01 00	 cmp	 ax, 1
  00286	0f 85 fb 03 00
	00		 jne	 $L130705
$L130729:

; 1555 : 	COLUMN_ENTRY(m_dwLoopDelay)

  0028c	8d 86 60 0c 00
	00		 lea	 eax, DWORD PTR [esi+3168]
  00292	50		 push	 eax
  00293	6a 16		 push	 22			; 00000016H
  00295	8b ce		 mov	 ecx, esi
  00297	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0029c	66 85 c0	 test	 ax, ax
  0029f	74 0a		 je	 SHORT $L130730
  002a1	66 3d 01 00	 cmp	 ax, 1
  002a5	0f 85 dc 03 00
	00		 jne	 $L130705
$L130730:

; 1556 : 	COLUMN_ENTRY(m_dwKindDelay)

  002ab	8d 8e 5c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3164]
  002b1	51		 push	 ecx
  002b2	6a 17		 push	 23			; 00000017H
  002b4	8b ce		 mov	 ecx, esi
  002b6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  002bb	66 85 c0	 test	 ax, ax
  002be	74 0a		 je	 SHORT $L130731
  002c0	66 3d 01 00	 cmp	 ax, 1
  002c4	0f 85 bd 03 00
	00		 jne	 $L130705
$L130731:

; 1557 : 	COLUMN_ENTRY(m_dwAggro)

  002ca	8d 96 74 0c 00
	00		 lea	 edx, DWORD PTR [esi+3188]
  002d0	52		 push	 edx
  002d1	6a 18		 push	 24			; 00000018H
  002d3	8b ce		 mov	 ecx, esi
  002d5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  002da	66 85 c0	 test	 ax, ax
  002dd	74 0a		 je	 SHORT $L130732
  002df	66 3d 01 00	 cmp	 ax, 1
  002e3	0f 85 9e 03 00
	00		 jne	 $L130705
$L130732:

; 1558 : 	COLUMN_ENTRY(m_bLevel)

  002e9	8d 86 80 0c 00
	00		 lea	 eax, DWORD PTR [esi+3200]
  002ef	50		 push	 eax
  002f0	6a 19		 push	 25			; 00000019H
  002f2	8b ce		 mov	 ecx, esi
  002f4	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  002f9	66 85 c0	 test	 ax, ax
  002fc	74 0a		 je	 SHORT $L130733
  002fe	66 3d 01 00	 cmp	 ax, 1
  00302	0f 85 7f 03 00
	00		 jne	 $L130705
$L130733:

; 1559 : 	COLUMN_ENTRY(m_bMaxLevel)

  00308	8d 8e 81 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3201]
  0030e	51		 push	 ecx
  0030f	6a 1a		 push	 26			; 0000001aH
  00311	8b ce		 mov	 ecx, esi
  00313	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00318	66 85 c0	 test	 ax, ax
  0031b	74 0a		 je	 SHORT $L130734
  0031d	66 3d 01 00	 cmp	 ax, 1
  00321	0f 85 60 03 00
	00		 jne	 $L130705
$L130734:

; 1560 : 	COLUMN_ENTRY(m_bNextLevel)

  00327	8d 96 82 0c 00
	00		 lea	 edx, DWORD PTR [esi+3202]
  0032d	52		 push	 edx
  0032e	6a 1b		 push	 27			; 0000001bH
  00330	8b ce		 mov	 ecx, esi
  00332	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00337	66 85 c0	 test	 ax, ax
  0033a	74 0a		 je	 SHORT $L130735
  0033c	66 3d 01 00	 cmp	 ax, 1
  00340	0f 85 41 03 00
	00		 jne	 $L130705
$L130735:

; 1561 : 	COLUMN_ENTRY(m_bTarget)

  00346	8d 86 85 0c 00
	00		 lea	 eax, DWORD PTR [esi+3205]
  0034c	50		 push	 eax
  0034d	6a 1c		 push	 28			; 0000001cH
  0034f	8b ce		 mov	 ecx, esi
  00351	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00356	66 85 c0	 test	 ax, ax
  00359	74 0a		 je	 SHORT $L130736
  0035b	66 3d 01 00	 cmp	 ax, 1
  0035f	0f 85 22 03 00
	00		 jne	 $L130705
$L130736:

; 1562 : 	COLUMN_ENTRY(m_bTargetRange)

  00365	8d 8e 86 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3206]
  0036b	51		 push	 ecx
  0036c	6a 1d		 push	 29			; 0000001dH
  0036e	8b ce		 mov	 ecx, esi
  00370	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00375	66 85 c0	 test	 ax, ax
  00378	74 0a		 je	 SHORT $L130737
  0037a	66 3d 01 00	 cmp	 ax, 1
  0037e	0f 85 03 03 00
	00		 jne	 $L130705
$L130737:

; 1563 : 	COLUMN_ENTRY(m_bIsuse)

  00384	8d 96 87 0c 00
	00		 lea	 edx, DWORD PTR [esi+3207]
  0038a	52		 push	 edx
  0038b	6a 1e		 push	 30			; 0000001eH
  0038d	8b ce		 mov	 ecx, esi
  0038f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00394	66 85 c0	 test	 ax, ax
  00397	74 0a		 je	 SHORT $L130738
  00399	66 3d 01 00	 cmp	 ax, 1
  0039d	0f 85 e4 02 00
	00		 jne	 $L130705
$L130738:

; 1564 : 	COLUMN_ENTRY(m_bTargetHit)

  003a3	8d 86 88 0c 00
	00		 lea	 eax, DWORD PTR [esi+3208]
  003a9	50		 push	 eax
  003aa	6a 1f		 push	 31			; 0000001fH
  003ac	8b ce		 mov	 ecx, esi
  003ae	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  003b3	66 85 c0	 test	 ax, ax
  003b6	74 0a		 je	 SHORT $L130739
  003b8	66 3d 01 00	 cmp	 ax, 1
  003bc	0f 85 c5 02 00
	00		 jne	 $L130705
$L130739:

; 1565 : 	COLUMN_ENTRY(m_bPositive)

  003c2	8d 8e 83 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3203]
  003c8	51		 push	 ecx
  003c9	6a 20		 push	 32			; 00000020H
  003cb	8b ce		 mov	 ecx, esi
  003cd	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  003d2	66 85 c0	 test	 ax, ax
  003d5	74 0a		 je	 SHORT $L130740
  003d7	66 3d 01 00	 cmp	 ax, 1
  003db	0f 85 a6 02 00
	00		 jne	 $L130705
$L130740:

; 1566 : 	COLUMN_ENTRY(m_bPriority)

  003e1	8d 96 84 0c 00
	00		 lea	 edx, DWORD PTR [esi+3204]
  003e7	52		 push	 edx
  003e8	6a 21		 push	 33			; 00000021H
  003ea	8b ce		 mov	 ecx, esi
  003ec	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  003f1	66 85 c0	 test	 ax, ax
  003f4	74 0a		 je	 SHORT $L130741
  003f6	66 3d 01 00	 cmp	 ax, 1
  003fa	0f 85 87 02 00
	00		 jne	 $L130705
$L130741:

; 1567 : 	COLUMN_ENTRY(m_bSpeedApply)

  00400	8d 86 89 0c 00
	00		 lea	 eax, DWORD PTR [esi+3209]
  00406	50		 push	 eax
  00407	6a 22		 push	 34			; 00000022H
  00409	8b ce		 mov	 ecx, esi
  0040b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00410	66 85 c0	 test	 ax, ax
  00413	74 0a		 je	 SHORT $L130742
  00415	66 3d 01 00	 cmp	 ax, 1
  00419	0f 85 68 02 00
	00		 jne	 $L130705
$L130742:

; 1568 : 	COLUMN_ENTRY(m_bCanLearn)

  0041f	8d 8e 8b 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3211]
  00425	51		 push	 ecx
  00426	6a 23		 push	 35			; 00000023H
  00428	8b ce		 mov	 ecx, esi
  0042a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0042f	66 85 c0	 test	 ax, ax
  00432	74 0a		 je	 SHORT $L130743
  00434	66 3d 01 00	 cmp	 ax, 1
  00438	0f 85 49 02 00
	00		 jne	 $L130705
$L130743:

; 1569 : 	COLUMN_ENTRY(m_bORadius)

  0043e	8d 96 8c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3212]
  00444	52		 push	 edx
  00445	6a 24		 push	 36			; 00000024H
  00447	8b ce		 mov	 ecx, esi
  00449	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0044e	66 85 c0	 test	 ax, ax
  00451	74 0a		 je	 SHORT $L130744
  00453	66 3d 01 00	 cmp	 ax, 1
  00457	0f 85 2a 02 00
	00		 jne	 $L130705
$L130744:

; 1570 : 	COLUMN_ENTRY(m_bIsRide)

  0045d	8d 86 8d 0c 00
	00		 lea	 eax, DWORD PTR [esi+3213]
  00463	50		 push	 eax
  00464	6a 25		 push	 37			; 00000025H
  00466	8b ce		 mov	 ecx, esi
  00468	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0046d	66 85 c0	 test	 ax, ax
  00470	74 0a		 je	 SHORT $L130745
  00472	66 3d 01 00	 cmp	 ax, 1
  00476	0f 85 0b 02 00
	00		 jne	 $L130705
$L130745:

; 1571 : 	COLUMN_ENTRY(m_bIsDismount)

  0047c	8d 8e 8e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3214]
  00482	51		 push	 ecx
  00483	6a 26		 push	 38			; 00000026H
  00485	8b ce		 mov	 ecx, esi
  00487	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0048c	66 85 c0	 test	 ax, ax
  0048f	74 0a		 je	 SHORT $L130746
  00491	66 3d 01 00	 cmp	 ax, 1
  00495	0f 85 ec 01 00
	00		 jne	 $L130705
$L130746:

; 1572 : 	COLUMN_ENTRY(m_wTargetActiveID)

  0049b	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  004a1	52		 push	 edx
  004a2	6a 27		 push	 39			; 00000027H
  004a4	8b ce		 mov	 ecx, esi
  004a6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  004ab	66 85 c0	 test	 ax, ax
  004ae	74 0a		 je	 SHORT $L130747
  004b0	66 3d 01 00	 cmp	 ax, 1
  004b4	0f 85 cd 01 00
	00		 jne	 $L130705
$L130747:

; 1573 : 	COLUMN_ENTRY(m_bMaintainType)

  004ba	8d 86 8a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3210]
  004c0	50		 push	 eax
  004c1	6a 28		 push	 40			; 00000028H
  004c3	8b ce		 mov	 ecx, esi
  004c5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  004ca	66 85 c0	 test	 ax, ax
  004cd	74 0a		 je	 SHORT $L130748
  004cf	66 3d 01 00	 cmp	 ax, 1
  004d3	0f 85 ae 01 00
	00		 jne	 $L130705
$L130748:

; 1574 : 	COLUMN_ENTRY(m_bDuraSlot)

  004d9	8d 8e 8f 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3215]
  004df	51		 push	 ecx
  004e0	6a 29		 push	 41			; 00000029H
  004e2	8b ce		 mov	 ecx, esi
  004e4	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  004e9	66 85 c0	 test	 ax, ax
  004ec	74 0a		 je	 SHORT $L130749
  004ee	66 3d 01 00	 cmp	 ax, 1
  004f2	0f 85 8f 01 00
	00		 jne	 $L130705
$L130749:

; 1575 : 	COLUMN_ENTRY(m_bCanCancel)

  004f8	8d 96 90 0c 00
	00		 lea	 edx, DWORD PTR [esi+3216]
  004fe	52		 push	 edx
  004ff	6a 2a		 push	 42			; 0000002aH
  00501	8b ce		 mov	 ecx, esi
  00503	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00508	66 85 c0	 test	 ax, ax
  0050b	74 0a		 je	 SHORT $L130750
  0050d	66 3d 01 00	 cmp	 ax, 1
  00511	0f 85 70 01 00
	00		 jne	 $L130705
$L130750:

; 1576 : 	COLUMN_ENTRY(m_bHitTest)

  00517	8d 86 6e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3182]
  0051d	50		 push	 eax
  0051e	6a 2b		 push	 43			; 0000002bH
  00520	8b ce		 mov	 ecx, esi
  00522	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00527	66 85 c0	 test	 ax, ax
  0052a	74 0a		 je	 SHORT $L130751
  0052c	66 3d 01 00	 cmp	 ax, 1
  00530	0f 85 51 01 00
	00		 jne	 $L130705
$L130751:

; 1577 : 	COLUMN_ENTRY(m_bHitInit)

  00536	8d 8e 6f 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3183]
  0053c	51		 push	 ecx
  0053d	6a 2c		 push	 44			; 0000002cH
  0053f	8b ce		 mov	 ecx, esi
  00541	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00546	66 85 c0	 test	 ax, ax
  00549	74 0a		 je	 SHORT $L130752
  0054b	66 3d 01 00	 cmp	 ax, 1
  0054f	0f 85 32 01 00
	00		 jne	 $L130705
$L130752:

; 1578 : 	COLUMN_ENTRY(m_bHitInc)

  00555	8d 96 70 0c 00
	00		 lea	 edx, DWORD PTR [esi+3184]
  0055b	52		 push	 edx
  0055c	6a 2d		 push	 45			; 0000002dH
  0055e	8b ce		 mov	 ecx, esi
  00560	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00565	66 85 c0	 test	 ax, ax
  00568	74 0a		 je	 SHORT $L130753
  0056a	66 3d 01 00	 cmp	 ax, 1
  0056e	0f 85 13 01 00
	00		 jne	 $L130705
$L130753:

; 1579 : 	COLUMN_ENTRY(m_bGlobal)

  00574	8d 86 91 0c 00
	00		 lea	 eax, DWORD PTR [esi+3217]
  0057a	50		 push	 eax
  0057b	6a 2e		 push	 46			; 0000002eH
  0057d	8b ce		 mov	 ecx, esi
  0057f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00584	66 85 c0	 test	 ax, ax
  00587	74 0a		 je	 SHORT $L130754
  00589	66 3d 01 00	 cmp	 ax, 1
  0058d	0f 85 f4 00 00
	00		 jne	 $L130705
$L130754:

; 1580 : 	COLUMN_ENTRY(m_bRadius)

  00593	8d 8e 92 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3218]
  00599	51		 push	 ecx
  0059a	6a 2f		 push	 47			; 0000002fH
  0059c	8b ce		 mov	 ecx, esi
  0059e	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  005a3	66 85 c0	 test	 ax, ax
  005a6	74 0a		 je	 SHORT $L130755
  005a8	66 3d 01 00	 cmp	 ax, 1
  005ac	0f 85 d5 00 00
	00		 jne	 $L130705
$L130755:

; 1581 : 	COLUMN_ENTRY(m_bStatic)

  005b2	8d 96 93 0c 00
	00		 lea	 edx, DWORD PTR [esi+3219]
  005b8	52		 push	 edx
  005b9	6a 30		 push	 48			; 00000030H
  005bb	8b ce		 mov	 ecx, esi
  005bd	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  005c2	66 85 c0	 test	 ax, ax
  005c5	74 0a		 je	 SHORT $L130756
  005c7	66 3d 01 00	 cmp	 ax, 1
  005cb	0f 85 b6 00 00
	00		 jne	 $L130705
$L130756:

; 1582 : 	COLUMN_ENTRY(m_bEraseAct)

  005d1	8d 86 94 0c 00
	00		 lea	 eax, DWORD PTR [esi+3220]
  005d7	50		 push	 eax
  005d8	6a 31		 push	 49			; 00000031H
  005da	8b ce		 mov	 ecx, esi
  005dc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  005e1	66 85 c0	 test	 ax, ax
  005e4	74 0a		 je	 SHORT $L130757
  005e6	66 3d 01 00	 cmp	 ax, 1
  005ea	0f 85 97 00 00
	00		 jne	 $L130705
$L130757:

; 1583 : 	COLUMN_ENTRY(m_bEraseHide)

  005f0	8d 8e 95 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3221]
  005f6	51		 push	 ecx
  005f7	6a 32		 push	 50			; 00000032H
  005f9	8b ce		 mov	 ecx, esi
  005fb	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00600	66 85 c0	 test	 ax, ax
  00603	74 06		 je	 SHORT $L130758
  00605	66 3d 01 00	 cmp	 ax, 1
  00609	75 7c		 jne	 SHORT $L130705
$L130758:

; 1584 : 	COLUMN_ENTRY(m_bIsHideSkill)

  0060b	8d 96 96 0c 00
	00		 lea	 edx, DWORD PTR [esi+3222]
  00611	52		 push	 edx
  00612	6a 33		 push	 51			; 00000033H
  00614	8b ce		 mov	 ecx, esi
  00616	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0061b	66 85 c0	 test	 ax, ax
  0061e	74 06		 je	 SHORT $L130759
  00620	66 3d 01 00	 cmp	 ax, 1
  00624	75 61		 jne	 SHORT $L130705
$L130759:

; 1585 : 	COLUMN_ENTRY(m_bRunFromServer)

  00626	8d 86 97 0c 00
	00		 lea	 eax, DWORD PTR [esi+3223]
  0062c	50		 push	 eax
  0062d	6a 34		 push	 52			; 00000034H
  0062f	8b ce		 mov	 ecx, esi
  00631	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00636	66 85 c0	 test	 ax, ax
  00639	74 06		 je	 SHORT $L130760
  0063b	66 3d 01 00	 cmp	 ax, 1
  0063f	75 46		 jne	 SHORT $L130705
$L130760:

; 1586 : 	COLUMN_ENTRY(m_bCheckAttacker)

  00641	8d 8e 98 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3224]
  00647	51		 push	 ecx
  00648	6a 35		 push	 53			; 00000035H
  0064a	8b ce		 mov	 ecx, esi
  0064c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00651	66 85 c0	 test	 ax, ax
  00654	74 06		 je	 SHORT $L130761
  00656	66 3d 01 00	 cmp	 ax, 1
  0065a	75 2b		 jne	 SHORT $L130705
$L130761:

; 1587 : 	COLUMN_ENTRY(m_wTriggerID)

  0065c	8d 96 9a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3226]
  00662	52		 push	 edx
  00663	6a 36		 push	 54			; 00000036H
  00665	8b ce		 mov	 ecx, esi
  00667	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0066c	66 85 c0	 test	 ax, ax
  0066f	74 06		 je	 SHORT $L130762
  00671	66 3d 01 00	 cmp	 ax, 1
  00675	75 10		 jne	 SHORT $L130705
$L130762:

; 1588 : 	COLUMN_ENTRY(m_wMapID)

  00677	8d 86 9c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3228]
  0067d	50		 push	 eax
  0067e	6a 37		 push	 55			; 00000037H
  00680	8b ce		 mov	 ecx, esi
  00682	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
$L130705:
  00687	5e		 pop	 esi

; 1589 : END_COL()

  00688	c3		 ret	 0
?BindColumns@CTBLSkillChart@@UAEFXZ ENDP		; CTBLSkillChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLSkillChart@@UAE@XZ			; CTBLSkillChart::~CTBLSkillChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLSkillChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLSkillChart@@UAEPAXI@Z PROC NEAR			; CTBLSkillChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLSkillChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L163157
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L163157:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLSkillChart@@UAEPAXI@Z ENDP			; CTBLSkillChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLSkillChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLSkillChart@@UAE@XZ PROC NEAR			; CTBLSkillChart::~CTBLSkillChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLSkillChart@@UAE@XZ ENDP				; CTBLSkillChart::~CTBLSkillChart
_TEXT	ENDS
PUBLIC	??0CTBLSkillData@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSkillData::CTBLSkillData
PUBLIC	?GetNumCol@CTBLSkillData@@UAEHXZ		; CTBLSkillData::GetNumCol
PUBLIC	?BindColumns@CTBLSkillData@@UAEFXZ		; CTBLSkillData::BindColumns
PUBLIC	?GetNumParam@CTBLSkillData@@UAEHXZ		; CTBLSkillData::GetNumParam
PUBLIC	?BindParameters@CTBLSkillData@@UAEFH@Z		; CTBLSkillData::BindParameters
PUBLIC	??_7CTBLSkillData@@6B@				; CTBLSkillData::`vftable'
PUBLIC	??_GCTBLSkillData@@UAEPAXI@Z			; CTBLSkillData::`scalar deleting destructor'
PUBLIC	??_C@_0GH@FAGKEIKL@SELECT?5bAction?0?5bType?0?5bAttr?0?5bE@ ; `string'
EXTRN	??_ECTBLSkillData@@UAEPAXI@Z:NEAR		; CTBLSkillData::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T163340 DD	0ffffffffH
	DD	FLAT:$L163166
$T163337 DD	019930520H
	DD	01H
	DD	FLAT:$T163340
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0GH@FAGKEIKL@SELECT?5bAction?0?5bType?0?5bAttr?0?5bE@
CONST	SEGMENT
??_C@_0GH@FAGKEIKL@SELECT?5bAction?0?5bType?0?5bAttr?0?5bE@ DB 'SELECT bA'
	DB	'ction, bType, bAttr, bExec, bInc, wValue, wValueInc, bCalc FR'
	DB	'OM TSKILLDATA WHERE wSkillID = ?', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLSkillData@@6B@
CONST	SEGMENT
??_7CTBLSkillData@@6B@ DD FLAT:??_ECTBLSkillData@@UAEPAXI@Z ; CTBLSkillData::`vftable'
	DD	FLAT:?GetNumCol@CTBLSkillData@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLSkillData@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLSkillData@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLSkillData@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLSkillData@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T163165 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLSkillData@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLSkillData::CTBLSkillData, COMDAT
; _this$ = ecx

; 1605 : DEF_QUERY( CTBLSkillData, _T("SELECT bAction, bType, bAttr, bExec, bInc, wValue, wValueInc, bCalc FROM TSKILLDATA WHERE wSkillID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLSkillData@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0GH@FAGKEIKL@SELECT?5bAction?0?5bType?0?5bAttr?0?5bE@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T163165[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLSkillData@@6B@
  0005e	72 0d		 jb	 SHORT $L163338
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L163338:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163166:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLSkillData@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163337
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLSkillData@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLSkillData::CTBLSkillData
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLSkillData@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLSkillData@@UAEHXZ PROC NEAR		; CTBLSkillData::GetNumCol, COMDAT
; _this$ = ecx

; 1607 : BEGIN_COLUMN(8)

  00000	b8 08 00 00 00	 mov	 eax, 8
  00005	c3		 ret	 0
?GetNumCol@CTBLSkillData@@UAEHXZ ENDP			; CTBLSkillData::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSkillData@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLSkillData@@UAEFXZ PROC NEAR		; CTBLSkillData::BindColumns, COMDAT
; _this$ = ecx

; 1607 : BEGIN_COLUMN(8)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1608 : 	COLUMN_ENTRY(m_bAction)

  00003	8d 86 2e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3118]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L130815
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 b6 00 00
	00		 jne	 $L130811
$L130815:

; 1609 : 	COLUMN_ENTRY(m_bType)

  00020	8d 8e 2f 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3119]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L130816
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 97 00 00
	00		 jne	 $L130811
$L130816:

; 1610 : 	COLUMN_ENTRY(m_bAttr)

  0003f	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L130817
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 7c		 jne	 SHORT $L130811
$L130817:

; 1611 : 	COLUMN_ENTRY(m_bExec)

  0005a	8d 86 31 0c 00
	00		 lea	 eax, DWORD PTR [esi+3121]
  00060	50		 push	 eax
  00061	6a 04		 push	 4
  00063	8b ce		 mov	 ecx, esi
  00065	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0006a	66 85 c0	 test	 ax, ax
  0006d	74 06		 je	 SHORT $L130818
  0006f	66 3d 01 00	 cmp	 ax, 1
  00073	75 61		 jne	 SHORT $L130811
$L130818:

; 1612 : 	COLUMN_ENTRY(m_bInc)

  00075	8d 8e 32 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3122]
  0007b	51		 push	 ecx
  0007c	6a 05		 push	 5
  0007e	8b ce		 mov	 ecx, esi
  00080	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00085	66 85 c0	 test	 ax, ax
  00088	74 06		 je	 SHORT $L130819
  0008a	66 3d 01 00	 cmp	 ax, 1
  0008e	75 46		 jne	 SHORT $L130811
$L130819:

; 1613 : 	COLUMN_ENTRY(m_wValue)

  00090	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00096	52		 push	 edx
  00097	6a 06		 push	 6
  00099	8b ce		 mov	 ecx, esi
  0009b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000a0	66 85 c0	 test	 ax, ax
  000a3	74 06		 je	 SHORT $L130820
  000a5	66 3d 01 00	 cmp	 ax, 1
  000a9	75 2b		 jne	 SHORT $L130811
$L130820:

; 1614 : 	COLUMN_ENTRY(m_wValueInc)

  000ab	8d 86 36 0c 00
	00		 lea	 eax, DWORD PTR [esi+3126]
  000b1	50		 push	 eax
  000b2	6a 07		 push	 7
  000b4	8b ce		 mov	 ecx, esi
  000b6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000bb	66 85 c0	 test	 ax, ax
  000be	74 06		 je	 SHORT $L130821
  000c0	66 3d 01 00	 cmp	 ax, 1
  000c4	75 10		 jne	 SHORT $L130811
$L130821:

; 1615 : 	COLUMN_ENTRY(m_bCalc)

  000c6	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  000cc	51		 push	 ecx
  000cd	6a 08		 push	 8
  000cf	8b ce		 mov	 ecx, esi
  000d1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L130811:
  000d6	5e		 pop	 esi

; 1616 : END_COL()

  000d7	c3		 ret	 0
?BindColumns@CTBLSkillData@@UAEFXZ ENDP			; CTBLSkillData::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLSkillData@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLSkillData@@UAEHXZ PROC NEAR		; CTBLSkillData::GetNumParam, COMDAT
; _this$ = ecx

; 1618 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLSkillData@@UAEHXZ ENDP			; CTBLSkillData::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLSkillData@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLSkillData@@UAEFH@Z PROC NEAR	; CTBLSkillData::BindParameters, COMDAT
; _this$ = ecx

; 1619 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wSkillID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L130827
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L130827:

; 1620 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLSkillData@@UAEFH@Z ENDP		; CTBLSkillData::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLSkillData@@UAE@XZ			; CTBLSkillData::~CTBLSkillData
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLSkillData@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLSkillData@@UAEPAXI@Z PROC NEAR			; CTBLSkillData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLSkillData@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L163358
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L163358:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLSkillData@@UAEPAXI@Z ENDP			; CTBLSkillData::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLSkillData@@UAE@XZ
_TEXT	SEGMENT
??1CTBLSkillData@@UAE@XZ PROC NEAR			; CTBLSkillData::~CTBLSkillData, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLSkillData@@UAE@XZ ENDP				; CTBLSkillData::~CTBLSkillData
_TEXT	ENDS
PUBLIC	??0CTBLSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSkill::CTBLSkill
PUBLIC	?GetNumCol@CTBLSkill@@UAEHXZ			; CTBLSkill::GetNumCol
PUBLIC	?BindColumns@CTBLSkill@@UAEFXZ			; CTBLSkill::BindColumns
PUBLIC	?GetNumParam@CTBLSkill@@UAEHXZ			; CTBLSkill::GetNumParam
PUBLIC	?BindParameters@CTBLSkill@@UAEFH@Z		; CTBLSkill::BindParameters
PUBLIC	??_7CTBLSkill@@6B@				; CTBLSkill::`vftable'
PUBLIC	??_GCTBLSkill@@UAEPAXI@Z			; CTBLSkill::`scalar deleting destructor'
PUBLIC	??_C@_0EP@EJMPPMGN@SELECT?5?7wSkillID?0?5?7bLevel?0?5?7dwRe@ ; `string'
EXTRN	??_ECTBLSkill@@UAEPAXI@Z:NEAR			; CTBLSkill::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T163541 DD	0ffffffffH
	DD	FLAT:$L163367
$T163538 DD	019930520H
	DD	01H
	DD	FLAT:$T163541
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EP@EJMPPMGN@SELECT?5?7wSkillID?0?5?7bLevel?0?5?7dwRe@
CONST	SEGMENT
??_C@_0EP@EJMPPMGN@SELECT?5?7wSkillID?0?5?7bLevel?0?5?7dwRe@ DB 'SELECT ', 09H
	DB	'wSkillID, ', 09H, 'bLevel, ', 09H, 'dwRemainTick ', 09H, 'FRO'
	DB	'M TSKILLTABLE ', 09H, 'WHERE dwCharID = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLSkill@@6B@
CONST	SEGMENT
??_7CTBLSkill@@6B@ DD FLAT:??_ECTBLSkill@@UAEPAXI@Z	; CTBLSkill::`vftable'
	DD	FLAT:?GetNumCol@CTBLSkill@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLSkill@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLSkill@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLSkill@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T163366 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLSkill::CTBLSkill, COMDAT
; _this$ = ecx

; 1637 : 	WHERE dwCharID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EP@EJMPPMGN@SELECT?5?7wSkillID?0?5?7bLevel?0?5?7dwRe@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T163366[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLSkill@@6B@
  0005e	72 0d		 jb	 SHORT $L163539
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L163539:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163367:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163538
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLSkill::CTBLSkill
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLSkill@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLSkill@@UAEHXZ PROC NEAR			; CTBLSkill::GetNumCol, COMDAT
; _this$ = ecx

; 1639 : BEGIN_COLUMN(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumCol@CTBLSkill@@UAEHXZ ENDP			; CTBLSkill::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSkill@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLSkill@@UAEFXZ PROC NEAR		; CTBLSkill::BindColumns, COMDAT
; _this$ = ecx

; 1639 : BEGIN_COLUMN(3)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1640 : 	COLUMN_ENTRY(m_wSkillID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L130879
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 2b		 jne	 SHORT $L130875
$L130879:

; 1641 : 	COLUMN_ENTRY(m_bLevel)

  0001c	8d 8e 32 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3122]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L130880
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 10		 jne	 SHORT $L130875
$L130880:

; 1642 : 	COLUMN_ENTRY(m_dwRemainTick)

  00037	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L130875:
  00047	5e		 pop	 esi

; 1643 : END_COL()

  00048	c3		 ret	 0
?BindColumns@CTBLSkill@@UAEFXZ ENDP			; CTBLSkill::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLSkill@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLSkill@@UAEHXZ PROC NEAR		; CTBLSkill::GetNumParam, COMDAT
; _this$ = ecx

; 1645 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLSkill@@UAEHXZ ENDP			; CTBLSkill::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLSkill@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLSkill@@UAEFH@Z PROC NEAR		; CTBLSkill::BindParameters, COMDAT
; _this$ = ecx

; 1646 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L130886
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L130886:

; 1647 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLSkill@@UAEFH@Z ENDP			; CTBLSkill::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLSkill@@UAE@XZ				; CTBLSkill::~CTBLSkill
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLSkill@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLSkill@@UAEPAXI@Z PROC NEAR			; CTBLSkill::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLSkill@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L163559
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L163559:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLSkill@@UAEPAXI@Z ENDP				; CTBLSkill::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLSkill@@UAE@XZ
_TEXT	SEGMENT
??1CTBLSkill@@UAE@XZ PROC NEAR				; CTBLSkill::~CTBLSkill, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLSkill@@UAE@XZ ENDP				; CTBLSkill::~CTBLSkill
_TEXT	ENDS
PUBLIC	??0CTBLSkillMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSkillMaintain::CTBLSkillMaintain
PUBLIC	?GetNumCol@CTBLSkillMaintain@@UAEHXZ		; CTBLSkillMaintain::GetNumCol
PUBLIC	?BindColumns@CTBLSkillMaintain@@UAEFXZ		; CTBLSkillMaintain::BindColumns
PUBLIC	?GetNumParam@CTBLSkillMaintain@@UAEHXZ		; CTBLSkillMaintain::GetNumParam
PUBLIC	?BindParameters@CTBLSkillMaintain@@UAEFH@Z	; CTBLSkillMaintain::BindParameters
PUBLIC	??_7CTBLSkillMaintain@@6B@			; CTBLSkillMaintain::`vftable'
PUBLIC	??_GCTBLSkillMaintain@@UAEPAXI@Z		; CTBLSkillMaintain::`scalar deleting destructor'
PUBLIC	??_C@_0JK@BBDDEPMN@SELECT?5?7wSkillID?0?5?7bLevel?0?5?7dwRe@ ; `string'
EXTRN	??_ECTBLSkillMaintain@@UAEPAXI@Z:NEAR		; CTBLSkillMaintain::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T163742 DD	0ffffffffH
	DD	FLAT:$L163568
$T163739 DD	019930520H
	DD	01H
	DD	FLAT:$T163742
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0JK@BBDDEPMN@SELECT?5?7wSkillID?0?5?7bLevel?0?5?7dwRe@
CONST	SEGMENT
??_C@_0JK@BBDDEPMN@SELECT?5?7wSkillID?0?5?7bLevel?0?5?7dwRe@ DB 'SELECT ', 09H
	DB	'wSkillID, ', 09H, 'bLevel, ', 09H, 'dwRemainTick, ', 09H, 'bA'
	DB	'ttackType, ', 09H, 'dwAttackID, ', 09H, 'bHostType, ', 09H, 'd'
	DB	'wHostID, ', 09H, 'bAttackCountry ', 09H, 'FROM TSKILLMAINTAIN'
	DB	'TABLE ', 09H, 'WHERE dwCharID = ?', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLSkillMaintain@@6B@
CONST	SEGMENT
??_7CTBLSkillMaintain@@6B@ DD FLAT:??_ECTBLSkillMaintain@@UAEPAXI@Z ; CTBLSkillMaintain::`vftable'
	DD	FLAT:?GetNumCol@CTBLSkillMaintain@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLSkillMaintain@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLSkillMaintain@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLSkillMaintain@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLSkillMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T163567 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLSkillMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLSkillMaintain::CTBLSkillMaintain, COMDAT
; _this$ = ecx

; 1673 : 	WHERE dwCharID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLSkillMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0JK@BBDDEPMN@SELECT?5?7wSkillID?0?5?7bLevel?0?5?7dwRe@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T163567[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLSkillMaintain@@6B@
  0005e	72 0d		 jb	 SHORT $L163740
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L163740:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163568:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLSkillMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163739
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLSkillMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLSkillMaintain::CTBLSkillMaintain
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLSkillMaintain@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLSkillMaintain@@UAEHXZ PROC NEAR		; CTBLSkillMaintain::GetNumCol, COMDAT
; _this$ = ecx

; 1675 : BEGIN_COLUMN(8)

  00000	b8 08 00 00 00	 mov	 eax, 8
  00005	c3		 ret	 0
?GetNumCol@CTBLSkillMaintain@@UAEHXZ ENDP		; CTBLSkillMaintain::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSkillMaintain@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLSkillMaintain@@UAEFXZ PROC NEAR	; CTBLSkillMaintain::BindColumns, COMDAT
; _this$ = ecx

; 1675 : BEGIN_COLUMN(8)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1676 : 	COLUMN_ENTRY(m_wSkillID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L130943
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 b6 00 00
	00		 jne	 $L130939
$L130943:

; 1677 : 	COLUMN_ENTRY(m_bLevel)

  00020	8d 8e 32 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3122]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L130944
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 97 00 00
	00		 jne	 $L130939
$L130944:

; 1678 : 	COLUMN_ENTRY(m_dwRemainTick)

  0003f	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L130945
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 7c		 jne	 SHORT $L130939
$L130945:

; 1679 : 	COLUMN_ENTRY(m_bAttackType)

  0005a	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00060	50		 push	 eax
  00061	6a 04		 push	 4
  00063	8b ce		 mov	 ecx, esi
  00065	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0006a	66 85 c0	 test	 ax, ax
  0006d	74 06		 je	 SHORT $L130946
  0006f	66 3d 01 00	 cmp	 ax, 1
  00073	75 61		 jne	 SHORT $L130939
$L130946:

; 1680 : 	COLUMN_ENTRY(m_dwAttackID)

  00075	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  0007b	51		 push	 ecx
  0007c	6a 05		 push	 5
  0007e	8b ce		 mov	 ecx, esi
  00080	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00085	66 85 c0	 test	 ax, ax
  00088	74 06		 je	 SHORT $L130947
  0008a	66 3d 01 00	 cmp	 ax, 1
  0008e	75 46		 jne	 SHORT $L130939
$L130947:

; 1681 : 	COLUMN_ENTRY(m_bHostType)

  00090	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  00096	52		 push	 edx
  00097	6a 06		 push	 6
  00099	8b ce		 mov	 ecx, esi
  0009b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000a0	66 85 c0	 test	 ax, ax
  000a3	74 06		 je	 SHORT $L130948
  000a5	66 3d 01 00	 cmp	 ax, 1
  000a9	75 2b		 jne	 SHORT $L130939
$L130948:

; 1682 : 	COLUMN_ENTRY(m_dwHostID)

  000ab	8d 86 44 0c 00
	00		 lea	 eax, DWORD PTR [esi+3140]
  000b1	50		 push	 eax
  000b2	6a 07		 push	 7
  000b4	8b ce		 mov	 ecx, esi
  000b6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000bb	66 85 c0	 test	 ax, ax
  000be	74 06		 je	 SHORT $L130949
  000c0	66 3d 01 00	 cmp	 ax, 1
  000c4	75 10		 jne	 SHORT $L130939
$L130949:

; 1683 : 	COLUMN_ENTRY(m_bAttackCountry)

  000c6	8d 8e 48 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3144]
  000cc	51		 push	 ecx
  000cd	6a 08		 push	 8
  000cf	8b ce		 mov	 ecx, esi
  000d1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L130939:
  000d6	5e		 pop	 esi

; 1684 : END_COL()

  000d7	c3		 ret	 0
?BindColumns@CTBLSkillMaintain@@UAEFXZ ENDP		; CTBLSkillMaintain::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLSkillMaintain@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLSkillMaintain@@UAEHXZ PROC NEAR	; CTBLSkillMaintain::GetNumParam, COMDAT
; _this$ = ecx

; 1686 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLSkillMaintain@@UAEHXZ ENDP		; CTBLSkillMaintain::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLSkillMaintain@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLSkillMaintain@@UAEFH@Z PROC NEAR	; CTBLSkillMaintain::BindParameters, COMDAT
; _this$ = ecx

; 1687 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L130955
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L130955:

; 1688 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLSkillMaintain@@UAEFH@Z ENDP		; CTBLSkillMaintain::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLSkillMaintain@@UAE@XZ			; CTBLSkillMaintain::~CTBLSkillMaintain
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLSkillMaintain@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLSkillMaintain@@UAEPAXI@Z PROC NEAR		; CTBLSkillMaintain::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLSkillMaintain@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L163760
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L163760:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLSkillMaintain@@UAEPAXI@Z ENDP			; CTBLSkillMaintain::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLSkillMaintain@@UAE@XZ
_TEXT	SEGMENT
??1CTBLSkillMaintain@@UAE@XZ PROC NEAR			; CTBLSkillMaintain::~CTBLSkillMaintain, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLSkillMaintain@@UAE@XZ ENDP			; CTBLSkillMaintain::~CTBLSkillMaintain
_TEXT	ENDS
PUBLIC	??0CTBLQuestChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLQuestChart::CTBLQuestChart
PUBLIC	?GetNumCol@CTBLQuestChart@@UAEHXZ		; CTBLQuestChart::GetNumCol
PUBLIC	?BindColumns@CTBLQuestChart@@UAEFXZ		; CTBLQuestChart::BindColumns
PUBLIC	?GetNumParam@CTBLQuestChart@@UAEHXZ		; CTBLQuestChart::GetNumParam
PUBLIC	?BindParameters@CTBLQuestChart@@UAEFH@Z		; CTBLQuestChart::BindParameters
PUBLIC	??_7CTBLQuestChart@@6B@				; CTBLQuestChart::`vftable'
PUBLIC	??_GCTBLQuestChart@@UAEPAXI@Z			; CTBLQuestChart::`scalar deleting destructor'
PUBLIC	??_C@_0JO@GBGIFKGC@SELECT?5?7dwQuestID?0?5?7dwTriggerID?0@ ; `string'
EXTRN	??_ECTBLQuestChart@@UAEPAXI@Z:NEAR		; CTBLQuestChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T163943 DD	0ffffffffH
	DD	FLAT:$L163769
$T163940 DD	019930520H
	DD	01H
	DD	FLAT:$T163943
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0JO@GBGIFKGC@SELECT?5?7dwQuestID?0?5?7dwTriggerID?0@
CONST	SEGMENT
??_C@_0JO@GBGIFKGC@SELECT?5?7dwQuestID?0?5?7dwTriggerID?0@ DB 'SELECT ', 09H
	DB	'dwQuestID, ', 09H, 'dwTriggerID, ', 09H, 'bTriggerType, ', 09H
	DB	'bForceRun, ', 09H, 'bCountMax, ', 09H, 'bType, ', 09H, 'bCond'
	DB	'itionCheck ', 09H, 'FROM TQUESTCHART ', 09H, 'WHERE dwParentI'
	DB	'D = ? ', 09H, 'ORDER BY bMain DESC', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLQuestChart@@6B@
CONST	SEGMENT
??_7CTBLQuestChart@@6B@ DD FLAT:??_ECTBLQuestChart@@UAEPAXI@Z ; CTBLQuestChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLQuestChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLQuestChart@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLQuestChart@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLQuestChart@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLQuestChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T163768 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLQuestChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLQuestChart::CTBLQuestChart, COMDAT
; _this$ = ecx

; 1715 : 	ORDER BY bMain DESC"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLQuestChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0JO@GBGIFKGC@SELECT?5?7dwQuestID?0?5?7dwTriggerID?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T163768[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLQuestChart@@6B@
  0005e	72 0d		 jb	 SHORT $L163941
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L163941:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163769:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLQuestChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163940
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLQuestChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLQuestChart::CTBLQuestChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLQuestChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLQuestChart@@UAEHXZ PROC NEAR		; CTBLQuestChart::GetNumCol, COMDAT
; _this$ = ecx

; 1717 : BEGIN_COLUMN(7)

  00000	b8 07 00 00 00	 mov	 eax, 7
  00005	c3		 ret	 0
?GetNumCol@CTBLQuestChart@@UAEHXZ ENDP			; CTBLQuestChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLQuestChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLQuestChart@@UAEFXZ PROC NEAR		; CTBLQuestChart::BindColumns, COMDAT
; _this$ = ecx

; 1717 : BEGIN_COLUMN(7)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1718 : 	COLUMN_ENTRY(m_dwQuestID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L131011
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 97 00 00
	00		 jne	 $L131007
$L131011:

; 1719 : 	COLUMN_ENTRY(m_dwTriggerID)

  00020	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 06		 je	 SHORT $L131012
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	75 7c		 jne	 SHORT $L131007
$L131012:

; 1720 : 	COLUMN_ENTRY(m_bTriggerType)

  0003b	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  00041	52		 push	 edx
  00042	6a 03		 push	 3
  00044	8b ce		 mov	 ecx, esi
  00046	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004b	66 85 c0	 test	 ax, ax
  0004e	74 06		 je	 SHORT $L131013
  00050	66 3d 01 00	 cmp	 ax, 1
  00054	75 61		 jne	 SHORT $L131007
$L131013:

; 1721 : 	COLUMN_ENTRY(m_bForceRun)

  00056	8d 86 39 0c 00
	00		 lea	 eax, DWORD PTR [esi+3129]
  0005c	50		 push	 eax
  0005d	6a 04		 push	 4
  0005f	8b ce		 mov	 ecx, esi
  00061	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00066	66 85 c0	 test	 ax, ax
  00069	74 06		 je	 SHORT $L131014
  0006b	66 3d 01 00	 cmp	 ax, 1
  0006f	75 46		 jne	 SHORT $L131007
$L131014:

; 1722 : 	COLUMN_ENTRY(m_bCountMax)

  00071	8d 8e 3a 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3130]
  00077	51		 push	 ecx
  00078	6a 05		 push	 5
  0007a	8b ce		 mov	 ecx, esi
  0007c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00081	66 85 c0	 test	 ax, ax
  00084	74 06		 je	 SHORT $L131015
  00086	66 3d 01 00	 cmp	 ax, 1
  0008a	75 2b		 jne	 SHORT $L131007
$L131015:

; 1723 : 	COLUMN_ENTRY(m_bType)

  0008c	8d 96 3b 0c 00
	00		 lea	 edx, DWORD PTR [esi+3131]
  00092	52		 push	 edx
  00093	6a 06		 push	 6
  00095	8b ce		 mov	 ecx, esi
  00097	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0009c	66 85 c0	 test	 ax, ax
  0009f	74 06		 je	 SHORT $L131016
  000a1	66 3d 01 00	 cmp	 ax, 1
  000a5	75 10		 jne	 SHORT $L131007
$L131016:

; 1724 : 	COLUMN_ENTRY(m_bConditionCheck)

  000a7	8d 86 3c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3132]
  000ad	50		 push	 eax
  000ae	6a 07		 push	 7
  000b0	8b ce		 mov	 ecx, esi
  000b2	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L131007:
  000b7	5e		 pop	 esi

; 1725 : END_COL()

  000b8	c3		 ret	 0
?BindColumns@CTBLQuestChart@@UAEFXZ ENDP		; CTBLQuestChart::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLQuestChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLQuestChart@@UAEHXZ PROC NEAR		; CTBLQuestChart::GetNumParam, COMDAT
; _this$ = ecx

; 1727 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLQuestChart@@UAEHXZ ENDP		; CTBLQuestChart::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLQuestChart@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLQuestChart@@UAEFH@Z PROC NEAR	; CTBLQuestChart::BindParameters, COMDAT
; _this$ = ecx

; 1728 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwParentID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L131022
  00010	8d 81 34 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3124]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L131022:

; 1729 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLQuestChart@@UAEFH@Z ENDP		; CTBLQuestChart::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLQuestChart@@UAE@XZ			; CTBLQuestChart::~CTBLQuestChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLQuestChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLQuestChart@@UAEPAXI@Z PROC NEAR			; CTBLQuestChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLQuestChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L163961
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L163961:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLQuestChart@@UAEPAXI@Z ENDP			; CTBLQuestChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLQuestChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLQuestChart@@UAE@XZ PROC NEAR			; CTBLQuestChart::~CTBLQuestChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLQuestChart@@UAE@XZ ENDP				; CTBLQuestChart::~CTBLQuestChart
_TEXT	ENDS
PUBLIC	??0CTBLQuestConditionChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLQuestConditionChart::CTBLQuestConditionChart
PUBLIC	?GetNumCol@CTBLQuestConditionChart@@UAEHXZ	; CTBLQuestConditionChart::GetNumCol
PUBLIC	?BindColumns@CTBLQuestConditionChart@@UAEFXZ	; CTBLQuestConditionChart::BindColumns
PUBLIC	?GetNumParam@CTBLQuestConditionChart@@UAEHXZ	; CTBLQuestConditionChart::GetNumParam
PUBLIC	?BindParameters@CTBLQuestConditionChart@@UAEFH@Z ; CTBLQuestConditionChart::BindParameters
PUBLIC	??_7CTBLQuestConditionChart@@6B@		; CTBLQuestConditionChart::`vftable'
PUBLIC	??_GCTBLQuestConditionChart@@UAEPAXI@Z		; CTBLQuestConditionChart::`scalar deleting destructor'
PUBLIC	??_C@_0HK@GFBLNELM@SELECT?5?7dwConditionID?0?5?7bConditi@ ; `string'
EXTRN	??_ECTBLQuestConditionChart@@UAEPAXI@Z:NEAR	; CTBLQuestConditionChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T164144 DD	0ffffffffH
	DD	FLAT:$L163970
$T164141 DD	019930520H
	DD	01H
	DD	FLAT:$T164144
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0HK@GFBLNELM@SELECT?5?7dwConditionID?0?5?7bConditi@
CONST	SEGMENT
??_C@_0HK@GFBLNELM@SELECT?5?7dwConditionID?0?5?7bConditi@ DB 'SELECT ', 09H
	DB	'dwConditionID, ', 09H, 'bConditionType, ', 09H, 'bCount ', 09H
	DB	'FROM TQCONDITIONCHART ', 09H, 'WHERE dwQuestID = ? ', 09H, 'O'
	DB	'RDER BY bConditionType DESC', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CTBLQuestConditionChart@@6B@
CONST	SEGMENT
??_7CTBLQuestConditionChart@@6B@ DD FLAT:??_ECTBLQuestConditionChart@@UAEPAXI@Z ; CTBLQuestConditionChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLQuestConditionChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLQuestConditionChart@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLQuestConditionChart@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLQuestConditionChart@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLQuestConditionChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T163969 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLQuestConditionChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLQuestConditionChart::CTBLQuestConditionChart, COMDAT
; _this$ = ecx

; 1747 : 	ORDER BY bConditionType DESC"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLQuestConditionChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0HK@GFBLNELM@SELECT?5?7dwConditionID?0?5?7bConditi@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T163969[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLQuestConditionChart@@6B@
  0005e	72 0d		 jb	 SHORT $L164142
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L164142:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163970:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLQuestConditionChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T164141
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLQuestConditionChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLQuestConditionChart::CTBLQuestConditionChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLQuestConditionChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLQuestConditionChart@@UAEHXZ PROC NEAR	; CTBLQuestConditionChart::GetNumCol, COMDAT
; _this$ = ecx

; 1749 : BEGIN_COLUMN(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumCol@CTBLQuestConditionChart@@UAEHXZ ENDP		; CTBLQuestConditionChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLQuestConditionChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLQuestConditionChart@@UAEFXZ PROC NEAR	; CTBLQuestConditionChart::BindColumns, COMDAT
; _this$ = ecx

; 1749 : BEGIN_COLUMN(3)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1750 : 	COLUMN_ENTRY(m_dwConditionID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L131074
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 2b		 jne	 SHORT $L131070
$L131074:

; 1751 : 	COLUMN_ENTRY(m_bConditionType)

  0001c	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L131075
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 10		 jne	 SHORT $L131070
$L131075:

; 1752 : 	COLUMN_ENTRY(m_bCount)

  00037	8d 96 35 0c 00
	00		 lea	 edx, DWORD PTR [esi+3125]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L131070:
  00047	5e		 pop	 esi

; 1753 : END_COL()

  00048	c3		 ret	 0
?BindColumns@CTBLQuestConditionChart@@UAEFXZ ENDP	; CTBLQuestConditionChart::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLQuestConditionChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLQuestConditionChart@@UAEHXZ PROC NEAR	; CTBLQuestConditionChart::GetNumParam, COMDAT
; _this$ = ecx

; 1755 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLQuestConditionChart@@UAEHXZ ENDP	; CTBLQuestConditionChart::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLQuestConditionChart@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLQuestConditionChart@@UAEFH@Z PROC NEAR ; CTBLQuestConditionChart::BindParameters, COMDAT
; _this$ = ecx

; 1756 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwQuestID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L131081
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L131081:

; 1757 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLQuestConditionChart@@UAEFH@Z ENDP	; CTBLQuestConditionChart::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLQuestConditionChart@@UAE@XZ		; CTBLQuestConditionChart::~CTBLQuestConditionChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLQuestConditionChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLQuestConditionChart@@UAEPAXI@Z PROC NEAR	; CTBLQuestConditionChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLQuestConditionChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L164162
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L164162:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLQuestConditionChart@@UAEPAXI@Z ENDP		; CTBLQuestConditionChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLQuestConditionChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLQuestConditionChart@@UAE@XZ PROC NEAR		; CTBLQuestConditionChart::~CTBLQuestConditionChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLQuestConditionChart@@UAE@XZ ENDP			; CTBLQuestConditionChart::~CTBLQuestConditionChart
_TEXT	ENDS
PUBLIC	??0CTBLQuestRewardChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLQuestRewardChart::CTBLQuestRewardChart
PUBLIC	?GetNumCol@CTBLQuestRewardChart@@UAEHXZ		; CTBLQuestRewardChart::GetNumCol
PUBLIC	?BindColumns@CTBLQuestRewardChart@@UAEFXZ	; CTBLQuestRewardChart::BindColumns
PUBLIC	?GetNumParam@CTBLQuestRewardChart@@UAEHXZ	; CTBLQuestRewardChart::GetNumParam
PUBLIC	?BindParameters@CTBLQuestRewardChart@@UAEFH@Z	; CTBLQuestRewardChart::BindParameters
PUBLIC	??_7CTBLQuestRewardChart@@6B@			; CTBLQuestRewardChart::`vftable'
PUBLIC	??_GCTBLQuestRewardChart@@UAEPAXI@Z		; CTBLQuestRewardChart::`scalar deleting destructor'
PUBLIC	??_C@_0HM@IEGGFAGO@SELECT?5?7dwRewardID?0?5?7bRewardType@ ; `string'
EXTRN	??_ECTBLQuestRewardChart@@UAEPAXI@Z:NEAR	; CTBLQuestRewardChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T164345 DD	0ffffffffH
	DD	FLAT:$L164171
$T164342 DD	019930520H
	DD	01H
	DD	FLAT:$T164345
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0HM@IEGGFAGO@SELECT?5?7dwRewardID?0?5?7bRewardType@
CONST	SEGMENT
??_C@_0HM@IEGGFAGO@SELECT?5?7dwRewardID?0?5?7bRewardType@ DB 'SELECT ', 09H
	DB	'dwRewardID, ', 09H, 'bRewardType, ', 09H, 'bTakeMethod, ', 09H
	DB	'bTakeData, ', 09H, 'bCount ', 09H, 'FROM TQREWARDCHART ', 09H
	DB	'WITH (NOLOCK) ', 09H, 'WHERE dwQuestID = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLQuestRewardChart@@6B@
CONST	SEGMENT
??_7CTBLQuestRewardChart@@6B@ DD FLAT:??_ECTBLQuestRewardChart@@UAEPAXI@Z ; CTBLQuestRewardChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLQuestRewardChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLQuestRewardChart@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLQuestRewardChart@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLQuestRewardChart@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLQuestRewardChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T164170 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLQuestRewardChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLQuestRewardChart::CTBLQuestRewardChart, COMDAT
; _this$ = ecx

; 1779 : 	WHERE dwQuestID = ?"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLQuestRewardChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0HM@IEGGFAGO@SELECT?5?7dwRewardID?0?5?7bRewardType@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T164170[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLQuestRewardChart@@6B@
  0005e	72 0d		 jb	 SHORT $L164343
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L164343:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L164171:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLQuestRewardChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T164342
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLQuestRewardChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLQuestRewardChart::CTBLQuestRewardChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLQuestRewardChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLQuestRewardChart@@UAEHXZ PROC NEAR	; CTBLQuestRewardChart::GetNumCol, COMDAT
; _this$ = ecx

; 1781 : BEGIN_COLUMN(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumCol@CTBLQuestRewardChart@@UAEHXZ ENDP		; CTBLQuestRewardChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLQuestRewardChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLQuestRewardChart@@UAEFXZ PROC NEAR	; CTBLQuestRewardChart::BindColumns, COMDAT
; _this$ = ecx

; 1781 : BEGIN_COLUMN(5)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1782 : 	COLUMN_ENTRY(m_dwRewardID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L131135
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 61		 jne	 SHORT $L131131
$L131135:

; 1783 : 	COLUMN_ENTRY(m_bRewardType)

  0001c	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L131136
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 46		 jne	 SHORT $L131131
$L131136:

; 1784 : 	COLUMN_ENTRY(m_bTakeMethod)

  00037	8d 96 35 0c 00
	00		 lea	 edx, DWORD PTR [esi+3125]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L131137
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 2b		 jne	 SHORT $L131131
$L131137:

; 1785 : 	COLUMN_ENTRY(m_bTakeData)

  00052	8d 86 36 0c 00
	00		 lea	 eax, DWORD PTR [esi+3126]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00062	66 85 c0	 test	 ax, ax
  00065	74 06		 je	 SHORT $L131138
  00067	66 3d 01 00	 cmp	 ax, 1
  0006b	75 10		 jne	 SHORT $L131131
$L131138:

; 1786 : 	COLUMN_ENTRY(m_bCount)

  0006d	8d 8e 37 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3127]
  00073	51		 push	 ecx
  00074	6a 05		 push	 5
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L131131:
  0007d	5e		 pop	 esi

; 1787 : END_COL()

  0007e	c3		 ret	 0
?BindColumns@CTBLQuestRewardChart@@UAEFXZ ENDP		; CTBLQuestRewardChart::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLQuestRewardChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLQuestRewardChart@@UAEHXZ PROC NEAR	; CTBLQuestRewardChart::GetNumParam, COMDAT
; _this$ = ecx

; 1789 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLQuestRewardChart@@UAEHXZ ENDP		; CTBLQuestRewardChart::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLQuestRewardChart@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLQuestRewardChart@@UAEFH@Z PROC NEAR	; CTBLQuestRewardChart::BindParameters, COMDAT
; _this$ = ecx

; 1790 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwQuestID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L131144
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L131144:

; 1791 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLQuestRewardChart@@UAEFH@Z ENDP	; CTBLQuestRewardChart::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLQuestRewardChart@@UAE@XZ			; CTBLQuestRewardChart::~CTBLQuestRewardChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLQuestRewardChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLQuestRewardChart@@UAEPAXI@Z PROC NEAR		; CTBLQuestRewardChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLQuestRewardChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L164363
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L164363:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLQuestRewardChart@@UAEPAXI@Z ENDP		; CTBLQuestRewardChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLQuestRewardChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLQuestRewardChart@@UAE@XZ PROC NEAR		; CTBLQuestRewardChart::~CTBLQuestRewardChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLQuestRewardChart@@UAE@XZ ENDP			; CTBLQuestRewardChart::~CTBLQuestRewardChart
_TEXT	ENDS
PUBLIC	??0CTBLQuestMagicItemChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLQuestMagicItemChart::CTBLQuestMagicItemChart
PUBLIC	?GetNumCol@CTBLQuestMagicItemChart@@UAEHXZ	; CTBLQuestMagicItemChart::GetNumCol
PUBLIC	?BindColumns@CTBLQuestMagicItemChart@@UAEFXZ	; CTBLQuestMagicItemChart::BindColumns
PUBLIC	?GetNumParam@CTBLQuestMagicItemChart@@UAEHXZ	; CTBLQuestMagicItemChart::GetNumParam
PUBLIC	?BindParameters@CTBLQuestMagicItemChart@@UAEFH@Z ; CTBLQuestMagicItemChart::BindParameters
PUBLIC	??_7CTBLQuestMagicItemChart@@6B@		; CTBLQuestMagicItemChart::`vftable'
PUBLIC	??_GCTBLQuestMagicItemChart@@UAEPAXI@Z		; CTBLQuestMagicItemChart::`scalar deleting destructor'
PUBLIC	??_C@_0BEN@MDOBMPLP@SELECT?5?5?5?5?5dwID?0?5?7wItemID?0?5?7bLev@ ; `string'
EXTRN	??_ECTBLQuestMagicItemChart@@UAEPAXI@Z:NEAR	; CTBLQuestMagicItemChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T164546 DD	0ffffffffH
	DD	FLAT:$L164372
$T164543 DD	019930520H
	DD	01H
	DD	FLAT:$T164546
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BEN@MDOBMPLP@SELECT?5?5?5?5?5dwID?0?5?7wItemID?0?5?7bLev@
CONST	SEGMENT
??_C@_0BEN@MDOBMPLP@SELECT?5?5?5?5?5dwID?0?5?7wItemID?0?5?7bLev@ DB 'SELE'
	DB	'CT     dwID, ', 09H, 'wItemID, ', 09H, 'bLevel, ', 09H, 'bGLe'
	DB	'vel, ', 09H, 'bDropLevel, ', 09H, 'dwDuraMax, ', 09H, 'dwDura'
	DB	'Cur, ', 09H, 'bRefineCur, ', 09H, 'wUseTime, ', 09H, 'bGradeE'
	DB	'ffect, ', 09H, 'bMagic1, ', 09H, 'bMagic2, ', 09H, 'bMagic3, '
	DB	09H, 'bMagic4, ', 09H, 'bMagic5, ', 09H, 'bMagic6, ', 09H, 'wV'
	DB	'alue1, ', 09H, 'wValue2, ', 09H, 'wValue3, ', 09H, 'wValue4, '
	DB	09H, 'wValue5, ', 09H, 'wValue6, ', 09H, 'dwTime1, ', 09H, 'dw'
	DB	'Time2, ', 09H, 'dwTime3, ', 09H, 'dwTime4, ', 09H, 'dwTime5, '
	DB	09H, 'dwTime6, ', 09H, 'dwMoney ', 09H, 'FROM TQUESTITEMCHART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLQuestMagicItemChart@@6B@
CONST	SEGMENT
??_7CTBLQuestMagicItemChart@@6B@ DD FLAT:??_ECTBLQuestMagicItemChart@@UAEPAXI@Z ; CTBLQuestMagicItemChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLQuestMagicItemChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLQuestMagicItemChart@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLQuestMagicItemChart@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLQuestMagicItemChart@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLQuestMagicItemChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T164371 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLQuestMagicItemChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLQuestMagicItemChart::CTBLQuestMagicItemChart, COMDAT
; _this$ = ecx

; 1833 : 	FROM TQUESTITEMCHART"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLQuestMagicItemChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BEN@MDOBMPLP@SELECT?5?5?5?5?5dwID?0?5?7wItemID?0?5?7bLev@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T164371[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLQuestMagicItemChart@@6B@
  0005e	72 0d		 jb	 SHORT $L164544
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L164544:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L164372:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLQuestMagicItemChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T164543
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLQuestMagicItemChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLQuestMagicItemChart::CTBLQuestMagicItemChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLQuestMagicItemChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLQuestMagicItemChart@@UAEHXZ PROC NEAR	; CTBLQuestMagicItemChart::GetNumCol, COMDAT
; _this$ = ecx

; 1835 : BEGIN_COLUMN(29)

  00000	b8 1d 00 00 00	 mov	 eax, 29			; 0000001dH
  00005	c3		 ret	 0
?GetNumCol@CTBLQuestMagicItemChart@@UAEHXZ ENDP		; CTBLQuestMagicItemChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLQuestMagicItemChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLQuestMagicItemChart@@UAEFXZ PROC NEAR	; CTBLQuestMagicItemChart::BindColumns, COMDAT
; _this$ = ecx

; 1835 : BEGIN_COLUMN(29)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1836 : 	COLUMN_ENTRY(m_dwRewardID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L131197
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 41 03 00
	00		 jne	 $L131193
$L131197:

; 1837 : 	COLUMN_ENTRY(m_item.m_wItemID)

  00020	8d 8e 42 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3138]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L131198
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 22 03 00
	00		 jne	 $L131193
$L131198:

; 1838 : 	COLUMN_ENTRY(m_item.m_bLevel)

  0003f	8d 96 44 0c 00
	00		 lea	 edx, DWORD PTR [esi+3140]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L131199
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 03 03 00
	00		 jne	 $L131193
$L131199:

; 1839 : 	COLUMN_ENTRY(m_item.m_bGLevel)

  0005e	8d 86 46 0c 00
	00		 lea	 eax, DWORD PTR [esi+3142]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L131200
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 e4 02 00
	00		 jne	 $L131193
$L131200:

; 1840 : 	COLUMN_ENTRY(m_bDropLevel)

  0007d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L131201
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 c5 02 00
	00		 jne	 $L131193
$L131201:

; 1841 : 	COLUMN_ENTRY(m_item.m_dwDuraMax)

  0009c	8d 96 48 0c 00
	00		 lea	 edx, DWORD PTR [esi+3144]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L131202
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 a6 02 00
	00		 jne	 $L131193
$L131202:

; 1842 : 	COLUMN_ENTRY(m_item.m_dwDuraCur)

  000bb	8d 86 4c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3148]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 0a		 je	 SHORT $L131203
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	0f 85 87 02 00
	00		 jne	 $L131193
$L131203:

; 1843 : 	COLUMN_ENTRY(m_item.m_bRefineCur)

  000da	8d 8e 50 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3152]
  000e0	51		 push	 ecx
  000e1	6a 08		 push	 8
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ea	66 85 c0	 test	 ax, ax
  000ed	74 0a		 je	 SHORT $L131204
  000ef	66 3d 01 00	 cmp	 ax, 1
  000f3	0f 85 68 02 00
	00		 jne	 $L131193
$L131204:

; 1844 : 	COLUMN_ENTRY(m_wUseTime)

  000f9	8d 96 32 0c 00
	00		 lea	 edx, DWORD PTR [esi+3122]
  000ff	52		 push	 edx
  00100	6a 09		 push	 9
  00102	8b ce		 mov	 ecx, esi
  00104	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00109	66 85 c0	 test	 ax, ax
  0010c	74 0a		 je	 SHORT $L131205
  0010e	66 3d 01 00	 cmp	 ax, 1
  00112	0f 85 49 02 00
	00		 jne	 $L131193
$L131205:

; 1845 : 	COLUMN_ENTRY(m_item.m_bGradeEffect)

  00118	8d 86 64 0c 00
	00		 lea	 eax, DWORD PTR [esi+3172]
  0011e	50		 push	 eax
  0011f	6a 0a		 push	 10			; 0000000aH
  00121	8b ce		 mov	 ecx, esi
  00123	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00128	66 85 c0	 test	 ax, ax
  0012b	74 0a		 je	 SHORT $L131206
  0012d	66 3d 01 00	 cmp	 ax, 1
  00131	0f 85 2a 02 00
	00		 jne	 $L131193
$L131206:

; 1846 : 	COLUMN_ENTRY(m_item.m_bMagic[0])

  00137	8d 8e 65 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3173]
  0013d	51		 push	 ecx
  0013e	6a 0b		 push	 11			; 0000000bH
  00140	8b ce		 mov	 ecx, esi
  00142	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00147	66 85 c0	 test	 ax, ax
  0014a	74 0a		 je	 SHORT $L131207
  0014c	66 3d 01 00	 cmp	 ax, 1
  00150	0f 85 0b 02 00
	00		 jne	 $L131193
$L131207:

; 1847 : 	COLUMN_ENTRY(m_item.m_bMagic[1])

  00156	8d 96 66 0c 00
	00		 lea	 edx, DWORD PTR [esi+3174]
  0015c	52		 push	 edx
  0015d	6a 0c		 push	 12			; 0000000cH
  0015f	8b ce		 mov	 ecx, esi
  00161	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00166	66 85 c0	 test	 ax, ax
  00169	74 0a		 je	 SHORT $L131208
  0016b	66 3d 01 00	 cmp	 ax, 1
  0016f	0f 85 ec 01 00
	00		 jne	 $L131193
$L131208:

; 1848 : 	COLUMN_ENTRY(m_item.m_bMagic[2])

  00175	8d 86 67 0c 00
	00		 lea	 eax, DWORD PTR [esi+3175]
  0017b	50		 push	 eax
  0017c	6a 0d		 push	 13			; 0000000dH
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00185	66 85 c0	 test	 ax, ax
  00188	74 0a		 je	 SHORT $L131209
  0018a	66 3d 01 00	 cmp	 ax, 1
  0018e	0f 85 cd 01 00
	00		 jne	 $L131193
$L131209:

; 1849 : 	COLUMN_ENTRY(m_item.m_bMagic[3])

  00194	8d 8e 68 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3176]
  0019a	51		 push	 ecx
  0019b	6a 0e		 push	 14			; 0000000eH
  0019d	8b ce		 mov	 ecx, esi
  0019f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001a4	66 85 c0	 test	 ax, ax
  001a7	74 0a		 je	 SHORT $L131210
  001a9	66 3d 01 00	 cmp	 ax, 1
  001ad	0f 85 ae 01 00
	00		 jne	 $L131193
$L131210:

; 1850 : 	COLUMN_ENTRY(m_item.m_bMagic[4])

  001b3	8d 96 69 0c 00
	00		 lea	 edx, DWORD PTR [esi+3177]
  001b9	52		 push	 edx
  001ba	6a 0f		 push	 15			; 0000000fH
  001bc	8b ce		 mov	 ecx, esi
  001be	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001c3	66 85 c0	 test	 ax, ax
  001c6	74 0a		 je	 SHORT $L131211
  001c8	66 3d 01 00	 cmp	 ax, 1
  001cc	0f 85 8f 01 00
	00		 jne	 $L131193
$L131211:

; 1851 : 	COLUMN_ENTRY(m_item.m_bMagic[5])

  001d2	8d 86 6a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3178]
  001d8	50		 push	 eax
  001d9	6a 10		 push	 16			; 00000010H
  001db	8b ce		 mov	 ecx, esi
  001dd	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001e2	66 85 c0	 test	 ax, ax
  001e5	74 0a		 je	 SHORT $L131212
  001e7	66 3d 01 00	 cmp	 ax, 1
  001eb	0f 85 70 01 00
	00		 jne	 $L131193
$L131212:

; 1852 : 	COLUMN_ENTRY(m_item.m_wValue[0])

  001f1	8d 8e 6c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3180]
  001f7	51		 push	 ecx
  001f8	6a 11		 push	 17			; 00000011H
  001fa	8b ce		 mov	 ecx, esi
  001fc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00201	66 85 c0	 test	 ax, ax
  00204	74 0a		 je	 SHORT $L131213
  00206	66 3d 01 00	 cmp	 ax, 1
  0020a	0f 85 51 01 00
	00		 jne	 $L131193
$L131213:

; 1853 : 	COLUMN_ENTRY(m_item.m_wValue[1])

  00210	8d 96 6e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3182]
  00216	52		 push	 edx
  00217	6a 12		 push	 18			; 00000012H
  00219	8b ce		 mov	 ecx, esi
  0021b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00220	66 85 c0	 test	 ax, ax
  00223	74 0a		 je	 SHORT $L131214
  00225	66 3d 01 00	 cmp	 ax, 1
  00229	0f 85 32 01 00
	00		 jne	 $L131193
$L131214:

; 1854 : 	COLUMN_ENTRY(m_item.m_wValue[2])

  0022f	8d 86 70 0c 00
	00		 lea	 eax, DWORD PTR [esi+3184]
  00235	50		 push	 eax
  00236	6a 13		 push	 19			; 00000013H
  00238	8b ce		 mov	 ecx, esi
  0023a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0023f	66 85 c0	 test	 ax, ax
  00242	74 0a		 je	 SHORT $L131215
  00244	66 3d 01 00	 cmp	 ax, 1
  00248	0f 85 13 01 00
	00		 jne	 $L131193
$L131215:

; 1855 : 	COLUMN_ENTRY(m_item.m_wValue[3])

  0024e	8d 8e 72 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3186]
  00254	51		 push	 ecx
  00255	6a 14		 push	 20			; 00000014H
  00257	8b ce		 mov	 ecx, esi
  00259	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0025e	66 85 c0	 test	 ax, ax
  00261	74 0a		 je	 SHORT $L131216
  00263	66 3d 01 00	 cmp	 ax, 1
  00267	0f 85 f4 00 00
	00		 jne	 $L131193
$L131216:

; 1856 : 	COLUMN_ENTRY(m_item.m_wValue[4])

  0026d	8d 96 74 0c 00
	00		 lea	 edx, DWORD PTR [esi+3188]
  00273	52		 push	 edx
  00274	6a 15		 push	 21			; 00000015H
  00276	8b ce		 mov	 ecx, esi
  00278	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0027d	66 85 c0	 test	 ax, ax
  00280	74 0a		 je	 SHORT $L131217
  00282	66 3d 01 00	 cmp	 ax, 1
  00286	0f 85 d5 00 00
	00		 jne	 $L131193
$L131217:

; 1857 : 	COLUMN_ENTRY(m_item.m_wValue[5])

  0028c	8d 86 76 0c 00
	00		 lea	 eax, DWORD PTR [esi+3190]
  00292	50		 push	 eax
  00293	6a 16		 push	 22			; 00000016H
  00295	8b ce		 mov	 ecx, esi
  00297	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0029c	66 85 c0	 test	 ax, ax
  0029f	74 0a		 je	 SHORT $L131218
  002a1	66 3d 01 00	 cmp	 ax, 1
  002a5	0f 85 b6 00 00
	00		 jne	 $L131193
$L131218:

; 1858 : 	COLUMN_ENTRY(m_item.m_dwExtValue[0])

  002ab	8d 8e 78 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3192]
  002b1	51		 push	 ecx
  002b2	6a 17		 push	 23			; 00000017H
  002b4	8b ce		 mov	 ecx, esi
  002b6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  002bb	66 85 c0	 test	 ax, ax
  002be	74 0a		 je	 SHORT $L131219
  002c0	66 3d 01 00	 cmp	 ax, 1
  002c4	0f 85 97 00 00
	00		 jne	 $L131193
$L131219:

; 1859 : 	COLUMN_ENTRY(m_item.m_dwExtValue[1])

  002ca	8d 96 7c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3196]
  002d0	52		 push	 edx
  002d1	6a 18		 push	 24			; 00000018H
  002d3	8b ce		 mov	 ecx, esi
  002d5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  002da	66 85 c0	 test	 ax, ax
  002dd	74 06		 je	 SHORT $L131220
  002df	66 3d 01 00	 cmp	 ax, 1
  002e3	75 7c		 jne	 SHORT $L131193
$L131220:

; 1860 : 	COLUMN_ENTRY(m_item.m_dwExtValue[2])

  002e5	8d 86 80 0c 00
	00		 lea	 eax, DWORD PTR [esi+3200]
  002eb	50		 push	 eax
  002ec	6a 19		 push	 25			; 00000019H
  002ee	8b ce		 mov	 ecx, esi
  002f0	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  002f5	66 85 c0	 test	 ax, ax
  002f8	74 06		 je	 SHORT $L131221
  002fa	66 3d 01 00	 cmp	 ax, 1
  002fe	75 61		 jne	 SHORT $L131193
$L131221:

; 1861 : 	COLUMN_ENTRY(m_item.m_dwExtValue[3])

  00300	8d 8e 84 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3204]
  00306	51		 push	 ecx
  00307	6a 1a		 push	 26			; 0000001aH
  00309	8b ce		 mov	 ecx, esi
  0030b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00310	66 85 c0	 test	 ax, ax
  00313	74 06		 je	 SHORT $L131222
  00315	66 3d 01 00	 cmp	 ax, 1
  00319	75 46		 jne	 SHORT $L131193
$L131222:

; 1862 : 	COLUMN_ENTRY(m_item.m_dwExtValue[4])

  0031b	8d 96 88 0c 00
	00		 lea	 edx, DWORD PTR [esi+3208]
  00321	52		 push	 edx
  00322	6a 1b		 push	 27			; 0000001bH
  00324	8b ce		 mov	 ecx, esi
  00326	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0032b	66 85 c0	 test	 ax, ax
  0032e	74 06		 je	 SHORT $L131223
  00330	66 3d 01 00	 cmp	 ax, 1
  00334	75 2b		 jne	 SHORT $L131193
$L131223:

; 1863 : 	COLUMN_ENTRY(m_item.m_dwExtValue[5])

  00336	8d 86 8c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3212]
  0033c	50		 push	 eax
  0033d	6a 1c		 push	 28			; 0000001cH
  0033f	8b ce		 mov	 ecx, esi
  00341	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00346	66 85 c0	 test	 ax, ax
  00349	74 06		 je	 SHORT $L131224
  0034b	66 3d 01 00	 cmp	 ax, 1
  0034f	75 10		 jne	 SHORT $L131193
$L131224:

; 1864 : 	COLUMN_ENTRY(m_dwMoney)

  00351	8d 8e 90 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3216]
  00357	51		 push	 ecx
  00358	6a 1d		 push	 29			; 0000001dH
  0035a	8b ce		 mov	 ecx, esi
  0035c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L131193:
  00361	5e		 pop	 esi

; 1865 : END_COL()

  00362	c3		 ret	 0
?BindColumns@CTBLQuestMagicItemChart@@UAEFXZ ENDP	; CTBLQuestMagicItemChart::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLQuestMagicItemChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLQuestMagicItemChart@@UAEHXZ PROC NEAR	; CTBLQuestMagicItemChart::GetNumParam, COMDAT
; _this$ = ecx

; 1867 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLQuestMagicItemChart@@UAEHXZ ENDP	; CTBLQuestMagicItemChart::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLQuestMagicItemChart@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLQuestMagicItemChart@@UAEFH@Z PROC NEAR ; CTBLQuestMagicItemChart::BindParameters, COMDAT
; _this$ = ecx

; 1868 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwRewardID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L131230
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L131230:

; 1869 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLQuestMagicItemChart@@UAEFH@Z ENDP	; CTBLQuestMagicItemChart::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLQuestMagicItemChart@@UAE@XZ		; CTBLQuestMagicItemChart::~CTBLQuestMagicItemChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLQuestMagicItemChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLQuestMagicItemChart@@UAEPAXI@Z PROC NEAR	; CTBLQuestMagicItemChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLQuestMagicItemChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L164564
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L164564:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLQuestMagicItemChart@@UAEPAXI@Z ENDP		; CTBLQuestMagicItemChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLQuestMagicItemChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLQuestMagicItemChart@@UAE@XZ PROC NEAR		; CTBLQuestMagicItemChart::~CTBLQuestMagicItemChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLQuestMagicItemChart@@UAE@XZ ENDP			; CTBLQuestMagicItemChart::~CTBLQuestMagicItemChart
_TEXT	ENDS
PUBLIC	??0CTBLQuestTermChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLQuestTermChart::CTBLQuestTermChart
PUBLIC	?GetNumCol@CTBLQuestTermChart@@UAEHXZ		; CTBLQuestTermChart::GetNumCol
PUBLIC	?BindColumns@CTBLQuestTermChart@@UAEFXZ		; CTBLQuestTermChart::BindColumns
PUBLIC	?GetNumParam@CTBLQuestTermChart@@UAEHXZ		; CTBLQuestTermChart::GetNumParam
PUBLIC	?BindParameters@CTBLQuestTermChart@@UAEFH@Z	; CTBLQuestTermChart::BindParameters
PUBLIC	??_7CTBLQuestTermChart@@6B@			; CTBLQuestTermChart::`vftable'
PUBLIC	??_GCTBLQuestTermChart@@UAEPAXI@Z		; CTBLQuestTermChart::`scalar deleting destructor'
PUBLIC	??_C@_0GO@DBOJCJCG@SELECT?5?7dwTermID?0?5?7bTermType?0?5?7b@ ; `string'
EXTRN	??_ECTBLQuestTermChart@@UAEPAXI@Z:NEAR		; CTBLQuestTermChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T164747 DD	0ffffffffH
	DD	FLAT:$L164573
$T164744 DD	019930520H
	DD	01H
	DD	FLAT:$T164747
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0GO@DBOJCJCG@SELECT?5?7dwTermID?0?5?7bTermType?0?5?7b@
CONST	SEGMENT
??_C@_0GO@DBOJCJCG@SELECT?5?7dwTermID?0?5?7bTermType?0?5?7b@ DB 'SELECT ', 09H
	DB	'dwTermID, ', 09H, 'bTermType, ', 09H, 'bCount ', 09H, 'FROM T'
	DB	'QUESTTERMCHART ', 09H, 'WITH (NOLOCK) ', 09H, 'WHERE dwQuestI'
	DB	'D = ? ORDER BY dwID', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CTBLQuestTermChart@@6B@
CONST	SEGMENT
??_7CTBLQuestTermChart@@6B@ DD FLAT:??_ECTBLQuestTermChart@@UAEPAXI@Z ; CTBLQuestTermChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLQuestTermChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLQuestTermChart@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLQuestTermChart@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLQuestTermChart@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLQuestTermChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T164572 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLQuestTermChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLQuestTermChart::CTBLQuestTermChart, COMDAT
; _this$ = ecx

; 1887 : 	WHERE dwQuestID = ? ORDER BY dwID"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLQuestTermChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0GO@DBOJCJCG@SELECT?5?7dwTermID?0?5?7bTermType?0?5?7b@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T164572[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLQuestTermChart@@6B@
  0005e	72 0d		 jb	 SHORT $L164745
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L164745:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L164573:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLQuestTermChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T164744
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLQuestTermChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLQuestTermChart::CTBLQuestTermChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLQuestTermChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLQuestTermChart@@UAEHXZ PROC NEAR		; CTBLQuestTermChart::GetNumCol, COMDAT
; _this$ = ecx

; 1889 : BEGIN_COLUMN(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumCol@CTBLQuestTermChart@@UAEHXZ ENDP		; CTBLQuestTermChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLQuestTermChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLQuestTermChart@@UAEFXZ PROC NEAR	; CTBLQuestTermChart::BindColumns, COMDAT
; _this$ = ecx

; 1889 : BEGIN_COLUMN(3)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1890 : 	COLUMN_ENTRY(m_dwTermID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L131282
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 2b		 jne	 SHORT $L131278
$L131282:

; 1891 : 	COLUMN_ENTRY(m_bTermType)

  0001c	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L131283
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 10		 jne	 SHORT $L131278
$L131283:

; 1892 : 	COLUMN_ENTRY(m_bCount)

  00037	8d 96 35 0c 00
	00		 lea	 edx, DWORD PTR [esi+3125]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L131278:
  00047	5e		 pop	 esi

; 1893 : END_COL()

  00048	c3		 ret	 0
?BindColumns@CTBLQuestTermChart@@UAEFXZ ENDP		; CTBLQuestTermChart::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLQuestTermChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLQuestTermChart@@UAEHXZ PROC NEAR	; CTBLQuestTermChart::GetNumParam, COMDAT
; _this$ = ecx

; 1895 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLQuestTermChart@@UAEHXZ ENDP		; CTBLQuestTermChart::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLQuestTermChart@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLQuestTermChart@@UAEFH@Z PROC NEAR	; CTBLQuestTermChart::BindParameters, COMDAT
; _this$ = ecx

; 1896 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwQuestID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L131289
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L131289:

; 1897 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLQuestTermChart@@UAEFH@Z ENDP	; CTBLQuestTermChart::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLQuestTermChart@@UAE@XZ			; CTBLQuestTermChart::~CTBLQuestTermChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLQuestTermChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLQuestTermChart@@UAEPAXI@Z PROC NEAR		; CTBLQuestTermChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLQuestTermChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L164765
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L164765:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLQuestTermChart@@UAEPAXI@Z ENDP			; CTBLQuestTermChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLQuestTermChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLQuestTermChart@@UAE@XZ PROC NEAR			; CTBLQuestTermChart::~CTBLQuestTermChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLQuestTermChart@@UAE@XZ ENDP			; CTBLQuestTermChart::~CTBLQuestTermChart
_TEXT	ENDS
PUBLIC	??0CTBLQuestTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLQuestTable::CTBLQuestTable
PUBLIC	?GetNumCol@CTBLQuestTable@@UAEHXZ		; CTBLQuestTable::GetNumCol
PUBLIC	?BindColumns@CTBLQuestTable@@UAEFXZ		; CTBLQuestTable::BindColumns
PUBLIC	?GetNumParam@CTBLQuestTable@@UAEHXZ		; CTBLQuestTable::GetNumParam
PUBLIC	?BindParameters@CTBLQuestTable@@UAEFH@Z		; CTBLQuestTable::BindParameters
PUBLIC	??_7CTBLQuestTable@@6B@				; CTBLQuestTable::`vftable'
PUBLIC	??_GCTBLQuestTable@@UAEPAXI@Z			; CTBLQuestTable::`scalar deleting destructor'
PUBLIC	??_C@_0GC@BINMAAHP@SELECT?5?7dwQuestID?0?5?7dwTick?0?5?7bCo@ ; `string'
EXTRN	??_ECTBLQuestTable@@UAEPAXI@Z:NEAR		; CTBLQuestTable::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T164948 DD	0ffffffffH
	DD	FLAT:$L164774
$T164945 DD	019930520H
	DD	01H
	DD	FLAT:$T164948
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0GC@BINMAAHP@SELECT?5?7dwQuestID?0?5?7dwTick?0?5?7bCo@
CONST	SEGMENT
??_C@_0GC@BINMAAHP@SELECT?5?7dwQuestID?0?5?7dwTick?0?5?7bCo@ DB 'SELECT ', 09H
	DB	'dwQuestID, ', 09H, 'dwTick, ', 09H, 'bCompleteCount, ', 09H, 'b'
	DB	'TriggerCount ', 09H, 'FROM TQUESTTABLE ', 09H, 'WHERE dwCharI'
	DB	'D = ?', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7CTBLQuestTable@@6B@
CONST	SEGMENT
??_7CTBLQuestTable@@6B@ DD FLAT:??_ECTBLQuestTable@@UAEPAXI@Z ; CTBLQuestTable::`vftable'
	DD	FLAT:?GetNumCol@CTBLQuestTable@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLQuestTable@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLQuestTable@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLQuestTable@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLQuestTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T164773 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLQuestTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLQuestTable::CTBLQuestTable, COMDAT
; _this$ = ecx

; 1916 : 	WHERE dwCharID = ?"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLQuestTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0GC@BINMAAHP@SELECT?5?7dwQuestID?0?5?7dwTick?0?5?7bCo@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T164773[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLQuestTable@@6B@
  0005e	72 0d		 jb	 SHORT $L164946
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L164946:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L164774:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLQuestTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T164945
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLQuestTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLQuestTable::CTBLQuestTable
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLQuestTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLQuestTable@@UAEHXZ PROC NEAR		; CTBLQuestTable::GetNumCol, COMDAT
; _this$ = ecx

; 1918 : BEGIN_COLUMN(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumCol@CTBLQuestTable@@UAEHXZ ENDP			; CTBLQuestTable::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLQuestTable@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLQuestTable@@UAEFXZ PROC NEAR		; CTBLQuestTable::BindColumns, COMDAT
; _this$ = ecx

; 1918 : BEGIN_COLUMN(4)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1919 : 	COLUMN_ENTRY(m_dwQuestID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L131342
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 46		 jne	 SHORT $L131338
$L131342:

; 1920 : 	COLUMN_ENTRY(m_dwTick)

  0001c	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L131343
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 2b		 jne	 SHORT $L131338
$L131343:

; 1921 : 	COLUMN_ENTRY(m_bCompleteCount)

  00037	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L131344
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 10		 jne	 SHORT $L131338
$L131344:

; 1922 : 	COLUMN_ENTRY(m_bTriggerCount)

  00052	8d 86 39 0c 00
	00		 lea	 eax, DWORD PTR [esi+3129]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L131338:
  00062	5e		 pop	 esi

; 1923 : END_COL()

  00063	c3		 ret	 0
?BindColumns@CTBLQuestTable@@UAEFXZ ENDP		; CTBLQuestTable::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLQuestTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLQuestTable@@UAEHXZ PROC NEAR		; CTBLQuestTable::GetNumParam, COMDAT
; _this$ = ecx

; 1925 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLQuestTable@@UAEHXZ ENDP		; CTBLQuestTable::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLQuestTable@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLQuestTable@@UAEFH@Z PROC NEAR	; CTBLQuestTable::BindParameters, COMDAT
; _this$ = ecx

; 1926 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L131350
  00010	8d 81 30 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3120]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L131350:

; 1927 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLQuestTable@@UAEFH@Z ENDP		; CTBLQuestTable::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLQuestTable@@UAE@XZ			; CTBLQuestTable::~CTBLQuestTable
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLQuestTable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLQuestTable@@UAEPAXI@Z PROC NEAR			; CTBLQuestTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLQuestTable@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L164966
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L164966:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLQuestTable@@UAEPAXI@Z ENDP			; CTBLQuestTable::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLQuestTable@@UAE@XZ
_TEXT	SEGMENT
??1CTBLQuestTable@@UAE@XZ PROC NEAR			; CTBLQuestTable::~CTBLQuestTable, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLQuestTable@@UAE@XZ ENDP				; CTBLQuestTable::~CTBLQuestTable
_TEXT	ENDS
PUBLIC	??0CTBLQuestTermTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLQuestTermTable::CTBLQuestTermTable
PUBLIC	?GetNumCol@CTBLQuestTermTable@@UAEHXZ		; CTBLQuestTermTable::GetNumCol
PUBLIC	?BindColumns@CTBLQuestTermTable@@UAEFXZ		; CTBLQuestTermTable::BindColumns
PUBLIC	?GetNumParam@CTBLQuestTermTable@@UAEHXZ		; CTBLQuestTermTable::GetNumParam
PUBLIC	?BindParameters@CTBLQuestTermTable@@UAEFH@Z	; CTBLQuestTermTable::BindParameters
PUBLIC	??_7CTBLQuestTermTable@@6B@			; CTBLQuestTermTable::`vftable'
PUBLIC	??_GCTBLQuestTermTable@@UAEPAXI@Z		; CTBLQuestTermTable::`scalar deleting destructor'
PUBLIC	??_C@_0FM@BKNNEPPJ@SELECT?5?7dwQuestID?0?5?7dwTermID?0?5?7b@ ; `string'
EXTRN	??_ECTBLQuestTermTable@@UAEPAXI@Z:NEAR		; CTBLQuestTermTable::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T165149 DD	0ffffffffH
	DD	FLAT:$L164975
$T165146 DD	019930520H
	DD	01H
	DD	FLAT:$T165149
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FM@BKNNEPPJ@SELECT?5?7dwQuestID?0?5?7dwTermID?0?5?7b@
CONST	SEGMENT
??_C@_0FM@BKNNEPPJ@SELECT?5?7dwQuestID?0?5?7dwTermID?0?5?7b@ DB 'SELECT ', 09H
	DB	'dwQuestID, ', 09H, 'dwTermID, ', 09H, 'bTermType, ', 09H, 'bC'
	DB	'ount ', 09H, 'FROM TQUESTTERMTABLE ', 09H, 'WHERE dwCharID = '
	DB	'?', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7CTBLQuestTermTable@@6B@
CONST	SEGMENT
??_7CTBLQuestTermTable@@6B@ DD FLAT:??_ECTBLQuestTermTable@@UAEPAXI@Z ; CTBLQuestTermTable::`vftable'
	DD	FLAT:?GetNumCol@CTBLQuestTermTable@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLQuestTermTable@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLQuestTermTable@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLQuestTermTable@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLQuestTermTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T164974 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLQuestTermTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLQuestTermTable::CTBLQuestTermTable, COMDAT
; _this$ = ecx

; 1946 : 	WHERE dwCharID = ?"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLQuestTermTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FM@BKNNEPPJ@SELECT?5?7dwQuestID?0?5?7dwTermID?0?5?7b@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T164974[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLQuestTermTable@@6B@
  0005e	72 0d		 jb	 SHORT $L165147
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L165147:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L164975:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLQuestTermTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T165146
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLQuestTermTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLQuestTermTable::CTBLQuestTermTable
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLQuestTermTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLQuestTermTable@@UAEHXZ PROC NEAR		; CTBLQuestTermTable::GetNumCol, COMDAT
; _this$ = ecx

; 1948 : BEGIN_COLUMN(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumCol@CTBLQuestTermTable@@UAEHXZ ENDP		; CTBLQuestTermTable::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLQuestTermTable@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLQuestTermTable@@UAEFXZ PROC NEAR	; CTBLQuestTermTable::BindColumns, COMDAT
; _this$ = ecx

; 1948 : BEGIN_COLUMN(4)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1949 : 	COLUMN_ENTRY(m_dwQuestID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L131403
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 46		 jne	 SHORT $L131399
$L131403:

; 1950 : 	COLUMN_ENTRY(m_dwTermID)

  0001c	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L131404
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 2b		 jne	 SHORT $L131399
$L131404:

; 1951 : 	COLUMN_ENTRY(m_bTermType)

  00037	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L131405
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 10		 jne	 SHORT $L131399
$L131405:

; 1952 : 	COLUMN_ENTRY(m_bCount)

  00052	8d 86 39 0c 00
	00		 lea	 eax, DWORD PTR [esi+3129]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L131399:
  00062	5e		 pop	 esi

; 1953 : END_COL()

  00063	c3		 ret	 0
?BindColumns@CTBLQuestTermTable@@UAEFXZ ENDP		; CTBLQuestTermTable::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLQuestTermTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLQuestTermTable@@UAEHXZ PROC NEAR	; CTBLQuestTermTable::GetNumParam, COMDAT
; _this$ = ecx

; 1955 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLQuestTermTable@@UAEHXZ ENDP		; CTBLQuestTermTable::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLQuestTermTable@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLQuestTermTable@@UAEFH@Z PROC NEAR	; CTBLQuestTermTable::BindParameters, COMDAT
; _this$ = ecx

; 1956 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L131411
  00010	8d 81 30 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3120]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L131411:

; 1957 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLQuestTermTable@@UAEFH@Z ENDP	; CTBLQuestTermTable::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLQuestTermTable@@UAE@XZ			; CTBLQuestTermTable::~CTBLQuestTermTable
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLQuestTermTable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLQuestTermTable@@UAEPAXI@Z PROC NEAR		; CTBLQuestTermTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLQuestTermTable@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L165167
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L165167:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLQuestTermTable@@UAEPAXI@Z ENDP			; CTBLQuestTermTable::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLQuestTermTable@@UAE@XZ
_TEXT	SEGMENT
??1CTBLQuestTermTable@@UAE@XZ PROC NEAR			; CTBLQuestTermTable::~CTBLQuestTermTable, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLQuestTermTable@@UAE@XZ ENDP			; CTBLQuestTermTable::~CTBLQuestTermTable
_TEXT	ENDS
PUBLIC	??0CTBLSpawnPos@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSpawnPos::CTBLSpawnPos
PUBLIC	?GetNumCol@CTBLSpawnPos@@UAEHXZ			; CTBLSpawnPos::GetNumCol
PUBLIC	?BindColumns@CTBLSpawnPos@@UAEFXZ		; CTBLSpawnPos::BindColumns
PUBLIC	??_7CTBLSpawnPos@@6B@				; CTBLSpawnPos::`vftable'
PUBLIC	??_GCTBLSpawnPos@@UAEPAXI@Z			; CTBLSpawnPos::`scalar deleting destructor'
PUBLIC	??_C@_0EK@JEJOMDKE@SELECT?5?7wID?0?5?7wMapID?0?5?7fPosX?0?5?7f@ ; `string'
EXTRN	??_ECTBLSpawnPos@@UAEPAXI@Z:NEAR		; CTBLSpawnPos::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T165350 DD	0ffffffffH
	DD	FLAT:$L165176
$T165347 DD	019930520H
	DD	01H
	DD	FLAT:$T165350
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EK@JEJOMDKE@SELECT?5?7wID?0?5?7wMapID?0?5?7fPosX?0?5?7f@
CONST	SEGMENT
??_C@_0EK@JEJOMDKE@SELECT?5?7wID?0?5?7wMapID?0?5?7fPosX?0?5?7f@ DB 'SELEC'
	DB	'T ', 09H, 'wID, ', 09H, 'wMapID, ', 09H, 'fPosX, ', 09H, 'fPo'
	DB	'sY, ', 09H, 'fPosZ, ', 09H, 'bType ', 09H, 'FROM TSPAWNPOSCHA'
	DB	'RT', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7CTBLSpawnPos@@6B@
CONST	SEGMENT
??_7CTBLSpawnPos@@6B@ DD FLAT:??_ECTBLSpawnPos@@UAEPAXI@Z ; CTBLSpawnPos::`vftable'
	DD	FLAT:?GetNumCol@CTBLSpawnPos@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLSpawnPos@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLSpawnPos@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T165175 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLSpawnPos@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLSpawnPos::CTBLSpawnPos, COMDAT
; _this$ = ecx

; 1977 : 	FROM TSPAWNPOSCHART"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLSpawnPos@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EK@JEJOMDKE@SELECT?5?7wID?0?5?7wMapID?0?5?7fPosX?0?5?7f@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T165175[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLSpawnPos@@6B@
  0005e	72 0d		 jb	 SHORT $L165348
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L165348:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L165176:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLSpawnPos@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T165347
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLSpawnPos@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLSpawnPos::CTBLSpawnPos
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLSpawnPos@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLSpawnPos@@UAEHXZ PROC NEAR		; CTBLSpawnPos::GetNumCol, COMDAT
; _this$ = ecx

; 1979 : BEGIN_COLUMN(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumCol@CTBLSpawnPos@@UAEHXZ ENDP			; CTBLSpawnPos::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSpawnPos@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLSpawnPos@@UAEFXZ PROC NEAR		; CTBLSpawnPos::BindColumns, COMDAT
; _this$ = ecx

; 1979 : BEGIN_COLUMN(6)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1980 : 	COLUMN_ENTRY(m_wID)

  00003	8d 86 2e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3118]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L131462
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 7c		 jne	 SHORT $L131458
$L131462:

; 1981 : 	COLUMN_ENTRY(m_wMapID)

  0001c	8d 8e 2c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3116]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L131463
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 61		 jne	 SHORT $L131458
$L131463:

; 1982 : 	COLUMN_ENTRY(m_fPosX)

  00037	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L131464
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 46		 jne	 SHORT $L131458
$L131464:

; 1983 : 	COLUMN_ENTRY(m_fPosY)

  00052	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  00062	66 85 c0	 test	 ax, ax
  00065	74 06		 je	 SHORT $L131465
  00067	66 3d 01 00	 cmp	 ax, 1
  0006b	75 2b		 jne	 SHORT $L131458
$L131465:

; 1984 : 	COLUMN_ENTRY(m_fPosZ)

  0006d	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  00073	51		 push	 ecx
  00074	6a 05		 push	 5
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  0007d	66 85 c0	 test	 ax, ax
  00080	74 06		 je	 SHORT $L131466
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 10		 jne	 SHORT $L131458
$L131466:

; 1985 : 	COLUMN_ENTRY(m_bType)

  00088	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  0008e	52		 push	 edx
  0008f	6a 06		 push	 6
  00091	8b ce		 mov	 ecx, esi
  00093	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L131458:
  00098	5e		 pop	 esi

; 1986 : END_COL()

  00099	c3		 ret	 0
?BindColumns@CTBLSpawnPos@@UAEFXZ ENDP			; CTBLSpawnPos::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLSpawnPos@@UAE@XZ				; CTBLSpawnPos::~CTBLSpawnPos
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLSpawnPos@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLSpawnPos@@UAEPAXI@Z PROC NEAR			; CTBLSpawnPos::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLSpawnPos@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L165362
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L165362:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLSpawnPos@@UAEPAXI@Z ENDP			; CTBLSpawnPos::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLSpawnPos@@UAE@XZ
_TEXT	SEGMENT
??1CTBLSpawnPos@@UAE@XZ PROC NEAR			; CTBLSpawnPos::~CTBLSpawnPos, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLSpawnPos@@UAE@XZ ENDP				; CTBLSpawnPos::~CTBLSpawnPos
_TEXT	ENDS
PUBLIC	??0CTBLIndunChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLIndunChart::CTBLIndunChart
PUBLIC	?GetNumCol@CTBLIndunChart@@UAEHXZ		; CTBLIndunChart::GetNumCol
PUBLIC	?BindColumns@CTBLIndunChart@@UAEFXZ		; CTBLIndunChart::BindColumns
PUBLIC	??_7CTBLIndunChart@@6B@				; CTBLIndunChart::`vftable'
PUBLIC	??_GCTBLIndunChart@@UAEPAXI@Z			; CTBLIndunChart::`scalar deleting destructor'
PUBLIC	??_C@_0ED@KOMKBDMH@SELECT?5wMapID?0?5wInSpawn?0?5wOutSpa@ ; `string'
EXTRN	??_ECTBLIndunChart@@UAEPAXI@Z:NEAR		; CTBLIndunChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T165545 DD	0ffffffffH
	DD	FLAT:$L165371
$T165542 DD	019930520H
	DD	01H
	DD	FLAT:$T165545
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0ED@KOMKBDMH@SELECT?5wMapID?0?5wInSpawn?0?5wOutSpa@
CONST	SEGMENT
??_C@_0ED@KOMKBDMH@SELECT?5wMapID?0?5wInSpawn?0?5wOutSpa@ DB 'SELECT wMap'
	DB	'ID, wInSpawn, wOutSpawn_D, wOutSpawn_C FROM TINDUNCHART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLIndunChart@@6B@
CONST	SEGMENT
??_7CTBLIndunChart@@6B@ DD FLAT:??_ECTBLIndunChart@@UAEPAXI@Z ; CTBLIndunChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLIndunChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLIndunChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLIndunChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T165370 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLIndunChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLIndunChart::CTBLIndunChart, COMDAT
; _this$ = ecx

; 1996 : DEF_QUERY( CTBLIndunChart, _T("SELECT wMapID, wInSpawn, wOutSpawn_D, wOutSpawn_C FROM TINDUNCHART"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLIndunChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0ED@KOMKBDMH@SELECT?5wMapID?0?5wInSpawn?0?5wOutSpa@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T165370[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLIndunChart@@6B@
  0005e	72 0d		 jb	 SHORT $L165543
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L165543:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L165371:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLIndunChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T165542
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLIndunChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLIndunChart::CTBLIndunChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLIndunChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLIndunChart@@UAEHXZ PROC NEAR		; CTBLIndunChart::GetNumCol, COMDAT
; _this$ = ecx

; 1998 : BEGIN_COLUMN(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumCol@CTBLIndunChart@@UAEHXZ ENDP			; CTBLIndunChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLIndunChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLIndunChart@@UAEFXZ PROC NEAR		; CTBLIndunChart::BindColumns, COMDAT
; _this$ = ecx

; 1998 : BEGIN_COLUMN(4)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1999 : 	COLUMN_ENTRY(m_wID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L131511
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 46		 jne	 SHORT $L131507
$L131511:

; 2000 : 	COLUMN_ENTRY(m_wInSpawn)

  0001c	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L131512
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 2b		 jne	 SHORT $L131507
$L131512:

; 2001 : 	COLUMN_ENTRY(m_wOutSpawn_D)

  00037	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L131513
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 10		 jne	 SHORT $L131507
$L131513:

; 2002 : 	COLUMN_ENTRY(m_wOutSpawn_C)

  00052	8d 86 32 0c 00
	00		 lea	 eax, DWORD PTR [esi+3122]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
$L131507:
  00062	5e		 pop	 esi

; 2003 : END_COL()

  00063	c3		 ret	 0
?BindColumns@CTBLIndunChart@@UAEFXZ ENDP		; CTBLIndunChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLIndunChart@@UAE@XZ			; CTBLIndunChart::~CTBLIndunChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLIndunChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLIndunChart@@UAEPAXI@Z PROC NEAR			; CTBLIndunChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLIndunChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L165557
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L165557:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLIndunChart@@UAEPAXI@Z ENDP			; CTBLIndunChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLIndunChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLIndunChart@@UAE@XZ PROC NEAR			; CTBLIndunChart::~CTBLIndunChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLIndunChart@@UAE@XZ ENDP				; CTBLIndunChart::~CTBLIndunChart
_TEXT	ENDS
PUBLIC	??0CTBLNpc@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLNpc::CTBLNpc
PUBLIC	?GetNumCol@CTBLNpc@@UAEHXZ			; CTBLNpc::GetNumCol
PUBLIC	?BindColumns@CTBLNpc@@UAEFXZ			; CTBLNpc::BindColumns
PUBLIC	??_7CTBLNpc@@6B@				; CTBLNpc::`vftable'
PUBLIC	??_GCTBLNpc@@UAEPAXI@Z				; CTBLNpc::`scalar deleting destructor'
PUBLIC	??_C@_0IP@JKFLCDC@SELECT?5?7wID?0?5?7bType?0?5?7bCountryID@ ; `string'
EXTRN	??_ECTBLNpc@@UAEPAXI@Z:NEAR			; CTBLNpc::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T165740 DD	0ffffffffH
	DD	FLAT:$L165566
$T165737 DD	019930520H
	DD	01H
	DD	FLAT:$T165740
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0IP@JKFLCDC@SELECT?5?7wID?0?5?7bType?0?5?7bCountryID@
CONST	SEGMENT
??_C@_0IP@JKFLCDC@SELECT?5?7wID?0?5?7bType?0?5?7bCountryID@ DB 'SELECT ', 09H
	DB	'wID, ', 09H, 'bType, ', 09H, 'bCountryID, ', 09H, 'wLocalID, '
	DB	09H, 'bCondition, ', 09H, 'bDiscountRate, ', 09H, 'bAddProb, ', 09H
	DB	'wItemID, ', 09H, 'wMapID, ', 09H, 'fPosX, ', 09H, 'fPosY, ', 09H
	DB	'fPosZ ', 09H, 'FROM TNPCCHART', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CTBLNpc@@6B@
CONST	SEGMENT
??_7CTBLNpc@@6B@ DD FLAT:??_ECTBLNpc@@UAEPAXI@Z		; CTBLNpc::`vftable'
	DD	FLAT:?GetNumCol@CTBLNpc@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLNpc@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLNpc@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T165565 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLNpc@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLNpc::CTBLNpc, COMDAT
; _this$ = ecx

; 2034 : 	FROM TNPCCHART"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLNpc@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0IP@JKFLCDC@SELECT?5?7wID?0?5?7bType?0?5?7bCountryID@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T165565[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLNpc@@6B@
  0005e	72 0d		 jb	 SHORT $L165738
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L165738:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L165566:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLNpc@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T165737
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLNpc@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLNpc::CTBLNpc
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLNpc@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLNpc@@UAEHXZ PROC NEAR			; CTBLNpc::GetNumCol, COMDAT
; _this$ = ecx

; 2036 : BEGIN_COLUMN(12)

  00000	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00005	c3		 ret	 0
?GetNumCol@CTBLNpc@@UAEHXZ ENDP				; CTBLNpc::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLNpc@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLNpc@@UAEFXZ PROC NEAR			; CTBLNpc::BindColumns, COMDAT
; _this$ = ecx

; 2036 : BEGIN_COLUMN(12)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2037 : 	COLUMN_ENTRY(m_wID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L131566
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 32 01 00
	00		 jne	 $L131562
$L131566:

; 2038 : 	COLUMN_ENTRY(m_bType)

  00020	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L131567
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 13 01 00
	00		 jne	 $L131562
$L131567:

; 2039 : 	COLUMN_ENTRY(m_bCountry)

  0003f	8d 96 2f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3119]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L131568
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 f4 00 00
	00		 jne	 $L131562
$L131568:

; 2040 : 	COLUMN_ENTRY(m_wLocalID)

  0005e	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L131569
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 d5 00 00
	00		 jne	 $L131562
$L131569:

; 2041 : 	COLUMN_ENTRY(m_bDiscountCondition)

  0007d	8d 8e 32 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3122]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L131570
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 b6 00 00
	00		 jne	 $L131562
$L131570:

; 2042 : 	COLUMN_ENTRY(m_bDiscountRate)

  0009c	8d 96 33 0c 00
	00		 lea	 edx, DWORD PTR [esi+3123]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L131571
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 97 00 00
	00		 jne	 $L131562
$L131571:

; 2043 : 	COLUMN_ENTRY(m_bAddProb)

  000bb	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 06		 je	 SHORT $L131572
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	75 7c		 jne	 SHORT $L131562
$L131572:

; 2044 : 	COLUMN_ENTRY(m_wItemID)

  000d6	8d 8e 36 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3126]
  000dc	51		 push	 ecx
  000dd	6a 08		 push	 8
  000df	8b ce		 mov	 ecx, esi
  000e1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000e6	66 85 c0	 test	 ax, ax
  000e9	74 06		 je	 SHORT $L131573
  000eb	66 3d 01 00	 cmp	 ax, 1
  000ef	75 61		 jne	 SHORT $L131562
$L131573:

; 2045 : 	COLUMN_ENTRY(m_wMapID)

  000f1	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  000f7	52		 push	 edx
  000f8	6a 09		 push	 9
  000fa	8b ce		 mov	 ecx, esi
  000fc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00101	66 85 c0	 test	 ax, ax
  00104	74 06		 je	 SHORT $L131574
  00106	66 3d 01 00	 cmp	 ax, 1
  0010a	75 46		 jne	 SHORT $L131562
$L131574:

; 2046 : 	COLUMN_ENTRY(m_fPosX)

  0010c	8d 86 3c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3132]
  00112	50		 push	 eax
  00113	6a 0a		 push	 10			; 0000000aH
  00115	8b ce		 mov	 ecx, esi
  00117	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  0011c	66 85 c0	 test	 ax, ax
  0011f	74 06		 je	 SHORT $L131575
  00121	66 3d 01 00	 cmp	 ax, 1
  00125	75 2b		 jne	 SHORT $L131562
$L131575:

; 2047 : 	COLUMN_ENTRY(m_fPosY)

  00127	8d 8e 40 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3136]
  0012d	51		 push	 ecx
  0012e	6a 0b		 push	 11			; 0000000bH
  00130	8b ce		 mov	 ecx, esi
  00132	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  00137	66 85 c0	 test	 ax, ax
  0013a	74 06		 je	 SHORT $L131576
  0013c	66 3d 01 00	 cmp	 ax, 1
  00140	75 10		 jne	 SHORT $L131562
$L131576:

; 2048 : 	COLUMN_ENTRY(m_fPosZ)

  00142	8d 96 44 0c 00
	00		 lea	 edx, DWORD PTR [esi+3140]
  00148	52		 push	 edx
  00149	6a 0c		 push	 12			; 0000000cH
  0014b	8b ce		 mov	 ecx, esi
  0014d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
$L131562:
  00152	5e		 pop	 esi

; 2049 : END_COL()

  00153	c3		 ret	 0
?BindColumns@CTBLNpc@@UAEFXZ ENDP			; CTBLNpc::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLNpc@@UAE@XZ				; CTBLNpc::~CTBLNpc
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLNpc@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLNpc@@UAEPAXI@Z PROC NEAR			; CTBLNpc::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLNpc@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L165752
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L165752:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLNpc@@UAEPAXI@Z ENDP				; CTBLNpc::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLNpc@@UAE@XZ
_TEXT	SEGMENT
??1CTBLNpc@@UAE@XZ PROC NEAR				; CTBLNpc::~CTBLNpc, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLNpc@@UAE@XZ ENDP					; CTBLNpc::~CTBLNpc
_TEXT	ENDS
PUBLIC	??0CTBLNpcItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLNpcItem::CTBLNpcItem
PUBLIC	?GetNumCol@CTBLNpcItem@@UAEHXZ			; CTBLNpcItem::GetNumCol
PUBLIC	?BindColumns@CTBLNpcItem@@UAEFXZ		; CTBLNpcItem::BindColumns
PUBLIC	?GetNumParam@CTBLNpcItem@@UAEHXZ		; CTBLNpcItem::GetNumParam
PUBLIC	?BindParameters@CTBLNpcItem@@UAEFH@Z		; CTBLNpcItem::BindParameters
PUBLIC	??_7CTBLNpcItem@@6B@				; CTBLNpcItem::`vftable'
PUBLIC	??_GCTBLNpcItem@@UAEPAXI@Z			; CTBLNpcItem::`scalar deleting destructor'
PUBLIC	??_C@_0DF@MJGBFCJJ@SELECT?5?7dwItemID?5?7FROM?5TNPCITEMC@ ; `string'
EXTRN	??_ECTBLNpcItem@@UAEPAXI@Z:NEAR			; CTBLNpcItem::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T165935 DD	0ffffffffH
	DD	FLAT:$L165761
$T165932 DD	019930520H
	DD	01H
	DD	FLAT:$T165935
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DF@MJGBFCJJ@SELECT?5?7dwItemID?5?7FROM?5TNPCITEMC@
CONST	SEGMENT
??_C@_0DF@MJGBFCJJ@SELECT?5?7dwItemID?5?7FROM?5TNPCITEMC@ DB 'SELECT ', 09H
	DB	'dwItemID ', 09H, 'FROM TNPCITEMCHART ', 09H, 'WHERE wNpcID=?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLNpcItem@@6B@
CONST	SEGMENT
??_7CTBLNpcItem@@6B@ DD FLAT:??_ECTBLNpcItem@@UAEPAXI@Z	; CTBLNpcItem::`vftable'
	DD	FLAT:?GetNumCol@CTBLNpcItem@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLNpcItem@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLNpcItem@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLNpcItem@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLNpcItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T165760 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLNpcItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLNpcItem::CTBLNpcItem, COMDAT
; _this$ = ecx

; 2060 : 	WHERE wNpcID=?"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLNpcItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DF@MJGBFCJJ@SELECT?5?7dwItemID?5?7FROM?5TNPCITEMC@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T165760[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLNpcItem@@6B@
  0005e	72 0d		 jb	 SHORT $L165933
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L165933:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L165761:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLNpcItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T165932
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLNpcItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLNpcItem::CTBLNpcItem
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLNpcItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLNpcItem@@UAEHXZ PROC NEAR		; CTBLNpcItem::GetNumCol, COMDAT
; _this$ = ecx

; 2062 : BEGIN_COLUMN(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumCol@CTBLNpcItem@@UAEHXZ ENDP			; CTBLNpcItem::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLNpcItem@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLNpcItem@@UAEFXZ PROC NEAR		; CTBLNpcItem::BindColumns, COMDAT
; _this$ = ecx

; 2063 : 	COLUMN_ENTRY(m_dwItemID)

  00000	8d 81 30 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3120]
  00006	50		 push	 eax
  00007	6a 01		 push	 1
  00009	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol

; 2064 : END_COL()

  0000e	c3		 ret	 0
?BindColumns@CTBLNpcItem@@UAEFXZ ENDP			; CTBLNpcItem::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLNpcItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLNpcItem@@UAEHXZ PROC NEAR		; CTBLNpcItem::GetNumParam, COMDAT
; _this$ = ecx

; 2066 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLNpcItem@@UAEHXZ ENDP			; CTBLNpcItem::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLNpcItem@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLNpcItem@@UAEFH@Z PROC NEAR		; CTBLNpcItem::BindParameters, COMDAT
; _this$ = ecx

; 2067 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wNpcID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L131627
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L131627:

; 2068 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLNpcItem@@UAEFH@Z ENDP		; CTBLNpcItem::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLNpcItem@@UAE@XZ				; CTBLNpcItem::~CTBLNpcItem
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLNpcItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLNpcItem@@UAEPAXI@Z PROC NEAR			; CTBLNpcItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLNpcItem@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L165953
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L165953:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLNpcItem@@UAEPAXI@Z ENDP				; CTBLNpcItem::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLNpcItem@@UAE@XZ
_TEXT	SEGMENT
??1CTBLNpcItem@@UAE@XZ PROC NEAR			; CTBLNpcItem::~CTBLNpcItem, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLNpcItem@@UAE@XZ ENDP				; CTBLNpcItem::~CTBLNpcItem
_TEXT	ENDS
PUBLIC	??0CTBLMonItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonItem::CTBLMonItem
PUBLIC	?GetNumCol@CTBLMonItem@@UAEHXZ			; CTBLMonItem::GetNumCol
PUBLIC	?BindColumns@CTBLMonItem@@UAEFXZ		; CTBLMonItem::BindColumns
PUBLIC	?GetNumParam@CTBLMonItem@@UAEHXZ		; CTBLMonItem::GetNumParam
PUBLIC	?BindParameters@CTBLMonItem@@UAEFH@Z		; CTBLMonItem::BindParameters
PUBLIC	??_7CTBLMonItem@@6B@				; CTBLMonItem::`vftable'
PUBLIC	??_GCTBLMonItem@@UAEPAXI@Z			; CTBLMonItem::`scalar deleting destructor'
PUBLIC	??_C@_0BAE@PADFFDPL@SELECT?5?7bChartType?0?5?7wItemID?0?5?7w@ ; `string'
EXTRN	??_ECTBLMonItem@@UAEPAXI@Z:NEAR			; CTBLMonItem::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T166136 DD	0ffffffffH
	DD	FLAT:$L165962
$T166133 DD	019930520H
	DD	01H
	DD	FLAT:$T166136
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BAE@PADFFDPL@SELECT?5?7bChartType?0?5?7wItemID?0?5?7w@
CONST	SEGMENT
??_C@_0BAE@PADFFDPL@SELECT?5?7bChartType?0?5?7wItemID?0?5?7w@ DB 'SELECT '
	DB	09H, 'bChartType, ', 09H, 'wItemID, ', 09H, 'wItemIDMin, ', 09H
	DB	'wItemIDMax, ', 09H, 'wWeight, ', 09H, 'bLevelMin, ', 09H, 'bL'
	DB	'evelMax, ', 09H, 'bItemProb_N1, ', 09H, 'bItemProb_N2, ', 09H
	DB	'bItemProb_N3, ', 09H, 'bItemProb_N4, ', 09H, 'bItemProb_M, ', 09H
	DB	'bItemProb_S, ', 09H, 'bItemProb_R, ', 09H, 'bItemMagicOpt, ', 09H
	DB	'bItemRareOpt ', 09H, 'FROM TMONITEMCHART ', 09H, 'WHERE wMonI'
	DB	'D = ?', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7CTBLMonItem@@6B@
CONST	SEGMENT
??_7CTBLMonItem@@6B@ DD FLAT:??_ECTBLMonItem@@UAEPAXI@Z	; CTBLMonItem::`vftable'
	DD	FLAT:?GetNumCol@CTBLMonItem@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLMonItem@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLMonItem@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLMonItem@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLMonItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T165961 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLMonItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLMonItem::CTBLMonItem, COMDAT
; _this$ = ecx

; 2103 : 	WHERE wMonID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLMonItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BAE@PADFFDPL@SELECT?5?7bChartType?0?5?7wItemID?0?5?7w@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T165961[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLMonItem@@6B@
  0005e	72 0d		 jb	 SHORT $L166134
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L166134:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L165962:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLMonItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T166133
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLMonItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLMonItem::CTBLMonItem
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLMonItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLMonItem@@UAEHXZ PROC NEAR		; CTBLMonItem::GetNumCol, COMDAT
; _this$ = ecx

; 2105 : BEGIN_COLUMN(16)

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetNumCol@CTBLMonItem@@UAEHXZ ENDP			; CTBLMonItem::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonItem@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLMonItem@@UAEFXZ PROC NEAR		; CTBLMonItem::BindColumns, COMDAT
; _this$ = ecx

; 2105 : BEGIN_COLUMN(16)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2106 : 	COLUMN_ENTRY(m_bChartType)

  00003	8d 86 2e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3118]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L131686
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 0e 01 00
	00		 jne	 $L131682
$L131686:

; 2107 : 	COLUMN_ENTRY(m_wItemID)

  00020	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L131687
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 ef 00 00
	00		 jne	 $L131682
$L131687:

; 2108 : 	COLUMN_ENTRY(m_wItemIDMin)

  0003f	8d 96 32 0c 00
	00		 lea	 edx, DWORD PTR [esi+3122]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L131688
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 d0 00 00
	00		 jne	 $L131682
$L131688:

; 2109 : 	COLUMN_ENTRY(m_wItemIDMax)

  0005e	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L131689
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 b1 00 00
	00		 jne	 $L131682
$L131689:

; 2110 : 	COLUMN_ENTRY(m_wWeight)

  0007d	8d 8e 36 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3126]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L131690
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 92 00 00
	00		 jne	 $L131682
$L131690:

; 2111 : 	COLUMN_ENTRY(m_bLevelMin)

  0009c	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 06		 je	 SHORT $L131691
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	75 77		 jne	 SHORT $L131682
$L131691:
  000b7	57		 push	 edi

; 2112 : 	COLUMN_ENTRY(m_bLevelMax)

  000b8	8d 86 39 0c 00
	00		 lea	 eax, DWORD PTR [esi+3129]
  000be	50		 push	 eax
  000bf	6a 07		 push	 7
  000c1	8b ce		 mov	 ecx, esi
  000c3	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000c8	66 85 c0	 test	 ax, ax
  000cb	bf 08 00 00 00	 mov	 edi, 8
  000d0	74 06		 je	 SHORT $L131692
  000d2	66 3d 01 00	 cmp	 ax, 1
  000d6	75 55		 jne	 SHORT $L166148
$L131692:
  000d8	53		 push	 ebx

; 2113 : 	for(int i=0; i<MIP_COUNT; i++)

  000d9	33 db		 xor	 ebx, ebx
  000db	eb 03 8d 49 00	 npad	 5
$L131694:
  000e0	8d 8c 1e 3a 0c
	00 00		 lea	 ecx, DWORD PTR [esi+ebx+3130]

; 2114 : 	{
; 2115 : 		COLUMN_ENTRY(m_bItemProb[i])

  000e7	51		 push	 ecx
  000e8	57		 push	 edi
  000e9	8b ce		 mov	 ecx, esi
  000eb	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000f0	47		 inc	 edi
  000f1	66 85 c0	 test	 ax, ax
  000f4	74 06		 je	 SHORT $L131695
  000f6	66 3d 01 00	 cmp	 ax, 1
  000fa	75 30		 jne	 SHORT $L166149
$L131695:

; 2113 : 	for(int i=0; i<MIP_COUNT; i++)

  000fc	43		 inc	 ebx
  000fd	83 fb 07	 cmp	 ebx, 7
  00100	7c de		 jl	 SHORT $L131694

; 2116 : 	}
; 2117 : 	COLUMN_ENTRY(m_bItemMagicOpt)

  00102	8d 96 41 0c 00
	00		 lea	 edx, DWORD PTR [esi+3137]
  00108	52		 push	 edx
  00109	57		 push	 edi
  0010a	8b ce		 mov	 ecx, esi
  0010c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00111	47		 inc	 edi
  00112	66 85 c0	 test	 ax, ax
  00115	74 06		 je	 SHORT $L131698
  00117	66 3d 01 00	 cmp	 ax, 1
  0011b	75 0f		 jne	 SHORT $L166149
$L131698:

; 2118 : 	COLUMN_ENTRY(m_bItemRareOpt)

  0011d	8d 86 42 0c 00
	00		 lea	 eax, DWORD PTR [esi+3138]
  00123	50		 push	 eax
  00124	57		 push	 edi
  00125	8b ce		 mov	 ecx, esi
  00127	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L166149:
  0012c	5b		 pop	 ebx
$L166148:
  0012d	5f		 pop	 edi
$L131682:
  0012e	5e		 pop	 esi

; 2119 : END_COL()

  0012f	c3		 ret	 0
?BindColumns@CTBLMonItem@@UAEFXZ ENDP			; CTBLMonItem::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLMonItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLMonItem@@UAEHXZ PROC NEAR		; CTBLMonItem::GetNumParam, COMDAT
; _this$ = ecx

; 2121 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLMonItem@@UAEHXZ ENDP			; CTBLMonItem::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLMonItem@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLMonItem@@UAEFH@Z PROC NEAR		; CTBLMonItem::BindParameters, COMDAT
; _this$ = ecx

; 2122 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wMonID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L131704
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L131704:

; 2123 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLMonItem@@UAEFH@Z ENDP		; CTBLMonItem::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLMonItem@@UAE@XZ				; CTBLMonItem::~CTBLMonItem
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLMonItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLMonItem@@UAEPAXI@Z PROC NEAR			; CTBLMonItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLMonItem@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L166159
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L166159:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLMonItem@@UAEPAXI@Z ENDP				; CTBLMonItem::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLMonItem@@UAE@XZ
_TEXT	SEGMENT
??1CTBLMonItem@@UAE@XZ PROC NEAR			; CTBLMonItem::~CTBLMonItem, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLMonItem@@UAE@XZ ENDP				; CTBLMonItem::~CTBLMonItem
_TEXT	ENDS
PUBLIC	??0CTBLItemMagicChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLItemMagicChart::CTBLItemMagicChart
PUBLIC	?GetNumCol@CTBLItemMagicChart@@UAEHXZ		; CTBLItemMagicChart::GetNumCol
PUBLIC	?BindColumns@CTBLItemMagicChart@@UAEFXZ		; CTBLItemMagicChart::BindColumns
PUBLIC	??_7CTBLItemMagicChart@@6B@			; CTBLItemMagicChart::`vftable'
PUBLIC	??_GCTBLItemMagicChart@@UAEPAXI@Z		; CTBLItemMagicChart::`scalar deleting destructor'
PUBLIC	??_C@_0LA@BEIJPHEB@SELECT?5?7bMagic?0?5?7dwKind?0?5?7bRvTyp@ ; `string'
EXTRN	??_ECTBLItemMagicChart@@UAEPAXI@Z:NEAR		; CTBLItemMagicChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T166342 DD	0ffffffffH
	DD	FLAT:$L166168
$T166339 DD	019930520H
	DD	01H
	DD	FLAT:$T166342
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0LA@BEIJPHEB@SELECT?5?7bMagic?0?5?7dwKind?0?5?7bRvTyp@
CONST	SEGMENT
??_C@_0LA@BEIJPHEB@SELECT?5?7bMagic?0?5?7dwKind?0?5?7bRvTyp@ DB 'SELECT ', 09H
	DB	'bMagic, ', 09H, 'dwKind, ', 09H, 'bRvType, ', 09H, 'wMaxValue'
	DB	', ', 09H, 'bIsMagic, ', 09H, 'bIsRare, ', 09H, 'bMinLevel, ', 09H
	DB	'bExclIndex, ', 09H, 'bOptionKind, ', 09H, 'wAutoSkill, ', 09H
	DB	'bRefine, ', 09H, 'wMaxBound, ', 09H, 'wRareBound ', 09H, 'FRO'
	DB	'M TITEMMAGICCHART', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CTBLItemMagicChart@@6B@
CONST	SEGMENT
??_7CTBLItemMagicChart@@6B@ DD FLAT:??_ECTBLItemMagicChart@@UAEPAXI@Z ; CTBLItemMagicChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLItemMagicChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLItemMagicChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLItemMagicChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T166167 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLItemMagicChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLItemMagicChart::CTBLItemMagicChart, COMDAT
; _this$ = ecx

; 2157 : 	FROM TITEMMAGICCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLItemMagicChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0LA@BEIJPHEB@SELECT?5?7bMagic?0?5?7dwKind?0?5?7bRvTyp@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T166167[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLItemMagicChart@@6B@
  0005e	72 0d		 jb	 SHORT $L166340
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L166340:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L166168:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLItemMagicChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T166339
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLItemMagicChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLItemMagicChart::CTBLItemMagicChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLItemMagicChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLItemMagicChart@@UAEHXZ PROC NEAR		; CTBLItemMagicChart::GetNumCol, COMDAT
; _this$ = ecx

; 2159 : BEGIN_COLUMN(13)

  00000	b8 0d 00 00 00	 mov	 eax, 13			; 0000000dH
  00005	c3		 ret	 0
?GetNumCol@CTBLItemMagicChart@@UAEHXZ ENDP		; CTBLItemMagicChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLItemMagicChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLItemMagicChart@@UAEFXZ PROC NEAR	; CTBLItemMagicChart::BindColumns, COMDAT
; _this$ = ecx

; 2159 : BEGIN_COLUMN(13)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2160 : 	COLUMN_ENTRY(m_bMagic)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L131762
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 51 01 00
	00		 jne	 $L131758
$L131762:

; 2161 : 	COLUMN_ENTRY(m_dwKind)

  00020	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L131763
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 32 01 00
	00		 jne	 $L131758
$L131763:

; 2162 : 	COLUMN_ENTRY(m_bRvType)

  0003f	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L131764
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 13 01 00
	00		 jne	 $L131758
$L131764:

; 2163 : 	COLUMN_ENTRY(m_wMaxValue)

  0005e	8d 86 36 0c 00
	00		 lea	 eax, DWORD PTR [esi+3126]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L131765
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 f4 00 00
	00		 jne	 $L131758
$L131765:

; 2164 : 	COLUMN_ENTRY(m_bIsMagic)

  0007d	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L131766
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 d5 00 00
	00		 jne	 $L131758
$L131766:

; 2165 : 	COLUMN_ENTRY(m_bIsRare)

  0009c	8d 96 39 0c 00
	00		 lea	 edx, DWORD PTR [esi+3129]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L131767
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 b6 00 00
	00		 jne	 $L131758
$L131767:

; 2166 : 	COLUMN_ENTRY(m_bMinLevel)

  000bb	8d 86 3a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3130]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 0a		 je	 SHORT $L131768
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	0f 85 97 00 00
	00		 jne	 $L131758
$L131768:

; 2167 : 	COLUMN_ENTRY(m_bExclIndex)

  000da	8d 8e 3b 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3131]
  000e0	51		 push	 ecx
  000e1	6a 08		 push	 8
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ea	66 85 c0	 test	 ax, ax
  000ed	74 06		 je	 SHORT $L131769
  000ef	66 3d 01 00	 cmp	 ax, 1
  000f3	75 7c		 jne	 SHORT $L131758
$L131769:

; 2168 : 	COLUMN_ENTRY(m_bOptionKind)

  000f5	8d 96 3c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3132]
  000fb	52		 push	 edx
  000fc	6a 09		 push	 9
  000fe	8b ce		 mov	 ecx, esi
  00100	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00105	66 85 c0	 test	 ax, ax
  00108	74 06		 je	 SHORT $L131770
  0010a	66 3d 01 00	 cmp	 ax, 1
  0010e	75 61		 jne	 SHORT $L131758
$L131770:

; 2169 : 	COLUMN_ENTRY(m_wAutoSkill)

  00110	8d 86 3e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3134]
  00116	50		 push	 eax
  00117	6a 0a		 push	 10			; 0000000aH
  00119	8b ce		 mov	 ecx, esi
  0011b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00120	66 85 c0	 test	 ax, ax
  00123	74 06		 je	 SHORT $L131771
  00125	66 3d 01 00	 cmp	 ax, 1
  00129	75 46		 jne	 SHORT $L131758
$L131771:

; 2170 : 	COLUMN_ENTRY(m_bRefine)

  0012b	8d 8e 40 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3136]
  00131	51		 push	 ecx
  00132	6a 0b		 push	 11			; 0000000bH
  00134	8b ce		 mov	 ecx, esi
  00136	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0013b	66 85 c0	 test	 ax, ax
  0013e	74 06		 je	 SHORT $L131772
  00140	66 3d 01 00	 cmp	 ax, 1
  00144	75 2b		 jne	 SHORT $L131758
$L131772:

; 2171 : 	COLUMN_ENTRY(m_wMaxBound)

  00146	8d 96 42 0c 00
	00		 lea	 edx, DWORD PTR [esi+3138]
  0014c	52		 push	 edx
  0014d	6a 0c		 push	 12			; 0000000cH
  0014f	8b ce		 mov	 ecx, esi
  00151	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00156	66 85 c0	 test	 ax, ax
  00159	74 06		 je	 SHORT $L131773
  0015b	66 3d 01 00	 cmp	 ax, 1
  0015f	75 10		 jne	 SHORT $L131758
$L131773:

; 2172 : 	COLUMN_ENTRY(m_wRareBound)

  00161	8d 86 44 0c 00
	00		 lea	 eax, DWORD PTR [esi+3140]
  00167	50		 push	 eax
  00168	6a 0d		 push	 13			; 0000000dH
  0016a	8b ce		 mov	 ecx, esi
  0016c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
$L131758:
  00171	5e		 pop	 esi

; 2173 : END_COL()

  00172	c3		 ret	 0
?BindColumns@CTBLItemMagicChart@@UAEFXZ ENDP		; CTBLItemMagicChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLItemMagicChart@@UAE@XZ			; CTBLItemMagicChart::~CTBLItemMagicChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLItemMagicChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLItemMagicChart@@UAEPAXI@Z PROC NEAR		; CTBLItemMagicChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLItemMagicChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L166354
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L166354:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLItemMagicChart@@UAEPAXI@Z ENDP			; CTBLItemMagicChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLItemMagicChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLItemMagicChart@@UAE@XZ PROC NEAR			; CTBLItemMagicChart::~CTBLItemMagicChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLItemMagicChart@@UAE@XZ ENDP			; CTBLItemMagicChart::~CTBLItemMagicChart
_TEXT	ENDS
PUBLIC	??0CTBLItemSetChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLItemSetChart::CTBLItemSetChart
PUBLIC	?GetNumCol@CTBLItemSetChart@@UAEHXZ		; CTBLItemSetChart::GetNumCol
PUBLIC	?BindColumns@CTBLItemSetChart@@UAEFXZ		; CTBLItemSetChart::BindColumns
PUBLIC	??_7CTBLItemSetChart@@6B@			; CTBLItemSetChart::`vftable'
PUBLIC	??_GCTBLItemSetChart@@UAEPAXI@Z			; CTBLItemSetChart::`scalar deleting destructor'
PUBLIC	??_C@_0NC@OIABMFHG@SELECT?5?7wBaseID?0?5?7wSetID?0?5?7bLeve@ ; `string'
EXTRN	??_ECTBLItemSetChart@@UAEPAXI@Z:NEAR		; CTBLItemSetChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T166537 DD	0ffffffffH
	DD	FLAT:$L166363
$T166534 DD	019930520H
	DD	01H
	DD	FLAT:$T166537
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0NC@OIABMFHG@SELECT?5?7wBaseID?0?5?7wSetID?0?5?7bLeve@
CONST	SEGMENT
??_C@_0NC@OIABMFHG@SELECT?5?7wBaseID?0?5?7wSetID?0?5?7bLeve@ DB 'SELECT ', 09H
	DB	'wBaseID, ', 09H, 'wSetID, ', 09H, 'bLevel, ', 09H, 'bMagic1, '
	DB	'bMin1, bValue1, ', 09H, 'bMagic2, bMin2, bValue2, ', 09H, 'bM'
	DB	'agic3, bMin3, bValue3, ', 09H, 'bMagic4, bMin4, bValue4, ', 09H
	DB	'bMagic5, bMin5, bValue5, ', 09H, 'bMagic6, bMin6, bValue6 ', 09H
	DB	'FROM TITEMSETCHART', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CTBLItemSetChart@@6B@
CONST	SEGMENT
??_7CTBLItemSetChart@@6B@ DD FLAT:??_ECTBLItemSetChart@@UAEPAXI@Z ; CTBLItemSetChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLItemSetChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLItemSetChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLItemSetChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T166362 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLItemSetChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLItemSetChart::CTBLItemSetChart, COMDAT
; _this$ = ecx

; 2196 : 	FROM TITEMSETCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLItemSetChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0NC@OIABMFHG@SELECT?5?7wBaseID?0?5?7wSetID?0?5?7bLeve@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T166362[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLItemSetChart@@6B@
  0005e	72 0d		 jb	 SHORT $L166535
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L166535:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L166363:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLItemSetChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T166534
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLItemSetChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLItemSetChart::CTBLItemSetChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLItemSetChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLItemSetChart@@UAEHXZ PROC NEAR		; CTBLItemSetChart::GetNumCol, COMDAT
; _this$ = ecx

; 2198 : BEGIN_COLUMN(21)

  00000	b8 15 00 00 00	 mov	 eax, 21			; 00000015H
  00005	c3		 ret	 0
?GetNumCol@CTBLItemSetChart@@UAEHXZ ENDP		; CTBLItemSetChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLItemSetChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLItemSetChart@@UAEFXZ PROC NEAR		; CTBLItemSetChart::BindColumns, COMDAT
; _this$ = ecx

; 2198 : BEGIN_COLUMN(21)

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 2199 : 	COLUMN_ENTRY(m_wBaseID)

  00003	8d 87 2c 0c 00
	00		 lea	 eax, DWORD PTR [edi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L131823
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 a5 00 00
	00		 jne	 $L131819
$L131823:

; 2200 : 	COLUMN_ENTRY(m_wSetID)

  00020	8d 8f 2e 0c 00
	00		 lea	 ecx, DWORD PTR [edi+3118]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b cf		 mov	 ecx, edi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L131824
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 86 00 00
	00		 jne	 $L131819
$L131824:
  0003f	56		 push	 esi

; 2201 : 	COLUMN_ENTRY(m_bLevel)

  00040	8d 97 30 0c 00
	00		 lea	 edx, DWORD PTR [edi+3120]
  00046	52		 push	 edx
  00047	6a 03		 push	 3
  00049	8b cf		 mov	 ecx, edi
  0004b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00050	66 85 c0	 test	 ax, ax
  00053	be 04 00 00 00	 mov	 esi, 4
  00058	74 06		 je	 SHORT $L131825
  0005a	66 3d 01 00	 cmp	 ax, 1
  0005e	75 64		 jne	 SHORT $L166551
$L131825:
  00060	53		 push	 ebx

; 2202 : 	for(BYTE i=0; i<TMAGIC_MAX; i++)

  00061	32 db		 xor	 bl, bl
  00063	55		 push	 ebp
$L131828:

; 2203 : 	{
; 2204 : 		COLUMN_ENTRY(m_bMagic[i])

  00064	0f b6 c3	 movzx	 eax, bl
  00067	8d 2c 38	 lea	 ebp, DWORD PTR [eax+edi]
  0006a	8d 8d 31 0c 00
	00		 lea	 ecx, DWORD PTR [ebp+3121]
  00070	51		 push	 ecx
  00071	56		 push	 esi
  00072	8b cf		 mov	 ecx, edi
  00074	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00079	46		 inc	 esi
  0007a	66 85 c0	 test	 ax, ax
  0007d	74 06		 je	 SHORT $L131831
  0007f	66 3d 01 00	 cmp	 ax, 1
  00083	75 3d		 jne	 SHORT $L166553
$L131831:

; 2205 : 		COLUMN_ENTRY(m_bMin[i])

  00085	8d 95 37 0c 00
	00		 lea	 edx, DWORD PTR [ebp+3127]
  0008b	52		 push	 edx
  0008c	56		 push	 esi
  0008d	8b cf		 mov	 ecx, edi
  0008f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00094	46		 inc	 esi
  00095	66 85 c0	 test	 ax, ax
  00098	74 06		 je	 SHORT $L131832
  0009a	66 3d 01 00	 cmp	 ax, 1
  0009e	75 22		 jne	 SHORT $L166553
$L131832:

; 2206 : 		COLUMN_ENTRY(m_bValue[i])

  000a0	81 c5 3d 0c 00
	00		 add	 ebp, 3133		; 00000c3dH
  000a6	55		 push	 ebp
  000a7	56		 push	 esi
  000a8	8b cf		 mov	 ecx, edi
  000aa	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000af	46		 inc	 esi
  000b0	66 85 c0	 test	 ax, ax
  000b3	74 06		 je	 SHORT $L131829
  000b5	66 3d 01 00	 cmp	 ax, 1
  000b9	75 07		 jne	 SHORT $L166553
$L131829:

; 2202 : 	for(BYTE i=0; i<TMAGIC_MAX; i++)

  000bb	fe c3		 inc	 bl
  000bd	80 fb 06	 cmp	 bl, 6
  000c0	72 a2		 jb	 SHORT $L131828
$L166553:
  000c2	5d		 pop	 ebp
  000c3	5b		 pop	 ebx
$L166551:
  000c4	5e		 pop	 esi
$L131819:
  000c5	5f		 pop	 edi

; 2207 : 	}
; 2208 : END_COL()

  000c6	c3		 ret	 0
?BindColumns@CTBLItemSetChart@@UAEFXZ ENDP		; CTBLItemSetChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLItemSetChart@@UAE@XZ			; CTBLItemSetChart::~CTBLItemSetChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLItemSetChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLItemSetChart@@UAEPAXI@Z PROC NEAR		; CTBLItemSetChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLItemSetChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L166557
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L166557:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLItemSetChart@@UAEPAXI@Z ENDP			; CTBLItemSetChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLItemSetChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLItemSetChart@@UAE@XZ PROC NEAR			; CTBLItemSetChart::~CTBLItemSetChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLItemSetChart@@UAE@XZ ENDP			; CTBLItemSetChart::~CTBLItemSetChart
_TEXT	ENDS
PUBLIC	??0CTBLPostTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLPostTable::CTBLPostTable
PUBLIC	?GetNumCol@CTBLPostTable@@UAEHXZ		; CTBLPostTable::GetNumCol
PUBLIC	?BindColumns@CTBLPostTable@@UAEFXZ		; CTBLPostTable::BindColumns
PUBLIC	?GetNumParam@CTBLPostTable@@UAEHXZ		; CTBLPostTable::GetNumParam
PUBLIC	?BindParameters@CTBLPostTable@@UAEFH@Z		; CTBLPostTable::BindParameters
PUBLIC	??_7CTBLPostTable@@6B@				; CTBLPostTable::`vftable'
PUBLIC	??_GCTBLPostTable@@UAEPAXI@Z			; CTBLPostTable::`scalar deleting destructor'
PUBLIC	??_C@_0IN@HHKCALGA@SELECT?5TOP?57?5dwPostID?0?5bRead?0?5ti@ ; `string'
EXTRN	??_ECTBLPostTable@@UAEPAXI@Z:NEAR		; CTBLPostTable::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T166740 DD	0ffffffffH
	DD	FLAT:$L166566
$T166737 DD	019930520H
	DD	01H
	DD	FLAT:$T166740
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0IN@HHKCALGA@SELECT?5TOP?57?5dwPostID?0?5bRead?0?5ti@
CONST	SEGMENT
??_C@_0IN@HHKCALGA@SELECT?5TOP?57?5dwPostID?0?5bRead?0?5ti@ DB 'SELECT TO'
	DB	'P 7 dwPostID, bRead, timeRecv, szSender, bType, szTitle FROM '
	DB	'TPOSTTABLE WHERE dwCharID = ? AND dwPostID <= ? ORDER BY dwPo'
	DB	'stID DESC', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLPostTable@@6B@
CONST	SEGMENT
??_7CTBLPostTable@@6B@ DD FLAT:??_ECTBLPostTable@@UAEPAXI@Z ; CTBLPostTable::`vftable'
	DD	FLAT:?GetNumCol@CTBLPostTable@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLPostTable@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLPostTable@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLPostTable@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLPostTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T166565 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLPostTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLPostTable::CTBLPostTable, COMDAT
; _this$ = ecx

; 2223 : DEF_QUERY(CTBLPostTable, _T("SELECT TOP 7 dwPostID, bRead, timeRecv, szSender, bType, szTitle FROM TPOSTTABLE WHERE dwCharID = ? AND dwPostID <= ? ORDER BY dwPostID DESC"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLPostTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0IN@HHKCALGA@SELECT?5TOP?57?5dwPostID?0?5bRead?0?5ti@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T166565[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLPostTable@@6B@
  0005e	72 0d		 jb	 SHORT $L166738
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L166738:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L166566:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLPostTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T166737
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLPostTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLPostTable::CTBLPostTable
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLPostTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLPostTable@@UAEHXZ PROC NEAR		; CTBLPostTable::GetNumCol, COMDAT
; _this$ = ecx

; 2225 : BEGIN_COLUMN(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumCol@CTBLPostTable@@UAEHXZ ENDP			; CTBLPostTable::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLPostTable@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLPostTable@@UAEFXZ PROC NEAR		; CTBLPostTable::BindColumns, COMDAT
; _this$ = ecx

; 2225 : BEGIN_COLUMN(6)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2226 : 	COLUMN_ENTRY(m_dwPostID)

  00003	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L131884
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 83 00 00
	00		 jne	 $L131880
$L131884:

; 2227 : 	COLUMN_ENTRY(m_bRead)

  00020	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 06		 je	 SHORT $L131885
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	75 68		 jne	 SHORT $L131880
$L131885:

; 2228 : 	COLUMN_ENTRY(m_timeRecv)

  0003b	8d 96 3c 0d 00
	00		 lea	 edx, DWORD PTR [esi+3388]
  00041	52		 push	 edx
  00042	6a 03		 push	 3
  00044	8b ce		 mov	 ecx, esi
  00046	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
  0004b	66 85 c0	 test	 ax, ax
  0004e	74 06		 je	 SHORT $L131886
  00050	66 3d 01 00	 cmp	 ax, 1
  00054	75 4d		 jne	 SHORT $L131880
$L131886:

; 2229 : 	COLUMN_ENTRY_STR(m_szSender)

  00056	6a 33		 push	 51			; 00000033H
  00058	8d 86 4c 0d 00
	00		 lea	 eax, DWORD PTR [esi+3404]
  0005e	50		 push	 eax
  0005f	6a 04		 push	 4
  00061	8b ce		 mov	 ecx, esi
  00063	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00068	66 85 c0	 test	 ax, ax
  0006b	74 06		 je	 SHORT $L131887
  0006d	66 3d 01 00	 cmp	 ax, 1
  00071	75 30		 jne	 SHORT $L131880
$L131887:

; 2230 : 	COLUMN_ENTRY(m_bType)

  00073	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  00079	51		 push	 ecx
  0007a	6a 05		 push	 5
  0007c	8b ce		 mov	 ecx, esi
  0007e	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00083	66 85 c0	 test	 ax, ax
  00086	74 06		 je	 SHORT $L131888
  00088	66 3d 01 00	 cmp	 ax, 1
  0008c	75 15		 jne	 SHORT $L131880
$L131888:

; 2231 : 	COLUMN_ENTRY_STR(m_szTitle)

  0008e	68 01 01 00 00	 push	 257			; 00000101H
  00093	8d 96 39 0c 00
	00		 lea	 edx, DWORD PTR [esi+3129]
  00099	52		 push	 edx
  0009a	6a 06		 push	 6
  0009c	8b ce		 mov	 ecx, esi
  0009e	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
$L131880:
  000a3	5e		 pop	 esi

; 2232 : END_COL();

  000a4	c3		 ret	 0
?BindColumns@CTBLPostTable@@UAEFXZ ENDP			; CTBLPostTable::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLPostTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLPostTable@@UAEHXZ PROC NEAR		; CTBLPostTable::GetNumParam, COMDAT
; _this$ = ecx

; 2234 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CTBLPostTable@@UAEHXZ ENDP			; CTBLPostTable::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLPostTable@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLPostTable@@UAEFH@Z PROC NEAR	; CTBLPostTable::BindParameters, COMDAT
; _this$ = ecx

; 2234 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 2235 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L131899
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L131899
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L131894
$L131899:

; 2236 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwBeginID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L131894
  0003d	8d 8e 80 0d 00
	00		 lea	 ecx, DWORD PTR [esi+3456]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L131894:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 2237 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CTBLPostTable@@UAEFH@Z ENDP		; CTBLPostTable::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLPostTable@@UAE@XZ			; CTBLPostTable::~CTBLPostTable
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLPostTable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLPostTable@@UAEPAXI@Z PROC NEAR			; CTBLPostTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLPostTable@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L166758
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L166758:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLPostTable@@UAEPAXI@Z ENDP			; CTBLPostTable::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLPostTable@@UAE@XZ
_TEXT	SEGMENT
??1CTBLPostTable@@UAE@XZ PROC NEAR			; CTBLPostTable::~CTBLPostTable, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLPostTable@@UAE@XZ ENDP				; CTBLPostTable::~CTBLPostTable
_TEXT	ENDS
PUBLIC	??0CTBLPostBill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLPostBill::CTBLPostBill
PUBLIC	?GetNumCol@CTBLPostBill@@UAEHXZ			; CTBLPostBill::GetNumCol
PUBLIC	?BindColumns@CTBLPostBill@@UAEFXZ		; CTBLPostBill::BindColumns
PUBLIC	?GetNumParam@CTBLPostBill@@UAEHXZ		; CTBLPostBill::GetNumParam
PUBLIC	?BindParameters@CTBLPostBill@@UAEFH@Z		; CTBLPostBill::BindParameters
PUBLIC	??_7CTBLPostBill@@6B@				; CTBLPostBill::`vftable'
PUBLIC	??_GCTBLPostBill@@UAEPAXI@Z			; CTBLPostBill::`scalar deleting destructor'
PUBLIC	??_C@_0FD@HDBAHMKP@SELECT?5dwPostID?0?5timeRecv?5FROM?5T@ ; `string'
EXTRN	??_ECTBLPostBill@@UAEPAXI@Z:NEAR		; CTBLPostBill::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T166941 DD	0ffffffffH
	DD	FLAT:$L166767
$T166938 DD	019930520H
	DD	01H
	DD	FLAT:$T166941
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FD@HDBAHMKP@SELECT?5dwPostID?0?5timeRecv?5FROM?5T@
CONST	SEGMENT
??_C@_0FD@HDBAHMKP@SELECT?5dwPostID?0?5timeRecv?5FROM?5T@ DB 'SELECT dwPo'
	DB	'stID, timeRecv FROM TPOSTTABLE WHERE dwSendID=? AND bType=? A'
	DB	'ND bRead=0', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLPostBill@@6B@
CONST	SEGMENT
??_7CTBLPostBill@@6B@ DD FLAT:??_ECTBLPostBill@@UAEPAXI@Z ; CTBLPostBill::`vftable'
	DD	FLAT:?GetNumCol@CTBLPostBill@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLPostBill@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLPostBill@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLPostBill@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLPostBill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T166766 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLPostBill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLPostBill::CTBLPostBill, COMDAT
; _this$ = ecx

; 2248 : DEF_QUERY(CTBLPostBill, _T("SELECT dwPostID, timeRecv FROM TPOSTTABLE WHERE dwSendID=? AND bType=? AND bRead=0"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLPostBill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FD@HDBAHMKP@SELECT?5dwPostID?0?5timeRecv?5FROM?5T@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T166766[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLPostBill@@6B@
  0005e	72 0d		 jb	 SHORT $L166939
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L166939:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L166767:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLPostBill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T166938
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLPostBill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLPostBill::CTBLPostBill
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLPostBill@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLPostBill@@UAEHXZ PROC NEAR		; CTBLPostBill::GetNumCol, COMDAT
; _this$ = ecx

; 2250 : BEGIN_COLUMN(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumCol@CTBLPostBill@@UAEHXZ ENDP			; CTBLPostBill::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLPostBill@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLPostBill@@UAEFXZ PROC NEAR		; CTBLPostBill::BindColumns, COMDAT
; _this$ = ecx

; 2250 : BEGIN_COLUMN(2)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2251 : 	COLUMN_ENTRY(m_dwPostID)

  00003	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L131948
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 10		 jne	 SHORT $L131944
$L131948:

; 2252 : 	COLUMN_ENTRY(m_timeRecv)

  0001c	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
$L131944:
  0002c	5e		 pop	 esi

; 2253 : END_COL()

  0002d	c3		 ret	 0
?BindColumns@CTBLPostBill@@UAEFXZ ENDP			; CTBLPostBill::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLPostBill@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLPostBill@@UAEHXZ PROC NEAR		; CTBLPostBill::GetNumParam, COMDAT
; _this$ = ecx

; 2255 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CTBLPostBill@@UAEHXZ ENDP			; CTBLPostBill::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLPostBill@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLPostBill@@UAEFH@Z PROC NEAR		; CTBLPostBill::BindParameters, COMDAT
; _this$ = ecx

; 2255 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 2256 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwSendID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L131959
  00014	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L131959
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L131954
$L131959:

; 2257 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bType)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L131954
  0003d	8d 8e 2c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3116]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L131954:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 2258 : END_COL()

  00051	c2 04 00	 ret	 4
?BindParameters@CTBLPostBill@@UAEFH@Z ENDP		; CTBLPostBill::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLPostBill@@UAE@XZ				; CTBLPostBill::~CTBLPostBill
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLPostBill@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLPostBill@@UAEPAXI@Z PROC NEAR			; CTBLPostBill::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLPostBill@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L166959
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L166959:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLPostBill@@UAEPAXI@Z ENDP			; CTBLPostBill::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLPostBill@@UAE@XZ
_TEXT	SEGMENT
??1CTBLPostBill@@UAE@XZ PROC NEAR			; CTBLPostBill::~CTBLPostBill, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLPostBill@@UAE@XZ ENDP				; CTBLPostBill::~CTBLPostBill
_TEXT	ENDS
PUBLIC	??0CTBLCabinetTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCabinetTable::CTBLCabinetTable
PUBLIC	?GetNumCol@CTBLCabinetTable@@UAEHXZ		; CTBLCabinetTable::GetNumCol
PUBLIC	?BindColumns@CTBLCabinetTable@@UAEFXZ		; CTBLCabinetTable::BindColumns
PUBLIC	?GetNumParam@CTBLCabinetTable@@UAEHXZ		; CTBLCabinetTable::GetNumParam
PUBLIC	?BindParameters@CTBLCabinetTable@@UAEFH@Z	; CTBLCabinetTable::BindParameters
PUBLIC	??_7CTBLCabinetTable@@6B@			; CTBLCabinetTable::`vftable'
PUBLIC	??_GCTBLCabinetTable@@UAEPAXI@Z			; CTBLCabinetTable::`scalar deleting destructor'
PUBLIC	??_C@_0FC@IPLGIGIC@SELECT?5bCabinetID?0?5bUse?5FROM?5TCA@ ; `string'
EXTRN	??_ECTBLCabinetTable@@UAEPAXI@Z:NEAR		; CTBLCabinetTable::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T167142 DD	0ffffffffH
	DD	FLAT:$L166968
$T167139 DD	019930520H
	DD	01H
	DD	FLAT:$T167142
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FC@IPLGIGIC@SELECT?5bCabinetID?0?5bUse?5FROM?5TCA@
CONST	SEGMENT
??_C@_0FC@IPLGIGIC@SELECT?5bCabinetID?0?5bUse?5FROM?5TCA@ DB 'SELECT bCab'
	DB	'inetID, bUse FROM TCABINETTABLE WHERE dwCharID = ? ORDER BY b'
	DB	'CabinetID', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLCabinetTable@@6B@
CONST	SEGMENT
??_7CTBLCabinetTable@@6B@ DD FLAT:??_ECTBLCabinetTable@@UAEPAXI@Z ; CTBLCabinetTable::`vftable'
	DD	FLAT:?GetNumCol@CTBLCabinetTable@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLCabinetTable@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLCabinetTable@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLCabinetTable@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLCabinetTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T166967 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLCabinetTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLCabinetTable::CTBLCabinetTable, COMDAT
; _this$ = ecx

; 2268 : DEF_QUERY(CTBLCabinetTable, _T("SELECT bCabinetID, bUse FROM TCABINETTABLE WHERE dwCharID = ? ORDER BY bCabinetID"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLCabinetTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FC@IPLGIGIC@SELECT?5bCabinetID?0?5bUse?5FROM?5TCA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T166967[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLCabinetTable@@6B@
  0005e	72 0d		 jb	 SHORT $L167140
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L167140:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L166968:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLCabinetTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167139
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLCabinetTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLCabinetTable::CTBLCabinetTable
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLCabinetTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLCabinetTable@@UAEHXZ PROC NEAR		; CTBLCabinetTable::GetNumCol, COMDAT
; _this$ = ecx

; 2270 : BEGIN_COLUMN(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumCol@CTBLCabinetTable@@UAEHXZ ENDP		; CTBLCabinetTable::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLCabinetTable@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLCabinetTable@@UAEFXZ PROC NEAR		; CTBLCabinetTable::BindColumns, COMDAT
; _this$ = ecx

; 2270 : BEGIN_COLUMN(2)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2271 : 	COLUMN_ENTRY(m_bCabinetID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L132007
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 10		 jne	 SHORT $L132003
$L132007:

; 2272 : 	COLUMN_ENTRY(m_bUse)

  0001c	8d 8e 31 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3121]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L132003:
  0002c	5e		 pop	 esi

; 2273 : END_COL();

  0002d	c3		 ret	 0
?BindColumns@CTBLCabinetTable@@UAEFXZ ENDP		; CTBLCabinetTable::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLCabinetTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLCabinetTable@@UAEHXZ PROC NEAR		; CTBLCabinetTable::GetNumParam, COMDAT
; _this$ = ecx

; 2275 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLCabinetTable@@UAEHXZ ENDP		; CTBLCabinetTable::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLCabinetTable@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLCabinetTable@@UAEFH@Z PROC NEAR	; CTBLCabinetTable::BindParameters, COMDAT
; _this$ = ecx

; 2276 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L132013
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L132013:

; 2277 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLCabinetTable@@UAEFH@Z ENDP		; CTBLCabinetTable::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLCabinetTable@@UAE@XZ			; CTBLCabinetTable::~CTBLCabinetTable
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLCabinetTable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLCabinetTable@@UAEPAXI@Z PROC NEAR		; CTBLCabinetTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLCabinetTable@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L167160
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L167160:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLCabinetTable@@UAEPAXI@Z ENDP			; CTBLCabinetTable::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLCabinetTable@@UAE@XZ
_TEXT	SEGMENT
??1CTBLCabinetTable@@UAE@XZ PROC NEAR			; CTBLCabinetTable::~CTBLCabinetTable, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLCabinetTable@@UAE@XZ ENDP			; CTBLCabinetTable::~CTBLCabinetTable
_TEXT	ENDS
PUBLIC	??0CTBLHotKey@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLHotKey::CTBLHotKey
PUBLIC	?GetNumCol@CTBLHotKey@@UAEHXZ			; CTBLHotKey::GetNumCol
PUBLIC	?BindColumns@CTBLHotKey@@UAEFXZ			; CTBLHotKey::BindColumns
PUBLIC	?GetNumParam@CTBLHotKey@@UAEHXZ			; CTBLHotKey::GetNumParam
PUBLIC	?BindParameters@CTBLHotKey@@UAEFH@Z		; CTBLHotKey::BindParameters
PUBLIC	??_7CTBLHotKey@@6B@				; CTBLHotKey::`vftable'
PUBLIC	??_GCTBLHotKey@@UAEPAXI@Z			; CTBLHotKey::`scalar deleting destructor'
PUBLIC	??_C@_0CO@FIDMGCBF@SELECT?5?$CK?5FROM?5THOTKEYTABLE?5WHERE@ ; `string'
EXTRN	??_ECTBLHotKey@@UAEPAXI@Z:NEAR			; CTBLHotKey::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T167343 DD	0ffffffffH
	DD	FLAT:$L167169
$T167340 DD	019930520H
	DD	01H
	DD	FLAT:$T167343
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CO@FIDMGCBF@SELECT?5?$CK?5FROM?5THOTKEYTABLE?5WHERE@
CONST	SEGMENT
??_C@_0CO@FIDMGCBF@SELECT?5?$CK?5FROM?5THOTKEYTABLE?5WHERE@ DB 'SELECT * '
	DB	'FROM THOTKEYTABLE WHERE dwCharID = ?', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLHotKey@@6B@
CONST	SEGMENT
??_7CTBLHotKey@@6B@ DD FLAT:??_ECTBLHotKey@@UAEPAXI@Z	; CTBLHotKey::`vftable'
	DD	FLAT:?GetNumCol@CTBLHotKey@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLHotKey@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLHotKey@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLHotKey@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLHotKey@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T167168 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLHotKey@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLHotKey::CTBLHotKey, COMDAT
; _this$ = ecx

; 2288 : DEF_QUERY(CTBLHotKey, _T("SELECT * FROM THOTKEYTABLE WHERE dwCharID = ?"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLHotKey@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CO@FIDMGCBF@SELECT?5?$CK?5FROM?5THOTKEYTABLE?5WHERE@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T167168[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLHotKey@@6B@
  0005e	72 0d		 jb	 SHORT $L167341
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L167341:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L167169:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLHotKey@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167340
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLHotKey@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLHotKey::CTBLHotKey
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLHotKey@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLHotKey@@UAEHXZ PROC NEAR			; CTBLHotKey::GetNumCol, COMDAT
; _this$ = ecx

; 2289 : BEGIN_COLUMN(MAX_HOTKEY_POS*2 + 2)

  00000	b8 1a 00 00 00	 mov	 eax, 26			; 0000001aH
  00005	c3		 ret	 0
?GetNumCol@CTBLHotKey@@UAEHXZ ENDP			; CTBLHotKey::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLHotKey@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLHotKey@@UAEFXZ PROC NEAR		; CTBLHotKey::BindColumns, COMDAT
; _this$ = ecx

; 2289 : BEGIN_COLUMN(MAX_HOTKEY_POS*2 + 2)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2290 : 	COLUMN_ENTRY(m_dwCharID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L132068
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 68		 jne	 SHORT $L132064
$L132068:
  0001c	57		 push	 edi

; 2291 : 	COLUMN_ENTRY(m_bInven)

  0001d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00023	51		 push	 ecx
  00024	6a 02		 push	 2
  00026	8b ce		 mov	 ecx, esi
  00028	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002d	66 85 c0	 test	 ax, ax
  00030	bf 03 00 00 00	 mov	 edi, 3
  00035	74 06		 je	 SHORT $L132069
  00037	66 3d 01 00	 cmp	 ax, 1
  0003b	75 46		 jne	 SHORT $L167356
$L132069:
  0003d	53		 push	 ebx
  0003e	55		 push	 ebp

; 2292 : 	for(int i=0; i<MAX_HOTKEY_POS; i++)

  0003f	33 db		 xor	 ebx, ebx
  00041	8d ae 3e 0c 00
	00		 lea	 ebp, DWORD PTR [esi+3134]
$L132072:
  00047	8d 94 1e 31 0c
	00 00		 lea	 edx, DWORD PTR [esi+ebx+3121]

; 2293 : 	{
; 2294 : 		COLUMN_ENTRY(m_bType[i])

  0004e	52		 push	 edx
  0004f	57		 push	 edi
  00050	8b ce		 mov	 ecx, esi
  00052	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00057	47		 inc	 edi
  00058	66 85 c0	 test	 ax, ax
  0005b	74 06		 je	 SHORT $L132075
  0005d	66 3d 01 00	 cmp	 ax, 1
  00061	75 1e		 jne	 SHORT $L167357
$L132075:

; 2295 : 		COLUMN_ENTRY(m_wHotID[i])

  00063	55		 push	 ebp
  00064	57		 push	 edi
  00065	8b ce		 mov	 ecx, esi
  00067	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0006c	47		 inc	 edi
  0006d	66 85 c0	 test	 ax, ax
  00070	74 06		 je	 SHORT $L132073
  00072	66 3d 01 00	 cmp	 ax, 1
  00076	75 09		 jne	 SHORT $L167357
$L132073:

; 2292 : 	for(int i=0; i<MAX_HOTKEY_POS; i++)

  00078	43		 inc	 ebx
  00079	83 c5 02	 add	 ebp, 2
  0007c	83 fb 0c	 cmp	 ebx, 12			; 0000000cH
  0007f	7c c6		 jl	 SHORT $L132072
$L167357:
  00081	5d		 pop	 ebp
  00082	5b		 pop	 ebx
$L167356:
  00083	5f		 pop	 edi
$L132064:
  00084	5e		 pop	 esi

; 2296 : 	}
; 2297 : END_COL();

  00085	c3		 ret	 0
?BindColumns@CTBLHotKey@@UAEFXZ ENDP			; CTBLHotKey::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLHotKey@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLHotKey@@UAEHXZ PROC NEAR		; CTBLHotKey::GetNumParam, COMDAT
; _this$ = ecx

; 2299 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLHotKey@@UAEHXZ ENDP			; CTBLHotKey::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLHotKey@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLHotKey@@UAEFH@Z PROC NEAR		; CTBLHotKey::BindParameters, COMDAT
; _this$ = ecx

; 2300 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L132081
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L132081:

; 2301 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLHotKey@@UAEFH@Z ENDP		; CTBLHotKey::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLHotKey@@UAE@XZ				; CTBLHotKey::~CTBLHotKey
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLHotKey@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLHotKey@@UAEPAXI@Z PROC NEAR			; CTBLHotKey::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLHotKey@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L167368
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L167368:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLHotKey@@UAEPAXI@Z ENDP				; CTBLHotKey::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLHotKey@@UAE@XZ
_TEXT	SEGMENT
??1CTBLHotKey@@UAE@XZ PROC NEAR				; CTBLHotKey::~CTBLHotKey, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLHotKey@@UAE@XZ ENDP				; CTBLHotKey::~CTBLHotKey
_TEXT	ENDS
PUBLIC	??0CTBLFindChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLFindChar::CTBLFindChar
PUBLIC	?GetNumCol@CTBLFindChar@@UAEHXZ			; CTBLFindChar::GetNumCol
PUBLIC	?BindColumns@CTBLFindChar@@UAEFXZ		; CTBLFindChar::BindColumns
PUBLIC	?GetNumParam@CTBLFindChar@@UAEHXZ		; CTBLFindChar::GetNumParam
PUBLIC	?BindParameters@CTBLFindChar@@UAEFH@Z		; CTBLFindChar::BindParameters
PUBLIC	??_7CTBLFindChar@@6B@				; CTBLFindChar::`vftable'
PUBLIC	??_GCTBLFindChar@@UAEPAXI@Z			; CTBLFindChar::`scalar deleting destructor'
PUBLIC	??_C@_0CN@IIPCJEOA@SELECT?5dwID?5FROM?5TCHARTABLE?5WHER@ ; `string'
EXTRN	??_ECTBLFindChar@@UAEPAXI@Z:NEAR		; CTBLFindChar::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T167551 DD	0ffffffffH
	DD	FLAT:$L167377
$T167548 DD	019930520H
	DD	01H
	DD	FLAT:$T167551
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CN@IIPCJEOA@SELECT?5dwID?5FROM?5TCHARTABLE?5WHER@
CONST	SEGMENT
??_C@_0CN@IIPCJEOA@SELECT?5dwID?5FROM?5TCHARTABLE?5WHER@ DB 'SELECT dwID '
	DB	'FROM TCHARTABLE WHERE szName = ?', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLFindChar@@6B@
CONST	SEGMENT
??_7CTBLFindChar@@6B@ DD FLAT:??_ECTBLFindChar@@UAEPAXI@Z ; CTBLFindChar::`vftable'
	DD	FLAT:?GetNumCol@CTBLFindChar@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLFindChar@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLFindChar@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLFindChar@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLFindChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T167376 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLFindChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLFindChar::CTBLFindChar, COMDAT
; _this$ = ecx

; 2309 : 	DEF_QUERY(CTBLFindChar, _T("SELECT dwID FROM TCHARTABLE WHERE szName = ?"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLFindChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CN@IIPCJEOA@SELECT?5dwID?5FROM?5TCHARTABLE?5WHER@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T167376[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLFindChar@@6B@
  0005e	72 0d		 jb	 SHORT $L167549
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L167549:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L167377:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLFindChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167548
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLFindChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLFindChar::CTBLFindChar
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLFindChar@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLFindChar@@UAEHXZ PROC NEAR		; CTBLFindChar::GetNumCol, COMDAT
; _this$ = ecx

; 2310 : BEGIN_COLUMN(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumCol@CTBLFindChar@@UAEHXZ ENDP			; CTBLFindChar::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLFindChar@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLFindChar@@UAEFXZ PROC NEAR		; CTBLFindChar::BindColumns, COMDAT
; _this$ = ecx

; 2311 : 	COLUMN_ENTRY(m_dwID)

  00000	8d 81 60 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3168]
  00006	50		 push	 eax
  00007	6a 01		 push	 1
  00009	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol

; 2312 : END_COL();

  0000e	c3		 ret	 0
?BindColumns@CTBLFindChar@@UAEFXZ ENDP			; CTBLFindChar::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLFindChar@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLFindChar@@UAEHXZ PROC NEAR		; CTBLFindChar::GetNumParam, COMDAT
; _this$ = ecx

; 2314 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLFindChar@@UAEHXZ ENDP			; CTBLFindChar::GetNumParam
_TEXT	ENDS
EXTRN	?BindParamStr@CSqlBase@@QAEFFFPADJ@Z:NEAR	; CSqlBase::BindParamStr
; Function compile flags: /Ogty
;	COMDAT ?BindParameters@CTBLFindChar@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLFindChar@@UAEFH@Z PROC NEAR		; CTBLFindChar::BindParameters, COMDAT
; _this$ = ecx

; 2315 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szName)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	c7 81 10 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [ecx+2064], -3 ; fffffffdH
  00012	75 12		 jne	 SHORT $L132136
  00014	6a 33		 push	 51			; 00000033H
  00016	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  0001c	50		 push	 eax
  0001d	6a 01		 push	 1
  0001f	6a 01		 push	 1
  00021	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L132136:

; 2316 : END_PARAM()

  00026	c2 04 00	 ret	 4
?BindParameters@CTBLFindChar@@UAEFH@Z ENDP		; CTBLFindChar::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLFindChar@@UAE@XZ				; CTBLFindChar::~CTBLFindChar
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLFindChar@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLFindChar@@UAEPAXI@Z PROC NEAR			; CTBLFindChar::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLFindChar@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L167569
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L167569:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLFindChar@@UAEPAXI@Z ENDP			; CTBLFindChar::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLFindChar@@UAE@XZ
_TEXT	SEGMENT
??1CTBLFindChar@@UAE@XZ PROC NEAR			; CTBLFindChar::~CTBLFindChar, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLFindChar@@UAE@XZ ENDP				; CTBLFindChar::~CTBLFindChar
_TEXT	ENDS
PUBLIC	??0CTBLLocalInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLLocalInfo::CTBLLocalInfo
PUBLIC	?GetNumCol@CTBLLocalInfo@@UAEHXZ		; CTBLLocalInfo::GetNumCol
PUBLIC	?BindColumns@CTBLLocalInfo@@UAEFXZ		; CTBLLocalInfo::BindColumns
PUBLIC	?GetNumParam@CTBLLocalInfo@@UAEHXZ		; CTBLLocalInfo::GetNumParam
PUBLIC	?BindParameters@CTBLLocalInfo@@UAEFH@Z		; CTBLLocalInfo::BindParameters
PUBLIC	??_7CTBLLocalInfo@@6B@				; CTBLLocalInfo::`vftable'
PUBLIC	??_GCTBLLocalInfo@@UAEPAXI@Z			; CTBLLocalInfo::`scalar deleting destructor'
PUBLIC	??_C@_0HK@DCCBLJIH@SELECT?5wLocalID?0?5bCountry?0?5dwGui@ ; `string'
EXTRN	??_ECTBLLocalInfo@@UAEPAXI@Z:NEAR		; CTBLLocalInfo::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T167752 DD	0ffffffffH
	DD	FLAT:$L167578
$T167749 DD	019930520H
	DD	01H
	DD	FLAT:$T167752
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0HK@DCCBLJIH@SELECT?5wLocalID?0?5bCountry?0?5dwGui@
CONST	SEGMENT
??_C@_0HK@DCCBLJIH@SELECT?5wLocalID?0?5bCountry?0?5dwGui@ DB 'SELECT wLoc'
	DB	'alID, bCountry, dwGuild FROM TLOCALTABLE WHERE wLocalID IN(SE'
	DB	'LECT wID FROM TBATTLEZONECHART WHERE wCastle = ?)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLLocalInfo@@6B@
CONST	SEGMENT
??_7CTBLLocalInfo@@6B@ DD FLAT:??_ECTBLLocalInfo@@UAEPAXI@Z ; CTBLLocalInfo::`vftable'
	DD	FLAT:?GetNumCol@CTBLLocalInfo@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLLocalInfo@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLLocalInfo@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLLocalInfo@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLLocalInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T167577 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLLocalInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLLocalInfo::CTBLLocalInfo, COMDAT
; _this$ = ecx

; 2326 : 	DEF_QUERY(CTBLLocalInfo, _T("SELECT wLocalID, bCountry, dwGuild FROM TLOCALTABLE WHERE wLocalID IN(SELECT wID FROM TBATTLEZONECHART WHERE wCastle = ?)"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLLocalInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0HK@DCCBLJIH@SELECT?5wLocalID?0?5bCountry?0?5dwGui@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T167577[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLLocalInfo@@6B@
  0005e	72 0d		 jb	 SHORT $L167750
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L167750:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L167578:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLLocalInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167749
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLLocalInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLLocalInfo::CTBLLocalInfo
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLLocalInfo@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLLocalInfo@@UAEHXZ PROC NEAR		; CTBLLocalInfo::GetNumCol, COMDAT
; _this$ = ecx

; 2327 : BEGIN_COLUMN(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumCol@CTBLLocalInfo@@UAEHXZ ENDP			; CTBLLocalInfo::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLLocalInfo@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLLocalInfo@@UAEFXZ PROC NEAR		; CTBLLocalInfo::BindColumns, COMDAT
; _this$ = ecx

; 2327 : BEGIN_COLUMN(3)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2328 : 	COLUMN_ENTRY(m_wLocal)

  00003	8d 86 2e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3118]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L132188
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 2b		 jne	 SHORT $L132184
$L132188:

; 2329 : 	COLUMN_ENTRY(m_bCountry)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L132189
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 10		 jne	 SHORT $L132184
$L132189:

; 2330 : 	COLUMN_ENTRY(m_dwGuild)

  00037	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L132184:
  00047	5e		 pop	 esi

; 2331 : END_COL()

  00048	c3		 ret	 0
?BindColumns@CTBLLocalInfo@@UAEFXZ ENDP			; CTBLLocalInfo::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLLocalInfo@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLLocalInfo@@UAEHXZ PROC NEAR		; CTBLLocalInfo::GetNumParam, COMDAT
; _this$ = ecx

; 2333 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLLocalInfo@@UAEHXZ ENDP			; CTBLLocalInfo::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLLocalInfo@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLLocalInfo@@UAEFH@Z PROC NEAR	; CTBLLocalInfo::BindParameters, COMDAT
; _this$ = ecx

; 2334 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wCastle)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L132195
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L132195:

; 2335 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLLocalInfo@@UAEFH@Z ENDP		; CTBLLocalInfo::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLLocalInfo@@UAE@XZ			; CTBLLocalInfo::~CTBLLocalInfo
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLLocalInfo@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLLocalInfo@@UAEPAXI@Z PROC NEAR			; CTBLLocalInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLLocalInfo@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L167770
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L167770:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLLocalInfo@@UAEPAXI@Z ENDP			; CTBLLocalInfo::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLLocalInfo@@UAE@XZ
_TEXT	SEGMENT
??1CTBLLocalInfo@@UAE@XZ PROC NEAR			; CTBLLocalInfo::~CTBLLocalInfo, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLLocalInfo@@UAE@XZ ENDP				; CTBLLocalInfo::~CTBLLocalInfo
_TEXT	ENDS
PUBLIC	??0CTBLItemUsed@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLItemUsed::CTBLItemUsed
PUBLIC	?GetNumCol@CTBLItemUsed@@UAEHXZ			; CTBLItemUsed::GetNumCol
PUBLIC	?BindColumns@CTBLItemUsed@@UAEFXZ		; CTBLItemUsed::BindColumns
PUBLIC	?GetNumParam@CTBLItemUsed@@UAEHXZ		; CTBLItemUsed::GetNumParam
PUBLIC	?BindParameters@CTBLItemUsed@@UAEFH@Z		; CTBLItemUsed::BindParameters
PUBLIC	??_7CTBLItemUsed@@6B@				; CTBLItemUsed::`vftable'
PUBLIC	??_GCTBLItemUsed@@UAEPAXI@Z			; CTBLItemUsed::`scalar deleting destructor'
PUBLIC	??_C@_0EE@EJEOCMN@SELECT?5wDelayGroupID?0?5dwTick?5FRO@ ; `string'
EXTRN	??_ECTBLItemUsed@@UAEPAXI@Z:NEAR		; CTBLItemUsed::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T167953 DD	0ffffffffH
	DD	FLAT:$L167779
$T167950 DD	019930520H
	DD	01H
	DD	FLAT:$T167953
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EE@EJEOCMN@SELECT?5wDelayGroupID?0?5dwTick?5FRO@
CONST	SEGMENT
??_C@_0EE@EJEOCMN@SELECT?5wDelayGroupID?0?5dwTick?5FRO@ DB 'SELECT wDelay'
	DB	'GroupID, dwTick FROM TITEMUSEDTABLE WHERE dwCharID = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLItemUsed@@6B@
CONST	SEGMENT
??_7CTBLItemUsed@@6B@ DD FLAT:??_ECTBLItemUsed@@UAEPAXI@Z ; CTBLItemUsed::`vftable'
	DD	FLAT:?GetNumCol@CTBLItemUsed@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLItemUsed@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLItemUsed@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLItemUsed@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLItemUsed@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T167778 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLItemUsed@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLItemUsed::CTBLItemUsed, COMDAT
; _this$ = ecx

; 2345 : 	DEF_QUERY(CTBLItemUsed, _T("SELECT wDelayGroupID, dwTick FROM TITEMUSEDTABLE WHERE dwCharID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLItemUsed@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@EJEOCMN@SELECT?5wDelayGroupID?0?5dwTick?5FRO@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T167778[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLItemUsed@@6B@
  0005e	72 0d		 jb	 SHORT $L167951
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L167951:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L167779:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLItemUsed@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167950
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLItemUsed@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLItemUsed::CTBLItemUsed
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLItemUsed@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLItemUsed@@UAEHXZ PROC NEAR		; CTBLItemUsed::GetNumCol, COMDAT
; _this$ = ecx

; 2346 : BEGIN_COLUMN(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumCol@CTBLItemUsed@@UAEHXZ ENDP			; CTBLItemUsed::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLItemUsed@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLItemUsed@@UAEFXZ PROC NEAR		; CTBLItemUsed::BindColumns, COMDAT
; _this$ = ecx

; 2346 : BEGIN_COLUMN(2)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2347 : 	COLUMN_ENTRY(m_wDelayGroupID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L132246
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 10		 jne	 SHORT $L132242
$L132246:

; 2348 : 	COLUMN_ENTRY(m_dwTick)

  0001c	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L132242:
  0002c	5e		 pop	 esi

; 2349 : END_COL()

  0002d	c3		 ret	 0
?BindColumns@CTBLItemUsed@@UAEFXZ ENDP			; CTBLItemUsed::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLItemUsed@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLItemUsed@@UAEHXZ PROC NEAR		; CTBLItemUsed::GetNumParam, COMDAT
; _this$ = ecx

; 2351 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLItemUsed@@UAEHXZ ENDP			; CTBLItemUsed::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLItemUsed@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLItemUsed@@UAEFH@Z PROC NEAR		; CTBLItemUsed::BindParameters, COMDAT
; _this$ = ecx

; 2352 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L132252
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L132252:

; 2353 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLItemUsed@@UAEFH@Z ENDP		; CTBLItemUsed::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLItemUsed@@UAE@XZ				; CTBLItemUsed::~CTBLItemUsed
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLItemUsed@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLItemUsed@@UAEPAXI@Z PROC NEAR			; CTBLItemUsed::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLItemUsed@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L167971
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L167971:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLItemUsed@@UAEPAXI@Z ENDP			; CTBLItemUsed::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLItemUsed@@UAE@XZ
_TEXT	SEGMENT
??1CTBLItemUsed@@UAE@XZ PROC NEAR			; CTBLItemUsed::~CTBLItemUsed, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLItemUsed@@UAE@XZ ENDP				; CTBLItemUsed::~CTBLItemUsed
_TEXT	ENDS
PUBLIC	??0CTBLRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLRecallMon::CTBLRecallMon
PUBLIC	?GetNumCol@CTBLRecallMon@@UAEHXZ		; CTBLRecallMon::GetNumCol
PUBLIC	?BindColumns@CTBLRecallMon@@UAEFXZ		; CTBLRecallMon::BindColumns
PUBLIC	?GetNumParam@CTBLRecallMon@@UAEHXZ		; CTBLRecallMon::GetNumParam
PUBLIC	?BindParameters@CTBLRecallMon@@UAEFH@Z		; CTBLRecallMon::BindParameters
PUBLIC	??_7CTBLRecallMon@@6B@				; CTBLRecallMon::`vftable'
PUBLIC	??_GCTBLRecallMon@@UAEPAXI@Z			; CTBLRecallMon::`scalar deleting destructor'
PUBLIC	??_C@_0IJ@PKABGAEA@SELECT?5dwID?0?5wMonID?0?5wPetID?0?5dwA@ ; `string'
EXTRN	??_ECTBLRecallMon@@UAEPAXI@Z:NEAR		; CTBLRecallMon::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T168154 DD	0ffffffffH
	DD	FLAT:$L167980
$T168151 DD	019930520H
	DD	01H
	DD	FLAT:$T168154
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0IJ@PKABGAEA@SELECT?5dwID?0?5wMonID?0?5wPetID?0?5dwA@
CONST	SEGMENT
??_C@_0IJ@PKABGAEA@SELECT?5dwID?0?5wMonID?0?5wPetID?0?5dwA@ DB 'SELECT dw'
	DB	'ID, wMonID, wPetID, dwATTR, bLevel, dwHP, dwMP, bSkillLevel, '
	DB	'wPosX, wPosY, wPosZ, dwTime FROM TRECALLMONTABLE WHERE dwOwne'
	DB	'rID=?', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7CTBLRecallMon@@6B@
CONST	SEGMENT
??_7CTBLRecallMon@@6B@ DD FLAT:??_ECTBLRecallMon@@UAEPAXI@Z ; CTBLRecallMon::`vftable'
	DD	FLAT:?GetNumCol@CTBLRecallMon@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLRecallMon@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLRecallMon@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLRecallMon@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T167979 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLRecallMon::CTBLRecallMon, COMDAT
; _this$ = ecx

; 2372 : DEF_QUERY(CTBLRecallMon, _T("SELECT dwID, wMonID, wPetID, dwATTR, bLevel, dwHP, dwMP, bSkillLevel, wPosX, wPosY, wPosZ, dwTime FROM TRECALLMONTABLE WHERE dwOwnerID=?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0IJ@PKABGAEA@SELECT?5dwID?0?5wMonID?0?5wPetID?0?5dwA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T167979[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLRecallMon@@6B@
  0005e	72 0d		 jb	 SHORT $L168152
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L168152:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L167980:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T168151
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLRecallMon::CTBLRecallMon
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLRecallMon@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLRecallMon@@UAEHXZ PROC NEAR		; CTBLRecallMon::GetNumCol, COMDAT
; _this$ = ecx

; 2374 : BEGIN_COLUMN(13)

  00000	b8 0d 00 00 00	 mov	 eax, 13			; 0000000dH
  00005	c3		 ret	 0
?GetNumCol@CTBLRecallMon@@UAEHXZ ENDP			; CTBLRecallMon::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLRecallMon@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLRecallMon@@UAEFXZ PROC NEAR		; CTBLRecallMon::BindColumns, COMDAT
; _this$ = ecx

; 2374 : BEGIN_COLUMN(13)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2375 : 	COLUMN_ENTRY(m_dwID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L132313
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 32 01 00
	00		 jne	 $L132309
$L132313:

; 2376 : 	COLUMN_ENTRY(m_wMonID)

  00020	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L132314
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 13 01 00
	00		 jne	 $L132309
$L132314:

; 2377 : 	COLUMN_ENTRY(m_wPetID)

  0003f	8d 96 36 0c 00
	00		 lea	 edx, DWORD PTR [esi+3126]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L132315
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 f4 00 00
	00		 jne	 $L132309
$L132315:

; 2378 : 	COLUMN_ENTRY(m_dwATTR)

  0005e	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L132316
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 d5 00 00
	00		 jne	 $L132309
$L132316:

; 2379 : 	COLUMN_ENTRY(m_bLevel)

  0007d	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L132317
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 b6 00 00
	00		 jne	 $L132309
$L132317:

; 2380 : 	COLUMN_ENTRY(m_dwHP)

  0009c	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L132318
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 97 00 00
	00		 jne	 $L132309
$L132318:

; 2381 : 	COLUMN_ENTRY(m_dwMP)

  000bb	8d 86 44 0c 00
	00		 lea	 eax, DWORD PTR [esi+3140]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 06		 je	 SHORT $L132319
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	75 7c		 jne	 SHORT $L132309
$L132319:

; 2382 : 	COLUMN_ENTRY(m_bSkillLevel)

  000d6	8d 8e 48 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3144]
  000dc	51		 push	 ecx
  000dd	6a 08		 push	 8
  000df	8b ce		 mov	 ecx, esi
  000e1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000e6	66 85 c0	 test	 ax, ax
  000e9	74 06		 je	 SHORT $L132320
  000eb	66 3d 01 00	 cmp	 ax, 1
  000ef	75 61		 jne	 SHORT $L132309
$L132320:

; 2383 : 	COLUMN_ENTRY(m_wPosX)

  000f1	8d 96 4a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3146]
  000f7	52		 push	 edx
  000f8	6a 09		 push	 9
  000fa	8b ce		 mov	 ecx, esi
  000fc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00101	66 85 c0	 test	 ax, ax
  00104	74 06		 je	 SHORT $L132321
  00106	66 3d 01 00	 cmp	 ax, 1
  0010a	75 46		 jne	 SHORT $L132309
$L132321:

; 2384 : 	COLUMN_ENTRY(m_wPosY)

  0010c	8d 86 4c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3148]
  00112	50		 push	 eax
  00113	6a 0a		 push	 10			; 0000000aH
  00115	8b ce		 mov	 ecx, esi
  00117	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0011c	66 85 c0	 test	 ax, ax
  0011f	74 06		 je	 SHORT $L132322
  00121	66 3d 01 00	 cmp	 ax, 1
  00125	75 2b		 jne	 SHORT $L132309
$L132322:

; 2385 : 	COLUMN_ENTRY(m_wPosZ)

  00127	8d 8e 4e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3150]
  0012d	51		 push	 ecx
  0012e	6a 0b		 push	 11			; 0000000bH
  00130	8b ce		 mov	 ecx, esi
  00132	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00137	66 85 c0	 test	 ax, ax
  0013a	74 06		 je	 SHORT $L132323
  0013c	66 3d 01 00	 cmp	 ax, 1
  00140	75 10		 jne	 SHORT $L132309
$L132323:

; 2386 : 	COLUMN_ENTRY(m_dwTime)

  00142	8d 96 50 0c 00
	00		 lea	 edx, DWORD PTR [esi+3152]
  00148	52		 push	 edx
  00149	6a 0c		 push	 12			; 0000000cH
  0014b	8b ce		 mov	 ecx, esi
  0014d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L132309:
  00152	5e		 pop	 esi

; 2387 : END_COL()

  00153	c3		 ret	 0
?BindColumns@CTBLRecallMon@@UAEFXZ ENDP			; CTBLRecallMon::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLRecallMon@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLRecallMon@@UAEHXZ PROC NEAR		; CTBLRecallMon::GetNumParam, COMDAT
; _this$ = ecx

; 2389 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLRecallMon@@UAEHXZ ENDP			; CTBLRecallMon::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLRecallMon@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLRecallMon@@UAEFH@Z PROC NEAR	; CTBLRecallMon::BindParameters, COMDAT
; _this$ = ecx

; 2390 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L132329
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L132329:

; 2391 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLRecallMon@@UAEFH@Z ENDP		; CTBLRecallMon::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLRecallMon@@UAE@XZ			; CTBLRecallMon::~CTBLRecallMon
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLRecallMon@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLRecallMon@@UAEPAXI@Z PROC NEAR			; CTBLRecallMon::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLRecallMon@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L168172
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L168172:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLRecallMon@@UAEPAXI@Z ENDP			; CTBLRecallMon::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLRecallMon@@UAE@XZ
_TEXT	SEGMENT
??1CTBLRecallMon@@UAE@XZ PROC NEAR			; CTBLRecallMon::~CTBLRecallMon, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLRecallMon@@UAE@XZ ENDP				; CTBLRecallMon::~CTBLRecallMon
_TEXT	ENDS
PUBLIC	??0CTBLPortalChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLPortalChart::CTBLPortalChart
PUBLIC	?GetNumCol@CTBLPortalChart@@UAEHXZ		; CTBLPortalChart::GetNumCol
PUBLIC	?BindColumns@CTBLPortalChart@@UAEFXZ		; CTBLPortalChart::BindColumns
PUBLIC	??_7CTBLPortalChart@@6B@			; CTBLPortalChart::`vftable'
PUBLIC	??_GCTBLPortalChart@@UAEPAXI@Z			; CTBLPortalChart::`scalar deleting destructor'
PUBLIC	??_C@_0FD@HIEHBJGJ@SELECT?5?7wPortalID?0?5?7bCountry?0?5?7w@ ; `string'
EXTRN	??_ECTBLPortalChart@@UAEPAXI@Z:NEAR		; CTBLPortalChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T168355 DD	0ffffffffH
	DD	FLAT:$L168181
$T168352 DD	019930520H
	DD	01H
	DD	FLAT:$T168355
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FD@HIEHBJGJ@SELECT?5?7wPortalID?0?5?7bCountry?0?5?7w@
CONST	SEGMENT
??_C@_0FD@HIEHBJGJ@SELECT?5?7wPortalID?0?5?7bCountry?0?5?7w@ DB 'SELECT ', 09H
	DB	'wPortalID, ', 09H, 'bCountry, ', 09H, 'wLocalID, ', 09H, 'wSp'
	DB	'awnID, ', 09H, 'bCondition ', 09H, 'FROM TPORTALCHART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLPortalChart@@6B@
CONST	SEGMENT
??_7CTBLPortalChart@@6B@ DD FLAT:??_ECTBLPortalChart@@UAEPAXI@Z ; CTBLPortalChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLPortalChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLPortalChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLPortalChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T168180 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLPortalChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLPortalChart::CTBLPortalChart, COMDAT
; _this$ = ecx

; 2408 : 	FROM TPORTALCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLPortalChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FD@HIEHBJGJ@SELECT?5?7wPortalID?0?5?7bCountry?0?5?7w@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T168180[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLPortalChart@@6B@
  0005e	72 0d		 jb	 SHORT $L168353
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L168353:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L168181:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLPortalChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T168352
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLPortalChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLPortalChart::CTBLPortalChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLPortalChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLPortalChart@@UAEHXZ PROC NEAR		; CTBLPortalChart::GetNumCol, COMDAT
; _this$ = ecx

; 2410 : BEGIN_COLUMN(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumCol@CTBLPortalChart@@UAEHXZ ENDP			; CTBLPortalChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLPortalChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLPortalChart@@UAEFXZ PROC NEAR		; CTBLPortalChart::BindColumns, COMDAT
; _this$ = ecx

; 2410 : BEGIN_COLUMN(5)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2411 : 	COLUMN_ENTRY(m_wPortalID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L132379
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 61		 jne	 SHORT $L132375
$L132379:

; 2412 : 	COLUMN_ENTRY(m_bCountry)

  0001c	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L132380
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 46		 jne	 SHORT $L132375
$L132380:

; 2413 : 	COLUMN_ENTRY(m_wLocalID)

  00037	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L132381
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 2b		 jne	 SHORT $L132375
$L132381:

; 2414 : 	COLUMN_ENTRY(m_wSpawnID)

  00052	8d 86 32 0c 00
	00		 lea	 eax, DWORD PTR [esi+3122]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00062	66 85 c0	 test	 ax, ax
  00065	74 06		 je	 SHORT $L132382
  00067	66 3d 01 00	 cmp	 ax, 1
  0006b	75 10		 jne	 SHORT $L132375
$L132382:

; 2415 : 	COLUMN_ENTRY(m_bCondition)

  0006d	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00073	51		 push	 ecx
  00074	6a 05		 push	 5
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L132375:
  0007d	5e		 pop	 esi

; 2416 : END_COL()

  0007e	c3		 ret	 0
?BindColumns@CTBLPortalChart@@UAEFXZ ENDP		; CTBLPortalChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLPortalChart@@UAE@XZ			; CTBLPortalChart::~CTBLPortalChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLPortalChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLPortalChart@@UAEPAXI@Z PROC NEAR		; CTBLPortalChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLPortalChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L168367
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L168367:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLPortalChart@@UAEPAXI@Z ENDP			; CTBLPortalChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLPortalChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLPortalChart@@UAE@XZ PROC NEAR			; CTBLPortalChart::~CTBLPortalChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLPortalChart@@UAE@XZ ENDP				; CTBLPortalChart::~CTBLPortalChart
_TEXT	ENDS
PUBLIC	??0CTBLDestinationChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLDestinationChart::CTBLDestinationChart
PUBLIC	?GetNumCol@CTBLDestinationChart@@UAEHXZ		; CTBLDestinationChart::GetNumCol
PUBLIC	?BindColumns@CTBLDestinationChart@@UAEFXZ	; CTBLDestinationChart::BindColumns
PUBLIC	?GetNumParam@CTBLDestinationChart@@UAEHXZ	; CTBLDestinationChart::GetNumParam
PUBLIC	?BindParameters@CTBLDestinationChart@@UAEFH@Z	; CTBLDestinationChart::BindParameters
PUBLIC	??_7CTBLDestinationChart@@6B@			; CTBLDestinationChart::`vftable'
PUBLIC	??_GCTBLDestinationChart@@UAEPAXI@Z		; CTBLDestinationChart::`scalar deleting destructor'
PUBLIC	??_C@_0KO@IECIEPCP@SELECT?5?7wDestID?0?5?7dwPrice?0?5?7bEna@ ; `string'
EXTRN	??_ECTBLDestinationChart@@UAEPAXI@Z:NEAR	; CTBLDestinationChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T168550 DD	0ffffffffH
	DD	FLAT:$L168376
$T168547 DD	019930520H
	DD	01H
	DD	FLAT:$T168550
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0KO@IECIEPCP@SELECT?5?7wDestID?0?5?7dwPrice?0?5?7bEna@
CONST	SEGMENT
??_C@_0KO@IECIEPCP@SELECT?5?7wDestID?0?5?7dwPrice?0?5?7bEna@ DB 'SELECT ', 09H
	DB	'wDestID, ', 09H, 'dwPrice, ', 09H, 'bEnable, ', 09H, 'bCondit'
	DB	'ion1, ', 09H, 'dwConditionID1, ', 09H, 'bCondition2, ', 09H, 'd'
	DB	'wConditionID2, ', 09H, 'bCondition3, ', 09H, 'dwConditionID3 '
	DB	09H, 'FROM TDESTINATIONCHART ', 09H, 'WHERE wPortalID = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLDestinationChart@@6B@
CONST	SEGMENT
??_7CTBLDestinationChart@@6B@ DD FLAT:??_ECTBLDestinationChart@@UAEPAXI@Z ; CTBLDestinationChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLDestinationChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLDestinationChart@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLDestinationChart@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLDestinationChart@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLDestinationChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T168375 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLDestinationChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLDestinationChart::CTBLDestinationChart, COMDAT
; _this$ = ecx

; 2439 : 	WHERE wPortalID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLDestinationChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0KO@IECIEPCP@SELECT?5?7wDestID?0?5?7dwPrice?0?5?7bEna@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T168375[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLDestinationChart@@6B@
  0005e	72 0d		 jb	 SHORT $L168548
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L168548:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L168376:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLDestinationChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T168547
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLDestinationChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLDestinationChart::CTBLDestinationChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLDestinationChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLDestinationChart@@UAEHXZ PROC NEAR	; CTBLDestinationChart::GetNumCol, COMDAT
; _this$ = ecx

; 2441 : BEGIN_COLUMN(9)

  00000	b8 09 00 00 00	 mov	 eax, 9
  00005	c3		 ret	 0
?GetNumCol@CTBLDestinationChart@@UAEHXZ ENDP		; CTBLDestinationChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLDestinationChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLDestinationChart@@UAEFXZ PROC NEAR	; CTBLDestinationChart::BindColumns, COMDAT
; _this$ = ecx

; 2441 : BEGIN_COLUMN(9)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2442 : 	COLUMN_ENTRY(m_wDestID)	

  00003	8d 86 2e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3118]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L132432
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 85 00 00
	00		 jne	 $L132428
$L132432:

; 2443 : 	COLUMN_ENTRY(m_dwPrice)

  00020	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 06		 je	 SHORT $L132433
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	75 6a		 jne	 SHORT $L132428
$L132433:
  0003b	57		 push	 edi

; 2444 : 	COLUMN_ENTRY(m_bEnable)

  0003c	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00042	52		 push	 edx
  00043	6a 03		 push	 3
  00045	8b ce		 mov	 ecx, esi
  00047	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004c	66 85 c0	 test	 ax, ax
  0004f	bf 04 00 00 00	 mov	 edi, 4
  00054	74 06		 je	 SHORT $L132434
  00056	66 3d 01 00	 cmp	 ax, 1
  0005a	75 48		 jne	 SHORT $L168563
$L132434:
  0005c	53		 push	 ebx

; 2445 : 	for(BYTE i = 0; i < PORTALCONDITION_COUNT; i++)

  0005d	32 db		 xor	 bl, bl
  0005f	55		 push	 ebp
$L132436:

; 2446 : 	{
; 2447 : 		COLUMN_ENTRY(m_bCondition[i])

  00060	0f b6 eb	 movzx	 ebp, bl
  00063	8d 84 2e 35 0c
	00 00		 lea	 eax, DWORD PTR [esi+ebp+3125]
  0006a	50		 push	 eax
  0006b	57		 push	 edi
  0006c	8b ce		 mov	 ecx, esi
  0006e	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00073	47		 inc	 edi
  00074	66 85 c0	 test	 ax, ax
  00077	74 06		 je	 SHORT $L132439
  00079	66 3d 01 00	 cmp	 ax, 1
  0007d	75 23		 jne	 SHORT $L168565
$L132439:

; 2448 : 		COLUMN_ENTRY(m_dwConditionID[i])

  0007f	8d 8c ae 38 0c
	00 00		 lea	 ecx, DWORD PTR [esi+ebp*4+3128]
  00086	51		 push	 ecx
  00087	57		 push	 edi
  00088	8b ce		 mov	 ecx, esi
  0008a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0008f	47		 inc	 edi
  00090	66 85 c0	 test	 ax, ax
  00093	74 06		 je	 SHORT $L132437
  00095	66 3d 01 00	 cmp	 ax, 1
  00099	75 07		 jne	 SHORT $L168565
$L132437:

; 2445 : 	for(BYTE i = 0; i < PORTALCONDITION_COUNT; i++)

  0009b	fe c3		 inc	 bl
  0009d	80 fb 03	 cmp	 bl, 3
  000a0	72 be		 jb	 SHORT $L132436
$L168565:
  000a2	5d		 pop	 ebp
  000a3	5b		 pop	 ebx
$L168563:
  000a4	5f		 pop	 edi
$L132428:
  000a5	5e		 pop	 esi

; 2449 : 	}
; 2450 : END_COL()

  000a6	c3		 ret	 0
?BindColumns@CTBLDestinationChart@@UAEFXZ ENDP		; CTBLDestinationChart::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLDestinationChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLDestinationChart@@UAEHXZ PROC NEAR	; CTBLDestinationChart::GetNumParam, COMDAT
; _this$ = ecx

; 2452 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLDestinationChart@@UAEHXZ ENDP		; CTBLDestinationChart::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLDestinationChart@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLDestinationChart@@UAEFH@Z PROC NEAR	; CTBLDestinationChart::BindParameters, COMDAT
; _this$ = ecx

; 2453 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wPortalID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L132445
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L132445:

; 2454 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLDestinationChart@@UAEFH@Z ENDP	; CTBLDestinationChart::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLDestinationChart@@UAE@XZ			; CTBLDestinationChart::~CTBLDestinationChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLDestinationChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLDestinationChart@@UAEPAXI@Z PROC NEAR		; CTBLDestinationChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLDestinationChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L168575
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L168575:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLDestinationChart@@UAEPAXI@Z ENDP		; CTBLDestinationChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLDestinationChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLDestinationChart@@UAE@XZ PROC NEAR		; CTBLDestinationChart::~CTBLDestinationChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLDestinationChart@@UAE@XZ ENDP			; CTBLDestinationChart::~CTBLDestinationChart
_TEXT	ENDS
PUBLIC	??0CTBLGateChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGateChart::CTBLGateChart
PUBLIC	?GetNumCol@CTBLGateChart@@UAEHXZ		; CTBLGateChart::GetNumCol
PUBLIC	?BindColumns@CTBLGateChart@@UAEFXZ		; CTBLGateChart::BindColumns
PUBLIC	??_7CTBLGateChart@@6B@				; CTBLGateChart::`vftable'
PUBLIC	??_GCTBLGateChart@@UAEPAXI@Z			; CTBLGateChart::`scalar deleting destructor'
PUBLIC	??_C@_0FA@FJFDDCLI@SELECT?5dwGateID?0?5dwSwitchID?0?5bTy@ ; `string'
EXTRN	??_ECTBLGateChart@@UAEPAXI@Z:NEAR		; CTBLGateChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T168758 DD	0ffffffffH
	DD	FLAT:$L168584
$T168755 DD	019930520H
	DD	01H
	DD	FLAT:$T168758
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FA@FJFDDCLI@SELECT?5dwGateID?0?5dwSwitchID?0?5bTy@
CONST	SEGMENT
??_C@_0FA@FJFDDCLI@SELECT?5dwGateID?0?5dwSwitchID?0?5bTy@ DB 'SELECT dwGa'
	DB	'teID, dwSwitchID, bType, wMapID, wPosX, wPosY, wPosZ FROM TGA'
	DB	'TECHART', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLGateChart@@6B@
CONST	SEGMENT
??_7CTBLGateChart@@6B@ DD FLAT:??_ECTBLGateChart@@UAEPAXI@Z ; CTBLGateChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLGateChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLGateChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLGateChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T168583 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLGateChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLGateChart::CTBLGateChart, COMDAT
; _this$ = ecx

; 2467 : DEF_QUERY(CTBLGateChart, _T("SELECT dwGateID, dwSwitchID, bType, wMapID, wPosX, wPosY, wPosZ FROM TGATECHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLGateChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FA@FJFDDCLI@SELECT?5dwGateID?0?5dwSwitchID?0?5bTy@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T168583[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLGateChart@@6B@
  0005e	72 0d		 jb	 SHORT $L168756
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L168756:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L168584:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLGateChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T168755
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLGateChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLGateChart::CTBLGateChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLGateChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLGateChart@@UAEHXZ PROC NEAR		; CTBLGateChart::GetNumCol, COMDAT
; _this$ = ecx

; 2468 : BEGIN_COLUMN(7)

  00000	b8 07 00 00 00	 mov	 eax, 7
  00005	c3		 ret	 0
?GetNumCol@CTBLGateChart@@UAEHXZ ENDP			; CTBLGateChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGateChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLGateChart@@UAEFXZ PROC NEAR		; CTBLGateChart::BindColumns, COMDAT
; _this$ = ecx

; 2468 : BEGIN_COLUMN(7)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2469 : 	COLUMN_ENTRY(m_dwGateID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L132497
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 97 00 00
	00		 jne	 $L132493
$L132497:

; 2470 : 	COLUMN_ENTRY(m_dwSwitchID)

  00020	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 06		 je	 SHORT $L132498
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	75 7c		 jne	 SHORT $L132493
$L132498:

; 2471 : 	COLUMN_ENTRY(m_bType)

  0003b	8d 96 3c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3132]
  00041	52		 push	 edx
  00042	6a 03		 push	 3
  00044	8b ce		 mov	 ecx, esi
  00046	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004b	66 85 c0	 test	 ax, ax
  0004e	74 06		 je	 SHORT $L132499
  00050	66 3d 01 00	 cmp	 ax, 1
  00054	75 61		 jne	 SHORT $L132493
$L132499:

; 2472 : 	COLUMN_ENTRY(m_wMapID)

  00056	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  0005c	50		 push	 eax
  0005d	6a 04		 push	 4
  0005f	8b ce		 mov	 ecx, esi
  00061	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00066	66 85 c0	 test	 ax, ax
  00069	74 06		 je	 SHORT $L132500
  0006b	66 3d 01 00	 cmp	 ax, 1
  0006f	75 46		 jne	 SHORT $L132493
$L132500:

; 2473 : 	COLUMN_ENTRY(m_wPosX)

  00071	8d 8e 36 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3126]
  00077	51		 push	 ecx
  00078	6a 05		 push	 5
  0007a	8b ce		 mov	 ecx, esi
  0007c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00081	66 85 c0	 test	 ax, ax
  00084	74 06		 je	 SHORT $L132501
  00086	66 3d 01 00	 cmp	 ax, 1
  0008a	75 2b		 jne	 SHORT $L132493
$L132501:

; 2474 : 	COLUMN_ENTRY(m_wPosY)

  0008c	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  00092	52		 push	 edx
  00093	6a 06		 push	 6
  00095	8b ce		 mov	 ecx, esi
  00097	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0009c	66 85 c0	 test	 ax, ax
  0009f	74 06		 je	 SHORT $L132502
  000a1	66 3d 01 00	 cmp	 ax, 1
  000a5	75 10		 jne	 SHORT $L132493
$L132502:

; 2475 : 	COLUMN_ENTRY(m_wPosZ)

  000a7	8d 86 3a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3130]
  000ad	50		 push	 eax
  000ae	6a 07		 push	 7
  000b0	8b ce		 mov	 ecx, esi
  000b2	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
$L132493:
  000b7	5e		 pop	 esi

; 2476 : END_COL()

  000b8	c3		 ret	 0
?BindColumns@CTBLGateChart@@UAEFXZ ENDP			; CTBLGateChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLGateChart@@UAE@XZ			; CTBLGateChart::~CTBLGateChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLGateChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLGateChart@@UAEPAXI@Z PROC NEAR			; CTBLGateChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLGateChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L168770
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L168770:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLGateChart@@UAEPAXI@Z ENDP			; CTBLGateChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLGateChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLGateChart@@UAE@XZ PROC NEAR			; CTBLGateChart::~CTBLGateChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLGateChart@@UAE@XZ ENDP				; CTBLGateChart::~CTBLGateChart
_TEXT	ENDS
PUBLIC	??0CTBLSwitchChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSwitchChart::CTBLSwitchChart
PUBLIC	?GetNumCol@CTBLSwitchChart@@UAEHXZ		; CTBLSwitchChart::GetNumCol
PUBLIC	?BindColumns@CTBLSwitchChart@@UAEFXZ		; CTBLSwitchChart::BindColumns
PUBLIC	??_7CTBLSwitchChart@@6B@			; CTBLSwitchChart::`vftable'
PUBLIC	??_GCTBLSwitchChart@@UAEPAXI@Z			; CTBLSwitchChart::`scalar deleting destructor'
PUBLIC	??_C@_0HA@FJGAKNJP@SELECT?5dwSwitchID?0?5wMapID?0?5wPosX@ ; `string'
EXTRN	??_ECTBLSwitchChart@@UAEPAXI@Z:NEAR		; CTBLSwitchChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T168953 DD	0ffffffffH
	DD	FLAT:$L168779
$T168950 DD	019930520H
	DD	01H
	DD	FLAT:$T168953
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0HA@FJGAKNJP@SELECT?5dwSwitchID?0?5wMapID?0?5wPosX@
CONST	SEGMENT
??_C@_0HA@FJGAKNJP@SELECT?5dwSwitchID?0?5wMapID?0?5wPosX@ DB 'SELECT dwSw'
	DB	'itchID, wMapID, wPosX, wPosY, wPosZ, bStart, bLockOnOpen, bLo'
	DB	'ckOnClose, dwDuration FROM TSWITCHCHART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLSwitchChart@@6B@
CONST	SEGMENT
??_7CTBLSwitchChart@@6B@ DD FLAT:??_ECTBLSwitchChart@@UAEPAXI@Z ; CTBLSwitchChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLSwitchChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLSwitchChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLSwitchChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T168778 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLSwitchChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLSwitchChart::CTBLSwitchChart, COMDAT
; _this$ = ecx

; 2492 : DEF_QUERY(CTBLSwitchChart, _T("SELECT dwSwitchID, wMapID, wPosX, wPosY, wPosZ, bStart, bLockOnOpen, bLockOnClose, dwDuration FROM TSWITCHCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLSwitchChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0HA@FJGAKNJP@SELECT?5dwSwitchID?0?5wMapID?0?5wPosX@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T168778[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLSwitchChart@@6B@
  0005e	72 0d		 jb	 SHORT $L168951
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L168951:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L168779:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLSwitchChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T168950
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLSwitchChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLSwitchChart::CTBLSwitchChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLSwitchChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLSwitchChart@@UAEHXZ PROC NEAR		; CTBLSwitchChart::GetNumCol, COMDAT
; _this$ = ecx

; 2494 : BEGIN_COLUMN(9)

  00000	b8 09 00 00 00	 mov	 eax, 9
  00005	c3		 ret	 0
?GetNumCol@CTBLSwitchChart@@UAEHXZ ENDP			; CTBLSwitchChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSwitchChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLSwitchChart@@UAEFXZ PROC NEAR		; CTBLSwitchChart::BindColumns, COMDAT
; _this$ = ecx

; 2494 : BEGIN_COLUMN(9)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2495 : 	COLUMN_ENTRY(m_dwSwitchID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L132552
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 d5 00 00
	00		 jne	 $L132548
$L132552:

; 2496 : 	COLUMN_ENTRY(m_wMapID)

  00020	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L132553
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 b6 00 00
	00		 jne	 $L132548
$L132553:

; 2497 : 	COLUMN_ENTRY(m_wPosX)

  0003f	8d 96 32 0c 00
	00		 lea	 edx, DWORD PTR [esi+3122]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L132554
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 97 00 00
	00		 jne	 $L132548
$L132554:

; 2498 : 	COLUMN_ENTRY(m_wPosY)

  0005e	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 06		 je	 SHORT $L132555
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	75 7c		 jne	 SHORT $L132548
$L132555:

; 2499 : 	COLUMN_ENTRY(m_wPosZ)

  00079	8d 8e 36 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3126]
  0007f	51		 push	 ecx
  00080	6a 05		 push	 5
  00082	8b ce		 mov	 ecx, esi
  00084	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00089	66 85 c0	 test	 ax, ax
  0008c	74 06		 je	 SHORT $L132556
  0008e	66 3d 01 00	 cmp	 ax, 1
  00092	75 61		 jne	 SHORT $L132548
$L132556:

; 2500 : 	COLUMN_ENTRY(m_bOpen)

  00094	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  0009a	52		 push	 edx
  0009b	6a 06		 push	 6
  0009d	8b ce		 mov	 ecx, esi
  0009f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000a4	66 85 c0	 test	 ax, ax
  000a7	74 06		 je	 SHORT $L132557
  000a9	66 3d 01 00	 cmp	 ax, 1
  000ad	75 46		 jne	 SHORT $L132548
$L132557:

; 2501 : 	COLUMN_ENTRY(m_bLockOnOpen)

  000af	8d 86 39 0c 00
	00		 lea	 eax, DWORD PTR [esi+3129]
  000b5	50		 push	 eax
  000b6	6a 07		 push	 7
  000b8	8b ce		 mov	 ecx, esi
  000ba	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000bf	66 85 c0	 test	 ax, ax
  000c2	74 06		 je	 SHORT $L132558
  000c4	66 3d 01 00	 cmp	 ax, 1
  000c8	75 2b		 jne	 SHORT $L132548
$L132558:

; 2502 : 	COLUMN_ENTRY(m_bLockOnClose)

  000ca	8d 8e 3a 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3130]
  000d0	51		 push	 ecx
  000d1	6a 08		 push	 8
  000d3	8b ce		 mov	 ecx, esi
  000d5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000da	66 85 c0	 test	 ax, ax
  000dd	74 06		 je	 SHORT $L132559
  000df	66 3d 01 00	 cmp	 ax, 1
  000e3	75 10		 jne	 SHORT $L132548
$L132559:

; 2503 : 	COLUMN_ENTRY(m_dwDuration)

  000e5	8d 96 3c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3132]
  000eb	52		 push	 edx
  000ec	6a 09		 push	 9
  000ee	8b ce		 mov	 ecx, esi
  000f0	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L132548:
  000f5	5e		 pop	 esi

; 2504 : END_COL()

  000f6	c3		 ret	 0
?BindColumns@CTBLSwitchChart@@UAEFXZ ENDP		; CTBLSwitchChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLSwitchChart@@UAE@XZ			; CTBLSwitchChart::~CTBLSwitchChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLSwitchChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLSwitchChart@@UAEPAXI@Z PROC NEAR		; CTBLSwitchChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLSwitchChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L168965
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L168965:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLSwitchChart@@UAEPAXI@Z ENDP			; CTBLSwitchChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLSwitchChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLSwitchChart@@UAE@XZ PROC NEAR			; CTBLSwitchChart::~CTBLSwitchChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLSwitchChart@@UAE@XZ ENDP				; CTBLSwitchChart::~CTBLSwitchChart
_TEXT	ENDS
PUBLIC	??0CTBLOperatorChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLOperatorChart::CTBLOperatorChart
PUBLIC	?GetNumCol@CTBLOperatorChart@@UAEHXZ		; CTBLOperatorChart::GetNumCol
PUBLIC	?BindColumns@CTBLOperatorChart@@UAEFXZ		; CTBLOperatorChart::BindColumns
PUBLIC	??_7CTBLOperatorChart@@6B@			; CTBLOperatorChart::`vftable'
PUBLIC	??_GCTBLOperatorChart@@UAEPAXI@Z		; CTBLOperatorChart::`scalar deleting destructor'
PUBLIC	??_C@_0CI@BMBMLPNP@SELECT?5dwOperatorID?5FROM?5TOPERAT@ ; `string'
EXTRN	??_ECTBLOperatorChart@@UAEPAXI@Z:NEAR		; CTBLOperatorChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T169148 DD	0ffffffffH
	DD	FLAT:$L168974
$T169145 DD	019930520H
	DD	01H
	DD	FLAT:$T169148
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CI@BMBMLPNP@SELECT?5dwOperatorID?5FROM?5TOPERAT@
CONST	SEGMENT
??_C@_0CI@BMBMLPNP@SELECT?5dwOperatorID?5FROM?5TOPERAT@ DB 'SELECT dwOper'
	DB	'atorID FROM TOPERATORTABLE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CTBLOperatorChart@@6B@
CONST	SEGMENT
??_7CTBLOperatorChart@@6B@ DD FLAT:??_ECTBLOperatorChart@@UAEPAXI@Z ; CTBLOperatorChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLOperatorChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLOperatorChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLOperatorChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T168973 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLOperatorChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLOperatorChart::CTBLOperatorChart, COMDAT
; _this$ = ecx

; 2512 : DEF_QUERY(CTBLOperatorChart, _T("SELECT dwOperatorID FROM TOPERATORTABLE"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLOperatorChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CI@BMBMLPNP@SELECT?5dwOperatorID?5FROM?5TOPERAT@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T168973[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLOperatorChart@@6B@
  0005e	72 0d		 jb	 SHORT $L169146
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L169146:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L168974:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLOperatorChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T169145
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLOperatorChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLOperatorChart::CTBLOperatorChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLOperatorChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLOperatorChart@@UAEHXZ PROC NEAR		; CTBLOperatorChart::GetNumCol, COMDAT
; _this$ = ecx

; 2514 : BEGIN_COLUMN(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumCol@CTBLOperatorChart@@UAEHXZ ENDP		; CTBLOperatorChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLOperatorChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLOperatorChart@@UAEFXZ PROC NEAR	; CTBLOperatorChart::BindColumns, COMDAT
; _this$ = ecx

; 2515 : 	COLUMN_ENTRY(m_dwOperator)

  00000	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00006	50		 push	 eax
  00007	6a 01		 push	 1
  00009	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol

; 2516 : END_COL()

  0000e	c3		 ret	 0
?BindColumns@CTBLOperatorChart@@UAEFXZ ENDP		; CTBLOperatorChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLOperatorChart@@UAE@XZ			; CTBLOperatorChart::~CTBLOperatorChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLOperatorChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLOperatorChart@@UAEPAXI@Z PROC NEAR		; CTBLOperatorChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLOperatorChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L169160
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L169160:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLOperatorChart@@UAEPAXI@Z ENDP			; CTBLOperatorChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLOperatorChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLOperatorChart@@UAE@XZ PROC NEAR			; CTBLOperatorChart::~CTBLOperatorChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLOperatorChart@@UAE@XZ ENDP			; CTBLOperatorChart::~CTBLOperatorChart
_TEXT	ENDS
PUBLIC	??0CTBLPetTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLPetTable::CTBLPetTable
PUBLIC	?GetNumCol@CTBLPetTable@@UAEHXZ			; CTBLPetTable::GetNumCol
PUBLIC	?BindColumns@CTBLPetTable@@UAEFXZ		; CTBLPetTable::BindColumns
PUBLIC	?GetNumParam@CTBLPetTable@@UAEHXZ		; CTBLPetTable::GetNumParam
PUBLIC	?BindParameters@CTBLPetTable@@UAEFH@Z		; CTBLPetTable::BindParameters
PUBLIC	??_7CTBLPetTable@@6B@				; CTBLPetTable::`vftable'
PUBLIC	??_GCTBLPetTable@@UAEPAXI@Z			; CTBLPetTable::`scalar deleting destructor'
PUBLIC	??_C@_0EB@HKCHJAFD@SELECT?5wPetID?0?5szName?0?5timeUse?5F@ ; `string'
EXTRN	??_ECTBLPetTable@@UAEPAXI@Z:NEAR		; CTBLPetTable::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T169343 DD	0ffffffffH
	DD	FLAT:$L169169
$T169340 DD	019930520H
	DD	01H
	DD	FLAT:$T169343
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EB@HKCHJAFD@SELECT?5wPetID?0?5szName?0?5timeUse?5F@
CONST	SEGMENT
??_C@_0EB@HKCHJAFD@SELECT?5wPetID?0?5szName?0?5timeUse?5F@ DB 'SELECT wPe'
	DB	'tID, szName, timeUse FROM TPETTABLE WHERE dwUserID = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLPetTable@@6B@
CONST	SEGMENT
??_7CTBLPetTable@@6B@ DD FLAT:??_ECTBLPetTable@@UAEPAXI@Z ; CTBLPetTable::`vftable'
	DD	FLAT:?GetNumCol@CTBLPetTable@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLPetTable@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLPetTable@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLPetTable@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLPetTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T169168 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLPetTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLPetTable::CTBLPetTable, COMDAT
; _this$ = ecx

; 2527 : DEF_QUERY(CTBLPetTable, _T("SELECT wPetID, szName, timeUse FROM TPETTABLE WHERE dwUserID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLPetTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EB@HKCHJAFD@SELECT?5wPetID?0?5szName?0?5timeUse?5F@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T169168[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLPetTable@@6B@
  0005e	72 0d		 jb	 SHORT $L169341
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L169341:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L169169:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLPetTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T169340
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLPetTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLPetTable::CTBLPetTable
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLPetTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLPetTable@@UAEHXZ PROC NEAR		; CTBLPetTable::GetNumCol, COMDAT
; _this$ = ecx

; 2529 : BEGIN_COLUMN(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumCol@CTBLPetTable@@UAEHXZ ENDP			; CTBLPetTable::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLPetTable@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLPetTable@@UAEFXZ PROC NEAR		; CTBLPetTable::BindColumns, COMDAT
; _this$ = ecx

; 2529 : BEGIN_COLUMN(3)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2530 : 	COLUMN_ENTRY(m_wPetID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L132648
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 2d		 jne	 SHORT $L132644
$L132648:

; 2531 : 	COLUMN_ENTRY_STR(m_szName)

  0001c	6a 33		 push	 51			; 00000033H
  0001e	8d 8e 32 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3122]
  00024	51		 push	 ecx
  00025	6a 02		 push	 2
  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  0002e	66 85 c0	 test	 ax, ax
  00031	74 06		 je	 SHORT $L132649
  00033	66 3d 01 00	 cmp	 ax, 1
  00037	75 10		 jne	 SHORT $L132644
$L132649:

; 2532 : 	COLUMN_ENTRY(m_timeUse)

  00039	8d 96 68 0c 00
	00		 lea	 edx, DWORD PTR [esi+3176]
  0003f	52		 push	 edx
  00040	6a 03		 push	 3
  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
$L132644:
  00049	5e		 pop	 esi

; 2533 : END_COL()

  0004a	c3		 ret	 0
?BindColumns@CTBLPetTable@@UAEFXZ ENDP			; CTBLPetTable::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLPetTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLPetTable@@UAEHXZ PROC NEAR		; CTBLPetTable::GetNumParam, COMDAT
; _this$ = ecx

; 2535 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLPetTable@@UAEHXZ ENDP			; CTBLPetTable::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLPetTable@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLPetTable@@UAEFH@Z PROC NEAR		; CTBLPetTable::BindParameters, COMDAT
; _this$ = ecx

; 2536 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwUserID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L132655
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L132655:

; 2537 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLPetTable@@UAEFH@Z ENDP		; CTBLPetTable::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLPetTable@@UAE@XZ				; CTBLPetTable::~CTBLPetTable
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLPetTable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLPetTable@@UAEPAXI@Z PROC NEAR			; CTBLPetTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLPetTable@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L169361
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L169361:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLPetTable@@UAEPAXI@Z ENDP			; CTBLPetTable::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLPetTable@@UAE@XZ
_TEXT	SEGMENT
??1CTBLPetTable@@UAE@XZ PROC NEAR			; CTBLPetTable::~CTBLPetTable, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLPetTable@@UAE@XZ ENDP				; CTBLPetTable::~CTBLPetTable
_TEXT	ENDS
PUBLIC	??0CTBLMonAttr@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonAttr::CTBLMonAttr
PUBLIC	?GetNumCol@CTBLMonAttr@@UAEHXZ			; CTBLMonAttr::GetNumCol
PUBLIC	?BindColumns@CTBLMonAttr@@UAEFXZ		; CTBLMonAttr::BindColumns
PUBLIC	??_7CTBLMonAttr@@6B@				; CTBLMonAttr::`vftable'
PUBLIC	??_GCTBLMonAttr@@UAEPAXI@Z			; CTBLMonAttr::`scalar deleting destructor'
PUBLIC	??_C@_0NG@DCEOMPEH@SELECT?5?7wID?0?5?7bLevel?0?5?7wAP?0?5?7wLA@ ; `string'
EXTRN	??_ECTBLMonAttr@@UAEPAXI@Z:NEAR			; CTBLMonAttr::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T169544 DD	0ffffffffH
	DD	FLAT:$L169370
$T169541 DD	019930520H
	DD	01H
	DD	FLAT:$T169544
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0NG@DCEOMPEH@SELECT?5?7wID?0?5?7bLevel?0?5?7wAP?0?5?7wLA@
CONST	SEGMENT
??_C@_0NG@DCEOMPEH@SELECT?5?7wID?0?5?7bLevel?0?5?7wAP?0?5?7wLA@ DB 'SELEC'
	DB	'T ', 09H, 'wID, ', 09H, 'bLevel, ', 09H, 'wAP, ', 09H, 'wLAP,'
	DB	' ', 09H, 'dwAtkSpeed, ', 09H, 'wAL, ', 09H, 'wMAL, ', 09H, 'w'
	DB	'DL, ', 09H, 'wMDL, ', 09H, 'bCriticalPP, ', 09H, 'dwMaxHP, ', 09H
	DB	'bHPRecover, ', 09H, 'wMAP, ', 09H, 'bCriticalMP, ', 09H, 'dwM'
	DB	'axMP, ', 09H, 'bMPRecover, ', 09H, 'wDP, ', 09H, 'wMDP, ', 09H
	DB	'wMinWAP, ', 09H, 'wMaxWAP, ', 09H, 'wWDP ', 09H, 'FROM TMONAT'
	DB	'TRCHART', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLMonAttr@@6B@
CONST	SEGMENT
??_7CTBLMonAttr@@6B@ DD FLAT:??_ECTBLMonAttr@@UAEPAXI@Z	; CTBLMonAttr::`vftable'
	DD	FLAT:?GetNumCol@CTBLMonAttr@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLMonAttr@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLMonAttr@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T169369 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLMonAttr@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLMonAttr::CTBLMonAttr, COMDAT
; _this$ = ecx

; 2587 : 	FROM TMONATTRCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLMonAttr@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0NG@DCEOMPEH@SELECT?5?7wID?0?5?7bLevel?0?5?7wAP?0?5?7wLA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T169369[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLMonAttr@@6B@
  0005e	72 0d		 jb	 SHORT $L169542
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L169542:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L169370:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLMonAttr@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T169541
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLMonAttr@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLMonAttr::CTBLMonAttr
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLMonAttr@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLMonAttr@@UAEHXZ PROC NEAR		; CTBLMonAttr::GetNumCol, COMDAT
; _this$ = ecx

; 2589 : BEGIN_COLUMN(21)

  00000	b8 15 00 00 00	 mov	 eax, 21			; 00000015H
  00005	c3		 ret	 0
?GetNumCol@CTBLMonAttr@@UAEHXZ ENDP			; CTBLMonAttr::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonAttr@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLMonAttr@@UAEFXZ PROC NEAR		; CTBLMonAttr::BindColumns, COMDAT
; _this$ = ecx

; 2589 : BEGIN_COLUMN(21)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2590 : 	COLUMN_ENTRY(m_wID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L132721
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 49 02 00
	00		 jne	 $L132717
$L132721:

; 2591 : 	COLUMN_ENTRY(m_bLevel)

  00020	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L132722
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 2a 02 00
	00		 jne	 $L132717
$L132722:

; 2592 : 	COLUMN_ENTRY(m_wAP)

  0003f	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L132723
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 0b 02 00
	00		 jne	 $L132717
$L132723:

; 2593 : 	COLUMN_ENTRY(m_wLAP)

  0005e	8d 86 32 0c 00
	00		 lea	 eax, DWORD PTR [esi+3122]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L132724
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 ec 01 00
	00		 jne	 $L132717
$L132724:

; 2594 : 	COLUMN_ENTRY(m_dwAtkSpeed)

  0007d	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L132725
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 cd 01 00
	00		 jne	 $L132717
$L132725:

; 2595 : 	COLUMN_ENTRY(m_wAL)

  0009c	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L132726
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 ae 01 00
	00		 jne	 $L132717
$L132726:

; 2596 : 	COLUMN_ENTRY(m_wMAL)

  000bb	8d 86 3a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3130]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 0a		 je	 SHORT $L132727
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	0f 85 8f 01 00
	00		 jne	 $L132717
$L132727:

; 2597 : 	COLUMN_ENTRY(m_wDL)

  000da	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  000e0	51		 push	 ecx
  000e1	6a 08		 push	 8
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000ea	66 85 c0	 test	 ax, ax
  000ed	74 0a		 je	 SHORT $L132728
  000ef	66 3d 01 00	 cmp	 ax, 1
  000f3	0f 85 70 01 00
	00		 jne	 $L132717
$L132728:

; 2598 : 	COLUMN_ENTRY(m_wMDL)

  000f9	8d 96 3e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3134]
  000ff	52		 push	 edx
  00100	6a 09		 push	 9
  00102	8b ce		 mov	 ecx, esi
  00104	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00109	66 85 c0	 test	 ax, ax
  0010c	74 0a		 je	 SHORT $L132729
  0010e	66 3d 01 00	 cmp	 ax, 1
  00112	0f 85 51 01 00
	00		 jne	 $L132717
$L132729:

; 2599 : 	COLUMN_ENTRY(m_bCriticalPP)

  00118	8d 86 40 0c 00
	00		 lea	 eax, DWORD PTR [esi+3136]
  0011e	50		 push	 eax
  0011f	6a 0a		 push	 10			; 0000000aH
  00121	8b ce		 mov	 ecx, esi
  00123	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00128	66 85 c0	 test	 ax, ax
  0012b	74 0a		 je	 SHORT $L132730
  0012d	66 3d 01 00	 cmp	 ax, 1
  00131	0f 85 32 01 00
	00		 jne	 $L132717
$L132730:

; 2600 : 	COLUMN_ENTRY(m_dwMaxHP)

  00137	8d 8e 44 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3140]
  0013d	51		 push	 ecx
  0013e	6a 0b		 push	 11			; 0000000bH
  00140	8b ce		 mov	 ecx, esi
  00142	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00147	66 85 c0	 test	 ax, ax
  0014a	74 0a		 je	 SHORT $L132731
  0014c	66 3d 01 00	 cmp	 ax, 1
  00150	0f 85 13 01 00
	00		 jne	 $L132717
$L132731:

; 2601 : 	COLUMN_ENTRY(m_bHPRecover)

  00156	8d 96 48 0c 00
	00		 lea	 edx, DWORD PTR [esi+3144]
  0015c	52		 push	 edx
  0015d	6a 0c		 push	 12			; 0000000cH
  0015f	8b ce		 mov	 ecx, esi
  00161	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00166	66 85 c0	 test	 ax, ax
  00169	74 0a		 je	 SHORT $L132732
  0016b	66 3d 01 00	 cmp	 ax, 1
  0016f	0f 85 f4 00 00
	00		 jne	 $L132717
$L132732:

; 2602 : 	COLUMN_ENTRY(m_wMAP)

  00175	8d 86 4a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3146]
  0017b	50		 push	 eax
  0017c	6a 0d		 push	 13			; 0000000dH
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00185	66 85 c0	 test	 ax, ax
  00188	74 0a		 je	 SHORT $L132733
  0018a	66 3d 01 00	 cmp	 ax, 1
  0018e	0f 85 d5 00 00
	00		 jne	 $L132717
$L132733:

; 2603 : 	COLUMN_ENTRY(m_bCriticalMP)

  00194	8d 8e 4c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3148]
  0019a	51		 push	 ecx
  0019b	6a 0e		 push	 14			; 0000000eH
  0019d	8b ce		 mov	 ecx, esi
  0019f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001a4	66 85 c0	 test	 ax, ax
  001a7	74 0a		 je	 SHORT $L132734
  001a9	66 3d 01 00	 cmp	 ax, 1
  001ad	0f 85 b6 00 00
	00		 jne	 $L132717
$L132734:

; 2604 : 	COLUMN_ENTRY(m_dwMaxMP)

  001b3	8d 96 50 0c 00
	00		 lea	 edx, DWORD PTR [esi+3152]
  001b9	52		 push	 edx
  001ba	6a 0f		 push	 15			; 0000000fH
  001bc	8b ce		 mov	 ecx, esi
  001be	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  001c3	66 85 c0	 test	 ax, ax
  001c6	74 0a		 je	 SHORT $L132735
  001c8	66 3d 01 00	 cmp	 ax, 1
  001cc	0f 85 97 00 00
	00		 jne	 $L132717
$L132735:

; 2605 : 	COLUMN_ENTRY(m_bMPRecover)

  001d2	8d 86 54 0c 00
	00		 lea	 eax, DWORD PTR [esi+3156]
  001d8	50		 push	 eax
  001d9	6a 10		 push	 16			; 00000010H
  001db	8b ce		 mov	 ecx, esi
  001dd	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001e2	66 85 c0	 test	 ax, ax
  001e5	74 06		 je	 SHORT $L132736
  001e7	66 3d 01 00	 cmp	 ax, 1
  001eb	75 7c		 jne	 SHORT $L132717
$L132736:

; 2606 : 	COLUMN_ENTRY(m_wDP)

  001ed	8d 8e 56 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3158]
  001f3	51		 push	 ecx
  001f4	6a 11		 push	 17			; 00000011H
  001f6	8b ce		 mov	 ecx, esi
  001f8	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  001fd	66 85 c0	 test	 ax, ax
  00200	74 06		 je	 SHORT $L132737
  00202	66 3d 01 00	 cmp	 ax, 1
  00206	75 61		 jne	 SHORT $L132717
$L132737:

; 2607 : 	COLUMN_ENTRY(m_wMDP)

  00208	8d 96 58 0c 00
	00		 lea	 edx, DWORD PTR [esi+3160]
  0020e	52		 push	 edx
  0020f	6a 12		 push	 18			; 00000012H
  00211	8b ce		 mov	 ecx, esi
  00213	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00218	66 85 c0	 test	 ax, ax
  0021b	74 06		 je	 SHORT $L132738
  0021d	66 3d 01 00	 cmp	 ax, 1
  00221	75 46		 jne	 SHORT $L132717
$L132738:

; 2608 : 	COLUMN_ENTRY(m_wMinWAP)

  00223	8d 86 5a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3162]
  00229	50		 push	 eax
  0022a	6a 13		 push	 19			; 00000013H
  0022c	8b ce		 mov	 ecx, esi
  0022e	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00233	66 85 c0	 test	 ax, ax
  00236	74 06		 je	 SHORT $L132739
  00238	66 3d 01 00	 cmp	 ax, 1
  0023c	75 2b		 jne	 SHORT $L132717
$L132739:

; 2609 : 	COLUMN_ENTRY(m_wMaxWAP)

  0023e	8d 8e 5c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3164]
  00244	51		 push	 ecx
  00245	6a 14		 push	 20			; 00000014H
  00247	8b ce		 mov	 ecx, esi
  00249	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0024e	66 85 c0	 test	 ax, ax
  00251	74 06		 je	 SHORT $L132740
  00253	66 3d 01 00	 cmp	 ax, 1
  00257	75 10		 jne	 SHORT $L132717
$L132740:

; 2610 : 	COLUMN_ENTRY(m_wWDP)

  00259	8d 96 5e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3166]
  0025f	52		 push	 edx
  00260	6a 15		 push	 21			; 00000015H
  00262	8b ce		 mov	 ecx, esi
  00264	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
$L132717:
  00269	5e		 pop	 esi

; 2611 : END_COL()

  0026a	c3		 ret	 0
?BindColumns@CTBLMonAttr@@UAEFXZ ENDP			; CTBLMonAttr::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLMonAttr@@UAE@XZ				; CTBLMonAttr::~CTBLMonAttr
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLMonAttr@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLMonAttr@@UAEPAXI@Z PROC NEAR			; CTBLMonAttr::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLMonAttr@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L169556
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L169556:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLMonAttr@@UAEPAXI@Z ENDP				; CTBLMonAttr::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLMonAttr@@UAE@XZ
_TEXT	SEGMENT
??1CTBLMonAttr@@UAE@XZ PROC NEAR			; CTBLMonAttr::~CTBLMonAttr, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLMonAttr@@UAE@XZ ENDP				; CTBLMonAttr::~CTBLMonAttr
_TEXT	ENDS
PUBLIC	??0CTBLItemMagicSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLItemMagicSkill::CTBLItemMagicSkill
PUBLIC	?GetNumCol@CTBLItemMagicSkill@@UAEHXZ		; CTBLItemMagicSkill::GetNumCol
PUBLIC	?BindColumns@CTBLItemMagicSkill@@UAEFXZ		; CTBLItemMagicSkill::BindColumns
PUBLIC	??_7CTBLItemMagicSkill@@6B@			; CTBLItemMagicSkill::`vftable'
PUBLIC	??_GCTBLItemMagicSkill@@UAEPAXI@Z		; CTBLItemMagicSkill::`scalar deleting destructor'
PUBLIC	??_C@_0FP@KEEECGEK@SELECT?5?7bMagic?0?5?7dwKind?0?5?7wSkill@ ; `string'
EXTRN	??_ECTBLItemMagicSkill@@UAEPAXI@Z:NEAR		; CTBLItemMagicSkill::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T169739 DD	0ffffffffH
	DD	FLAT:$L169565
$T169736 DD	019930520H
	DD	01H
	DD	FLAT:$T169739
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FP@KEEECGEK@SELECT?5?7bMagic?0?5?7dwKind?0?5?7wSkill@
CONST	SEGMENT
??_C@_0FP@KEEECGEK@SELECT?5?7bMagic?0?5?7dwKind?0?5?7wSkill@ DB 'SELECT ', 09H
	DB	'bMagic, ', 09H, 'dwKind, ', 09H, 'wSkillID, ', 09H, 'bIsMagic'
	DB	', ', 09H, 'bIsRare, ', 09H, 'bMinLevel ', 09H, 'FROM TITEMMAG'
	DB	'ICSKILLCHART', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLItemMagicSkill@@6B@
CONST	SEGMENT
??_7CTBLItemMagicSkill@@6B@ DD FLAT:??_ECTBLItemMagicSkill@@UAEPAXI@Z ; CTBLItemMagicSkill::`vftable'
	DD	FLAT:?GetNumCol@CTBLItemMagicSkill@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLItemMagicSkill@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLItemMagicSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T169564 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLItemMagicSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLItemMagicSkill::CTBLItemMagicSkill, COMDAT
; _this$ = ecx

; 2631 : 	FROM TITEMMAGICSKILLCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLItemMagicSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FP@KEEECGEK@SELECT?5?7bMagic?0?5?7dwKind?0?5?7wSkill@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T169564[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLItemMagicSkill@@6B@
  0005e	72 0d		 jb	 SHORT $L169737
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L169737:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L169565:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLItemMagicSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T169736
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLItemMagicSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLItemMagicSkill::CTBLItemMagicSkill
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLItemMagicSkill@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLItemMagicSkill@@UAEHXZ PROC NEAR		; CTBLItemMagicSkill::GetNumCol, COMDAT
; _this$ = ecx

; 2633 : BEGIN_COLUMN(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumCol@CTBLItemMagicSkill@@UAEHXZ ENDP		; CTBLItemMagicSkill::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLItemMagicSkill@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLItemMagicSkill@@UAEFXZ PROC NEAR	; CTBLItemMagicSkill::BindColumns, COMDAT
; _this$ = ecx

; 2633 : BEGIN_COLUMN(6)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2634 : 	COLUMN_ENTRY(m_bMagic)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L132787
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 7c		 jne	 SHORT $L132783
$L132787:

; 2635 : 	COLUMN_ENTRY(m_dwKind)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L132788
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 61		 jne	 SHORT $L132783
$L132788:

; 2636 : 	COLUMN_ENTRY(m_wSkill)

  00037	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L132789
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 46		 jne	 SHORT $L132783
$L132789:

; 2637 : 	COLUMN_ENTRY(m_bIsMagic)

  00052	8d 86 36 0c 00
	00		 lea	 eax, DWORD PTR [esi+3126]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00062	66 85 c0	 test	 ax, ax
  00065	74 06		 je	 SHORT $L132790
  00067	66 3d 01 00	 cmp	 ax, 1
  0006b	75 2b		 jne	 SHORT $L132783
$L132790:

; 2638 : 	COLUMN_ENTRY(m_bIsRare)

  0006d	8d 8e 37 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3127]
  00073	51		 push	 ecx
  00074	6a 05		 push	 5
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0007d	66 85 c0	 test	 ax, ax
  00080	74 06		 je	 SHORT $L132791
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 10		 jne	 SHORT $L132783
$L132791:

; 2639 : 	COLUMN_ENTRY(m_bMinLevel)

  00088	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  0008e	52		 push	 edx
  0008f	6a 06		 push	 6
  00091	8b ce		 mov	 ecx, esi
  00093	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L132783:
  00098	5e		 pop	 esi

; 2640 : END_COL()

  00099	c3		 ret	 0
?BindColumns@CTBLItemMagicSkill@@UAEFXZ ENDP		; CTBLItemMagicSkill::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLItemMagicSkill@@UAE@XZ			; CTBLItemMagicSkill::~CTBLItemMagicSkill
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLItemMagicSkill@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLItemMagicSkill@@UAEPAXI@Z PROC NEAR		; CTBLItemMagicSkill::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLItemMagicSkill@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L169751
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L169751:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLItemMagicSkill@@UAEPAXI@Z ENDP			; CTBLItemMagicSkill::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLItemMagicSkill@@UAE@XZ
_TEXT	SEGMENT
??1CTBLItemMagicSkill@@UAE@XZ PROC NEAR			; CTBLItemMagicSkill::~CTBLItemMagicSkill, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLItemMagicSkill@@UAE@XZ ENDP			; CTBLItemMagicSkill::~CTBLItemMagicSkill
_TEXT	ENDS
PUBLIC	??0CTBLCashCategory@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCashCategory::CTBLCashCategory
PUBLIC	?GetNumCol@CTBLCashCategory@@UAEHXZ		; CTBLCashCategory::GetNumCol
PUBLIC	?BindColumns@CTBLCashCategory@@UAEFXZ		; CTBLCashCategory::BindColumns
PUBLIC	??_7CTBLCashCategory@@6B@			; CTBLCashCategory::`vftable'
PUBLIC	??_GCTBLCashCategory@@UAEPAXI@Z			; CTBLCashCategory::`scalar deleting destructor'
PUBLIC	??_C@_0EA@EBCOKAMH@SELECT?5bID?0?5szName?5FROM?5TVIEW_CA@ ; `string'
EXTRN	??_ECTBLCashCategory@@UAEPAXI@Z:NEAR		; CTBLCashCategory::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T169934 DD	0ffffffffH
	DD	FLAT:$L169760
$T169931 DD	019930520H
	DD	01H
	DD	FLAT:$T169934
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EA@EBCOKAMH@SELECT?5bID?0?5szName?5FROM?5TVIEW_CA@
CONST	SEGMENT
??_C@_0EA@EBCOKAMH@SELECT?5bID?0?5szName?5FROM?5TVIEW_CA@ DB 'SELECT bID,'
	DB	' szName FROM TVIEW_CASHCATEGORYCHART ORDER BY wOrder', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLCashCategory@@6B@
CONST	SEGMENT
??_7CTBLCashCategory@@6B@ DD FLAT:??_ECTBLCashCategory@@UAEPAXI@Z ; CTBLCashCategory::`vftable'
	DD	FLAT:?GetNumCol@CTBLCashCategory@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLCashCategory@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLCashCategory@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T169759 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLCashCategory@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLCashCategory::CTBLCashCategory, COMDAT
; _this$ = ecx

; 2649 : DEF_QUERY( CTBLCashCategory, _T("SELECT bID, szName FROM TVIEW_CASHCATEGORYCHART ORDER BY wOrder"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLCashCategory@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@EBCOKAMH@SELECT?5bID?0?5szName?5FROM?5TVIEW_CA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T169759[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLCashCategory@@6B@
  0005e	72 0d		 jb	 SHORT $L169932
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L169932:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L169760:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLCashCategory@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T169931
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLCashCategory@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLCashCategory::CTBLCashCategory
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLCashCategory@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLCashCategory@@UAEHXZ PROC NEAR		; CTBLCashCategory::GetNumCol, COMDAT
; _this$ = ecx

; 2651 : BEGIN_COLUMN(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumCol@CTBLCashCategory@@UAEHXZ ENDP		; CTBLCashCategory::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLCashCategory@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLCashCategory@@UAEFXZ PROC NEAR		; CTBLCashCategory::BindColumns, COMDAT
; _this$ = ecx

; 2651 : BEGIN_COLUMN(2)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2652 : 	COLUMN_ENTRY(m_bID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L132834
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 12		 jne	 SHORT $L132830
$L132834:

; 2653 : 	COLUMN_ENTRY_STR(m_szName)

  0001c	6a 33		 push	 51			; 00000033H
  0001e	8d 8e 2d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3117]
  00024	51		 push	 ecx
  00025	6a 02		 push	 2
  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
$L132830:
  0002e	5e		 pop	 esi

; 2654 : END_COL()

  0002f	c3		 ret	 0
?BindColumns@CTBLCashCategory@@UAEFXZ ENDP		; CTBLCashCategory::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLCashCategory@@UAE@XZ			; CTBLCashCategory::~CTBLCashCategory
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLCashCategory@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLCashCategory@@UAEPAXI@Z PROC NEAR		; CTBLCashCategory::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLCashCategory@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L169946
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L169946:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLCashCategory@@UAEPAXI@Z ENDP			; CTBLCashCategory::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLCashCategory@@UAE@XZ
_TEXT	SEGMENT
??1CTBLCashCategory@@UAE@XZ PROC NEAR			; CTBLCashCategory::~CTBLCashCategory, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLCashCategory@@UAE@XZ ENDP			; CTBLCashCategory::~CTBLCashCategory
_TEXT	ENDS
PUBLIC	??0CTBLCashShopItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCashShopItem::CTBLCashShopItem
PUBLIC	?GetNumCol@CTBLCashShopItem@@UAEHXZ		; CTBLCashShopItem::GetNumCol
PUBLIC	?BindColumns@CTBLCashShopItem@@UAEFXZ		; CTBLCashShopItem::BindColumns
PUBLIC	??_7CTBLCashShopItem@@6B@			; CTBLCashShopItem::`vftable'
PUBLIC	??_GCTBLCashShopItem@@UAEPAXI@Z			; CTBLCashShopItem::`scalar deleting destructor'
PUBLIC	??_C@_0BJP@LMNPNEDP@SELECT?5?7wID?0?5?7wInfoID?0?5?7dwMoney?0@ ; `string'
EXTRN	??_ECTBLCashShopItem@@UAEPAXI@Z:NEAR		; CTBLCashShopItem::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T170129 DD	0ffffffffH
	DD	FLAT:$L169955
$T170126 DD	019930520H
	DD	01H
	DD	FLAT:$T170129
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BJP@LMNPNEDP@SELECT?5?7wID?0?5?7wInfoID?0?5?7dwMoney?0@
CONST	SEGMENT
??_C@_0BJP@LMNPNEDP@SELECT?5?7wID?0?5?7wInfoID?0?5?7dwMoney?0@ DB 'SELECT'
	DB	' ', 09H, 'wID, ', 09H, 'wInfoID, ', 09H, 'dwMoney, ', 09H, 'b'
	DB	'Category, ', 09H, 'bKind, ', 09H, 'wItemID, ', 09H, 'bLevel, '
	DB	09H, 'bCount, ', 09H, 'bGLevel, ', 09H, 'dwDuraMax, ', 09H, 'd'
	DB	'wDuraCur, ', 09H, 'bRefineCur, ', 09H, 'wUseTime, ', 09H, 'bG'
	DB	'radeEffect, ', 09H, 'bMagic1, ', 09H, 'bMagic2, ', 09H, 'bMag'
	DB	'ic3, ', 09H, 'bMagic4, ', 09H, 'bMagic5, ', 09H, 'bMagic6, ', 09H
	DB	'wValue1, ', 09H, 'wValue2, ', 09H, 'wValue3, ', 09H, 'wValue4'
	DB	', ', 09H, 'wValue5, ', 09H, 'wValue6, ', 09H, 'dwTime1, ', 09H
	DB	'dwTime2, ', 09H, 'dwTime3, ', 09H, 'dwTime4, ', 09H, 'dwTime5'
	DB	', ', 09H, 'dwTime6, ', 09H, 'bCanSell, ', 09H, 'bSaleValue ', 09H
	DB	'FROM TVIEW_CASHSHOPITEMCHART ', 09H, 'ORDER BY bCategory, wOr'
	DB	'der', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7CTBLCashShopItem@@6B@
CONST	SEGMENT
??_7CTBLCashShopItem@@6B@ DD FLAT:??_ECTBLCashShopItem@@UAEPAXI@Z ; CTBLCashShopItem::`vftable'
	DD	FLAT:?GetNumCol@CTBLCashShopItem@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLCashShopItem@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLCashShopItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T169954 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLCashShopItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLCashShopItem::CTBLCashShopItem, COMDAT
; _this$ = ecx

; 2706 : 	ORDER BY bCategory, wOrder"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLCashShopItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJP@LMNPNEDP@SELECT?5?7wID?0?5?7wInfoID?0?5?7dwMoney?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T169954[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLCashShopItem@@6B@
  0005e	72 0d		 jb	 SHORT $L170127
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L170127:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L169955:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLCashShopItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T170126
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLCashShopItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLCashShopItem::CTBLCashShopItem
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLCashShopItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLCashShopItem@@UAEHXZ PROC NEAR		; CTBLCashShopItem::GetNumCol, COMDAT
; _this$ = ecx

; 2708 : BEGIN_COLUMN(34)

  00000	b8 22 00 00 00	 mov	 eax, 34			; 00000022H
  00005	c3		 ret	 0
?GetNumCol@CTBLCashShopItem@@UAEHXZ ENDP		; CTBLCashShopItem::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLCashShopItem@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLCashShopItem@@UAEFXZ PROC NEAR		; CTBLCashShopItem::BindColumns, COMDAT
; _this$ = ecx

; 2708 : BEGIN_COLUMN(34)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2709 : 	COLUMN_ENTRY(m_wID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L132884
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 dc 03 00
	00		 jne	 $L132880
$L132884:

; 2710 : 	COLUMN_ENTRY(m_wInfoID)

  00020	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L132885
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 bd 03 00
	00		 jne	 $L132880
$L132885:

; 2711 : 	COLUMN_ENTRY(m_dwMoney)

  0003f	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L132886
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 9e 03 00
	00		 jne	 $L132880
$L132886:

; 2712 : 	COLUMN_ENTRY(m_bCategory)

  0005e	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L132887
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 7f 03 00
	00		 jne	 $L132880
$L132887:

; 2713 : 	COLUMN_ENTRY(m_bKind)

  0007d	8d 8e 35 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3125]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L132888
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 60 03 00
	00		 jne	 $L132880
$L132888:

; 2714 : 	COLUMN_ENTRY(m_item.m_wItemID)

  0009c	8d 96 4a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3146]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L132889
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 41 03 00
	00		 jne	 $L132880
$L132889:

; 2715 : 	COLUMN_ENTRY(m_item.m_bLevel)

  000bb	8d 86 4c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3148]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 0a		 je	 SHORT $L132890
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	0f 85 22 03 00
	00		 jne	 $L132880
$L132890:

; 2716 : 	COLUMN_ENTRY(m_item.m_bCount)

  000da	8d 8e 4d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3149]
  000e0	51		 push	 ecx
  000e1	6a 08		 push	 8
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ea	66 85 c0	 test	 ax, ax
  000ed	74 0a		 je	 SHORT $L132891
  000ef	66 3d 01 00	 cmp	 ax, 1
  000f3	0f 85 03 03 00
	00		 jne	 $L132880
$L132891:

; 2717 : 	COLUMN_ENTRY(m_item.m_bGLevel)

  000f9	8d 96 4e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3150]
  000ff	52		 push	 edx
  00100	6a 09		 push	 9
  00102	8b ce		 mov	 ecx, esi
  00104	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00109	66 85 c0	 test	 ax, ax
  0010c	74 0a		 je	 SHORT $L132892
  0010e	66 3d 01 00	 cmp	 ax, 1
  00112	0f 85 e4 02 00
	00		 jne	 $L132880
$L132892:

; 2718 : 	COLUMN_ENTRY(m_item.m_dwDuraMax)

  00118	8d 86 50 0c 00
	00		 lea	 eax, DWORD PTR [esi+3152]
  0011e	50		 push	 eax
  0011f	6a 0a		 push	 10			; 0000000aH
  00121	8b ce		 mov	 ecx, esi
  00123	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00128	66 85 c0	 test	 ax, ax
  0012b	74 0a		 je	 SHORT $L132893
  0012d	66 3d 01 00	 cmp	 ax, 1
  00131	0f 85 c5 02 00
	00		 jne	 $L132880
$L132893:

; 2719 : 	COLUMN_ENTRY(m_item.m_dwDuraCur)

  00137	8d 8e 54 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3156]
  0013d	51		 push	 ecx
  0013e	6a 0b		 push	 11			; 0000000bH
  00140	8b ce		 mov	 ecx, esi
  00142	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00147	66 85 c0	 test	 ax, ax
  0014a	74 0a		 je	 SHORT $L132894
  0014c	66 3d 01 00	 cmp	 ax, 1
  00150	0f 85 a6 02 00
	00		 jne	 $L132880
$L132894:

; 2720 : 	COLUMN_ENTRY(m_item.m_bRefineCur)

  00156	8d 96 58 0c 00
	00		 lea	 edx, DWORD PTR [esi+3160]
  0015c	52		 push	 edx
  0015d	6a 0c		 push	 12			; 0000000cH
  0015f	8b ce		 mov	 ecx, esi
  00161	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00166	66 85 c0	 test	 ax, ax
  00169	74 0a		 je	 SHORT $L132895
  0016b	66 3d 01 00	 cmp	 ax, 1
  0016f	0f 85 87 02 00
	00		 jne	 $L132880
$L132895:

; 2721 : 	COLUMN_ENTRY(m_wUseTime)

  00175	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0017b	50		 push	 eax
  0017c	6a 0d		 push	 13			; 0000000dH
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00185	66 85 c0	 test	 ax, ax
  00188	74 0a		 je	 SHORT $L132896
  0018a	66 3d 01 00	 cmp	 ax, 1
  0018e	0f 85 68 02 00
	00		 jne	 $L132880
$L132896:

; 2722 : 	COLUMN_ENTRY(m_item.m_bGradeEffect)

  00194	8d 8e 6c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3180]
  0019a	51		 push	 ecx
  0019b	6a 0e		 push	 14			; 0000000eH
  0019d	8b ce		 mov	 ecx, esi
  0019f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001a4	66 85 c0	 test	 ax, ax
  001a7	74 0a		 je	 SHORT $L132897
  001a9	66 3d 01 00	 cmp	 ax, 1
  001ad	0f 85 49 02 00
	00		 jne	 $L132880
$L132897:

; 2723 : 	COLUMN_ENTRY(m_item.m_bMagic[0])

  001b3	8d 96 6d 0c 00
	00		 lea	 edx, DWORD PTR [esi+3181]
  001b9	52		 push	 edx
  001ba	6a 0f		 push	 15			; 0000000fH
  001bc	8b ce		 mov	 ecx, esi
  001be	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001c3	66 85 c0	 test	 ax, ax
  001c6	74 0a		 je	 SHORT $L132898
  001c8	66 3d 01 00	 cmp	 ax, 1
  001cc	0f 85 2a 02 00
	00		 jne	 $L132880
$L132898:

; 2724 : 	COLUMN_ENTRY(m_item.m_bMagic[1])

  001d2	8d 86 6e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3182]
  001d8	50		 push	 eax
  001d9	6a 10		 push	 16			; 00000010H
  001db	8b ce		 mov	 ecx, esi
  001dd	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001e2	66 85 c0	 test	 ax, ax
  001e5	74 0a		 je	 SHORT $L132899
  001e7	66 3d 01 00	 cmp	 ax, 1
  001eb	0f 85 0b 02 00
	00		 jne	 $L132880
$L132899:

; 2725 : 	COLUMN_ENTRY(m_item.m_bMagic[2])

  001f1	8d 8e 6f 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3183]
  001f7	51		 push	 ecx
  001f8	6a 11		 push	 17			; 00000011H
  001fa	8b ce		 mov	 ecx, esi
  001fc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00201	66 85 c0	 test	 ax, ax
  00204	74 0a		 je	 SHORT $L132900
  00206	66 3d 01 00	 cmp	 ax, 1
  0020a	0f 85 ec 01 00
	00		 jne	 $L132880
$L132900:

; 2726 : 	COLUMN_ENTRY(m_item.m_bMagic[3])

  00210	8d 96 70 0c 00
	00		 lea	 edx, DWORD PTR [esi+3184]
  00216	52		 push	 edx
  00217	6a 12		 push	 18			; 00000012H
  00219	8b ce		 mov	 ecx, esi
  0021b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00220	66 85 c0	 test	 ax, ax
  00223	74 0a		 je	 SHORT $L132901
  00225	66 3d 01 00	 cmp	 ax, 1
  00229	0f 85 cd 01 00
	00		 jne	 $L132880
$L132901:

; 2727 : 	COLUMN_ENTRY(m_item.m_bMagic[4])

  0022f	8d 86 71 0c 00
	00		 lea	 eax, DWORD PTR [esi+3185]
  00235	50		 push	 eax
  00236	6a 13		 push	 19			; 00000013H
  00238	8b ce		 mov	 ecx, esi
  0023a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0023f	66 85 c0	 test	 ax, ax
  00242	74 0a		 je	 SHORT $L132902
  00244	66 3d 01 00	 cmp	 ax, 1
  00248	0f 85 ae 01 00
	00		 jne	 $L132880
$L132902:

; 2728 : 	COLUMN_ENTRY(m_item.m_bMagic[5])

  0024e	8d 8e 72 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3186]
  00254	51		 push	 ecx
  00255	6a 14		 push	 20			; 00000014H
  00257	8b ce		 mov	 ecx, esi
  00259	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0025e	66 85 c0	 test	 ax, ax
  00261	74 0a		 je	 SHORT $L132903
  00263	66 3d 01 00	 cmp	 ax, 1
  00267	0f 85 8f 01 00
	00		 jne	 $L132880
$L132903:

; 2729 : 	COLUMN_ENTRY(m_item.m_wValue[0])

  0026d	8d 96 74 0c 00
	00		 lea	 edx, DWORD PTR [esi+3188]
  00273	52		 push	 edx
  00274	6a 15		 push	 21			; 00000015H
  00276	8b ce		 mov	 ecx, esi
  00278	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0027d	66 85 c0	 test	 ax, ax
  00280	74 0a		 je	 SHORT $L132904
  00282	66 3d 01 00	 cmp	 ax, 1
  00286	0f 85 70 01 00
	00		 jne	 $L132880
$L132904:

; 2730 : 	COLUMN_ENTRY(m_item.m_wValue[1])

  0028c	8d 86 76 0c 00
	00		 lea	 eax, DWORD PTR [esi+3190]
  00292	50		 push	 eax
  00293	6a 16		 push	 22			; 00000016H
  00295	8b ce		 mov	 ecx, esi
  00297	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0029c	66 85 c0	 test	 ax, ax
  0029f	74 0a		 je	 SHORT $L132905
  002a1	66 3d 01 00	 cmp	 ax, 1
  002a5	0f 85 51 01 00
	00		 jne	 $L132880
$L132905:

; 2731 : 	COLUMN_ENTRY(m_item.m_wValue[2])

  002ab	8d 8e 78 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3192]
  002b1	51		 push	 ecx
  002b2	6a 17		 push	 23			; 00000017H
  002b4	8b ce		 mov	 ecx, esi
  002b6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  002bb	66 85 c0	 test	 ax, ax
  002be	74 0a		 je	 SHORT $L132906
  002c0	66 3d 01 00	 cmp	 ax, 1
  002c4	0f 85 32 01 00
	00		 jne	 $L132880
$L132906:

; 2732 : 	COLUMN_ENTRY(m_item.m_wValue[3])

  002ca	8d 96 7a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3194]
  002d0	52		 push	 edx
  002d1	6a 18		 push	 24			; 00000018H
  002d3	8b ce		 mov	 ecx, esi
  002d5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  002da	66 85 c0	 test	 ax, ax
  002dd	74 0a		 je	 SHORT $L132907
  002df	66 3d 01 00	 cmp	 ax, 1
  002e3	0f 85 13 01 00
	00		 jne	 $L132880
$L132907:

; 2733 : 	COLUMN_ENTRY(m_item.m_wValue[4])

  002e9	8d 86 7c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3196]
  002ef	50		 push	 eax
  002f0	6a 19		 push	 25			; 00000019H
  002f2	8b ce		 mov	 ecx, esi
  002f4	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  002f9	66 85 c0	 test	 ax, ax
  002fc	74 0a		 je	 SHORT $L132908
  002fe	66 3d 01 00	 cmp	 ax, 1
  00302	0f 85 f4 00 00
	00		 jne	 $L132880
$L132908:

; 2734 : 	COLUMN_ENTRY(m_item.m_wValue[5])

  00308	8d 8e 7e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3198]
  0030e	51		 push	 ecx
  0030f	6a 1a		 push	 26			; 0000001aH
  00311	8b ce		 mov	 ecx, esi
  00313	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00318	66 85 c0	 test	 ax, ax
  0031b	74 0a		 je	 SHORT $L132909
  0031d	66 3d 01 00	 cmp	 ax, 1
  00321	0f 85 d5 00 00
	00		 jne	 $L132880
$L132909:

; 2735 : 	COLUMN_ENTRY(m_item.m_dwExtValue[0])

  00327	8d 96 80 0c 00
	00		 lea	 edx, DWORD PTR [esi+3200]
  0032d	52		 push	 edx
  0032e	6a 1b		 push	 27			; 0000001bH
  00330	8b ce		 mov	 ecx, esi
  00332	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00337	66 85 c0	 test	 ax, ax
  0033a	74 0a		 je	 SHORT $L132910
  0033c	66 3d 01 00	 cmp	 ax, 1
  00340	0f 85 b6 00 00
	00		 jne	 $L132880
$L132910:

; 2736 : 	COLUMN_ENTRY(m_item.m_dwExtValue[1])

  00346	8d 86 84 0c 00
	00		 lea	 eax, DWORD PTR [esi+3204]
  0034c	50		 push	 eax
  0034d	6a 1c		 push	 28			; 0000001cH
  0034f	8b ce		 mov	 ecx, esi
  00351	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00356	66 85 c0	 test	 ax, ax
  00359	74 0a		 je	 SHORT $L132911
  0035b	66 3d 01 00	 cmp	 ax, 1
  0035f	0f 85 97 00 00
	00		 jne	 $L132880
$L132911:

; 2737 : 	COLUMN_ENTRY(m_item.m_dwExtValue[2])

  00365	8d 8e 88 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3208]
  0036b	51		 push	 ecx
  0036c	6a 1d		 push	 29			; 0000001dH
  0036e	8b ce		 mov	 ecx, esi
  00370	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00375	66 85 c0	 test	 ax, ax
  00378	74 06		 je	 SHORT $L132912
  0037a	66 3d 01 00	 cmp	 ax, 1
  0037e	75 7c		 jne	 SHORT $L132880
$L132912:

; 2738 : 	COLUMN_ENTRY(m_item.m_dwExtValue[3])

  00380	8d 96 8c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3212]
  00386	52		 push	 edx
  00387	6a 1e		 push	 30			; 0000001eH
  00389	8b ce		 mov	 ecx, esi
  0038b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00390	66 85 c0	 test	 ax, ax
  00393	74 06		 je	 SHORT $L132913
  00395	66 3d 01 00	 cmp	 ax, 1
  00399	75 61		 jne	 SHORT $L132880
$L132913:

; 2739 : 	COLUMN_ENTRY(m_item.m_dwExtValue[4])

  0039b	8d 86 90 0c 00
	00		 lea	 eax, DWORD PTR [esi+3216]
  003a1	50		 push	 eax
  003a2	6a 1f		 push	 31			; 0000001fH
  003a4	8b ce		 mov	 ecx, esi
  003a6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  003ab	66 85 c0	 test	 ax, ax
  003ae	74 06		 je	 SHORT $L132914
  003b0	66 3d 01 00	 cmp	 ax, 1
  003b4	75 46		 jne	 SHORT $L132880
$L132914:

; 2740 : 	COLUMN_ENTRY(m_item.m_dwExtValue[5])

  003b6	8d 8e 94 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3220]
  003bc	51		 push	 ecx
  003bd	6a 20		 push	 32			; 00000020H
  003bf	8b ce		 mov	 ecx, esi
  003c1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  003c6	66 85 c0	 test	 ax, ax
  003c9	74 06		 je	 SHORT $L132915
  003cb	66 3d 01 00	 cmp	 ax, 1
  003cf	75 2b		 jne	 SHORT $L132880
$L132915:

; 2741 : 	COLUMN_ENTRY(m_bCanSell)

  003d1	8d 96 36 0c 00
	00		 lea	 edx, DWORD PTR [esi+3126]
  003d7	52		 push	 edx
  003d8	6a 21		 push	 33			; 00000021H
  003da	8b ce		 mov	 ecx, esi
  003dc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  003e1	66 85 c0	 test	 ax, ax
  003e4	74 06		 je	 SHORT $L132916
  003e6	66 3d 01 00	 cmp	 ax, 1
  003ea	75 10		 jne	 SHORT $L132880
$L132916:

; 2742 : 	COLUMN_ENTRY(m_bSaleValue)

  003ec	8d 86 98 0c 00
	00		 lea	 eax, DWORD PTR [esi+3224]
  003f2	50		 push	 eax
  003f3	6a 22		 push	 34			; 00000022H
  003f5	8b ce		 mov	 ecx, esi
  003f7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L132880:
  003fc	5e		 pop	 esi

; 2743 : END_COL()

  003fd	c3		 ret	 0
?BindColumns@CTBLCashShopItem@@UAEFXZ ENDP		; CTBLCashShopItem::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLCashShopItem@@UAE@XZ			; CTBLCashShopItem::~CTBLCashShopItem
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLCashShopItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLCashShopItem@@UAEPAXI@Z PROC NEAR		; CTBLCashShopItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLCashShopItem@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L170141
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L170141:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLCashShopItem@@UAEPAXI@Z ENDP			; CTBLCashShopItem::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLCashShopItem@@UAE@XZ
_TEXT	SEGMENT
??1CTBLCashShopItem@@UAE@XZ PROC NEAR			; CTBLCashShopItem::~CTBLCashShopItem, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLCashShopItem@@UAE@XZ ENDP			; CTBLCashShopItem::~CTBLCashShopItem
_TEXT	ENDS
PUBLIC	??0CTBLCashItemCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCashItemCabinet::CTBLCashItemCabinet
PUBLIC	?GetNumCol@CTBLCashItemCabinet@@UAEHXZ		; CTBLCashItemCabinet::GetNumCol
PUBLIC	?BindColumns@CTBLCashItemCabinet@@UAEFXZ	; CTBLCashItemCabinet::BindColumns
PUBLIC	?GetNumParam@CTBLCashItemCabinet@@UAEHXZ	; CTBLCashItemCabinet::GetNumParam
PUBLIC	?BindParameters@CTBLCashItemCabinet@@UAEFH@Z	; CTBLCashItemCabinet::BindParameters
PUBLIC	??_7CTBLCashItemCabinet@@6B@			; CTBLCashItemCabinet::`vftable'
PUBLIC	??_GCTBLCashItemCabinet@@UAEPAXI@Z		; CTBLCashItemCabinet::`scalar deleting destructor'
PUBLIC	??_C@_0BGC@NMBJCIEB@SELECT?5?5?5?5?5TOP?5500?5?7dwID?0?5?7wItem@ ; `string'
EXTRN	??_ECTBLCashItemCabinet@@UAEPAXI@Z:NEAR		; CTBLCashItemCabinet::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T170324 DD	0ffffffffH
	DD	FLAT:$L170150
$T170321 DD	019930520H
	DD	01H
	DD	FLAT:$T170324
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BGC@NMBJCIEB@SELECT?5?5?5?5?5TOP?5500?5?7dwID?0?5?7wItem@
CONST	SEGMENT
??_C@_0BGC@NMBJCIEB@SELECT?5?5?5?5?5TOP?5500?5?7dwID?0?5?7wItem@ DB 'SELE'
	DB	'CT     TOP 500 ', 09H, 'dwID, ', 09H, 'wItemID, ', 09H, 'bLev'
	DB	'el, ', 09H, 'bCount, ', 09H, 'bGLevel, ', 09H, 'dwDuraMax, ', 09H
	DB	'dwDuraCur, ', 09H, 'bRefineCur, ', 09H, 'dEndTime, ', 09H, 'b'
	DB	'GradeEffect, ', 09H, 'bMagic1, ', 09H, 'bMagic2, ', 09H, 'bMa'
	DB	'gic3, ', 09H, 'bMagic4, ', 09H, 'bMagic5, ', 09H, 'bMagic6, ', 09H
	DB	'wValue1, ', 09H, 'wValue2, ', 09H, 'wValue3, ', 09H, 'wValue4'
	DB	', ', 09H, 'wValue5, ', 09H, 'wValue6, ', 09H, 'dwTime1, ', 09H
	DB	'dwTime2, ', 09H, 'dwTime3, ', 09H, 'dwTime4, ', 09H, 'dwTime5'
	DB	', ', 09H, 'dwTime6 ', 09H, 'FROM TVIEW_CASHITEMCABINET ', 09H
	DB	'WHERE dwUserID = ?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CTBLCashItemCabinet@@6B@
CONST	SEGMENT
??_7CTBLCashItemCabinet@@6B@ DD FLAT:??_ECTBLCashItemCabinet@@UAEPAXI@Z ; CTBLCashItemCabinet::`vftable'
	DD	FLAT:?GetNumCol@CTBLCashItemCabinet@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLCashItemCabinet@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLCashItemCabinet@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLCashItemCabinet@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLCashItemCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T170149 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLCashItemCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLCashItemCabinet::CTBLCashItemCabinet, COMDAT
; _this$ = ecx

; 2784 : 	WHERE dwUserID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLCashItemCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BGC@NMBJCIEB@SELECT?5?5?5?5?5TOP?5500?5?7dwID?0?5?7wItem@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T170149[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLCashItemCabinet@@6B@
  0005e	72 0d		 jb	 SHORT $L170322
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L170322:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L170150:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLCashItemCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T170321
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLCashItemCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLCashItemCabinet::CTBLCashItemCabinet
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLCashItemCabinet@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLCashItemCabinet@@UAEHXZ PROC NEAR	; CTBLCashItemCabinet::GetNumCol, COMDAT
; _this$ = ecx

; 2786 : BEGIN_COLUMN(28)

  00000	b8 1c 00 00 00	 mov	 eax, 28			; 0000001cH
  00005	c3		 ret	 0
?GetNumCol@CTBLCashItemCabinet@@UAEHXZ ENDP		; CTBLCashItemCabinet::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLCashItemCabinet@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLCashItemCabinet@@UAEFXZ PROC NEAR	; CTBLCashItemCabinet::BindColumns, COMDAT
; _this$ = ecx

; 2786 : BEGIN_COLUMN(28)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2787 : 	COLUMN_ENTRY(m_dwID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L132963
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 22 03 00
	00		 jne	 $L132959
$L132963:

; 2788 : 	COLUMN_ENTRY(m_item.m_wItemID)

  00020	8d 8e 42 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3138]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L132964
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 03 03 00
	00		 jne	 $L132959
$L132964:

; 2789 : 	COLUMN_ENTRY(m_item.m_bLevel)

  0003f	8d 96 44 0c 00
	00		 lea	 edx, DWORD PTR [esi+3140]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L132965
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 e4 02 00
	00		 jne	 $L132959
$L132965:

; 2790 : 	COLUMN_ENTRY(m_item.m_bCount)

  0005e	8d 86 45 0c 00
	00		 lea	 eax, DWORD PTR [esi+3141]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L132966
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 c5 02 00
	00		 jne	 $L132959
$L132966:

; 2791 : 	COLUMN_ENTRY(m_item.m_bGLevel)

  0007d	8d 8e 46 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3142]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L132967
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 a6 02 00
	00		 jne	 $L132959
$L132967:

; 2792 : 	COLUMN_ENTRY(m_item.m_dwDuraMax)

  0009c	8d 96 48 0c 00
	00		 lea	 edx, DWORD PTR [esi+3144]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L132968
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 87 02 00
	00		 jne	 $L132959
$L132968:

; 2793 : 	COLUMN_ENTRY(m_item.m_dwDuraCur)

  000bb	8d 86 4c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3148]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 0a		 je	 SHORT $L132969
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	0f 85 68 02 00
	00		 jne	 $L132959
$L132969:

; 2794 : 	COLUMN_ENTRY(m_item.m_bRefineCur)

  000da	8d 8e 50 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3152]
  000e0	51		 push	 ecx
  000e1	6a 08		 push	 8
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ea	66 85 c0	 test	 ax, ax
  000ed	74 0a		 je	 SHORT $L132970
  000ef	66 3d 01 00	 cmp	 ax, 1
  000f3	0f 85 49 02 00
	00		 jne	 $L132959
$L132970:

; 2795 : 	COLUMN_ENTRY(m_item.m_dEndTime)

  000f9	8d 96 54 0c 00
	00		 lea	 edx, DWORD PTR [esi+3156]
  000ff	52		 push	 edx
  00100	6a 09		 push	 9
  00102	8b ce		 mov	 ecx, esi
  00104	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
  00109	66 85 c0	 test	 ax, ax
  0010c	74 0a		 je	 SHORT $L132971
  0010e	66 3d 01 00	 cmp	 ax, 1
  00112	0f 85 2a 02 00
	00		 jne	 $L132959
$L132971:

; 2796 : 	COLUMN_ENTRY(m_item.m_bGradeEffect)

  00118	8d 86 64 0c 00
	00		 lea	 eax, DWORD PTR [esi+3172]
  0011e	50		 push	 eax
  0011f	6a 0a		 push	 10			; 0000000aH
  00121	8b ce		 mov	 ecx, esi
  00123	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00128	66 85 c0	 test	 ax, ax
  0012b	74 0a		 je	 SHORT $L132972
  0012d	66 3d 01 00	 cmp	 ax, 1
  00131	0f 85 0b 02 00
	00		 jne	 $L132959
$L132972:

; 2797 : 	COLUMN_ENTRY(m_item.m_bMagic[0])

  00137	8d 8e 65 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3173]
  0013d	51		 push	 ecx
  0013e	6a 0b		 push	 11			; 0000000bH
  00140	8b ce		 mov	 ecx, esi
  00142	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00147	66 85 c0	 test	 ax, ax
  0014a	74 0a		 je	 SHORT $L132973
  0014c	66 3d 01 00	 cmp	 ax, 1
  00150	0f 85 ec 01 00
	00		 jne	 $L132959
$L132973:

; 2798 : 	COLUMN_ENTRY(m_item.m_bMagic[1])

  00156	8d 96 66 0c 00
	00		 lea	 edx, DWORD PTR [esi+3174]
  0015c	52		 push	 edx
  0015d	6a 0c		 push	 12			; 0000000cH
  0015f	8b ce		 mov	 ecx, esi
  00161	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00166	66 85 c0	 test	 ax, ax
  00169	74 0a		 je	 SHORT $L132974
  0016b	66 3d 01 00	 cmp	 ax, 1
  0016f	0f 85 cd 01 00
	00		 jne	 $L132959
$L132974:

; 2799 : 	COLUMN_ENTRY(m_item.m_bMagic[2])

  00175	8d 86 67 0c 00
	00		 lea	 eax, DWORD PTR [esi+3175]
  0017b	50		 push	 eax
  0017c	6a 0d		 push	 13			; 0000000dH
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00185	66 85 c0	 test	 ax, ax
  00188	74 0a		 je	 SHORT $L132975
  0018a	66 3d 01 00	 cmp	 ax, 1
  0018e	0f 85 ae 01 00
	00		 jne	 $L132959
$L132975:

; 2800 : 	COLUMN_ENTRY(m_item.m_bMagic[3])

  00194	8d 8e 68 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3176]
  0019a	51		 push	 ecx
  0019b	6a 0e		 push	 14			; 0000000eH
  0019d	8b ce		 mov	 ecx, esi
  0019f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001a4	66 85 c0	 test	 ax, ax
  001a7	74 0a		 je	 SHORT $L132976
  001a9	66 3d 01 00	 cmp	 ax, 1
  001ad	0f 85 8f 01 00
	00		 jne	 $L132959
$L132976:

; 2801 : 	COLUMN_ENTRY(m_item.m_bMagic[4])

  001b3	8d 96 69 0c 00
	00		 lea	 edx, DWORD PTR [esi+3177]
  001b9	52		 push	 edx
  001ba	6a 0f		 push	 15			; 0000000fH
  001bc	8b ce		 mov	 ecx, esi
  001be	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001c3	66 85 c0	 test	 ax, ax
  001c6	74 0a		 je	 SHORT $L132977
  001c8	66 3d 01 00	 cmp	 ax, 1
  001cc	0f 85 70 01 00
	00		 jne	 $L132959
$L132977:

; 2802 : 	COLUMN_ENTRY(m_item.m_bMagic[5])

  001d2	8d 86 6a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3178]
  001d8	50		 push	 eax
  001d9	6a 10		 push	 16			; 00000010H
  001db	8b ce		 mov	 ecx, esi
  001dd	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001e2	66 85 c0	 test	 ax, ax
  001e5	74 0a		 je	 SHORT $L132978
  001e7	66 3d 01 00	 cmp	 ax, 1
  001eb	0f 85 51 01 00
	00		 jne	 $L132959
$L132978:

; 2803 : 	COLUMN_ENTRY(m_item.m_wValue[0])

  001f1	8d 8e 6c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3180]
  001f7	51		 push	 ecx
  001f8	6a 11		 push	 17			; 00000011H
  001fa	8b ce		 mov	 ecx, esi
  001fc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00201	66 85 c0	 test	 ax, ax
  00204	74 0a		 je	 SHORT $L132979
  00206	66 3d 01 00	 cmp	 ax, 1
  0020a	0f 85 32 01 00
	00		 jne	 $L132959
$L132979:

; 2804 : 	COLUMN_ENTRY(m_item.m_wValue[1])

  00210	8d 96 6e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3182]
  00216	52		 push	 edx
  00217	6a 12		 push	 18			; 00000012H
  00219	8b ce		 mov	 ecx, esi
  0021b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00220	66 85 c0	 test	 ax, ax
  00223	74 0a		 je	 SHORT $L132980
  00225	66 3d 01 00	 cmp	 ax, 1
  00229	0f 85 13 01 00
	00		 jne	 $L132959
$L132980:

; 2805 : 	COLUMN_ENTRY(m_item.m_wValue[2])

  0022f	8d 86 70 0c 00
	00		 lea	 eax, DWORD PTR [esi+3184]
  00235	50		 push	 eax
  00236	6a 13		 push	 19			; 00000013H
  00238	8b ce		 mov	 ecx, esi
  0023a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0023f	66 85 c0	 test	 ax, ax
  00242	74 0a		 je	 SHORT $L132981
  00244	66 3d 01 00	 cmp	 ax, 1
  00248	0f 85 f4 00 00
	00		 jne	 $L132959
$L132981:

; 2806 : 	COLUMN_ENTRY(m_item.m_wValue[3])

  0024e	8d 8e 72 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3186]
  00254	51		 push	 ecx
  00255	6a 14		 push	 20			; 00000014H
  00257	8b ce		 mov	 ecx, esi
  00259	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0025e	66 85 c0	 test	 ax, ax
  00261	74 0a		 je	 SHORT $L132982
  00263	66 3d 01 00	 cmp	 ax, 1
  00267	0f 85 d5 00 00
	00		 jne	 $L132959
$L132982:

; 2807 : 	COLUMN_ENTRY(m_item.m_wValue[4])

  0026d	8d 96 74 0c 00
	00		 lea	 edx, DWORD PTR [esi+3188]
  00273	52		 push	 edx
  00274	6a 15		 push	 21			; 00000015H
  00276	8b ce		 mov	 ecx, esi
  00278	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0027d	66 85 c0	 test	 ax, ax
  00280	74 0a		 je	 SHORT $L132983
  00282	66 3d 01 00	 cmp	 ax, 1
  00286	0f 85 b6 00 00
	00		 jne	 $L132959
$L132983:

; 2808 : 	COLUMN_ENTRY(m_item.m_wValue[5])

  0028c	8d 86 76 0c 00
	00		 lea	 eax, DWORD PTR [esi+3190]
  00292	50		 push	 eax
  00293	6a 16		 push	 22			; 00000016H
  00295	8b ce		 mov	 ecx, esi
  00297	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0029c	66 85 c0	 test	 ax, ax
  0029f	74 0a		 je	 SHORT $L132984
  002a1	66 3d 01 00	 cmp	 ax, 1
  002a5	0f 85 97 00 00
	00		 jne	 $L132959
$L132984:

; 2809 : 	COLUMN_ENTRY(m_item.m_dwExtValue[0])

  002ab	8d 8e 78 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3192]
  002b1	51		 push	 ecx
  002b2	6a 17		 push	 23			; 00000017H
  002b4	8b ce		 mov	 ecx, esi
  002b6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  002bb	66 85 c0	 test	 ax, ax
  002be	74 06		 je	 SHORT $L132985
  002c0	66 3d 01 00	 cmp	 ax, 1
  002c4	75 7c		 jne	 SHORT $L132959
$L132985:

; 2810 : 	COLUMN_ENTRY(m_item.m_dwExtValue[1])

  002c6	8d 96 7c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3196]
  002cc	52		 push	 edx
  002cd	6a 18		 push	 24			; 00000018H
  002cf	8b ce		 mov	 ecx, esi
  002d1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  002d6	66 85 c0	 test	 ax, ax
  002d9	74 06		 je	 SHORT $L132986
  002db	66 3d 01 00	 cmp	 ax, 1
  002df	75 61		 jne	 SHORT $L132959
$L132986:

; 2811 : 	COLUMN_ENTRY(m_item.m_dwExtValue[2])

  002e1	8d 86 80 0c 00
	00		 lea	 eax, DWORD PTR [esi+3200]
  002e7	50		 push	 eax
  002e8	6a 19		 push	 25			; 00000019H
  002ea	8b ce		 mov	 ecx, esi
  002ec	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  002f1	66 85 c0	 test	 ax, ax
  002f4	74 06		 je	 SHORT $L132987
  002f6	66 3d 01 00	 cmp	 ax, 1
  002fa	75 46		 jne	 SHORT $L132959
$L132987:

; 2812 : 	COLUMN_ENTRY(m_item.m_dwExtValue[3])

  002fc	8d 8e 84 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3204]
  00302	51		 push	 ecx
  00303	6a 1a		 push	 26			; 0000001aH
  00305	8b ce		 mov	 ecx, esi
  00307	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0030c	66 85 c0	 test	 ax, ax
  0030f	74 06		 je	 SHORT $L132988
  00311	66 3d 01 00	 cmp	 ax, 1
  00315	75 2b		 jne	 SHORT $L132959
$L132988:

; 2813 : 	COLUMN_ENTRY(m_item.m_dwExtValue[4])

  00317	8d 96 88 0c 00
	00		 lea	 edx, DWORD PTR [esi+3208]
  0031d	52		 push	 edx
  0031e	6a 1b		 push	 27			; 0000001bH
  00320	8b ce		 mov	 ecx, esi
  00322	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00327	66 85 c0	 test	 ax, ax
  0032a	74 06		 je	 SHORT $L132989
  0032c	66 3d 01 00	 cmp	 ax, 1
  00330	75 10		 jne	 SHORT $L132959
$L132989:

; 2814 : 	COLUMN_ENTRY(m_item.m_dwExtValue[5])

  00332	8d 86 8c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3212]
  00338	50		 push	 eax
  00339	6a 1c		 push	 28			; 0000001cH
  0033b	8b ce		 mov	 ecx, esi
  0033d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L132959:
  00342	5e		 pop	 esi

; 2815 : END_COL()

  00343	c3		 ret	 0
?BindColumns@CTBLCashItemCabinet@@UAEFXZ ENDP		; CTBLCashItemCabinet::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLCashItemCabinet@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLCashItemCabinet@@UAEHXZ PROC NEAR	; CTBLCashItemCabinet::GetNumParam, COMDAT
; _this$ = ecx

; 2817 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLCashItemCabinet@@UAEHXZ ENDP		; CTBLCashItemCabinet::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLCashItemCabinet@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLCashItemCabinet@@UAEFH@Z PROC NEAR	; CTBLCashItemCabinet::BindParameters, COMDAT
; _this$ = ecx

; 2818 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwUserID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L132995
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L132995:

; 2819 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLCashItemCabinet@@UAEFH@Z ENDP	; CTBLCashItemCabinet::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLCashItemCabinet@@UAE@XZ			; CTBLCashItemCabinet::~CTBLCashItemCabinet
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLCashItemCabinet@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLCashItemCabinet@@UAEPAXI@Z PROC NEAR		; CTBLCashItemCabinet::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLCashItemCabinet@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L170342
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L170342:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLCashItemCabinet@@UAEPAXI@Z ENDP			; CTBLCashItemCabinet::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLCashItemCabinet@@UAE@XZ
_TEXT	SEGMENT
??1CTBLCashItemCabinet@@UAE@XZ PROC NEAR		; CTBLCashItemCabinet::~CTBLCashItemCabinet, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLCashItemCabinet@@UAE@XZ ENDP			; CTBLCashItemCabinet::~CTBLCashItemCabinet
_TEXT	ENDS
PUBLIC	??0CTBLDuringItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLDuringItem::CTBLDuringItem
PUBLIC	?GetNumCol@CTBLDuringItem@@UAEHXZ		; CTBLDuringItem::GetNumCol
PUBLIC	?BindColumns@CTBLDuringItem@@UAEFXZ		; CTBLDuringItem::BindColumns
PUBLIC	?GetNumParam@CTBLDuringItem@@UAEHXZ		; CTBLDuringItem::GetNumParam
PUBLIC	?BindParameters@CTBLDuringItem@@UAEFH@Z		; CTBLDuringItem::BindParameters
PUBLIC	??_7CTBLDuringItem@@6B@				; CTBLDuringItem::`vftable'
PUBLIC	??_GCTBLDuringItem@@UAEPAXI@Z			; CTBLDuringItem::`scalar deleting destructor'
PUBLIC	??_C@_0GC@EGHGOCFE@SELECT?5?7wItemID?0?5?7bType?0?5?7dwRema@ ; `string'
EXTRN	??_ECTBLDuringItem@@UAEPAXI@Z:NEAR		; CTBLDuringItem::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T170525 DD	0ffffffffH
	DD	FLAT:$L170351
$T170522 DD	019930520H
	DD	01H
	DD	FLAT:$T170525
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0GC@EGHGOCFE@SELECT?5?7wItemID?0?5?7bType?0?5?7dwRema@
CONST	SEGMENT
??_C@_0GC@EGHGOCFE@SELECT?5?7wItemID?0?5?7bType?0?5?7dwRema@ DB 'SELECT ', 09H
	DB	'wItemID, ', 09H, 'bType, ', 09H, 'dwRemainTime, ', 09H, 'dEnd'
	DB	'Time ', 09H, 'FROM TVIEW_DURINGITEMTABLE ', 09H, 'WHERE dwUse'
	DB	'rID = ?', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLDuringItem@@6B@
CONST	SEGMENT
??_7CTBLDuringItem@@6B@ DD FLAT:??_ECTBLDuringItem@@UAEPAXI@Z ; CTBLDuringItem::`vftable'
	DD	FLAT:?GetNumCol@CTBLDuringItem@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLDuringItem@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLDuringItem@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLDuringItem@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLDuringItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T170350 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLDuringItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLDuringItem::CTBLDuringItem, COMDAT
; _this$ = ecx

; 2837 : 	WHERE dwUserID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLDuringItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0GC@EGHGOCFE@SELECT?5?7wItemID?0?5?7bType?0?5?7dwRema@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T170350[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLDuringItem@@6B@
  0005e	72 0d		 jb	 SHORT $L170523
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L170523:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L170351:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLDuringItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T170522
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLDuringItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLDuringItem::CTBLDuringItem
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLDuringItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLDuringItem@@UAEHXZ PROC NEAR		; CTBLDuringItem::GetNumCol, COMDAT
; _this$ = ecx

; 2839 : BEGIN_COLUMN(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumCol@CTBLDuringItem@@UAEHXZ ENDP			; CTBLDuringItem::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLDuringItem@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLDuringItem@@UAEFXZ PROC NEAR		; CTBLDuringItem::BindColumns, COMDAT
; _this$ = ecx

; 2839 : BEGIN_COLUMN(4)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2840 : 	COLUMN_ENTRY(m_wItemID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L133048
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 46		 jne	 SHORT $L133044
$L133048:

; 2841 : 	COLUMN_ENTRY(m_bType)

  0001c	8d 8e 32 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3122]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L133049
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 2b		 jne	 SHORT $L133044
$L133049:

; 2842 : 	COLUMN_ENTRY(m_dwRemainTime)

  00037	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L133050
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 10		 jne	 SHORT $L133044
$L133050:

; 2843 : 	COLUMN_ENTRY(m_tEndTime)

  00052	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
$L133044:
  00062	5e		 pop	 esi

; 2844 : END_COL()

  00063	c3		 ret	 0
?BindColumns@CTBLDuringItem@@UAEFXZ ENDP		; CTBLDuringItem::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLDuringItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLDuringItem@@UAEHXZ PROC NEAR		; CTBLDuringItem::GetNumParam, COMDAT
; _this$ = ecx

; 2846 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLDuringItem@@UAEHXZ ENDP		; CTBLDuringItem::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLDuringItem@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLDuringItem@@UAEFH@Z PROC NEAR	; CTBLDuringItem::BindParameters, COMDAT
; _this$ = ecx

; 2847 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwUserID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L133056
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L133056:

; 2848 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLDuringItem@@UAEFH@Z ENDP		; CTBLDuringItem::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLDuringItem@@UAE@XZ			; CTBLDuringItem::~CTBLDuringItem
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLDuringItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLDuringItem@@UAEPAXI@Z PROC NEAR			; CTBLDuringItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLDuringItem@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L170543
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L170543:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLDuringItem@@UAEPAXI@Z ENDP			; CTBLDuringItem::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLDuringItem@@UAE@XZ
_TEXT	SEGMENT
??1CTBLDuringItem@@UAE@XZ PROC NEAR			; CTBLDuringItem::~CTBLDuringItem, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLDuringItem@@UAE@XZ ENDP				; CTBLDuringItem::~CTBLDuringItem
_TEXT	ENDS
PUBLIC	??0CTBLExpItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLExpItem::CTBLExpItem
PUBLIC	?GetNumCol@CTBLExpItem@@UAEHXZ			; CTBLExpItem::GetNumCol
PUBLIC	?BindColumns@CTBLExpItem@@UAEFXZ		; CTBLExpItem::BindColumns
PUBLIC	?GetNumParam@CTBLExpItem@@UAEHXZ		; CTBLExpItem::GetNumParam
PUBLIC	?BindParameters@CTBLExpItem@@UAEFH@Z		; CTBLExpItem::BindParameters
PUBLIC	??_7CTBLExpItem@@6B@				; CTBLExpItem::`vftable'
PUBLIC	??_GCTBLExpItem@@UAEPAXI@Z			; CTBLExpItem::`scalar deleting destructor'
PUBLIC	??_C@_0FK@EHCEGHEE@SELECT?5?7wItemID?0?5?7bType?0?5?7dwRema@ ; `string'
EXTRN	??_ECTBLExpItem@@UAEPAXI@Z:NEAR			; CTBLExpItem::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T170726 DD	0ffffffffH
	DD	FLAT:$L170552
$T170723 DD	019930520H
	DD	01H
	DD	FLAT:$T170726
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FK@EHCEGHEE@SELECT?5?7wItemID?0?5?7bType?0?5?7dwRema@
CONST	SEGMENT
??_C@_0FK@EHCEGHEE@SELECT?5?7wItemID?0?5?7bType?0?5?7dwRema@ DB 'SELECT ', 09H
	DB	'wItemID, ', 09H, 'bType, ', 09H, 'dwRemainTime, ', 09H, 'dEnd'
	DB	'Time ', 09H, 'FROM TEXPITEMTABLE ', 09H, 'WHERE dwCharID = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLExpItem@@6B@
CONST	SEGMENT
??_7CTBLExpItem@@6B@ DD FLAT:??_ECTBLExpItem@@UAEPAXI@Z	; CTBLExpItem::`vftable'
	DD	FLAT:?GetNumCol@CTBLExpItem@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLExpItem@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLExpItem@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLExpItem@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLExpItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T170551 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLExpItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLExpItem::CTBLExpItem, COMDAT
; _this$ = ecx

; 2866 : 	WHERE dwCharID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLExpItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FK@EHCEGHEE@SELECT?5?7wItemID?0?5?7bType?0?5?7dwRema@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T170551[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLExpItem@@6B@
  0005e	72 0d		 jb	 SHORT $L170724
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L170724:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L170552:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLExpItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T170723
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLExpItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLExpItem::CTBLExpItem
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLExpItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLExpItem@@UAEHXZ PROC NEAR		; CTBLExpItem::GetNumCol, COMDAT
; _this$ = ecx

; 2868 : BEGIN_COLUMN(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumCol@CTBLExpItem@@UAEHXZ ENDP			; CTBLExpItem::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLExpItem@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLExpItem@@UAEFXZ PROC NEAR		; CTBLExpItem::BindColumns, COMDAT
; _this$ = ecx

; 2868 : BEGIN_COLUMN(4)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2869 : 	COLUMN_ENTRY(m_wItemID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L133109
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 46		 jne	 SHORT $L133105
$L133109:

; 2870 : 	COLUMN_ENTRY(m_bType)

  0001c	8d 8e 32 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3122]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L133110
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 2b		 jne	 SHORT $L133105
$L133110:

; 2871 : 	COLUMN_ENTRY(m_dwRemainTime)

  00037	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L133111
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 10		 jne	 SHORT $L133105
$L133111:

; 2872 : 	COLUMN_ENTRY(m_tEndTime)

  00052	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
$L133105:
  00062	5e		 pop	 esi

; 2873 : END_COL()

  00063	c3		 ret	 0
?BindColumns@CTBLExpItem@@UAEFXZ ENDP			; CTBLExpItem::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLExpItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLExpItem@@UAEHXZ PROC NEAR		; CTBLExpItem::GetNumParam, COMDAT
; _this$ = ecx

; 2875 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLExpItem@@UAEHXZ ENDP			; CTBLExpItem::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLExpItem@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLExpItem@@UAEFH@Z PROC NEAR		; CTBLExpItem::BindParameters, COMDAT
; _this$ = ecx

; 2876 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L133117
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L133117:

; 2877 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLExpItem@@UAEFH@Z ENDP		; CTBLExpItem::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLExpItem@@UAE@XZ				; CTBLExpItem::~CTBLExpItem
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLExpItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLExpItem@@UAEPAXI@Z PROC NEAR			; CTBLExpItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLExpItem@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L170744
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L170744:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLExpItem@@UAEPAXI@Z ENDP				; CTBLExpItem::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLExpItem@@UAE@XZ
_TEXT	SEGMENT
??1CTBLExpItem@@UAE@XZ PROC NEAR			; CTBLExpItem::~CTBLExpItem, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLExpItem@@UAE@XZ ENDP				; CTBLExpItem::~CTBLExpItem
_TEXT	ENDS
PUBLIC	??0CTBLGamble@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGamble::CTBLGamble
PUBLIC	?GetNumCol@CTBLGamble@@UAEHXZ			; CTBLGamble::GetNumCol
PUBLIC	?BindColumns@CTBLGamble@@UAEFXZ			; CTBLGamble::BindColumns
PUBLIC	??_7CTBLGamble@@6B@				; CTBLGamble::`vftable'
PUBLIC	??_GCTBLGamble@@UAEPAXI@Z			; CTBLGamble::`scalar deleting destructor'
PUBLIC	??_C@_0GC@MAEHGHNK@SELECT?5?7bType?0?5?7bKind?0?5?7wReplace@ ; `string'
EXTRN	??_ECTBLGamble@@UAEPAXI@Z:NEAR			; CTBLGamble::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T170927 DD	0ffffffffH
	DD	FLAT:$L170753
$T170924 DD	019930520H
	DD	01H
	DD	FLAT:$T170927
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0GC@MAEHGHNK@SELECT?5?7bType?0?5?7bKind?0?5?7wReplace@
CONST	SEGMENT
??_C@_0GC@MAEHGHNK@SELECT?5?7bType?0?5?7bKind?0?5?7wReplace@ DB 'SELECT ', 09H
	DB	'bType, ', 09H, 'bKind, ', 09H, 'wReplaceID, ', 09H, 'bCountMa'
	DB	'x, ', 09H, 'bMinLevel, ', 09H, 'bMaxLevel, ', 09H, 'wProb ', 09H
	DB	'FROM TGAMBLECHART', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CTBLGamble@@6B@
CONST	SEGMENT
??_7CTBLGamble@@6B@ DD FLAT:??_ECTBLGamble@@UAEPAXI@Z	; CTBLGamble::`vftable'
	DD	FLAT:?GetNumCol@CTBLGamble@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLGamble@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLGamble@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T170752 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLGamble@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLGamble::CTBLGamble, COMDAT
; _this$ = ecx

; 2899 : 	FROM TGAMBLECHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLGamble@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0GC@MAEHGHNK@SELECT?5?7bType?0?5?7bKind?0?5?7wReplace@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T170752[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLGamble@@6B@
  0005e	72 0d		 jb	 SHORT $L170925
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L170925:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L170753:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLGamble@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T170924
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLGamble@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLGamble::CTBLGamble
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLGamble@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLGamble@@UAEHXZ PROC NEAR			; CTBLGamble::GetNumCol, COMDAT
; _this$ = ecx

; 2901 : BEGIN_COLUMN(7)

  00000	b8 07 00 00 00	 mov	 eax, 7
  00005	c3		 ret	 0
?GetNumCol@CTBLGamble@@UAEHXZ ENDP			; CTBLGamble::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGamble@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLGamble@@UAEFXZ PROC NEAR		; CTBLGamble::BindColumns, COMDAT
; _this$ = ecx

; 2901 : BEGIN_COLUMN(7)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2902 : 	COLUMN_ENTRY(m_bType)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L133169
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 97 00 00
	00		 jne	 $L133165
$L133169:

; 2903 : 	COLUMN_ENTRY(m_bKind)

  00020	8d 8e 2d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3117]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 06		 je	 SHORT $L133170
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	75 7c		 jne	 SHORT $L133165
$L133170:

; 2904 : 	COLUMN_ENTRY(m_wReplaceID)

  0003b	8d 96 2e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3118]
  00041	52		 push	 edx
  00042	6a 03		 push	 3
  00044	8b ce		 mov	 ecx, esi
  00046	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0004b	66 85 c0	 test	 ax, ax
  0004e	74 06		 je	 SHORT $L133171
  00050	66 3d 01 00	 cmp	 ax, 1
  00054	75 61		 jne	 SHORT $L133165
$L133171:

; 2905 : 	COLUMN_ENTRY(m_bCountMax)

  00056	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  0005c	50		 push	 eax
  0005d	6a 04		 push	 4
  0005f	8b ce		 mov	 ecx, esi
  00061	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00066	66 85 c0	 test	 ax, ax
  00069	74 06		 je	 SHORT $L133172
  0006b	66 3d 01 00	 cmp	 ax, 1
  0006f	75 46		 jne	 SHORT $L133165
$L133172:

; 2906 : 	COLUMN_ENTRY(m_bMinLevel)

  00071	8d 8e 31 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3121]
  00077	51		 push	 ecx
  00078	6a 05		 push	 5
  0007a	8b ce		 mov	 ecx, esi
  0007c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00081	66 85 c0	 test	 ax, ax
  00084	74 06		 je	 SHORT $L133173
  00086	66 3d 01 00	 cmp	 ax, 1
  0008a	75 2b		 jne	 SHORT $L133165
$L133173:

; 2907 : 	COLUMN_ENTRY(m_bMaxLevel)

  0008c	8d 96 32 0c 00
	00		 lea	 edx, DWORD PTR [esi+3122]
  00092	52		 push	 edx
  00093	6a 06		 push	 6
  00095	8b ce		 mov	 ecx, esi
  00097	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0009c	66 85 c0	 test	 ax, ax
  0009f	74 06		 je	 SHORT $L133174
  000a1	66 3d 01 00	 cmp	 ax, 1
  000a5	75 10		 jne	 SHORT $L133165
$L133174:

; 2908 : 	COLUMN_ENTRY(m_wProb)

  000a7	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  000ad	50		 push	 eax
  000ae	6a 07		 push	 7
  000b0	8b ce		 mov	 ecx, esi
  000b2	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
$L133165:
  000b7	5e		 pop	 esi

; 2909 : END_COL()

  000b8	c3		 ret	 0
?BindColumns@CTBLGamble@@UAEFXZ ENDP			; CTBLGamble::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLGamble@@UAE@XZ				; CTBLGamble::~CTBLGamble
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLGamble@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLGamble@@UAEPAXI@Z PROC NEAR			; CTBLGamble::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLGamble@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L170939
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L170939:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLGamble@@UAEPAXI@Z ENDP				; CTBLGamble::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLGamble@@UAE@XZ
_TEXT	SEGMENT
??1CTBLGamble@@UAE@XZ PROC NEAR				; CTBLGamble::~CTBLGamble, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLGamble@@UAE@XZ ENDP				; CTBLGamble::~CTBLGamble
_TEXT	ENDS
PUBLIC	??0CTBLGodTower@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGodTower::CTBLGodTower
PUBLIC	?GetNumCol@CTBLGodTower@@UAEHXZ			; CTBLGodTower::GetNumCol
PUBLIC	?BindColumns@CTBLGodTower@@UAEFXZ		; CTBLGodTower::BindColumns
PUBLIC	??_7CTBLGodTower@@6B@				; CTBLGodTower::`vftable'
PUBLIC	??_GCTBLGodTower@@UAEPAXI@Z			; CTBLGodTower::`scalar deleting destructor'
PUBLIC	??_C@_0EC@FEMNPAOE@SELECT?5?7wID?0?5?7wMapID?0?5?7fPosX?0?5?7f@ ; `string'
EXTRN	??_ECTBLGodTower@@UAEPAXI@Z:NEAR		; CTBLGodTower::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T171122 DD	0ffffffffH
	DD	FLAT:$L170948
$T171119 DD	019930520H
	DD	01H
	DD	FLAT:$T171122
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EC@FEMNPAOE@SELECT?5?7wID?0?5?7wMapID?0?5?7fPosX?0?5?7f@
CONST	SEGMENT
??_C@_0EC@FEMNPAOE@SELECT?5?7wID?0?5?7wMapID?0?5?7fPosX?0?5?7f@ DB 'SELEC'
	DB	'T ', 09H, 'wID, ', 09H, 'wMapID, ', 09H, 'fPosX, ', 09H, 'fPo'
	DB	'sY, ', 09H, 'fPosZ ', 09H, 'FROM TGODTOWERCHART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLGodTower@@6B@
CONST	SEGMENT
??_7CTBLGodTower@@6B@ DD FLAT:??_ECTBLGodTower@@UAEPAXI@Z ; CTBLGodTower::`vftable'
	DD	FLAT:?GetNumCol@CTBLGodTower@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLGodTower@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLGodTower@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T170947 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLGodTower@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLGodTower::CTBLGodTower, COMDAT
; _this$ = ecx

; 2927 : 	FROM TGODTOWERCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLGodTower@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EC@FEMNPAOE@SELECT?5?7wID?0?5?7wMapID?0?5?7fPosX?0?5?7f@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T170947[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLGodTower@@6B@
  0005e	72 0d		 jb	 SHORT $L171120
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L171120:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L170948:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLGodTower@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T171119
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLGodTower@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLGodTower::CTBLGodTower
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLGodTower@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLGodTower@@UAEHXZ PROC NEAR		; CTBLGodTower::GetNumCol, COMDAT
; _this$ = ecx

; 2929 : BEGIN_COLUMN(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumCol@CTBLGodTower@@UAEHXZ ENDP			; CTBLGodTower::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGodTower@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLGodTower@@UAEFXZ PROC NEAR		; CTBLGodTower::BindColumns, COMDAT
; _this$ = ecx

; 2929 : BEGIN_COLUMN(5)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2930 : 	COLUMN_ENTRY(m_wID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L133220
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 61		 jne	 SHORT $L133216
$L133220:

; 2931 : 	COLUMN_ENTRY(m_wMapID)

  0001c	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L133221
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 46		 jne	 SHORT $L133216
$L133221:

; 2932 : 	COLUMN_ENTRY(m_fPosX)

  00037	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L133222
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 2b		 jne	 SHORT $L133216
$L133222:

; 2933 : 	COLUMN_ENTRY(m_fPosY)

  00052	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  00062	66 85 c0	 test	 ax, ax
  00065	74 06		 je	 SHORT $L133223
  00067	66 3d 01 00	 cmp	 ax, 1
  0006b	75 10		 jne	 SHORT $L133216
$L133223:

; 2934 : 	COLUMN_ENTRY(m_fPosZ)

  0006d	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  00073	51		 push	 ecx
  00074	6a 05		 push	 5
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
$L133216:
  0007d	5e		 pop	 esi

; 2935 : END_COL()

  0007e	c3		 ret	 0
?BindColumns@CTBLGodTower@@UAEFXZ ENDP			; CTBLGodTower::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLGodTower@@UAE@XZ				; CTBLGodTower::~CTBLGodTower
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLGodTower@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLGodTower@@UAEPAXI@Z PROC NEAR			; CTBLGodTower::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLGodTower@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L171134
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L171134:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLGodTower@@UAEPAXI@Z ENDP			; CTBLGodTower::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLGodTower@@UAE@XZ
_TEXT	SEGMENT
??1CTBLGodTower@@UAE@XZ PROC NEAR			; CTBLGodTower::~CTBLGodTower, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLGodTower@@UAE@XZ ENDP				; CTBLGodTower::~CTBLGodTower
_TEXT	ENDS
PUBLIC	??0CTBLGodBall@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGodBall::CTBLGodBall
PUBLIC	?GetNumCol@CTBLGodBall@@UAEHXZ			; CTBLGodBall::GetNumCol
PUBLIC	?BindColumns@CTBLGodBall@@UAEFXZ		; CTBLGodBall::BindColumns
PUBLIC	??_7CTBLGodBall@@6B@				; CTBLGodBall::`vftable'
PUBLIC	??_GCTBLGodBall@@UAEPAXI@Z			; CTBLGodBall::`scalar deleting destructor'
PUBLIC	??_C@_0EJ@NJBKJIJJ@SELECT?5?7wID?0?5?7bCamp?0?5?7wMapID?0?5?7f@ ; `string'
EXTRN	??_ECTBLGodBall@@UAEPAXI@Z:NEAR			; CTBLGodBall::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T171317 DD	0ffffffffH
	DD	FLAT:$L171143
$T171314 DD	019930520H
	DD	01H
	DD	FLAT:$T171317
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EJ@NJBKJIJJ@SELECT?5?7wID?0?5?7bCamp?0?5?7wMapID?0?5?7f@
CONST	SEGMENT
??_C@_0EJ@NJBKJIJJ@SELECT?5?7wID?0?5?7bCamp?0?5?7wMapID?0?5?7f@ DB 'SELEC'
	DB	'T ', 09H, 'wID, ', 09H, 'bCamp, ', 09H, 'wMapID, ', 09H, 'fPo'
	DB	'sX, ', 09H, 'fPosY, ', 09H, 'fPosZ ', 09H, 'FROM TGODBALLCHAR'
	DB	'T', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7CTBLGodBall@@6B@
CONST	SEGMENT
??_7CTBLGodBall@@6B@ DD FLAT:??_ECTBLGodBall@@UAEPAXI@Z	; CTBLGodBall::`vftable'
	DD	FLAT:?GetNumCol@CTBLGodBall@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLGodBall@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLGodBall@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T171142 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLGodBall@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLGodBall::CTBLGodBall, COMDAT
; _this$ = ecx

; 2955 : 	FROM TGODBALLCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLGodBall@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EJ@NJBKJIJJ@SELECT?5?7wID?0?5?7bCamp?0?5?7wMapID?0?5?7f@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T171142[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLGodBall@@6B@
  0005e	72 0d		 jb	 SHORT $L171315
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L171315:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L171143:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLGodBall@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T171314
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLGodBall@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLGodBall::CTBLGodBall
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLGodBall@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLGodBall@@UAEHXZ PROC NEAR		; CTBLGodBall::GetNumCol, COMDAT
; _this$ = ecx

; 2957 : BEGIN_COLUMN(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumCol@CTBLGodBall@@UAEHXZ ENDP			; CTBLGodBall::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGodBall@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLGodBall@@UAEFXZ PROC NEAR		; CTBLGodBall::BindColumns, COMDAT
; _this$ = ecx

; 2957 : BEGIN_COLUMN(6)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2958 : 	COLUMN_ENTRY(m_wID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L133270
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 7c		 jne	 SHORT $L133266
$L133270:

; 2959 : 	COLUMN_ENTRY(m_bCamp)

  0001c	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L133271
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 61		 jne	 SHORT $L133266
$L133271:

; 2960 : 	COLUMN_ENTRY(m_wMapID)

  00037	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L133272
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 46		 jne	 SHORT $L133266
$L133272:

; 2961 : 	COLUMN_ENTRY(m_fPosX)

  00052	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  00062	66 85 c0	 test	 ax, ax
  00065	74 06		 je	 SHORT $L133273
  00067	66 3d 01 00	 cmp	 ax, 1
  0006b	75 2b		 jne	 SHORT $L133266
$L133273:

; 2962 : 	COLUMN_ENTRY(m_fPosY)

  0006d	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  00073	51		 push	 ecx
  00074	6a 05		 push	 5
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
  0007d	66 85 c0	 test	 ax, ax
  00080	74 06		 je	 SHORT $L133274
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 10		 jne	 SHORT $L133266
$L133274:

; 2963 : 	COLUMN_ENTRY(m_fPosZ)

  00088	8d 96 3c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3132]
  0008e	52		 push	 edx
  0008f	6a 06		 push	 6
  00091	8b ce		 mov	 ecx, esi
  00093	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAM@Z ; CSqlBase::BindCol
$L133266:
  00098	5e		 pop	 esi

; 2964 : END_COL()

  00099	c3		 ret	 0
?BindColumns@CTBLGodBall@@UAEFXZ ENDP			; CTBLGodBall::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLGodBall@@UAE@XZ				; CTBLGodBall::~CTBLGodBall
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLGodBall@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLGodBall@@UAEPAXI@Z PROC NEAR			; CTBLGodBall::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLGodBall@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L171329
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L171329:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLGodBall@@UAEPAXI@Z ENDP				; CTBLGodBall::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLGodBall@@UAE@XZ
_TEXT	SEGMENT
??1CTBLGodBall@@UAE@XZ PROC NEAR			; CTBLGodBall::~CTBLGodBall, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLGodBall@@UAE@XZ ENDP				; CTBLGodBall::~CTBLGodBall
_TEXT	ENDS
PUBLIC	??0CTBLLocalOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLLocalOccupy::CTBLLocalOccupy
PUBLIC	?GetNumCol@CTBLLocalOccupy@@UAEHXZ		; CTBLLocalOccupy::GetNumCol
PUBLIC	?BindColumns@CTBLLocalOccupy@@UAEFXZ		; CTBLLocalOccupy::BindColumns
PUBLIC	??_7CTBLLocalOccupy@@6B@			; CTBLLocalOccupy::`vftable'
PUBLIC	??_GCTBLLocalOccupy@@UAEPAXI@Z			; CTBLLocalOccupy::`scalar deleting destructor'
PUBLIC	??_C@_0EE@NJFIBMEI@SELECT?5?7wLocalID?0?5?7bDay?0?5?7dwGuil@ ; `string'
EXTRN	??_ECTBLLocalOccupy@@UAEPAXI@Z:NEAR		; CTBLLocalOccupy::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T171512 DD	0ffffffffH
	DD	FLAT:$L171338
$T171509 DD	019930520H
	DD	01H
	DD	FLAT:$T171512
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EE@NJFIBMEI@SELECT?5?7wLocalID?0?5?7bDay?0?5?7dwGuil@
CONST	SEGMENT
??_C@_0EE@NJFIBMEI@SELECT?5?7wLocalID?0?5?7bDay?0?5?7dwGuil@ DB 'SELECT ', 09H
	DB	'wLocalID, ', 09H, 'bDay, ', 09H, 'dwGuildID, ', 09H, 'bType ', 09H
	DB	'FROM TLOCALOCCUPYTABLE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CTBLLocalOccupy@@6B@
CONST	SEGMENT
??_7CTBLLocalOccupy@@6B@ DD FLAT:??_ECTBLLocalOccupy@@UAEPAXI@Z ; CTBLLocalOccupy::`vftable'
	DD	FLAT:?GetNumCol@CTBLLocalOccupy@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLLocalOccupy@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLLocalOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T171337 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLLocalOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLLocalOccupy::CTBLLocalOccupy, COMDAT
; _this$ = ecx

; 2980 : 	FROM TLOCALOCCUPYTABLE"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLLocalOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EE@NJFIBMEI@SELECT?5?7wLocalID?0?5?7bDay?0?5?7dwGuil@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T171337[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLLocalOccupy@@6B@
  0005e	72 0d		 jb	 SHORT $L171510
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L171510:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L171338:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLLocalOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T171509
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLLocalOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLLocalOccupy::CTBLLocalOccupy
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLLocalOccupy@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLLocalOccupy@@UAEHXZ PROC NEAR		; CTBLLocalOccupy::GetNumCol, COMDAT
; _this$ = ecx

; 2982 : BEGIN_COLUMN(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumCol@CTBLLocalOccupy@@UAEHXZ ENDP			; CTBLLocalOccupy::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLLocalOccupy@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLLocalOccupy@@UAEFXZ PROC NEAR		; CTBLLocalOccupy::BindColumns, COMDAT
; _this$ = ecx

; 2982 : BEGIN_COLUMN(4)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 2983 : 	COLUMN_ENTRY(m_wLocalID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L133319
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 46		 jne	 SHORT $L133315
$L133319:

; 2984 : 	COLUMN_ENTRY(m_bDay)

  0001c	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L133320
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 2b		 jne	 SHORT $L133315
$L133320:

; 2985 : 	COLUMN_ENTRY(m_dwGuildID)

  00037	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L133321
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 10		 jne	 SHORT $L133315
$L133321:

; 2986 : 	COLUMN_ENTRY(m_bType)

  00052	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L133315:
  00062	5e		 pop	 esi

; 2987 : END_COL()

  00063	c3		 ret	 0
?BindColumns@CTBLLocalOccupy@@UAEFXZ ENDP		; CTBLLocalOccupy::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLLocalOccupy@@UAE@XZ			; CTBLLocalOccupy::~CTBLLocalOccupy
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLLocalOccupy@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLLocalOccupy@@UAEPAXI@Z PROC NEAR		; CTBLLocalOccupy::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLLocalOccupy@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L171524
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L171524:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLLocalOccupy@@UAEPAXI@Z ENDP			; CTBLLocalOccupy::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLLocalOccupy@@UAE@XZ
_TEXT	SEGMENT
??1CTBLLocalOccupy@@UAE@XZ PROC NEAR			; CTBLLocalOccupy::~CTBLLocalOccupy, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLLocalOccupy@@UAE@XZ ENDP				; CTBLLocalOccupy::~CTBLLocalOccupy
_TEXT	ENDS
PUBLIC	??0CTBLSkillPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSkillPoint::CTBLSkillPoint
PUBLIC	?GetNumCol@CTBLSkillPoint@@UAEHXZ		; CTBLSkillPoint::GetNumCol
PUBLIC	?BindColumns@CTBLSkillPoint@@UAEFXZ		; CTBLSkillPoint::BindColumns
PUBLIC	??_7CTBLSkillPoint@@6B@				; CTBLSkillPoint::`vftable'
PUBLIC	??_GCTBLSkillPoint@@UAEPAXI@Z			; CTBLSkillPoint::`scalar deleting destructor'
PUBLIC	??_C@_0GG@FGFPLDPP@SELECT?5?7wID?0?5?7bLevel?0?5?7bSkillPoi@ ; `string'
EXTRN	??_ECTBLSkillPoint@@UAEPAXI@Z:NEAR		; CTBLSkillPoint::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T171707 DD	0ffffffffH
	DD	FLAT:$L171533
$T171704 DD	019930520H
	DD	01H
	DD	FLAT:$T171707
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0GG@FGFPLDPP@SELECT?5?7wID?0?5?7bLevel?0?5?7bSkillPoi@
CONST	SEGMENT
??_C@_0GG@FGFPLDPP@SELECT?5?7wID?0?5?7bLevel?0?5?7bSkillPoi@ DB 'SELECT ', 09H
	DB	'wID, ', 09H, 'bLevel, ', 09H, 'bSkillPoint, ', 09H, 'bGroupPo'
	DB	'int, ', 09H, 'bPrevSkillLevel, ', 09H, 'dwPayback ', 09H, 'FR'
	DB	'OM TSKILLPOINTCHART', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CTBLSkillPoint@@6B@
CONST	SEGMENT
??_7CTBLSkillPoint@@6B@ DD FLAT:??_ECTBLSkillPoint@@UAEPAXI@Z ; CTBLSkillPoint::`vftable'
	DD	FLAT:?GetNumCol@CTBLSkillPoint@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLSkillPoint@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLSkillPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T171532 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLSkillPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLSkillPoint::CTBLSkillPoint, COMDAT
; _this$ = ecx

; 3007 : 	FROM TSKILLPOINTCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLSkillPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0GG@FGFPLDPP@SELECT?5?7wID?0?5?7bLevel?0?5?7bSkillPoi@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T171532[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLSkillPoint@@6B@
  0005e	72 0d		 jb	 SHORT $L171705
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L171705:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L171533:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLSkillPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T171704
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLSkillPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLSkillPoint::CTBLSkillPoint
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLSkillPoint@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLSkillPoint@@UAEHXZ PROC NEAR		; CTBLSkillPoint::GetNumCol, COMDAT
; _this$ = ecx

; 3009 : BEGIN_COLUMN(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumCol@CTBLSkillPoint@@UAEHXZ ENDP			; CTBLSkillPoint::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSkillPoint@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLSkillPoint@@UAEFXZ PROC NEAR		; CTBLSkillPoint::BindColumns, COMDAT
; _this$ = ecx

; 3009 : BEGIN_COLUMN(6)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3010 : 	COLUMN_ENTRY(m_wSkillID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L133368
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 7c		 jne	 SHORT $L133364
$L133368:

; 3011 : 	COLUMN_ENTRY(m_bLevel)

  0001c	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L133369
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 61		 jne	 SHORT $L133364
$L133369:

; 3012 : 	COLUMN_ENTRY(m_bSkillPoint)

  00037	8d 96 2f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3119]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L133370
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 46		 jne	 SHORT $L133364
$L133370:

; 3013 : 	COLUMN_ENTRY(m_bGroupPoint)

  00052	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00062	66 85 c0	 test	 ax, ax
  00065	74 06		 je	 SHORT $L133371
  00067	66 3d 01 00	 cmp	 ax, 1
  0006b	75 2b		 jne	 SHORT $L133364
$L133371:

; 3014 : 	COLUMN_ENTRY(m_bParentLevel)

  0006d	8d 8e 31 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3121]
  00073	51		 push	 ecx
  00074	6a 05		 push	 5
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0007d	66 85 c0	 test	 ax, ax
  00080	74 06		 je	 SHORT $L133372
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 10		 jne	 SHORT $L133364
$L133372:

; 3015 : 	COLUMN_ENTRY(m_dwPayback)

  00088	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0008e	52		 push	 edx
  0008f	6a 06		 push	 6
  00091	8b ce		 mov	 ecx, esi
  00093	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L133364:
  00098	5e		 pop	 esi

; 3016 : END_COL()

  00099	c3		 ret	 0
?BindColumns@CTBLSkillPoint@@UAEFXZ ENDP		; CTBLSkillPoint::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLSkillPoint@@UAE@XZ			; CTBLSkillPoint::~CTBLSkillPoint
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLSkillPoint@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLSkillPoint@@UAEPAXI@Z PROC NEAR			; CTBLSkillPoint::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLSkillPoint@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L171719
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L171719:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLSkillPoint@@UAEPAXI@Z ENDP			; CTBLSkillPoint::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLSkillPoint@@UAE@XZ
_TEXT	SEGMENT
??1CTBLSkillPoint@@UAE@XZ PROC NEAR			; CTBLSkillPoint::~CTBLSkillPoint, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLSkillPoint@@UAE@XZ ENDP				; CTBLSkillPoint::~CTBLSkillPoint
_TEXT	ENDS
PUBLIC	??0CTBLRecallMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLRecallMaintain::CTBLRecallMaintain
PUBLIC	?GetNumCol@CTBLRecallMaintain@@UAEHXZ		; CTBLRecallMaintain::GetNumCol
PUBLIC	?BindColumns@CTBLRecallMaintain@@UAEFXZ		; CTBLRecallMaintain::BindColumns
PUBLIC	?GetNumParam@CTBLRecallMaintain@@UAEHXZ		; CTBLRecallMaintain::GetNumParam
PUBLIC	?BindParameters@CTBLRecallMaintain@@UAEFH@Z	; CTBLRecallMaintain::BindParameters
PUBLIC	??_7CTBLRecallMaintain@@6B@			; CTBLRecallMaintain::`vftable'
PUBLIC	??_GCTBLRecallMaintain@@UAEPAXI@Z		; CTBLRecallMaintain::`scalar deleting destructor'
PUBLIC	??_C@_0KI@JDJDIFFG@SELECT?5?7dwRecallID?0?5?7wSkillID?0?5?7@ ; `string'
EXTRN	??_ECTBLRecallMaintain@@UAEPAXI@Z:NEAR		; CTBLRecallMaintain::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T171902 DD	0ffffffffH
	DD	FLAT:$L171728
$T171899 DD	019930520H
	DD	01H
	DD	FLAT:$T171902
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0KI@JDJDIFFG@SELECT?5?7dwRecallID?0?5?7wSkillID?0?5?7@
CONST	SEGMENT
??_C@_0KI@JDJDIFFG@SELECT?5?7dwRecallID?0?5?7wSkillID?0?5?7@ DB 'SELECT ', 09H
	DB	'dwRecallID, ', 09H, 'wSkillID, ', 09H, 'bLevel, ', 09H, 'dwRe'
	DB	'mainTick, ', 09H, 'bAttackType, ', 09H, 'dwAttackID, ', 09H, 'b'
	DB	'HostType, ', 09H, 'dwHostID, ', 09H, 'bAttackCountry ', 09H, 'F'
	DB	'ROM TRECALLMAINTAINTABLE ', 09H, 'WHERE dwCharID = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLRecallMaintain@@6B@
CONST	SEGMENT
??_7CTBLRecallMaintain@@6B@ DD FLAT:??_ECTBLRecallMaintain@@UAEPAXI@Z ; CTBLRecallMaintain::`vftable'
	DD	FLAT:?GetNumCol@CTBLRecallMaintain@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLRecallMaintain@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLRecallMaintain@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLRecallMaintain@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLRecallMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T171727 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLRecallMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLRecallMaintain::CTBLRecallMaintain, COMDAT
; _this$ = ecx

; 3044 : 	WHERE dwCharID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLRecallMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0KI@JDJDIFFG@SELECT?5?7dwRecallID?0?5?7wSkillID?0?5?7@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T171727[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLRecallMaintain@@6B@
  0005e	72 0d		 jb	 SHORT $L171900
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L171900:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L171728:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLRecallMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T171899
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLRecallMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLRecallMaintain::CTBLRecallMaintain
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLRecallMaintain@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLRecallMaintain@@UAEHXZ PROC NEAR		; CTBLRecallMaintain::GetNumCol, COMDAT
; _this$ = ecx

; 3046 : BEGIN_COLUMN(9)

  00000	b8 09 00 00 00	 mov	 eax, 9
  00005	c3		 ret	 0
?GetNumCol@CTBLRecallMaintain@@UAEHXZ ENDP		; CTBLRecallMaintain::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLRecallMaintain@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLRecallMaintain@@UAEFXZ PROC NEAR	; CTBLRecallMaintain::BindColumns, COMDAT
; _this$ = ecx

; 3046 : BEGIN_COLUMN(9)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3047 : 	COLUMN_ENTRY(m_dwRecallID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L133426
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 d5 00 00
	00		 jne	 $L133422
$L133426:

; 3048 : 	COLUMN_ENTRY(m_wSkillID)

  00020	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L133427
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 b6 00 00
	00		 jne	 $L133422
$L133427:

; 3049 : 	COLUMN_ENTRY(m_bLevel)

  0003f	8d 96 36 0c 00
	00		 lea	 edx, DWORD PTR [esi+3126]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L133428
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 97 00 00
	00		 jne	 $L133422
$L133428:

; 3050 : 	COLUMN_ENTRY(m_dwRemainTick)

  0005e	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 06		 je	 SHORT $L133429
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	75 7c		 jne	 SHORT $L133422
$L133429:

; 3051 : 	COLUMN_ENTRY(m_bAttackType)

  00079	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  0007f	51		 push	 ecx
  00080	6a 05		 push	 5
  00082	8b ce		 mov	 ecx, esi
  00084	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00089	66 85 c0	 test	 ax, ax
  0008c	74 06		 je	 SHORT $L133430
  0008e	66 3d 01 00	 cmp	 ax, 1
  00092	75 61		 jne	 SHORT $L133422
$L133430:

; 3052 : 	COLUMN_ENTRY(m_dwAttackID)

  00094	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  0009a	52		 push	 edx
  0009b	6a 06		 push	 6
  0009d	8b ce		 mov	 ecx, esi
  0009f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000a4	66 85 c0	 test	 ax, ax
  000a7	74 06		 je	 SHORT $L133431
  000a9	66 3d 01 00	 cmp	 ax, 1
  000ad	75 46		 jne	 SHORT $L133422
$L133431:

; 3053 : 	COLUMN_ENTRY(m_bHostType)

  000af	8d 86 44 0c 00
	00		 lea	 eax, DWORD PTR [esi+3140]
  000b5	50		 push	 eax
  000b6	6a 07		 push	 7
  000b8	8b ce		 mov	 ecx, esi
  000ba	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000bf	66 85 c0	 test	 ax, ax
  000c2	74 06		 je	 SHORT $L133432
  000c4	66 3d 01 00	 cmp	 ax, 1
  000c8	75 2b		 jne	 SHORT $L133422
$L133432:

; 3054 : 	COLUMN_ENTRY(m_dwHostID)

  000ca	8d 8e 48 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3144]
  000d0	51		 push	 ecx
  000d1	6a 08		 push	 8
  000d3	8b ce		 mov	 ecx, esi
  000d5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000da	66 85 c0	 test	 ax, ax
  000dd	74 06		 je	 SHORT $L133433
  000df	66 3d 01 00	 cmp	 ax, 1
  000e3	75 10		 jne	 SHORT $L133422
$L133433:

; 3055 : 	COLUMN_ENTRY(m_bAttackCountry)

  000e5	8d 96 4c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3148]
  000eb	52		 push	 edx
  000ec	6a 09		 push	 9
  000ee	8b ce		 mov	 ecx, esi
  000f0	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L133422:
  000f5	5e		 pop	 esi

; 3056 : END_COL()

  000f6	c3		 ret	 0
?BindColumns@CTBLRecallMaintain@@UAEFXZ ENDP		; CTBLRecallMaintain::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLRecallMaintain@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLRecallMaintain@@UAEHXZ PROC NEAR	; CTBLRecallMaintain::GetNumParam, COMDAT
; _this$ = ecx

; 3058 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLRecallMaintain@@UAEHXZ ENDP		; CTBLRecallMaintain::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLRecallMaintain@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLRecallMaintain@@UAEFH@Z PROC NEAR	; CTBLRecallMaintain::BindParameters, COMDAT
; _this$ = ecx

; 3059 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L133439
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L133439:

; 3060 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLRecallMaintain@@UAEFH@Z ENDP	; CTBLRecallMaintain::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLRecallMaintain@@UAE@XZ			; CTBLRecallMaintain::~CTBLRecallMaintain
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLRecallMaintain@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLRecallMaintain@@UAEPAXI@Z PROC NEAR		; CTBLRecallMaintain::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLRecallMaintain@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L171920
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L171920:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLRecallMaintain@@UAEPAXI@Z ENDP			; CTBLRecallMaintain::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLRecallMaintain@@UAE@XZ
_TEXT	SEGMENT
??1CTBLRecallMaintain@@UAE@XZ PROC NEAR			; CTBLRecallMaintain::~CTBLRecallMaintain, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLRecallMaintain@@UAE@XZ ENDP			; CTBLRecallMaintain::~CTBLRecallMaintain
_TEXT	ENDS
PUBLIC	??0CTBLSvrMsg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSvrMsg::CTBLSvrMsg
PUBLIC	?GetNumCol@CTBLSvrMsg@@UAEHXZ			; CTBLSvrMsg::GetNumCol
PUBLIC	?BindColumns@CTBLSvrMsg@@UAEFXZ			; CTBLSvrMsg::BindColumns
PUBLIC	??_7CTBLSvrMsg@@6B@				; CTBLSvrMsg::`vftable'
PUBLIC	??_GCTBLSvrMsg@@UAEPAXI@Z			; CTBLSvrMsg::`scalar deleting destructor'
PUBLIC	??_C@_0CJ@JJBDOFJM@SELECT?5dwID?0?5szMessage?5FROM?5TSVR@ ; `string'
EXTRN	??_ECTBLSvrMsg@@UAEPAXI@Z:NEAR			; CTBLSvrMsg::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T172103 DD	0ffffffffH
	DD	FLAT:$L171929
$T172100 DD	019930520H
	DD	01H
	DD	FLAT:$T172103
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CJ@JJBDOFJM@SELECT?5dwID?0?5szMessage?5FROM?5TSVR@
CONST	SEGMENT
??_C@_0CJ@JJBDOFJM@SELECT?5dwID?0?5szMessage?5FROM?5TSVR@ DB 'SELECT dwID'
	DB	', szMessage FROM TSVRMSGCHART', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CTBLSvrMsg@@6B@
CONST	SEGMENT
??_7CTBLSvrMsg@@6B@ DD FLAT:??_ECTBLSvrMsg@@UAEPAXI@Z	; CTBLSvrMsg::`vftable'
	DD	FLAT:?GetNumCol@CTBLSvrMsg@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLSvrMsg@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLSvrMsg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T171928 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLSvrMsg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLSvrMsg::CTBLSvrMsg, COMDAT
; _this$ = ecx

; 3069 : DEF_QUERY(CTBLSvrMsg, _T("SELECT dwID, szMessage FROM TSVRMSGCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLSvrMsg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CJ@JJBDOFJM@SELECT?5dwID?0?5szMessage?5FROM?5TSVR@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T171928[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLSvrMsg@@6B@
  0005e	72 0d		 jb	 SHORT $L172101
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L172101:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L171929:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLSvrMsg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T172100
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLSvrMsg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLSvrMsg::CTBLSvrMsg
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLSvrMsg@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLSvrMsg@@UAEHXZ PROC NEAR			; CTBLSvrMsg::GetNumCol, COMDAT
; _this$ = ecx

; 3071 : BEGIN_COLUMN(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumCol@CTBLSvrMsg@@UAEHXZ ENDP			; CTBLSvrMsg::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSvrMsg@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLSvrMsg@@UAEFXZ PROC NEAR		; CTBLSvrMsg::BindColumns, COMDAT
; _this$ = ecx

; 3071 : BEGIN_COLUMN(2)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3072 : 	COLUMN_ENTRY(m_dwID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L133486
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 15		 jne	 SHORT $L133482
$L133486:

; 3073 : 	COLUMN_ENTRY_STR(m_szMessage)

  0001c	68 01 01 00 00	 push	 257			; 00000101H
  00021	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00027	51		 push	 ecx
  00028	6a 02		 push	 2
  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
$L133482:
  00031	5e		 pop	 esi

; 3074 : END_COL()

  00032	c3		 ret	 0
?BindColumns@CTBLSvrMsg@@UAEFXZ ENDP			; CTBLSvrMsg::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLSvrMsg@@UAE@XZ				; CTBLSvrMsg::~CTBLSvrMsg
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLSvrMsg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLSvrMsg@@UAEPAXI@Z PROC NEAR			; CTBLSvrMsg::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLSvrMsg@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L172115
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L172115:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLSvrMsg@@UAEPAXI@Z ENDP				; CTBLSvrMsg::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLSvrMsg@@UAE@XZ
_TEXT	SEGMENT
??1CTBLSvrMsg@@UAE@XZ PROC NEAR				; CTBLSvrMsg::~CTBLSvrMsg, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLSvrMsg@@UAE@XZ ENDP				; CTBLSvrMsg::~CTBLSvrMsg
_TEXT	ENDS
PUBLIC	??0CTBLPvPointChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLPvPointChart::CTBLPvPointChart
PUBLIC	?GetNumCol@CTBLPvPointChart@@UAEHXZ		; CTBLPvPointChart::GetNumCol
PUBLIC	?BindColumns@CTBLPvPointChart@@UAEFXZ		; CTBLPvPointChart::BindColumns
PUBLIC	??_7CTBLPvPointChart@@6B@			; CTBLPvPointChart::`vftable'
PUBLIC	??_GCTBLPvPointChart@@UAEPAXI@Z			; CTBLPvPointChart::`scalar deleting destructor'
PUBLIC	??_C@_0FF@CEPMKION@SELECT?5wLocalID?0?5bStatus?0?5bEvent@ ; `string'
EXTRN	??_ECTBLPvPointChart@@UAEPAXI@Z:NEAR		; CTBLPvPointChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T172298 DD	0ffffffffH
	DD	FLAT:$L172124
$T172295 DD	019930520H
	DD	01H
	DD	FLAT:$T172298
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FF@CEPMKION@SELECT?5wLocalID?0?5bStatus?0?5bEvent@
CONST	SEGMENT
??_C@_0FF@CEPMKION@SELECT?5wLocalID?0?5bStatus?0?5bEvent@ DB 'SELECT wLoc'
	DB	'alID, bStatus, bEvent, bTarget, dwIncPoint, dwDecPoint FROM T'
	DB	'PVPOINTCHART', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLPvPointChart@@6B@
CONST	SEGMENT
??_7CTBLPvPointChart@@6B@ DD FLAT:??_ECTBLPvPointChart@@UAEPAXI@Z ; CTBLPvPointChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLPvPointChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLPvPointChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLPvPointChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T172123 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLPvPointChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLPvPointChart::CTBLPvPointChart, COMDAT
; _this$ = ecx

; 3087 : DEF_QUERY(CTBLPvPointChart, _T("SELECT wLocalID, bStatus, bEvent, bTarget, dwIncPoint, dwDecPoint FROM TPVPOINTCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLPvPointChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FF@CEPMKION@SELECT?5wLocalID?0?5bStatus?0?5bEvent@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T172123[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLPvPointChart@@6B@
  0005e	72 0d		 jb	 SHORT $L172296
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L172296:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L172124:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLPvPointChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T172295
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLPvPointChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLPvPointChart::CTBLPvPointChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLPvPointChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLPvPointChart@@UAEHXZ PROC NEAR		; CTBLPvPointChart::GetNumCol, COMDAT
; _this$ = ecx

; 3089 : BEGIN_COLUMN(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumCol@CTBLPvPointChart@@UAEHXZ ENDP		; CTBLPvPointChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLPvPointChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLPvPointChart@@UAEFXZ PROC NEAR		; CTBLPvPointChart::BindColumns, COMDAT
; _this$ = ecx

; 3089 : BEGIN_COLUMN(6)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3090 : 	COLUMN_ENTRY(m_wLocalID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L133533
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 7c		 jne	 SHORT $L133529
$L133533:

; 3091 : 	COLUMN_ENTRY(m_bStatus)

  0001c	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L133534
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 61		 jne	 SHORT $L133529
$L133534:

; 3092 : 	COLUMN_ENTRY(m_bEvent)

  00037	8d 96 2f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3119]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L133535
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 46		 jne	 SHORT $L133529
$L133535:

; 3093 : 	COLUMN_ENTRY(m_bTarget)

  00052	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00062	66 85 c0	 test	 ax, ax
  00065	74 06		 je	 SHORT $L133536
  00067	66 3d 01 00	 cmp	 ax, 1
  0006b	75 2b		 jne	 SHORT $L133529
$L133536:

; 3094 : 	COLUMN_ENTRY(m_dwIncPoint)

  0006d	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00073	51		 push	 ecx
  00074	6a 05		 push	 5
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0007d	66 85 c0	 test	 ax, ax
  00080	74 06		 je	 SHORT $L133537
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 10		 jne	 SHORT $L133529
$L133537:

; 3095 : 	COLUMN_ENTRY(m_dwDecPoint)

  00088	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  0008e	52		 push	 edx
  0008f	6a 06		 push	 6
  00091	8b ce		 mov	 ecx, esi
  00093	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L133529:
  00098	5e		 pop	 esi

; 3096 : END_COL()

  00099	c3		 ret	 0
?BindColumns@CTBLPvPointChart@@UAEFXZ ENDP		; CTBLPvPointChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLPvPointChart@@UAE@XZ			; CTBLPvPointChart::~CTBLPvPointChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLPvPointChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLPvPointChart@@UAEPAXI@Z PROC NEAR		; CTBLPvPointChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLPvPointChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L172310
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L172310:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLPvPointChart@@UAEPAXI@Z ENDP			; CTBLPvPointChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLPvPointChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLPvPointChart@@UAE@XZ PROC NEAR			; CTBLPvPointChart::~CTBLPvPointChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLPvPointChart@@UAE@XZ ENDP			; CTBLPvPointChart::~CTBLPvPointChart
_TEXT	ENDS
PUBLIC	??0CTBLPvPRecent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLPvPRecent::CTBLPvPRecent
PUBLIC	?GetNumCol@CTBLPvPRecent@@UAEHXZ		; CTBLPvPRecent::GetNumCol
PUBLIC	?BindColumns@CTBLPvPRecent@@UAEFXZ		; CTBLPvPRecent::BindColumns
PUBLIC	?GetNumParam@CTBLPvPRecent@@UAEHXZ		; CTBLPvPRecent::GetNumParam
PUBLIC	?BindParameters@CTBLPvPRecent@@UAEFH@Z		; CTBLPvPRecent::BindParameters
PUBLIC	??_7CTBLPvPRecent@@6B@				; CTBLPvPRecent::`vftable'
PUBLIC	??_GCTBLPvPRecent@@UAEPAXI@Z			; CTBLPvPRecent::`scalar deleting destructor'
PUBLIC	??_C@_0FL@EJHHGDEL@SELECT?5szName?0?5bClass?0?5bLevel?0?5b@ ; `string'
EXTRN	??_ECTBLPvPRecent@@UAEPAXI@Z:NEAR		; CTBLPvPRecent::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T172493 DD	0ffffffffH
	DD	FLAT:$L172319
$T172490 DD	019930520H
	DD	01H
	DD	FLAT:$T172493
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FL@EJHHGDEL@SELECT?5szName?0?5bClass?0?5bLevel?0?5b@
CONST	SEGMENT
??_C@_0FL@EJHHGDEL@SELECT?5szName?0?5bClass?0?5bLevel?0?5b@ DB 'SELECT sz'
	DB	'Name, bClass, bLevel, bWin, dwPoint, dlDate FROM TPVPRECENTTA'
	DB	'BLE WHERE dwCharID=?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CTBLPvPRecent@@6B@
CONST	SEGMENT
??_7CTBLPvPRecent@@6B@ DD FLAT:??_ECTBLPvPRecent@@UAEPAXI@Z ; CTBLPvPRecent::`vftable'
	DD	FLAT:?GetNumCol@CTBLPvPRecent@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLPvPRecent@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLPvPRecent@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLPvPRecent@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLPvPRecent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T172318 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLPvPRecent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLPvPRecent::CTBLPvPRecent, COMDAT
; _this$ = ecx

; 3110 : DEF_QUERY(CTBLPvPRecent, _T("SELECT szName, bClass, bLevel, bWin, dwPoint, dlDate FROM TPVPRECENTTABLE WHERE dwCharID=?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLPvPRecent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FL@EJHHGDEL@SELECT?5szName?0?5bClass?0?5bLevel?0?5b@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T172318[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLPvPRecent@@6B@
  0005e	72 0d		 jb	 SHORT $L172491
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L172491:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L172319:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLPvPRecent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T172490
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLPvPRecent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLPvPRecent::CTBLPvPRecent
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLPvPRecent@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLPvPRecent@@UAEHXZ PROC NEAR		; CTBLPvPRecent::GetNumCol, COMDAT
; _this$ = ecx

; 3112 : BEGIN_COLUMN(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumCol@CTBLPvPRecent@@UAEHXZ ENDP			; CTBLPvPRecent::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLPvPRecent@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLPvPRecent@@UAEFXZ PROC NEAR		; CTBLPvPRecent::BindColumns, COMDAT
; _this$ = ecx

; 3112 : BEGIN_COLUMN(6)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3113 : 	COLUMN_ENTRY_STR(m_szName)

  00003	6a 33		 push	 51			; 00000033H
  00005	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  0000b	50		 push	 eax
  0000c	6a 01		 push	 1
  0000e	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00013	66 85 c0	 test	 ax, ax
  00016	74 06		 je	 SHORT $L133588
  00018	66 3d 01 00	 cmp	 ax, 1
  0001c	75 7c		 jne	 SHORT $L133584
$L133588:

; 3114 : 	COLUMN_ENTRY(m_bClass)

  0001e	8d 8e 63 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3171]
  00024	51		 push	 ecx
  00025	6a 02		 push	 2
  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002e	66 85 c0	 test	 ax, ax
  00031	74 06		 je	 SHORT $L133589
  00033	66 3d 01 00	 cmp	 ax, 1
  00037	75 61		 jne	 SHORT $L133584
$L133589:

; 3115 : 	COLUMN_ENTRY(m_bLevel)

  00039	8d 96 64 0c 00
	00		 lea	 edx, DWORD PTR [esi+3172]
  0003f	52		 push	 edx
  00040	6a 03		 push	 3
  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00049	66 85 c0	 test	 ax, ax
  0004c	74 06		 je	 SHORT $L133590
  0004e	66 3d 01 00	 cmp	 ax, 1
  00052	75 46		 jne	 SHORT $L133584
$L133590:

; 3116 : 	COLUMN_ENTRY(m_bWin)

  00054	8d 86 65 0c 00
	00		 lea	 eax, DWORD PTR [esi+3173]
  0005a	50		 push	 eax
  0005b	6a 04		 push	 4
  0005d	8b ce		 mov	 ecx, esi
  0005f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00064	66 85 c0	 test	 ax, ax
  00067	74 06		 je	 SHORT $L133591
  00069	66 3d 01 00	 cmp	 ax, 1
  0006d	75 2b		 jne	 SHORT $L133584
$L133591:

; 3117 : 	COLUMN_ENTRY(m_dwPoint)

  0006f	8d 8e 68 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3176]
  00075	51		 push	 ecx
  00076	6a 05		 push	 5
  00078	8b ce		 mov	 ecx, esi
  0007a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0007f	66 85 c0	 test	 ax, ax
  00082	74 06		 je	 SHORT $L133592
  00084	66 3d 01 00	 cmp	 ax, 1
  00088	75 10		 jne	 SHORT $L133584
$L133592:

; 3118 : 	COLUMN_ENTRY(m_dlDate)

  0008a	8d 96 6c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3180]
  00090	52		 push	 edx
  00091	6a 06		 push	 6
  00093	8b ce		 mov	 ecx, esi
  00095	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
$L133584:
  0009a	5e		 pop	 esi

; 3119 : END_COL()

  0009b	c3		 ret	 0
?BindColumns@CTBLPvPRecent@@UAEFXZ ENDP			; CTBLPvPRecent::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLPvPRecent@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLPvPRecent@@UAEHXZ PROC NEAR		; CTBLPvPRecent::GetNumParam, COMDAT
; _this$ = ecx

; 3121 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLPvPRecent@@UAEHXZ ENDP			; CTBLPvPRecent::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLPvPRecent@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLPvPRecent@@UAEFH@Z PROC NEAR	; CTBLPvPRecent::BindParameters, COMDAT
; _this$ = ecx

; 3122 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L133598
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L133598:

; 3123 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLPvPRecent@@UAEFH@Z ENDP		; CTBLPvPRecent::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLPvPRecent@@UAE@XZ			; CTBLPvPRecent::~CTBLPvPRecent
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLPvPRecent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLPvPRecent@@UAEPAXI@Z PROC NEAR			; CTBLPvPRecent::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLPvPRecent@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L172511
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L172511:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLPvPRecent@@UAEPAXI@Z ENDP			; CTBLPvPRecent::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLPvPRecent@@UAE@XZ
_TEXT	SEGMENT
??1CTBLPvPRecent@@UAE@XZ PROC NEAR			; CTBLPvPRecent::~CTBLPvPRecent, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLPvPRecent@@UAE@XZ ENDP				; CTBLPvPRecent::~CTBLPvPRecent
_TEXT	ENDS
PUBLIC	??0CTBLDuelCharScore@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLDuelCharScore::CTBLDuelCharScore
PUBLIC	?GetNumCol@CTBLDuelCharScore@@UAEHXZ		; CTBLDuelCharScore::GetNumCol
PUBLIC	?BindColumns@CTBLDuelCharScore@@UAEFXZ		; CTBLDuelCharScore::BindColumns
PUBLIC	?GetNumParam@CTBLDuelCharScore@@UAEHXZ		; CTBLDuelCharScore::GetNumParam
PUBLIC	?BindParameters@CTBLDuelCharScore@@UAEFH@Z	; CTBLDuelCharScore::BindParameters
PUBLIC	??_7CTBLDuelCharScore@@6B@			; CTBLDuelCharScore::`vftable'
PUBLIC	??_GCTBLDuelCharScore@@UAEPAXI@Z		; CTBLDuelCharScore::`scalar deleting destructor'
PUBLIC	??_C@_0PC@JGNCOHLM@SELECT?5?7?7dwWarriorLose?0?5?7?7dwWarr@ ; `string'
EXTRN	??_ECTBLDuelCharScore@@UAEPAXI@Z:NEAR		; CTBLDuelCharScore::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T172694 DD	0ffffffffH
	DD	FLAT:$L172520
$T172691 DD	019930520H
	DD	01H
	DD	FLAT:$T172694
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0PC@JGNCOHLM@SELECT?5?7?7dwWarriorLose?0?5?7?7dwWarr@
CONST	SEGMENT
??_C@_0PC@JGNCOHLM@SELECT?5?7?7dwWarriorLose?0?5?7?7dwWarr@ DB 'SELECT ', 09H
	DB	09H, 'dwWarriorLose, ', 09H, 09H, 'dwWarriorWin, ', 09H, 09H, 'd'
	DB	'wRangerLose, ', 09H, 09H, 'dwRangerWin, ', 09H, 09H, 'dwArche'
	DB	'rLose, ', 09H, 09H, 'dwArcherWin, ', 09H, 09H, 'dwWizardLose,'
	DB	' ', 09H, 09H, 'dwWizardWin, ', 09H, 09H, 'dwPriestLose, ', 09H
	DB	09H, 'dwPriestWin, ', 09H, 09H, 'dwSorcererLose, ', 09H, 09H, 'd'
	DB	'wSorcererWin ', 09H, 09H, 'FROM TDUELSCORETABLE ', 09H, 09H, 'W'
	DB	'HERE dwCharID = ?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CTBLDuelCharScore@@6B@
CONST	SEGMENT
??_7CTBLDuelCharScore@@6B@ DD FLAT:??_ECTBLDuelCharScore@@UAEPAXI@Z ; CTBLDuelCharScore::`vftable'
	DD	FLAT:?GetNumCol@CTBLDuelCharScore@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLDuelCharScore@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLDuelCharScore@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLDuelCharScore@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLDuelCharScore@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T172519 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLDuelCharScore@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLDuelCharScore::CTBLDuelCharScore, COMDAT
; _this$ = ecx

; 3146 : 		WHERE dwCharID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLDuelCharScore@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0PC@JGNCOHLM@SELECT?5?7?7dwWarriorLose?0?5?7?7dwWarr@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T172519[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLDuelCharScore@@6B@
  0005e	72 0d		 jb	 SHORT $L172692
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L172692:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L172520:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLDuelCharScore@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T172691
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLDuelCharScore@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLDuelCharScore::CTBLDuelCharScore
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLDuelCharScore@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLDuelCharScore@@UAEHXZ PROC NEAR		; CTBLDuelCharScore::GetNumCol, COMDAT
; _this$ = ecx

; 3148 : BEGIN_COLUMN(12)	

  00000	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00005	c3		 ret	 0
?GetNumCol@CTBLDuelCharScore@@UAEHXZ ENDP		; CTBLDuelCharScore::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLDuelCharScore@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLDuelCharScore@@UAEFXZ PROC NEAR	; CTBLDuelCharScore::BindColumns, COMDAT
; _this$ = ecx

; 3148 : BEGIN_COLUMN(12)	

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi
  00003	57		 push	 edi
  00004	8b f9		 mov	 edi, ecx
  00006	be 01 00 00 00	 mov	 esi, 1

; 3149 : 	for(BYTE i = 0; i < TCLASS_COUNT; i++)

  0000b	32 db		 xor	 bl, bl
  0000d	8d 49 00	 npad	 3
$L133649:

; 3150 : 	{
; 3151 : 		COLUMN_ENTRY(m_aDuelScore[i][0])

  00010	0f b6 eb	 movzx	 ebp, bl
  00013	8d 84 ef 2c 0c
	00 00		 lea	 eax, DWORD PTR [edi+ebp*8+3116]
  0001a	50		 push	 eax
  0001b	56		 push	 esi
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00023	46		 inc	 esi
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L133652
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 23		 jne	 SHORT $L133644
$L133652:

; 3152 : 		COLUMN_ENTRY(m_aDuelScore[i][1])

  0002f	8d 8c ef 30 0c
	00 00		 lea	 ecx, DWORD PTR [edi+ebp*8+3120]
  00036	51		 push	 ecx
  00037	56		 push	 esi
  00038	8b cf		 mov	 ecx, edi
  0003a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0003f	46		 inc	 esi
  00040	66 85 c0	 test	 ax, ax
  00043	74 06		 je	 SHORT $L133650
  00045	66 3d 01 00	 cmp	 ax, 1
  00049	75 07		 jne	 SHORT $L133644
$L133650:

; 3149 : 	for(BYTE i = 0; i < TCLASS_COUNT; i++)

  0004b	fe c3		 inc	 bl
  0004d	80 fb 06	 cmp	 bl, 6
  00050	72 be		 jb	 SHORT $L133649
$L133644:
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	5b		 pop	 ebx

; 3153 : 	}
; 3154 : END_COL()

  00056	c3		 ret	 0
?BindColumns@CTBLDuelCharScore@@UAEFXZ ENDP		; CTBLDuelCharScore::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLDuelCharScore@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLDuelCharScore@@UAEHXZ PROC NEAR	; CTBLDuelCharScore::GetNumParam, COMDAT
; _this$ = ecx

; 3156 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLDuelCharScore@@UAEHXZ ENDP		; CTBLDuelCharScore::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLDuelCharScore@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLDuelCharScore@@UAEFH@Z PROC NEAR	; CTBLDuelCharScore::BindParameters, COMDAT
; _this$ = ecx

; 3157 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L133658
  00010	8d 81 5c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3164]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L133658:

; 3158 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLDuelCharScore@@UAEFH@Z ENDP		; CTBLDuelCharScore::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLDuelCharScore@@UAE@XZ			; CTBLDuelCharScore::~CTBLDuelCharScore
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLDuelCharScore@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLDuelCharScore@@UAEPAXI@Z PROC NEAR		; CTBLDuelCharScore::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLDuelCharScore@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L172716
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L172716:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLDuelCharScore@@UAEPAXI@Z ENDP			; CTBLDuelCharScore::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLDuelCharScore@@UAE@XZ
_TEXT	SEGMENT
??1CTBLDuelCharScore@@UAE@XZ PROC NEAR			; CTBLDuelCharScore::~CTBLDuelCharScore, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLDuelCharScore@@UAE@XZ ENDP			; CTBLDuelCharScore::~CTBLDuelCharScore
_TEXT	ENDS
PUBLIC	??0CTBLDuelCharList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLDuelCharList::CTBLDuelCharList
PUBLIC	?GetNumCol@CTBLDuelCharList@@UAEHXZ		; CTBLDuelCharList::GetNumCol
PUBLIC	?BindColumns@CTBLDuelCharList@@UAEFXZ		; CTBLDuelCharList::BindColumns
PUBLIC	?GetNumParam@CTBLDuelCharList@@UAEHXZ		; CTBLDuelCharList::GetNumParam
PUBLIC	?BindParameters@CTBLDuelCharList@@UAEFH@Z	; CTBLDuelCharList::BindParameters
PUBLIC	??_7CTBLDuelCharList@@6B@			; CTBLDuelCharList::`vftable'
PUBLIC	??_GCTBLDuelCharList@@UAEPAXI@Z			; CTBLDuelCharList::`scalar deleting destructor'
PUBLIC	??_C@_0GK@JDNPBOBP@SELECT?5TOP?510?5?7szName?0?5?7bClass?0?5@ ; `string'
EXTRN	??_ECTBLDuelCharList@@UAEPAXI@Z:NEAR		; CTBLDuelCharList::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T172899 DD	0ffffffffH
	DD	FLAT:$L172725
$T172896 DD	019930520H
	DD	01H
	DD	FLAT:$T172899
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0GK@JDNPBOBP@SELECT?5TOP?510?5?7szName?0?5?7bClass?0?5@
CONST	SEGMENT
??_C@_0GK@JDNPBOBP@SELECT?5TOP?510?5?7szName?0?5?7bClass?0?5@ DB 'SELECT '
	DB	'TOP 10 ', 09H, 'szName, ', 09H, 'bClass, ', 09H, 'bLevel, ', 09H
	DB	'bWin, ', 09H, 'dwPoint, ', 09H, 'dTime ', 09H, 'FROM TDUELCHA'
	DB	'RTABLE ', 09H, 'WHERE dwCharID = ?', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLDuelCharList@@6B@
CONST	SEGMENT
??_7CTBLDuelCharList@@6B@ DD FLAT:??_ECTBLDuelCharList@@UAEPAXI@Z ; CTBLDuelCharList::`vftable'
	DD	FLAT:?GetNumCol@CTBLDuelCharList@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLDuelCharList@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLDuelCharList@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLDuelCharList@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLDuelCharList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T172724 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLDuelCharList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLDuelCharList::CTBLDuelCharList, COMDAT
; _this$ = ecx

; 3180 : 	WHERE dwCharID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLDuelCharList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0GK@JDNPBOBP@SELECT?5TOP?510?5?7szName?0?5?7bClass?0?5@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T172724[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLDuelCharList@@6B@
  0005e	72 0d		 jb	 SHORT $L172897
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L172897:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L172725:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLDuelCharList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T172896
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLDuelCharList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLDuelCharList::CTBLDuelCharList
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLDuelCharList@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLDuelCharList@@UAEHXZ PROC NEAR		; CTBLDuelCharList::GetNumCol, COMDAT
; _this$ = ecx

; 3182 : BEGIN_COLUMN(6)	

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumCol@CTBLDuelCharList@@UAEHXZ ENDP		; CTBLDuelCharList::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLDuelCharList@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLDuelCharList@@UAEFXZ PROC NEAR		; CTBLDuelCharList::BindColumns, COMDAT
; _this$ = ecx

; 3182 : BEGIN_COLUMN(6)	

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3183 : 	COLUMN_ENTRY_STR(m_szName)

  00003	6a 33		 push	 51			; 00000033H
  00005	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  0000b	50		 push	 eax
  0000c	6a 01		 push	 1
  0000e	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00013	66 85 c0	 test	 ax, ax
  00016	74 06		 je	 SHORT $L133713
  00018	66 3d 01 00	 cmp	 ax, 1
  0001c	75 7c		 jne	 SHORT $L133709
$L133713:

; 3184 : 	COLUMN_ENTRY(m_bClass)

  0001e	8d 8e 63 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3171]
  00024	51		 push	 ecx
  00025	6a 02		 push	 2
  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002e	66 85 c0	 test	 ax, ax
  00031	74 06		 je	 SHORT $L133714
  00033	66 3d 01 00	 cmp	 ax, 1
  00037	75 61		 jne	 SHORT $L133709
$L133714:

; 3185 : 	COLUMN_ENTRY(m_bLevel)

  00039	8d 96 64 0c 00
	00		 lea	 edx, DWORD PTR [esi+3172]
  0003f	52		 push	 edx
  00040	6a 03		 push	 3
  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00049	66 85 c0	 test	 ax, ax
  0004c	74 06		 je	 SHORT $L133715
  0004e	66 3d 01 00	 cmp	 ax, 1
  00052	75 46		 jne	 SHORT $L133709
$L133715:

; 3186 : 	COLUMN_ENTRY(m_bWin)

  00054	8d 86 65 0c 00
	00		 lea	 eax, DWORD PTR [esi+3173]
  0005a	50		 push	 eax
  0005b	6a 04		 push	 4
  0005d	8b ce		 mov	 ecx, esi
  0005f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00064	66 85 c0	 test	 ax, ax
  00067	74 06		 je	 SHORT $L133716
  00069	66 3d 01 00	 cmp	 ax, 1
  0006d	75 2b		 jne	 SHORT $L133709
$L133716:

; 3187 : 	COLUMN_ENTRY(m_dwPoint)

  0006f	8d 8e 68 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3176]
  00075	51		 push	 ecx
  00076	6a 05		 push	 5
  00078	8b ce		 mov	 ecx, esi
  0007a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0007f	66 85 c0	 test	 ax, ax
  00082	74 06		 je	 SHORT $L133717
  00084	66 3d 01 00	 cmp	 ax, 1
  00088	75 10		 jne	 SHORT $L133709
$L133717:

; 3188 : 	COLUMN_ENTRY(m_dTime)

  0008a	8d 96 6c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3180]
  00090	52		 push	 edx
  00091	6a 06		 push	 6
  00093	8b ce		 mov	 ecx, esi
  00095	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
$L133709:
  0009a	5e		 pop	 esi

; 3189 : END_COL()

  0009b	c3		 ret	 0
?BindColumns@CTBLDuelCharList@@UAEFXZ ENDP		; CTBLDuelCharList::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLDuelCharList@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLDuelCharList@@UAEHXZ PROC NEAR		; CTBLDuelCharList::GetNumParam, COMDAT
; _this$ = ecx

; 3191 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLDuelCharList@@UAEHXZ ENDP		; CTBLDuelCharList::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLDuelCharList@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLDuelCharList@@UAEFH@Z PROC NEAR	; CTBLDuelCharList::BindParameters, COMDAT
; _this$ = ecx

; 3192 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L133723
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L133723:

; 3193 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLDuelCharList@@UAEFH@Z ENDP		; CTBLDuelCharList::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLDuelCharList@@UAE@XZ			; CTBLDuelCharList::~CTBLDuelCharList
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLDuelCharList@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLDuelCharList@@UAEPAXI@Z PROC NEAR		; CTBLDuelCharList::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLDuelCharList@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L172917
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L172917:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLDuelCharList@@UAEPAXI@Z ENDP			; CTBLDuelCharList::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLDuelCharList@@UAE@XZ
_TEXT	SEGMENT
??1CTBLDuelCharList@@UAE@XZ PROC NEAR			; CTBLDuelCharList::~CTBLDuelCharList, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLDuelCharList@@UAE@XZ ENDP			; CTBLDuelCharList::~CTBLDuelCharList
_TEXT	ENDS
PUBLIC	??0CTBLMonsterShop@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonsterShop::CTBLMonsterShop
PUBLIC	?GetNumCol@CTBLMonsterShop@@UAEHXZ		; CTBLMonsterShop::GetNumCol
PUBLIC	?BindColumns@CTBLMonsterShop@@UAEFXZ		; CTBLMonsterShop::BindColumns
PUBLIC	??_7CTBLMonsterShop@@6B@			; CTBLMonsterShop::`vftable'
PUBLIC	??_GCTBLMonsterShop@@UAEPAXI@Z			; CTBLMonsterShop::`scalar deleting destructor'
PUBLIC	??_C@_0EH@FKKHJNOO@SELECT?5wID?0?5wNpcID?0?5wSpawnID?0?5dw@ ; `string'
EXTRN	??_ECTBLMonsterShop@@UAEPAXI@Z:NEAR		; CTBLMonsterShop::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T173100 DD	0ffffffffH
	DD	FLAT:$L172926
$T173097 DD	019930520H
	DD	01H
	DD	FLAT:$T173100
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EH@FKKHJNOO@SELECT?5wID?0?5wNpcID?0?5wSpawnID?0?5dw@
CONST	SEGMENT
??_C@_0EH@FKKHJNOO@SELECT?5wID?0?5wNpcID?0?5wSpawnID?0?5dw@ DB 'SELECT wI'
	DB	'D, wNpcID, wSpawnID, dwPrice, wTowerID FROM TMONSTERSHOPCHART'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_7CTBLMonsterShop@@6B@
CONST	SEGMENT
??_7CTBLMonsterShop@@6B@ DD FLAT:??_ECTBLMonsterShop@@UAEPAXI@Z ; CTBLMonsterShop::`vftable'
	DD	FLAT:?GetNumCol@CTBLMonsterShop@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLMonsterShop@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLMonsterShop@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T172925 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLMonsterShop@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLMonsterShop::CTBLMonsterShop, COMDAT
; _this$ = ecx

; 3205 : DEF_QUERY(CTBLMonsterShop, _T("SELECT wID, wNpcID, wSpawnID, dwPrice, wTowerID FROM TMONSTERSHOPCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLMonsterShop@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EH@FKKHJNOO@SELECT?5wID?0?5wNpcID?0?5wSpawnID?0?5dw@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T172925[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLMonsterShop@@6B@
  0005e	72 0d		 jb	 SHORT $L173098
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L173098:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L172926:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLMonsterShop@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T173097
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLMonsterShop@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLMonsterShop::CTBLMonsterShop
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLMonsterShop@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLMonsterShop@@UAEHXZ PROC NEAR		; CTBLMonsterShop::GetNumCol, COMDAT
; _this$ = ecx

; 3207 : BEGIN_COLUMN(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumCol@CTBLMonsterShop@@UAEHXZ ENDP			; CTBLMonsterShop::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonsterShop@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLMonsterShop@@UAEFXZ PROC NEAR		; CTBLMonsterShop::BindColumns, COMDAT
; _this$ = ecx

; 3207 : BEGIN_COLUMN(5)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3208 : 	COLUMN_ENTRY(m_wID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L133773
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 61		 jne	 SHORT $L133769
$L133773:

; 3209 : 	COLUMN_ENTRY(m_wNpcID)

  0001c	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L133774
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 46		 jne	 SHORT $L133769
$L133774:

; 3210 : 	COLUMN_ENTRY(m_wSpawnID)

  00037	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L133775
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 2b		 jne	 SHORT $L133769
$L133775:

; 3211 : 	COLUMN_ENTRY(m_dwPrice)

  00052	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00062	66 85 c0	 test	 ax, ax
  00065	74 06		 je	 SHORT $L133776
  00067	66 3d 01 00	 cmp	 ax, 1
  0006b	75 10		 jne	 SHORT $L133769
$L133776:

; 3212 : 	COLUMN_ENTRY(m_wTowerID)

  0006d	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  00073	51		 push	 ecx
  00074	6a 05		 push	 5
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
$L133769:
  0007d	5e		 pop	 esi

; 3213 : END_COL()

  0007e	c3		 ret	 0
?BindColumns@CTBLMonsterShop@@UAEFXZ ENDP		; CTBLMonsterShop::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLMonsterShop@@UAE@XZ			; CTBLMonsterShop::~CTBLMonsterShop
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLMonsterShop@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLMonsterShop@@UAEPAXI@Z PROC NEAR		; CTBLMonsterShop::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLMonsterShop@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L173112
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L173112:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLMonsterShop@@UAEPAXI@Z ENDP			; CTBLMonsterShop::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLMonsterShop@@UAE@XZ
_TEXT	SEGMENT
??1CTBLMonsterShop@@UAE@XZ PROC NEAR			; CTBLMonsterShop::~CTBLMonsterShop, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLMonsterShop@@UAE@XZ ENDP				; CTBLMonsterShop::~CTBLMonsterShop
_TEXT	ENDS
PUBLIC	??0CTBLCashGambleChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCashGambleChart::CTBLCashGambleChart
PUBLIC	?GetNumCol@CTBLCashGambleChart@@UAEHXZ		; CTBLCashGambleChart::GetNumCol
PUBLIC	?BindColumns@CTBLCashGambleChart@@UAEFXZ	; CTBLCashGambleChart::BindColumns
PUBLIC	??_7CTBLCashGambleChart@@6B@			; CTBLCashGambleChart::`vftable'
PUBLIC	??_GCTBLCashGambleChart@@UAEPAXI@Z		; CTBLCashGambleChart::`scalar deleting destructor'
PUBLIC	??_C@_0BFE@ICIFPNNJ@SELECT?5?7dwID?0?5?7dwProb?0?5?7wGroup?0?5@ ; `string'
EXTRN	??_ECTBLCashGambleChart@@UAEPAXI@Z:NEAR		; CTBLCashGambleChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T173295 DD	0ffffffffH
	DD	FLAT:$L173121
$T173292 DD	019930520H
	DD	01H
	DD	FLAT:$T173295
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BFE@ICIFPNNJ@SELECT?5?7dwID?0?5?7dwProb?0?5?7wGroup?0?5@
CONST	SEGMENT
??_C@_0BFE@ICIFPNNJ@SELECT?5?7dwID?0?5?7dwProb?0?5?7wGroup?0?5@ DB 'SELEC'
	DB	'T ', 09H, 'dwID, ', 09H, 'dwProb, ', 09H, 'wGroup, ', 09H, 'w'
	DB	'UseTime, ', 09H, 'wItemID, ', 09H, 'bLevel, ', 09H, 'bCount, '
	DB	09H, 'bGLevel, ', 09H, 'dwDuraMax, ', 09H, 'dwDuraCur, ', 09H, 'b'
	DB	'RefineCur, ', 09H, 'bGradeEffect, ', 09H, 'bMagic1, ', 09H, 'b'
	DB	'Magic2, ', 09H, 'bMagic3, ', 09H, 'bMagic4, ', 09H, 'bMagic5,'
	DB	' ', 09H, 'bMagic6, ', 09H, 'wValue1, ', 09H, 'wValue2, ', 09H
	DB	'wValue3, ', 09H, 'wValue4, ', 09H, 'wValue5, ', 09H, 'wValue6'
	DB	', ', 09H, 'dwTime1, ', 09H, 'dwTime2, ', 09H, 'dwTime3, ', 09H
	DB	'dwTime4, ', 09H, 'dwTime5, ', 09H, 'dwTime6 ', 09H, 'FROM TVI'
	DB	'EW_CASHGAMBLECHART', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CTBLCashGambleChart@@6B@
CONST	SEGMENT
??_7CTBLCashGambleChart@@6B@ DD FLAT:??_ECTBLCashGambleChart@@UAEPAXI@Z ; CTBLCashGambleChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLCashGambleChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLCashGambleChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLCashGambleChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T173120 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLCashGambleChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLCashGambleChart::CTBLCashGambleChart, COMDAT
; _this$ = ecx

; 3256 : 	FROM TVIEW_CASHGAMBLECHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLCashGambleChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BFE@ICIFPNNJ@SELECT?5?7dwID?0?5?7dwProb?0?5?7wGroup?0?5@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T173120[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLCashGambleChart@@6B@
  0005e	72 0d		 jb	 SHORT $L173293
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L173293:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L173121:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLCashGambleChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T173292
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLCashGambleChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLCashGambleChart::CTBLCashGambleChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLCashGambleChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLCashGambleChart@@UAEHXZ PROC NEAR	; CTBLCashGambleChart::GetNumCol, COMDAT
; _this$ = ecx

; 3258 : BEGIN_COLUMN(32) 

  00000	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00005	c3		 ret	 0
?GetNumCol@CTBLCashGambleChart@@UAEHXZ ENDP		; CTBLCashGambleChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLCashGambleChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLCashGambleChart@@UAEFXZ PROC NEAR	; CTBLCashGambleChart::BindColumns, COMDAT
; _this$ = ecx

; 3258 : BEGIN_COLUMN(32) 

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3259 : 	COLUMN_ENTRY(m_dwID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L133822
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 60 03 00
	00		 jne	 $L133818
$L133822:

; 3260 : 	COLUMN_ENTRY(m_dwProb)

  00020	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L133823
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 41 03 00
	00		 jne	 $L133818
$L133823:

; 3261 : 	COLUMN_ENTRY(m_wGroup)

  0003f	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L133824
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 22 03 00
	00		 jne	 $L133818
$L133824:

; 3262 : 	COLUMN_ENTRY(m_wUseTime)

  0005e	8d 86 36 0c 00
	00		 lea	 eax, DWORD PTR [esi+3126]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L133825
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 03 03 00
	00		 jne	 $L133818
$L133825:

; 3263 : 	COLUMN_ENTRY(m_item.m_wItemID)

  0007d	8d 8e 42 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3138]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L133826
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 e4 02 00
	00		 jne	 $L133818
$L133826:

; 3264 : 	COLUMN_ENTRY(m_item.m_bLevel)

  0009c	8d 96 44 0c 00
	00		 lea	 edx, DWORD PTR [esi+3140]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L133827
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 c5 02 00
	00		 jne	 $L133818
$L133827:

; 3265 : 	COLUMN_ENTRY(m_item.m_bCount)

  000bb	8d 86 45 0c 00
	00		 lea	 eax, DWORD PTR [esi+3141]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 0a		 je	 SHORT $L133828
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	0f 85 a6 02 00
	00		 jne	 $L133818
$L133828:

; 3266 : 	COLUMN_ENTRY(m_item.m_bGLevel)

  000da	8d 8e 46 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3142]
  000e0	51		 push	 ecx
  000e1	6a 08		 push	 8
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ea	66 85 c0	 test	 ax, ax
  000ed	74 0a		 je	 SHORT $L133829
  000ef	66 3d 01 00	 cmp	 ax, 1
  000f3	0f 85 87 02 00
	00		 jne	 $L133818
$L133829:

; 3267 : 	COLUMN_ENTRY(m_item.m_dwDuraMax)

  000f9	8d 96 48 0c 00
	00		 lea	 edx, DWORD PTR [esi+3144]
  000ff	52		 push	 edx
  00100	6a 09		 push	 9
  00102	8b ce		 mov	 ecx, esi
  00104	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00109	66 85 c0	 test	 ax, ax
  0010c	74 0a		 je	 SHORT $L133830
  0010e	66 3d 01 00	 cmp	 ax, 1
  00112	0f 85 68 02 00
	00		 jne	 $L133818
$L133830:

; 3268 : 	COLUMN_ENTRY(m_item.m_dwDuraCur)

  00118	8d 86 4c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3148]
  0011e	50		 push	 eax
  0011f	6a 0a		 push	 10			; 0000000aH
  00121	8b ce		 mov	 ecx, esi
  00123	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00128	66 85 c0	 test	 ax, ax
  0012b	74 0a		 je	 SHORT $L133831
  0012d	66 3d 01 00	 cmp	 ax, 1
  00131	0f 85 49 02 00
	00		 jne	 $L133818
$L133831:

; 3269 : 	COLUMN_ENTRY(m_item.m_bRefineCur)

  00137	8d 8e 50 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3152]
  0013d	51		 push	 ecx
  0013e	6a 0b		 push	 11			; 0000000bH
  00140	8b ce		 mov	 ecx, esi
  00142	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00147	66 85 c0	 test	 ax, ax
  0014a	74 0a		 je	 SHORT $L133832
  0014c	66 3d 01 00	 cmp	 ax, 1
  00150	0f 85 2a 02 00
	00		 jne	 $L133818
$L133832:

; 3270 : 	COLUMN_ENTRY(m_item.m_bGradeEffect)

  00156	8d 96 64 0c 00
	00		 lea	 edx, DWORD PTR [esi+3172]
  0015c	52		 push	 edx
  0015d	6a 0c		 push	 12			; 0000000cH
  0015f	8b ce		 mov	 ecx, esi
  00161	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00166	66 85 c0	 test	 ax, ax
  00169	74 0a		 je	 SHORT $L133833
  0016b	66 3d 01 00	 cmp	 ax, 1
  0016f	0f 85 0b 02 00
	00		 jne	 $L133818
$L133833:

; 3271 : 	COLUMN_ENTRY(m_item.m_bMagic[0])

  00175	8d 86 65 0c 00
	00		 lea	 eax, DWORD PTR [esi+3173]
  0017b	50		 push	 eax
  0017c	6a 0d		 push	 13			; 0000000dH
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00185	66 85 c0	 test	 ax, ax
  00188	74 0a		 je	 SHORT $L133834
  0018a	66 3d 01 00	 cmp	 ax, 1
  0018e	0f 85 ec 01 00
	00		 jne	 $L133818
$L133834:

; 3272 : 	COLUMN_ENTRY(m_item.m_bMagic[1])

  00194	8d 8e 66 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3174]
  0019a	51		 push	 ecx
  0019b	6a 0e		 push	 14			; 0000000eH
  0019d	8b ce		 mov	 ecx, esi
  0019f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001a4	66 85 c0	 test	 ax, ax
  001a7	74 0a		 je	 SHORT $L133835
  001a9	66 3d 01 00	 cmp	 ax, 1
  001ad	0f 85 cd 01 00
	00		 jne	 $L133818
$L133835:

; 3273 : 	COLUMN_ENTRY(m_item.m_bMagic[2])

  001b3	8d 96 67 0c 00
	00		 lea	 edx, DWORD PTR [esi+3175]
  001b9	52		 push	 edx
  001ba	6a 0f		 push	 15			; 0000000fH
  001bc	8b ce		 mov	 ecx, esi
  001be	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001c3	66 85 c0	 test	 ax, ax
  001c6	74 0a		 je	 SHORT $L133836
  001c8	66 3d 01 00	 cmp	 ax, 1
  001cc	0f 85 ae 01 00
	00		 jne	 $L133818
$L133836:

; 3274 : 	COLUMN_ENTRY(m_item.m_bMagic[3])

  001d2	8d 86 68 0c 00
	00		 lea	 eax, DWORD PTR [esi+3176]
  001d8	50		 push	 eax
  001d9	6a 10		 push	 16			; 00000010H
  001db	8b ce		 mov	 ecx, esi
  001dd	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001e2	66 85 c0	 test	 ax, ax
  001e5	74 0a		 je	 SHORT $L133837
  001e7	66 3d 01 00	 cmp	 ax, 1
  001eb	0f 85 8f 01 00
	00		 jne	 $L133818
$L133837:

; 3275 : 	COLUMN_ENTRY(m_item.m_bMagic[4])

  001f1	8d 8e 69 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3177]
  001f7	51		 push	 ecx
  001f8	6a 11		 push	 17			; 00000011H
  001fa	8b ce		 mov	 ecx, esi
  001fc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00201	66 85 c0	 test	 ax, ax
  00204	74 0a		 je	 SHORT $L133838
  00206	66 3d 01 00	 cmp	 ax, 1
  0020a	0f 85 70 01 00
	00		 jne	 $L133818
$L133838:

; 3276 : 	COLUMN_ENTRY(m_item.m_bMagic[5])

  00210	8d 96 6a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3178]
  00216	52		 push	 edx
  00217	6a 12		 push	 18			; 00000012H
  00219	8b ce		 mov	 ecx, esi
  0021b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00220	66 85 c0	 test	 ax, ax
  00223	74 0a		 je	 SHORT $L133839
  00225	66 3d 01 00	 cmp	 ax, 1
  00229	0f 85 51 01 00
	00		 jne	 $L133818
$L133839:

; 3277 : 	COLUMN_ENTRY(m_item.m_wValue[0])

  0022f	8d 86 6c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3180]
  00235	50		 push	 eax
  00236	6a 13		 push	 19			; 00000013H
  00238	8b ce		 mov	 ecx, esi
  0023a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0023f	66 85 c0	 test	 ax, ax
  00242	74 0a		 je	 SHORT $L133840
  00244	66 3d 01 00	 cmp	 ax, 1
  00248	0f 85 32 01 00
	00		 jne	 $L133818
$L133840:

; 3278 : 	COLUMN_ENTRY(m_item.m_wValue[1])

  0024e	8d 8e 6e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3182]
  00254	51		 push	 ecx
  00255	6a 14		 push	 20			; 00000014H
  00257	8b ce		 mov	 ecx, esi
  00259	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0025e	66 85 c0	 test	 ax, ax
  00261	74 0a		 je	 SHORT $L133841
  00263	66 3d 01 00	 cmp	 ax, 1
  00267	0f 85 13 01 00
	00		 jne	 $L133818
$L133841:

; 3279 : 	COLUMN_ENTRY(m_item.m_wValue[2])

  0026d	8d 96 70 0c 00
	00		 lea	 edx, DWORD PTR [esi+3184]
  00273	52		 push	 edx
  00274	6a 15		 push	 21			; 00000015H
  00276	8b ce		 mov	 ecx, esi
  00278	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0027d	66 85 c0	 test	 ax, ax
  00280	74 0a		 je	 SHORT $L133842
  00282	66 3d 01 00	 cmp	 ax, 1
  00286	0f 85 f4 00 00
	00		 jne	 $L133818
$L133842:

; 3280 : 	COLUMN_ENTRY(m_item.m_wValue[3])

  0028c	8d 86 72 0c 00
	00		 lea	 eax, DWORD PTR [esi+3186]
  00292	50		 push	 eax
  00293	6a 16		 push	 22			; 00000016H
  00295	8b ce		 mov	 ecx, esi
  00297	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0029c	66 85 c0	 test	 ax, ax
  0029f	74 0a		 je	 SHORT $L133843
  002a1	66 3d 01 00	 cmp	 ax, 1
  002a5	0f 85 d5 00 00
	00		 jne	 $L133818
$L133843:

; 3281 : 	COLUMN_ENTRY(m_item.m_wValue[4])

  002ab	8d 8e 74 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3188]
  002b1	51		 push	 ecx
  002b2	6a 17		 push	 23			; 00000017H
  002b4	8b ce		 mov	 ecx, esi
  002b6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  002bb	66 85 c0	 test	 ax, ax
  002be	74 0a		 je	 SHORT $L133844
  002c0	66 3d 01 00	 cmp	 ax, 1
  002c4	0f 85 b6 00 00
	00		 jne	 $L133818
$L133844:

; 3282 : 	COLUMN_ENTRY(m_item.m_wValue[5])

  002ca	8d 96 76 0c 00
	00		 lea	 edx, DWORD PTR [esi+3190]
  002d0	52		 push	 edx
  002d1	6a 18		 push	 24			; 00000018H
  002d3	8b ce		 mov	 ecx, esi
  002d5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  002da	66 85 c0	 test	 ax, ax
  002dd	74 0a		 je	 SHORT $L133845
  002df	66 3d 01 00	 cmp	 ax, 1
  002e3	0f 85 97 00 00
	00		 jne	 $L133818
$L133845:

; 3283 : 	COLUMN_ENTRY(m_item.m_dwExtValue[0])

  002e9	8d 86 78 0c 00
	00		 lea	 eax, DWORD PTR [esi+3192]
  002ef	50		 push	 eax
  002f0	6a 19		 push	 25			; 00000019H
  002f2	8b ce		 mov	 ecx, esi
  002f4	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  002f9	66 85 c0	 test	 ax, ax
  002fc	74 06		 je	 SHORT $L133846
  002fe	66 3d 01 00	 cmp	 ax, 1
  00302	75 7c		 jne	 SHORT $L133818
$L133846:

; 3284 : 	COLUMN_ENTRY(m_item.m_dwExtValue[1])

  00304	8d 8e 7c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3196]
  0030a	51		 push	 ecx
  0030b	6a 1a		 push	 26			; 0000001aH
  0030d	8b ce		 mov	 ecx, esi
  0030f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00314	66 85 c0	 test	 ax, ax
  00317	74 06		 je	 SHORT $L133847
  00319	66 3d 01 00	 cmp	 ax, 1
  0031d	75 61		 jne	 SHORT $L133818
$L133847:

; 3285 : 	COLUMN_ENTRY(m_item.m_dwExtValue[2])

  0031f	8d 96 80 0c 00
	00		 lea	 edx, DWORD PTR [esi+3200]
  00325	52		 push	 edx
  00326	6a 1b		 push	 27			; 0000001bH
  00328	8b ce		 mov	 ecx, esi
  0032a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0032f	66 85 c0	 test	 ax, ax
  00332	74 06		 je	 SHORT $L133848
  00334	66 3d 01 00	 cmp	 ax, 1
  00338	75 46		 jne	 SHORT $L133818
$L133848:

; 3286 : 	COLUMN_ENTRY(m_item.m_dwExtValue[3])

  0033a	8d 86 84 0c 00
	00		 lea	 eax, DWORD PTR [esi+3204]
  00340	50		 push	 eax
  00341	6a 1c		 push	 28			; 0000001cH
  00343	8b ce		 mov	 ecx, esi
  00345	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0034a	66 85 c0	 test	 ax, ax
  0034d	74 06		 je	 SHORT $L133849
  0034f	66 3d 01 00	 cmp	 ax, 1
  00353	75 2b		 jne	 SHORT $L133818
$L133849:

; 3287 : 	COLUMN_ENTRY(m_item.m_dwExtValue[4])

  00355	8d 8e 88 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3208]
  0035b	51		 push	 ecx
  0035c	6a 1d		 push	 29			; 0000001dH
  0035e	8b ce		 mov	 ecx, esi
  00360	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00365	66 85 c0	 test	 ax, ax
  00368	74 06		 je	 SHORT $L133850
  0036a	66 3d 01 00	 cmp	 ax, 1
  0036e	75 10		 jne	 SHORT $L133818
$L133850:

; 3288 : 	COLUMN_ENTRY(m_item.m_dwExtValue[5])

  00370	8d 96 8c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3212]
  00376	52		 push	 edx
  00377	6a 1e		 push	 30			; 0000001eH
  00379	8b ce		 mov	 ecx, esi
  0037b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L133818:
  00380	5e		 pop	 esi

; 3289 : END_COL()

  00381	c3		 ret	 0
?BindColumns@CTBLCashGambleChart@@UAEFXZ ENDP		; CTBLCashGambleChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLCashGambleChart@@UAE@XZ			; CTBLCashGambleChart::~CTBLCashGambleChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLCashGambleChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLCashGambleChart@@UAEPAXI@Z PROC NEAR		; CTBLCashGambleChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLCashGambleChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L173307
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L173307:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLCashGambleChart@@UAEPAXI@Z ENDP			; CTBLCashGambleChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLCashGambleChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLCashGambleChart@@UAE@XZ PROC NEAR		; CTBLCashGambleChart::~CTBLCashGambleChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLCashGambleChart@@UAE@XZ ENDP			; CTBLCashGambleChart::~CTBLCashGambleChart
_TEXT	ENDS
PUBLIC	??0CTBLAuctionTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLAuctionTable::CTBLAuctionTable
PUBLIC	?GetNumCol@CTBLAuctionTable@@UAEHXZ		; CTBLAuctionTable::GetNumCol
PUBLIC	?BindColumns@CTBLAuctionTable@@UAEFXZ		; CTBLAuctionTable::BindColumns
PUBLIC	?GetNumParam@CTBLAuctionTable@@UAEHXZ		; CTBLAuctionTable::GetNumParam
PUBLIC	?BindParameters@CTBLAuctionTable@@UAEFH@Z	; CTBLAuctionTable::BindParameters
PUBLIC	??_7CTBLAuctionTable@@6B@			; CTBLAuctionTable::`vftable'
PUBLIC	??_GCTBLAuctionTable@@UAEPAXI@Z			; CTBLAuctionTable::`scalar deleting destructor'
PUBLIC	??_C@_0CHD@OLLCLNAK@SELECT?5?7A?4dwAuctionID?0?5?7A?4dwChar@ ; `string'
EXTRN	??_ECTBLAuctionTable@@UAEPAXI@Z:NEAR		; CTBLAuctionTable::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T173490 DD	0ffffffffH
	DD	FLAT:$L173316
$T173487 DD	019930520H
	DD	01H
	DD	FLAT:$T173490
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CHD@OLLCLNAK@SELECT?5?7A?4dwAuctionID?0?5?7A?4dwChar@
CONST	SEGMENT
??_C@_0CHD@OLLCLNAK@SELECT?5?7A?4dwAuctionID?0?5?7A?4dwChar@ DB 'SELECT ', 09H
	DB	'A.dwAuctionID, ', 09H, 'A.dwCharID, ', 09H, 'A.bBidCount, ', 09H
	DB	'A.dlDirectPrice, ', 09H, 'A.dlStartPrice, ', 09H, 'A.DateStar'
	DB	't, ', 09H, 'A.DateEnd, ', 09H, 'C.szName, ', 09H, 'T.dlID, ', 09H
	DB	'T.bItemID, ', 09H, 'T.wItemID, ', 09H, 'T.bLevel, ', 09H, 'T.'
	DB	'bCount, ', 09H, 'T.bGLevel, ', 09H, 'T.dwDuraMax, ', 09H, 'T.'
	DB	'dwDuraCur, ', 09H, 'T.bRefineCur, ', 09H, 'T.dEndTime, ', 09H
	DB	'T.bGradeEffect, ', 09H, 'T.bMagic1, ', 09H, 'T.bMagic2, ', 09H
	DB	'T.bMagic3, ', 09H, 'T.bMagic4, ', 09H, 'T.bMagic5, ', 09H, 'T'
	DB	'.bMagic6, ', 09H, 'T.wValue1, ', 09H, 'T.wValue2, ', 09H, 'T.'
	DB	'wValue3, ', 09H, 'T.wValue4, ', 09H, 'T.wValue5, ', 09H, 'T.w'
	DB	'Value6, ', 09H, 'T.dwTime1, ', 09H, 'T.dwTime2, ', 09H, 'T.dw'
	DB	'Time3, ', 09H, 'T.dwTime4, ', 09H, 'T.dwTime5, ', 09H, 'T.dwT'
	DB	'ime6 ', 09H, 'FROM TAUCTIONTABLE AS A', 09H, 'INNER JOIN TITE'
	DB	'MTABLE AS T ON ', 09H, 'A.dlItemID = T.dlID ', 09H, 'INNER JO'
	DB	'IN TCHARTABLE AS C ON ', 09H, 'A.dwCharID = C.dwCharID ', 09H
	DB	'WHERE wNpcID = ?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CTBLAuctionTable@@6B@
CONST	SEGMENT
??_7CTBLAuctionTable@@6B@ DD FLAT:??_ECTBLAuctionTable@@UAEPAXI@Z ; CTBLAuctionTable::`vftable'
	DD	FLAT:?GetNumCol@CTBLAuctionTable@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLAuctionTable@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLAuctionTable@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLAuctionTable@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLAuctionTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T173315 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLAuctionTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLAuctionTable::CTBLAuctionTable, COMDAT
; _this$ = ecx

; 3350 : 	WHERE wNpcID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLAuctionTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CHD@OLLCLNAK@SELECT?5?7A?4dwAuctionID?0?5?7A?4dwChar@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T173315[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLAuctionTable@@6B@
  0005e	72 0d		 jb	 SHORT $L173488
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L173488:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L173316:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLAuctionTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T173487
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLAuctionTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLAuctionTable::CTBLAuctionTable
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLAuctionTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLAuctionTable@@UAEHXZ PROC NEAR		; CTBLAuctionTable::GetNumCol, COMDAT
; _this$ = ecx

; 3352 : BEGIN_COLUMN(37)

  00000	b8 25 00 00 00	 mov	 eax, 37			; 00000025H
  00005	c3		 ret	 0
?GetNumCol@CTBLAuctionTable@@UAEHXZ ENDP		; CTBLAuctionTable::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLAuctionTable@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLAuctionTable@@UAEFXZ PROC NEAR		; CTBLAuctionTable::BindColumns, COMDAT
; _this$ = ecx

; 3352 : BEGIN_COLUMN(37)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3353 : 	COLUMN_ENTRY(m_dwAuctionID)	

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L133904
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 3b 04 00
	00		 jne	 $L133900
$L133904:

; 3354 : 	COLUMN_ENTRY(m_dwSeller)

  00020	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L133905
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 1c 04 00
	00		 jne	 $L133900
$L133905:

; 3355 : 	COLUMN_ENTRY(m_bBidCount)

  0003f	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L133906
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 fd 03 00
	00		 jne	 $L133900
$L133906:

; 3356 : 	COLUMN_ENTRY(m_ldwDirectPrice)

  0005e	8d 86 70 0c 00
	00		 lea	 eax, DWORD PTR [esi+3184]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPA_J@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L133907
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 de 03 00
	00		 jne	 $L133900
$L133907:

; 3357 : 	COLUMN_ENTRY(m_ldwStartPrice)

  0007d	8d 8e 78 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3192]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPA_J@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L133908
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 bf 03 00
	00		 jne	 $L133900
$L133908:

; 3358 : 	COLUMN_ENTRY(m_dStart)

  0009c	8d 96 80 0c 00
	00		 lea	 edx, DWORD PTR [esi+3200]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L133909
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 a0 03 00
	00		 jne	 $L133900
$L133909:

; 3359 : 	COLUMN_ENTRY(m_dEnd)	

  000bb	8d 86 90 0c 00
	00		 lea	 eax, DWORD PTR [esi+3216]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 0a		 je	 SHORT $L133910
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	0f 85 81 03 00
	00		 jne	 $L133900
$L133910:

; 3360 : 	COLUMN_ENTRY_STR(m_szSeller)

  000da	6a 33		 push	 51			; 00000033H
  000dc	8d 8e 39 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3129]
  000e2	51		 push	 ecx
  000e3	6a 08		 push	 8
  000e5	8b ce		 mov	 ecx, esi
  000e7	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  000ec	66 85 c0	 test	 ax, ax
  000ef	74 0a		 je	 SHORT $L133911
  000f1	66 3d 01 00	 cmp	 ax, 1
  000f5	0f 85 60 03 00
	00		 jne	 $L133900
$L133911:

; 3361 : 	COLUMN_ENTRY(m_item.m_dlID)

  000fb	8d 96 a0 0c 00
	00		 lea	 edx, DWORD PTR [esi+3232]
  00101	52		 push	 edx
  00102	6a 09		 push	 9
  00104	8b ce		 mov	 ecx, esi
  00106	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPA_J@Z ; CSqlBase::BindCol
  0010b	66 85 c0	 test	 ax, ax
  0010e	74 0a		 je	 SHORT $L133912
  00110	66 3d 01 00	 cmp	 ax, 1
  00114	0f 85 41 03 00
	00		 jne	 $L133900
$L133912:

; 3362 : 	COLUMN_ENTRY(m_item.m_bItemID)

  0011a	8d 86 a8 0c 00
	00		 lea	 eax, DWORD PTR [esi+3240]
  00120	50		 push	 eax
  00121	6a 0a		 push	 10			; 0000000aH
  00123	8b ce		 mov	 ecx, esi
  00125	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0012a	66 85 c0	 test	 ax, ax
  0012d	74 0a		 je	 SHORT $L133913
  0012f	66 3d 01 00	 cmp	 ax, 1
  00133	0f 85 22 03 00
	00		 jne	 $L133900
$L133913:

; 3363 : 	COLUMN_ENTRY(m_item.m_wItemID)

  00139	8d 8e aa 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3242]
  0013f	51		 push	 ecx
  00140	6a 0b		 push	 11			; 0000000bH
  00142	8b ce		 mov	 ecx, esi
  00144	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00149	66 85 c0	 test	 ax, ax
  0014c	74 0a		 je	 SHORT $L133914
  0014e	66 3d 01 00	 cmp	 ax, 1
  00152	0f 85 03 03 00
	00		 jne	 $L133900
$L133914:

; 3364 : 	COLUMN_ENTRY(m_item.m_bLevel)

  00158	8d 96 ac 0c 00
	00		 lea	 edx, DWORD PTR [esi+3244]
  0015e	52		 push	 edx
  0015f	6a 0c		 push	 12			; 0000000cH
  00161	8b ce		 mov	 ecx, esi
  00163	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00168	66 85 c0	 test	 ax, ax
  0016b	74 0a		 je	 SHORT $L133915
  0016d	66 3d 01 00	 cmp	 ax, 1
  00171	0f 85 e4 02 00
	00		 jne	 $L133900
$L133915:

; 3365 : 	COLUMN_ENTRY(m_item.m_bCount)

  00177	8d 86 ad 0c 00
	00		 lea	 eax, DWORD PTR [esi+3245]
  0017d	50		 push	 eax
  0017e	6a 0d		 push	 13			; 0000000dH
  00180	8b ce		 mov	 ecx, esi
  00182	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00187	66 85 c0	 test	 ax, ax
  0018a	74 0a		 je	 SHORT $L133916
  0018c	66 3d 01 00	 cmp	 ax, 1
  00190	0f 85 c5 02 00
	00		 jne	 $L133900
$L133916:

; 3366 : 	COLUMN_ENTRY(m_item.m_bGLevel)

  00196	8d 8e ae 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3246]
  0019c	51		 push	 ecx
  0019d	6a 0e		 push	 14			; 0000000eH
  0019f	8b ce		 mov	 ecx, esi
  001a1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001a6	66 85 c0	 test	 ax, ax
  001a9	74 0a		 je	 SHORT $L133917
  001ab	66 3d 01 00	 cmp	 ax, 1
  001af	0f 85 a6 02 00
	00		 jne	 $L133900
$L133917:

; 3367 : 	COLUMN_ENTRY(m_item.m_dwDuraMax)

  001b5	8d 96 b0 0c 00
	00		 lea	 edx, DWORD PTR [esi+3248]
  001bb	52		 push	 edx
  001bc	6a 0f		 push	 15			; 0000000fH
  001be	8b ce		 mov	 ecx, esi
  001c0	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  001c5	66 85 c0	 test	 ax, ax
  001c8	74 0a		 je	 SHORT $L133918
  001ca	66 3d 01 00	 cmp	 ax, 1
  001ce	0f 85 87 02 00
	00		 jne	 $L133900
$L133918:

; 3368 : 	COLUMN_ENTRY(m_item.m_dwDuraCur)

  001d4	8d 86 b4 0c 00
	00		 lea	 eax, DWORD PTR [esi+3252]
  001da	50		 push	 eax
  001db	6a 10		 push	 16			; 00000010H
  001dd	8b ce		 mov	 ecx, esi
  001df	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  001e4	66 85 c0	 test	 ax, ax
  001e7	74 0a		 je	 SHORT $L133919
  001e9	66 3d 01 00	 cmp	 ax, 1
  001ed	0f 85 68 02 00
	00		 jne	 $L133900
$L133919:

; 3369 : 	COLUMN_ENTRY(m_item.m_bRefineCur)

  001f3	8d 8e b8 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3256]
  001f9	51		 push	 ecx
  001fa	6a 11		 push	 17			; 00000011H
  001fc	8b ce		 mov	 ecx, esi
  001fe	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00203	66 85 c0	 test	 ax, ax
  00206	74 0a		 je	 SHORT $L133920
  00208	66 3d 01 00	 cmp	 ax, 1
  0020c	0f 85 49 02 00
	00		 jne	 $L133900
$L133920:

; 3370 : 	COLUMN_ENTRY(m_item.m_dEndTime)

  00212	8d 96 bc 0c 00
	00		 lea	 edx, DWORD PTR [esi+3260]
  00218	52		 push	 edx
  00219	6a 12		 push	 18			; 00000012H
  0021b	8b ce		 mov	 ecx, esi
  0021d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
  00222	66 85 c0	 test	 ax, ax
  00225	74 0a		 je	 SHORT $L133921
  00227	66 3d 01 00	 cmp	 ax, 1
  0022b	0f 85 2a 02 00
	00		 jne	 $L133900
$L133921:

; 3371 : 	COLUMN_ENTRY(m_item.m_bGradeEffect)

  00231	8d 86 cc 0c 00
	00		 lea	 eax, DWORD PTR [esi+3276]
  00237	50		 push	 eax
  00238	6a 13		 push	 19			; 00000013H
  0023a	8b ce		 mov	 ecx, esi
  0023c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00241	66 85 c0	 test	 ax, ax
  00244	74 0a		 je	 SHORT $L133922
  00246	66 3d 01 00	 cmp	 ax, 1
  0024a	0f 85 0b 02 00
	00		 jne	 $L133900
$L133922:

; 3372 : 	COLUMN_ENTRY(m_item.m_bMagic[0])

  00250	8d 8e cd 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3277]
  00256	51		 push	 ecx
  00257	6a 14		 push	 20			; 00000014H
  00259	8b ce		 mov	 ecx, esi
  0025b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00260	66 85 c0	 test	 ax, ax
  00263	74 0a		 je	 SHORT $L133923
  00265	66 3d 01 00	 cmp	 ax, 1
  00269	0f 85 ec 01 00
	00		 jne	 $L133900
$L133923:

; 3373 : 	COLUMN_ENTRY(m_item.m_bMagic[1])

  0026f	8d 96 ce 0c 00
	00		 lea	 edx, DWORD PTR [esi+3278]
  00275	52		 push	 edx
  00276	6a 15		 push	 21			; 00000015H
  00278	8b ce		 mov	 ecx, esi
  0027a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0027f	66 85 c0	 test	 ax, ax
  00282	74 0a		 je	 SHORT $L133924
  00284	66 3d 01 00	 cmp	 ax, 1
  00288	0f 85 cd 01 00
	00		 jne	 $L133900
$L133924:

; 3374 : 	COLUMN_ENTRY(m_item.m_bMagic[2])

  0028e	8d 86 cf 0c 00
	00		 lea	 eax, DWORD PTR [esi+3279]
  00294	50		 push	 eax
  00295	6a 16		 push	 22			; 00000016H
  00297	8b ce		 mov	 ecx, esi
  00299	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0029e	66 85 c0	 test	 ax, ax
  002a1	74 0a		 je	 SHORT $L133925
  002a3	66 3d 01 00	 cmp	 ax, 1
  002a7	0f 85 ae 01 00
	00		 jne	 $L133900
$L133925:

; 3375 : 	COLUMN_ENTRY(m_item.m_bMagic[3])

  002ad	8d 8e d0 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3280]
  002b3	51		 push	 ecx
  002b4	6a 17		 push	 23			; 00000017H
  002b6	8b ce		 mov	 ecx, esi
  002b8	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  002bd	66 85 c0	 test	 ax, ax
  002c0	74 0a		 je	 SHORT $L133926
  002c2	66 3d 01 00	 cmp	 ax, 1
  002c6	0f 85 8f 01 00
	00		 jne	 $L133900
$L133926:

; 3376 : 	COLUMN_ENTRY(m_item.m_bMagic[4])

  002cc	8d 96 d1 0c 00
	00		 lea	 edx, DWORD PTR [esi+3281]
  002d2	52		 push	 edx
  002d3	6a 18		 push	 24			; 00000018H
  002d5	8b ce		 mov	 ecx, esi
  002d7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  002dc	66 85 c0	 test	 ax, ax
  002df	74 0a		 je	 SHORT $L133927
  002e1	66 3d 01 00	 cmp	 ax, 1
  002e5	0f 85 70 01 00
	00		 jne	 $L133900
$L133927:

; 3377 : 	COLUMN_ENTRY(m_item.m_bMagic[5])

  002eb	8d 86 d2 0c 00
	00		 lea	 eax, DWORD PTR [esi+3282]
  002f1	50		 push	 eax
  002f2	6a 19		 push	 25			; 00000019H
  002f4	8b ce		 mov	 ecx, esi
  002f6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  002fb	66 85 c0	 test	 ax, ax
  002fe	74 0a		 je	 SHORT $L133928
  00300	66 3d 01 00	 cmp	 ax, 1
  00304	0f 85 51 01 00
	00		 jne	 $L133900
$L133928:

; 3378 : 	COLUMN_ENTRY(m_item.m_wValue[0])

  0030a	8d 8e d4 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3284]
  00310	51		 push	 ecx
  00311	6a 1a		 push	 26			; 0000001aH
  00313	8b ce		 mov	 ecx, esi
  00315	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0031a	66 85 c0	 test	 ax, ax
  0031d	74 0a		 je	 SHORT $L133929
  0031f	66 3d 01 00	 cmp	 ax, 1
  00323	0f 85 32 01 00
	00		 jne	 $L133900
$L133929:

; 3379 : 	COLUMN_ENTRY(m_item.m_wValue[1])

  00329	8d 96 d6 0c 00
	00		 lea	 edx, DWORD PTR [esi+3286]
  0032f	52		 push	 edx
  00330	6a 1b		 push	 27			; 0000001bH
  00332	8b ce		 mov	 ecx, esi
  00334	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00339	66 85 c0	 test	 ax, ax
  0033c	74 0a		 je	 SHORT $L133930
  0033e	66 3d 01 00	 cmp	 ax, 1
  00342	0f 85 13 01 00
	00		 jne	 $L133900
$L133930:

; 3380 : 	COLUMN_ENTRY(m_item.m_wValue[2])

  00348	8d 86 d8 0c 00
	00		 lea	 eax, DWORD PTR [esi+3288]
  0034e	50		 push	 eax
  0034f	6a 1c		 push	 28			; 0000001cH
  00351	8b ce		 mov	 ecx, esi
  00353	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00358	66 85 c0	 test	 ax, ax
  0035b	74 0a		 je	 SHORT $L133931
  0035d	66 3d 01 00	 cmp	 ax, 1
  00361	0f 85 f4 00 00
	00		 jne	 $L133900
$L133931:

; 3381 : 	COLUMN_ENTRY(m_item.m_wValue[3])

  00367	8d 8e da 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3290]
  0036d	51		 push	 ecx
  0036e	6a 1d		 push	 29			; 0000001dH
  00370	8b ce		 mov	 ecx, esi
  00372	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00377	66 85 c0	 test	 ax, ax
  0037a	74 0a		 je	 SHORT $L133932
  0037c	66 3d 01 00	 cmp	 ax, 1
  00380	0f 85 d5 00 00
	00		 jne	 $L133900
$L133932:

; 3382 : 	COLUMN_ENTRY(m_item.m_wValue[4])

  00386	8d 96 dc 0c 00
	00		 lea	 edx, DWORD PTR [esi+3292]
  0038c	52		 push	 edx
  0038d	6a 1e		 push	 30			; 0000001eH
  0038f	8b ce		 mov	 ecx, esi
  00391	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00396	66 85 c0	 test	 ax, ax
  00399	74 0a		 je	 SHORT $L133933
  0039b	66 3d 01 00	 cmp	 ax, 1
  0039f	0f 85 b6 00 00
	00		 jne	 $L133900
$L133933:

; 3383 : 	COLUMN_ENTRY(m_item.m_wValue[5])

  003a5	8d 86 de 0c 00
	00		 lea	 eax, DWORD PTR [esi+3294]
  003ab	50		 push	 eax
  003ac	6a 1f		 push	 31			; 0000001fH
  003ae	8b ce		 mov	 ecx, esi
  003b0	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  003b5	66 85 c0	 test	 ax, ax
  003b8	74 0a		 je	 SHORT $L133934
  003ba	66 3d 01 00	 cmp	 ax, 1
  003be	0f 85 97 00 00
	00		 jne	 $L133900
$L133934:

; 3384 : 	COLUMN_ENTRY(m_item.m_dwExtValue[0])

  003c4	8d 8e e0 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3296]
  003ca	51		 push	 ecx
  003cb	6a 20		 push	 32			; 00000020H
  003cd	8b ce		 mov	 ecx, esi
  003cf	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  003d4	66 85 c0	 test	 ax, ax
  003d7	74 06		 je	 SHORT $L133935
  003d9	66 3d 01 00	 cmp	 ax, 1
  003dd	75 7c		 jne	 SHORT $L133900
$L133935:

; 3385 : 	COLUMN_ENTRY(m_item.m_dwExtValue[1])

  003df	8d 96 e4 0c 00
	00		 lea	 edx, DWORD PTR [esi+3300]
  003e5	52		 push	 edx
  003e6	6a 21		 push	 33			; 00000021H
  003e8	8b ce		 mov	 ecx, esi
  003ea	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  003ef	66 85 c0	 test	 ax, ax
  003f2	74 06		 je	 SHORT $L133936
  003f4	66 3d 01 00	 cmp	 ax, 1
  003f8	75 61		 jne	 SHORT $L133900
$L133936:

; 3386 : 	COLUMN_ENTRY(m_item.m_dwExtValue[2])

  003fa	8d 86 e8 0c 00
	00		 lea	 eax, DWORD PTR [esi+3304]
  00400	50		 push	 eax
  00401	6a 22		 push	 34			; 00000022H
  00403	8b ce		 mov	 ecx, esi
  00405	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0040a	66 85 c0	 test	 ax, ax
  0040d	74 06		 je	 SHORT $L133937
  0040f	66 3d 01 00	 cmp	 ax, 1
  00413	75 46		 jne	 SHORT $L133900
$L133937:

; 3387 : 	COLUMN_ENTRY(m_item.m_dwExtValue[3])

  00415	8d 8e ec 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3308]
  0041b	51		 push	 ecx
  0041c	6a 23		 push	 35			; 00000023H
  0041e	8b ce		 mov	 ecx, esi
  00420	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00425	66 85 c0	 test	 ax, ax
  00428	74 06		 je	 SHORT $L133938
  0042a	66 3d 01 00	 cmp	 ax, 1
  0042e	75 2b		 jne	 SHORT $L133900
$L133938:

; 3388 : 	COLUMN_ENTRY(m_item.m_dwExtValue[4])

  00430	8d 96 f0 0c 00
	00		 lea	 edx, DWORD PTR [esi+3312]
  00436	52		 push	 edx
  00437	6a 24		 push	 36			; 00000024H
  00439	8b ce		 mov	 ecx, esi
  0043b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00440	66 85 c0	 test	 ax, ax
  00443	74 06		 je	 SHORT $L133939
  00445	66 3d 01 00	 cmp	 ax, 1
  00449	75 10		 jne	 SHORT $L133900
$L133939:

; 3389 : 	COLUMN_ENTRY(m_item.m_dwExtValue[5])

  0044b	8d 86 f4 0c 00
	00		 lea	 eax, DWORD PTR [esi+3316]
  00451	50		 push	 eax
  00452	6a 25		 push	 37			; 00000025H
  00454	8b ce		 mov	 ecx, esi
  00456	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L133900:
  0045b	5e		 pop	 esi

; 3390 : END_COL()

  0045c	c3		 ret	 0
?BindColumns@CTBLAuctionTable@@UAEFXZ ENDP		; CTBLAuctionTable::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLAuctionTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLAuctionTable@@UAEHXZ PROC NEAR		; CTBLAuctionTable::GetNumParam, COMDAT
; _this$ = ecx

; 3392 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLAuctionTable@@UAEHXZ ENDP		; CTBLAuctionTable::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLAuctionTable@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLAuctionTable@@UAEFH@Z PROC NEAR	; CTBLAuctionTable::BindParameters, COMDAT
; _this$ = ecx

; 3393 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wNpcID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L133945
  00010	8d 81 30 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3120]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L133945:

; 3394 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLAuctionTable@@UAEFH@Z ENDP		; CTBLAuctionTable::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLAuctionTable@@UAE@XZ			; CTBLAuctionTable::~CTBLAuctionTable
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLAuctionTable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLAuctionTable@@UAEPAXI@Z PROC NEAR		; CTBLAuctionTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLAuctionTable@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L173508
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L173508:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLAuctionTable@@UAEPAXI@Z ENDP			; CTBLAuctionTable::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLAuctionTable@@UAE@XZ
_TEXT	SEGMENT
??1CTBLAuctionTable@@UAE@XZ PROC NEAR			; CTBLAuctionTable::~CTBLAuctionTable, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLAuctionTable@@UAE@XZ ENDP			; CTBLAuctionTable::~CTBLAuctionTable
_TEXT	ENDS
PUBLIC	??0CTBLAuctionInterest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLAuctionInterest::CTBLAuctionInterest
PUBLIC	?GetNumCol@CTBLAuctionInterest@@UAEHXZ		; CTBLAuctionInterest::GetNumCol
PUBLIC	?BindColumns@CTBLAuctionInterest@@UAEFXZ	; CTBLAuctionInterest::BindColumns
PUBLIC	?GetNumParam@CTBLAuctionInterest@@UAEHXZ	; CTBLAuctionInterest::GetNumParam
PUBLIC	?BindParameters@CTBLAuctionInterest@@UAEFH@Z	; CTBLAuctionInterest::BindParameters
PUBLIC	??_7CTBLAuctionInterest@@6B@			; CTBLAuctionInterest::`vftable'
PUBLIC	??_GCTBLAuctionInterest@@UAEPAXI@Z		; CTBLAuctionInterest::`scalar deleting destructor'
PUBLIC	??_C@_0DP@PPKIJFCL@SELECT?5?7dwAuctionID?5?7FROM?5TAUCTI@ ; `string'
EXTRN	??_ECTBLAuctionInterest@@UAEPAXI@Z:NEAR		; CTBLAuctionInterest::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T173691 DD	0ffffffffH
	DD	FLAT:$L173517
$T173688 DD	019930520H
	DD	01H
	DD	FLAT:$T173691
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DP@PPKIJFCL@SELECT?5?7dwAuctionID?5?7FROM?5TAUCTI@
CONST	SEGMENT
??_C@_0DP@PPKIJFCL@SELECT?5?7dwAuctionID?5?7FROM?5TAUCTI@ DB 'SELECT ', 09H
	DB	'dwAuctionID ', 09H, 'FROM TAUCTIONINTEREST ', 09H, 'WHERE dwC'
	DB	'harID = ?', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLAuctionInterest@@6B@
CONST	SEGMENT
??_7CTBLAuctionInterest@@6B@ DD FLAT:??_ECTBLAuctionInterest@@UAEPAXI@Z ; CTBLAuctionInterest::`vftable'
	DD	FLAT:?GetNumCol@CTBLAuctionInterest@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLAuctionInterest@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLAuctionInterest@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLAuctionInterest@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLAuctionInterest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T173516 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLAuctionInterest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLAuctionInterest::CTBLAuctionInterest, COMDAT
; _this$ = ecx

; 3406 : 	WHERE dwCharID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLAuctionInterest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DP@PPKIJFCL@SELECT?5?7dwAuctionID?5?7FROM?5TAUCTI@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T173516[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLAuctionInterest@@6B@
  0005e	72 0d		 jb	 SHORT $L173689
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L173689:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L173517:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLAuctionInterest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T173688
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLAuctionInterest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLAuctionInterest::CTBLAuctionInterest
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLAuctionInterest@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLAuctionInterest@@UAEHXZ PROC NEAR	; CTBLAuctionInterest::GetNumCol, COMDAT
; _this$ = ecx

; 3408 : BEGIN_COLUMN(1)	

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumCol@CTBLAuctionInterest@@UAEHXZ ENDP		; CTBLAuctionInterest::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLAuctionInterest@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLAuctionInterest@@UAEFXZ PROC NEAR	; CTBLAuctionInterest::BindColumns, COMDAT
; _this$ = ecx

; 3409 : 	COLUMN_ENTRY(m_dwAuctionID)	

  00000	8d 81 30 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3120]
  00006	50		 push	 eax
  00007	6a 01		 push	 1
  00009	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol

; 3410 : END_COL()

  0000e	c3		 ret	 0
?BindColumns@CTBLAuctionInterest@@UAEFXZ ENDP		; CTBLAuctionInterest::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLAuctionInterest@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLAuctionInterest@@UAEHXZ PROC NEAR	; CTBLAuctionInterest::GetNumParam, COMDAT
; _this$ = ecx

; 3412 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLAuctionInterest@@UAEHXZ ENDP		; CTBLAuctionInterest::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLAuctionInterest@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLAuctionInterest@@UAEFH@Z PROC NEAR	; CTBLAuctionInterest::BindParameters, COMDAT
; _this$ = ecx

; 3413 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L134000
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134000:

; 3414 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLAuctionInterest@@UAEFH@Z ENDP	; CTBLAuctionInterest::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLAuctionInterest@@UAE@XZ			; CTBLAuctionInterest::~CTBLAuctionInterest
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLAuctionInterest@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLAuctionInterest@@UAEPAXI@Z PROC NEAR		; CTBLAuctionInterest::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLAuctionInterest@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L173709
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L173709:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLAuctionInterest@@UAEPAXI@Z ENDP			; CTBLAuctionInterest::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLAuctionInterest@@UAE@XZ
_TEXT	SEGMENT
??1CTBLAuctionInterest@@UAE@XZ PROC NEAR		; CTBLAuctionInterest::~CTBLAuctionInterest, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLAuctionInterest@@UAE@XZ ENDP			; CTBLAuctionInterest::~CTBLAuctionInterest
_TEXT	ENDS
PUBLIC	??0CTBLAuctionBidList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLAuctionBidList::CTBLAuctionBidList
PUBLIC	?GetNumCol@CTBLAuctionBidList@@UAEHXZ		; CTBLAuctionBidList::GetNumCol
PUBLIC	?BindColumns@CTBLAuctionBidList@@UAEFXZ		; CTBLAuctionBidList::BindColumns
PUBLIC	?GetNumParam@CTBLAuctionBidList@@UAEHXZ		; CTBLAuctionBidList::GetNumParam
PUBLIC	?BindParameters@CTBLAuctionBidList@@UAEFH@Z	; CTBLAuctionBidList::BindParameters
PUBLIC	??_7CTBLAuctionBidList@@6B@			; CTBLAuctionBidList::`vftable'
PUBLIC	??_GCTBLAuctionBidList@@UAEPAXI@Z		; CTBLAuctionBidList::`scalar deleting destructor'
PUBLIC	??_C@_0FE@CPKPFGEH@SELECT?5?7dwAuctionID?0?5?7dlBidPrice@ ; `string'
EXTRN	??_ECTBLAuctionBidList@@UAEPAXI@Z:NEAR		; CTBLAuctionBidList::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T173892 DD	0ffffffffH
	DD	FLAT:$L173718
$T173889 DD	019930520H
	DD	01H
	DD	FLAT:$T173892
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FE@CPKPFGEH@SELECT?5?7dwAuctionID?0?5?7dlBidPrice@
CONST	SEGMENT
??_C@_0FE@CPKPFGEH@SELECT?5?7dwAuctionID?0?5?7dlBidPrice@ DB 'SELECT ', 09H
	DB	'dwAuctionID, ', 09H, 'dlBidPrice, ', 09H, 'DateBid ', 09H, 'F'
	DB	'ROM TAUCTIONBIDDER ', 09H, 'WHERE dwCharID = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLAuctionBidList@@6B@
CONST	SEGMENT
??_7CTBLAuctionBidList@@6B@ DD FLAT:??_ECTBLAuctionBidList@@UAEPAXI@Z ; CTBLAuctionBidList::`vftable'
	DD	FLAT:?GetNumCol@CTBLAuctionBidList@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLAuctionBidList@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLAuctionBidList@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLAuctionBidList@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLAuctionBidList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T173717 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLAuctionBidList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLAuctionBidList::CTBLAuctionBidList, COMDAT
; _this$ = ecx

; 3430 : 	WHERE dwCharID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLAuctionBidList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FE@CPKPFGEH@SELECT?5?7dwAuctionID?0?5?7dlBidPrice@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T173717[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLAuctionBidList@@6B@
  0005e	72 0d		 jb	 SHORT $L173890
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L173890:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L173718:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLAuctionBidList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T173889
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLAuctionBidList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLAuctionBidList::CTBLAuctionBidList
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLAuctionBidList@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLAuctionBidList@@UAEHXZ PROC NEAR		; CTBLAuctionBidList::GetNumCol, COMDAT
; _this$ = ecx

; 3432 : BEGIN_COLUMN(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumCol@CTBLAuctionBidList@@UAEHXZ ENDP		; CTBLAuctionBidList::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLAuctionBidList@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLAuctionBidList@@UAEFXZ PROC NEAR	; CTBLAuctionBidList::BindColumns, COMDAT
; _this$ = ecx

; 3432 : BEGIN_COLUMN(3)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3433 : 	COLUMN_ENTRY(m_dwAuctionID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L134052
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 2b		 jne	 SHORT $L134048
$L134052:

; 3434 : 	COLUMN_ENTRY(m_ldwBidPrice)

  0001c	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPA_J@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L134053
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 10		 jne	 SHORT $L134048
$L134053:

; 3435 : 	COLUMN_ENTRY(m_dBid)	

  00037	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
$L134048:
  00047	5e		 pop	 esi

; 3436 : END_COL()

  00048	c3		 ret	 0
?BindColumns@CTBLAuctionBidList@@UAEFXZ ENDP		; CTBLAuctionBidList::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLAuctionBidList@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLAuctionBidList@@UAEHXZ PROC NEAR	; CTBLAuctionBidList::GetNumParam, COMDAT
; _this$ = ecx

; 3438 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLAuctionBidList@@UAEHXZ ENDP		; CTBLAuctionBidList::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLAuctionBidList@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLAuctionBidList@@UAEFH@Z PROC NEAR	; CTBLAuctionBidList::BindParameters, COMDAT
; _this$ = ecx

; 3439 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L134059
  00010	8d 81 30 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3120]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134059:

; 3440 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLAuctionBidList@@UAEFH@Z ENDP	; CTBLAuctionBidList::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLAuctionBidList@@UAE@XZ			; CTBLAuctionBidList::~CTBLAuctionBidList
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLAuctionBidList@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLAuctionBidList@@UAEPAXI@Z PROC NEAR		; CTBLAuctionBidList::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLAuctionBidList@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L173910
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L173910:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLAuctionBidList@@UAEPAXI@Z ENDP			; CTBLAuctionBidList::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLAuctionBidList@@UAE@XZ
_TEXT	SEGMENT
??1CTBLAuctionBidList@@UAE@XZ PROC NEAR			; CTBLAuctionBidList::~CTBLAuctionBidList, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLAuctionBidList@@UAE@XZ ENDP			; CTBLAuctionBidList::~CTBLAuctionBidList
_TEXT	ENDS
PUBLIC	??0CTBLAuctionRegList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLAuctionRegList::CTBLAuctionRegList
PUBLIC	?GetNumCol@CTBLAuctionRegList@@UAEHXZ		; CTBLAuctionRegList::GetNumCol
PUBLIC	?BindColumns@CTBLAuctionRegList@@UAEFXZ		; CTBLAuctionRegList::BindColumns
PUBLIC	?GetNumParam@CTBLAuctionRegList@@UAEHXZ		; CTBLAuctionRegList::GetNumParam
PUBLIC	?BindParameters@CTBLAuctionRegList@@UAEFH@Z	; CTBLAuctionRegList::BindParameters
PUBLIC	??_7CTBLAuctionRegList@@6B@			; CTBLAuctionRegList::`vftable'
PUBLIC	??_GCTBLAuctionRegList@@UAEPAXI@Z		; CTBLAuctionRegList::`scalar deleting destructor'
PUBLIC	??_C@_0DM@MGOJJHBJ@SELECT?5?7dwAuctionID?5?7FROM?5TAUCTI@ ; `string'
EXTRN	??_ECTBLAuctionRegList@@UAEPAXI@Z:NEAR		; CTBLAuctionRegList::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T174093 DD	0ffffffffH
	DD	FLAT:$L173919
$T174090 DD	019930520H
	DD	01H
	DD	FLAT:$T174093
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DM@MGOJJHBJ@SELECT?5?7dwAuctionID?5?7FROM?5TAUCTI@
CONST	SEGMENT
??_C@_0DM@MGOJJHBJ@SELECT?5?7dwAuctionID?5?7FROM?5TAUCTI@ DB 'SELECT ', 09H
	DB	'dwAuctionID ', 09H, 'FROM TAUCTIONTABLE ', 09H, 'WHERE dwChar'
	DB	'ID = ?', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLAuctionRegList@@6B@
CONST	SEGMENT
??_7CTBLAuctionRegList@@6B@ DD FLAT:??_ECTBLAuctionRegList@@UAEPAXI@Z ; CTBLAuctionRegList::`vftable'
	DD	FLAT:?GetNumCol@CTBLAuctionRegList@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLAuctionRegList@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLAuctionRegList@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLAuctionRegList@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLAuctionRegList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T173918 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLAuctionRegList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLAuctionRegList::CTBLAuctionRegList, COMDAT
; _this$ = ecx

; 3452 : 	WHERE dwCharID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLAuctionRegList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DM@MGOJJHBJ@SELECT?5?7dwAuctionID?5?7FROM?5TAUCTI@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T173918[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLAuctionRegList@@6B@
  0005e	72 0d		 jb	 SHORT $L174091
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L174091:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L173919:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLAuctionRegList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T174090
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLAuctionRegList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLAuctionRegList::CTBLAuctionRegList
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLAuctionRegList@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLAuctionRegList@@UAEHXZ PROC NEAR		; CTBLAuctionRegList::GetNumCol, COMDAT
; _this$ = ecx

; 3454 : BEGIN_COLUMN(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumCol@CTBLAuctionRegList@@UAEHXZ ENDP		; CTBLAuctionRegList::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLAuctionRegList@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLAuctionRegList@@UAEFXZ PROC NEAR	; CTBLAuctionRegList::BindColumns, COMDAT
; _this$ = ecx

; 3455 : 	COLUMN_ENTRY(m_dwAuctionID)	

  00000	8d 81 30 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3120]
  00006	50		 push	 eax
  00007	6a 01		 push	 1
  00009	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol

; 3456 : END_COL()

  0000e	c3		 ret	 0
?BindColumns@CTBLAuctionRegList@@UAEFXZ ENDP		; CTBLAuctionRegList::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLAuctionRegList@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLAuctionRegList@@UAEHXZ PROC NEAR	; CTBLAuctionRegList::GetNumParam, COMDAT
; _this$ = ecx

; 3458 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLAuctionRegList@@UAEHXZ ENDP		; CTBLAuctionRegList::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLAuctionRegList@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLAuctionRegList@@UAEFH@Z PROC NEAR	; CTBLAuctionRegList::BindParameters, COMDAT
; _this$ = ecx

; 3459 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L134114
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134114:

; 3460 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLAuctionRegList@@UAEFH@Z ENDP	; CTBLAuctionRegList::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLAuctionRegList@@UAE@XZ			; CTBLAuctionRegList::~CTBLAuctionRegList
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLAuctionRegList@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLAuctionRegList@@UAEPAXI@Z PROC NEAR		; CTBLAuctionRegList::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLAuctionRegList@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L174111
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L174111:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLAuctionRegList@@UAEPAXI@Z ENDP			; CTBLAuctionRegList::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLAuctionRegList@@UAE@XZ
_TEXT	SEGMENT
??1CTBLAuctionRegList@@UAE@XZ PROC NEAR			; CTBLAuctionRegList::~CTBLAuctionRegList, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLAuctionRegList@@UAE@XZ ENDP			; CTBLAuctionRegList::~CTBLAuctionRegList
_TEXT	ENDS
PUBLIC	??_7CTBLALLAuctionBidder@@6B@			; CTBLALLAuctionBidder::`vftable'
PUBLIC	??_GCTBLALLAuctionBidder@@UAEPAXI@Z		; CTBLALLAuctionBidder::`scalar deleting destructor'
PUBLIC	??_C@_0EL@HHNIBHIK@SELECT?5?7dwAuctionID?0?5?7dwCharID?0?5@ ; `string'
PUBLIC	??0CTBLALLAuctionBidder@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLALLAuctionBidder::CTBLALLAuctionBidder
PUBLIC	?GetNumCol@CTBLALLAuctionBidder@@UAEHXZ		; CTBLALLAuctionBidder::GetNumCol
PUBLIC	?BindColumns@CTBLALLAuctionBidder@@UAEFXZ	; CTBLALLAuctionBidder::BindColumns
EXTRN	??_ECTBLALLAuctionBidder@@UAEPAXI@Z:NEAR	; CTBLALLAuctionBidder::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T174294 DD	0ffffffffH
	DD	FLAT:$L174120
$T174291 DD	019930520H
	DD	01H
	DD	FLAT:$T174294
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EL@HHNIBHIK@SELECT?5?7dwAuctionID?0?5?7dwCharID?0?5@
CONST	SEGMENT
??_C@_0EL@HHNIBHIK@SELECT?5?7dwAuctionID?0?5?7dwCharID?0?5@ DB 'SELECT ', 09H
	DB	'dwAuctionID, ', 09H, 'dwCharID, ', 09H, 'dlBidPrice, ', 09H, 'D'
	DB	'ateBid ', 09H, 'FROM TAUCTIONBIDDER', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLALLAuctionBidder@@6B@
CONST	SEGMENT
??_7CTBLALLAuctionBidder@@6B@ DD FLAT:??_ECTBLALLAuctionBidder@@UAEPAXI@Z ; CTBLALLAuctionBidder::`vftable'
	DD	FLAT:?GetNumCol@CTBLALLAuctionBidder@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLALLAuctionBidder@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLALLAuctionBidder@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T174119 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLALLAuctionBidder@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLALLAuctionBidder::CTBLALLAuctionBidder, COMDAT
; _this$ = ecx

; 3476 : 	FROM TAUCTIONBIDDER"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLALLAuctionBidder@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EL@HHNIBHIK@SELECT?5?7dwAuctionID?0?5?7dwCharID?0?5@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T174119[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLALLAuctionBidder@@6B@
  0005e	72 0d		 jb	 SHORT $L174292
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L174292:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L174120:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLALLAuctionBidder@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T174291
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLALLAuctionBidder@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLALLAuctionBidder::CTBLALLAuctionBidder
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLALLAuctionBidder@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLALLAuctionBidder@@UAEHXZ PROC NEAR	; CTBLALLAuctionBidder::GetNumCol, COMDAT
; _this$ = ecx

; 3478 : BEGIN_COLUMN(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumCol@CTBLALLAuctionBidder@@UAEHXZ ENDP		; CTBLALLAuctionBidder::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLALLAuctionBidder@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLALLAuctionBidder@@UAEFXZ PROC NEAR	; CTBLALLAuctionBidder::BindColumns, COMDAT
; _this$ = ecx

; 3478 : BEGIN_COLUMN(4)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3479 : 	COLUMN_ENTRY(m_dwAuctionID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L134163
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 46		 jne	 SHORT $L134159
$L134163:

; 3480 : 	COLUMN_ENTRY(m_dwCharID)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L134164
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 2b		 jne	 SHORT $L134159
$L134164:

; 3481 : 	COLUMN_ENTRY(m_ldwBidPrice)

  00037	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPA_J@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L134165
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 10		 jne	 SHORT $L134159
$L134165:

; 3482 : 	COLUMN_ENTRY(m_dBid)

  00052	8d 86 40 0c 00
	00		 lea	 eax, DWORD PTR [esi+3136]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
$L134159:
  00062	5e		 pop	 esi

; 3483 : END_COL()

  00063	c3		 ret	 0
?BindColumns@CTBLALLAuctionBidder@@UAEFXZ ENDP		; CTBLALLAuctionBidder::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLALLAuctionBidder@@UAE@XZ			; CTBLALLAuctionBidder::~CTBLALLAuctionBidder
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLALLAuctionBidder@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLALLAuctionBidder@@UAEPAXI@Z PROC NEAR		; CTBLALLAuctionBidder::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLALLAuctionBidder@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L174306
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L174306:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLALLAuctionBidder@@UAEPAXI@Z ENDP		; CTBLALLAuctionBidder::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLALLAuctionBidder@@UAE@XZ
_TEXT	SEGMENT
??1CTBLALLAuctionBidder@@UAE@XZ PROC NEAR		; CTBLALLAuctionBidder::~CTBLALLAuctionBidder, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLALLAuctionBidder@@UAE@XZ ENDP			; CTBLALLAuctionBidder::~CTBLALLAuctionBidder
_TEXT	ENDS
PUBLIC	??0CTBLMonthRankTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonthRankTable::CTBLMonthRankTable
PUBLIC	?GetNumCol@CTBLMonthRankTable@@UAEHXZ		; CTBLMonthRankTable::GetNumCol
PUBLIC	?BindColumns@CTBLMonthRankTable@@UAEFXZ		; CTBLMonthRankTable::BindColumns
PUBLIC	??_7CTBLMonthRankTable@@6B@			; CTBLMonthRankTable::`vftable'
PUBLIC	??_GCTBLMonthRankTable@@UAEPAXI@Z		; CTBLMonthRankTable::`scalar deleting destructor'
PUBLIC	??_C@_0BCM@JCGKNOOJ@SELECT?5?7bMonth?0?5?7bRank?0?5?7bMonthR@ ; `string'
EXTRN	??_ECTBLMonthRankTable@@UAEPAXI@Z:NEAR		; CTBLMonthRankTable::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T174489 DD	0ffffffffH
	DD	FLAT:$L174315
$T174486 DD	019930520H
	DD	01H
	DD	FLAT:$T174489
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BCM@JCGKNOOJ@SELECT?5?7bMonth?0?5?7bRank?0?5?7bMonthR@
CONST	SEGMENT
??_C@_0BCM@JCGKNOOJ@SELECT?5?7bMonth?0?5?7bRank?0?5?7bMonthR@ DB 'SELECT '
	DB	09H, 'bMonth, ', 09H, 'bRank, ', 09H, 'bMonthRank, ', 09H, 'dw'
	DB	'TotalRank, ', 09H, 'dwCharID, ', 09H, 'szName, ', 09H, 'dwTot'
	DB	'alPoint, ', 09H, 'dwMonthPoint, ', 09H, 'wMonthWin, ', 09H, 'w'
	DB	'MonthLose, ', 09H, 'dwTotalWin, ', 09H, 'dwTotalLose, ', 09H, 'b'
	DB	'Country, ', 09H, 'bLevel, ', 09H, 'bClass, ', 09H, 'bRace, ', 09H
	DB	'bSex, ', 09H, 'bHair, ', 09H, 'bFace, ', 09H, 'szSay, ', 09H, 's'
	DB	'zGuild ', 09H, 'FROM TMONTHRANKTABLE WHERE bMonthRank < 9 ORD'
	DB	'ER BY bMonth,bMonthRank', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CTBLMonthRankTable@@6B@
CONST	SEGMENT
??_7CTBLMonthRankTable@@6B@ DD FLAT:??_ECTBLMonthRankTable@@UAEPAXI@Z ; CTBLMonthRankTable::`vftable'
	DD	FLAT:?GetNumCol@CTBLMonthRankTable@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLMonthRankTable@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLMonthRankTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T174314 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLMonthRankTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLMonthRankTable::CTBLMonthRankTable, COMDAT
; _this$ = ecx

; 3533 : 	FROM TMONTHRANKTABLE WHERE bMonthRank < 9 ORDER BY bMonth,bMonthRank"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLMonthRankTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BCM@JCGKNOOJ@SELECT?5?7bMonth?0?5?7bRank?0?5?7bMonthR@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T174314[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLMonthRankTable@@6B@
  0005e	72 0d		 jb	 SHORT $L174487
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L174487:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L174315:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLMonthRankTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T174486
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLMonthRankTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLMonthRankTable::CTBLMonthRankTable
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLMonthRankTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLMonthRankTable@@UAEHXZ PROC NEAR		; CTBLMonthRankTable::GetNumCol, COMDAT
; _this$ = ecx

; 3535 : BEGIN_COLUMN(21)

  00000	b8 15 00 00 00	 mov	 eax, 21			; 00000015H
  00005	c3		 ret	 0
?GetNumCol@CTBLMonthRankTable@@UAEHXZ ENDP		; CTBLMonthRankTable::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonthRankTable@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLMonthRankTable@@UAEFXZ PROC NEAR	; CTBLMonthRankTable::BindColumns, COMDAT
; _this$ = ecx

; 3535 : BEGIN_COLUMN(21)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3536 : 	COLUMN_ENTRY(m_bMonth)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L134227
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 56 02 00
	00		 jne	 $L134223
$L134227:

; 3537 : 	COLUMN_ENTRY(m_bRank)

  00020	8d 8e 2d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3117]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L134228
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 37 02 00
	00		 jne	 $L134223
$L134228:

; 3538 : 	COLUMN_ENTRY(m_bMonthRank)

  0003f	8d 96 2e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3118]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L134229
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 18 02 00
	00		 jne	 $L134223
$L134229:

; 3539 : 	COLUMN_ENTRY(m_dwTotalRank)

  0005e	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L134230
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 f9 01 00
	00		 jne	 $L134223
$L134230:

; 3540 : 	COLUMN_ENTRY(m_dwCharID)

  0007d	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L134231
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 da 01 00
	00		 jne	 $L134223
$L134231:

; 3541 : 	COLUMN_ENTRY_STR(m_szName)

  0009c	6a 33		 push	 51			; 00000033H
  0009e	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  000a4	52		 push	 edx
  000a5	6a 06		 push	 6
  000a7	8b ce		 mov	 ecx, esi
  000a9	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  000ae	66 85 c0	 test	 ax, ax
  000b1	74 0a		 je	 SHORT $L134232
  000b3	66 3d 01 00	 cmp	 ax, 1
  000b7	0f 85 b9 01 00
	00		 jne	 $L134223
$L134232:

; 3542 : 	COLUMN_ENTRY(m_dwTotalPoint)

  000bd	8d 86 6c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3180]
  000c3	50		 push	 eax
  000c4	6a 07		 push	 7
  000c6	8b ce		 mov	 ecx, esi
  000c8	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000cd	66 85 c0	 test	 ax, ax
  000d0	74 0a		 je	 SHORT $L134233
  000d2	66 3d 01 00	 cmp	 ax, 1
  000d6	0f 85 9a 01 00
	00		 jne	 $L134223
$L134233:

; 3543 : 	COLUMN_ENTRY(m_dwMonthPoint)

  000dc	8d 8e 70 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3184]
  000e2	51		 push	 ecx
  000e3	6a 08		 push	 8
  000e5	8b ce		 mov	 ecx, esi
  000e7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000ec	66 85 c0	 test	 ax, ax
  000ef	74 0a		 je	 SHORT $L134234
  000f1	66 3d 01 00	 cmp	 ax, 1
  000f5	0f 85 7b 01 00
	00		 jne	 $L134223
$L134234:

; 3544 : 	COLUMN_ENTRY(m_wMonthWin)

  000fb	8d 96 74 0c 00
	00		 lea	 edx, DWORD PTR [esi+3188]
  00101	52		 push	 edx
  00102	6a 09		 push	 9
  00104	8b ce		 mov	 ecx, esi
  00106	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0010b	66 85 c0	 test	 ax, ax
  0010e	74 0a		 je	 SHORT $L134235
  00110	66 3d 01 00	 cmp	 ax, 1
  00114	0f 85 5c 01 00
	00		 jne	 $L134223
$L134235:

; 3545 : 	COLUMN_ENTRY(m_wMonthLose)

  0011a	8d 86 76 0c 00
	00		 lea	 eax, DWORD PTR [esi+3190]
  00120	50		 push	 eax
  00121	6a 0a		 push	 10			; 0000000aH
  00123	8b ce		 mov	 ecx, esi
  00125	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0012a	66 85 c0	 test	 ax, ax
  0012d	74 0a		 je	 SHORT $L134236
  0012f	66 3d 01 00	 cmp	 ax, 1
  00133	0f 85 3d 01 00
	00		 jne	 $L134223
$L134236:

; 3546 : 	COLUMN_ENTRY(m_dwTotalWin)

  00139	8d 8e 78 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3192]
  0013f	51		 push	 ecx
  00140	6a 0b		 push	 11			; 0000000bH
  00142	8b ce		 mov	 ecx, esi
  00144	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00149	66 85 c0	 test	 ax, ax
  0014c	74 0a		 je	 SHORT $L134237
  0014e	66 3d 01 00	 cmp	 ax, 1
  00152	0f 85 1e 01 00
	00		 jne	 $L134223
$L134237:

; 3547 : 	COLUMN_ENTRY(m_dwTotalLose)

  00158	8d 96 7c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3196]
  0015e	52		 push	 edx
  0015f	6a 0c		 push	 12			; 0000000cH
  00161	8b ce		 mov	 ecx, esi
  00163	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00168	66 85 c0	 test	 ax, ax
  0016b	74 0a		 je	 SHORT $L134238
  0016d	66 3d 01 00	 cmp	 ax, 1
  00171	0f 85 ff 00 00
	00		 jne	 $L134223
$L134238:

; 3548 : 	COLUMN_ENTRY(m_bCountry)

  00177	8d 86 80 0c 00
	00		 lea	 eax, DWORD PTR [esi+3200]
  0017d	50		 push	 eax
  0017e	6a 0d		 push	 13			; 0000000dH
  00180	8b ce		 mov	 ecx, esi
  00182	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00187	66 85 c0	 test	 ax, ax
  0018a	74 0a		 je	 SHORT $L134239
  0018c	66 3d 01 00	 cmp	 ax, 1
  00190	0f 85 e0 00 00
	00		 jne	 $L134223
$L134239:

; 3549 : 	COLUMN_ENTRY(m_bLevel)

  00196	8d 8e 81 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3201]
  0019c	51		 push	 ecx
  0019d	6a 0e		 push	 14			; 0000000eH
  0019f	8b ce		 mov	 ecx, esi
  001a1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001a6	66 85 c0	 test	 ax, ax
  001a9	74 0a		 je	 SHORT $L134240
  001ab	66 3d 01 00	 cmp	 ax, 1
  001af	0f 85 c1 00 00
	00		 jne	 $L134223
$L134240:

; 3550 : 	COLUMN_ENTRY(m_bClass)

  001b5	8d 96 82 0c 00
	00		 lea	 edx, DWORD PTR [esi+3202]
  001bb	52		 push	 edx
  001bc	6a 0f		 push	 15			; 0000000fH
  001be	8b ce		 mov	 ecx, esi
  001c0	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001c5	66 85 c0	 test	 ax, ax
  001c8	74 0a		 je	 SHORT $L134241
  001ca	66 3d 01 00	 cmp	 ax, 1
  001ce	0f 85 a2 00 00
	00		 jne	 $L134223
$L134241:

; 3551 : 	COLUMN_ENTRY(m_bRace)

  001d4	8d 86 83 0c 00
	00		 lea	 eax, DWORD PTR [esi+3203]
  001da	50		 push	 eax
  001db	6a 10		 push	 16			; 00000010H
  001dd	8b ce		 mov	 ecx, esi
  001df	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001e4	66 85 c0	 test	 ax, ax
  001e7	74 0a		 je	 SHORT $L134242
  001e9	66 3d 01 00	 cmp	 ax, 1
  001ed	0f 85 83 00 00
	00		 jne	 $L134223
$L134242:

; 3552 : 	COLUMN_ENTRY(m_bSex)

  001f3	8d 8e 84 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3204]
  001f9	51		 push	 ecx
  001fa	6a 11		 push	 17			; 00000011H
  001fc	8b ce		 mov	 ecx, esi
  001fe	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00203	66 85 c0	 test	 ax, ax
  00206	74 06		 je	 SHORT $L134243
  00208	66 3d 01 00	 cmp	 ax, 1
  0020c	75 68		 jne	 SHORT $L134223
$L134243:

; 3553 : 	COLUMN_ENTRY(m_bHair)

  0020e	8d 96 85 0c 00
	00		 lea	 edx, DWORD PTR [esi+3205]
  00214	52		 push	 edx
  00215	6a 12		 push	 18			; 00000012H
  00217	8b ce		 mov	 ecx, esi
  00219	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0021e	66 85 c0	 test	 ax, ax
  00221	74 06		 je	 SHORT $L134244
  00223	66 3d 01 00	 cmp	 ax, 1
  00227	75 4d		 jne	 SHORT $L134223
$L134244:

; 3554 : 	COLUMN_ENTRY(m_bFace)

  00229	8d 86 86 0c 00
	00		 lea	 eax, DWORD PTR [esi+3206]
  0022f	50		 push	 eax
  00230	6a 13		 push	 19			; 00000013H
  00232	8b ce		 mov	 ecx, esi
  00234	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00239	66 85 c0	 test	 ax, ax
  0023c	74 06		 je	 SHORT $L134245
  0023e	66 3d 01 00	 cmp	 ax, 1
  00242	75 32		 jne	 SHORT $L134223
$L134245:

; 3555 : 	COLUMN_ENTRY_STR(m_szSay)

  00244	68 01 01 00 00	 push	 257			; 00000101H
  00249	8d 8e 87 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3207]
  0024f	51		 push	 ecx
  00250	6a 14		 push	 20			; 00000014H
  00252	8b ce		 mov	 ecx, esi
  00254	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00259	66 85 c0	 test	 ax, ax
  0025c	74 06		 je	 SHORT $L134246
  0025e	66 3d 01 00	 cmp	 ax, 1
  00262	75 12		 jne	 SHORT $L134223
$L134246:

; 3556 : 	COLUMN_ENTRY_STR(m_szGuild)

  00264	6a 33		 push	 51			; 00000033H
  00266	8d 96 88 0d 00
	00		 lea	 edx, DWORD PTR [esi+3464]
  0026c	52		 push	 edx
  0026d	6a 15		 push	 21			; 00000015H
  0026f	8b ce		 mov	 ecx, esi
  00271	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
$L134223:
  00276	5e		 pop	 esi

; 3557 : END_COL()

  00277	c3		 ret	 0
?BindColumns@CTBLMonthRankTable@@UAEFXZ ENDP		; CTBLMonthRankTable::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLMonthRankTable@@UAE@XZ			; CTBLMonthRankTable::~CTBLMonthRankTable
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLMonthRankTable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLMonthRankTable@@UAEPAXI@Z PROC NEAR		; CTBLMonthRankTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLMonthRankTable@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L174501
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L174501:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLMonthRankTable@@UAEPAXI@Z ENDP			; CTBLMonthRankTable::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLMonthRankTable@@UAE@XZ
_TEXT	SEGMENT
??1CTBLMonthRankTable@@UAE@XZ PROC NEAR			; CTBLMonthRankTable::~CTBLMonthRankTable, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLMonthRankTable@@UAE@XZ ENDP			; CTBLMonthRankTable::~CTBLMonthRankTable
_TEXT	ENDS
PUBLIC	??0CTBLHeroTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLHeroTable::CTBLHeroTable
PUBLIC	?GetNumCol@CTBLHeroTable@@UAEHXZ		; CTBLHeroTable::GetNumCol
PUBLIC	?BindColumns@CTBLHeroTable@@UAEFXZ		; CTBLHeroTable::BindColumns
PUBLIC	??_7CTBLHeroTable@@6B@				; CTBLHeroTable::`vftable'
PUBLIC	??_GCTBLHeroTable@@UAEPAXI@Z			; CTBLHeroTable::`scalar deleting destructor'
PUBLIC	??_C@_0BAB@HIHJAPAM@SELECT?5?7bMonth?0?5?7bType?0?5?7bOrder?0@ ; `string'
EXTRN	??_ECTBLHeroTable@@UAEPAXI@Z:NEAR		; CTBLHeroTable::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T174684 DD	0ffffffffH
	DD	FLAT:$L174510
$T174681 DD	019930520H
	DD	01H
	DD	FLAT:$T174684
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BAB@HIHJAPAM@SELECT?5?7bMonth?0?5?7bType?0?5?7bOrder?0@
CONST	SEGMENT
??_C@_0BAB@HIHJAPAM@SELECT?5?7bMonth?0?5?7bType?0?5?7bOrder?0@ DB 'SELECT'
	DB	' ', 09H, 'bMonth, ', 09H, 'bType, ', 09H, 'bOrder, ', 09H, 'd'
	DB	'wMonthRank, ', 09H, 'dwTotalRank, ', 09H, 'dwTotalPoint, ', 09H
	DB	'dwMonthPoint, ', 09H, 'wMonthWin, ', 09H, 'wMonthLose, ', 09H
	DB	'dwTotalWin, ', 09H, 'dwTotalLose, ', 09H, 'dwCharID, ', 09H, 's'
	DB	'zName, ', 09H, 'bCountry, ', 09H, 'bLevel, ', 09H, 'bClass, ', 09H
	DB	'bRace, ', 09H, 'bSex, ', 09H, 'bHair, ', 09H, 'bFace, ', 09H, 's'
	DB	'zGuild, ', 09H, 'szSay ', 09H, 'FROM THEROTABLE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLHeroTable@@6B@
CONST	SEGMENT
??_7CTBLHeroTable@@6B@ DD FLAT:??_ECTBLHeroTable@@UAEPAXI@Z ; CTBLHeroTable::`vftable'
	DD	FLAT:?GetNumCol@CTBLHeroTable@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLHeroTable@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLHeroTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T174509 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLHeroTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLHeroTable::CTBLHeroTable, COMDAT
; _this$ = ecx

; 3609 : 	FROM THEROTABLE"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLHeroTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BAB@HIHJAPAM@SELECT?5?7bMonth?0?5?7bType?0?5?7bOrder?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T174509[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLHeroTable@@6B@
  0005e	72 0d		 jb	 SHORT $L174682
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L174682:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L174510:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLHeroTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T174681
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLHeroTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLHeroTable::CTBLHeroTable
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLHeroTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLHeroTable@@UAEHXZ PROC NEAR		; CTBLHeroTable::GetNumCol, COMDAT
; _this$ = ecx

; 3611 : BEGIN_COLUMN(22)

  00000	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  00005	c3		 ret	 0
?GetNumCol@CTBLHeroTable@@UAEHXZ ENDP			; CTBLHeroTable::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLHeroTable@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLHeroTable@@UAEFXZ PROC NEAR		; CTBLHeroTable::BindColumns, COMDAT
; _this$ = ecx

; 3611 : BEGIN_COLUMN(22)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3612 : 	COLUMN_ENTRY(m_bMonth)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L134309
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 75 02 00
	00		 jne	 $L134305
$L134309:

; 3613 : 	COLUMN_ENTRY(m_bType)

  00020	8d 8e 2d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3117]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L134310
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 56 02 00
	00		 jne	 $L134305
$L134310:

; 3614 : 	COLUMN_ENTRY(m_bOrder)

  0003f	8d 96 2e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3118]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L134311
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 37 02 00
	00		 jne	 $L134305
$L134311:

; 3615 : 	COLUMN_ENTRY(m_dwMonthRank)

  0005e	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L134312
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 18 02 00
	00		 jne	 $L134305
$L134312:

; 3616 : 	COLUMN_ENTRY(m_dwTotalRank)

  0007d	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L134313
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 f9 01 00
	00		 jne	 $L134305
$L134313:

; 3617 : 	COLUMN_ENTRY(m_dwTotalPoint)

  0009c	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L134314
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 da 01 00
	00		 jne	 $L134305
$L134314:

; 3618 : 	COLUMN_ENTRY(m_dwMonthPoint)

  000bb	8d 86 3c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3132]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 0a		 je	 SHORT $L134315
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	0f 85 bb 01 00
	00		 jne	 $L134305
$L134315:

; 3619 : 	COLUMN_ENTRY(m_wMonthWin)

  000da	8d 8e 40 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3136]
  000e0	51		 push	 ecx
  000e1	6a 08		 push	 8
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000ea	66 85 c0	 test	 ax, ax
  000ed	74 0a		 je	 SHORT $L134316
  000ef	66 3d 01 00	 cmp	 ax, 1
  000f3	0f 85 9c 01 00
	00		 jne	 $L134305
$L134316:

; 3620 : 	COLUMN_ENTRY(m_wMonthLose)

  000f9	8d 96 42 0c 00
	00		 lea	 edx, DWORD PTR [esi+3138]
  000ff	52		 push	 edx
  00100	6a 09		 push	 9
  00102	8b ce		 mov	 ecx, esi
  00104	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00109	66 85 c0	 test	 ax, ax
  0010c	74 0a		 je	 SHORT $L134317
  0010e	66 3d 01 00	 cmp	 ax, 1
  00112	0f 85 7d 01 00
	00		 jne	 $L134305
$L134317:

; 3621 : 	COLUMN_ENTRY(m_dwTotalWin)

  00118	8d 86 44 0c 00
	00		 lea	 eax, DWORD PTR [esi+3140]
  0011e	50		 push	 eax
  0011f	6a 0a		 push	 10			; 0000000aH
  00121	8b ce		 mov	 ecx, esi
  00123	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00128	66 85 c0	 test	 ax, ax
  0012b	74 0a		 je	 SHORT $L134318
  0012d	66 3d 01 00	 cmp	 ax, 1
  00131	0f 85 5e 01 00
	00		 jne	 $L134305
$L134318:

; 3622 : 	COLUMN_ENTRY(m_dwTotalLose)

  00137	8d 8e 48 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3144]
  0013d	51		 push	 ecx
  0013e	6a 0b		 push	 11			; 0000000bH
  00140	8b ce		 mov	 ecx, esi
  00142	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00147	66 85 c0	 test	 ax, ax
  0014a	74 0a		 je	 SHORT $L134319
  0014c	66 3d 01 00	 cmp	 ax, 1
  00150	0f 85 3f 01 00
	00		 jne	 $L134305
$L134319:

; 3623 : 	COLUMN_ENTRY(m_dwCharID)

  00156	8d 96 4c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3148]
  0015c	52		 push	 edx
  0015d	6a 0c		 push	 12			; 0000000cH
  0015f	8b ce		 mov	 ecx, esi
  00161	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00166	66 85 c0	 test	 ax, ax
  00169	74 0a		 je	 SHORT $L134320
  0016b	66 3d 01 00	 cmp	 ax, 1
  0016f	0f 85 20 01 00
	00		 jne	 $L134305
$L134320:

; 3624 : 	COLUMN_ENTRY_STR(m_szName)

  00175	6a 33		 push	 51			; 00000033H
  00177	8d 86 50 0c 00
	00		 lea	 eax, DWORD PTR [esi+3152]
  0017d	50		 push	 eax
  0017e	6a 0d		 push	 13			; 0000000dH
  00180	8b ce		 mov	 ecx, esi
  00182	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00187	66 85 c0	 test	 ax, ax
  0018a	74 0a		 je	 SHORT $L134321
  0018c	66 3d 01 00	 cmp	 ax, 1
  00190	0f 85 ff 00 00
	00		 jne	 $L134305
$L134321:

; 3625 : 	COLUMN_ENTRY(m_bCountry)

  00196	8d 8e 83 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3203]
  0019c	51		 push	 ecx
  0019d	6a 0e		 push	 14			; 0000000eH
  0019f	8b ce		 mov	 ecx, esi
  001a1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001a6	66 85 c0	 test	 ax, ax
  001a9	74 0a		 je	 SHORT $L134322
  001ab	66 3d 01 00	 cmp	 ax, 1
  001af	0f 85 e0 00 00
	00		 jne	 $L134305
$L134322:

; 3626 : 	COLUMN_ENTRY(m_bLevel)

  001b5	8d 96 84 0c 00
	00		 lea	 edx, DWORD PTR [esi+3204]
  001bb	52		 push	 edx
  001bc	6a 0f		 push	 15			; 0000000fH
  001be	8b ce		 mov	 ecx, esi
  001c0	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001c5	66 85 c0	 test	 ax, ax
  001c8	74 0a		 je	 SHORT $L134323
  001ca	66 3d 01 00	 cmp	 ax, 1
  001ce	0f 85 c1 00 00
	00		 jne	 $L134305
$L134323:

; 3627 : 	COLUMN_ENTRY(m_bClass)

  001d4	8d 86 85 0c 00
	00		 lea	 eax, DWORD PTR [esi+3205]
  001da	50		 push	 eax
  001db	6a 10		 push	 16			; 00000010H
  001dd	8b ce		 mov	 ecx, esi
  001df	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001e4	66 85 c0	 test	 ax, ax
  001e7	74 0a		 je	 SHORT $L134324
  001e9	66 3d 01 00	 cmp	 ax, 1
  001ed	0f 85 a2 00 00
	00		 jne	 $L134305
$L134324:

; 3628 : 	COLUMN_ENTRY(m_bRace)

  001f3	8d 8e 86 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3206]
  001f9	51		 push	 ecx
  001fa	6a 11		 push	 17			; 00000011H
  001fc	8b ce		 mov	 ecx, esi
  001fe	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00203	66 85 c0	 test	 ax, ax
  00206	74 0a		 je	 SHORT $L134325
  00208	66 3d 01 00	 cmp	 ax, 1
  0020c	0f 85 83 00 00
	00		 jne	 $L134305
$L134325:

; 3629 : 	COLUMN_ENTRY(m_bSex)

  00212	8d 96 87 0c 00
	00		 lea	 edx, DWORD PTR [esi+3207]
  00218	52		 push	 edx
  00219	6a 12		 push	 18			; 00000012H
  0021b	8b ce		 mov	 ecx, esi
  0021d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00222	66 85 c0	 test	 ax, ax
  00225	74 06		 je	 SHORT $L134326
  00227	66 3d 01 00	 cmp	 ax, 1
  0022b	75 68		 jne	 SHORT $L134305
$L134326:

; 3630 : 	COLUMN_ENTRY(m_bHair)

  0022d	8d 86 88 0c 00
	00		 lea	 eax, DWORD PTR [esi+3208]
  00233	50		 push	 eax
  00234	6a 13		 push	 19			; 00000013H
  00236	8b ce		 mov	 ecx, esi
  00238	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0023d	66 85 c0	 test	 ax, ax
  00240	74 06		 je	 SHORT $L134327
  00242	66 3d 01 00	 cmp	 ax, 1
  00246	75 4d		 jne	 SHORT $L134305
$L134327:

; 3631 : 	COLUMN_ENTRY(m_bFace)

  00248	8d 8e 89 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3209]
  0024e	51		 push	 ecx
  0024f	6a 14		 push	 20			; 00000014H
  00251	8b ce		 mov	 ecx, esi
  00253	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00258	66 85 c0	 test	 ax, ax
  0025b	74 06		 je	 SHORT $L134328
  0025d	66 3d 01 00	 cmp	 ax, 1
  00261	75 32		 jne	 SHORT $L134305
$L134328:

; 3632 : 	COLUMN_ENTRY_STR(m_szGuild)

  00263	6a 33		 push	 51			; 00000033H
  00265	8d 96 8a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3210]
  0026b	52		 push	 edx
  0026c	6a 15		 push	 21			; 00000015H
  0026e	8b ce		 mov	 ecx, esi
  00270	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00275	66 85 c0	 test	 ax, ax
  00278	74 06		 je	 SHORT $L134329
  0027a	66 3d 01 00	 cmp	 ax, 1
  0027e	75 15		 jne	 SHORT $L134305
$L134329:

; 3633 : 	COLUMN_ENTRY_STR(m_szSay)

  00280	68 01 01 00 00	 push	 257			; 00000101H
  00285	8d 86 bd 0c 00
	00		 lea	 eax, DWORD PTR [esi+3261]
  0028b	50		 push	 eax
  0028c	6a 16		 push	 22			; 00000016H
  0028e	8b ce		 mov	 ecx, esi
  00290	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
$L134305:
  00295	5e		 pop	 esi

; 3634 : END_COL()

  00296	c3		 ret	 0
?BindColumns@CTBLHeroTable@@UAEFXZ ENDP			; CTBLHeroTable::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLHeroTable@@UAE@XZ			; CTBLHeroTable::~CTBLHeroTable
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLHeroTable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLHeroTable@@UAEPAXI@Z PROC NEAR			; CTBLHeroTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLHeroTable@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L174696
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L174696:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLHeroTable@@UAEPAXI@Z ENDP			; CTBLHeroTable::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLHeroTable@@UAE@XZ
_TEXT	SEGMENT
??1CTBLHeroTable@@UAE@XZ PROC NEAR			; CTBLHeroTable::~CTBLHeroTable, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLHeroTable@@UAE@XZ ENDP				; CTBLHeroTable::~CTBLHeroTable
_TEXT	ENDS
PUBLIC	??0CTBLFirstGradeGroup@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLFirstGradeGroup::CTBLFirstGradeGroup
PUBLIC	?GetNumCol@CTBLFirstGradeGroup@@UAEHXZ		; CTBLFirstGradeGroup::GetNumCol
PUBLIC	?BindColumns@CTBLFirstGradeGroup@@UAEFXZ	; CTBLFirstGradeGroup::BindColumns
PUBLIC	?GetNumParam@CTBLFirstGradeGroup@@UAEHXZ	; CTBLFirstGradeGroup::GetNumParam
PUBLIC	?BindParameters@CTBLFirstGradeGroup@@UAEFH@Z	; CTBLFirstGradeGroup::BindParameters
PUBLIC	??_7CTBLFirstGradeGroup@@6B@			; CTBLFirstGradeGroup::`vftable'
PUBLIC	??_GCTBLFirstGradeGroup@@UAEPAXI@Z		; CTBLFirstGradeGroup::`scalar deleting destructor'
PUBLIC	??_C@_0BAB@HGCAMCMO@SELECT?5?7bRank?0?5?7dwCharID?0?5?7szNam@ ; `string'
EXTRN	??_ECTBLFirstGradeGroup@@UAEPAXI@Z:NEAR		; CTBLFirstGradeGroup::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T174879 DD	0ffffffffH
	DD	FLAT:$L174705
$T174876 DD	019930520H
	DD	01H
	DD	FLAT:$T174879
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BAB@HGCAMCMO@SELECT?5?7bRank?0?5?7dwCharID?0?5?7szNam@
CONST	SEGMENT
??_C@_0BAB@HGCAMCMO@SELECT?5?7bRank?0?5?7dwCharID?0?5?7szNam@ DB 'SELECT '
	DB	09H, 'bRank, ', 09H, 'dwCharID, ', 09H, 'szName, ', 09H, 'dwTo'
	DB	'talPoint, ', 09H, 'dwMonthPoint, ', 09H, 'wMonthWin, ', 09H, 'w'
	DB	'MonthLose, ', 09H, 'dwTotalWin, ', 09H, 'dwTotalLose, ', 09H, 'b'
	DB	'Country, ', 09H, 'bLevel, ', 09H, 'bClass, ', 09H, 'bRace, ', 09H
	DB	'bSex, ', 09H, 'bHair, ', 09H, 'bFace, ', 09H, 'szSay, ', 09H, 's'
	DB	'zGuild ', 09H, 'FROM TMONTHRANKTABLE WHERE bMonth = ? ORDER B'
	DB	'Y bCountry,bRank', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CTBLFirstGradeGroup@@6B@
CONST	SEGMENT
??_7CTBLFirstGradeGroup@@6B@ DD FLAT:??_ECTBLFirstGradeGroup@@UAEPAXI@Z ; CTBLFirstGradeGroup::`vftable'
	DD	FLAT:?GetNumCol@CTBLFirstGradeGroup@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLFirstGradeGroup@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLFirstGradeGroup@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLFirstGradeGroup@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLFirstGradeGroup@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T174704 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLFirstGradeGroup@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLFirstGradeGroup::CTBLFirstGradeGroup, COMDAT
; _this$ = ecx

; 3679 : 	FROM TMONTHRANKTABLE WHERE bMonth = ? ORDER BY bCountry,bRank"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLFirstGradeGroup@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BAB@HGCAMCMO@SELECT?5?7bRank?0?5?7dwCharID?0?5?7szNam@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T174704[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLFirstGradeGroup@@6B@
  0005e	72 0d		 jb	 SHORT $L174877
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L174877:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L174705:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLFirstGradeGroup@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T174876
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLFirstGradeGroup@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLFirstGradeGroup::CTBLFirstGradeGroup
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLFirstGradeGroup@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLFirstGradeGroup@@UAEHXZ PROC NEAR	; CTBLFirstGradeGroup::GetNumCol, COMDAT
; _this$ = ecx

; 3681 : BEGIN_COLUMN(18)

  00000	b8 12 00 00 00	 mov	 eax, 18			; 00000012H
  00005	c3		 ret	 0
?GetNumCol@CTBLFirstGradeGroup@@UAEHXZ ENDP		; CTBLFirstGradeGroup::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLFirstGradeGroup@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLFirstGradeGroup@@UAEFXZ PROC NEAR	; CTBLFirstGradeGroup::BindColumns, COMDAT
; _this$ = ecx

; 3681 : BEGIN_COLUMN(18)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3682 : 	COLUMN_ENTRY(m_bRank)	

  00003	8d 86 2d 0c 00
	00		 lea	 eax, DWORD PTR [esi+3117]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L134392
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 f9 01 00
	00		 jne	 $L134388
$L134392:

; 3683 : 	COLUMN_ENTRY(m_dwCharID)

  00020	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L134393
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 da 01 00
	00		 jne	 $L134388
$L134393:

; 3684 : 	COLUMN_ENTRY_STR(m_szName)

  0003f	6a 33		 push	 51			; 00000033H
  00041	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00047	52		 push	 edx
  00048	6a 03		 push	 3
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00051	66 85 c0	 test	 ax, ax
  00054	74 0a		 je	 SHORT $L134394
  00056	66 3d 01 00	 cmp	 ax, 1
  0005a	0f 85 b9 01 00
	00		 jne	 $L134388
$L134394:

; 3685 : 	COLUMN_ENTRY(m_dwTotalPoint)

  00060	8d 86 68 0c 00
	00		 lea	 eax, DWORD PTR [esi+3176]
  00066	50		 push	 eax
  00067	6a 04		 push	 4
  00069	8b ce		 mov	 ecx, esi
  0006b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00070	66 85 c0	 test	 ax, ax
  00073	74 0a		 je	 SHORT $L134395
  00075	66 3d 01 00	 cmp	 ax, 1
  00079	0f 85 9a 01 00
	00		 jne	 $L134388
$L134395:

; 3686 : 	COLUMN_ENTRY(m_dwMonthPoint)

  0007f	8d 8e 6c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3180]
  00085	51		 push	 ecx
  00086	6a 05		 push	 5
  00088	8b ce		 mov	 ecx, esi
  0008a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0008f	66 85 c0	 test	 ax, ax
  00092	74 0a		 je	 SHORT $L134396
  00094	66 3d 01 00	 cmp	 ax, 1
  00098	0f 85 7b 01 00
	00		 jne	 $L134388
$L134396:

; 3687 : 	COLUMN_ENTRY(m_wMonthWin)

  0009e	8d 96 70 0c 00
	00		 lea	 edx, DWORD PTR [esi+3184]
  000a4	52		 push	 edx
  000a5	6a 06		 push	 6
  000a7	8b ce		 mov	 ecx, esi
  000a9	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000ae	66 85 c0	 test	 ax, ax
  000b1	74 0a		 je	 SHORT $L134397
  000b3	66 3d 01 00	 cmp	 ax, 1
  000b7	0f 85 5c 01 00
	00		 jne	 $L134388
$L134397:

; 3688 : 	COLUMN_ENTRY(m_wMonthLose)

  000bd	8d 86 72 0c 00
	00		 lea	 eax, DWORD PTR [esi+3186]
  000c3	50		 push	 eax
  000c4	6a 07		 push	 7
  000c6	8b ce		 mov	 ecx, esi
  000c8	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000cd	66 85 c0	 test	 ax, ax
  000d0	74 0a		 je	 SHORT $L134398
  000d2	66 3d 01 00	 cmp	 ax, 1
  000d6	0f 85 3d 01 00
	00		 jne	 $L134388
$L134398:

; 3689 : 	COLUMN_ENTRY(m_dwTotalWin)

  000dc	8d 8e 74 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3188]
  000e2	51		 push	 ecx
  000e3	6a 08		 push	 8
  000e5	8b ce		 mov	 ecx, esi
  000e7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000ec	66 85 c0	 test	 ax, ax
  000ef	74 0a		 je	 SHORT $L134399
  000f1	66 3d 01 00	 cmp	 ax, 1
  000f5	0f 85 1e 01 00
	00		 jne	 $L134388
$L134399:

; 3690 : 	COLUMN_ENTRY(m_dwTotalLose)

  000fb	8d 96 78 0c 00
	00		 lea	 edx, DWORD PTR [esi+3192]
  00101	52		 push	 edx
  00102	6a 09		 push	 9
  00104	8b ce		 mov	 ecx, esi
  00106	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0010b	66 85 c0	 test	 ax, ax
  0010e	74 0a		 je	 SHORT $L134400
  00110	66 3d 01 00	 cmp	 ax, 1
  00114	0f 85 ff 00 00
	00		 jne	 $L134388
$L134400:

; 3691 : 	COLUMN_ENTRY(m_bCountry)

  0011a	8d 86 7c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3196]
  00120	50		 push	 eax
  00121	6a 0a		 push	 10			; 0000000aH
  00123	8b ce		 mov	 ecx, esi
  00125	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0012a	66 85 c0	 test	 ax, ax
  0012d	74 0a		 je	 SHORT $L134401
  0012f	66 3d 01 00	 cmp	 ax, 1
  00133	0f 85 e0 00 00
	00		 jne	 $L134388
$L134401:

; 3692 : 	COLUMN_ENTRY(m_bLevel)

  00139	8d 8e 7d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3197]
  0013f	51		 push	 ecx
  00140	6a 0b		 push	 11			; 0000000bH
  00142	8b ce		 mov	 ecx, esi
  00144	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00149	66 85 c0	 test	 ax, ax
  0014c	74 0a		 je	 SHORT $L134402
  0014e	66 3d 01 00	 cmp	 ax, 1
  00152	0f 85 c1 00 00
	00		 jne	 $L134388
$L134402:

; 3693 : 	COLUMN_ENTRY(m_bClass)

  00158	8d 96 7e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3198]
  0015e	52		 push	 edx
  0015f	6a 0c		 push	 12			; 0000000cH
  00161	8b ce		 mov	 ecx, esi
  00163	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00168	66 85 c0	 test	 ax, ax
  0016b	74 0a		 je	 SHORT $L134403
  0016d	66 3d 01 00	 cmp	 ax, 1
  00171	0f 85 a2 00 00
	00		 jne	 $L134388
$L134403:

; 3694 : 	COLUMN_ENTRY(m_bRace)

  00177	8d 86 7f 0c 00
	00		 lea	 eax, DWORD PTR [esi+3199]
  0017d	50		 push	 eax
  0017e	6a 0d		 push	 13			; 0000000dH
  00180	8b ce		 mov	 ecx, esi
  00182	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00187	66 85 c0	 test	 ax, ax
  0018a	74 0a		 je	 SHORT $L134404
  0018c	66 3d 01 00	 cmp	 ax, 1
  00190	0f 85 83 00 00
	00		 jne	 $L134388
$L134404:

; 3695 : 	COLUMN_ENTRY(m_bSex)

  00196	8d 8e 80 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3200]
  0019c	51		 push	 ecx
  0019d	6a 0e		 push	 14			; 0000000eH
  0019f	8b ce		 mov	 ecx, esi
  001a1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001a6	66 85 c0	 test	 ax, ax
  001a9	74 06		 je	 SHORT $L134405
  001ab	66 3d 01 00	 cmp	 ax, 1
  001af	75 68		 jne	 SHORT $L134388
$L134405:

; 3696 : 	COLUMN_ENTRY(m_bHair)

  001b1	8d 96 81 0c 00
	00		 lea	 edx, DWORD PTR [esi+3201]
  001b7	52		 push	 edx
  001b8	6a 0f		 push	 15			; 0000000fH
  001ba	8b ce		 mov	 ecx, esi
  001bc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001c1	66 85 c0	 test	 ax, ax
  001c4	74 06		 je	 SHORT $L134406
  001c6	66 3d 01 00	 cmp	 ax, 1
  001ca	75 4d		 jne	 SHORT $L134388
$L134406:

; 3697 : 	COLUMN_ENTRY(m_bFace)

  001cc	8d 86 82 0c 00
	00		 lea	 eax, DWORD PTR [esi+3202]
  001d2	50		 push	 eax
  001d3	6a 10		 push	 16			; 00000010H
  001d5	8b ce		 mov	 ecx, esi
  001d7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001dc	66 85 c0	 test	 ax, ax
  001df	74 06		 je	 SHORT $L134407
  001e1	66 3d 01 00	 cmp	 ax, 1
  001e5	75 32		 jne	 SHORT $L134388
$L134407:

; 3698 : 	COLUMN_ENTRY_STR(m_szSay)

  001e7	68 01 01 00 00	 push	 257			; 00000101H
  001ec	8d 8e 83 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3203]
  001f2	51		 push	 ecx
  001f3	6a 11		 push	 17			; 00000011H
  001f5	8b ce		 mov	 ecx, esi
  001f7	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  001fc	66 85 c0	 test	 ax, ax
  001ff	74 06		 je	 SHORT $L134408
  00201	66 3d 01 00	 cmp	 ax, 1
  00205	75 12		 jne	 SHORT $L134388
$L134408:

; 3699 : 	COLUMN_ENTRY_STR(m_szGuild)

  00207	6a 33		 push	 51			; 00000033H
  00209	8d 96 84 0d 00
	00		 lea	 edx, DWORD PTR [esi+3460]
  0020f	52		 push	 edx
  00210	6a 12		 push	 18			; 00000012H
  00212	8b ce		 mov	 ecx, esi
  00214	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
$L134388:
  00219	5e		 pop	 esi

; 3700 : END_COL()

  0021a	c3		 ret	 0
?BindColumns@CTBLFirstGradeGroup@@UAEFXZ ENDP		; CTBLFirstGradeGroup::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLFirstGradeGroup@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLFirstGradeGroup@@UAEHXZ PROC NEAR	; CTBLFirstGradeGroup::GetNumParam, COMDAT
; _this$ = ecx

; 3702 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLFirstGradeGroup@@UAEHXZ ENDP		; CTBLFirstGradeGroup::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLFirstGradeGroup@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLFirstGradeGroup@@UAEFH@Z PROC NEAR	; CTBLFirstGradeGroup::BindParameters, COMDAT
; _this$ = ecx

; 3703 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bMonth)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L134414
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L134414:

; 3704 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLFirstGradeGroup@@UAEFH@Z ENDP	; CTBLFirstGradeGroup::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLFirstGradeGroup@@UAE@XZ			; CTBLFirstGradeGroup::~CTBLFirstGradeGroup
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLFirstGradeGroup@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLFirstGradeGroup@@UAEPAXI@Z PROC NEAR		; CTBLFirstGradeGroup::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLFirstGradeGroup@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L174897
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L174897:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLFirstGradeGroup@@UAEPAXI@Z ENDP			; CTBLFirstGradeGroup::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLFirstGradeGroup@@UAE@XZ
_TEXT	SEGMENT
??1CTBLFirstGradeGroup@@UAE@XZ PROC NEAR		; CTBLFirstGradeGroup::~CTBLFirstGradeGroup, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLFirstGradeGroup@@UAE@XZ ENDP			; CTBLFirstGradeGroup::~CTBLFirstGradeGroup
_TEXT	ENDS
PUBLIC	??0CTBLTutorialCharItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTutorialCharItem::CTBLTutorialCharItem
PUBLIC	?GetNumCol@CTBLTutorialCharItem@@UAEHXZ		; CTBLTutorialCharItem::GetNumCol
PUBLIC	?BindColumns@CTBLTutorialCharItem@@UAEFXZ	; CTBLTutorialCharItem::BindColumns
PUBLIC	??_7CTBLTutorialCharItem@@6B@			; CTBLTutorialCharItem::`vftable'
PUBLIC	??_GCTBLTutorialCharItem@@UAEPAXI@Z		; CTBLTutorialCharItem::`scalar deleting destructor'
PUBLIC	??_C@_0JG@JLIPLCFN@SELECT?5?7bCountry?0?5?7bClass?0?5?7bSex@ ; `string'
EXTRN	??_ECTBLTutorialCharItem@@UAEPAXI@Z:NEAR	; CTBLTutorialCharItem::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T175080 DD	0ffffffffH
	DD	FLAT:$L174906
$T175077 DD	019930520H
	DD	01H
	DD	FLAT:$T175080
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0JG@JLIPLCFN@SELECT?5?7bCountry?0?5?7bClass?0?5?7bSex@
CONST	SEGMENT
??_C@_0JG@JLIPLCFN@SELECT?5?7bCountry?0?5?7bClass?0?5?7bSex@ DB 'SELECT ', 09H
	DB	'bCountry, ', 09H, 'bClass, ', 09H, 'bSex, ', 09H, 'wPrmWeapon'
	DB	', ', 09H, 'wSndWeapon, ', 09H, 'wLongWeapon, ', 09H, 'wHead, '
	DB	09H, 'wBody, ', 09H, 'wPants, ', 09H, 'wHand, ', 09H, 'wFoot, '
	DB	09H, 'wBack ', 09H, 'FROM TEQUIPCREATECHARCHART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLTutorialCharItem@@6B@
CONST	SEGMENT
??_7CTBLTutorialCharItem@@6B@ DD FLAT:??_ECTBLTutorialCharItem@@UAEPAXI@Z ; CTBLTutorialCharItem::`vftable'
	DD	FLAT:?GetNumCol@CTBLTutorialCharItem@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLTutorialCharItem@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLTutorialCharItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T174905 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLTutorialCharItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLTutorialCharItem::CTBLTutorialCharItem, COMDAT
; _this$ = ecx

; 3738 : 	FROM TEQUIPCREATECHARCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLTutorialCharItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0JG@JLIPLCFN@SELECT?5?7bCountry?0?5?7bClass?0?5?7bSex@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T174905[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLTutorialCharItem@@6B@
  0005e	72 0d		 jb	 SHORT $L175078
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L175078:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L174906:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLTutorialCharItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T175077
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLTutorialCharItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLTutorialCharItem::CTBLTutorialCharItem
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLTutorialCharItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLTutorialCharItem@@UAEHXZ PROC NEAR	; CTBLTutorialCharItem::GetNumCol, COMDAT
; _this$ = ecx

; 3740 : BEGIN_COLUMN(12)

  00000	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00005	c3		 ret	 0
?GetNumCol@CTBLTutorialCharItem@@UAEHXZ ENDP		; CTBLTutorialCharItem::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTutorialCharItem@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLTutorialCharItem@@UAEFXZ PROC NEAR	; CTBLTutorialCharItem::BindColumns, COMDAT
; _this$ = ecx

; 3740 : BEGIN_COLUMN(12)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3741 : 	COLUMN_ENTRY(m_bCountry)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L134471
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 32 01 00
	00		 jne	 $L134467
$L134471:

; 3742 : 	COLUMN_ENTRY(m_bClass)

  00020	8d 8e 2d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3117]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L134472
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 13 01 00
	00		 jne	 $L134467
$L134472:

; 3743 : 	COLUMN_ENTRY(m_bSex)

  0003f	8d 96 2e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3118]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L134473
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 f4 00 00
	00		 jne	 $L134467
$L134473:

; 3744 : 	COLUMN_ENTRY(m_wPrmWeapon)

  0005e	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L134474
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 d5 00 00
	00		 jne	 $L134467
$L134474:

; 3745 : 	COLUMN_ENTRY(m_wSndWeapon)

  0007d	8d 8e 32 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3122]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L134475
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 b6 00 00
	00		 jne	 $L134467
$L134475:

; 3746 : 	COLUMN_ENTRY(m_wLongWeapon)

  0009c	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L134476
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 97 00 00
	00		 jne	 $L134467
$L134476:

; 3747 : 	COLUMN_ENTRY(m_wHead)

  000bb	8d 86 36 0c 00
	00		 lea	 eax, DWORD PTR [esi+3126]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 06		 je	 SHORT $L134477
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	75 7c		 jne	 SHORT $L134467
$L134477:

; 3748 : 	COLUMN_ENTRY(m_wBody)

  000d6	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  000dc	51		 push	 ecx
  000dd	6a 08		 push	 8
  000df	8b ce		 mov	 ecx, esi
  000e1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000e6	66 85 c0	 test	 ax, ax
  000e9	74 06		 je	 SHORT $L134478
  000eb	66 3d 01 00	 cmp	 ax, 1
  000ef	75 61		 jne	 SHORT $L134467
$L134478:

; 3749 : 	COLUMN_ENTRY(m_wPants)

  000f1	8d 96 3a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3130]
  000f7	52		 push	 edx
  000f8	6a 09		 push	 9
  000fa	8b ce		 mov	 ecx, esi
  000fc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00101	66 85 c0	 test	 ax, ax
  00104	74 06		 je	 SHORT $L134479
  00106	66 3d 01 00	 cmp	 ax, 1
  0010a	75 46		 jne	 SHORT $L134467
$L134479:

; 3750 : 	COLUMN_ENTRY(m_wHand)

  0010c	8d 86 3c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3132]
  00112	50		 push	 eax
  00113	6a 0a		 push	 10			; 0000000aH
  00115	8b ce		 mov	 ecx, esi
  00117	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0011c	66 85 c0	 test	 ax, ax
  0011f	74 06		 je	 SHORT $L134480
  00121	66 3d 01 00	 cmp	 ax, 1
  00125	75 2b		 jne	 SHORT $L134467
$L134480:

; 3751 : 	COLUMN_ENTRY(m_wFoot)

  00127	8d 8e 3e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3134]
  0012d	51		 push	 ecx
  0012e	6a 0b		 push	 11			; 0000000bH
  00130	8b ce		 mov	 ecx, esi
  00132	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00137	66 85 c0	 test	 ax, ax
  0013a	74 06		 je	 SHORT $L134481
  0013c	66 3d 01 00	 cmp	 ax, 1
  00140	75 10		 jne	 SHORT $L134467
$L134481:

; 3752 : 	COLUMN_ENTRY(m_wBack)

  00142	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  00148	52		 push	 edx
  00149	6a 0c		 push	 12			; 0000000cH
  0014b	8b ce		 mov	 ecx, esi
  0014d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
$L134467:
  00152	5e		 pop	 esi

; 3753 : END_COL()

  00153	c3		 ret	 0
?BindColumns@CTBLTutorialCharItem@@UAEFXZ ENDP		; CTBLTutorialCharItem::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLTutorialCharItem@@UAE@XZ			; CTBLTutorialCharItem::~CTBLTutorialCharItem
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLTutorialCharItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLTutorialCharItem@@UAEPAXI@Z PROC NEAR		; CTBLTutorialCharItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLTutorialCharItem@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L175092
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L175092:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLTutorialCharItem@@UAEPAXI@Z ENDP		; CTBLTutorialCharItem::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLTutorialCharItem@@UAE@XZ
_TEXT	SEGMENT
??1CTBLTutorialCharItem@@UAE@XZ PROC NEAR		; CTBLTutorialCharItem::~CTBLTutorialCharItem, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLTutorialCharItem@@UAE@XZ ENDP			; CTBLTutorialCharItem::~CTBLTutorialCharItem
_TEXT	ENDS
PUBLIC	??0CTBLHelpMessage@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLHelpMessage::CTBLHelpMessage
PUBLIC	?GetNumCol@CTBLHelpMessage@@UAEHXZ		; CTBLHelpMessage::GetNumCol
PUBLIC	?BindColumns@CTBLHelpMessage@@UAEFXZ		; CTBLHelpMessage::BindColumns
PUBLIC	??_7CTBLHelpMessage@@6B@			; CTBLHelpMessage::`vftable'
PUBLIC	??_GCTBLHelpMessage@@UAEPAXI@Z			; CTBLHelpMessage::`scalar deleting destructor'
PUBLIC	??_C@_0DL@IHJCHPMI@SELECT?5bID?0?5dStart?0?5dEnd?0?5szMess@ ; `string'
EXTRN	??_ECTBLHelpMessage@@UAEPAXI@Z:NEAR		; CTBLHelpMessage::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T175275 DD	0ffffffffH
	DD	FLAT:$L175101
$T175272 DD	019930520H
	DD	01H
	DD	FLAT:$T175275
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DL@IHJCHPMI@SELECT?5bID?0?5dStart?0?5dEnd?0?5szMess@
CONST	SEGMENT
??_C@_0DL@IHJCHPMI@SELECT?5bID?0?5dStart?0?5dEnd?0?5szMess@ DB 'SELECT bI'
	DB	'D, dStart, dEnd, szMessage FROM THELPMESSAGETABLE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLHelpMessage@@6B@
CONST	SEGMENT
??_7CTBLHelpMessage@@6B@ DD FLAT:??_ECTBLHelpMessage@@UAEPAXI@Z ; CTBLHelpMessage::`vftable'
	DD	FLAT:?GetNumCol@CTBLHelpMessage@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLHelpMessage@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLHelpMessage@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T175100 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLHelpMessage@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLHelpMessage::CTBLHelpMessage, COMDAT
; _this$ = ecx

; 3764 : DEF_QUERY(CTBLHelpMessage, _T("SELECT bID, dStart, dEnd, szMessage FROM THELPMESSAGETABLE"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLHelpMessage@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DL@IHJCHPMI@SELECT?5bID?0?5dStart?0?5dEnd?0?5szMess@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T175100[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLHelpMessage@@6B@
  0005e	72 0d		 jb	 SHORT $L175273
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L175273:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L175101:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLHelpMessage@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T175272
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLHelpMessage@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLHelpMessage::CTBLHelpMessage
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLHelpMessage@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLHelpMessage@@UAEHXZ PROC NEAR		; CTBLHelpMessage::GetNumCol, COMDAT
; _this$ = ecx

; 3766 : BEGIN_COLUMN(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumCol@CTBLHelpMessage@@UAEHXZ ENDP			; CTBLHelpMessage::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLHelpMessage@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLHelpMessage@@UAEFXZ PROC NEAR		; CTBLHelpMessage::BindColumns, COMDAT
; _this$ = ecx

; 3766 : BEGIN_COLUMN(4)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3767 : 	COLUMN_ENTRY(m_bID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L134526
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 4b		 jne	 SHORT $L134522
$L134526:

; 3768 : 	COLUMN_ENTRY(m_timeStart)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L134527
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 30		 jne	 SHORT $L134522
$L134527:

; 3769 : 	COLUMN_ENTRY(m_timeEnd)

  00037	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L134528
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 15		 jne	 SHORT $L134522
$L134528:

; 3770 : 	COLUMN_ENTRY_STR(m_szMessage)

  00052	68 01 08 00 00	 push	 2049			; 00000801H
  00057	8d 86 50 0c 00
	00		 lea	 eax, DWORD PTR [esi+3152]
  0005d	50		 push	 eax
  0005e	6a 04		 push	 4
  00060	8b ce		 mov	 ecx, esi
  00062	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
$L134522:
  00067	5e		 pop	 esi

; 3771 : END_COL()

  00068	c3		 ret	 0
?BindColumns@CTBLHelpMessage@@UAEFXZ ENDP		; CTBLHelpMessage::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLHelpMessage@@UAE@XZ			; CTBLHelpMessage::~CTBLHelpMessage
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLHelpMessage@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLHelpMessage@@UAEPAXI@Z PROC NEAR		; CTBLHelpMessage::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLHelpMessage@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L175287
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L175287:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLHelpMessage@@UAEPAXI@Z ENDP			; CTBLHelpMessage::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLHelpMessage@@UAE@XZ
_TEXT	SEGMENT
??1CTBLHelpMessage@@UAE@XZ PROC NEAR			; CTBLHelpMessage::~CTBLHelpMessage, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLHelpMessage@@UAE@XZ ENDP				; CTBLHelpMessage::~CTBLHelpMessage
_TEXT	ENDS
PUBLIC	??0CTBLMissionTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMissionTable::CTBLMissionTable
PUBLIC	?GetNumCol@CTBLMissionTable@@UAEHXZ		; CTBLMissionTable::GetNumCol
PUBLIC	?BindColumns@CTBLMissionTable@@UAEFXZ		; CTBLMissionTable::BindColumns
PUBLIC	??_7CTBLMissionTable@@6B@			; CTBLMissionTable::`vftable'
PUBLIC	??_GCTBLMissionTable@@UAEPAXI@Z			; CTBLMissionTable::`scalar deleting destructor'
PUBLIC	??_C@_0DC@MFHGBGIK@SELECT?5?7wMissionID?0?5?7bCountry?5?7F@ ; `string'
EXTRN	??_ECTBLMissionTable@@UAEPAXI@Z:NEAR		; CTBLMissionTable::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T175470 DD	0ffffffffH
	DD	FLAT:$L175296
$T175467 DD	019930520H
	DD	01H
	DD	FLAT:$T175470
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DC@MFHGBGIK@SELECT?5?7wMissionID?0?5?7bCountry?5?7F@
CONST	SEGMENT
??_C@_0DC@MFHGBGIK@SELECT?5?7wMissionID?0?5?7bCountry?5?7F@ DB 'SELECT ', 09H
	DB	'wMissionID, ', 09H, 'bCountry ', 09H, 'FROM TMISSIONTABLE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLMissionTable@@6B@
CONST	SEGMENT
??_7CTBLMissionTable@@6B@ DD FLAT:??_ECTBLMissionTable@@UAEPAXI@Z ; CTBLMissionTable::`vftable'
	DD	FLAT:?GetNumCol@CTBLMissionTable@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLMissionTable@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLMissionTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T175295 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLMissionTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLMissionTable::CTBLMissionTable, COMDAT
; _this$ = ecx

; 3783 : 	FROM TMISSIONTABLE"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLMissionTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DC@MFHGBGIK@SELECT?5?7wMissionID?0?5?7bCountry?5?7F@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T175295[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLMissionTable@@6B@
  0005e	72 0d		 jb	 SHORT $L175468
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L175468:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L175296:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLMissionTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T175467
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLMissionTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLMissionTable::CTBLMissionTable
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLMissionTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLMissionTable@@UAEHXZ PROC NEAR		; CTBLMissionTable::GetNumCol, COMDAT
; _this$ = ecx

; 3785 : BEGIN_COLUMN(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumCol@CTBLMissionTable@@UAEHXZ ENDP		; CTBLMissionTable::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMissionTable@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLMissionTable@@UAEFXZ PROC NEAR		; CTBLMissionTable::BindColumns, COMDAT
; _this$ = ecx

; 3785 : BEGIN_COLUMN(2)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3786 : 	COLUMN_ENTRY(m_wMissionID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L134571
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 10		 jne	 SHORT $L134567
$L134571:

; 3787 : 	COLUMN_ENTRY(m_bCountry)

  0001c	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L134567:
  0002c	5e		 pop	 esi

; 3788 : END_COL()

  0002d	c3		 ret	 0
?BindColumns@CTBLMissionTable@@UAEFXZ ENDP		; CTBLMissionTable::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLMissionTable@@UAE@XZ			; CTBLMissionTable::~CTBLMissionTable
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLMissionTable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLMissionTable@@UAEPAXI@Z PROC NEAR		; CTBLMissionTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLMissionTable@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L175482
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L175482:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLMissionTable@@UAEPAXI@Z ENDP			; CTBLMissionTable::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLMissionTable@@UAE@XZ
_TEXT	SEGMENT
??1CTBLMissionTable@@UAE@XZ PROC NEAR			; CTBLMissionTable::~CTBLMissionTable, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLMissionTable@@UAE@XZ ENDP			; CTBLMissionTable::~CTBLMissionTable
_TEXT	ENDS
PUBLIC	??0CTBLRPSGame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLRPSGame::CTBLRPSGame
PUBLIC	?GetNumCol@CTBLRPSGame@@UAEHXZ			; CTBLRPSGame::GetNumCol
PUBLIC	?BindColumns@CTBLRPSGame@@UAEFXZ		; CTBLRPSGame::BindColumns
PUBLIC	??_7CTBLRPSGame@@6B@				; CTBLRPSGame::`vftable'
PUBLIC	??_GCTBLRPSGame@@UAEPAXI@Z			; CTBLRPSGame::`scalar deleting destructor'
PUBLIC	??_C@_0ME@JILIGHLK@SELECT?5?7bType?0?5?7bWinCount?0?5?7wIte@ ; `string'
EXTRN	??_ECTBLRPSGame@@UAEPAXI@Z:NEAR			; CTBLRPSGame::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T175665 DD	0ffffffffH
	DD	FLAT:$L175491
$T175662 DD	019930520H
	DD	01H
	DD	FLAT:$T175665
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0ME@JILIGHLK@SELECT?5?7bType?0?5?7bWinCount?0?5?7wIte@
CONST	SEGMENT
??_C@_0ME@JILIGHLK@SELECT?5?7bType?0?5?7bWinCount?0?5?7wIte@ DB 'SELECT ', 09H
	DB	'bType, ', 09H, 'bWinCount, ', 09H, 'wItemID, ', 09H, 'dwRewar'
	DB	'dMoney, ', 09H, 'wRewardItem_1, ', 09H, 'wRewardItem_2, ', 09H
	DB	'bItemCount_1, ', 09H, 'bItemCount_2, ', 09H, 'bProb_Win, ', 09H
	DB	'bProb_Draw, ', 09H, 'bProb_Lose, ', 09H, 'wWinKeep, ', 09H, 'w'
	DB	'WinPeriod ', 09H, 'FROM TRPSGAMECHART', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLRPSGame@@6B@
CONST	SEGMENT
??_7CTBLRPSGame@@6B@ DD FLAT:??_ECTBLRPSGame@@UAEPAXI@Z	; CTBLRPSGame::`vftable'
	DD	FLAT:?GetNumCol@CTBLRPSGame@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLRPSGame@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLRPSGame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T175490 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLRPSGame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLRPSGame::CTBLRPSGame, COMDAT
; _this$ = ecx

; 3818 : 	FROM TRPSGAMECHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLRPSGame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0ME@JILIGHLK@SELECT?5?7bType?0?5?7bWinCount?0?5?7wIte@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T175490[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLRPSGame@@6B@
  0005e	72 0d		 jb	 SHORT $L175663
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L175663:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L175491:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLRPSGame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T175662
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLRPSGame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLRPSGame::CTBLRPSGame
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLRPSGame@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLRPSGame@@UAEHXZ PROC NEAR		; CTBLRPSGame::GetNumCol, COMDAT
; _this$ = ecx

; 3820 : BEGIN_COLUMN(13)

  00000	b8 0d 00 00 00	 mov	 eax, 13			; 0000000dH
  00005	c3		 ret	 0
?GetNumCol@CTBLRPSGame@@UAEHXZ ENDP			; CTBLRPSGame::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLRPSGame@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLRPSGame@@UAEFXZ PROC NEAR		; CTBLRPSGame::BindColumns, COMDAT
; _this$ = ecx

; 3820 : BEGIN_COLUMN(13)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3821 : 	COLUMN_ENTRY(m_bType)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L134621
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 51 01 00
	00		 jne	 $L134617
$L134621:

; 3822 : 	COLUMN_ENTRY(m_bWinCount)

  00020	8d 8e 2d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3117]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L134622
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 32 01 00
	00		 jne	 $L134617
$L134622:

; 3823 : 	COLUMN_ENTRY(m_wItemID)

  0003f	8d 96 2e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3118]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L134623
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 13 01 00
	00		 jne	 $L134617
$L134623:

; 3824 : 	COLUMN_ENTRY(m_dwRewardMoney)

  0005e	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L134624
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 f4 00 00
	00		 jne	 $L134617
$L134624:

; 3825 : 	COLUMN_ENTRY(m_wRewardItem[0])

  0007d	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L134625
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 d5 00 00
	00		 jne	 $L134617
$L134625:

; 3826 : 	COLUMN_ENTRY(m_wRewardItem[1])

  0009c	8d 96 36 0c 00
	00		 lea	 edx, DWORD PTR [esi+3126]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L134626
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 b6 00 00
	00		 jne	 $L134617
$L134626:

; 3827 : 	COLUMN_ENTRY(m_bItemCount[0])

  000bb	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 0a		 je	 SHORT $L134627
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	0f 85 97 00 00
	00		 jne	 $L134617
$L134627:

; 3828 : 	COLUMN_ENTRY(m_bItemCount[1])

  000da	8d 8e 39 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3129]
  000e0	51		 push	 ecx
  000e1	6a 08		 push	 8
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ea	66 85 c0	 test	 ax, ax
  000ed	74 06		 je	 SHORT $L134628
  000ef	66 3d 01 00	 cmp	 ax, 1
  000f3	75 7c		 jne	 SHORT $L134617
$L134628:

; 3829 : 	COLUMN_ENTRY(m_bProb[0])

  000f5	8d 96 3a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3130]
  000fb	52		 push	 edx
  000fc	6a 09		 push	 9
  000fe	8b ce		 mov	 ecx, esi
  00100	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00105	66 85 c0	 test	 ax, ax
  00108	74 06		 je	 SHORT $L134629
  0010a	66 3d 01 00	 cmp	 ax, 1
  0010e	75 61		 jne	 SHORT $L134617
$L134629:

; 3830 : 	COLUMN_ENTRY(m_bProb[1])

  00110	8d 86 3b 0c 00
	00		 lea	 eax, DWORD PTR [esi+3131]
  00116	50		 push	 eax
  00117	6a 0a		 push	 10			; 0000000aH
  00119	8b ce		 mov	 ecx, esi
  0011b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00120	66 85 c0	 test	 ax, ax
  00123	74 06		 je	 SHORT $L134630
  00125	66 3d 01 00	 cmp	 ax, 1
  00129	75 46		 jne	 SHORT $L134617
$L134630:

; 3831 : 	COLUMN_ENTRY(m_bProb[2])

  0012b	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  00131	51		 push	 ecx
  00132	6a 0b		 push	 11			; 0000000bH
  00134	8b ce		 mov	 ecx, esi
  00136	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0013b	66 85 c0	 test	 ax, ax
  0013e	74 06		 je	 SHORT $L134631
  00140	66 3d 01 00	 cmp	 ax, 1
  00144	75 2b		 jne	 SHORT $L134617
$L134631:

; 3832 : 	COLUMN_ENTRY(m_wWinKeep)

  00146	8d 96 3e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3134]
  0014c	52		 push	 edx
  0014d	6a 0c		 push	 12			; 0000000cH
  0014f	8b ce		 mov	 ecx, esi
  00151	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00156	66 85 c0	 test	 ax, ax
  00159	74 06		 je	 SHORT $L134632
  0015b	66 3d 01 00	 cmp	 ax, 1
  0015f	75 10		 jne	 SHORT $L134617
$L134632:

; 3833 : 	COLUMN_ENTRY(m_wWinPeriod)

  00161	8d 86 40 0c 00
	00		 lea	 eax, DWORD PTR [esi+3136]
  00167	50		 push	 eax
  00168	6a 0d		 push	 13			; 0000000dH
  0016a	8b ce		 mov	 ecx, esi
  0016c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
$L134617:
  00171	5e		 pop	 esi

; 3834 : END_COL()

  00172	c3		 ret	 0
?BindColumns@CTBLRPSGame@@UAEFXZ ENDP			; CTBLRPSGame::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLRPSGame@@UAE@XZ				; CTBLRPSGame::~CTBLRPSGame
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLRPSGame@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLRPSGame@@UAEPAXI@Z PROC NEAR			; CTBLRPSGame::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLRPSGame@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L175677
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L175677:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLRPSGame@@UAEPAXI@Z ENDP				; CTBLRPSGame::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLRPSGame@@UAE@XZ
_TEXT	SEGMENT
??1CTBLRPSGame@@UAE@XZ PROC NEAR			; CTBLRPSGame::~CTBLRPSGame, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLRPSGame@@UAE@XZ ENDP				; CTBLRPSGame::~CTBLRPSGame
_TEXT	ENDS
PUBLIC	??0CTBLArena@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLArena::CTBLArena
PUBLIC	?GetNumCol@CTBLArena@@UAEHXZ			; CTBLArena::GetNumCol
PUBLIC	?BindColumns@CTBLArena@@UAEFXZ			; CTBLArena::BindColumns
PUBLIC	??_7CTBLArena@@6B@				; CTBLArena::`vftable'
PUBLIC	??_GCTBLArena@@UAEPAXI@Z			; CTBLArena::`scalar deleting destructor'
PUBLIC	??_C@_0DL@LNPPHAAN@SELECT?5wID?0?5bType?0?5wInPos?0?5wOutP@ ; `string'
EXTRN	??_ECTBLArena@@UAEPAXI@Z:NEAR			; CTBLArena::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T175860 DD	0ffffffffH
	DD	FLAT:$L175686
$T175857 DD	019930520H
	DD	01H
	DD	FLAT:$T175860
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DL@LNPPHAAN@SELECT?5wID?0?5bType?0?5wInPos?0?5wOutP@
CONST	SEGMENT
??_C@_0DL@LNPPHAAN@SELECT?5wID?0?5bType?0?5wInPos?0?5wOutP@ DB 'SELECT wI'
	DB	'D, bType, wInPos, wOutPos, dwFee FROM TARENACHART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLArena@@6B@
CONST	SEGMENT
??_7CTBLArena@@6B@ DD FLAT:??_ECTBLArena@@UAEPAXI@Z	; CTBLArena::`vftable'
	DD	FLAT:?GetNumCol@CTBLArena@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLArena@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLArena@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T175685 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLArena@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLArena::CTBLArena, COMDAT
; _this$ = ecx

; 3846 : DEF_QUERY(CTBLArena, _T("SELECT wID, bType, wInPos, wOutPos, dwFee FROM TARENACHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLArena@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DL@LNPPHAAN@SELECT?5wID?0?5bType?0?5wInPos?0?5wOutP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T175685[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLArena@@6B@
  0005e	72 0d		 jb	 SHORT $L175858
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L175858:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L175686:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLArena@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T175857
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLArena@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLArena::CTBLArena
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLArena@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLArena@@UAEHXZ PROC NEAR			; CTBLArena::GetNumCol, COMDAT
; _this$ = ecx

; 3848 : BEGIN_COLUMN(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumCol@CTBLArena@@UAEHXZ ENDP			; CTBLArena::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLArena@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLArena@@UAEFXZ PROC NEAR		; CTBLArena::BindColumns, COMDAT
; _this$ = ecx

; 3848 : BEGIN_COLUMN(5)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3849 : 	COLUMN_ENTRY(m_wID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L134678
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 61		 jne	 SHORT $L134674
$L134678:

; 3850 : 	COLUMN_ENTRY(m_bType)

  0001c	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L134679
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 46		 jne	 SHORT $L134674
$L134679:

; 3851 : 	COLUMN_ENTRY(m_wInPos)

  00037	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L134680
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 2b		 jne	 SHORT $L134674
$L134680:

; 3852 : 	COLUMN_ENTRY(m_wOutPos)

  00052	8d 86 32 0c 00
	00		 lea	 eax, DWORD PTR [esi+3122]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00062	66 85 c0	 test	 ax, ax
  00065	74 06		 je	 SHORT $L134681
  00067	66 3d 01 00	 cmp	 ax, 1
  0006b	75 10		 jne	 SHORT $L134674
$L134681:

; 3853 : 	COLUMN_ENTRY(m_dwFee)

  0006d	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00073	51		 push	 ecx
  00074	6a 05		 push	 5
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L134674:
  0007d	5e		 pop	 esi

; 3854 : END_COL()

  0007e	c3		 ret	 0
?BindColumns@CTBLArena@@UAEFXZ ENDP			; CTBLArena::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLArena@@UAE@XZ				; CTBLArena::~CTBLArena
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLArena@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLArena@@UAEPAXI@Z PROC NEAR			; CTBLArena::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLArena@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L175872
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L175872:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLArena@@UAEPAXI@Z ENDP				; CTBLArena::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLArena@@UAE@XZ
_TEXT	SEGMENT
??1CTBLArena@@UAE@XZ PROC NEAR				; CTBLArena::~CTBLArena, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLArena@@UAE@XZ ENDP				; CTBLArena::~CTBLArena
_TEXT	ENDS
PUBLIC	??0CTBLAidTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLAidTable::CTBLAidTable
PUBLIC	?GetNumCol@CTBLAidTable@@UAEHXZ			; CTBLAidTable::GetNumCol
PUBLIC	?BindColumns@CTBLAidTable@@UAEFXZ		; CTBLAidTable::BindColumns
PUBLIC	?GetNumParam@CTBLAidTable@@UAEHXZ		; CTBLAidTable::GetNumParam
PUBLIC	?BindParameters@CTBLAidTable@@UAEFH@Z		; CTBLAidTable::BindParameters
PUBLIC	??_7CTBLAidTable@@6B@				; CTBLAidTable::`vftable'
PUBLIC	??_GCTBLAidTable@@UAEPAXI@Z			; CTBLAidTable::`scalar deleting destructor'
PUBLIC	??_C@_0DM@MDICDKJM@SELECT?5?7bCountry?0?5?7dDate?5?7FROM?5T@ ; `string'
EXTRN	??_ECTBLAidTable@@UAEPAXI@Z:NEAR		; CTBLAidTable::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T176055 DD	0ffffffffH
	DD	FLAT:$L175881
$T176052 DD	019930520H
	DD	01H
	DD	FLAT:$T176055
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DM@MDICDKJM@SELECT?5?7bCountry?0?5?7dDate?5?7FROM?5T@
CONST	SEGMENT
??_C@_0DM@MDICDKJM@SELECT?5?7bCountry?0?5?7dDate?5?7FROM?5T@ DB 'SELECT ', 09H
	DB	'bCountry, ', 09H, 'dDate ', 09H, 'FROM TAIDTABLE WHERE dwChar'
	DB	'ID = ?', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLAidTable@@6B@
CONST	SEGMENT
??_7CTBLAidTable@@6B@ DD FLAT:??_ECTBLAidTable@@UAEPAXI@Z ; CTBLAidTable::`vftable'
	DD	FLAT:?GetNumCol@CTBLAidTable@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLAidTable@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLAidTable@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLAidTable@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLAidTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T175880 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLAidTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLAidTable::CTBLAidTable, COMDAT
; _this$ = ecx

; 3867 : 	FROM TAIDTABLE WHERE dwCharID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLAidTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DM@MDICDKJM@SELECT?5?7bCountry?0?5?7dDate?5?7FROM?5T@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T175880[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLAidTable@@6B@
  0005e	72 0d		 jb	 SHORT $L176053
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L176053:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L175881:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLAidTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T176052
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLAidTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLAidTable::CTBLAidTable
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLAidTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLAidTable@@UAEHXZ PROC NEAR		; CTBLAidTable::GetNumCol, COMDAT
; _this$ = ecx

; 3869 : BEGIN_COLUMN(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumCol@CTBLAidTable@@UAEHXZ ENDP			; CTBLAidTable::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLAidTable@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLAidTable@@UAEFXZ PROC NEAR		; CTBLAidTable::BindColumns, COMDAT
; _this$ = ecx

; 3869 : BEGIN_COLUMN(2)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 3870 : 	COLUMN_ENTRY(m_bCountry)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L134728
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 10		 jne	 SHORT $L134724
$L134728:

; 3871 : 	COLUMN_ENTRY(m_dDate)

  0001c	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
$L134724:
  0002c	5e		 pop	 esi

; 3872 : END_COL()

  0002d	c3		 ret	 0
?BindColumns@CTBLAidTable@@UAEFXZ ENDP			; CTBLAidTable::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLAidTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLAidTable@@UAEHXZ PROC NEAR		; CTBLAidTable::GetNumParam, COMDAT
; _this$ = ecx

; 3874 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLAidTable@@UAEHXZ ENDP			; CTBLAidTable::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLAidTable@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLAidTable@@UAEFH@Z PROC NEAR		; CTBLAidTable::BindParameters, COMDAT
; _this$ = ecx

; 3875 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L134734
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134734:

; 3876 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLAidTable@@UAEFH@Z ENDP		; CTBLAidTable::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLAidTable@@UAE@XZ				; CTBLAidTable::~CTBLAidTable
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLAidTable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLAidTable@@UAEPAXI@Z PROC NEAR			; CTBLAidTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLAidTable@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L176073
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L176073:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLAidTable@@UAEPAXI@Z ENDP			; CTBLAidTable::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLAidTable@@UAE@XZ
_TEXT	SEGMENT
??1CTBLAidTable@@UAE@XZ PROC NEAR			; CTBLAidTable::~CTBLAidTable, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLAidTable@@UAE@XZ ENDP				; CTBLAidTable::~CTBLAidTable
_TEXT	ENDS
PUBLIC	??0CSPCashItemBuy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPCashItemBuy::CSPCashItemBuy
PUBLIC	?GetNumParam@CSPCashItemBuy@@UAEHXZ		; CSPCashItemBuy::GetNumParam
PUBLIC	?BindParameters@CSPCashItemBuy@@UAEFH@Z		; CSPCashItemBuy::BindParameters
PUBLIC	??_7CSPCashItemBuy@@6B@				; CSPCashItemBuy::`vftable'
PUBLIC	??_GCSPCashItemBuy@@UAEPAXI@Z			; CSPCashItemBuy::`scalar deleting destructor'
PUBLIC	??_C@_0CN@MGFKPHMM@?$HL?$DP?5?$DN?5CALL?5TCashItemBuy?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	?GetNumCol@CSqlBase@@UAEHXZ:NEAR		; CSqlBase::GetNumCol
EXTRN	?BindColumns@CSqlQuery@@UAEFXZ:NEAR		; CSqlQuery::BindColumns
EXTRN	??_ECSPCashItemBuy@@UAEPAXI@Z:NEAR		; CSPCashItemBuy::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T176256 DD	0ffffffffH
	DD	FLAT:$L176082
$T176253 DD	019930520H
	DD	01H
	DD	FLAT:$T176256
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CN@MGFKPHMM@?$HL?$DP?5?$DN?5CALL?5TCashItemBuy?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CN@MGFKPHMM@?$HL?$DP?5?$DN?5CALL?5TCashItemBuy?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	'? = CALL TCashItemBuy(?,?,?,?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPCashItemBuy@@6B@
CONST	SEGMENT
??_7CSPCashItemBuy@@6B@ DD FLAT:??_ECSPCashItemBuy@@UAEPAXI@Z ; CSPCashItemBuy::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPCashItemBuy@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPCashItemBuy@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPCashItemBuy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T176081 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPCashItemBuy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPCashItemBuy::CSPCashItemBuy, COMDAT
; _this$ = ecx

; 3896 : DEF_QUERY(CSPCashItemBuy, _T("{? = CALL TCashItemBuy(?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPCashItemBuy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CN@MGFKPHMM@?$HL?$DP?5?$DN?5CALL?5TCashItemBuy?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T176081[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPCashItemBuy@@6B@
  0005e	72 0d		 jb	 SHORT $L176254
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L176254:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L176082:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPCashItemBuy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T176253
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPCashItemBuy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPCashItemBuy::CSPCashItemBuy
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPCashItemBuy@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPCashItemBuy@@UAEHXZ PROC NEAR		; CSPCashItemBuy::GetNumParam, COMDAT
; _this$ = ecx

; 3898 : BEGIN_PARAM(11)

  00000	b8 0b 00 00 00	 mov	 eax, 11			; 0000000bH
  00005	c3		 ret	 0
?GetNumParam@CSPCashItemBuy@@UAEHXZ ENDP		; CSPCashItemBuy::GetNumParam
_TEXT	ENDS
EXTRN	?BindParam@CSqlBase@@QAEFFFPAH@Z:NEAR		; CSqlBase::BindParam
EXTRN	?BindParam@CSqlBase@@QAEFFFPA_J@Z:NEAR		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParameters@CSPCashItemBuy@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPCashItemBuy@@UAEFH@Z PROC NEAR	; CSPCashItemBuy::BindParameters, COMDAT
; _this$ = ecx

; 3898 : BEGIN_PARAM(11)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 3899 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L176265
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L176265
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 9f 01 00
	00		 jne	 $L134787
$L176265:

; 3900 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_dwCash)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L176267
  00040	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 04		 push	 4
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L176267:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L176268
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 74 01 00
	00		 jne	 $L134787
$L176268:

; 3901 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_dwCashBonus)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L176273
  0006b	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 04		 push	 4
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L176273:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L176274
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 49 01 00
	00		 jne	 $L134787
$L176274:

; 3902 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_dlID)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L176275
  00096	8d 86 48 0c 00
	00		 lea	 eax, DWORD PTR [esi+3144]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 04		 push	 4
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
$L176275:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 0a		 je	 SHORT $L176276
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 1e 01 00
	00		 jne	 $L134787
$L176276:

; 3903 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_dwTargetID)

  000b7	3b fb		 cmp	 edi, ebx
  000b9	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bf	75 12		 jne	 SHORT $L134799
  000c1	8d 8e 84 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3204]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 04		 push	 4
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134799:
  000d3	66 3b c3	 cmp	 ax, bx
  000d6	74 0a		 je	 SHORT $L134800
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 f3 00 00
	00		 jne	 $L134787
$L134800:

; 3904 : 	PARAM_ENTRY_STR( SQL_PARAM_OUTPUT, m_szPresent)

  000e2	3b fb		 cmp	 edi, ebx
  000e4	c7 86 24 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2084], -3 ; fffffffdH
  000ee	75 14		 jne	 SHORT $L134801
  000f0	6a 33		 push	 51			; 00000033H
  000f2	8d 96 88 0c 00
	00		 lea	 edx, DWORD PTR [esi+3208]
  000f8	52		 push	 edx
  000f9	6a 06		 push	 6
  000fb	6a 04		 push	 4
  000fd	8b ce		 mov	 ecx, esi
  000ff	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L134801:
  00104	66 3b c3	 cmp	 ax, bx
  00107	74 0a		 je	 SHORT $L176266
  00109	66 3d 01 00	 cmp	 ax, 1
  0010d	0f 85 c2 00 00
	00		 jne	 $L134787
$L176266:

; 3905 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwUserID)

  00113	3b fb		 cmp	 edi, ebx
  00115	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  0011b	75 12		 jne	 SHORT $L134803
  0011d	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00123	50		 push	 eax
  00124	6a 07		 push	 7
  00126	6a 01		 push	 1
  00128	8b ce		 mov	 ecx, esi
  0012a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134803:
  0012f	66 3b c3	 cmp	 ax, bx
  00132	74 0a		 je	 SHORT $L176269
  00134	66 3d 01 00	 cmp	 ax, 1
  00138	0f 85 97 00 00
	00		 jne	 $L134787
$L176269:

; 3906 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  0013e	3b fb		 cmp	 edi, ebx
  00140	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  00146	75 12		 jne	 SHORT $L134805
  00148	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  0014e	51		 push	 ecx
  0014f	6a 08		 push	 8
  00151	6a 01		 push	 1
  00153	8b ce		 mov	 ecx, esi
  00155	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134805:
  0015a	66 3b c3	 cmp	 ax, bx
  0015d	74 06		 je	 SHORT $L176270
  0015f	66 3d 01 00	 cmp	 ax, 1
  00163	75 70		 jne	 SHORT $L134787
$L176270:

; 3907 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wCashItemID)

  00165	3b fb		 cmp	 edi, ebx
  00167	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  0016d	75 12		 jne	 SHORT $L134807
  0016f	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  00175	52		 push	 edx
  00176	6a 09		 push	 9
  00178	6a 01		 push	 1
  0017a	8b ce		 mov	 ecx, esi
  0017c	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L134807:
  00181	66 3b c3	 cmp	 ax, bx
  00184	74 06		 je	 SHORT $L176271
  00186	66 3d 01 00	 cmp	 ax, 1
  0018a	75 49		 jne	 SHORT $L134787
$L176271:

; 3908 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bBuyType)

  0018c	3b fb		 cmp	 edi, ebx
  0018e	89 9e 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebx
  00194	75 12		 jne	 SHORT $L134809
  00196	8d 86 50 0c 00
	00		 lea	 eax, DWORD PTR [esi+3152]
  0019c	50		 push	 eax
  0019d	6a 0a		 push	 10			; 0000000aH
  0019f	6a 01		 push	 1
  001a1	8b ce		 mov	 ecx, esi
  001a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L134809:
  001a8	66 3b c3	 cmp	 ax, bx
  001ab	74 06		 je	 SHORT $L176272
  001ad	66 3d 01 00	 cmp	 ax, 1
  001b1	75 22		 jne	 SHORT $L134787
$L176272:

; 3909 : 	PARAM_ENTRY_STR( SQL_PARAM_INPUT, m_szTarget)

  001b3	3b fb		 cmp	 edi, ebx
  001b5	c7 86 38 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2104], -3 ; fffffffdH
  001bf	75 14		 jne	 SHORT $L134787
  001c1	6a 33		 push	 51			; 00000033H
  001c3	8d 8e 51 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3153]
  001c9	51		 push	 ecx
  001ca	6a 0b		 push	 11			; 0000000bH
  001cc	6a 01		 push	 1
  001ce	8b ce		 mov	 ecx, esi
  001d0	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L134787:
  001d5	5f		 pop	 edi
  001d6	5e		 pop	 esi
  001d7	5b		 pop	 ebx

; 3910 : END_PARAM()

  001d8	c2 04 00	 ret	 4
?BindParameters@CSPCashItemBuy@@UAEFH@Z ENDP		; CSPCashItemBuy::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPCashItemBuy@@UAE@XZ			; CSPCashItemBuy::~CSPCashItemBuy
; Function compile flags: /Ogty
;	COMDAT ??_GCSPCashItemBuy@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPCashItemBuy@@UAEPAXI@Z PROC NEAR			; CSPCashItemBuy::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPCashItemBuy@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L176280
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L176280:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPCashItemBuy@@UAEPAXI@Z ENDP			; CSPCashItemBuy::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPCashItemBuy@@UAE@XZ
_TEXT	SEGMENT
??1CSPCashItemBuy@@UAE@XZ PROC NEAR			; CSPCashItemBuy::~CSPCashItemBuy, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPCashItemBuy@@UAE@XZ ENDP				; CSPCashItemBuy::~CSPCashItemBuy
_TEXT	ENDS
PUBLIC	??0CSPGetCash@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetCash::CSPGetCash
PUBLIC	?GetNumParam@CSPGetCash@@UAEHXZ			; CSPGetCash::GetNumParam
PUBLIC	?BindParameters@CSPGetCash@@UAEFH@Z		; CSPGetCash::BindParameters
PUBLIC	??_7CSPGetCash@@6B@				; CSPGetCash::`vftable'
PUBLIC	??_GCSPGetCash@@UAEPAXI@Z			; CSPGetCash::`scalar deleting destructor'
PUBLIC	??_C@_0BH@HHNDKFPN@?$HLCALL?5TCashGet?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPGetCash@@UAEPAXI@Z:NEAR			; CSPGetCash::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T176463 DD	0ffffffffH
	DD	FLAT:$L176289
$T176460 DD	019930520H
	DD	01H
	DD	FLAT:$T176463
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BH@HHNDKFPN@?$HLCALL?5TCashGet?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BH@HHNDKFPN@?$HLCALL?5TCashGet?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL TCashGet(?,?,?)}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CSPGetCash@@6B@
CONST	SEGMENT
??_7CSPGetCash@@6B@ DD FLAT:??_ECSPGetCash@@UAEPAXI@Z	; CSPGetCash::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGetCash@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGetCash@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGetCash@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T176288 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGetCash@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGetCash::CSPGetCash, COMDAT
; _this$ = ecx

; 3920 : DEF_QUERY(CSPGetCash, _T("{CALL TCashGet(?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGetCash@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@HHNDKFPN@?$HLCALL?5TCashGet?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T176288[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGetCash@@6B@
  0005e	72 0d		 jb	 SHORT $L176461
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L176461:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L176289:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGetCash@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T176460
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGetCash@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGetCash::CSPGetCash
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGetCash@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGetCash@@UAEHXZ PROC NEAR		; CSPGetCash::GetNumParam, COMDAT
; _this$ = ecx

; 3922 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPGetCash@@UAEHXZ ENDP			; CSPGetCash::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetCash@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGetCash@@UAEFH@Z PROC NEAR		; CSPGetCash::BindParameters, COMDAT
; _this$ = ecx

; 3922 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 3923 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwUserID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L134857
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L134857
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L134852
$L134857:

; 3924 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_dwCash)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L134858
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 04		 push	 4
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134858:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L134859
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L134852
$L134859:

; 3925 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_dwCashBonus)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L134852
  00068	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 04		 push	 4
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134852:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 3926 : END_PARAM()

  0007c	c2 04 00	 ret	 4
?BindParameters@CSPGetCash@@UAEFH@Z ENDP		; CSPGetCash::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGetCash@@UAE@XZ				; CSPGetCash::~CSPGetCash
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGetCash@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGetCash@@UAEPAXI@Z PROC NEAR			; CSPGetCash::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGetCash@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L176475
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L176475:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGetCash@@UAEPAXI@Z ENDP				; CSPGetCash::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGetCash@@UAE@XZ
_TEXT	SEGMENT
??1CSPGetCash@@UAE@XZ PROC NEAR				; CSPGetCash::~CSPGetCash, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGetCash@@UAE@XZ ENDP				; CSPGetCash::~CSPGetCash
_TEXT	ENDS
PUBLIC	??0CSPCashItemGet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPCashItemGet::CSPCashItemGet
PUBLIC	?GetNumParam@CSPCashItemGet@@UAEHXZ		; CSPCashItemGet::GetNumParam
PUBLIC	?BindParameters@CSPCashItemGet@@UAEFH@Z		; CSPCashItemGet::BindParameters
PUBLIC	??_7CSPCashItemGet@@6B@				; CSPCashItemGet::`vftable'
PUBLIC	??_GCSPCashItemGet@@UAEPAXI@Z			; CSPCashItemGet::`scalar deleting destructor'
PUBLIC	??_C@_0FL@LKOBIECC@?$HL?$DP?5?$DN?5CALL?5TCashItemGet?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPCashItemGet@@UAEPAXI@Z:NEAR		; CSPCashItemGet::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T176658 DD	0ffffffffH
	DD	FLAT:$L176484
$T176655 DD	019930520H
	DD	01H
	DD	FLAT:$T176658
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FL@LKOBIECC@?$HL?$DP?5?$DN?5CALL?5TCashItemGet?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0FL@LKOBIECC@?$HL?$DP?5?$DN?5CALL?5TCashItemGet?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	'? = CALL TCashItemGet(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?'
	DB	',?,?,?,?,?,?,?,?,?,?,?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPCashItemGet@@6B@
CONST	SEGMENT
??_7CSPCashItemGet@@6B@ DD FLAT:??_ECSPCashItemGet@@UAEPAXI@Z ; CSPCashItemGet::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPCashItemGet@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPCashItemGet@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPCashItemGet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T176483 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPCashItemGet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPCashItemGet::CSPCashItemGet, COMDAT
; _this$ = ecx

; 3940 : DEF_QUERY(CSPCashItemGet, _T("{? = CALL TCashItemGet(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPCashItemGet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FL@LKOBIECC@?$HL?$DP?5?$DN?5CALL?5TCashItemGet?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T176483[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPCashItemGet@@6B@
  0005e	72 0d		 jb	 SHORT $L176656
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L176656:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L176484:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPCashItemGet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T176655
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPCashItemGet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPCashItemGet::CSPCashItemGet
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPCashItemGet@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPCashItemGet@@UAEHXZ PROC NEAR		; CSPCashItemGet::GetNumParam, COMDAT
; _this$ = ecx

; 3942 : BEGIN_PARAM(34)

  00000	b8 22 00 00 00	 mov	 eax, 34			; 00000022H
  00005	c3		 ret	 0
?GetNumParam@CSPCashItemGet@@UAEHXZ ENDP		; CSPCashItemGet::GetNumParam
_TEXT	ENDS
EXTRN	?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z:NEAR ; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParameters@CSPCashItemGet@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPCashItemGet@@UAEFH@Z PROC NEAR	; CSPCashItemGet::BindParameters, COMDAT
; _this$ = ecx

; 3942 : BEGIN_PARAM(34)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 3943 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L134910
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L134910
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 70 05 00
	00		 jne	 $L134905
$L134910:

; 3944 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dlID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L134911
  00040	8d 8e 40 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3136]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 04		 push	 4
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
$L134911:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L134912
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 45 05 00
	00		 jne	 $L134905
$L134912:

; 3945 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_wItemID)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L134913
  0006b	8d 96 4a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3146]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 04		 push	 4
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L134913:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L134914
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 1a 05 00
	00		 jne	 $L134905
$L134914:

; 3946 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bLevel)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L134915
  00096	8d 86 4c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3148]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 04		 push	 4
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L134915:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 0a		 je	 SHORT $L134916
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 ef 04 00
	00		 jne	 $L134905
$L134916:

; 3947 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bCount)

  000b7	3b fb		 cmp	 edi, ebx
  000b9	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bf	75 12		 jne	 SHORT $L134917
  000c1	8d 8e 4d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3149]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 04		 push	 4
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L134917:
  000d3	66 3b c3	 cmp	 ax, bx
  000d6	74 0a		 je	 SHORT $L134918
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 c4 04 00
	00		 jne	 $L134905
$L134918:

; 3948 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bGLevel)

  000e2	3b fb		 cmp	 edi, ebx
  000e4	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000ea	75 12		 jne	 SHORT $L134919
  000ec	8d 96 4e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3150]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 04		 push	 4
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L134919:
  000fe	66 3b c3	 cmp	 ax, bx
  00101	74 0a		 je	 SHORT $L134920
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	0f 85 99 04 00
	00		 jne	 $L134905
$L134920:

; 3949 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dwDuraMax)

  0010d	3b fb		 cmp	 edi, ebx
  0010f	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00115	75 12		 jne	 SHORT $L134921
  00117	8d 86 50 0c 00
	00		 lea	 eax, DWORD PTR [esi+3152]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 04		 push	 4
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134921:
  00129	66 3b c3	 cmp	 ax, bx
  0012c	74 0a		 je	 SHORT $L134922
  0012e	66 3d 01 00	 cmp	 ax, 1
  00132	0f 85 6e 04 00
	00		 jne	 $L134905
$L134922:

; 3950 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dwDuraCur)

  00138	3b fb		 cmp	 edi, ebx
  0013a	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  00140	75 12		 jne	 SHORT $L134923
  00142	8d 8e 54 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3156]
  00148	51		 push	 ecx
  00149	6a 08		 push	 8
  0014b	6a 04		 push	 4
  0014d	8b ce		 mov	 ecx, esi
  0014f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134923:
  00154	66 3b c3	 cmp	 ax, bx
  00157	74 0a		 je	 SHORT $L134924
  00159	66 3d 01 00	 cmp	 ax, 1
  0015d	0f 85 43 04 00
	00		 jne	 $L134905
$L134924:

; 3951 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bRefineCur)

  00163	3b fb		 cmp	 edi, ebx
  00165	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  0016b	75 12		 jne	 SHORT $L134925
  0016d	8d 96 58 0c 00
	00		 lea	 edx, DWORD PTR [esi+3160]
  00173	52		 push	 edx
  00174	6a 09		 push	 9
  00176	6a 04		 push	 4
  00178	8b ce		 mov	 ecx, esi
  0017a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L134925:
  0017f	66 3b c3	 cmp	 ax, bx
  00182	74 0a		 je	 SHORT $L134926
  00184	66 3d 01 00	 cmp	 ax, 1
  00188	0f 85 18 04 00
	00		 jne	 $L134905
$L134926:

; 3952 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dEndTime)

  0018e	3b fb		 cmp	 edi, ebx
  00190	89 9e 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebx
  00196	75 12		 jne	 SHORT $L134927
  00198	8d 86 5c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3164]
  0019e	50		 push	 eax
  0019f	6a 0a		 push	 10			; 0000000aH
  001a1	6a 04		 push	 4
  001a3	8b ce		 mov	 ecx, esi
  001a5	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L134927:
  001aa	66 3b c3	 cmp	 ax, bx
  001ad	74 0a		 je	 SHORT $L134928
  001af	66 3d 01 00	 cmp	 ax, 1
  001b3	0f 85 ed 03 00
	00		 jne	 $L134905
$L134928:

; 3953 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bGradeEffect)

  001b9	3b fb		 cmp	 edi, ebx
  001bb	89 9e 38 08 00
	00		 mov	 DWORD PTR [esi+2104], ebx
  001c1	75 12		 jne	 SHORT $L134929
  001c3	8d 8e 6c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3180]
  001c9	51		 push	 ecx
  001ca	6a 0b		 push	 11			; 0000000bH
  001cc	6a 04		 push	 4
  001ce	8b ce		 mov	 ecx, esi
  001d0	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L134929:
  001d5	66 3b c3	 cmp	 ax, bx
  001d8	74 0a		 je	 SHORT $L134930
  001da	66 3d 01 00	 cmp	 ax, 1
  001de	0f 85 c2 03 00
	00		 jne	 $L134905
$L134930:

; 3954 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bMagic[0])

  001e4	3b fb		 cmp	 edi, ebx
  001e6	89 9e 3c 08 00
	00		 mov	 DWORD PTR [esi+2108], ebx
  001ec	75 12		 jne	 SHORT $L134931
  001ee	8d 96 6d 0c 00
	00		 lea	 edx, DWORD PTR [esi+3181]
  001f4	52		 push	 edx
  001f5	6a 0c		 push	 12			; 0000000cH
  001f7	6a 04		 push	 4
  001f9	8b ce		 mov	 ecx, esi
  001fb	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L134931:
  00200	66 3b c3	 cmp	 ax, bx
  00203	74 0a		 je	 SHORT $L134932
  00205	66 3d 01 00	 cmp	 ax, 1
  00209	0f 85 97 03 00
	00		 jne	 $L134905
$L134932:

; 3955 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bMagic[1])

  0020f	3b fb		 cmp	 edi, ebx
  00211	89 9e 40 08 00
	00		 mov	 DWORD PTR [esi+2112], ebx
  00217	75 12		 jne	 SHORT $L134933
  00219	8d 86 6e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3182]
  0021f	50		 push	 eax
  00220	6a 0d		 push	 13			; 0000000dH
  00222	6a 04		 push	 4
  00224	8b ce		 mov	 ecx, esi
  00226	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L134933:
  0022b	66 3b c3	 cmp	 ax, bx
  0022e	74 0a		 je	 SHORT $L134934
  00230	66 3d 01 00	 cmp	 ax, 1
  00234	0f 85 6c 03 00
	00		 jne	 $L134905
$L134934:

; 3956 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bMagic[2])

  0023a	3b fb		 cmp	 edi, ebx
  0023c	89 9e 44 08 00
	00		 mov	 DWORD PTR [esi+2116], ebx
  00242	75 12		 jne	 SHORT $L134935
  00244	8d 8e 6f 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3183]
  0024a	51		 push	 ecx
  0024b	6a 0e		 push	 14			; 0000000eH
  0024d	6a 04		 push	 4
  0024f	8b ce		 mov	 ecx, esi
  00251	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L134935:
  00256	66 3b c3	 cmp	 ax, bx
  00259	74 0a		 je	 SHORT $L134936
  0025b	66 3d 01 00	 cmp	 ax, 1
  0025f	0f 85 41 03 00
	00		 jne	 $L134905
$L134936:

; 3957 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bMagic[3])

  00265	3b fb		 cmp	 edi, ebx
  00267	89 9e 48 08 00
	00		 mov	 DWORD PTR [esi+2120], ebx
  0026d	75 12		 jne	 SHORT $L134937
  0026f	8d 96 70 0c 00
	00		 lea	 edx, DWORD PTR [esi+3184]
  00275	52		 push	 edx
  00276	6a 0f		 push	 15			; 0000000fH
  00278	6a 04		 push	 4
  0027a	8b ce		 mov	 ecx, esi
  0027c	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L134937:
  00281	66 3b c3	 cmp	 ax, bx
  00284	74 0a		 je	 SHORT $L134938
  00286	66 3d 01 00	 cmp	 ax, 1
  0028a	0f 85 16 03 00
	00		 jne	 $L134905
$L134938:

; 3958 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bMagic[4])

  00290	3b fb		 cmp	 edi, ebx
  00292	89 9e 4c 08 00
	00		 mov	 DWORD PTR [esi+2124], ebx
  00298	75 12		 jne	 SHORT $L134939
  0029a	8d 86 71 0c 00
	00		 lea	 eax, DWORD PTR [esi+3185]
  002a0	50		 push	 eax
  002a1	6a 10		 push	 16			; 00000010H
  002a3	6a 04		 push	 4
  002a5	8b ce		 mov	 ecx, esi
  002a7	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L134939:
  002ac	66 3b c3	 cmp	 ax, bx
  002af	74 0a		 je	 SHORT $L134940
  002b1	66 3d 01 00	 cmp	 ax, 1
  002b5	0f 85 eb 02 00
	00		 jne	 $L134905
$L134940:

; 3959 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bMagic[5])

  002bb	3b fb		 cmp	 edi, ebx
  002bd	89 9e 50 08 00
	00		 mov	 DWORD PTR [esi+2128], ebx
  002c3	75 12		 jne	 SHORT $L134941
  002c5	8d 8e 72 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3186]
  002cb	51		 push	 ecx
  002cc	6a 11		 push	 17			; 00000011H
  002ce	6a 04		 push	 4
  002d0	8b ce		 mov	 ecx, esi
  002d2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L134941:
  002d7	66 3b c3	 cmp	 ax, bx
  002da	74 0a		 je	 SHORT $L134942
  002dc	66 3d 01 00	 cmp	 ax, 1
  002e0	0f 85 c0 02 00
	00		 jne	 $L134905
$L134942:

; 3960 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_wValue[0])

  002e6	3b fb		 cmp	 edi, ebx
  002e8	89 9e 54 08 00
	00		 mov	 DWORD PTR [esi+2132], ebx
  002ee	75 12		 jne	 SHORT $L134943
  002f0	8d 96 74 0c 00
	00		 lea	 edx, DWORD PTR [esi+3188]
  002f6	52		 push	 edx
  002f7	6a 12		 push	 18			; 00000012H
  002f9	6a 04		 push	 4
  002fb	8b ce		 mov	 ecx, esi
  002fd	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L134943:
  00302	66 3b c3	 cmp	 ax, bx
  00305	74 0a		 je	 SHORT $L134944
  00307	66 3d 01 00	 cmp	 ax, 1
  0030b	0f 85 95 02 00
	00		 jne	 $L134905
$L134944:

; 3961 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_wValue[1])

  00311	3b fb		 cmp	 edi, ebx
  00313	89 9e 58 08 00
	00		 mov	 DWORD PTR [esi+2136], ebx
  00319	75 12		 jne	 SHORT $L134945
  0031b	8d 86 76 0c 00
	00		 lea	 eax, DWORD PTR [esi+3190]
  00321	50		 push	 eax
  00322	6a 13		 push	 19			; 00000013H
  00324	6a 04		 push	 4
  00326	8b ce		 mov	 ecx, esi
  00328	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L134945:
  0032d	66 3b c3	 cmp	 ax, bx
  00330	74 0a		 je	 SHORT $L134946
  00332	66 3d 01 00	 cmp	 ax, 1
  00336	0f 85 6a 02 00
	00		 jne	 $L134905
$L134946:

; 3962 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_wValue[2])

  0033c	3b fb		 cmp	 edi, ebx
  0033e	89 9e 5c 08 00
	00		 mov	 DWORD PTR [esi+2140], ebx
  00344	75 12		 jne	 SHORT $L134947
  00346	8d 8e 78 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3192]
  0034c	51		 push	 ecx
  0034d	6a 14		 push	 20			; 00000014H
  0034f	6a 04		 push	 4
  00351	8b ce		 mov	 ecx, esi
  00353	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L134947:
  00358	66 3b c3	 cmp	 ax, bx
  0035b	74 0a		 je	 SHORT $L134948
  0035d	66 3d 01 00	 cmp	 ax, 1
  00361	0f 85 3f 02 00
	00		 jne	 $L134905
$L134948:

; 3963 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_wValue[3])

  00367	3b fb		 cmp	 edi, ebx
  00369	89 9e 60 08 00
	00		 mov	 DWORD PTR [esi+2144], ebx
  0036f	75 12		 jne	 SHORT $L134949
  00371	8d 96 7a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3194]
  00377	52		 push	 edx
  00378	6a 15		 push	 21			; 00000015H
  0037a	6a 04		 push	 4
  0037c	8b ce		 mov	 ecx, esi
  0037e	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L134949:
  00383	66 3b c3	 cmp	 ax, bx
  00386	74 0a		 je	 SHORT $L134950
  00388	66 3d 01 00	 cmp	 ax, 1
  0038c	0f 85 14 02 00
	00		 jne	 $L134905
$L134950:

; 3964 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_wValue[4])

  00392	3b fb		 cmp	 edi, ebx
  00394	89 9e 64 08 00
	00		 mov	 DWORD PTR [esi+2148], ebx
  0039a	75 12		 jne	 SHORT $L134951
  0039c	8d 86 7c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3196]
  003a2	50		 push	 eax
  003a3	6a 16		 push	 22			; 00000016H
  003a5	6a 04		 push	 4
  003a7	8b ce		 mov	 ecx, esi
  003a9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L134951:
  003ae	66 3b c3	 cmp	 ax, bx
  003b1	74 0a		 je	 SHORT $L134952
  003b3	66 3d 01 00	 cmp	 ax, 1
  003b7	0f 85 e9 01 00
	00		 jne	 $L134905
$L134952:

; 3965 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_wValue[5])

  003bd	3b fb		 cmp	 edi, ebx
  003bf	89 9e 68 08 00
	00		 mov	 DWORD PTR [esi+2152], ebx
  003c5	75 12		 jne	 SHORT $L134953
  003c7	8d 8e 7e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3198]
  003cd	51		 push	 ecx
  003ce	6a 17		 push	 23			; 00000017H
  003d0	6a 04		 push	 4
  003d2	8b ce		 mov	 ecx, esi
  003d4	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L134953:
  003d9	66 3b c3	 cmp	 ax, bx
  003dc	74 0a		 je	 SHORT $L134954
  003de	66 3d 01 00	 cmp	 ax, 1
  003e2	0f 85 be 01 00
	00		 jne	 $L134905
$L134954:

; 3966 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dwExtValue[0])

  003e8	3b fb		 cmp	 edi, ebx
  003ea	89 9e 6c 08 00
	00		 mov	 DWORD PTR [esi+2156], ebx
  003f0	75 12		 jne	 SHORT $L134955
  003f2	8d 96 80 0c 00
	00		 lea	 edx, DWORD PTR [esi+3200]
  003f8	52		 push	 edx
  003f9	6a 18		 push	 24			; 00000018H
  003fb	6a 04		 push	 4
  003fd	8b ce		 mov	 ecx, esi
  003ff	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134955:
  00404	66 3b c3	 cmp	 ax, bx
  00407	74 0a		 je	 SHORT $L134956
  00409	66 3d 01 00	 cmp	 ax, 1
  0040d	0f 85 93 01 00
	00		 jne	 $L134905
$L134956:

; 3967 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dwExtValue[1])

  00413	3b fb		 cmp	 edi, ebx
  00415	89 9e 70 08 00
	00		 mov	 DWORD PTR [esi+2160], ebx
  0041b	75 12		 jne	 SHORT $L134957
  0041d	8d 86 84 0c 00
	00		 lea	 eax, DWORD PTR [esi+3204]
  00423	50		 push	 eax
  00424	6a 19		 push	 25			; 00000019H
  00426	6a 04		 push	 4
  00428	8b ce		 mov	 ecx, esi
  0042a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134957:
  0042f	66 3b c3	 cmp	 ax, bx
  00432	74 0a		 je	 SHORT $L134958
  00434	66 3d 01 00	 cmp	 ax, 1
  00438	0f 85 68 01 00
	00		 jne	 $L134905
$L134958:

; 3968 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dwExtValue[2])

  0043e	3b fb		 cmp	 edi, ebx
  00440	89 9e 74 08 00
	00		 mov	 DWORD PTR [esi+2164], ebx
  00446	75 12		 jne	 SHORT $L134959
  00448	8d 8e 88 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3208]
  0044e	51		 push	 ecx
  0044f	6a 1a		 push	 26			; 0000001aH
  00451	6a 04		 push	 4
  00453	8b ce		 mov	 ecx, esi
  00455	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134959:
  0045a	66 3b c3	 cmp	 ax, bx
  0045d	74 0a		 je	 SHORT $L134960
  0045f	66 3d 01 00	 cmp	 ax, 1
  00463	0f 85 3d 01 00
	00		 jne	 $L134905
$L134960:

; 3969 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dwExtValue[3])

  00469	3b fb		 cmp	 edi, ebx
  0046b	89 9e 78 08 00
	00		 mov	 DWORD PTR [esi+2168], ebx
  00471	75 12		 jne	 SHORT $L134961
  00473	8d 96 8c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3212]
  00479	52		 push	 edx
  0047a	6a 1b		 push	 27			; 0000001bH
  0047c	6a 04		 push	 4
  0047e	8b ce		 mov	 ecx, esi
  00480	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134961:
  00485	66 3b c3	 cmp	 ax, bx
  00488	74 0a		 je	 SHORT $L134962
  0048a	66 3d 01 00	 cmp	 ax, 1
  0048e	0f 85 12 01 00
	00		 jne	 $L134905
$L134962:

; 3970 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dwExtValue[4])

  00494	3b fb		 cmp	 edi, ebx
  00496	89 9e 7c 08 00
	00		 mov	 DWORD PTR [esi+2172], ebx
  0049c	75 12		 jne	 SHORT $L134963
  0049e	8d 86 90 0c 00
	00		 lea	 eax, DWORD PTR [esi+3216]
  004a4	50		 push	 eax
  004a5	6a 1c		 push	 28			; 0000001cH
  004a7	6a 04		 push	 4
  004a9	8b ce		 mov	 ecx, esi
  004ab	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134963:
  004b0	66 3b c3	 cmp	 ax, bx
  004b3	74 0a		 je	 SHORT $L134964
  004b5	66 3d 01 00	 cmp	 ax, 1
  004b9	0f 85 e7 00 00
	00		 jne	 $L134905
$L134964:

; 3971 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dwExtValue[5])

  004bf	3b fb		 cmp	 edi, ebx
  004c1	89 9e 80 08 00
	00		 mov	 DWORD PTR [esi+2176], ebx
  004c7	75 12		 jne	 SHORT $L134965
  004c9	8d 8e 94 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3220]
  004cf	51		 push	 ecx
  004d0	6a 1d		 push	 29			; 0000001dH
  004d2	6a 04		 push	 4
  004d4	8b ce		 mov	 ecx, esi
  004d6	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134965:
  004db	66 3b c3	 cmp	 ax, bx
  004de	74 0a		 je	 SHORT $L134966
  004e0	66 3d 01 00	 cmp	 ax, 1
  004e4	0f 85 bc 00 00
	00		 jne	 $L134905
$L134966:

; 3972 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwUserID)

  004ea	3b fb		 cmp	 edi, ebx
  004ec	89 9e 84 08 00
	00		 mov	 DWORD PTR [esi+2180], ebx
  004f2	75 12		 jne	 SHORT $L134967
  004f4	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  004fa	52		 push	 edx
  004fb	6a 1e		 push	 30			; 0000001eH
  004fd	6a 01		 push	 1
  004ff	8b ce		 mov	 ecx, esi
  00501	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134967:
  00506	66 3b c3	 cmp	 ax, bx
  00509	74 0a		 je	 SHORT $L134968
  0050b	66 3d 01 00	 cmp	 ax, 1
  0050f	0f 85 91 00 00
	00		 jne	 $L134905
$L134968:

; 3973 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00515	3b fb		 cmp	 edi, ebx
  00517	89 9e 88 08 00
	00		 mov	 DWORD PTR [esi+2184], ebx
  0051d	75 12		 jne	 SHORT $L134969
  0051f	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  00525	50		 push	 eax
  00526	6a 1f		 push	 31			; 0000001fH
  00528	6a 01		 push	 1
  0052a	8b ce		 mov	 ecx, esi
  0052c	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134969:
  00531	66 3b c3	 cmp	 ax, bx
  00534	74 06		 je	 SHORT $L134970
  00536	66 3d 01 00	 cmp	 ax, 1
  0053a	75 6a		 jne	 SHORT $L134905
$L134970:

; 3974 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCashItemID)

  0053c	3b fb		 cmp	 edi, ebx
  0053e	89 9e 8c 08 00
	00		 mov	 DWORD PTR [esi+2188], ebx
  00544	75 12		 jne	 SHORT $L134971
  00546	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  0054c	51		 push	 ecx
  0054d	6a 20		 push	 32			; 00000020H
  0054f	6a 01		 push	 1
  00551	8b ce		 mov	 ecx, esi
  00553	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L134971:
  00558	66 3b c3	 cmp	 ax, bx
  0055b	74 06		 je	 SHORT $L134972
  0055d	66 3d 01 00	 cmp	 ax, 1
  00561	75 43		 jne	 SHORT $L134905
$L134972:

; 3975 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bInven)

  00563	3b fb		 cmp	 edi, ebx
  00565	89 9e 90 08 00
	00		 mov	 DWORD PTR [esi+2192], ebx
  0056b	75 12		 jne	 SHORT $L134973
  0056d	8d 96 3c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3132]
  00573	52		 push	 edx
  00574	6a 21		 push	 33			; 00000021H
  00576	6a 01		 push	 1
  00578	8b ce		 mov	 ecx, esi
  0057a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L134973:
  0057f	66 3b c3	 cmp	 ax, bx
  00582	74 06		 je	 SHORT $L134974
  00584	66 3d 01 00	 cmp	 ax, 1
  00588	75 1c		 jne	 SHORT $L134905
$L134974:

; 3976 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bSlot)

  0058a	3b fb		 cmp	 edi, ebx
  0058c	89 9e 94 08 00
	00		 mov	 DWORD PTR [esi+2196], ebx
  00592	75 12		 jne	 SHORT $L134905
  00594	8d 86 3d 0c 00
	00		 lea	 eax, DWORD PTR [esi+3133]
  0059a	50		 push	 eax
  0059b	6a 22		 push	 34			; 00000022H
  0059d	6a 01		 push	 1
  0059f	8b ce		 mov	 ecx, esi
  005a1	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L134905:
  005a6	5f		 pop	 edi
  005a7	5e		 pop	 esi
  005a8	5b		 pop	 ebx

; 3977 : END_PARAM()

  005a9	c2 04 00	 ret	 4
?BindParameters@CSPCashItemGet@@UAEFH@Z ENDP		; CSPCashItemGet::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPCashItemGet@@UAE@XZ			; CSPCashItemGet::~CSPCashItemGet
; Function compile flags: /Ogty
;	COMDAT ??_GCSPCashItemGet@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPCashItemGet@@UAEPAXI@Z PROC NEAR			; CSPCashItemGet::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPCashItemGet@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L176670
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L176670:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPCashItemGet@@UAEPAXI@Z ENDP			; CSPCashItemGet::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPCashItemGet@@UAE@XZ
_TEXT	SEGMENT
??1CSPCashItemGet@@UAE@XZ PROC NEAR			; CSPCashItemGet::~CSPCashItemGet, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPCashItemGet@@UAE@XZ ENDP				; CSPCashItemGet::~CSPCashItemGet
_TEXT	ENDS
PUBLIC	??0CSPSaveRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveRecallMon::CSPSaveRecallMon
PUBLIC	?GetNumParam@CSPSaveRecallMon@@UAEHXZ		; CSPSaveRecallMon::GetNumParam
PUBLIC	?BindParameters@CSPSaveRecallMon@@UAEFH@Z	; CSPSaveRecallMon::BindParameters
PUBLIC	??_7CSPSaveRecallMon@@6B@			; CSPSaveRecallMon::`vftable'
PUBLIC	??_GCSPSaveRecallMon@@UAEPAXI@Z			; CSPSaveRecallMon::`scalar deleting destructor'
PUBLIC	??_C@_0DH@KKONHIIO@?$HL?$DP?5?$DN?5CALL?5TSaveRecallMon?$CI?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPSaveRecallMon@@UAEPAXI@Z:NEAR		; CSPSaveRecallMon::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T176853 DD	0ffffffffH
	DD	FLAT:$L176679
$T176850 DD	019930520H
	DD	01H
	DD	FLAT:$T176853
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DH@KKONHIIO@?$HL?$DP?5?$DN?5CALL?5TSaveRecallMon?$CI?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0DH@KKONHIIO@?$HL?$DP?5?$DN?5CALL?5TSaveRecallMon?$CI?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	'? = CALL TSaveRecallMon(?,?,?,?,?,?,?,?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveRecallMon@@6B@
CONST	SEGMENT
??_7CSPSaveRecallMon@@6B@ DD FLAT:??_ECSPSaveRecallMon@@UAEPAXI@Z ; CSPSaveRecallMon::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveRecallMon@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveRecallMon@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T176678 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveRecallMon::CSPSaveRecallMon, COMDAT
; _this$ = ecx

; 4000 : DEF_QUERY(CSPSaveRecallMon, _T("{? = CALL TSaveRecallMon(?,?,?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DH@KKONHIIO@?$HL?$DP?5?$DN?5CALL?5TSaveRecallMon?$CI?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T176678[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveRecallMon@@6B@
  0005e	72 0d		 jb	 SHORT $L176851
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L176851:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L176679:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T176850
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveRecallMon::CSPSaveRecallMon
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveRecallMon@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveRecallMon@@UAEHXZ PROC NEAR		; CSPSaveRecallMon::GetNumParam, COMDAT
; _this$ = ecx

; 4002 : BEGIN_PARAM(14)

  00000	b8 0e 00 00 00	 mov	 eax, 14			; 0000000eH
  00005	c3		 ret	 0
?GetNumParam@CSPSaveRecallMon@@UAEHXZ ENDP		; CSPSaveRecallMon::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveRecallMon@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveRecallMon@@UAEFH@Z PROC NEAR	; CSPSaveRecallMon::BindParameters, COMDAT
; _this$ = ecx

; 4002 : BEGIN_PARAM(14)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4003 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L135033
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L135033
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 3f 02 00
	00		 jne	 $L135028
$L135033:

; 4004 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bDelete)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L135034
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135034:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L135035
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 14 02 00
	00		 jne	 $L135028
$L135035:

; 4005 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L135036
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135036:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L135037
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 e9 01 00
	00		 jne	 $L135028
$L135037:

; 4006 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwMonID)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L135038
  00096	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135038:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 0a		 je	 SHORT $L135039
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 be 01 00
	00		 jne	 $L135028
$L135039:

; 4007 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wTempID)

  000b7	3b fb		 cmp	 edi, ebx
  000b9	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bf	75 12		 jne	 SHORT $L135040
  000c1	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 01		 push	 1
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135040:
  000d3	66 3b c3	 cmp	 ax, bx
  000d6	74 0a		 je	 SHORT $L135041
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 93 01 00
	00		 jne	 $L135028
$L135041:

; 4008 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wPetID)

  000e2	3b fb		 cmp	 edi, ebx
  000e4	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000ea	75 12		 jne	 SHORT $L135042
  000ec	8d 96 3e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3134]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 01		 push	 1
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135042:
  000fe	66 3b c3	 cmp	 ax, bx
  00101	74 0a		 je	 SHORT $L135043
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	0f 85 68 01 00
	00		 jne	 $L135028
$L135043:

; 4009 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwAttr)

  0010d	3b fb		 cmp	 edi, ebx
  0010f	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00115	75 12		 jne	 SHORT $L135044
  00117	8d 86 40 0c 00
	00		 lea	 eax, DWORD PTR [esi+3136]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 01		 push	 1
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135044:
  00129	66 3b c3	 cmp	 ax, bx
  0012c	74 0a		 je	 SHORT $L135045
  0012e	66 3d 01 00	 cmp	 ax, 1
  00132	0f 85 3d 01 00
	00		 jne	 $L135028
$L135045:

; 4010 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bLevel)

  00138	3b fb		 cmp	 edi, ebx
  0013a	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  00140	75 12		 jne	 SHORT $L135046
  00142	8d 8e 44 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3140]
  00148	51		 push	 ecx
  00149	6a 08		 push	 8
  0014b	6a 01		 push	 1
  0014d	8b ce		 mov	 ecx, esi
  0014f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135046:
  00154	66 3b c3	 cmp	 ax, bx
  00157	74 0a		 je	 SHORT $L135047
  00159	66 3d 01 00	 cmp	 ax, 1
  0015d	0f 85 12 01 00
	00		 jne	 $L135028
$L135047:

; 4011 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwHP)

  00163	3b fb		 cmp	 edi, ebx
  00165	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  0016b	75 12		 jne	 SHORT $L135048
  0016d	8d 96 48 0c 00
	00		 lea	 edx, DWORD PTR [esi+3144]
  00173	52		 push	 edx
  00174	6a 09		 push	 9
  00176	6a 01		 push	 1
  00178	8b ce		 mov	 ecx, esi
  0017a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135048:
  0017f	66 3b c3	 cmp	 ax, bx
  00182	74 0a		 je	 SHORT $L135049
  00184	66 3d 01 00	 cmp	 ax, 1
  00188	0f 85 e7 00 00
	00		 jne	 $L135028
$L135049:

; 4012 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwMP)

  0018e	3b fb		 cmp	 edi, ebx
  00190	89 9e 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebx
  00196	75 12		 jne	 SHORT $L135050
  00198	8d 86 4c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3148]
  0019e	50		 push	 eax
  0019f	6a 0a		 push	 10			; 0000000aH
  001a1	6a 01		 push	 1
  001a3	8b ce		 mov	 ecx, esi
  001a5	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135050:
  001aa	66 3b c3	 cmp	 ax, bx
  001ad	74 0a		 je	 SHORT $L135051
  001af	66 3d 01 00	 cmp	 ax, 1
  001b3	0f 85 bc 00 00
	00		 jne	 $L135028
$L135051:

; 4013 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bSkillLevel)

  001b9	3b fb		 cmp	 edi, ebx
  001bb	89 9e 38 08 00
	00		 mov	 DWORD PTR [esi+2104], ebx
  001c1	75 12		 jne	 SHORT $L135052
  001c3	8d 8e 50 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3152]
  001c9	51		 push	 ecx
  001ca	6a 0b		 push	 11			; 0000000bH
  001cc	6a 01		 push	 1
  001ce	8b ce		 mov	 ecx, esi
  001d0	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135052:
  001d5	66 3b c3	 cmp	 ax, bx
  001d8	74 0a		 je	 SHORT $L135053
  001da	66 3d 01 00	 cmp	 ax, 1
  001de	0f 85 91 00 00
	00		 jne	 $L135028
$L135053:

; 4014 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wPosX)

  001e4	3b fb		 cmp	 edi, ebx
  001e6	89 9e 3c 08 00
	00		 mov	 DWORD PTR [esi+2108], ebx
  001ec	75 12		 jne	 SHORT $L135054
  001ee	8d 96 52 0c 00
	00		 lea	 edx, DWORD PTR [esi+3154]
  001f4	52		 push	 edx
  001f5	6a 0c		 push	 12			; 0000000cH
  001f7	6a 01		 push	 1
  001f9	8b ce		 mov	 ecx, esi
  001fb	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135054:
  00200	66 3b c3	 cmp	 ax, bx
  00203	74 06		 je	 SHORT $L135055
  00205	66 3d 01 00	 cmp	 ax, 1
  00209	75 6a		 jne	 SHORT $L135028
$L135055:

; 4015 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wPosY)

  0020b	3b fb		 cmp	 edi, ebx
  0020d	89 9e 40 08 00
	00		 mov	 DWORD PTR [esi+2112], ebx
  00213	75 12		 jne	 SHORT $L135056
  00215	8d 86 54 0c 00
	00		 lea	 eax, DWORD PTR [esi+3156]
  0021b	50		 push	 eax
  0021c	6a 0d		 push	 13			; 0000000dH
  0021e	6a 01		 push	 1
  00220	8b ce		 mov	 ecx, esi
  00222	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135056:
  00227	66 3b c3	 cmp	 ax, bx
  0022a	74 06		 je	 SHORT $L135057
  0022c	66 3d 01 00	 cmp	 ax, 1
  00230	75 43		 jne	 SHORT $L135028
$L135057:

; 4016 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wPosZ)

  00232	3b fb		 cmp	 edi, ebx
  00234	89 9e 44 08 00
	00		 mov	 DWORD PTR [esi+2116], ebx
  0023a	75 12		 jne	 SHORT $L135058
  0023c	8d 8e 56 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3158]
  00242	51		 push	 ecx
  00243	6a 0e		 push	 14			; 0000000eH
  00245	6a 01		 push	 1
  00247	8b ce		 mov	 ecx, esi
  00249	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135058:
  0024e	66 3b c3	 cmp	 ax, bx
  00251	74 06		 je	 SHORT $L135059
  00253	66 3d 01 00	 cmp	 ax, 1
  00257	75 1c		 jne	 SHORT $L135028
$L135059:

; 4017 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwTick)

  00259	3b fb		 cmp	 edi, ebx
  0025b	89 9e 48 08 00
	00		 mov	 DWORD PTR [esi+2120], ebx
  00261	75 12		 jne	 SHORT $L135028
  00263	8d 96 58 0c 00
	00		 lea	 edx, DWORD PTR [esi+3160]
  00269	52		 push	 edx
  0026a	6a 0f		 push	 15			; 0000000fH
  0026c	6a 01		 push	 1
  0026e	8b ce		 mov	 ecx, esi
  00270	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135028:
  00275	5f		 pop	 edi
  00276	5e		 pop	 esi
  00277	5b		 pop	 ebx

; 4018 : END_PARAM()

  00278	c2 04 00	 ret	 4
?BindParameters@CSPSaveRecallMon@@UAEFH@Z ENDP		; CSPSaveRecallMon::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveRecallMon@@UAE@XZ			; CSPSaveRecallMon::~CSPSaveRecallMon
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveRecallMon@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveRecallMon@@UAEPAXI@Z PROC NEAR		; CSPSaveRecallMon::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveRecallMon@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L176865
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L176865:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveRecallMon@@UAEPAXI@Z ENDP			; CSPSaveRecallMon::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveRecallMon@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveRecallMon@@UAE@XZ PROC NEAR			; CSPSaveRecallMon::~CSPSaveRecallMon, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveRecallMon@@UAE@XZ ENDP			; CSPSaveRecallMon::~CSPSaveRecallMon
_TEXT	ENDS
PUBLIC	??0CSPCreateRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPCreateRecallMon::CSPCreateRecallMon
PUBLIC	?GetNumParam@CSPCreateRecallMon@@UAEHXZ		; CSPCreateRecallMon::GetNumParam
PUBLIC	?BindParameters@CSPCreateRecallMon@@UAEFH@Z	; CSPCreateRecallMon::BindParameters
PUBLIC	??_7CSPCreateRecallMon@@6B@			; CSPCreateRecallMon::`vftable'
PUBLIC	??_GCSPCreateRecallMon@@UAEPAXI@Z		; CSPCreateRecallMon::`scalar deleting destructor'
PUBLIC	??_C@_0DI@PDEGIMCN@?$HL?5?$DP?5?$DN?5CALL?5TCreateRecallMon?$CI?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPCreateRecallMon@@UAEPAXI@Z:NEAR		; CSPCreateRecallMon::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T177048 DD	0ffffffffH
	DD	FLAT:$L176874
$T177045 DD	019930520H
	DD	01H
	DD	FLAT:$T177048
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DI@PDEGIMCN@?$HL?5?$DP?5?$DN?5CALL?5TCreateRecallMon?$CI?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0DI@PDEGIMCN@?$HL?5?$DP?5?$DN?5CALL?5TCreateRecallMon?$CI?$DP?0?$DP?0@ DB '{'
	DB	' ? = CALL TCreateRecallMon(?,?,?,?,?,?,?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPCreateRecallMon@@6B@
CONST	SEGMENT
??_7CSPCreateRecallMon@@6B@ DD FLAT:??_ECSPCreateRecallMon@@UAEPAXI@Z ; CSPCreateRecallMon::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPCreateRecallMon@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPCreateRecallMon@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPCreateRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T176873 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPCreateRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPCreateRecallMon::CSPCreateRecallMon, COMDAT
; _this$ = ecx

; 4040 : DEF_QUERY(CSPCreateRecallMon, _T("{ ? = CALL TCreateRecallMon(?,?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPCreateRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DI@PDEGIMCN@?$HL?5?$DP?5?$DN?5CALL?5TCreateRecallMon?$CI?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T176873[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPCreateRecallMon@@6B@
  0005e	72 0d		 jb	 SHORT $L177046
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L177046:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L176874:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPCreateRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T177045
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPCreateRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPCreateRecallMon::CSPCreateRecallMon
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPCreateRecallMon@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPCreateRecallMon@@UAEHXZ PROC NEAR	; CSPCreateRecallMon::GetNumParam, COMDAT
; _this$ = ecx

; 4042 : BEGIN_PARAM(13)

  00000	b8 0d 00 00 00	 mov	 eax, 13			; 0000000dH
  00005	c3		 ret	 0
?GetNumParam@CSPCreateRecallMon@@UAEHXZ ENDP		; CSPCreateRecallMon::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPCreateRecallMon@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPCreateRecallMon@@UAEFH@Z PROC NEAR	; CSPCreateRecallMon::BindParameters, COMDAT
; _this$ = ecx

; 4042 : BEGIN_PARAM(13)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4043 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L135117
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L135117
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 14 02 00
	00		 jne	 $L135112
$L135117:

; 4044 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_dwMonID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L135118
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 04		 push	 4
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135118:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L135119
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 e9 01 00
	00		 jne	 $L135112
$L135119:

; 4045 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L135120
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135120:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L135121
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 be 01 00
	00		 jne	 $L135112
$L135121:

; 4046 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wTempID)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L135122
  00096	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135122:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 0a		 je	 SHORT $L135123
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 93 01 00
	00		 jne	 $L135112
$L135123:

; 4047 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wPetID)

  000b7	3b fb		 cmp	 edi, ebx
  000b9	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bf	75 12		 jne	 SHORT $L135124
  000c1	8d 8e 3a 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3130]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 01		 push	 1
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135124:
  000d3	66 3b c3	 cmp	 ax, bx
  000d6	74 0a		 je	 SHORT $L135125
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 68 01 00
	00		 jne	 $L135112
$L135125:

; 4048 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwATTR)

  000e2	3b fb		 cmp	 edi, ebx
  000e4	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000ea	75 12		 jne	 SHORT $L135126
  000ec	8d 96 3c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3132]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 01		 push	 1
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135126:
  000fe	66 3b c3	 cmp	 ax, bx
  00101	74 0a		 je	 SHORT $L135127
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	0f 85 3d 01 00
	00		 jne	 $L135112
$L135127:

; 4049 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bLevel)

  0010d	3b fb		 cmp	 edi, ebx
  0010f	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00115	75 12		 jne	 SHORT $L135128
  00117	8d 86 40 0c 00
	00		 lea	 eax, DWORD PTR [esi+3136]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 01		 push	 1
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135128:
  00129	66 3b c3	 cmp	 ax, bx
  0012c	74 0a		 je	 SHORT $L135129
  0012e	66 3d 01 00	 cmp	 ax, 1
  00132	0f 85 12 01 00
	00		 jne	 $L135112
$L135129:

; 4050 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwHP)

  00138	3b fb		 cmp	 edi, ebx
  0013a	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  00140	75 12		 jne	 SHORT $L135130
  00142	8d 8e 44 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3140]
  00148	51		 push	 ecx
  00149	6a 08		 push	 8
  0014b	6a 01		 push	 1
  0014d	8b ce		 mov	 ecx, esi
  0014f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135130:
  00154	66 3b c3	 cmp	 ax, bx
  00157	74 0a		 je	 SHORT $L135131
  00159	66 3d 01 00	 cmp	 ax, 1
  0015d	0f 85 e7 00 00
	00		 jne	 $L135112
$L135131:

; 4051 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwMP)

  00163	3b fb		 cmp	 edi, ebx
  00165	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  0016b	75 12		 jne	 SHORT $L135132
  0016d	8d 96 48 0c 00
	00		 lea	 edx, DWORD PTR [esi+3144]
  00173	52		 push	 edx
  00174	6a 09		 push	 9
  00176	6a 01		 push	 1
  00178	8b ce		 mov	 ecx, esi
  0017a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135132:
  0017f	66 3b c3	 cmp	 ax, bx
  00182	74 0a		 je	 SHORT $L135133
  00184	66 3d 01 00	 cmp	 ax, 1
  00188	0f 85 bc 00 00
	00		 jne	 $L135112
$L135133:

; 4052 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bSkillLevel)

  0018e	3b fb		 cmp	 edi, ebx
  00190	89 9e 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebx
  00196	75 12		 jne	 SHORT $L135134
  00198	8d 86 4c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3148]
  0019e	50		 push	 eax
  0019f	6a 0a		 push	 10			; 0000000aH
  001a1	6a 01		 push	 1
  001a3	8b ce		 mov	 ecx, esi
  001a5	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135134:
  001aa	66 3b c3	 cmp	 ax, bx
  001ad	74 0a		 je	 SHORT $L135135
  001af	66 3d 01 00	 cmp	 ax, 1
  001b3	0f 85 91 00 00
	00		 jne	 $L135112
$L135135:

; 4053 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wPosX)

  001b9	3b fb		 cmp	 edi, ebx
  001bb	89 9e 38 08 00
	00		 mov	 DWORD PTR [esi+2104], ebx
  001c1	75 12		 jne	 SHORT $L135136
  001c3	8d 8e 4e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3150]
  001c9	51		 push	 ecx
  001ca	6a 0b		 push	 11			; 0000000bH
  001cc	6a 01		 push	 1
  001ce	8b ce		 mov	 ecx, esi
  001d0	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135136:
  001d5	66 3b c3	 cmp	 ax, bx
  001d8	74 06		 je	 SHORT $L135137
  001da	66 3d 01 00	 cmp	 ax, 1
  001de	75 6a		 jne	 SHORT $L135112
$L135137:

; 4054 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wPosY)

  001e0	3b fb		 cmp	 edi, ebx
  001e2	89 9e 3c 08 00
	00		 mov	 DWORD PTR [esi+2108], ebx
  001e8	75 12		 jne	 SHORT $L135138
  001ea	8d 96 50 0c 00
	00		 lea	 edx, DWORD PTR [esi+3152]
  001f0	52		 push	 edx
  001f1	6a 0c		 push	 12			; 0000000cH
  001f3	6a 01		 push	 1
  001f5	8b ce		 mov	 ecx, esi
  001f7	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135138:
  001fc	66 3b c3	 cmp	 ax, bx
  001ff	74 06		 je	 SHORT $L135139
  00201	66 3d 01 00	 cmp	 ax, 1
  00205	75 43		 jne	 SHORT $L135112
$L135139:

; 4055 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wPosZ)

  00207	3b fb		 cmp	 edi, ebx
  00209	89 9e 40 08 00
	00		 mov	 DWORD PTR [esi+2112], ebx
  0020f	75 12		 jne	 SHORT $L135140
  00211	8d 86 52 0c 00
	00		 lea	 eax, DWORD PTR [esi+3154]
  00217	50		 push	 eax
  00218	6a 0d		 push	 13			; 0000000dH
  0021a	6a 01		 push	 1
  0021c	8b ce		 mov	 ecx, esi
  0021e	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135140:
  00223	66 3b c3	 cmp	 ax, bx
  00226	74 06		 je	 SHORT $L135141
  00228	66 3d 01 00	 cmp	 ax, 1
  0022c	75 1c		 jne	 SHORT $L135112
$L135141:

; 4056 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwTime)

  0022e	3b fb		 cmp	 edi, ebx
  00230	89 9e 44 08 00
	00		 mov	 DWORD PTR [esi+2116], ebx
  00236	75 12		 jne	 SHORT $L135112
  00238	8d 8e 54 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3156]
  0023e	51		 push	 ecx
  0023f	6a 0e		 push	 14			; 0000000eH
  00241	6a 01		 push	 1
  00243	8b ce		 mov	 ecx, esi
  00245	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135112:
  0024a	5f		 pop	 edi
  0024b	5e		 pop	 esi
  0024c	5b		 pop	 ebx

; 4057 : END_PARAM()

  0024d	c2 04 00	 ret	 4
?BindParameters@CSPCreateRecallMon@@UAEFH@Z ENDP	; CSPCreateRecallMon::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPCreateRecallMon@@UAE@XZ			; CSPCreateRecallMon::~CSPCreateRecallMon
; Function compile flags: /Ogty
;	COMDAT ??_GCSPCreateRecallMon@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPCreateRecallMon@@UAEPAXI@Z PROC NEAR		; CSPCreateRecallMon::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPCreateRecallMon@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L177060
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L177060:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPCreateRecallMon@@UAEPAXI@Z ENDP			; CSPCreateRecallMon::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPCreateRecallMon@@UAE@XZ
_TEXT	SEGMENT
??1CSPCreateRecallMon@@UAE@XZ PROC NEAR			; CSPCreateRecallMon::~CSPCreateRecallMon, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPCreateRecallMon@@UAE@XZ ENDP			; CSPCreateRecallMon::~CSPCreateRecallMon
_TEXT	ENDS
PUBLIC	??_7CSPGetServerID@@6B@				; CSPGetServerID::`vftable'
PUBLIC	??_GCSPGetServerID@@UAEPAXI@Z			; CSPGetServerID::`scalar deleting destructor'
PUBLIC	??_C@_0CC@OLIGDILL@?$HL?5?$DP?5?$DN?5CALL?5TGetServerID?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ@ ; `string'
PUBLIC	??0CSPGetServerID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetServerID::CSPGetServerID
PUBLIC	?GetNumParam@CSPGetServerID@@UAEHXZ		; CSPGetServerID::GetNumParam
PUBLIC	?BindParameters@CSPGetServerID@@UAEFH@Z		; CSPGetServerID::BindParameters
EXTRN	??_ECSPGetServerID@@UAEPAXI@Z:NEAR		; CSPGetServerID::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T177243 DD	0ffffffffH
	DD	FLAT:$L177069
$T177240 DD	019930520H
	DD	01H
	DD	FLAT:$T177243
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CC@OLIGDILL@?$HL?5?$DP?5?$DN?5CALL?5TGetServerID?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ@
CONST	SEGMENT
??_C@_0CC@OLIGDILL@?$HL?5?$DP?5?$DN?5CALL?5TGetServerID?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ@ DB '{'
	DB	' ? = CALL TGetServerID(?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPGetServerID@@6B@
CONST	SEGMENT
??_7CSPGetServerID@@6B@ DD FLAT:??_ECSPGetServerID@@UAEPAXI@Z ; CSPGetServerID::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGetServerID@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGetServerID@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGetServerID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T177068 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGetServerID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGetServerID::CSPGetServerID, COMDAT
; _this$ = ecx

; 4071 : DEF_QUERY( CSPGetServerID, _T("{ ? = CALL TGetServerID(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGetServerID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CC@OLIGDILL@?$HL?5?$DP?5?$DN?5CALL?5TGetServerID?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T177068[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGetServerID@@6B@
  0005e	72 0d		 jb	 SHORT $L177241
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L177241:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L177069:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGetServerID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T177240
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGetServerID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGetServerID::CSPGetServerID
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGetServerID@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGetServerID@@UAEHXZ PROC NEAR		; CSPGetServerID::GetNumParam, COMDAT
; _this$ = ecx

; 4073 : BEGIN_PARAM(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumParam@CSPGetServerID@@UAEHXZ ENDP		; CSPGetServerID::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetServerID@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGetServerID@@UAEFH@Z PROC NEAR	; CSPGetServerID::BindParameters, COMDAT
; _this$ = ecx

; 4073 : BEGIN_PARAM(5)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4074 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L135190
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L135190
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 91 00 00
	00		 jne	 $L135185
$L135190:

; 4075 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wMapID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L135191
  00040	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135191:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 06		 je	 SHORT $L135192
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	75 6a		 jne	 SHORT $L135185
$L135192:

; 4076 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wUnitID)

  0005d	3b fb		 cmp	 edi, ebx
  0005f	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00065	75 12		 jne	 SHORT $L135193
  00067	8d 96 32 0c 00
	00		 lea	 edx, DWORD PTR [esi+3122]
  0006d	52		 push	 edx
  0006e	6a 03		 push	 3
  00070	6a 01		 push	 1
  00072	8b ce		 mov	 ecx, esi
  00074	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135193:
  00079	66 3b c3	 cmp	 ax, bx
  0007c	74 06		 je	 SHORT $L135194
  0007e	66 3d 01 00	 cmp	 ax, 1
  00082	75 43		 jne	 SHORT $L135185
$L135194:

; 4077 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bChannel)

  00084	3b fb		 cmp	 edi, ebx
  00086	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  0008c	75 12		 jne	 SHORT $L135195
  0008e	8d 86 31 0c 00
	00		 lea	 eax, DWORD PTR [esi+3121]
  00094	50		 push	 eax
  00095	6a 04		 push	 4
  00097	6a 01		 push	 1
  00099	8b ce		 mov	 ecx, esi
  0009b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135195:
  000a0	66 3b c3	 cmp	 ax, bx
  000a3	74 06		 je	 SHORT $L135196
  000a5	66 3d 01 00	 cmp	 ax, 1
  000a9	75 1c		 jne	 SHORT $L135185
$L135196:

; 4078 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_bServerID)

  000ab	3b fb		 cmp	 edi, ebx
  000ad	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b3	75 12		 jne	 SHORT $L135185
  000b5	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  000bb	51		 push	 ecx
  000bc	6a 05		 push	 5
  000be	6a 04		 push	 4
  000c0	8b ce		 mov	 ecx, esi
  000c2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135185:
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx

; 4079 : END_PARAM()

  000ca	c2 04 00	 ret	 4
?BindParameters@CSPGetServerID@@UAEFH@Z ENDP		; CSPGetServerID::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGetServerID@@UAE@XZ			; CSPGetServerID::~CSPGetServerID
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGetServerID@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGetServerID@@UAEPAXI@Z PROC NEAR			; CSPGetServerID::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGetServerID@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L177255
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L177255:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGetServerID@@UAEPAXI@Z ENDP			; CSPGetServerID::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGetServerID@@UAE@XZ
_TEXT	SEGMENT
??1CSPGetServerID@@UAE@XZ PROC NEAR			; CSPGetServerID::~CSPGetServerID, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGetServerID@@UAE@XZ ENDP				; CSPGetServerID::~CSPGetServerID
_TEXT	ENDS
PUBLIC	??0CSPEnterServer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPEnterServer::CSPEnterServer
PUBLIC	?GetNumParam@CSPEnterServer@@UAEHXZ		; CSPEnterServer::GetNumParam
PUBLIC	?BindParameters@CSPEnterServer@@UAEFH@Z		; CSPEnterServer::BindParameters
PUBLIC	??_7CSPEnterServer@@6B@				; CSPEnterServer::`vftable'
PUBLIC	??_GCSPEnterServer@@UAEPAXI@Z			; CSPEnterServer::`scalar deleting destructor'
PUBLIC	??_C@_0CI@DAHMPMGN@?$HL?5?$DP?5?$DN?5CALL?5TEnterServer?$CI?$DP?0?$DP?0?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPEnterServer@@UAEPAXI@Z:NEAR		; CSPEnterServer::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T177438 DD	0ffffffffH
	DD	FLAT:$L177264
$T177435 DD	019930520H
	DD	01H
	DD	FLAT:$T177438
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CI@DAHMPMGN@?$HL?5?$DP?5?$DN?5CALL?5TEnterServer?$CI?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0CI@DAHMPMGN@?$HL?5?$DP?5?$DN?5CALL?5TEnterServer?$CI?$DP?0?$DP?0?$DP?0?$DP?0@ DB '{'
	DB	' ? = CALL TEnterServer(?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPEnterServer@@6B@
CONST	SEGMENT
??_7CSPEnterServer@@6B@ DD FLAT:??_ECSPEnterServer@@UAEPAXI@Z ; CSPEnterServer::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPEnterServer@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPEnterServer@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPEnterServer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T177263 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPEnterServer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPEnterServer::CSPEnterServer, COMDAT
; _this$ = ecx

; 4097 : DEF_QUERY( CSPEnterServer, _T("{ ? = CALL TEnterServer(?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPEnterServer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CI@DAHMPMGN@?$HL?5?$DP?5?$DN?5CALL?5TEnterServer?$CI?$DP?0?$DP?0?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T177263[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPEnterServer@@6B@
  0005e	72 0d		 jb	 SHORT $L177436
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L177436:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L177264:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPEnterServer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T177435
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPEnterServer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPEnterServer::CSPEnterServer
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPEnterServer@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPEnterServer@@UAEHXZ PROC NEAR		; CSPEnterServer::GetNumParam, COMDAT
; _this$ = ecx

; 4099 : BEGIN_PARAM(8)

  00000	b8 08 00 00 00	 mov	 eax, 8
  00005	c3		 ret	 0
?GetNumParam@CSPEnterServer@@UAEHXZ ENDP		; CSPEnterServer::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPEnterServer@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPEnterServer@@UAEFH@Z PROC NEAR	; CSPEnterServer::BindParameters, COMDAT
; _this$ = ecx

; 4099 : BEGIN_PARAM(8)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4100 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L135248
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L135248
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 18 01 00
	00		 jne	 $L135243
$L135248:

; 4101 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwKEY)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L135249
  00040	8d 8e 70 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3184]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135249:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L135250
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 ed 00 00
	00		 jne	 $L135243
$L135250:

; 4102 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwUserID)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L135251
  0006b	8d 96 68 0c 00
	00		 lea	 edx, DWORD PTR [esi+3176]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135251:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L135252
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 c2 00 00
	00		 jne	 $L135243
$L135252:

; 4103 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L135253
  00096	8d 86 6c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3180]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135253:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 0a		 je	 SHORT $L135254
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 97 00 00
	00		 jne	 $L135243
$L135254:

; 4104 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bGroupID)

  000b7	3b fb		 cmp	 edi, ebx
  000b9	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bf	75 12		 jne	 SHORT $L135255
  000c1	8d 8e 74 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3188]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 01		 push	 1
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135255:
  000d3	66 3b c3	 cmp	 ax, bx
  000d6	74 06		 je	 SHORT $L135256
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	75 70		 jne	 SHORT $L135243
$L135256:

; 4105 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bChannel)

  000de	3b fb		 cmp	 edi, ebx
  000e0	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000e6	75 12		 jne	 SHORT $L135257
  000e8	8d 96 75 0c 00
	00		 lea	 edx, DWORD PTR [esi+3189]
  000ee	52		 push	 edx
  000ef	6a 06		 push	 6
  000f1	6a 01		 push	 1
  000f3	8b ce		 mov	 ecx, esi
  000f5	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135257:
  000fa	66 3b c3	 cmp	 ax, bx
  000fd	74 06		 je	 SHORT $L135258
  000ff	66 3d 01 00	 cmp	 ax, 1
  00103	75 49		 jne	 SHORT $L135243
$L135258:

; 4106 : 	PARAM_ENTRY_STR( SQL_PARAM_INPUT, m_szIPAddr)

  00105	3b fb		 cmp	 edi, ebx
  00107	c7 86 28 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2088], -3 ; fffffffdH
  00111	75 14		 jne	 SHORT $L135259
  00113	6a 33		 push	 51			; 00000033H
  00115	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  0011b	50		 push	 eax
  0011c	6a 07		 push	 7
  0011e	6a 01		 push	 1
  00120	8b ce		 mov	 ecx, esi
  00122	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L135259:
  00127	66 3b c3	 cmp	 ax, bx
  0012a	74 06		 je	 SHORT $L135260
  0012c	66 3d 01 00	 cmp	 ax, 1
  00130	75 1c		 jne	 SHORT $L135243
$L135260:

; 4107 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wPort)

  00132	3b fb		 cmp	 edi, ebx
  00134	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  0013a	75 12		 jne	 SHORT $L135243
  0013c	8d 8e 64 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3172]
  00142	51		 push	 ecx
  00143	6a 08		 push	 8
  00145	6a 01		 push	 1
  00147	8b ce		 mov	 ecx, esi
  00149	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135243:
  0014e	5f		 pop	 edi
  0014f	5e		 pop	 esi
  00150	5b		 pop	 ebx

; 4108 : END_PARAM()

  00151	c2 04 00	 ret	 4
?BindParameters@CSPEnterServer@@UAEFH@Z ENDP		; CSPEnterServer::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPEnterServer@@UAE@XZ			; CSPEnterServer::~CSPEnterServer
; Function compile flags: /Ogty
;	COMDAT ??_GCSPEnterServer@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPEnterServer@@UAEPAXI@Z PROC NEAR			; CSPEnterServer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPEnterServer@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L177450
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L177450:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPEnterServer@@UAEPAXI@Z ENDP			; CSPEnterServer::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPEnterServer@@UAE@XZ
_TEXT	SEGMENT
??1CSPEnterServer@@UAE@XZ PROC NEAR			; CSPEnterServer::~CSPEnterServer, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPEnterServer@@UAE@XZ ENDP				; CSPEnterServer::~CSPEnterServer
_TEXT	ENDS
PUBLIC	??0CSPLogout@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPLogout::CSPLogout
PUBLIC	?GetNumParam@CSPLogout@@UAEHXZ			; CSPLogout::GetNumParam
PUBLIC	?BindParameters@CSPLogout@@UAEFH@Z		; CSPLogout::BindParameters
PUBLIC	??_7CSPLogout@@6B@				; CSPLogout::`vftable'
PUBLIC	??_GCSPLogout@@UAEPAXI@Z			; CSPLogout::`scalar deleting destructor'
PUBLIC	??_C@_0BJ@MDCKIAOD@?$HL?5?$DP?5?$DN?5CALL?5TLogout?$CI?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPLogout@@UAEPAXI@Z:NEAR			; CSPLogout::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T177633 DD	0ffffffffH
	DD	FLAT:$L177459
$T177630 DD	019930520H
	DD	01H
	DD	FLAT:$T177633
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BJ@MDCKIAOD@?$HL?5?$DP?5?$DN?5CALL?5TLogout?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BJ@MDCKIAOD@?$HL?5?$DP?5?$DN?5CALL?5TLogout?$CI?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' ? = CALL TLogout(?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPLogout@@6B@
CONST	SEGMENT
??_7CSPLogout@@6B@ DD FLAT:??_ECSPLogout@@UAEPAXI@Z	; CSPLogout::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPLogout@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPLogout@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPLogout@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T177458 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPLogout@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPLogout::CSPLogout, COMDAT
; _this$ = ecx

; 4119 : DEF_QUERY( CSPLogout, _T("{ ? = CALL TLogout(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPLogout@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@MDCKIAOD@?$HL?5?$DP?5?$DN?5CALL?5TLogout?$CI?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T177458[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPLogout@@6B@
  0005e	72 0d		 jb	 SHORT $L177631
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L177631:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L177459:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPLogout@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T177630
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPLogout@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPLogout::CSPLogout
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPLogout@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPLogout@@UAEHXZ PROC NEAR		; CSPLogout::GetNumParam, COMDAT
; _this$ = ecx

; 4121 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPLogout@@UAEHXZ ENDP			; CSPLogout::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPLogout@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPLogout@@UAEFH@Z PROC NEAR		; CSPLogout::BindParameters, COMDAT
; _this$ = ecx

; 4121 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 4122 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L135307
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 04		 push	 4
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L135307
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L135302
$L135307:

; 4123 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L135308
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135308:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L135309
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L135302
$L135309:

; 4124 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L135302
  00068	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135302:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 4125 : END_PARAM()

  0007c	c2 04 00	 ret	 4
?BindParameters@CSPLogout@@UAEFH@Z ENDP			; CSPLogout::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPLogout@@UAE@XZ				; CSPLogout::~CSPLogout
; Function compile flags: /Ogty
;	COMDAT ??_GCSPLogout@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPLogout@@UAEPAXI@Z PROC NEAR			; CSPLogout::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPLogout@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L177645
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L177645:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPLogout@@UAEPAXI@Z ENDP				; CSPLogout::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPLogout@@UAE@XZ
_TEXT	SEGMENT
??1CSPLogout@@UAE@XZ PROC NEAR				; CSPLogout::~CSPLogout, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPLogout@@UAE@XZ ENDP				; CSPLogout::~CSPLogout
_TEXT	ENDS
PUBLIC	??0CSPRoute@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPRoute::CSPRoute
PUBLIC	?GetNumParam@CSPRoute@@UAEHXZ			; CSPRoute::GetNumParam
PUBLIC	?BindParameters@CSPRoute@@UAEFH@Z		; CSPRoute::BindParameters
PUBLIC	??_7CSPRoute@@6B@				; CSPRoute::`vftable'
PUBLIC	??_GCSPRoute@@UAEPAXI@Z				; CSPRoute::`scalar deleting destructor'
PUBLIC	??_C@_0BO@LDFDEPKD@?$HL?5?$DP?5?$DN?5CALL?5TRoute?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPRoute@@UAEPAXI@Z:NEAR			; CSPRoute::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T177828 DD	0ffffffffH
	DD	FLAT:$L177654
$T177825 DD	019930520H
	DD	01H
	DD	FLAT:$T177828
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BO@LDFDEPKD@?$HL?5?$DP?5?$DN?5CALL?5TRoute?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BO@LDFDEPKD@?$HL?5?$DP?5?$DN?5CALL?5TRoute?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' ? = CALL TRoute(?,?,?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPRoute@@6B@
CONST	SEGMENT
??_7CSPRoute@@6B@ DD FLAT:??_ECSPRoute@@UAEPAXI@Z	; CSPRoute::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPRoute@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPRoute@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPRoute@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T177653 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPRoute@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPRoute::CSPRoute, COMDAT
; _this$ = ecx

; 4141 : DEF_QUERY( CSPRoute, _T("{ ? = CALL TRoute(?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPRoute@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BO@LDFDEPKD@?$HL?5?$DP?5?$DN?5CALL?5TRoute?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T177653[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPRoute@@6B@
  0005e	72 0d		 jb	 SHORT $L177826
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L177826:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L177654:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPRoute@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T177825
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPRoute@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPRoute::CSPRoute
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPRoute@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPRoute@@UAEHXZ PROC NEAR			; CSPRoute::GetNumParam, COMDAT
; _this$ = ecx

; 4143 : BEGIN_PARAM(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumParam@CSPRoute@@UAEHXZ ENDP			; CSPRoute::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPRoute@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPRoute@@UAEFH@Z PROC NEAR		; CSPRoute::BindParameters, COMDAT
; _this$ = ecx

; 4143 : BEGIN_PARAM(6)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4144 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L135359
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L135359
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 c2 00 00
	00		 jne	 $L135354
$L135359:

; 4145 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bGroupID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L135360
  00040	8d 8e 64 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3172]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135360:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L135361
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 97 00 00
	00		 jne	 $L135354
$L135361:

; 4146 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bServerID)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L135362
  0006b	8d 96 63 0c 00
	00		 lea	 edx, DWORD PTR [esi+3171]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135362:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 06		 je	 SHORT $L135363
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 70		 jne	 SHORT $L135354
$L135363:

; 4147 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bType)

  00088	3b fb		 cmp	 edi, ebx
  0008a	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00090	75 12		 jne	 SHORT $L135364
  00092	8d 86 65 0c 00
	00		 lea	 eax, DWORD PTR [esi+3173]
  00098	50		 push	 eax
  00099	6a 04		 push	 4
  0009b	6a 01		 push	 1
  0009d	8b ce		 mov	 ecx, esi
  0009f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135364:
  000a4	66 3b c3	 cmp	 ax, bx
  000a7	74 06		 je	 SHORT $L135365
  000a9	66 3d 01 00	 cmp	 ax, 1
  000ad	75 49		 jne	 SHORT $L135354
$L135365:

; 4148 : 	PARAM_ENTRY_STR( SQL_PARAM_OUTPUT, m_szIPAddr)

  000af	3b fb		 cmp	 edi, ebx
  000b1	c7 86 20 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2080], -3 ; fffffffdH
  000bb	75 14		 jne	 SHORT $L135366
  000bd	6a 33		 push	 51			; 00000033H
  000bf	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  000c5	51		 push	 ecx
  000c6	6a 05		 push	 5
  000c8	6a 04		 push	 4
  000ca	8b ce		 mov	 ecx, esi
  000cc	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L135366:
  000d1	66 3b c3	 cmp	 ax, bx
  000d4	74 06		 je	 SHORT $L135367
  000d6	66 3d 01 00	 cmp	 ax, 1
  000da	75 1c		 jne	 SHORT $L135354
$L135367:

; 4149 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_wPort)

  000dc	3b fb		 cmp	 edi, ebx
  000de	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000e4	75 12		 jne	 SHORT $L135354
  000e6	8d 96 66 0c 00
	00		 lea	 edx, DWORD PTR [esi+3174]
  000ec	52		 push	 edx
  000ed	6a 06		 push	 6
  000ef	6a 04		 push	 4
  000f1	8b ce		 mov	 ecx, esi
  000f3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135354:
  000f8	5f		 pop	 edi
  000f9	5e		 pop	 esi
  000fa	5b		 pop	 ebx

; 4150 : END_PARAM()

  000fb	c2 04 00	 ret	 4
?BindParameters@CSPRoute@@UAEFH@Z ENDP			; CSPRoute::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPRoute@@UAE@XZ				; CSPRoute::~CSPRoute
; Function compile flags: /Ogty
;	COMDAT ??_GCSPRoute@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPRoute@@UAEPAXI@Z PROC NEAR			; CSPRoute::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPRoute@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L177840
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L177840:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPRoute@@UAEPAXI@Z ENDP				; CSPRoute::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPRoute@@UAE@XZ
_TEXT	SEGMENT
??1CSPRoute@@UAE@XZ PROC NEAR				; CSPRoute::~CSPRoute, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPRoute@@UAE@XZ ENDP				; CSPRoute::~CSPRoute
_TEXT	ENDS
PUBLIC	??0CSPSaveChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveChar::CSPSaveChar
PUBLIC	?GetNumParam@CSPSaveChar@@UAEHXZ		; CSPSaveChar::GetNumParam
PUBLIC	?BindParameters@CSPSaveChar@@UAEFH@Z		; CSPSaveChar::BindParameters
PUBLIC	??_7CSPSaveChar@@6B@				; CSPSaveChar::`vftable'
PUBLIC	??_GCSPSaveChar@@UAEPAXI@Z			; CSPSaveChar::`scalar deleting destructor'
PUBLIC	??_C@_0EL@FIGPJBOC@?$HL?5?$DP?5?$DN?5CALL?5TSaveChar?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPSaveChar@@UAEPAXI@Z:NEAR			; CSPSaveChar::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T178023 DD	0ffffffffH
	DD	FLAT:$L177849
$T178020 DD	019930520H
	DD	01H
	DD	FLAT:$T178023
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EL@FIGPJBOC@?$HL?5?$DP?5?$DN?5CALL?5TSaveChar?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0EL@FIGPJBOC@?$HL?5?$DP?5?$DN?5CALL?5TSaveChar?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	' ? = CALL TSaveChar(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?'
	DB	',?,?,?,?,?)}', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveChar@@6B@
CONST	SEGMENT
??_7CSPSaveChar@@6B@ DD FLAT:??_ECSPSaveChar@@UAEPAXI@Z	; CSPSaveChar::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveChar@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveChar@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T177848 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveChar::CSPSaveChar, COMDAT
; _this$ = ecx

; 4192 : DEF_QUERY( CSPSaveChar, _T("{ ? = CALL TSaveChar(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EL@FIGPJBOC@?$HL?5?$DP?5?$DN?5CALL?5TSaveChar?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T177848[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveChar@@6B@
  0005e	72 0d		 jb	 SHORT $L178021
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L178021:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L177849:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T178020
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveChar::CSPSaveChar
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveChar@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveChar@@UAEHXZ PROC NEAR		; CSPSaveChar::GetNumParam, COMDAT
; _this$ = ecx

; 4194 : BEGIN_PARAM(27)

  00000	b8 1b 00 00 00	 mov	 eax, 27			; 0000001bH
  00005	c3		 ret	 0
?GetNumParam@CSPSaveChar@@UAEHXZ ENDP			; CSPSaveChar::GetNumParam
_TEXT	ENDS
EXTRN	?BindParam@CSqlBase@@QAEFFFPAM@Z:NEAR		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParameters@CSPSaveChar@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveChar@@UAEFH@Z PROC NEAR		; CSPSaveChar::BindParameters, COMDAT
; _this$ = ecx

; 4194 : BEGIN_PARAM(27)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4195 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L135438
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L135438
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 43 04 00
	00		 jne	 $L135433
$L135438:

; 4196 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L135439
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135439:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L135440
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 18 04 00
	00		 jne	 $L135433
$L135440:

; 4197 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bStartAct)  

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L135441
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135441:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L135442
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 ed 03 00
	00		 jne	 $L135433
$L135442:

; 4198 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bLevel)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L135443
  00096	8d 86 60 0c 00
	00		 lea	 eax, DWORD PTR [esi+3168]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135443:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 0a		 je	 SHORT $L135444
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 c2 03 00
	00		 jne	 $L135433
$L135444:

; 4199 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bHelmetHide)

  000b7	3b fb		 cmp	 edi, ebx
  000b9	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bf	75 12		 jne	 SHORT $L135445
  000c1	8d 8e 35 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3125]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 01		 push	 1
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135445:
  000d3	66 3b c3	 cmp	 ax, bx
  000d6	74 0a		 je	 SHORT $L135446
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 97 03 00
	00		 jne	 $L135433
$L135446:

; 4200 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwGold)

  000e2	3b fb		 cmp	 edi, ebx
  000e4	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000ea	75 12		 jne	 SHORT $L135447
  000ec	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 01		 push	 1
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135447:
  000fe	66 3b c3	 cmp	 ax, bx
  00101	74 0a		 je	 SHORT $L135448
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	0f 85 6c 03 00
	00		 jne	 $L135433
$L135448:

; 4201 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwSilver)

  0010d	3b fb		 cmp	 edi, ebx
  0010f	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00115	75 12		 jne	 SHORT $L135449
  00117	8d 86 3c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3132]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 01		 push	 1
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135449:
  00129	66 3b c3	 cmp	 ax, bx
  0012c	74 0a		 je	 SHORT $L135450
  0012e	66 3d 01 00	 cmp	 ax, 1
  00132	0f 85 41 03 00
	00		 jne	 $L135433
$L135450:

; 4202 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCooper)

  00138	3b fb		 cmp	 edi, ebx
  0013a	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  00140	75 12		 jne	 SHORT $L135451
  00142	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  00148	51		 push	 ecx
  00149	6a 08		 push	 8
  0014b	6a 01		 push	 1
  0014d	8b ce		 mov	 ecx, esi
  0014f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135451:
  00154	66 3b c3	 cmp	 ax, bx
  00157	74 0a		 je	 SHORT $L135452
  00159	66 3d 01 00	 cmp	 ax, 1
  0015d	0f 85 16 03 00
	00		 jne	 $L135433
$L135452:

; 4203 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bGuildLeave)

  00163	3b fb		 cmp	 edi, ebx
  00165	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  0016b	75 12		 jne	 SHORT $L135453
  0016d	8d 96 44 0c 00
	00		 lea	 edx, DWORD PTR [esi+3140]
  00173	52		 push	 edx
  00174	6a 09		 push	 9
  00176	6a 01		 push	 1
  00178	8b ce		 mov	 ecx, esi
  0017a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135453:
  0017f	66 3b c3	 cmp	 ax, bx
  00182	74 0a		 je	 SHORT $L135454
  00184	66 3d 01 00	 cmp	 ax, 1
  00188	0f 85 eb 02 00
	00		 jne	 $L135433
$L135454:

; 4204 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwGuildLeaveTime)

  0018e	3b fb		 cmp	 edi, ebx
  00190	89 9e 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebx
  00196	75 12		 jne	 SHORT $L135455
  00198	8d 86 48 0c 00
	00		 lea	 eax, DWORD PTR [esi+3144]
  0019e	50		 push	 eax
  0019f	6a 0a		 push	 10			; 0000000aH
  001a1	6a 01		 push	 1
  001a3	8b ce		 mov	 ecx, esi
  001a5	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135455:
  001aa	66 3b c3	 cmp	 ax, bx
  001ad	74 0a		 je	 SHORT $L135456
  001af	66 3d 01 00	 cmp	 ax, 1
  001b3	0f 85 c0 02 00
	00		 jne	 $L135433
$L135456:

; 4205 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwEXP)

  001b9	3b fb		 cmp	 edi, ebx
  001bb	89 9e 38 08 00
	00		 mov	 DWORD PTR [esi+2104], ebx
  001c1	75 12		 jne	 SHORT $L135457
  001c3	8d 8e 4c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3148]
  001c9	51		 push	 ecx
  001ca	6a 0b		 push	 11			; 0000000bH
  001cc	6a 01		 push	 1
  001ce	8b ce		 mov	 ecx, esi
  001d0	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135457:
  001d5	66 3b c3	 cmp	 ax, bx
  001d8	74 0a		 je	 SHORT $L135458
  001da	66 3d 01 00	 cmp	 ax, 1
  001de	0f 85 95 02 00
	00		 jne	 $L135433
$L135458:

; 4206 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwHP)

  001e4	3b fb		 cmp	 edi, ebx
  001e6	89 9e 3c 08 00
	00		 mov	 DWORD PTR [esi+2108], ebx
  001ec	75 12		 jne	 SHORT $L135459
  001ee	8d 96 50 0c 00
	00		 lea	 edx, DWORD PTR [esi+3152]
  001f4	52		 push	 edx
  001f5	6a 0c		 push	 12			; 0000000cH
  001f7	6a 01		 push	 1
  001f9	8b ce		 mov	 ecx, esi
  001fb	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135459:
  00200	66 3b c3	 cmp	 ax, bx
  00203	74 0a		 je	 SHORT $L135460
  00205	66 3d 01 00	 cmp	 ax, 1
  00209	0f 85 6a 02 00
	00		 jne	 $L135433
$L135460:

; 4207 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwMP)

  0020f	3b fb		 cmp	 edi, ebx
  00211	89 9e 40 08 00
	00		 mov	 DWORD PTR [esi+2112], ebx
  00217	75 12		 jne	 SHORT $L135461
  00219	8d 86 54 0c 00
	00		 lea	 eax, DWORD PTR [esi+3156]
  0021f	50		 push	 eax
  00220	6a 0d		 push	 13			; 0000000dH
  00222	6a 01		 push	 1
  00224	8b ce		 mov	 ecx, esi
  00226	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135461:
  0022b	66 3b c3	 cmp	 ax, bx
  0022e	74 0a		 je	 SHORT $L135462
  00230	66 3d 01 00	 cmp	 ax, 1
  00234	0f 85 3f 02 00
	00		 jne	 $L135433
$L135462:

; 4208 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wSkillPoint)

  0023a	3b fb		 cmp	 edi, ebx
  0023c	89 9e 44 08 00
	00		 mov	 DWORD PTR [esi+2116], ebx
  00242	75 12		 jne	 SHORT $L135463
  00244	8d 8e 58 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3160]
  0024a	51		 push	 ecx
  0024b	6a 0e		 push	 14			; 0000000eH
  0024d	6a 01		 push	 1
  0024f	8b ce		 mov	 ecx, esi
  00251	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135463:
  00256	66 3b c3	 cmp	 ax, bx
  00259	74 0a		 je	 SHORT $L135464
  0025b	66 3d 01 00	 cmp	 ax, 1
  0025f	0f 85 14 02 00
	00		 jne	 $L135433
$L135464:

; 4209 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwRegion)

  00265	3b fb		 cmp	 edi, ebx
  00267	89 9e 48 08 00
	00		 mov	 DWORD PTR [esi+2120], ebx
  0026d	75 12		 jne	 SHORT $L135465
  0026f	8d 96 5c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3164]
  00275	52		 push	 edx
  00276	6a 0f		 push	 15			; 0000000fH
  00278	6a 01		 push	 1
  0027a	8b ce		 mov	 ecx, esi
  0027c	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135465:
  00281	66 3b c3	 cmp	 ax, bx
  00284	74 0a		 je	 SHORT $L135466
  00286	66 3d 01 00	 cmp	 ax, 1
  0028a	0f 85 e9 01 00
	00		 jne	 $L135433
$L135466:

; 4210 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wMapID)

  00290	3b fb		 cmp	 edi, ebx
  00292	89 9e 4c 08 00
	00		 mov	 DWORD PTR [esi+2124], ebx
  00298	75 12		 jne	 SHORT $L135467
  0029a	8d 86 6a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3178]
  002a0	50		 push	 eax
  002a1	6a 10		 push	 16			; 00000010H
  002a3	6a 01		 push	 1
  002a5	8b ce		 mov	 ecx, esi
  002a7	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135467:
  002ac	66 3b c3	 cmp	 ax, bx
  002af	74 0a		 je	 SHORT $L135468
  002b1	66 3d 01 00	 cmp	 ax, 1
  002b5	0f 85 be 01 00
	00		 jne	 $L135433
$L135468:

; 4211 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wSpawnID)

  002bb	3b fb		 cmp	 edi, ebx
  002bd	89 9e 50 08 00
	00		 mov	 DWORD PTR [esi+2128], ebx
  002c3	75 12		 jne	 SHORT $L135469
  002c5	8d 8e 62 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3170]
  002cb	51		 push	 ecx
  002cc	6a 11		 push	 17			; 00000011H
  002ce	6a 01		 push	 1
  002d0	8b ce		 mov	 ecx, esi
  002d2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135469:
  002d7	66 3b c3	 cmp	 ax, bx
  002da	74 0a		 je	 SHORT $L135470
  002dc	66 3d 01 00	 cmp	 ax, 1
  002e0	0f 85 93 01 00
	00		 jne	 $L135433
$L135470:

; 4212 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wLastSpawnID)

  002e6	3b fb		 cmp	 edi, ebx
  002e8	89 9e 54 08 00
	00		 mov	 DWORD PTR [esi+2132], ebx
  002ee	75 12		 jne	 SHORT $L135471
  002f0	8d 96 64 0c 00
	00		 lea	 edx, DWORD PTR [esi+3172]
  002f6	52		 push	 edx
  002f7	6a 12		 push	 18			; 00000012H
  002f9	6a 01		 push	 1
  002fb	8b ce		 mov	 ecx, esi
  002fd	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135471:
  00302	66 3b c3	 cmp	 ax, bx
  00305	74 0a		 je	 SHORT $L135472
  00307	66 3d 01 00	 cmp	 ax, 1
  0030b	0f 85 68 01 00
	00		 jne	 $L135433
$L135472:

; 4213 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wTemptedMon)

  00311	3b fb		 cmp	 edi, ebx
  00313	89 9e 58 08 00
	00		 mov	 DWORD PTR [esi+2136], ebx
  00319	75 12		 jne	 SHORT $L135473
  0031b	8d 86 66 0c 00
	00		 lea	 eax, DWORD PTR [esi+3174]
  00321	50		 push	 eax
  00322	6a 13		 push	 19			; 00000013H
  00324	6a 01		 push	 1
  00326	8b ce		 mov	 ecx, esi
  00328	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135473:
  0032d	66 3b c3	 cmp	 ax, bx
  00330	74 0a		 je	 SHORT $L135474
  00332	66 3d 01 00	 cmp	 ax, 1
  00336	0f 85 3d 01 00
	00		 jne	 $L135433
$L135474:

; 4214 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bAftermath)

  0033c	3b fb		 cmp	 edi, ebx
  0033e	89 9e 5c 08 00
	00		 mov	 DWORD PTR [esi+2140], ebx
  00344	75 12		 jne	 SHORT $L135475
  00346	8d 8e 68 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3176]
  0034c	51		 push	 ecx
  0034d	6a 14		 push	 20			; 00000014H
  0034f	6a 01		 push	 1
  00351	8b ce		 mov	 ecx, esi
  00353	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135475:
  00358	66 3b c3	 cmp	 ax, bx
  0035b	74 0a		 je	 SHORT $L135476
  0035d	66 3d 01 00	 cmp	 ax, 1
  00361	0f 85 12 01 00
	00		 jne	 $L135433
$L135476:

; 4215 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_fPosX)

  00367	3b fb		 cmp	 edi, ebx
  00369	89 9e 60 08 00
	00		 mov	 DWORD PTR [esi+2144], ebx
  0036f	75 12		 jne	 SHORT $L135477
  00371	8d 96 6c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3180]
  00377	52		 push	 edx
  00378	6a 15		 push	 21			; 00000015H
  0037a	6a 01		 push	 1
  0037c	8b ce		 mov	 ecx, esi
  0037e	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAM@Z ; CSqlBase::BindParam
$L135477:
  00383	66 3b c3	 cmp	 ax, bx
  00386	74 0a		 je	 SHORT $L135478
  00388	66 3d 01 00	 cmp	 ax, 1
  0038c	0f 85 e7 00 00
	00		 jne	 $L135433
$L135478:

; 4216 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_fPosY)

  00392	3b fb		 cmp	 edi, ebx
  00394	89 9e 64 08 00
	00		 mov	 DWORD PTR [esi+2148], ebx
  0039a	75 12		 jne	 SHORT $L135479
  0039c	8d 86 70 0c 00
	00		 lea	 eax, DWORD PTR [esi+3184]
  003a2	50		 push	 eax
  003a3	6a 16		 push	 22			; 00000016H
  003a5	6a 01		 push	 1
  003a7	8b ce		 mov	 ecx, esi
  003a9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAM@Z ; CSqlBase::BindParam
$L135479:
  003ae	66 3b c3	 cmp	 ax, bx
  003b1	74 0a		 je	 SHORT $L135480
  003b3	66 3d 01 00	 cmp	 ax, 1
  003b7	0f 85 bc 00 00
	00		 jne	 $L135433
$L135480:

; 4217 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_fPosZ)

  003bd	3b fb		 cmp	 edi, ebx
  003bf	89 9e 68 08 00
	00		 mov	 DWORD PTR [esi+2152], ebx
  003c5	75 12		 jne	 SHORT $L135481
  003c7	8d 8e 74 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3188]
  003cd	51		 push	 ecx
  003ce	6a 17		 push	 23			; 00000017H
  003d0	6a 01		 push	 1
  003d2	8b ce		 mov	 ecx, esi
  003d4	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAM@Z ; CSqlBase::BindParam
$L135481:
  003d9	66 3b c3	 cmp	 ax, bx
  003dc	74 0a		 je	 SHORT $L135482
  003de	66 3d 01 00	 cmp	 ax, 1
  003e2	0f 85 91 00 00
	00		 jne	 $L135433
$L135482:

; 4218 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wDIR)

  003e8	3b fb		 cmp	 edi, ebx
  003ea	89 9e 6c 08 00
	00		 mov	 DWORD PTR [esi+2156], ebx
  003f0	75 12		 jne	 SHORT $L135483
  003f2	8d 96 78 0c 00
	00		 lea	 edx, DWORD PTR [esi+3192]
  003f8	52		 push	 edx
  003f9	6a 18		 push	 24			; 00000018H
  003fb	6a 01		 push	 1
  003fd	8b ce		 mov	 ecx, esi
  003ff	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135483:
  00404	66 3b c3	 cmp	 ax, bx
  00407	74 06		 je	 SHORT $L135484
  00409	66 3d 01 00	 cmp	 ax, 1
  0040d	75 6a		 jne	 SHORT $L135433
$L135484:

; 4219 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwPcBangTime)

  0040f	3b fb		 cmp	 edi, ebx
  00411	89 9e 70 08 00
	00		 mov	 DWORD PTR [esi+2160], ebx
  00417	75 12		 jne	 SHORT $L135485
  00419	8d 86 7c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3196]
  0041f	50		 push	 eax
  00420	6a 19		 push	 25			; 00000019H
  00422	6a 01		 push	 1
  00424	8b ce		 mov	 ecx, esi
  00426	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135485:
  0042b	66 3b c3	 cmp	 ax, bx
  0042e	74 06		 je	 SHORT $L135486
  00430	66 3d 01 00	 cmp	 ax, 1
  00434	75 43		 jne	 SHORT $L135433
$L135486:

; 4220 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bPcBangItemCnt)

  00436	3b fb		 cmp	 edi, ebx
  00438	89 9e 74 08 00
	00		 mov	 DWORD PTR [esi+2164], ebx
  0043e	75 12		 jne	 SHORT $L135487
  00440	8d 8e 80 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3200]
  00446	51		 push	 ecx
  00447	6a 1a		 push	 26			; 0000001aH
  00449	6a 01		 push	 1
  0044b	8b ce		 mov	 ecx, esi
  0044d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135487:
  00452	66 3b c3	 cmp	 ax, bx
  00455	74 06		 je	 SHORT $L135488
  00457	66 3d 01 00	 cmp	 ax, 1
  0045b	75 1c		 jne	 SHORT $L135433
$L135488:

; 4221 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwLastDestination)

  0045d	3b fb		 cmp	 edi, ebx
  0045f	89 9e 78 08 00
	00		 mov	 DWORD PTR [esi+2168], ebx
  00465	75 12		 jne	 SHORT $L135433
  00467	8d 96 84 0c 00
	00		 lea	 edx, DWORD PTR [esi+3204]
  0046d	52		 push	 edx
  0046e	6a 1b		 push	 27			; 0000001bH
  00470	6a 01		 push	 1
  00472	8b ce		 mov	 ecx, esi
  00474	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135433:
  00479	5f		 pop	 edi
  0047a	5e		 pop	 esi
  0047b	5b		 pop	 ebx

; 4222 : END_PARAM()

  0047c	c2 04 00	 ret	 4
?BindParameters@CSPSaveChar@@UAEFH@Z ENDP		; CSPSaveChar::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveChar@@UAE@XZ				; CSPSaveChar::~CSPSaveChar
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveChar@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveChar@@UAEPAXI@Z PROC NEAR			; CSPSaveChar::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveChar@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L178035
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L178035:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveChar@@UAEPAXI@Z ENDP				; CSPSaveChar::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveChar@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveChar@@UAE@XZ PROC NEAR			; CSPSaveChar::~CSPSaveChar, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveChar@@UAE@XZ ENDP				; CSPSaveChar::~CSPSaveChar
_TEXT	ENDS
PUBLIC	??0CSPSaveInven@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveInven::CSPSaveInven
PUBLIC	?GetNumParam@CSPSaveInven@@UAEHXZ		; CSPSaveInven::GetNumParam
PUBLIC	?BindParameters@CSPSaveInven@@UAEFH@Z		; CSPSaveInven::BindParameters
PUBLIC	??_7CSPSaveInven@@6B@				; CSPSaveInven::`vftable'
PUBLIC	??_GCSPSaveInven@@UAEPAXI@Z			; CSPSaveInven::`scalar deleting destructor'
PUBLIC	??_C@_0CC@NHCIBNDE@?$HL?5?$DP?5?$DN?5CALL?5TSaveInven?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ@ ; `string'
EXTRN	??_ECSPSaveInven@@UAEPAXI@Z:NEAR		; CSPSaveInven::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T178218 DD	0ffffffffH
	DD	FLAT:$L178044
$T178215 DD	019930520H
	DD	01H
	DD	FLAT:$T178218
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CC@NHCIBNDE@?$HL?5?$DP?5?$DN?5CALL?5TSaveInven?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ@
CONST	SEGMENT
??_C@_0CC@NHCIBNDE@?$HL?5?$DP?5?$DN?5CALL?5TSaveInven?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ@ DB '{'
	DB	' ? = CALL TSaveInven(?,?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveInven@@6B@
CONST	SEGMENT
??_7CSPSaveInven@@6B@ DD FLAT:??_ECSPSaveInven@@UAEPAXI@Z ; CSPSaveInven::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveInven@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveInven@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveInven@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T178043 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveInven@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveInven::CSPSaveInven, COMDAT
; _this$ = ecx

; 4236 : DEF_QUERY( CSPSaveInven, _T("{ ? = CALL TSaveInven(?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveInven@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CC@NHCIBNDE@?$HL?5?$DP?5?$DN?5CALL?5TSaveInven?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T178043[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveInven@@6B@
  0005e	72 0d		 jb	 SHORT $L178216
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L178216:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L178044:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveInven@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T178215
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveInven@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveInven::CSPSaveInven
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveInven@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveInven@@UAEHXZ PROC NEAR		; CSPSaveInven::GetNumParam, COMDAT
; _this$ = ecx

; 4238 : BEGIN_PARAM(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumParam@CSPSaveInven@@UAEHXZ ENDP			; CSPSaveInven::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveInven@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveInven@@UAEFH@Z PROC NEAR		; CSPSaveInven::BindParameters, COMDAT
; _this$ = ecx

; 4238 : BEGIN_PARAM(6)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4239 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L135538
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L135538
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 bc 00 00
	00		 jne	 $L135533
$L135538:

; 4240 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L135539
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135539:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L135540
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 91 00 00
	00		 jne	 $L135533
$L135540:

; 4241 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bInvenID)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L135541
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135541:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 06		 je	 SHORT $L135542
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 6a		 jne	 SHORT $L135533
$L135542:

; 4242 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wItemID)

  00088	3b fb		 cmp	 edi, ebx
  0008a	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00090	75 12		 jne	 SHORT $L135543
  00092	8d 86 36 0c 00
	00		 lea	 eax, DWORD PTR [esi+3126]
  00098	50		 push	 eax
  00099	6a 04		 push	 4
  0009b	6a 01		 push	 1
  0009d	8b ce		 mov	 ecx, esi
  0009f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135543:
  000a4	66 3b c3	 cmp	 ax, bx
  000a7	74 06		 je	 SHORT $L135544
  000a9	66 3d 01 00	 cmp	 ax, 1
  000ad	75 43		 jne	 SHORT $L135533
$L135544:

; 4243 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dEndTime)

  000af	3b fb		 cmp	 edi, ebx
  000b1	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b7	75 12		 jne	 SHORT $L135545
  000b9	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  000bf	51		 push	 ecx
  000c0	6a 05		 push	 5
  000c2	6a 01		 push	 1
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L135545:
  000cb	66 3b c3	 cmp	 ax, bx
  000ce	74 06		 je	 SHORT $L135546
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	75 1c		 jne	 SHORT $L135533
$L135546:

; 4244 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bELD)

  000d6	3b fb		 cmp	 edi, ebx
  000d8	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000de	75 12		 jne	 SHORT $L135533
  000e0	8d 96 48 0c 00
	00		 lea	 edx, DWORD PTR [esi+3144]
  000e6	52		 push	 edx
  000e7	6a 06		 push	 6
  000e9	6a 01		 push	 1
  000eb	8b ce		 mov	 ecx, esi
  000ed	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135533:
  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx

; 4245 : END_PARAM()

  000f5	c2 04 00	 ret	 4
?BindParameters@CSPSaveInven@@UAEFH@Z ENDP		; CSPSaveInven::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveInven@@UAE@XZ				; CSPSaveInven::~CSPSaveInven
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveInven@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveInven@@UAEPAXI@Z PROC NEAR			; CSPSaveInven::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveInven@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L178230
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L178230:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveInven@@UAEPAXI@Z ENDP			; CSPSaveInven::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveInven@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveInven@@UAE@XZ PROC NEAR			; CSPSaveInven::~CSPSaveInven, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveInven@@UAE@XZ ENDP				; CSPSaveInven::~CSPSaveInven
_TEXT	ENDS
PUBLIC	??0CSPLogSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPLogSkill::CSPLogSkill
PUBLIC	?GetNumParam@CSPLogSkill@@UAEHXZ		; CSPLogSkill::GetNumParam
PUBLIC	?BindParameters@CSPLogSkill@@UAEFH@Z		; CSPLogSkill::BindParameters
PUBLIC	??_7CSPLogSkill@@6B@				; CSPLogSkill::`vftable'
PUBLIC	??_GCSPLogSkill@@UAEPAXI@Z			; CSPLogSkill::`scalar deleting destructor'
PUBLIC	??_C@_0BP@BJEMNMNE@?$HL?5CALL?5TLogSkill?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPLogSkill@@UAEPAXI@Z:NEAR			; CSPLogSkill::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T178413 DD	0ffffffffH
	DD	FLAT:$L178239
$T178410 DD	019930520H
	DD	01H
	DD	FLAT:$T178413
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BP@BJEMNMNE@?$HL?5CALL?5TLogSkill?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BP@BJEMNMNE@?$HL?5CALL?5TLogSkill?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' CALL TLogSkill(?,?,?,?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPLogSkill@@6B@
CONST	SEGMENT
??_7CSPLogSkill@@6B@ DD FLAT:??_ECSPLogSkill@@UAEPAXI@Z	; CSPLogSkill::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPLogSkill@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPLogSkill@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPLogSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T178238 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPLogSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPLogSkill::CSPLogSkill, COMDAT
; _this$ = ecx

; 4259 : DEF_QUERY( CSPLogSkill, _T("{ CALL TLogSkill(?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPLogSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@BJEMNMNE@?$HL?5CALL?5TLogSkill?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T178238[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPLogSkill@@6B@
  0005e	72 0d		 jb	 SHORT $L178411
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L178411:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L178239:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPLogSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T178410
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPLogSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPLogSkill::CSPLogSkill
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPLogSkill@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPLogSkill@@UAEHXZ PROC NEAR		; CSPLogSkill::GetNumParam, COMDAT
; _this$ = ecx

; 4261 : BEGIN_PARAM(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumParam@CSPLogSkill@@UAEHXZ ENDP			; CSPLogSkill::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPLogSkill@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPLogSkill@@UAEFH@Z PROC NEAR		; CSPLogSkill::BindParameters, COMDAT
; _this$ = ecx

; 4261 : BEGIN_PARAM(6)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4262 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L135596
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L135596
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 bc 00 00
	00		 jne	 $L135591
$L135596:

; 4263 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwGold)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L135597
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135597:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L135598
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 91 00 00
	00		 jne	 $L135591
$L135598:

; 4264 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwSilver)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L135599
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135599:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 06		 je	 SHORT $L135600
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 6a		 jne	 SHORT $L135591
$L135600:

; 4265 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCooper)

  00088	3b fb		 cmp	 edi, ebx
  0008a	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00090	75 12		 jne	 SHORT $L135601
  00092	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00098	50		 push	 eax
  00099	6a 04		 push	 4
  0009b	6a 01		 push	 1
  0009d	8b ce		 mov	 ecx, esi
  0009f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135601:
  000a4	66 3b c3	 cmp	 ax, bx
  000a7	74 06		 je	 SHORT $L135602
  000a9	66 3d 01 00	 cmp	 ax, 1
  000ad	75 43		 jne	 SHORT $L135591
$L135602:

; 4266 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wSkill)

  000af	3b fb		 cmp	 edi, ebx
  000b1	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b7	75 12		 jne	 SHORT $L135603
  000b9	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  000bf	51		 push	 ecx
  000c0	6a 05		 push	 5
  000c2	6a 01		 push	 1
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135603:
  000cb	66 3b c3	 cmp	 ax, bx
  000ce	74 06		 je	 SHORT $L135604
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	75 1c		 jne	 SHORT $L135591
$L135604:

; 4267 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bLevel)

  000d6	3b fb		 cmp	 edi, ebx
  000d8	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000de	75 12		 jne	 SHORT $L135591
  000e0	8d 96 3e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3134]
  000e6	52		 push	 edx
  000e7	6a 06		 push	 6
  000e9	6a 01		 push	 1
  000eb	8b ce		 mov	 ecx, esi
  000ed	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135591:
  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx

; 4268 : END_PARAM()

  000f5	c2 04 00	 ret	 4
?BindParameters@CSPLogSkill@@UAEFH@Z ENDP		; CSPLogSkill::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPLogSkill@@UAE@XZ				; CSPLogSkill::~CSPLogSkill
; Function compile flags: /Ogty
;	COMDAT ??_GCSPLogSkill@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPLogSkill@@UAEPAXI@Z PROC NEAR			; CSPLogSkill::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPLogSkill@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L178425
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L178425:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPLogSkill@@UAEPAXI@Z ENDP				; CSPLogSkill::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPLogSkill@@UAE@XZ
_TEXT	SEGMENT
??1CSPLogSkill@@UAE@XZ PROC NEAR			; CSPLogSkill::~CSPLogSkill, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPLogSkill@@UAE@XZ ENDP				; CSPLogSkill::~CSPLogSkill
_TEXT	ENDS
PUBLIC	??0CSPSaveItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveItem::CSPSaveItem
PUBLIC	?GetNumParam@CSPSaveItem@@UAEHXZ		; CSPSaveItem::GetNumParam
PUBLIC	?BindParameters@CSPSaveItem@@UAEFH@Z		; CSPSaveItem::BindParameters
PUBLIC	??_7CSPSaveItem@@6B@				; CSPSaveItem::`vftable'
PUBLIC	??_GCSPSaveItem@@UAEPAXI@Z			; CSPSaveItem::`scalar deleting destructor'
PUBLIC	??_C@_0FJ@FFNPGGJI@?$HL?5?$DP?5?$DN?5CALL?5TSaveItem?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPSaveItem@@UAEPAXI@Z:NEAR			; CSPSaveItem::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T178608 DD	0ffffffffH
	DD	FLAT:$L178434
$T178605 DD	019930520H
	DD	01H
	DD	FLAT:$T178608
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FJ@FFNPGGJI@?$HL?5?$DP?5?$DN?5CALL?5TSaveItem?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0FJ@FFNPGGJI@?$HL?5?$DP?5?$DN?5CALL?5TSaveItem?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	' ? = CALL TSaveItem(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?'
	DB	',?,?,?,?,?,?,?,?,?,?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveItem@@6B@
CONST	SEGMENT
??_7CSPSaveItem@@6B@ DD FLAT:??_ECSPSaveItem@@UAEPAXI@Z	; CSPSaveItem::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveItem@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveItem@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T178433 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveItem::CSPSaveItem, COMDAT
; _this$ = ecx

; 4282 : DEF_QUERY( CSPSaveItem, _T("{ ? = CALL TSaveItem(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FJ@FFNPGGJI@?$HL?5?$DP?5?$DN?5CALL?5TSaveItem?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T178433[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveItem@@6B@
  0005e	72 0d		 jb	 SHORT $L178606
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L178606:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L178434:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T178605
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveItem::CSPSaveItem
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveItem@@UAEHXZ PROC NEAR		; CSPSaveItem::GetNumParam, COMDAT
; _this$ = ecx

; 4284 : BEGIN_PARAM(34)

  00000	b8 22 00 00 00	 mov	 eax, 34			; 00000022H
  00005	c3		 ret	 0
?GetNumParam@CSPSaveItem@@UAEHXZ ENDP			; CSPSaveItem::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveItem@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveItem@@UAEFH@Z PROC NEAR		; CSPSaveItem::BindParameters, COMDAT
; _this$ = ecx

; 4284 : BEGIN_PARAM(34)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4285 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L135654
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L135654
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 70 05 00
	00		 jne	 $L135649
$L135654:

; 4286 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dlID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L135655
  00040	8d 8e 40 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3136]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
$L135655:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L135656
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 45 05 00
	00		 jne	 $L135649
$L135656:

; 4287 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bStorageType)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L135657
  0006b	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135657:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L135658
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 1a 05 00
	00		 jne	 $L135649
$L135658:

; 4288 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwStorageID)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L135659
  00096	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135659:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 0a		 je	 SHORT $L135660
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 ef 04 00
	00		 jne	 $L135649
$L135660:

; 4289 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bOwnerType)

  000b7	3b fb		 cmp	 edi, ebx
  000b9	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bf	75 12		 jne	 SHORT $L135661
  000c1	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 01		 push	 1
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135661:
  000d3	66 3b c3	 cmp	 ax, bx
  000d6	74 0a		 je	 SHORT $L135662
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 c4 04 00
	00		 jne	 $L135649
$L135662:

; 4290 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwOwnerID)

  000e2	3b fb		 cmp	 edi, ebx
  000e4	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000ea	75 12		 jne	 SHORT $L135663
  000ec	8d 96 3c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3132]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 01		 push	 1
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135663:
  000fe	66 3b c3	 cmp	 ax, bx
  00101	74 0a		 je	 SHORT $L135664
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	0f 85 99 04 00
	00		 jne	 $L135649
$L135664:

; 4291 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bItemID)

  0010d	3b fb		 cmp	 edi, ebx
  0010f	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00115	75 12		 jne	 SHORT $L135665
  00117	8d 86 48 0c 00
	00		 lea	 eax, DWORD PTR [esi+3144]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 01		 push	 1
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135665:
  00129	66 3b c3	 cmp	 ax, bx
  0012c	74 0a		 je	 SHORT $L135666
  0012e	66 3d 01 00	 cmp	 ax, 1
  00132	0f 85 6e 04 00
	00		 jne	 $L135649
$L135666:

; 4292 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wItemID)

  00138	3b fb		 cmp	 edi, ebx
  0013a	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  00140	75 12		 jne	 SHORT $L135667
  00142	8d 8e 4a 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3146]
  00148	51		 push	 ecx
  00149	6a 08		 push	 8
  0014b	6a 01		 push	 1
  0014d	8b ce		 mov	 ecx, esi
  0014f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135667:
  00154	66 3b c3	 cmp	 ax, bx
  00157	74 0a		 je	 SHORT $L135668
  00159	66 3d 01 00	 cmp	 ax, 1
  0015d	0f 85 43 04 00
	00		 jne	 $L135649
$L135668:

; 4293 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bLevel)

  00163	3b fb		 cmp	 edi, ebx
  00165	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  0016b	75 12		 jne	 SHORT $L135669
  0016d	8d 96 4c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3148]
  00173	52		 push	 edx
  00174	6a 09		 push	 9
  00176	6a 01		 push	 1
  00178	8b ce		 mov	 ecx, esi
  0017a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135669:
  0017f	66 3b c3	 cmp	 ax, bx
  00182	74 0a		 je	 SHORT $L135670
  00184	66 3d 01 00	 cmp	 ax, 1
  00188	0f 85 18 04 00
	00		 jne	 $L135649
$L135670:

; 4294 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bCount)

  0018e	3b fb		 cmp	 edi, ebx
  00190	89 9e 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebx
  00196	75 12		 jne	 SHORT $L135671
  00198	8d 86 4d 0c 00
	00		 lea	 eax, DWORD PTR [esi+3149]
  0019e	50		 push	 eax
  0019f	6a 0a		 push	 10			; 0000000aH
  001a1	6a 01		 push	 1
  001a3	8b ce		 mov	 ecx, esi
  001a5	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135671:
  001aa	66 3b c3	 cmp	 ax, bx
  001ad	74 0a		 je	 SHORT $L135672
  001af	66 3d 01 00	 cmp	 ax, 1
  001b3	0f 85 ed 03 00
	00		 jne	 $L135649
$L135672:

; 4295 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bGLevel)

  001b9	3b fb		 cmp	 edi, ebx
  001bb	89 9e 38 08 00
	00		 mov	 DWORD PTR [esi+2104], ebx
  001c1	75 12		 jne	 SHORT $L135673
  001c3	8d 8e 4e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3150]
  001c9	51		 push	 ecx
  001ca	6a 0b		 push	 11			; 0000000bH
  001cc	6a 01		 push	 1
  001ce	8b ce		 mov	 ecx, esi
  001d0	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135673:
  001d5	66 3b c3	 cmp	 ax, bx
  001d8	74 0a		 je	 SHORT $L135674
  001da	66 3d 01 00	 cmp	 ax, 1
  001de	0f 85 c2 03 00
	00		 jne	 $L135649
$L135674:

; 4296 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwDuraMax)

  001e4	3b fb		 cmp	 edi, ebx
  001e6	89 9e 3c 08 00
	00		 mov	 DWORD PTR [esi+2108], ebx
  001ec	75 12		 jne	 SHORT $L135675
  001ee	8d 96 50 0c 00
	00		 lea	 edx, DWORD PTR [esi+3152]
  001f4	52		 push	 edx
  001f5	6a 0c		 push	 12			; 0000000cH
  001f7	6a 01		 push	 1
  001f9	8b ce		 mov	 ecx, esi
  001fb	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135675:
  00200	66 3b c3	 cmp	 ax, bx
  00203	74 0a		 je	 SHORT $L135676
  00205	66 3d 01 00	 cmp	 ax, 1
  00209	0f 85 97 03 00
	00		 jne	 $L135649
$L135676:

; 4297 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwDuraCur)

  0020f	3b fb		 cmp	 edi, ebx
  00211	89 9e 40 08 00
	00		 mov	 DWORD PTR [esi+2112], ebx
  00217	75 12		 jne	 SHORT $L135677
  00219	8d 86 54 0c 00
	00		 lea	 eax, DWORD PTR [esi+3156]
  0021f	50		 push	 eax
  00220	6a 0d		 push	 13			; 0000000dH
  00222	6a 01		 push	 1
  00224	8b ce		 mov	 ecx, esi
  00226	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135677:
  0022b	66 3b c3	 cmp	 ax, bx
  0022e	74 0a		 je	 SHORT $L135678
  00230	66 3d 01 00	 cmp	 ax, 1
  00234	0f 85 6c 03 00
	00		 jne	 $L135649
$L135678:

; 4298 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bRefineCur)

  0023a	3b fb		 cmp	 edi, ebx
  0023c	89 9e 44 08 00
	00		 mov	 DWORD PTR [esi+2116], ebx
  00242	75 12		 jne	 SHORT $L135679
  00244	8d 8e 58 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3160]
  0024a	51		 push	 ecx
  0024b	6a 0e		 push	 14			; 0000000eH
  0024d	6a 01		 push	 1
  0024f	8b ce		 mov	 ecx, esi
  00251	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135679:
  00256	66 3b c3	 cmp	 ax, bx
  00259	74 0a		 je	 SHORT $L135680
  0025b	66 3d 01 00	 cmp	 ax, 1
  0025f	0f 85 41 03 00
	00		 jne	 $L135649
$L135680:

; 4299 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dEndTime)

  00265	3b fb		 cmp	 edi, ebx
  00267	89 9e 48 08 00
	00		 mov	 DWORD PTR [esi+2120], ebx
  0026d	75 12		 jne	 SHORT $L135681
  0026f	8d 96 5c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3164]
  00275	52		 push	 edx
  00276	6a 0f		 push	 15			; 0000000fH
  00278	6a 01		 push	 1
  0027a	8b ce		 mov	 ecx, esi
  0027c	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L135681:
  00281	66 3b c3	 cmp	 ax, bx
  00284	74 0a		 je	 SHORT $L135682
  00286	66 3d 01 00	 cmp	 ax, 1
  0028a	0f 85 16 03 00
	00		 jne	 $L135649
$L135682:

; 4300 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bGradeEffect)

  00290	3b fb		 cmp	 edi, ebx
  00292	89 9e 4c 08 00
	00		 mov	 DWORD PTR [esi+2124], ebx
  00298	75 12		 jne	 SHORT $L135683
  0029a	8d 86 6c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3180]
  002a0	50		 push	 eax
  002a1	6a 10		 push	 16			; 00000010H
  002a3	6a 01		 push	 1
  002a5	8b ce		 mov	 ecx, esi
  002a7	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135683:
  002ac	66 3b c3	 cmp	 ax, bx
  002af	74 0a		 je	 SHORT $L135684
  002b1	66 3d 01 00	 cmp	 ax, 1
  002b5	0f 85 eb 02 00
	00		 jne	 $L135649
$L135684:

; 4301 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[0])

  002bb	3b fb		 cmp	 edi, ebx
  002bd	89 9e 50 08 00
	00		 mov	 DWORD PTR [esi+2128], ebx
  002c3	75 12		 jne	 SHORT $L135685
  002c5	8d 8e 6d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3181]
  002cb	51		 push	 ecx
  002cc	6a 11		 push	 17			; 00000011H
  002ce	6a 01		 push	 1
  002d0	8b ce		 mov	 ecx, esi
  002d2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135685:
  002d7	66 3b c3	 cmp	 ax, bx
  002da	74 0a		 je	 SHORT $L135686
  002dc	66 3d 01 00	 cmp	 ax, 1
  002e0	0f 85 c0 02 00
	00		 jne	 $L135649
$L135686:

; 4302 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[1])

  002e6	3b fb		 cmp	 edi, ebx
  002e8	89 9e 54 08 00
	00		 mov	 DWORD PTR [esi+2132], ebx
  002ee	75 12		 jne	 SHORT $L135687
  002f0	8d 96 6e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3182]
  002f6	52		 push	 edx
  002f7	6a 12		 push	 18			; 00000012H
  002f9	6a 01		 push	 1
  002fb	8b ce		 mov	 ecx, esi
  002fd	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135687:
  00302	66 3b c3	 cmp	 ax, bx
  00305	74 0a		 je	 SHORT $L135688
  00307	66 3d 01 00	 cmp	 ax, 1
  0030b	0f 85 95 02 00
	00		 jne	 $L135649
$L135688:

; 4303 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[2])

  00311	3b fb		 cmp	 edi, ebx
  00313	89 9e 58 08 00
	00		 mov	 DWORD PTR [esi+2136], ebx
  00319	75 12		 jne	 SHORT $L135689
  0031b	8d 86 6f 0c 00
	00		 lea	 eax, DWORD PTR [esi+3183]
  00321	50		 push	 eax
  00322	6a 13		 push	 19			; 00000013H
  00324	6a 01		 push	 1
  00326	8b ce		 mov	 ecx, esi
  00328	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135689:
  0032d	66 3b c3	 cmp	 ax, bx
  00330	74 0a		 je	 SHORT $L135690
  00332	66 3d 01 00	 cmp	 ax, 1
  00336	0f 85 6a 02 00
	00		 jne	 $L135649
$L135690:

; 4304 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[3])

  0033c	3b fb		 cmp	 edi, ebx
  0033e	89 9e 5c 08 00
	00		 mov	 DWORD PTR [esi+2140], ebx
  00344	75 12		 jne	 SHORT $L135691
  00346	8d 8e 70 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3184]
  0034c	51		 push	 ecx
  0034d	6a 14		 push	 20			; 00000014H
  0034f	6a 01		 push	 1
  00351	8b ce		 mov	 ecx, esi
  00353	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135691:
  00358	66 3b c3	 cmp	 ax, bx
  0035b	74 0a		 je	 SHORT $L135692
  0035d	66 3d 01 00	 cmp	 ax, 1
  00361	0f 85 3f 02 00
	00		 jne	 $L135649
$L135692:

; 4305 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[4])

  00367	3b fb		 cmp	 edi, ebx
  00369	89 9e 60 08 00
	00		 mov	 DWORD PTR [esi+2144], ebx
  0036f	75 12		 jne	 SHORT $L135693
  00371	8d 96 71 0c 00
	00		 lea	 edx, DWORD PTR [esi+3185]
  00377	52		 push	 edx
  00378	6a 15		 push	 21			; 00000015H
  0037a	6a 01		 push	 1
  0037c	8b ce		 mov	 ecx, esi
  0037e	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135693:
  00383	66 3b c3	 cmp	 ax, bx
  00386	74 0a		 je	 SHORT $L135694
  00388	66 3d 01 00	 cmp	 ax, 1
  0038c	0f 85 14 02 00
	00		 jne	 $L135649
$L135694:

; 4306 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[5])

  00392	3b fb		 cmp	 edi, ebx
  00394	89 9e 64 08 00
	00		 mov	 DWORD PTR [esi+2148], ebx
  0039a	75 12		 jne	 SHORT $L135695
  0039c	8d 86 72 0c 00
	00		 lea	 eax, DWORD PTR [esi+3186]
  003a2	50		 push	 eax
  003a3	6a 16		 push	 22			; 00000016H
  003a5	6a 01		 push	 1
  003a7	8b ce		 mov	 ecx, esi
  003a9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135695:
  003ae	66 3b c3	 cmp	 ax, bx
  003b1	74 0a		 je	 SHORT $L135696
  003b3	66 3d 01 00	 cmp	 ax, 1
  003b7	0f 85 e9 01 00
	00		 jne	 $L135649
$L135696:

; 4307 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[0])

  003bd	3b fb		 cmp	 edi, ebx
  003bf	89 9e 68 08 00
	00		 mov	 DWORD PTR [esi+2152], ebx
  003c5	75 12		 jne	 SHORT $L135697
  003c7	8d 8e 74 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3188]
  003cd	51		 push	 ecx
  003ce	6a 17		 push	 23			; 00000017H
  003d0	6a 01		 push	 1
  003d2	8b ce		 mov	 ecx, esi
  003d4	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135697:
  003d9	66 3b c3	 cmp	 ax, bx
  003dc	74 0a		 je	 SHORT $L135698
  003de	66 3d 01 00	 cmp	 ax, 1
  003e2	0f 85 be 01 00
	00		 jne	 $L135649
$L135698:

; 4308 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[1])

  003e8	3b fb		 cmp	 edi, ebx
  003ea	89 9e 6c 08 00
	00		 mov	 DWORD PTR [esi+2156], ebx
  003f0	75 12		 jne	 SHORT $L135699
  003f2	8d 96 76 0c 00
	00		 lea	 edx, DWORD PTR [esi+3190]
  003f8	52		 push	 edx
  003f9	6a 18		 push	 24			; 00000018H
  003fb	6a 01		 push	 1
  003fd	8b ce		 mov	 ecx, esi
  003ff	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135699:
  00404	66 3b c3	 cmp	 ax, bx
  00407	74 0a		 je	 SHORT $L135700
  00409	66 3d 01 00	 cmp	 ax, 1
  0040d	0f 85 93 01 00
	00		 jne	 $L135649
$L135700:

; 4309 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[2])

  00413	3b fb		 cmp	 edi, ebx
  00415	89 9e 70 08 00
	00		 mov	 DWORD PTR [esi+2160], ebx
  0041b	75 12		 jne	 SHORT $L135701
  0041d	8d 86 78 0c 00
	00		 lea	 eax, DWORD PTR [esi+3192]
  00423	50		 push	 eax
  00424	6a 19		 push	 25			; 00000019H
  00426	6a 01		 push	 1
  00428	8b ce		 mov	 ecx, esi
  0042a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135701:
  0042f	66 3b c3	 cmp	 ax, bx
  00432	74 0a		 je	 SHORT $L135702
  00434	66 3d 01 00	 cmp	 ax, 1
  00438	0f 85 68 01 00
	00		 jne	 $L135649
$L135702:

; 4310 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[3])

  0043e	3b fb		 cmp	 edi, ebx
  00440	89 9e 74 08 00
	00		 mov	 DWORD PTR [esi+2164], ebx
  00446	75 12		 jne	 SHORT $L135703
  00448	8d 8e 7a 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3194]
  0044e	51		 push	 ecx
  0044f	6a 1a		 push	 26			; 0000001aH
  00451	6a 01		 push	 1
  00453	8b ce		 mov	 ecx, esi
  00455	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135703:
  0045a	66 3b c3	 cmp	 ax, bx
  0045d	74 0a		 je	 SHORT $L135704
  0045f	66 3d 01 00	 cmp	 ax, 1
  00463	0f 85 3d 01 00
	00		 jne	 $L135649
$L135704:

; 4311 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[4])

  00469	3b fb		 cmp	 edi, ebx
  0046b	89 9e 78 08 00
	00		 mov	 DWORD PTR [esi+2168], ebx
  00471	75 12		 jne	 SHORT $L135705
  00473	8d 96 7c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3196]
  00479	52		 push	 edx
  0047a	6a 1b		 push	 27			; 0000001bH
  0047c	6a 01		 push	 1
  0047e	8b ce		 mov	 ecx, esi
  00480	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135705:
  00485	66 3b c3	 cmp	 ax, bx
  00488	74 0a		 je	 SHORT $L135706
  0048a	66 3d 01 00	 cmp	 ax, 1
  0048e	0f 85 12 01 00
	00		 jne	 $L135649
$L135706:

; 4312 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[5])

  00494	3b fb		 cmp	 edi, ebx
  00496	89 9e 7c 08 00
	00		 mov	 DWORD PTR [esi+2172], ebx
  0049c	75 12		 jne	 SHORT $L135707
  0049e	8d 86 7e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3198]
  004a4	50		 push	 eax
  004a5	6a 1c		 push	 28			; 0000001cH
  004a7	6a 01		 push	 1
  004a9	8b ce		 mov	 ecx, esi
  004ab	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135707:
  004b0	66 3b c3	 cmp	 ax, bx
  004b3	74 0a		 je	 SHORT $L135708
  004b5	66 3d 01 00	 cmp	 ax, 1
  004b9	0f 85 e7 00 00
	00		 jne	 $L135649
$L135708:

; 4313 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[0])

  004bf	3b fb		 cmp	 edi, ebx
  004c1	89 9e 80 08 00
	00		 mov	 DWORD PTR [esi+2176], ebx
  004c7	75 12		 jne	 SHORT $L135709
  004c9	8d 8e 80 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3200]
  004cf	51		 push	 ecx
  004d0	6a 1d		 push	 29			; 0000001dH
  004d2	6a 01		 push	 1
  004d4	8b ce		 mov	 ecx, esi
  004d6	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135709:
  004db	66 3b c3	 cmp	 ax, bx
  004de	74 0a		 je	 SHORT $L135710
  004e0	66 3d 01 00	 cmp	 ax, 1
  004e4	0f 85 bc 00 00
	00		 jne	 $L135649
$L135710:

; 4314 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[1])

  004ea	3b fb		 cmp	 edi, ebx
  004ec	89 9e 84 08 00
	00		 mov	 DWORD PTR [esi+2180], ebx
  004f2	75 12		 jne	 SHORT $L135711
  004f4	8d 96 84 0c 00
	00		 lea	 edx, DWORD PTR [esi+3204]
  004fa	52		 push	 edx
  004fb	6a 1e		 push	 30			; 0000001eH
  004fd	6a 01		 push	 1
  004ff	8b ce		 mov	 ecx, esi
  00501	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135711:
  00506	66 3b c3	 cmp	 ax, bx
  00509	74 0a		 je	 SHORT $L135712
  0050b	66 3d 01 00	 cmp	 ax, 1
  0050f	0f 85 91 00 00
	00		 jne	 $L135649
$L135712:

; 4315 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[2])

  00515	3b fb		 cmp	 edi, ebx
  00517	89 9e 88 08 00
	00		 mov	 DWORD PTR [esi+2184], ebx
  0051d	75 12		 jne	 SHORT $L135713
  0051f	8d 86 88 0c 00
	00		 lea	 eax, DWORD PTR [esi+3208]
  00525	50		 push	 eax
  00526	6a 1f		 push	 31			; 0000001fH
  00528	6a 01		 push	 1
  0052a	8b ce		 mov	 ecx, esi
  0052c	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135713:
  00531	66 3b c3	 cmp	 ax, bx
  00534	74 06		 je	 SHORT $L135714
  00536	66 3d 01 00	 cmp	 ax, 1
  0053a	75 6a		 jne	 SHORT $L135649
$L135714:

; 4316 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[3])

  0053c	3b fb		 cmp	 edi, ebx
  0053e	89 9e 8c 08 00
	00		 mov	 DWORD PTR [esi+2188], ebx
  00544	75 12		 jne	 SHORT $L135715
  00546	8d 8e 8c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3212]
  0054c	51		 push	 ecx
  0054d	6a 20		 push	 32			; 00000020H
  0054f	6a 01		 push	 1
  00551	8b ce		 mov	 ecx, esi
  00553	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135715:
  00558	66 3b c3	 cmp	 ax, bx
  0055b	74 06		 je	 SHORT $L135716
  0055d	66 3d 01 00	 cmp	 ax, 1
  00561	75 43		 jne	 SHORT $L135649
$L135716:

; 4317 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[4])

  00563	3b fb		 cmp	 edi, ebx
  00565	89 9e 90 08 00
	00		 mov	 DWORD PTR [esi+2192], ebx
  0056b	75 12		 jne	 SHORT $L135717
  0056d	8d 96 90 0c 00
	00		 lea	 edx, DWORD PTR [esi+3216]
  00573	52		 push	 edx
  00574	6a 21		 push	 33			; 00000021H
  00576	6a 01		 push	 1
  00578	8b ce		 mov	 ecx, esi
  0057a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135717:
  0057f	66 3b c3	 cmp	 ax, bx
  00582	74 06		 je	 SHORT $L135718
  00584	66 3d 01 00	 cmp	 ax, 1
  00588	75 1c		 jne	 SHORT $L135649
$L135718:

; 4318 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[5])

  0058a	3b fb		 cmp	 edi, ebx
  0058c	89 9e 94 08 00
	00		 mov	 DWORD PTR [esi+2196], ebx
  00592	75 12		 jne	 SHORT $L135649
  00594	8d 86 94 0c 00
	00		 lea	 eax, DWORD PTR [esi+3220]
  0059a	50		 push	 eax
  0059b	6a 22		 push	 34			; 00000022H
  0059d	6a 01		 push	 1
  0059f	8b ce		 mov	 ecx, esi
  005a1	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135649:
  005a6	5f		 pop	 edi
  005a7	5e		 pop	 esi
  005a8	5b		 pop	 ebx

; 4319 : END_PARAM()

  005a9	c2 04 00	 ret	 4
?BindParameters@CSPSaveItem@@UAEFH@Z ENDP		; CSPSaveItem::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveItem@@UAE@XZ				; CSPSaveItem::~CSPSaveItem
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveItem@@UAEPAXI@Z PROC NEAR			; CSPSaveItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveItem@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L178620
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L178620:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveItem@@UAEPAXI@Z ENDP				; CSPSaveItem::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveItem@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveItem@@UAE@XZ PROC NEAR			; CSPSaveItem::~CSPSaveItem, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveItem@@UAE@XZ ENDP				; CSPSaveItem::~CSPSaveItem
_TEXT	ENDS
PUBLIC	??0CSPSaveCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveCabinet::CSPSaveCabinet
PUBLIC	?GetNumParam@CSPSaveCabinet@@UAEHXZ		; CSPSaveCabinet::GetNumParam
PUBLIC	?BindParameters@CSPSaveCabinet@@UAEFH@Z		; CSPSaveCabinet::BindParameters
PUBLIC	??_7CSPSaveCabinet@@6B@				; CSPSaveCabinet::`vftable'
PUBLIC	??_GCSPSaveCabinet@@UAEPAXI@Z			; CSPSaveCabinet::`scalar deleting destructor'
PUBLIC	??_C@_0CA@EFMLLMEB@?$HL?5?$DP?5?$DN?5CALL?5TSaveCabinet?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPSaveCabinet@@UAEPAXI@Z:NEAR		; CSPSaveCabinet::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T178803 DD	0ffffffffH
	DD	FLAT:$L178629
$T178800 DD	019930520H
	DD	01H
	DD	FLAT:$T178803
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CA@EFMLLMEB@?$HL?5?$DP?5?$DN?5CALL?5TSaveCabinet?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0CA@EFMLLMEB@?$HL?5?$DP?5?$DN?5CALL?5TSaveCabinet?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' ? = CALL TSaveCabinet(?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveCabinet@@6B@
CONST	SEGMENT
??_7CSPSaveCabinet@@6B@ DD FLAT:??_ECSPSaveCabinet@@UAEPAXI@Z ; CSPSaveCabinet::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveCabinet@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveCabinet@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T178628 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveCabinet::CSPSaveCabinet, COMDAT
; _this$ = ecx

; 4331 : DEF_QUERY( CSPSaveCabinet, _T("{ ? = CALL TSaveCabinet(?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CA@EFMLLMEB@?$HL?5?$DP?5?$DN?5CALL?5TSaveCabinet?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T178628[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveCabinet@@6B@
  0005e	72 0d		 jb	 SHORT $L178801
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L178801:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L178629:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T178800
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveCabinet::CSPSaveCabinet
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveCabinet@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveCabinet@@UAEHXZ PROC NEAR		; CSPSaveCabinet::GetNumParam, COMDAT
; _this$ = ecx

; 4333 : BEGIN_PARAM(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumParam@CSPSaveCabinet@@UAEHXZ ENDP		; CSPSaveCabinet::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveCabinet@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveCabinet@@UAEFH@Z PROC NEAR	; CSPSaveCabinet::BindParameters, COMDAT
; _this$ = ecx

; 4333 : BEGIN_PARAM(4)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4334 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1b		 jne	 SHORT $L135766
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 06		 je	 SHORT $L135766
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	75 6a		 jne	 SHORT $L135761
$L135766:

; 4335 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00032	3b fb		 cmp	 edi, ebx
  00034	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003a	75 12		 jne	 SHORT $L135767
  0003c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00042	51		 push	 ecx
  00043	6a 02		 push	 2
  00045	6a 01		 push	 1
  00047	8b ce		 mov	 ecx, esi
  00049	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135767:
  0004e	66 3b c3	 cmp	 ax, bx
  00051	74 06		 je	 SHORT $L135768
  00053	66 3d 01 00	 cmp	 ax, 1
  00057	75 43		 jne	 SHORT $L135761
$L135768:

; 4336 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bCabinetID)

  00059	3b fb		 cmp	 edi, ebx
  0005b	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00061	75 12		 jne	 SHORT $L135769
  00063	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00069	52		 push	 edx
  0006a	6a 03		 push	 3
  0006c	6a 01		 push	 1
  0006e	8b ce		 mov	 ecx, esi
  00070	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135769:
  00075	66 3b c3	 cmp	 ax, bx
  00078	74 06		 je	 SHORT $L135770
  0007a	66 3d 01 00	 cmp	 ax, 1
  0007e	75 1c		 jne	 SHORT $L135761
$L135770:

; 4337 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bUse)

  00080	3b fb		 cmp	 edi, ebx
  00082	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00088	75 12		 jne	 SHORT $L135761
  0008a	8d 86 35 0c 00
	00		 lea	 eax, DWORD PTR [esi+3125]
  00090	50		 push	 eax
  00091	6a 04		 push	 4
  00093	6a 01		 push	 1
  00095	8b ce		 mov	 ecx, esi
  00097	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135761:
  0009c	5f		 pop	 edi
  0009d	5e		 pop	 esi
  0009e	5b		 pop	 ebx

; 4338 : END_PARAM()

  0009f	c2 04 00	 ret	 4
?BindParameters@CSPSaveCabinet@@UAEFH@Z ENDP		; CSPSaveCabinet::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveCabinet@@UAE@XZ			; CSPSaveCabinet::~CSPSaveCabinet
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveCabinet@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveCabinet@@UAEPAXI@Z PROC NEAR			; CSPSaveCabinet::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveCabinet@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L178815
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L178815:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveCabinet@@UAEPAXI@Z ENDP			; CSPSaveCabinet::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveCabinet@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveCabinet@@UAE@XZ PROC NEAR			; CSPSaveCabinet::~CSPSaveCabinet, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveCabinet@@UAE@XZ ENDP				; CSPSaveCabinet::~CSPSaveCabinet
_TEXT	ENDS
PUBLIC	??0CSPSaveSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveSkill::CSPSaveSkill
PUBLIC	?GetNumParam@CSPSaveSkill@@UAEHXZ		; CSPSaveSkill::GetNumParam
PUBLIC	?BindParameters@CSPSaveSkill@@UAEFH@Z		; CSPSaveSkill::BindParameters
PUBLIC	??_7CSPSaveSkill@@6B@				; CSPSaveSkill::`vftable'
PUBLIC	??_GCSPSaveSkill@@UAEPAXI@Z			; CSPSaveSkill::`scalar deleting destructor'
PUBLIC	??_C@_0BP@NBFCBHFL@?$HL?$DP?5?$DN?5CALL?5TSaveSkill?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPSaveSkill@@UAEPAXI@Z:NEAR		; CSPSaveSkill::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T178998 DD	0ffffffffH
	DD	FLAT:$L178824
$T178995 DD	019930520H
	DD	01H
	DD	FLAT:$T178998
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BP@NBFCBHFL@?$HL?$DP?5?$DN?5CALL?5TSaveSkill?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BP@NBFCBHFL@?$HL?$DP?5?$DN?5CALL?5TSaveSkill?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'? = CALL TSaveSkill(?,?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveSkill@@6B@
CONST	SEGMENT
??_7CSPSaveSkill@@6B@ DD FLAT:??_ECSPSaveSkill@@UAEPAXI@Z ; CSPSaveSkill::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveSkill@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveSkill@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T178823 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveSkill::CSPSaveSkill, COMDAT
; _this$ = ecx

; 4349 : DEF_QUERY( CSPSaveSkill, _T("{? = CALL TSaveSkill(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@NBFCBHFL@?$HL?$DP?5?$DN?5CALL?5TSaveSkill?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T178823[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveSkill@@6B@
  0005e	72 0d		 jb	 SHORT $L178996
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L178996:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L178824:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T178995
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveSkill::CSPSaveSkill
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveSkill@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveSkill@@UAEHXZ PROC NEAR		; CSPSaveSkill::GetNumParam, COMDAT
; _this$ = ecx

; 4351 : BEGIN_PARAM(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumParam@CSPSaveSkill@@UAEHXZ ENDP			; CSPSaveSkill::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveSkill@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveSkill@@UAEFH@Z PROC NEAR		; CSPSaveSkill::BindParameters, COMDAT
; _this$ = ecx

; 4351 : BEGIN_PARAM(5)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4352 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L135819
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L135819
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 91 00 00
	00		 jne	 $L135814
$L135819:

; 4353 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L135820
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135820:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 06		 je	 SHORT $L135821
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	75 6a		 jne	 SHORT $L135814
$L135821:

; 4354 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wSkill)

  0005d	3b fb		 cmp	 edi, ebx
  0005f	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00065	75 12		 jne	 SHORT $L135822
  00067	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006d	52		 push	 edx
  0006e	6a 03		 push	 3
  00070	6a 01		 push	 1
  00072	8b ce		 mov	 ecx, esi
  00074	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135822:
  00079	66 3b c3	 cmp	 ax, bx
  0007c	74 06		 je	 SHORT $L135823
  0007e	66 3d 01 00	 cmp	 ax, 1
  00082	75 43		 jne	 SHORT $L135814
$L135823:

; 4355 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bLevel)

  00084	3b fb		 cmp	 edi, ebx
  00086	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  0008c	75 12		 jne	 SHORT $L135824
  0008e	8d 86 36 0c 00
	00		 lea	 eax, DWORD PTR [esi+3126]
  00094	50		 push	 eax
  00095	6a 04		 push	 4
  00097	6a 01		 push	 1
  00099	8b ce		 mov	 ecx, esi
  0009b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135824:
  000a0	66 3b c3	 cmp	 ax, bx
  000a3	74 06		 je	 SHORT $L135825
  000a5	66 3d 01 00	 cmp	 ax, 1
  000a9	75 1c		 jne	 SHORT $L135814
$L135825:

; 4356 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwTick)

  000ab	3b fb		 cmp	 edi, ebx
  000ad	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b3	75 12		 jne	 SHORT $L135814
  000b5	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  000bb	51		 push	 ecx
  000bc	6a 05		 push	 5
  000be	6a 01		 push	 1
  000c0	8b ce		 mov	 ecx, esi
  000c2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135814:
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx

; 4357 : END_PARAM()

  000ca	c2 04 00	 ret	 4
?BindParameters@CSPSaveSkill@@UAEFH@Z ENDP		; CSPSaveSkill::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveSkill@@UAE@XZ				; CSPSaveSkill::~CSPSaveSkill
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveSkill@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveSkill@@UAEPAXI@Z PROC NEAR			; CSPSaveSkill::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveSkill@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L179010
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L179010:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveSkill@@UAEPAXI@Z ENDP			; CSPSaveSkill::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveSkill@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveSkill@@UAE@XZ PROC NEAR			; CSPSaveSkill::~CSPSaveSkill, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveSkill@@UAE@XZ ENDP				; CSPSaveSkill::~CSPSaveSkill
_TEXT	ENDS
PUBLIC	??0CSPSaveSkillMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveSkillMaintain::CSPSaveSkillMaintain
PUBLIC	?GetNumParam@CSPSaveSkillMaintain@@UAEHXZ	; CSPSaveSkillMaintain::GetNumParam
PUBLIC	?BindParameters@CSPSaveSkillMaintain@@UAEFH@Z	; CSPSaveSkillMaintain::BindParameters
PUBLIC	??_7CSPSaveSkillMaintain@@6B@			; CSPSaveSkillMaintain::`vftable'
PUBLIC	??_GCSPSaveSkillMaintain@@UAEPAXI@Z		; CSPSaveSkillMaintain::`scalar deleting destructor'
PUBLIC	??_C@_0DB@PBHONOMA@?$HL?$DP?5?$DN?5CALL?5TSaveSkillMaintain?$CI?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPSaveSkillMaintain@@UAEPAXI@Z:NEAR	; CSPSaveSkillMaintain::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T179193 DD	0ffffffffH
	DD	FLAT:$L179019
$T179190 DD	019930520H
	DD	01H
	DD	FLAT:$T179193
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DB@PBHONOMA@?$HL?$DP?5?$DN?5CALL?5TSaveSkillMaintain?$CI?$DP?0?$DP@
CONST	SEGMENT
??_C@_0DB@PBHONOMA@?$HL?$DP?5?$DN?5CALL?5TSaveSkillMaintain?$CI?$DP?0?$DP@ DB '{'
	DB	'? = CALL TSaveSkillMaintain(?,?,?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveSkillMaintain@@6B@
CONST	SEGMENT
??_7CSPSaveSkillMaintain@@6B@ DD FLAT:??_ECSPSaveSkillMaintain@@UAEPAXI@Z ; CSPSaveSkillMaintain::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveSkillMaintain@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveSkillMaintain@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveSkillMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T179018 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveSkillMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveSkillMaintain::CSPSaveSkillMaintain, COMDAT
; _this$ = ecx

; 4374 : DEF_QUERY( CSPSaveSkillMaintain, _T("{? = CALL TSaveSkillMaintain(?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveSkillMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DB@PBHONOMA@?$HL?$DP?5?$DN?5CALL?5TSaveSkillMaintain?$CI?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T179018[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveSkillMaintain@@6B@
  0005e	72 0d		 jb	 SHORT $L179191
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L179191:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L179019:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveSkillMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T179190
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveSkillMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveSkillMaintain::CSPSaveSkillMaintain
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveSkillMaintain@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveSkillMaintain@@UAEHXZ PROC NEAR	; CSPSaveSkillMaintain::GetNumParam, COMDAT
; _this$ = ecx

; 4376 : BEGIN_PARAM(10)

  00000	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  00005	c3		 ret	 0
?GetNumParam@CSPSaveSkillMaintain@@UAEHXZ ENDP		; CSPSaveSkillMaintain::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveSkillMaintain@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveSkillMaintain@@UAEFH@Z PROC NEAR	; CSPSaveSkillMaintain::BindParameters, COMDAT
; _this$ = ecx

; 4376 : BEGIN_PARAM(10)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4377 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L135879
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L135879
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 68 01 00
	00		 jne	 $L135874
$L135879:

; 4378 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L135880
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135880:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L135881
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 3d 01 00
	00		 jne	 $L135874
$L135881:

; 4379 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wSkillID)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L135882
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L135882:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L135883
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 12 01 00
	00		 jne	 $L135874
$L135883:

; 4380 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bLevel)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L135884
  00096	8d 86 36 0c 00
	00		 lea	 eax, DWORD PTR [esi+3126]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135884:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 0a		 je	 SHORT $L135885
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 e7 00 00
	00		 jne	 $L135874
$L135885:

; 4381 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwTick)

  000b7	3b fb		 cmp	 edi, ebx
  000b9	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bf	75 12		 jne	 SHORT $L135886
  000c1	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 01		 push	 1
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135886:
  000d3	66 3b c3	 cmp	 ax, bx
  000d6	74 0a		 je	 SHORT $L135887
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 bc 00 00
	00		 jne	 $L135874
$L135887:

; 4382 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bAttackType)

  000e2	3b fb		 cmp	 edi, ebx
  000e4	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000ea	75 12		 jne	 SHORT $L135888
  000ec	8d 96 3c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3132]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 01		 push	 1
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135888:
  000fe	66 3b c3	 cmp	 ax, bx
  00101	74 0a		 je	 SHORT $L135889
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	0f 85 91 00 00
	00		 jne	 $L135874
$L135889:

; 4383 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwAttackID)

  0010d	3b fb		 cmp	 edi, ebx
  0010f	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00115	75 12		 jne	 SHORT $L135890
  00117	8d 86 40 0c 00
	00		 lea	 eax, DWORD PTR [esi+3136]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 01		 push	 1
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135890:
  00129	66 3b c3	 cmp	 ax, bx
  0012c	74 06		 je	 SHORT $L135891
  0012e	66 3d 01 00	 cmp	 ax, 1
  00132	75 6a		 jne	 SHORT $L135874
$L135891:

; 4384 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bHostType)

  00134	3b fb		 cmp	 edi, ebx
  00136	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  0013c	75 12		 jne	 SHORT $L135892
  0013e	8d 8e 44 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3140]
  00144	51		 push	 ecx
  00145	6a 08		 push	 8
  00147	6a 01		 push	 1
  00149	8b ce		 mov	 ecx, esi
  0014b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135892:
  00150	66 3b c3	 cmp	 ax, bx
  00153	74 06		 je	 SHORT $L135893
  00155	66 3d 01 00	 cmp	 ax, 1
  00159	75 43		 jne	 SHORT $L135874
$L135893:

; 4385 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwHostID)

  0015b	3b fb		 cmp	 edi, ebx
  0015d	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  00163	75 12		 jne	 SHORT $L135894
  00165	8d 96 48 0c 00
	00		 lea	 edx, DWORD PTR [esi+3144]
  0016b	52		 push	 edx
  0016c	6a 09		 push	 9
  0016e	6a 01		 push	 1
  00170	8b ce		 mov	 ecx, esi
  00172	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135894:
  00177	66 3b c3	 cmp	 ax, bx
  0017a	74 06		 je	 SHORT $L135895
  0017c	66 3d 01 00	 cmp	 ax, 1
  00180	75 1c		 jne	 SHORT $L135874
$L135895:

; 4386 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bAttackCountry)

  00182	3b fb		 cmp	 edi, ebx
  00184	89 9e 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebx
  0018a	75 12		 jne	 SHORT $L135874
  0018c	8d 86 4c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3148]
  00192	50		 push	 eax
  00193	6a 0a		 push	 10			; 0000000aH
  00195	6a 01		 push	 1
  00197	8b ce		 mov	 ecx, esi
  00199	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135874:
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	5b		 pop	 ebx

; 4387 : END_PARAM()

  001a1	c2 04 00	 ret	 4
?BindParameters@CSPSaveSkillMaintain@@UAEFH@Z ENDP	; CSPSaveSkillMaintain::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveSkillMaintain@@UAE@XZ			; CSPSaveSkillMaintain::~CSPSaveSkillMaintain
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveSkillMaintain@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveSkillMaintain@@UAEPAXI@Z PROC NEAR		; CSPSaveSkillMaintain::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveSkillMaintain@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L179205
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L179205:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveSkillMaintain@@UAEPAXI@Z ENDP		; CSPSaveSkillMaintain::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveSkillMaintain@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveSkillMaintain@@UAE@XZ PROC NEAR		; CSPSaveSkillMaintain::~CSPSaveSkillMaintain, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveSkillMaintain@@UAE@XZ ENDP			; CSPSaveSkillMaintain::~CSPSaveSkillMaintain
_TEXT	ENDS
PUBLIC	??0CSPSaveQuest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveQuest::CSPSaveQuest
PUBLIC	?GetNumParam@CSPSaveQuest@@UAEHXZ		; CSPSaveQuest::GetNumParam
PUBLIC	?BindParameters@CSPSaveQuest@@UAEFH@Z		; CSPSaveQuest::BindParameters
PUBLIC	??_7CSPSaveQuest@@6B@				; CSPSaveQuest::`vftable'
PUBLIC	??_GCSPSaveQuest@@UAEPAXI@Z			; CSPSaveQuest::`scalar deleting destructor'
PUBLIC	??_C@_0CC@FBPDEFGB@?$HL?5?$DP?5?$DN?5CALL?5TSaveQuest?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ@ ; `string'
EXTRN	??_ECSPSaveQuest@@UAEPAXI@Z:NEAR		; CSPSaveQuest::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T179388 DD	0ffffffffH
	DD	FLAT:$L179214
$T179385 DD	019930520H
	DD	01H
	DD	FLAT:$T179388
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CC@FBPDEFGB@?$HL?5?$DP?5?$DN?5CALL?5TSaveQuest?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ@
CONST	SEGMENT
??_C@_0CC@FBPDEFGB@?$HL?5?$DP?5?$DN?5CALL?5TSaveQuest?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ@ DB '{'
	DB	' ? = CALL TSaveQuest(?,?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveQuest@@6B@
CONST	SEGMENT
??_7CSPSaveQuest@@6B@ DD FLAT:??_ECSPSaveQuest@@UAEPAXI@Z ; CSPSaveQuest::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveQuest@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveQuest@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveQuest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T179213 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveQuest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveQuest::CSPSaveQuest, COMDAT
; _this$ = ecx

; 4402 : DEF_QUERY( CSPSaveQuest, _T("{ ? = CALL TSaveQuest(?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveQuest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CC@FBPDEFGB@?$HL?5?$DP?5?$DN?5CALL?5TSaveQuest?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T179213[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveQuest@@6B@
  0005e	72 0d		 jb	 SHORT $L179386
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L179386:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L179214:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveQuest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T179385
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveQuest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveQuest::CSPSaveQuest
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveQuest@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveQuest@@UAEHXZ PROC NEAR		; CSPSaveQuest::GetNumParam, COMDAT
; _this$ = ecx

; 4404 : BEGIN_PARAM(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumParam@CSPSaveQuest@@UAEHXZ ENDP			; CSPSaveQuest::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveQuest@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveQuest@@UAEFH@Z PROC NEAR		; CSPSaveQuest::BindParameters, COMDAT
; _this$ = ecx

; 4404 : BEGIN_PARAM(6)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4405 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L135945
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L135945
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 bc 00 00
	00		 jne	 $L135940
$L135945:

; 4406 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L135946
  00040	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135946:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L135947
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 91 00 00
	00		 jne	 $L135940
$L135947:

; 4407 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwQuestID)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L135948
  0006b	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135948:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 06		 je	 SHORT $L135949
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 6a		 jne	 SHORT $L135940
$L135949:

; 4408 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwTick)

  00088	3b fb		 cmp	 edi, ebx
  0008a	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00090	75 12		 jne	 SHORT $L135950
  00092	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00098	50		 push	 eax
  00099	6a 04		 push	 4
  0009b	6a 01		 push	 1
  0009d	8b ce		 mov	 ecx, esi
  0009f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135950:
  000a4	66 3b c3	 cmp	 ax, bx
  000a7	74 06		 je	 SHORT $L135951
  000a9	66 3d 01 00	 cmp	 ax, 1
  000ad	75 43		 jne	 SHORT $L135940
$L135951:

; 4409 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bCompleteCount)

  000af	3b fb		 cmp	 edi, ebx
  000b1	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b7	75 12		 jne	 SHORT $L135952
  000b9	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  000bf	51		 push	 ecx
  000c0	6a 05		 push	 5
  000c2	6a 01		 push	 1
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135952:
  000cb	66 3b c3	 cmp	 ax, bx
  000ce	74 06		 je	 SHORT $L135953
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	75 1c		 jne	 SHORT $L135940
$L135953:

; 4410 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bTriggerCount)

  000d6	3b fb		 cmp	 edi, ebx
  000d8	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000de	75 12		 jne	 SHORT $L135940
  000e0	8d 96 3d 0c 00
	00		 lea	 edx, DWORD PTR [esi+3133]
  000e6	52		 push	 edx
  000e7	6a 06		 push	 6
  000e9	6a 01		 push	 1
  000eb	8b ce		 mov	 ecx, esi
  000ed	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135940:
  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx

; 4411 : END_PARAM()

  000f5	c2 04 00	 ret	 4
?BindParameters@CSPSaveQuest@@UAEFH@Z ENDP		; CSPSaveQuest::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveQuest@@UAE@XZ				; CSPSaveQuest::~CSPSaveQuest
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveQuest@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveQuest@@UAEPAXI@Z PROC NEAR			; CSPSaveQuest::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveQuest@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L179400
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L179400:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveQuest@@UAEPAXI@Z ENDP			; CSPSaveQuest::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveQuest@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveQuest@@UAE@XZ PROC NEAR			; CSPSaveQuest::~CSPSaveQuest, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveQuest@@UAE@XZ ENDP				; CSPSaveQuest::~CSPSaveQuest
_TEXT	ENDS
PUBLIC	??0CSPSaveQuestTerm@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveQuestTerm::CSPSaveQuestTerm
PUBLIC	?GetNumParam@CSPSaveQuestTerm@@UAEHXZ		; CSPSaveQuestTerm::GetNumParam
PUBLIC	?BindParameters@CSPSaveQuestTerm@@UAEFH@Z	; CSPSaveQuestTerm::BindParameters
PUBLIC	??_7CSPSaveQuestTerm@@6B@			; CSPSaveQuestTerm::`vftable'
PUBLIC	??_GCSPSaveQuestTerm@@UAEPAXI@Z			; CSPSaveQuestTerm::`scalar deleting destructor'
PUBLIC	??_C@_0CG@GPJKJFDM@?$HL?5?$DP?5?$DN?5CALL?5TSaveQuestTerm?$CI?$DP?0?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPSaveQuestTerm@@UAEPAXI@Z:NEAR		; CSPSaveQuestTerm::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T179583 DD	0ffffffffH
	DD	FLAT:$L179409
$T179580 DD	019930520H
	DD	01H
	DD	FLAT:$T179583
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CG@GPJKJFDM@?$HL?5?$DP?5?$DN?5CALL?5TSaveQuestTerm?$CI?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0CG@GPJKJFDM@?$HL?5?$DP?5?$DN?5CALL?5TSaveQuestTerm?$CI?$DP?0?$DP?0?$DP?0@ DB '{'
	DB	' ? = CALL TSaveQuestTerm(?,?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveQuestTerm@@6B@
CONST	SEGMENT
??_7CSPSaveQuestTerm@@6B@ DD FLAT:??_ECSPSaveQuestTerm@@UAEPAXI@Z ; CSPSaveQuestTerm::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveQuestTerm@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveQuestTerm@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveQuestTerm@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T179408 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveQuestTerm@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveQuestTerm::CSPSaveQuestTerm, COMDAT
; _this$ = ecx

; 4426 : DEF_QUERY( CSPSaveQuestTerm, _T("{ ? = CALL TSaveQuestTerm(?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveQuestTerm@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CG@GPJKJFDM@?$HL?5?$DP?5?$DN?5CALL?5TSaveQuestTerm?$CI?$DP?0?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T179408[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveQuestTerm@@6B@
  0005e	72 0d		 jb	 SHORT $L179581
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L179581:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L179409:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveQuestTerm@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T179580
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveQuestTerm@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveQuestTerm::CSPSaveQuestTerm
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveQuestTerm@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveQuestTerm@@UAEHXZ PROC NEAR		; CSPSaveQuestTerm::GetNumParam, COMDAT
; _this$ = ecx

; 4428 : BEGIN_PARAM(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumParam@CSPSaveQuestTerm@@UAEHXZ ENDP		; CSPSaveQuestTerm::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveQuestTerm@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveQuestTerm@@UAEFH@Z PROC NEAR	; CSPSaveQuestTerm::BindParameters, COMDAT
; _this$ = ecx

; 4428 : BEGIN_PARAM(6)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4429 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L136003
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L136003
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 bc 00 00
	00		 jne	 $L135998
$L136003:

; 4430 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L136004
  00040	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136004:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L136005
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 91 00 00
	00		 jne	 $L135998
$L136005:

; 4431 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwQuestID)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L136006
  0006b	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136006:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 06		 je	 SHORT $L136007
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 6a		 jne	 SHORT $L135998
$L136007:

; 4432 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwTermID)

  00088	3b fb		 cmp	 edi, ebx
  0008a	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00090	75 12		 jne	 SHORT $L136008
  00092	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00098	50		 push	 eax
  00099	6a 04		 push	 4
  0009b	6a 01		 push	 1
  0009d	8b ce		 mov	 ecx, esi
  0009f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136008:
  000a4	66 3b c3	 cmp	 ax, bx
  000a7	74 06		 je	 SHORT $L136009
  000a9	66 3d 01 00	 cmp	 ax, 1
  000ad	75 43		 jne	 SHORT $L135998
$L136009:

; 4433 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bTermType)

  000af	3b fb		 cmp	 edi, ebx
  000b1	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b7	75 12		 jne	 SHORT $L136010
  000b9	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  000bf	51		 push	 ecx
  000c0	6a 05		 push	 5
  000c2	6a 01		 push	 1
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136010:
  000cb	66 3b c3	 cmp	 ax, bx
  000ce	74 06		 je	 SHORT $L136011
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	75 1c		 jne	 SHORT $L135998
$L136011:

; 4434 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bCount)

  000d6	3b fb		 cmp	 edi, ebx
  000d8	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000de	75 12		 jne	 SHORT $L135998
  000e0	8d 96 3d 0c 00
	00		 lea	 edx, DWORD PTR [esi+3133]
  000e6	52		 push	 edx
  000e7	6a 06		 push	 6
  000e9	6a 01		 push	 1
  000eb	8b ce		 mov	 ecx, esi
  000ed	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135998:
  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx

; 4435 : END_PARAM()

  000f5	c2 04 00	 ret	 4
?BindParameters@CSPSaveQuestTerm@@UAEFH@Z ENDP		; CSPSaveQuestTerm::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveQuestTerm@@UAE@XZ			; CSPSaveQuestTerm::~CSPSaveQuestTerm
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveQuestTerm@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveQuestTerm@@UAEPAXI@Z PROC NEAR		; CSPSaveQuestTerm::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveQuestTerm@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L179595
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L179595:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveQuestTerm@@UAEPAXI@Z ENDP			; CSPSaveQuestTerm::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveQuestTerm@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveQuestTerm@@UAE@XZ PROC NEAR			; CSPSaveQuestTerm::~CSPSaveQuestTerm, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveQuestTerm@@UAE@XZ ENDP			; CSPSaveQuestTerm::~CSPSaveQuestTerm
_TEXT	ENDS
PUBLIC	??0CSPSaveHotkey@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveHotkey::CSPSaveHotkey
PUBLIC	?GetNumParam@CSPSaveHotkey@@UAEHXZ		; CSPSaveHotkey::GetNumParam
PUBLIC	?BindParameters@CSPSaveHotkey@@UAEFH@Z		; CSPSaveHotkey::BindParameters
PUBLIC	??_7CSPSaveHotkey@@6B@				; CSPSaveHotkey::`vftable'
PUBLIC	??_GCSPSaveHotkey@@UAEPAXI@Z			; CSPSaveHotkey::`scalar deleting destructor'
PUBLIC	??_C@_0EL@KBONMKDN@?$HL?5CALL?5TSaveHotkey?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPSaveHotkey@@UAEPAXI@Z:NEAR		; CSPSaveHotkey::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T179778 DD	0ffffffffH
	DD	FLAT:$L179604
$T179775 DD	019930520H
	DD	01H
	DD	FLAT:$T179778
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EL@KBONMKDN@?$HL?5CALL?5TSaveHotkey?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0EL@KBONMKDN@?$HL?5CALL?5TSaveHotkey?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	' CALL TSaveHotkey(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?'
	DB	',?,?,?,?,?)}', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveHotkey@@6B@
CONST	SEGMENT
??_7CSPSaveHotkey@@6B@ DD FLAT:??_ECSPSaveHotkey@@UAEPAXI@Z ; CSPSaveHotkey::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveHotkey@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveHotkey@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveHotkey@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T179603 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveHotkey@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveHotkey::CSPSaveHotkey, COMDAT
; _this$ = ecx

; 4447 : DEF_QUERY( CSPSaveHotkey, _T("{ CALL TSaveHotkey(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveHotkey@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EL@KBONMKDN@?$HL?5CALL?5TSaveHotkey?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T179603[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveHotkey@@6B@
  0005e	72 0d		 jb	 SHORT $L179776
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L179776:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L179604:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveHotkey@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T179775
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveHotkey@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveHotkey::CSPSaveHotkey
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveHotkey@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveHotkey@@UAEHXZ PROC NEAR		; CSPSaveHotkey::GetNumParam, COMDAT
; _this$ = ecx

; 4449 : BEGIN_PARAM(27)

  00000	b8 1b 00 00 00	 mov	 eax, 27			; 0000001bH
  00005	c3		 ret	 0
?GetNumParam@CSPSaveHotkey@@UAEHXZ ENDP			; CSPSaveHotkey::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveHotkey@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveHotkey@@UAEFH@Z PROC NEAR	; CSPSaveHotkey::BindParameters, COMDAT
; _this$ = ecx

; 4449 : BEGIN_PARAM(27)

  00000	53		 push	 ebx
  00001	55		 push	 ebp

; 4450 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 6c 24 0c	 mov	 ebp, DWORD PTR _bRewind$[esp+4]
  00006	33 db		 xor	 ebx, ebx
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b eb		 cmp	 ebp, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L179791
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L179791
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 c8 00 00
	00		 jne	 $L136057
$L179791:

; 4451 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bSave)

  00036	3b eb		 cmp	 ebp, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L179793
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L179793:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L179794
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 9d 00 00
	00		 jne	 $L136057
$L179794:

; 4452 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bInvenID)

  00061	3b eb		 cmp	 ebp, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L136065
  0006b	8d 96 31 0c 00
	00		 lea	 edx, DWORD PTR [esi+3121]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136065:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	57		 push	 edi
  00081	bf 04 00 00 00	 mov	 edi, 4
  00086	74 06		 je	 SHORT $L136066
  00088	66 3d 01 00	 cmp	 ax, 1
  0008c	75 6f		 jne	 SHORT $L179795
$L136066:

; 4453 : 	for(BYTE i=0; i<MAX_HOTKEY_POS; i++)

  0008e	32 db		 xor	 bl, bl
$L136069:

; 4454 : 	{
; 4455 : 		PARAM_ENTRY( SQL_PARAM_INPUT, m_bType[i])

  00090	85 ed		 test	 ebp, ebp
  00092	0f bf cf	 movsx	 ecx, di
  00095	c7 84 8e 0c 08
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+2060], 0
  000a0	75 15		 jne	 SHORT $L136072
  000a2	0f b6 d3	 movzx	 edx, bl
  000a5	8d 84 32 32 0c
	00 00		 lea	 eax, DWORD PTR [edx+esi+3122]
  000ac	50		 push	 eax
  000ad	57		 push	 edi
  000ae	6a 01		 push	 1
  000b0	8b ce		 mov	 ecx, esi
  000b2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136072:
  000b7	47		 inc	 edi
  000b8	66 85 c0	 test	 ax, ax
  000bb	74 06		 je	 SHORT $L179792
  000bd	66 3d 01 00	 cmp	 ax, 1
  000c1	75 3a		 jne	 SHORT $L179795
$L179792:

; 4456 : 		PARAM_ENTRY( SQL_PARAM_INPUT, m_wID[i])

  000c3	85 ed		 test	 ebp, ebp
  000c5	0f bf cf	 movsx	 ecx, di
  000c8	c7 84 8e 0c 08
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+2060], 0
  000d3	75 15		 jne	 SHORT $L136074
  000d5	0f b6 d3	 movzx	 edx, bl
  000d8	8d 84 56 3e 0c
	00 00		 lea	 eax, DWORD PTR [esi+edx*2+3134]
  000df	50		 push	 eax
  000e0	57		 push	 edi
  000e1	6a 01		 push	 1
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L136074:
  000ea	47		 inc	 edi
  000eb	66 85 c0	 test	 ax, ax
  000ee	74 06		 je	 SHORT $L136070
  000f0	66 3d 01 00	 cmp	 ax, 1
  000f4	75 07		 jne	 SHORT $L179795
$L136070:

; 4453 : 	for(BYTE i=0; i<MAX_HOTKEY_POS; i++)

  000f6	fe c3		 inc	 bl
  000f8	80 fb 0c	 cmp	 bl, 12			; 0000000cH
  000fb	72 93		 jb	 SHORT $L136069
$L179795:
  000fd	5f		 pop	 edi
$L136057:
  000fe	5e		 pop	 esi
  000ff	5d		 pop	 ebp
  00100	5b		 pop	 ebx

; 4457 : 	}
; 4458 : END_PARAM()

  00101	c2 04 00	 ret	 4
?BindParameters@CSPSaveHotkey@@UAEFH@Z ENDP		; CSPSaveHotkey::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveHotkey@@UAE@XZ			; CSPSaveHotkey::~CSPSaveHotkey
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveHotkey@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveHotkey@@UAEPAXI@Z PROC NEAR			; CSPSaveHotkey::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveHotkey@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L179799
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L179799:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveHotkey@@UAEPAXI@Z ENDP			; CSPSaveHotkey::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveHotkey@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveHotkey@@UAE@XZ PROC NEAR			; CSPSaveHotkey::~CSPSaveHotkey, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveHotkey@@UAE@XZ ENDP				; CSPSaveHotkey::~CSPSaveHotkey
_TEXT	ENDS
PUBLIC	??0CSPSaveCastleOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveCastleOccupy::CSPSaveCastleOccupy
PUBLIC	?GetNumParam@CSPSaveCastleOccupy@@UAEHXZ	; CSPSaveCastleOccupy::GetNumParam
PUBLIC	?BindParameters@CSPSaveCastleOccupy@@UAEFH@Z	; CSPSaveCastleOccupy::BindParameters
PUBLIC	??_7CSPSaveCastleOccupy@@6B@			; CSPSaveCastleOccupy::`vftable'
PUBLIC	??_GCSPSaveCastleOccupy@@UAEPAXI@Z		; CSPSaveCastleOccupy::`scalar deleting destructor'
PUBLIC	??_C@_0CH@KHFDBGOL@?$HL?5?$DP?5?$DN?5CALL?5TSaveCastleOccupy?$CI?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPSaveCastleOccupy@@UAEPAXI@Z:NEAR		; CSPSaveCastleOccupy::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T179982 DD	0ffffffffH
	DD	FLAT:$L179808
$T179979 DD	019930520H
	DD	01H
	DD	FLAT:$T179982
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CH@KHFDBGOL@?$HL?5?$DP?5?$DN?5CALL?5TSaveCastleOccupy?$CI?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CH@KHFDBGOL@?$HL?5?$DP?5?$DN?5CALL?5TSaveCastleOccupy?$CI?$DP?0?$DP@ DB '{'
	DB	' ? = CALL TSaveCastleOccupy(?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveCastleOccupy@@6B@
CONST	SEGMENT
??_7CSPSaveCastleOccupy@@6B@ DD FLAT:??_ECSPSaveCastleOccupy@@UAEPAXI@Z ; CSPSaveCastleOccupy::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveCastleOccupy@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveCastleOccupy@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveCastleOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T179807 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveCastleOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveCastleOccupy::CSPSaveCastleOccupy, COMDAT
; _this$ = ecx

; 4470 : DEF_QUERY(CSPSaveCastleOccupy, _T("{ ? = CALL TSaveCastleOccupy(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveCastleOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CH@KHFDBGOL@?$HL?5?$DP?5?$DN?5CALL?5TSaveCastleOccupy?$CI?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T179807[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveCastleOccupy@@6B@
  0005e	72 0d		 jb	 SHORT $L179980
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L179980:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L179808:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveCastleOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T179979
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveCastleOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveCastleOccupy::CSPSaveCastleOccupy
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveCastleOccupy@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveCastleOccupy@@UAEHXZ PROC NEAR	; CSPSaveCastleOccupy::GetNumParam, COMDAT
; _this$ = ecx

; 4472 : BEGIN_PARAM(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumParam@CSPSaveCastleOccupy@@UAEHXZ ENDP		; CSPSaveCastleOccupy::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveCastleOccupy@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveCastleOccupy@@UAEFH@Z PROC NEAR	; CSPSaveCastleOccupy::BindParameters, COMDAT
; _this$ = ecx

; 4472 : BEGIN_PARAM(5)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4473 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L136122
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L136122
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 91 00 00
	00		 jne	 $L136117
$L136122:

; 4474 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_bCountry)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L136123
  00040	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 04		 push	 4
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136123:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 06		 je	 SHORT $L136124
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	75 6a		 jne	 SHORT $L136117
$L136124:

; 4475 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwGuildID)

  0005d	3b fb		 cmp	 edi, ebx
  0005f	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00065	75 12		 jne	 SHORT $L136125
  00067	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006d	52		 push	 edx
  0006e	6a 03		 push	 3
  00070	6a 01		 push	 1
  00072	8b ce		 mov	 ecx, esi
  00074	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136125:
  00079	66 3b c3	 cmp	 ax, bx
  0007c	74 06		 je	 SHORT $L136126
  0007e	66 3d 01 00	 cmp	 ax, 1
  00082	75 43		 jne	 SHORT $L136117
$L136126:

; 4476 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wCastleID)

  00084	3b fb		 cmp	 edi, ebx
  00086	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  0008c	75 12		 jne	 SHORT $L136127
  0008e	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00094	50		 push	 eax
  00095	6a 04		 push	 4
  00097	6a 01		 push	 1
  00099	8b ce		 mov	 ecx, esi
  0009b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L136127:
  000a0	66 3b c3	 cmp	 ax, bx
  000a3	74 06		 je	 SHORT $L136128
  000a5	66 3d 01 00	 cmp	 ax, 1
  000a9	75 1c		 jne	 SHORT $L136117
$L136128:

; 4477 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bType)

  000ab	3b fb		 cmp	 edi, ebx
  000ad	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b3	75 12		 jne	 SHORT $L136117
  000b5	8d 8e 32 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3122]
  000bb	51		 push	 ecx
  000bc	6a 05		 push	 5
  000be	6a 01		 push	 1
  000c0	8b ce		 mov	 ecx, esi
  000c2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136117:
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx

; 4478 : END_PARAM()

  000ca	c2 04 00	 ret	 4
?BindParameters@CSPSaveCastleOccupy@@UAEFH@Z ENDP	; CSPSaveCastleOccupy::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveCastleOccupy@@UAE@XZ			; CSPSaveCastleOccupy::~CSPSaveCastleOccupy
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveCastleOccupy@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveCastleOccupy@@UAEPAXI@Z PROC NEAR		; CSPSaveCastleOccupy::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveCastleOccupy@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L179994
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L179994:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveCastleOccupy@@UAEPAXI@Z ENDP			; CSPSaveCastleOccupy::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveCastleOccupy@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveCastleOccupy@@UAE@XZ PROC NEAR		; CSPSaveCastleOccupy::~CSPSaveCastleOccupy, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveCastleOccupy@@UAE@XZ ENDP			; CSPSaveCastleOccupy::~CSPSaveCastleOccupy
_TEXT	ENDS
PUBLIC	??0CSPSaveLocalOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveLocalOccupy::CSPSaveLocalOccupy
PUBLIC	?GetNumParam@CSPSaveLocalOccupy@@UAEHXZ		; CSPSaveLocalOccupy::GetNumParam
PUBLIC	?BindParameters@CSPSaveLocalOccupy@@UAEFH@Z	; CSPSaveLocalOccupy::BindParameters
PUBLIC	??_7CSPSaveLocalOccupy@@6B@			; CSPSaveLocalOccupy::`vftable'
PUBLIC	??_GCSPSaveLocalOccupy@@UAEPAXI@Z		; CSPSaveLocalOccupy::`scalar deleting destructor'
PUBLIC	??_C@_0CK@KLFCEMIA@?$HL?5?$DP?5?$DN?5CALL?5TSaveLocalOccupy?$CI?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPSaveLocalOccupy@@UAEPAXI@Z:NEAR		; CSPSaveLocalOccupy::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T180177 DD	0ffffffffH
	DD	FLAT:$L180003
$T180174 DD	019930520H
	DD	01H
	DD	FLAT:$T180177
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CK@KLFCEMIA@?$HL?5?$DP?5?$DN?5CALL?5TSaveLocalOccupy?$CI?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0CK@KLFCEMIA@?$HL?5?$DP?5?$DN?5CALL?5TSaveLocalOccupy?$CI?$DP?0?$DP?0@ DB '{'
	DB	' ? = CALL TSaveLocalOccupy(?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveLocalOccupy@@6B@
CONST	SEGMENT
??_7CSPSaveLocalOccupy@@6B@ DD FLAT:??_ECSPSaveLocalOccupy@@UAEPAXI@Z ; CSPSaveLocalOccupy::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveLocalOccupy@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveLocalOccupy@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveLocalOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T180002 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveLocalOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveLocalOccupy::CSPSaveLocalOccupy, COMDAT
; _this$ = ecx

; 4492 : 	DEF_QUERY(CSPSaveLocalOccupy, _T("{ ? = CALL TSaveLocalOccupy(?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveLocalOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CK@KLFCEMIA@?$HL?5?$DP?5?$DN?5CALL?5TSaveLocalOccupy?$CI?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T180002[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveLocalOccupy@@6B@
  0005e	72 0d		 jb	 SHORT $L180175
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L180175:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L180003:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveLocalOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T180174
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveLocalOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveLocalOccupy::CSPSaveLocalOccupy
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveLocalOccupy@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveLocalOccupy@@UAEHXZ PROC NEAR	; CSPSaveLocalOccupy::GetNumParam, COMDAT
; _this$ = ecx

; 4494 : BEGIN_PARAM(7)

  00000	b8 07 00 00 00	 mov	 eax, 7
  00005	c3		 ret	 0
?GetNumParam@CSPSaveLocalOccupy@@UAEHXZ ENDP		; CSPSaveLocalOccupy::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveLocalOccupy@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveLocalOccupy@@UAEFH@Z PROC NEAR	; CSPSaveLocalOccupy::BindParameters, COMDAT
; _this$ = ecx

; 4494 : BEGIN_PARAM(7)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4495 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L136179
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L136179
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 e7 00 00
	00		 jne	 $L136174
$L136179:

; 4496 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wLocalID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L136180
  00040	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L136180:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L136181
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 bc 00 00
	00		 jne	 $L136174
$L136181:

; 4497 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bType)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L136182
  0006b	8d 96 3a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3130]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136182:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L136183
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 91 00 00
	00		 jne	 $L136174
$L136183:

; 4498 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwOccupiedGuild)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L136184
  00096	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136184:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 06		 je	 SHORT $L136185
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	75 6a		 jne	 SHORT $L136174
$L136185:

; 4499 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwOccupiedChar)

  000b3	3b fb		 cmp	 edi, ebx
  000b5	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bb	75 12		 jne	 SHORT $L136186
  000bd	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  000c3	51		 push	 ecx
  000c4	6a 05		 push	 5
  000c6	6a 01		 push	 1
  000c8	8b ce		 mov	 ecx, esi
  000ca	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136186:
  000cf	66 3b c3	 cmp	 ax, bx
  000d2	74 06		 je	 SHORT $L136187
  000d4	66 3d 01 00	 cmp	 ax, 1
  000d8	75 43		 jne	 SHORT $L136174
$L136187:

; 4500 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_bCountry)

  000da	3b fb		 cmp	 edi, ebx
  000dc	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000e2	75 12		 jne	 SHORT $L136188
  000e4	8d 96 3b 0c 00
	00		 lea	 edx, DWORD PTR [esi+3131]
  000ea	52		 push	 edx
  000eb	6a 06		 push	 6
  000ed	6a 04		 push	 4
  000ef	8b ce		 mov	 ecx, esi
  000f1	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136188:
  000f6	66 3b c3	 cmp	 ax, bx
  000f9	74 06		 je	 SHORT $L136189
  000fb	66 3d 01 00	 cmp	 ax, 1
  000ff	75 1c		 jne	 SHORT $L136174
$L136189:

; 4501 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_dwGuild)

  00101	3b fb		 cmp	 edi, ebx
  00103	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00109	75 12		 jne	 SHORT $L136174
  0010b	8d 86 3c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3132]
  00111	50		 push	 eax
  00112	6a 07		 push	 7
  00114	6a 04		 push	 4
  00116	8b ce		 mov	 ecx, esi
  00118	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136174:
  0011d	5f		 pop	 edi
  0011e	5e		 pop	 esi
  0011f	5b		 pop	 ebx

; 4502 : END_PARAM()

  00120	c2 04 00	 ret	 4
?BindParameters@CSPSaveLocalOccupy@@UAEFH@Z ENDP	; CSPSaveLocalOccupy::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveLocalOccupy@@UAE@XZ			; CSPSaveLocalOccupy::~CSPSaveLocalOccupy
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveLocalOccupy@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveLocalOccupy@@UAEPAXI@Z PROC NEAR		; CSPSaveLocalOccupy::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveLocalOccupy@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L180189
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L180189:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveLocalOccupy@@UAEPAXI@Z ENDP			; CSPSaveLocalOccupy::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveLocalOccupy@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveLocalOccupy@@UAE@XZ PROC NEAR			; CSPSaveLocalOccupy::~CSPSaveLocalOccupy, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveLocalOccupy@@UAE@XZ ENDP			; CSPSaveLocalOccupy::~CSPSaveLocalOccupy
_TEXT	ENDS
PUBLIC	??0CSPSaveItemUsed@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveItemUsed::CSPSaveItemUsed
PUBLIC	?GetNumParam@CSPSaveItemUsed@@UAEHXZ		; CSPSaveItemUsed::GetNumParam
PUBLIC	?BindParameters@CSPSaveItemUsed@@UAEFH@Z	; CSPSaveItemUsed::BindParameters
PUBLIC	??_7CSPSaveItemUsed@@6B@			; CSPSaveItemUsed::`vftable'
PUBLIC	??_GCSPSaveItemUsed@@UAEPAXI@Z			; CSPSaveItemUsed::`scalar deleting destructor'
PUBLIC	??_C@_0BM@PMDNGICE@?$HLCALL?5TSaveItemUsed?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPSaveItemUsed@@UAEPAXI@Z:NEAR		; CSPSaveItemUsed::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T180372 DD	0ffffffffH
	DD	FLAT:$L180198
$T180369 DD	019930520H
	DD	01H
	DD	FLAT:$T180372
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@PMDNGICE@?$HLCALL?5TSaveItemUsed?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BM@PMDNGICE@?$HLCALL?5TSaveItemUsed?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL TSaveItemUsed(?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveItemUsed@@6B@
CONST	SEGMENT
??_7CSPSaveItemUsed@@6B@ DD FLAT:??_ECSPSaveItemUsed@@UAEPAXI@Z ; CSPSaveItemUsed::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveItemUsed@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveItemUsed@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveItemUsed@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T180197 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveItemUsed@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveItemUsed::CSPSaveItemUsed, COMDAT
; _this$ = ecx

; 4512 : 	DEF_QUERY(CSPSaveItemUsed, _T("{CALL TSaveItemUsed(?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveItemUsed@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PMDNGICE@?$HLCALL?5TSaveItemUsed?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T180197[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveItemUsed@@6B@
  0005e	72 0d		 jb	 SHORT $L180370
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L180370:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L180198:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveItemUsed@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T180369
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveItemUsed@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveItemUsed::CSPSaveItemUsed
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveItemUsed@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveItemUsed@@UAEHXZ PROC NEAR		; CSPSaveItemUsed::GetNumParam, COMDAT
; _this$ = ecx

; 4514 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPSaveItemUsed@@UAEHXZ ENDP		; CSPSaveItemUsed::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveItemUsed@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveItemUsed@@UAEFH@Z PROC NEAR	; CSPSaveItemUsed::BindParameters, COMDAT
; _this$ = ecx

; 4514 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 4515 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L136236
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L136236
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L136231
$L136236:

; 4516 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wDelayGroupID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L136237
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L136237:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L136238
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L136231
$L136238:

; 4517 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwTick)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L136231
  00068	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136231:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 4518 : END_PARAM()

  0007c	c2 04 00	 ret	 4
?BindParameters@CSPSaveItemUsed@@UAEFH@Z ENDP		; CSPSaveItemUsed::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveItemUsed@@UAE@XZ			; CSPSaveItemUsed::~CSPSaveItemUsed
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveItemUsed@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveItemUsed@@UAEPAXI@Z PROC NEAR		; CSPSaveItemUsed::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveItemUsed@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L180384
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L180384:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveItemUsed@@UAEPAXI@Z ENDP			; CSPSaveItemUsed::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveItemUsed@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveItemUsed@@UAE@XZ PROC NEAR			; CSPSaveItemUsed::~CSPSaveItemUsed, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveItemUsed@@UAE@XZ ENDP				; CSPSaveItemUsed::~CSPSaveItemUsed
_TEXT	ENDS
PUBLIC	??0CSPPostCanSend@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPPostCanSend::CSPPostCanSend
PUBLIC	?GetNumParam@CSPPostCanSend@@UAEHXZ		; CSPPostCanSend::GetNumParam
PUBLIC	?BindParameters@CSPPostCanSend@@UAEFH@Z		; CSPPostCanSend::BindParameters
PUBLIC	??_7CSPPostCanSend@@6B@				; CSPPostCanSend::`vftable'
PUBLIC	??_GCSPPostCanSend@@UAEPAXI@Z			; CSPPostCanSend::`scalar deleting destructor'
PUBLIC	??_C@_0CC@NCLLANDK@?$HL?5?$DP?5?$DN?5CALL?5TPostCanSend?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ@ ; `string'
EXTRN	??_ECSPPostCanSend@@UAEPAXI@Z:NEAR		; CSPPostCanSend::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T180567 DD	0ffffffffH
	DD	FLAT:$L180393
$T180564 DD	019930520H
	DD	01H
	DD	FLAT:$T180567
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CC@NCLLANDK@?$HL?5?$DP?5?$DN?5CALL?5TPostCanSend?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ@
CONST	SEGMENT
??_C@_0CC@NCLLANDK@?$HL?5?$DP?5?$DN?5CALL?5TPostCanSend?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ@ DB '{'
	DB	' ? = CALL TPostCanSend(?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPPostCanSend@@6B@
CONST	SEGMENT
??_7CSPPostCanSend@@6B@ DD FLAT:??_ECSPPostCanSend@@UAEPAXI@Z ; CSPPostCanSend::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPPostCanSend@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPPostCanSend@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPPostCanSend@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T180392 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPPostCanSend@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPPostCanSend::CSPPostCanSend, COMDAT
; _this$ = ecx

; 4530 : DEF_QUERY(CSPPostCanSend, _T("{ ? = CALL TPostCanSend(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPPostCanSend@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CC@NCLLANDK@?$HL?5?$DP?5?$DN?5CALL?5TPostCanSend?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T180392[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPPostCanSend@@6B@
  0005e	72 0d		 jb	 SHORT $L180565
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L180565:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L180393:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPPostCanSend@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T180564
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPPostCanSend@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPPostCanSend::CSPPostCanSend
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPPostCanSend@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPPostCanSend@@UAEHXZ PROC NEAR		; CSPPostCanSend::GetNumParam, COMDAT
; _this$ = ecx

; 4532 : BEGIN_PARAM(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumParam@CSPPostCanSend@@UAEHXZ ENDP		; CSPPostCanSend::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPPostCanSend@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPPostCanSend@@UAEFH@Z PROC NEAR	; CSPPostCanSend::BindParameters, COMDAT
; _this$ = ecx

; 4532 : BEGIN_PARAM(4)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 4533 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_nRet)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1f		 jne	 SHORT $L180576
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 04		 push	 4
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 0a		 je	 SHORT $L180576
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	0f 85 a5 00 00
	00		 jne	 $L136282
$L180576:

; 4534 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwCharID)

  00033	85 ff		 test	 edi, edi
  00035	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003f	75 12		 jne	 SHORT $L136288
  00041	8d 8e 98 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3224]
  00047	51		 push	 ecx
  00048	6a 02		 push	 2
  0004a	6a 04		 push	 4
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136288:
  00053	66 85 c0	 test	 ax, ax
  00056	74 06		 je	 SHORT $L136289
  00058	66 3d 01 00	 cmp	 ax, 1
  0005c	75 7a		 jne	 SHORT $L136282
$L136289:

; 4535 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szName)

  0005e	85 ff		 test	 edi, edi
  00060	c7 86 18 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2072], -3 ; fffffffdH
  0006a	75 14		 jne	 SHORT $L136290
  0006c	6a 33		 push	 51			; 00000033H
  0006e	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00074	52		 push	 edx
  00075	6a 03		 push	 3
  00077	6a 01		 push	 1
  00079	8b ce		 mov	 ecx, esi
  0007b	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L136290:
  00080	66 85 c0	 test	 ax, ax
  00083	74 06		 je	 SHORT $L180577
  00085	66 3d 01 00	 cmp	 ax, 1
  00089	75 4d		 jne	 SHORT $L136282
$L180577:

; 4536 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szTarget)

  0008b	85 ff		 test	 edi, edi
  0008d	c7 86 1c 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2076], -3 ; fffffffdH
  00097	75 14		 jne	 SHORT $L136292
  00099	6a 33		 push	 51			; 00000033H
  0009b	8d 86 63 0c 00
	00		 lea	 eax, DWORD PTR [esi+3171]
  000a1	50		 push	 eax
  000a2	6a 04		 push	 4
  000a4	6a 01		 push	 1
  000a6	8b ce		 mov	 ecx, esi
  000a8	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L136292:
  000ad	66 85 c0	 test	 ax, ax
  000b0	74 06		 je	 SHORT $L180578
  000b2	66 3d 01 00	 cmp	 ax, 1
  000b6	75 20		 jne	 SHORT $L136282
$L180578:

; 4537 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bType)

  000b8	85 ff		 test	 edi, edi
  000ba	c7 86 20 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2080], 0
  000c4	75 12		 jne	 SHORT $L136282
  000c6	8d 8e 9c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3228]
  000cc	51		 push	 ecx
  000cd	6a 05		 push	 5
  000cf	6a 01		 push	 1
  000d1	8b ce		 mov	 ecx, esi
  000d3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136282:
  000d8	5f		 pop	 edi
  000d9	5e		 pop	 esi

; 4538 : END_PARAM()

  000da	c2 04 00	 ret	 4
?BindParameters@CSPPostCanSend@@UAEFH@Z ENDP		; CSPPostCanSend::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPPostCanSend@@UAE@XZ			; CSPPostCanSend::~CSPPostCanSend
; Function compile flags: /Ogty
;	COMDAT ??_GCSPPostCanSend@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPPostCanSend@@UAEPAXI@Z PROC NEAR			; CSPPostCanSend::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPPostCanSend@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L180582
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L180582:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPPostCanSend@@UAEPAXI@Z ENDP			; CSPPostCanSend::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPPostCanSend@@UAE@XZ
_TEXT	SEGMENT
??1CSPPostCanSend@@UAE@XZ PROC NEAR			; CSPPostCanSend::~CSPPostCanSend, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPPostCanSend@@UAE@XZ ENDP				; CSPPostCanSend::~CSPPostCanSend
_TEXT	ENDS
PUBLIC	??0CSPPostDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPPostDelete::CSPPostDelete
PUBLIC	?GetNumParam@CSPPostDelete@@UAEHXZ		; CSPPostDelete::GetNumParam
PUBLIC	?BindParameters@CSPPostDelete@@UAEFH@Z		; CSPPostDelete::BindParameters
PUBLIC	??_7CSPPostDelete@@6B@				; CSPPostDelete::`vftable'
PUBLIC	??_GCSPPostDelete@@UAEPAXI@Z			; CSPPostDelete::`scalar deleting destructor'
PUBLIC	??_C@_0BN@EACOLDLF@?$HL?5?$DP?5?$DN?5CALL?5TPostDelete?$CI?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPPostDelete@@UAEPAXI@Z:NEAR		; CSPPostDelete::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T180765 DD	0ffffffffH
	DD	FLAT:$L180591
$T180762 DD	019930520H
	DD	01H
	DD	FLAT:$T180765
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BN@EACOLDLF@?$HL?5?$DP?5?$DN?5CALL?5TPostDelete?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BN@EACOLDLF@?$HL?5?$DP?5?$DN?5CALL?5TPostDelete?$CI?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' ? = CALL TPostDelete(?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPPostDelete@@6B@
CONST	SEGMENT
??_7CSPPostDelete@@6B@ DD FLAT:??_ECSPPostDelete@@UAEPAXI@Z ; CSPPostDelete::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPPostDelete@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPPostDelete@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPPostDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T180590 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPPostDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPPostDelete::CSPPostDelete, COMDAT
; _this$ = ecx

; 4548 : DEF_QUERY(CSPPostDelete, _T("{ ? = CALL TPostDelete(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPPostDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BN@EACOLDLF@?$HL?5?$DP?5?$DN?5CALL?5TPostDelete?$CI?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T180590[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPPostDelete@@6B@
  0005e	72 0d		 jb	 SHORT $L180763
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L180763:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L180591:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPPostDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T180762
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPPostDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPPostDelete::CSPPostDelete
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPPostDelete@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPPostDelete@@UAEHXZ PROC NEAR		; CSPPostDelete::GetNumParam, COMDAT
; _this$ = ecx

; 4550 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPPostDelete@@UAEHXZ ENDP			; CSPPostDelete::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPPostDelete@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPPostDelete@@UAEFH@Z PROC NEAR	; CSPPostDelete::BindParameters, COMDAT
; _this$ = ecx

; 4550 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 4551 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_nRet)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L136340
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 04		 push	 4
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L136340
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L136335
$L136340:

; 4552 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L136341
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136341:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L136342
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L136335
$L136342:

; 4553 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwPostID)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L136335
  00068	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136335:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 4554 : END_PARAM()

  0007c	c2 04 00	 ret	 4
?BindParameters@CSPPostDelete@@UAEFH@Z ENDP		; CSPPostDelete::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPPostDelete@@UAE@XZ			; CSPPostDelete::~CSPPostDelete
; Function compile flags: /Ogty
;	COMDAT ??_GCSPPostDelete@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPPostDelete@@UAEPAXI@Z PROC NEAR			; CSPPostDelete::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPPostDelete@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L180777
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L180777:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPPostDelete@@UAEPAXI@Z ENDP			; CSPPostDelete::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPPostDelete@@UAE@XZ
_TEXT	SEGMENT
??1CSPPostDelete@@UAE@XZ PROC NEAR			; CSPPostDelete::~CSPPostDelete, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPPostDelete@@UAE@XZ ENDP				; CSPPostDelete::~CSPPostDelete
_TEXT	ENDS
PUBLIC	??0CSPPostGetItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPPostGetItem::CSPPostGetItem
PUBLIC	?GetNumParam@CSPPostGetItem@@UAEHXZ		; CSPPostGetItem::GetNumParam
PUBLIC	?BindParameters@CSPPostGetItem@@UAEFH@Z		; CSPPostGetItem::BindParameters
PUBLIC	??_7CSPPostGetItem@@6B@				; CSPPostGetItem::`vftable'
PUBLIC	??_GCSPPostGetItem@@UAEPAXI@Z			; CSPPostGetItem::`scalar deleting destructor'
PUBLIC	??_C@_0BK@ELGJCACK@?$HL?5CALL?5TPostGetItem?$CI?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPPostGetItem@@UAEPAXI@Z:NEAR		; CSPPostGetItem::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T180960 DD	0ffffffffH
	DD	FLAT:$L180786
$T180957 DD	019930520H
	DD	01H
	DD	FLAT:$T180960
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BK@ELGJCACK@?$HL?5CALL?5TPostGetItem?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BK@ELGJCACK@?$HL?5CALL?5TPostGetItem?$CI?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' CALL TPostGetItem(?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPPostGetItem@@6B@
CONST	SEGMENT
??_7CSPPostGetItem@@6B@ DD FLAT:??_ECSPPostGetItem@@UAEPAXI@Z ; CSPPostGetItem::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPPostGetItem@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPPostGetItem@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPPostGetItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T180785 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPPostGetItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPPostGetItem::CSPPostGetItem, COMDAT
; _this$ = ecx

; 4563 : DEF_QUERY(CSPPostGetItem, _T("{ CALL TPostGetItem(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPPostGetItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BK@ELGJCACK@?$HL?5CALL?5TPostGetItem?$CI?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T180785[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPPostGetItem@@6B@
  0005e	72 0d		 jb	 SHORT $L180958
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L180958:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L180786:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPPostGetItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T180957
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPPostGetItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPPostGetItem::CSPPostGetItem
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPPostGetItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPPostGetItem@@UAEHXZ PROC NEAR		; CSPPostGetItem::GetNumParam, COMDAT
; _this$ = ecx

; 4565 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPPostGetItem@@UAEHXZ ENDP		; CSPPostGetItem::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPPostGetItem@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPPostGetItem@@UAEFH@Z PROC NEAR	; CSPPostGetItem::BindParameters, COMDAT
; _this$ = ecx

; 4565 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 4566 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L136388
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L136388
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L136383
$L136388:

; 4567 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwPostID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L136383
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136383:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 4568 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CSPPostGetItem@@UAEFH@Z ENDP		; CSPPostGetItem::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPPostGetItem@@UAE@XZ			; CSPPostGetItem::~CSPPostGetItem
; Function compile flags: /Ogty
;	COMDAT ??_GCSPPostGetItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPPostGetItem@@UAEPAXI@Z PROC NEAR			; CSPPostGetItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPPostGetItem@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L180972
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L180972:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPPostGetItem@@UAEPAXI@Z ENDP			; CSPPostGetItem::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPPostGetItem@@UAE@XZ
_TEXT	SEGMENT
??1CSPPostGetItem@@UAE@XZ PROC NEAR			; CSPPostGetItem::~CSPPostGetItem, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPPostGetItem@@UAE@XZ ENDP				; CSPPostGetItem::~CSPPostGetItem
_TEXT	ENDS
PUBLIC	??0CSPSavePost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSavePost::CSPSavePost
PUBLIC	?GetNumParam@CSPSavePost@@UAEHXZ		; CSPSavePost::GetNumParam
PUBLIC	?BindParameters@CSPSavePost@@UAEFH@Z		; CSPSavePost::BindParameters
PUBLIC	??_7CSPSavePost@@6B@				; CSPSavePost::`vftable'
PUBLIC	??_GCSPSavePost@@UAEPAXI@Z			; CSPSavePost::`scalar deleting destructor'
PUBLIC	??_C@_0DD@LALPOAKK@?$HL?5?$DP?5?$DN?5CALL?5TSavePost?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPSavePost@@UAEPAXI@Z:NEAR			; CSPSavePost::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T181155 DD	0ffffffffH
	DD	FLAT:$L180981
$T181152 DD	019930520H
	DD	01H
	DD	FLAT:$T181155
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DD@LALPOAKK@?$HL?5?$DP?5?$DN?5CALL?5TSavePost?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0DD@LALPOAKK@?$HL?5?$DP?5?$DN?5CALL?5TSavePost?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	' ? = CALL TSavePost(?,?,?,?,?,?,?,?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPSavePost@@6B@
CONST	SEGMENT
??_7CSPSavePost@@6B@ DD FLAT:??_ECSPSavePost@@UAEPAXI@Z	; CSPSavePost::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSavePost@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSavePost@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSavePost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T180980 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSavePost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSavePost::CSPSavePost, COMDAT
; _this$ = ecx

; 4590 : DEF_QUERY(CSPSavePost, _T("{ ? = CALL TSavePost(?,?,?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSavePost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DD@LALPOAKK@?$HL?5?$DP?5?$DN?5CALL?5TSavePost?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T180980[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSavePost@@6B@
  0005e	72 0d		 jb	 SHORT $L181153
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L181153:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L180981:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSavePost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T181152
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSavePost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSavePost::CSPSavePost
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSavePost@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSavePost@@UAEHXZ PROC NEAR		; CSPSavePost::GetNumParam, COMDAT
; _this$ = ecx

; 4592 : BEGIN_PARAM(15)

  00000	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH
  00005	c3		 ret	 0
?GetNumParam@CSPSavePost@@UAEHXZ ENDP			; CSPSavePost::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSavePost@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSavePost@@UAEFH@Z PROC NEAR		; CSPSavePost::BindParameters, COMDAT
; _this$ = ecx

; 4592 : BEGIN_PARAM(15)

  00000	55		 push	 ebp
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4593 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_nRet)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 ed		 xor	 ebp, ebp
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fd		 cmp	 edi, ebp
  0000f	89 ae 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebp
  00015	75 1f		 jne	 SHORT $L181164
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c5	 cmp	 ax, bp
  0002a	74 0a		 je	 SHORT $L181164
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 54 02 00
	00		 jne	 $L136442
$L181164:

; 4594 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwMakeID)

  00036	3b fd		 cmp	 edi, ebp
  00038	89 ae 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebp
  0003e	75 12		 jne	 SHORT $L136448
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 04		 push	 4
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136448:
  00052	66 3b c5	 cmp	 ax, bp
  00055	74 0a		 je	 SHORT $L181166
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 29 02 00
	00		 jne	 $L136442
$L181166:

; 4595 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwRecvID)

  00061	3b fd		 cmp	 edi, ebp
  00063	89 ae 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebp
  00069	75 12		 jne	 SHORT $L136450
  0006b	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 04		 push	 4
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136450:
  0007d	66 3b c5	 cmp	 ax, bp
  00080	74 0a		 je	 SHORT $L181175
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 fe 01 00
	00		 jne	 $L136442
$L181175:

; 4596 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwSendID)

  0008c	3b fd		 cmp	 edi, ebp
  0008e	89 ae 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebp
  00094	75 12		 jne	 SHORT $L181176
  00096	8d 86 3c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3132]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L181176:
  000a8	66 3b c5	 cmp	 ax, bp
  000ab	74 0a		 je	 SHORT $L181177
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 d3 01 00
	00		 jne	 $L136442
$L181177:

; 4597 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  000b7	3b fd		 cmp	 edi, ebp
  000b9	89 ae 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebp
  000bf	75 12		 jne	 SHORT $L181178
  000c1	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 01		 push	 1
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L181178:
  000d3	66 3b c5	 cmp	 ax, bp
  000d6	74 0a		 je	 SHORT $L136455
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 a8 01 00
	00		 jne	 $L136442
$L136455:

; 4598 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szTarget)

  000e2	3b fd		 cmp	 edi, ebp
  000e4	53		 push	 ebx
  000e5	bb fd ff ff ff	 mov	 ebx, -3			; fffffffdH
  000ea	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000f0	75 14		 jne	 SHORT $L136456
  000f2	6a 33		 push	 51			; 00000033H
  000f4	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  000fa	52		 push	 edx
  000fb	6a 06		 push	 6
  000fd	6a 01		 push	 1
  000ff	8b ce		 mov	 ecx, esi
  00101	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L136456:
  00106	66 3b c5	 cmp	 ax, bp
  00109	74 0a		 je	 SHORT $L181165
  0010b	66 3d 01 00	 cmp	 ax, 1
  0010f	0f 85 74 01 00
	00		 jne	 $L181179
$L181165:

; 4599 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szSender)

  00115	3b fd		 cmp	 edi, ebp
  00117	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  0011d	75 14		 jne	 SHORT $L136458
  0011f	6a 33		 push	 51			; 00000033H
  00121	8d 86 73 0c 00
	00		 lea	 eax, DWORD PTR [esi+3187]
  00127	50		 push	 eax
  00128	6a 07		 push	 7
  0012a	6a 01		 push	 1
  0012c	8b ce		 mov	 ecx, esi
  0012e	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L136458:
  00133	66 3b c5	 cmp	 ax, bp
  00136	74 0a		 je	 SHORT $L181167
  00138	66 3d 01 00	 cmp	 ax, 1
  0013c	0f 85 47 01 00
	00		 jne	 $L181179
$L181167:

; 4600 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szTitle)

  00142	3b fd		 cmp	 edi, ebp
  00144	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  0014a	75 17		 jne	 SHORT $L136460
  0014c	68 01 01 00 00	 push	 257			; 00000101H
  00151	8d 8e a6 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3238]
  00157	51		 push	 ecx
  00158	6a 08		 push	 8
  0015a	6a 01		 push	 1
  0015c	8b ce		 mov	 ecx, esi
  0015e	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L136460:
  00163	66 3b c5	 cmp	 ax, bp
  00166	74 0a		 je	 SHORT $L181168
  00168	66 3d 01 00	 cmp	 ax, 1
  0016c	0f 85 17 01 00
	00		 jne	 $L181179
$L181168:

; 4601 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szMessage)

  00172	3b fd		 cmp	 edi, ebp
  00174	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  0017a	75 17		 jne	 SHORT $L136462
  0017c	68 01 08 00 00	 push	 2049			; 00000801H
  00181	8d 96 a7 0d 00
	00		 lea	 edx, DWORD PTR [esi+3495]
  00187	52		 push	 edx
  00188	6a 09		 push	 9
  0018a	6a 01		 push	 1
  0018c	8b ce		 mov	 ecx, esi
  0018e	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L136462:
  00193	66 3b c5	 cmp	 ax, bp
  00196	74 0a		 je	 SHORT $L181169
  00198	66 3d 01 00	 cmp	 ax, 1
  0019c	0f 85 e7 00 00
	00		 jne	 $L181179
$L181169:

; 4602 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bRead)

  001a2	3b fd		 cmp	 edi, ebp
  001a4	89 ae 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebp
  001aa	75 12		 jne	 SHORT $L136464
  001ac	8d 86 a8 15 00
	00		 lea	 eax, DWORD PTR [esi+5544]
  001b2	50		 push	 eax
  001b3	6a 0a		 push	 10			; 0000000aH
  001b5	6a 01		 push	 1
  001b7	8b ce		 mov	 ecx, esi
  001b9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136464:
  001be	66 3b c5	 cmp	 ax, bp
  001c1	74 0a		 je	 SHORT $L181170
  001c3	66 3d 01 00	 cmp	 ax, 1
  001c7	0f 85 bc 00 00
	00		 jne	 $L181179
$L181170:

; 4603 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bType)

  001cd	3b fd		 cmp	 edi, ebp
  001cf	89 ae 38 08 00
	00		 mov	 DWORD PTR [esi+2104], ebp
  001d5	75 12		 jne	 SHORT $L136466
  001d7	8d 8e a9 15 00
	00		 lea	 ecx, DWORD PTR [esi+5545]
  001dd	51		 push	 ecx
  001de	6a 0b		 push	 11			; 0000000bH
  001e0	6a 01		 push	 1
  001e2	8b ce		 mov	 ecx, esi
  001e4	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136466:
  001e9	66 3b c5	 cmp	 ax, bp
  001ec	74 0a		 je	 SHORT $L181171
  001ee	66 3d 01 00	 cmp	 ax, 1
  001f2	0f 85 91 00 00
	00		 jne	 $L181179
$L181171:

; 4604 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGold)

  001f8	3b fd		 cmp	 edi, ebp
  001fa	89 ae 3c 08 00
	00		 mov	 DWORD PTR [esi+2108], ebp
  00200	75 12		 jne	 SHORT $L136468
  00202	8d 96 ac 15 00
	00		 lea	 edx, DWORD PTR [esi+5548]
  00208	52		 push	 edx
  00209	6a 0c		 push	 12			; 0000000cH
  0020b	6a 01		 push	 1
  0020d	8b ce		 mov	 ecx, esi
  0020f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136468:
  00214	66 3b c5	 cmp	 ax, bp
  00217	74 06		 je	 SHORT $L181172
  00219	66 3d 01 00	 cmp	 ax, 1
  0021d	75 6a		 jne	 SHORT $L181179
$L181172:

; 4605 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwSilver)

  0021f	3b fd		 cmp	 edi, ebp
  00221	89 ae 40 08 00
	00		 mov	 DWORD PTR [esi+2112], ebp
  00227	75 12		 jne	 SHORT $L136470
  00229	8d 86 b0 15 00
	00		 lea	 eax, DWORD PTR [esi+5552]
  0022f	50		 push	 eax
  00230	6a 0d		 push	 13			; 0000000dH
  00232	6a 01		 push	 1
  00234	8b ce		 mov	 ecx, esi
  00236	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136470:
  0023b	66 3b c5	 cmp	 ax, bp
  0023e	74 06		 je	 SHORT $L181173
  00240	66 3d 01 00	 cmp	 ax, 1
  00244	75 43		 jne	 SHORT $L181179
$L181173:

; 4606 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCooper)

  00246	3b fd		 cmp	 edi, ebp
  00248	89 ae 44 08 00
	00		 mov	 DWORD PTR [esi+2116], ebp
  0024e	75 12		 jne	 SHORT $L136472
  00250	8d 8e b4 15 00
	00		 lea	 ecx, DWORD PTR [esi+5556]
  00256	51		 push	 ecx
  00257	6a 0e		 push	 14			; 0000000eH
  00259	6a 01		 push	 1
  0025b	8b ce		 mov	 ecx, esi
  0025d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136472:
  00262	66 3b c5	 cmp	 ax, bp
  00265	74 06		 je	 SHORT $L181174
  00267	66 3d 01 00	 cmp	 ax, 1
  0026b	75 1c		 jne	 SHORT $L181179
$L181174:

; 4607 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_timeRecv)

  0026d	3b fd		 cmp	 edi, ebp
  0026f	89 ae 48 08 00
	00		 mov	 DWORD PTR [esi+2120], ebp
  00275	75 12		 jne	 SHORT $L181179
  00277	8d 96 b8 15 00
	00		 lea	 edx, DWORD PTR [esi+5560]
  0027d	52		 push	 edx
  0027e	6a 0f		 push	 15			; 0000000fH
  00280	6a 01		 push	 1
  00282	8b ce		 mov	 ecx, esi
  00284	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L181179:
  00289	5b		 pop	 ebx
$L136442:
  0028a	5f		 pop	 edi
  0028b	5e		 pop	 esi
  0028c	5d		 pop	 ebp

; 4608 : END_PARAM()

  0028d	c2 04 00	 ret	 4
?BindParameters@CSPSavePost@@UAEFH@Z ENDP		; CSPSavePost::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSavePost@@UAE@XZ				; CSPSavePost::~CSPSavePost
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSavePost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSavePost@@UAEPAXI@Z PROC NEAR			; CSPSavePost::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSavePost@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L181183
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L181183:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSavePost@@UAEPAXI@Z ENDP				; CSPSavePost::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSavePost@@UAE@XZ
_TEXT	SEGMENT
??1CSPSavePost@@UAE@XZ PROC NEAR			; CSPSavePost::~CSPSavePost, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSavePost@@UAE@XZ ENDP				; CSPSavePost::~CSPSavePost
_TEXT	ENDS
PUBLIC	??0CSPSaveItemDirect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveItemDirect::CSPSaveItemDirect
PUBLIC	?GetNumParam@CSPSaveItemDirect@@UAEHXZ		; CSPSaveItemDirect::GetNumParam
PUBLIC	?BindParameters@CSPSaveItemDirect@@UAEFH@Z	; CSPSaveItemDirect::BindParameters
PUBLIC	??_7CSPSaveItemDirect@@6B@			; CSPSaveItemDirect::`vftable'
PUBLIC	??_GCSPSaveItemDirect@@UAEPAXI@Z		; CSPSaveItemDirect::`scalar deleting destructor'
PUBLIC	??_C@_0FL@DINLIHEL@?$HL?5CALL?5TSaveItemDirect?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPSaveItemDirect@@UAEPAXI@Z:NEAR		; CSPSaveItemDirect::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T181366 DD	0ffffffffH
	DD	FLAT:$L181192
$T181363 DD	019930520H
	DD	01H
	DD	FLAT:$T181366
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FL@DINLIHEL@?$HL?5CALL?5TSaveItemDirect?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0FL@DINLIHEL@?$HL?5CALL?5TSaveItemDirect?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	' CALL TSaveItemDirect(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?'
	DB	',?,?,?,?,?,?,?,?,?,?,?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveItemDirect@@6B@
CONST	SEGMENT
??_7CSPSaveItemDirect@@6B@ DD FLAT:??_ECSPSaveItemDirect@@UAEPAXI@Z ; CSPSaveItemDirect::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveItemDirect@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveItemDirect@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveItemDirect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T181191 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveItemDirect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveItemDirect::CSPSaveItemDirect, COMDAT
; _this$ = ecx

; 4620 : DEF_QUERY( CSPSaveItemDirect, _T("{ CALL TSaveItemDirect(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveItemDirect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FL@DINLIHEL@?$HL?5CALL?5TSaveItemDirect?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T181191[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveItemDirect@@6B@
  0005e	72 0d		 jb	 SHORT $L181364
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L181364:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L181192:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveItemDirect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T181363
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveItemDirect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveItemDirect::CSPSaveItemDirect
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveItemDirect@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveItemDirect@@UAEHXZ PROC NEAR	; CSPSaveItemDirect::GetNumParam, COMDAT
; _this$ = ecx

; 4622 : BEGIN_PARAM(33)

  00000	b8 21 00 00 00	 mov	 eax, 33			; 00000021H
  00005	c3		 ret	 0
?GetNumParam@CSPSaveItemDirect@@UAEHXZ ENDP		; CSPSaveItemDirect::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveItemDirect@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveItemDirect@@UAEFH@Z PROC NEAR	; CSPSaveItemDirect::BindParameters, COMDAT
; _this$ = ecx

; 4622 : BEGIN_PARAM(33)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4623 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dlID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L136522
  00017	8d 86 40 0c 00
	00		 lea	 eax, DWORD PTR [esi+3136]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L136522
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 45 05 00
	00		 jne	 $L136517
$L136522:

; 4624 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bStorageType)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L136523
  00040	8d 8e 2c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3116]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136523:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L136524
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 1a 05 00
	00		 jne	 $L136517
$L136524:

; 4625 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwStorageID)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L136525
  0006b	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136525:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L136526
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 ef 04 00
	00		 jne	 $L136517
$L136526:

; 4626 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bOwnerType)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L136527
  00096	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136527:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 0a		 je	 SHORT $L136528
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 c4 04 00
	00		 jne	 $L136517
$L136528:

; 4627 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwOwnerID)

  000b7	3b fb		 cmp	 edi, ebx
  000b9	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bf	75 12		 jne	 SHORT $L136529
  000c1	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 01		 push	 1
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136529:
  000d3	66 3b c3	 cmp	 ax, bx
  000d6	74 0a		 je	 SHORT $L136530
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 99 04 00
	00		 jne	 $L136517
$L136530:

; 4628 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bItemID)

  000e2	3b fb		 cmp	 edi, ebx
  000e4	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000ea	75 12		 jne	 SHORT $L136531
  000ec	8d 96 48 0c 00
	00		 lea	 edx, DWORD PTR [esi+3144]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 01		 push	 1
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136531:
  000fe	66 3b c3	 cmp	 ax, bx
  00101	74 0a		 je	 SHORT $L136532
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	0f 85 6e 04 00
	00		 jne	 $L136517
$L136532:

; 4629 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wItemID)

  0010d	3b fb		 cmp	 edi, ebx
  0010f	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00115	75 12		 jne	 SHORT $L136533
  00117	8d 86 4a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3146]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 01		 push	 1
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L136533:
  00129	66 3b c3	 cmp	 ax, bx
  0012c	74 0a		 je	 SHORT $L136534
  0012e	66 3d 01 00	 cmp	 ax, 1
  00132	0f 85 43 04 00
	00		 jne	 $L136517
$L136534:

; 4630 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bLevel)

  00138	3b fb		 cmp	 edi, ebx
  0013a	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  00140	75 12		 jne	 SHORT $L136535
  00142	8d 8e 4c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3148]
  00148	51		 push	 ecx
  00149	6a 08		 push	 8
  0014b	6a 01		 push	 1
  0014d	8b ce		 mov	 ecx, esi
  0014f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136535:
  00154	66 3b c3	 cmp	 ax, bx
  00157	74 0a		 je	 SHORT $L136536
  00159	66 3d 01 00	 cmp	 ax, 1
  0015d	0f 85 18 04 00
	00		 jne	 $L136517
$L136536:

; 4631 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bCount)

  00163	3b fb		 cmp	 edi, ebx
  00165	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  0016b	75 12		 jne	 SHORT $L136537
  0016d	8d 96 4d 0c 00
	00		 lea	 edx, DWORD PTR [esi+3149]
  00173	52		 push	 edx
  00174	6a 09		 push	 9
  00176	6a 01		 push	 1
  00178	8b ce		 mov	 ecx, esi
  0017a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136537:
  0017f	66 3b c3	 cmp	 ax, bx
  00182	74 0a		 je	 SHORT $L136538
  00184	66 3d 01 00	 cmp	 ax, 1
  00188	0f 85 ed 03 00
	00		 jne	 $L136517
$L136538:

; 4632 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bGLevel)

  0018e	3b fb		 cmp	 edi, ebx
  00190	89 9e 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebx
  00196	75 12		 jne	 SHORT $L136539
  00198	8d 86 4e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3150]
  0019e	50		 push	 eax
  0019f	6a 0a		 push	 10			; 0000000aH
  001a1	6a 01		 push	 1
  001a3	8b ce		 mov	 ecx, esi
  001a5	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136539:
  001aa	66 3b c3	 cmp	 ax, bx
  001ad	74 0a		 je	 SHORT $L136540
  001af	66 3d 01 00	 cmp	 ax, 1
  001b3	0f 85 c2 03 00
	00		 jne	 $L136517
$L136540:

; 4633 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwDuraMax)

  001b9	3b fb		 cmp	 edi, ebx
  001bb	89 9e 38 08 00
	00		 mov	 DWORD PTR [esi+2104], ebx
  001c1	75 12		 jne	 SHORT $L136541
  001c3	8d 8e 50 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3152]
  001c9	51		 push	 ecx
  001ca	6a 0b		 push	 11			; 0000000bH
  001cc	6a 01		 push	 1
  001ce	8b ce		 mov	 ecx, esi
  001d0	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136541:
  001d5	66 3b c3	 cmp	 ax, bx
  001d8	74 0a		 je	 SHORT $L136542
  001da	66 3d 01 00	 cmp	 ax, 1
  001de	0f 85 97 03 00
	00		 jne	 $L136517
$L136542:

; 4634 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwDuraCur)

  001e4	3b fb		 cmp	 edi, ebx
  001e6	89 9e 3c 08 00
	00		 mov	 DWORD PTR [esi+2108], ebx
  001ec	75 12		 jne	 SHORT $L136543
  001ee	8d 96 54 0c 00
	00		 lea	 edx, DWORD PTR [esi+3156]
  001f4	52		 push	 edx
  001f5	6a 0c		 push	 12			; 0000000cH
  001f7	6a 01		 push	 1
  001f9	8b ce		 mov	 ecx, esi
  001fb	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136543:
  00200	66 3b c3	 cmp	 ax, bx
  00203	74 0a		 je	 SHORT $L136544
  00205	66 3d 01 00	 cmp	 ax, 1
  00209	0f 85 6c 03 00
	00		 jne	 $L136517
$L136544:

; 4635 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bRefineCur)

  0020f	3b fb		 cmp	 edi, ebx
  00211	89 9e 40 08 00
	00		 mov	 DWORD PTR [esi+2112], ebx
  00217	75 12		 jne	 SHORT $L136545
  00219	8d 86 58 0c 00
	00		 lea	 eax, DWORD PTR [esi+3160]
  0021f	50		 push	 eax
  00220	6a 0d		 push	 13			; 0000000dH
  00222	6a 01		 push	 1
  00224	8b ce		 mov	 ecx, esi
  00226	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136545:
  0022b	66 3b c3	 cmp	 ax, bx
  0022e	74 0a		 je	 SHORT $L136546
  00230	66 3d 01 00	 cmp	 ax, 1
  00234	0f 85 41 03 00
	00		 jne	 $L136517
$L136546:

; 4636 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dEndTime)

  0023a	3b fb		 cmp	 edi, ebx
  0023c	89 9e 44 08 00
	00		 mov	 DWORD PTR [esi+2116], ebx
  00242	75 12		 jne	 SHORT $L136547
  00244	8d 8e 5c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3164]
  0024a	51		 push	 ecx
  0024b	6a 0e		 push	 14			; 0000000eH
  0024d	6a 01		 push	 1
  0024f	8b ce		 mov	 ecx, esi
  00251	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L136547:
  00256	66 3b c3	 cmp	 ax, bx
  00259	74 0a		 je	 SHORT $L136548
  0025b	66 3d 01 00	 cmp	 ax, 1
  0025f	0f 85 16 03 00
	00		 jne	 $L136517
$L136548:

; 4637 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bGradeEffect)

  00265	3b fb		 cmp	 edi, ebx
  00267	89 9e 48 08 00
	00		 mov	 DWORD PTR [esi+2120], ebx
  0026d	75 12		 jne	 SHORT $L136549
  0026f	8d 96 6c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3180]
  00275	52		 push	 edx
  00276	6a 0f		 push	 15			; 0000000fH
  00278	6a 01		 push	 1
  0027a	8b ce		 mov	 ecx, esi
  0027c	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136549:
  00281	66 3b c3	 cmp	 ax, bx
  00284	74 0a		 je	 SHORT $L136550
  00286	66 3d 01 00	 cmp	 ax, 1
  0028a	0f 85 eb 02 00
	00		 jne	 $L136517
$L136550:

; 4638 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[0])

  00290	3b fb		 cmp	 edi, ebx
  00292	89 9e 4c 08 00
	00		 mov	 DWORD PTR [esi+2124], ebx
  00298	75 12		 jne	 SHORT $L136551
  0029a	8d 86 6d 0c 00
	00		 lea	 eax, DWORD PTR [esi+3181]
  002a0	50		 push	 eax
  002a1	6a 10		 push	 16			; 00000010H
  002a3	6a 01		 push	 1
  002a5	8b ce		 mov	 ecx, esi
  002a7	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136551:
  002ac	66 3b c3	 cmp	 ax, bx
  002af	74 0a		 je	 SHORT $L136552
  002b1	66 3d 01 00	 cmp	 ax, 1
  002b5	0f 85 c0 02 00
	00		 jne	 $L136517
$L136552:

; 4639 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[1])

  002bb	3b fb		 cmp	 edi, ebx
  002bd	89 9e 50 08 00
	00		 mov	 DWORD PTR [esi+2128], ebx
  002c3	75 12		 jne	 SHORT $L136553
  002c5	8d 8e 6e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3182]
  002cb	51		 push	 ecx
  002cc	6a 11		 push	 17			; 00000011H
  002ce	6a 01		 push	 1
  002d0	8b ce		 mov	 ecx, esi
  002d2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136553:
  002d7	66 3b c3	 cmp	 ax, bx
  002da	74 0a		 je	 SHORT $L136554
  002dc	66 3d 01 00	 cmp	 ax, 1
  002e0	0f 85 95 02 00
	00		 jne	 $L136517
$L136554:

; 4640 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[2])

  002e6	3b fb		 cmp	 edi, ebx
  002e8	89 9e 54 08 00
	00		 mov	 DWORD PTR [esi+2132], ebx
  002ee	75 12		 jne	 SHORT $L136555
  002f0	8d 96 6f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3183]
  002f6	52		 push	 edx
  002f7	6a 12		 push	 18			; 00000012H
  002f9	6a 01		 push	 1
  002fb	8b ce		 mov	 ecx, esi
  002fd	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136555:
  00302	66 3b c3	 cmp	 ax, bx
  00305	74 0a		 je	 SHORT $L136556
  00307	66 3d 01 00	 cmp	 ax, 1
  0030b	0f 85 6a 02 00
	00		 jne	 $L136517
$L136556:

; 4641 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[3])

  00311	3b fb		 cmp	 edi, ebx
  00313	89 9e 58 08 00
	00		 mov	 DWORD PTR [esi+2136], ebx
  00319	75 12		 jne	 SHORT $L136557
  0031b	8d 86 70 0c 00
	00		 lea	 eax, DWORD PTR [esi+3184]
  00321	50		 push	 eax
  00322	6a 13		 push	 19			; 00000013H
  00324	6a 01		 push	 1
  00326	8b ce		 mov	 ecx, esi
  00328	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136557:
  0032d	66 3b c3	 cmp	 ax, bx
  00330	74 0a		 je	 SHORT $L136558
  00332	66 3d 01 00	 cmp	 ax, 1
  00336	0f 85 3f 02 00
	00		 jne	 $L136517
$L136558:

; 4642 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[4])

  0033c	3b fb		 cmp	 edi, ebx
  0033e	89 9e 5c 08 00
	00		 mov	 DWORD PTR [esi+2140], ebx
  00344	75 12		 jne	 SHORT $L136559
  00346	8d 8e 71 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3185]
  0034c	51		 push	 ecx
  0034d	6a 14		 push	 20			; 00000014H
  0034f	6a 01		 push	 1
  00351	8b ce		 mov	 ecx, esi
  00353	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136559:
  00358	66 3b c3	 cmp	 ax, bx
  0035b	74 0a		 je	 SHORT $L136560
  0035d	66 3d 01 00	 cmp	 ax, 1
  00361	0f 85 14 02 00
	00		 jne	 $L136517
$L136560:

; 4643 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[5])

  00367	3b fb		 cmp	 edi, ebx
  00369	89 9e 60 08 00
	00		 mov	 DWORD PTR [esi+2144], ebx
  0036f	75 12		 jne	 SHORT $L136561
  00371	8d 96 72 0c 00
	00		 lea	 edx, DWORD PTR [esi+3186]
  00377	52		 push	 edx
  00378	6a 15		 push	 21			; 00000015H
  0037a	6a 01		 push	 1
  0037c	8b ce		 mov	 ecx, esi
  0037e	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136561:
  00383	66 3b c3	 cmp	 ax, bx
  00386	74 0a		 je	 SHORT $L136562
  00388	66 3d 01 00	 cmp	 ax, 1
  0038c	0f 85 e9 01 00
	00		 jne	 $L136517
$L136562:

; 4644 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[0])

  00392	3b fb		 cmp	 edi, ebx
  00394	89 9e 64 08 00
	00		 mov	 DWORD PTR [esi+2148], ebx
  0039a	75 12		 jne	 SHORT $L136563
  0039c	8d 86 74 0c 00
	00		 lea	 eax, DWORD PTR [esi+3188]
  003a2	50		 push	 eax
  003a3	6a 16		 push	 22			; 00000016H
  003a5	6a 01		 push	 1
  003a7	8b ce		 mov	 ecx, esi
  003a9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L136563:
  003ae	66 3b c3	 cmp	 ax, bx
  003b1	74 0a		 je	 SHORT $L136564
  003b3	66 3d 01 00	 cmp	 ax, 1
  003b7	0f 85 be 01 00
	00		 jne	 $L136517
$L136564:

; 4645 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[1])

  003bd	3b fb		 cmp	 edi, ebx
  003bf	89 9e 68 08 00
	00		 mov	 DWORD PTR [esi+2152], ebx
  003c5	75 12		 jne	 SHORT $L136565
  003c7	8d 8e 76 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3190]
  003cd	51		 push	 ecx
  003ce	6a 17		 push	 23			; 00000017H
  003d0	6a 01		 push	 1
  003d2	8b ce		 mov	 ecx, esi
  003d4	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L136565:
  003d9	66 3b c3	 cmp	 ax, bx
  003dc	74 0a		 je	 SHORT $L136566
  003de	66 3d 01 00	 cmp	 ax, 1
  003e2	0f 85 93 01 00
	00		 jne	 $L136517
$L136566:

; 4646 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[2])

  003e8	3b fb		 cmp	 edi, ebx
  003ea	89 9e 6c 08 00
	00		 mov	 DWORD PTR [esi+2156], ebx
  003f0	75 12		 jne	 SHORT $L136567
  003f2	8d 96 78 0c 00
	00		 lea	 edx, DWORD PTR [esi+3192]
  003f8	52		 push	 edx
  003f9	6a 18		 push	 24			; 00000018H
  003fb	6a 01		 push	 1
  003fd	8b ce		 mov	 ecx, esi
  003ff	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L136567:
  00404	66 3b c3	 cmp	 ax, bx
  00407	74 0a		 je	 SHORT $L136568
  00409	66 3d 01 00	 cmp	 ax, 1
  0040d	0f 85 68 01 00
	00		 jne	 $L136517
$L136568:

; 4647 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[3])

  00413	3b fb		 cmp	 edi, ebx
  00415	89 9e 70 08 00
	00		 mov	 DWORD PTR [esi+2160], ebx
  0041b	75 12		 jne	 SHORT $L136569
  0041d	8d 86 7a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3194]
  00423	50		 push	 eax
  00424	6a 19		 push	 25			; 00000019H
  00426	6a 01		 push	 1
  00428	8b ce		 mov	 ecx, esi
  0042a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L136569:
  0042f	66 3b c3	 cmp	 ax, bx
  00432	74 0a		 je	 SHORT $L136570
  00434	66 3d 01 00	 cmp	 ax, 1
  00438	0f 85 3d 01 00
	00		 jne	 $L136517
$L136570:

; 4648 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[4])

  0043e	3b fb		 cmp	 edi, ebx
  00440	89 9e 74 08 00
	00		 mov	 DWORD PTR [esi+2164], ebx
  00446	75 12		 jne	 SHORT $L136571
  00448	8d 8e 7c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3196]
  0044e	51		 push	 ecx
  0044f	6a 1a		 push	 26			; 0000001aH
  00451	6a 01		 push	 1
  00453	8b ce		 mov	 ecx, esi
  00455	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L136571:
  0045a	66 3b c3	 cmp	 ax, bx
  0045d	74 0a		 je	 SHORT $L136572
  0045f	66 3d 01 00	 cmp	 ax, 1
  00463	0f 85 12 01 00
	00		 jne	 $L136517
$L136572:

; 4649 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[5])

  00469	3b fb		 cmp	 edi, ebx
  0046b	89 9e 78 08 00
	00		 mov	 DWORD PTR [esi+2168], ebx
  00471	75 12		 jne	 SHORT $L136573
  00473	8d 96 7e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3198]
  00479	52		 push	 edx
  0047a	6a 1b		 push	 27			; 0000001bH
  0047c	6a 01		 push	 1
  0047e	8b ce		 mov	 ecx, esi
  00480	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L136573:
  00485	66 3b c3	 cmp	 ax, bx
  00488	74 0a		 je	 SHORT $L136574
  0048a	66 3d 01 00	 cmp	 ax, 1
  0048e	0f 85 e7 00 00
	00		 jne	 $L136517
$L136574:

; 4650 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[0])

  00494	3b fb		 cmp	 edi, ebx
  00496	89 9e 7c 08 00
	00		 mov	 DWORD PTR [esi+2172], ebx
  0049c	75 12		 jne	 SHORT $L136575
  0049e	8d 86 80 0c 00
	00		 lea	 eax, DWORD PTR [esi+3200]
  004a4	50		 push	 eax
  004a5	6a 1c		 push	 28			; 0000001cH
  004a7	6a 01		 push	 1
  004a9	8b ce		 mov	 ecx, esi
  004ab	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136575:
  004b0	66 3b c3	 cmp	 ax, bx
  004b3	74 0a		 je	 SHORT $L136576
  004b5	66 3d 01 00	 cmp	 ax, 1
  004b9	0f 85 bc 00 00
	00		 jne	 $L136517
$L136576:

; 4651 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[1])

  004bf	3b fb		 cmp	 edi, ebx
  004c1	89 9e 80 08 00
	00		 mov	 DWORD PTR [esi+2176], ebx
  004c7	75 12		 jne	 SHORT $L136577
  004c9	8d 8e 84 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3204]
  004cf	51		 push	 ecx
  004d0	6a 1d		 push	 29			; 0000001dH
  004d2	6a 01		 push	 1
  004d4	8b ce		 mov	 ecx, esi
  004d6	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136577:
  004db	66 3b c3	 cmp	 ax, bx
  004de	74 0a		 je	 SHORT $L136578
  004e0	66 3d 01 00	 cmp	 ax, 1
  004e4	0f 85 91 00 00
	00		 jne	 $L136517
$L136578:

; 4652 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[2])

  004ea	3b fb		 cmp	 edi, ebx
  004ec	89 9e 84 08 00
	00		 mov	 DWORD PTR [esi+2180], ebx
  004f2	75 12		 jne	 SHORT $L136579
  004f4	8d 96 88 0c 00
	00		 lea	 edx, DWORD PTR [esi+3208]
  004fa	52		 push	 edx
  004fb	6a 1e		 push	 30			; 0000001eH
  004fd	6a 01		 push	 1
  004ff	8b ce		 mov	 ecx, esi
  00501	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136579:
  00506	66 3b c3	 cmp	 ax, bx
  00509	74 06		 je	 SHORT $L136580
  0050b	66 3d 01 00	 cmp	 ax, 1
  0050f	75 6a		 jne	 SHORT $L136517
$L136580:

; 4653 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[3])

  00511	3b fb		 cmp	 edi, ebx
  00513	89 9e 88 08 00
	00		 mov	 DWORD PTR [esi+2184], ebx
  00519	75 12		 jne	 SHORT $L136581
  0051b	8d 86 8c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3212]
  00521	50		 push	 eax
  00522	6a 1f		 push	 31			; 0000001fH
  00524	6a 01		 push	 1
  00526	8b ce		 mov	 ecx, esi
  00528	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136581:
  0052d	66 3b c3	 cmp	 ax, bx
  00530	74 06		 je	 SHORT $L136582
  00532	66 3d 01 00	 cmp	 ax, 1
  00536	75 43		 jne	 SHORT $L136517
$L136582:

; 4654 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[4])

  00538	3b fb		 cmp	 edi, ebx
  0053a	89 9e 8c 08 00
	00		 mov	 DWORD PTR [esi+2188], ebx
  00540	75 12		 jne	 SHORT $L136583
  00542	8d 8e 90 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3216]
  00548	51		 push	 ecx
  00549	6a 20		 push	 32			; 00000020H
  0054b	6a 01		 push	 1
  0054d	8b ce		 mov	 ecx, esi
  0054f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136583:
  00554	66 3b c3	 cmp	 ax, bx
  00557	74 06		 je	 SHORT $L136584
  00559	66 3d 01 00	 cmp	 ax, 1
  0055d	75 1c		 jne	 SHORT $L136517
$L136584:

; 4655 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[5])

  0055f	3b fb		 cmp	 edi, ebx
  00561	89 9e 90 08 00
	00		 mov	 DWORD PTR [esi+2192], ebx
  00567	75 12		 jne	 SHORT $L136517
  00569	8d 96 94 0c 00
	00		 lea	 edx, DWORD PTR [esi+3220]
  0056f	52		 push	 edx
  00570	6a 21		 push	 33			; 00000021H
  00572	6a 01		 push	 1
  00574	8b ce		 mov	 ecx, esi
  00576	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136517:
  0057b	5f		 pop	 edi
  0057c	5e		 pop	 esi
  0057d	5b		 pop	 ebx

; 4656 : END_PARAM()

  0057e	c2 04 00	 ret	 4
?BindParameters@CSPSaveItemDirect@@UAEFH@Z ENDP		; CSPSaveItemDirect::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveItemDirect@@UAE@XZ			; CSPSaveItemDirect::~CSPSaveItemDirect
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveItemDirect@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveItemDirect@@UAEPAXI@Z PROC NEAR		; CSPSaveItemDirect::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveItemDirect@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L181378
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L181378:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveItemDirect@@UAEPAXI@Z ENDP			; CSPSaveItemDirect::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveItemDirect@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveItemDirect@@UAE@XZ PROC NEAR			; CSPSaveItemDirect::~CSPSaveItemDirect, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveItemDirect@@UAE@XZ ENDP			; CSPSaveItemDirect::~CSPSaveItemDirect
_TEXT	ENDS
PUBLIC	??0CSPPostRead@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPPostRead::CSPPostRead
PUBLIC	?GetNumParam@CSPPostRead@@UAEHXZ		; CSPPostRead::GetNumParam
PUBLIC	?BindParameters@CSPPostRead@@UAEFH@Z		; CSPPostRead::BindParameters
PUBLIC	??_7CSPPostRead@@6B@				; CSPPostRead::`vftable'
PUBLIC	??_GCSPPostRead@@UAEPAXI@Z			; CSPPostRead::`scalar deleting destructor'
PUBLIC	??_C@_0BJ@IANFNGLH@?$HL?5CALL?5TPostRead?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPPostRead@@UAEPAXI@Z:NEAR			; CSPPostRead::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T181561 DD	0ffffffffH
	DD	FLAT:$L181387
$T181558 DD	019930520H
	DD	01H
	DD	FLAT:$T181561
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BJ@IANFNGLH@?$HL?5CALL?5TPostRead?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BJ@IANFNGLH@?$HL?5CALL?5TPostRead?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' CALL TPostRead(?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPPostRead@@6B@
CONST	SEGMENT
??_7CSPPostRead@@6B@ DD FLAT:??_ECSPPostRead@@UAEPAXI@Z	; CSPPostRead::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPPostRead@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPPostRead@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPPostRead@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T181386 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPPostRead@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPPostRead::CSPPostRead, COMDAT
; _this$ = ecx

; 4666 : DEF_QUERY(CSPPostRead, _T("{ CALL TPostRead(?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPPostRead@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@IANFNGLH@?$HL?5CALL?5TPostRead?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T181386[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPPostRead@@6B@
  0005e	72 0d		 jb	 SHORT $L181559
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L181559:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L181387:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPPostRead@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T181558
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPPostRead@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPPostRead::CSPPostRead
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPPostRead@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPPostRead@@UAEHXZ PROC NEAR		; CSPPostRead::GetNumParam, COMDAT
; _this$ = ecx

; 4668 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPPostRead@@UAEHXZ ENDP			; CSPPostRead::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPPostRead@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPPostRead@@UAEFH@Z PROC NEAR		; CSPPostRead::BindParameters, COMDAT
; _this$ = ecx

; 4668 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 4669 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L136631
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L136631
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L136626
$L136631:

; 4670 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwPostID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L136632
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136632:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L136633
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L136626
$L136633:

; 4671 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bRead)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L136626
  00068	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136626:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 4672 : END_PARAM()

  0007c	c2 04 00	 ret	 4
?BindParameters@CSPPostRead@@UAEFH@Z ENDP		; CSPPostRead::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPPostRead@@UAE@XZ				; CSPPostRead::~CSPPostRead
; Function compile flags: /Ogty
;	COMDAT ??_GCSPPostRead@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPPostRead@@UAEPAXI@Z PROC NEAR			; CSPPostRead::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPPostRead@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L181573
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L181573:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPPostRead@@UAEPAXI@Z ENDP				; CSPPostRead::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPPostRead@@UAE@XZ
_TEXT	SEGMENT
??1CSPPostRead@@UAE@XZ PROC NEAR			; CSPPostRead::~CSPPostRead, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPPostRead@@UAE@XZ ENDP				; CSPPostRead::~CSPPostRead
_TEXT	ENDS
PUBLIC	??0CSPRecallmonDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPRecallmonDel::CSPRecallmonDel
PUBLIC	?GetNumParam@CSPRecallmonDel@@UAEHXZ		; CSPRecallmonDel::GetNumParam
PUBLIC	?BindParameters@CSPRecallmonDel@@UAEFH@Z	; CSPRecallmonDel::BindParameters
PUBLIC	??_7CSPRecallmonDel@@6B@			; CSPRecallmonDel::`vftable'
PUBLIC	??_GCSPRecallmonDel@@UAEPAXI@Z			; CSPRecallmonDel::`scalar deleting destructor'
PUBLIC	??_C@_0BL@MHINMLJP@?$HL?5CALL?5TRecallMonDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPRecallmonDel@@UAEPAXI@Z:NEAR		; CSPRecallmonDel::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T181756 DD	0ffffffffH
	DD	FLAT:$L181582
$T181753 DD	019930520H
	DD	01H
	DD	FLAT:$T181756
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BL@MHINMLJP@?$HL?5CALL?5TRecallMonDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BL@MHINMLJP@?$HL?5CALL?5TRecallMonDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' CALL TRecallMonDel(?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPRecallmonDel@@6B@
CONST	SEGMENT
??_7CSPRecallmonDel@@6B@ DD FLAT:??_ECSPRecallmonDel@@UAEPAXI@Z ; CSPRecallmonDel::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPRecallmonDel@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPRecallmonDel@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPRecallmonDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T181581 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPRecallmonDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPRecallmonDel::CSPRecallmonDel, COMDAT
; _this$ = ecx

; 4681 : DEF_QUERY(CSPRecallmonDel, _T("{ CALL TRecallMonDel(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPRecallmonDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@MHINMLJP@?$HL?5CALL?5TRecallMonDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T181581[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPRecallmonDel@@6B@
  0005e	72 0d		 jb	 SHORT $L181754
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L181754:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L181582:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPRecallmonDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T181753
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPRecallmonDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPRecallmonDel::CSPRecallmonDel
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPRecallmonDel@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPRecallmonDel@@UAEHXZ PROC NEAR		; CSPRecallmonDel::GetNumParam, COMDAT
; _this$ = ecx

; 4683 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPRecallmonDel@@UAEHXZ ENDP		; CSPRecallmonDel::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPRecallmonDel@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPRecallmonDel@@UAEFH@Z PROC NEAR	; CSPRecallmonDel::BindParameters, COMDAT
; _this$ = ecx

; 4683 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 4684 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L136679
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L136679
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L136674
$L136679:

; 4685 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwMonID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L136674
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136674:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 4686 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CSPRecallmonDel@@UAEFH@Z ENDP		; CSPRecallmonDel::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPRecallmonDel@@UAE@XZ			; CSPRecallmonDel::~CSPRecallmonDel
; Function compile flags: /Ogty
;	COMDAT ??_GCSPRecallmonDel@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPRecallmonDel@@UAEPAXI@Z PROC NEAR		; CSPRecallmonDel::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPRecallmonDel@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L181768
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L181768:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPRecallmonDel@@UAEPAXI@Z ENDP			; CSPRecallmonDel::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPRecallmonDel@@UAE@XZ
_TEXT	SEGMENT
??1CSPRecallmonDel@@UAE@XZ PROC NEAR			; CSPRecallmonDel::~CSPRecallmonDel, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPRecallmonDel@@UAE@XZ ENDP				; CSPRecallmonDel::~CSPRecallmonDel
_TEXT	ENDS
PUBLIC	??0CSPClearCurrentUser@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPClearCurrentUser::CSPClearCurrentUser
PUBLIC	?GetNumParam@CSPClearCurrentUser@@UAEHXZ	; CSPClearCurrentUser::GetNumParam
PUBLIC	?BindParameters@CSPClearCurrentUser@@UAEFH@Z	; CSPClearCurrentUser::BindParameters
PUBLIC	??_7CSPClearCurrentUser@@6B@			; CSPClearCurrentUser::`vftable'
PUBLIC	??_GCSPClearCurrentUser@@UAEPAXI@Z		; CSPClearCurrentUser::`scalar deleting destructor'
PUBLIC	??_C@_0BN@FAHNLGDM@?$HL?5CALL?5TClearCurrentUser?$CI?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPClearCurrentUser@@UAEPAXI@Z:NEAR		; CSPClearCurrentUser::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T181951 DD	0ffffffffH
	DD	FLAT:$L181777
$T181948 DD	019930520H
	DD	01H
	DD	FLAT:$T181951
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BN@FAHNLGDM@?$HL?5CALL?5TClearCurrentUser?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BN@FAHNLGDM@?$HL?5CALL?5TClearCurrentUser?$CI?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' CALL TClearCurrentUser(?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPClearCurrentUser@@6B@
CONST	SEGMENT
??_7CSPClearCurrentUser@@6B@ DD FLAT:??_ECSPClearCurrentUser@@UAEPAXI@Z ; CSPClearCurrentUser::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPClearCurrentUser@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPClearCurrentUser@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPClearCurrentUser@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T181776 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPClearCurrentUser@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPClearCurrentUser::CSPClearCurrentUser, COMDAT
; _this$ = ecx

; 4694 : DEF_QUERY(CSPClearCurrentUser, _T("{ CALL TClearCurrentUser(?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPClearCurrentUser@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BN@FAHNLGDM@?$HL?5CALL?5TClearCurrentUser?$CI?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T181776[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPClearCurrentUser@@6B@
  0005e	72 0d		 jb	 SHORT $L181949
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L181949:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L181777:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPClearCurrentUser@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T181948
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPClearCurrentUser@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPClearCurrentUser::CSPClearCurrentUser
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPClearCurrentUser@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPClearCurrentUser@@UAEHXZ PROC NEAR	; CSPClearCurrentUser::GetNumParam, COMDAT
; _this$ = ecx

; 4696 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CSPClearCurrentUser@@UAEHXZ ENDP		; CSPClearCurrentUser::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPClearCurrentUser@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPClearCurrentUser@@UAEFH@Z PROC NEAR	; CSPClearCurrentUser::BindParameters, COMDAT
; _this$ = ecx

; 4697 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L136719
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136719:

; 4698 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CSPClearCurrentUser@@UAEFH@Z ENDP	; CSPClearCurrentUser::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPClearCurrentUser@@UAE@XZ			; CSPClearCurrentUser::~CSPClearCurrentUser
; Function compile flags: /Ogty
;	COMDAT ??_GCSPClearCurrentUser@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPClearCurrentUser@@UAEPAXI@Z PROC NEAR		; CSPClearCurrentUser::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPClearCurrentUser@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L181963
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L181963:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPClearCurrentUser@@UAEPAXI@Z ENDP			; CSPClearCurrentUser::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPClearCurrentUser@@UAE@XZ
_TEXT	SEGMENT
??1CSPClearCurrentUser@@UAE@XZ PROC NEAR		; CSPClearCurrentUser::~CSPClearCurrentUser, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPClearCurrentUser@@UAE@XZ ENDP			; CSPClearCurrentUser::~CSPClearCurrentUser
_TEXT	ENDS
PUBLIC	??0CSPProtectedInsert@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPProtectedInsert::CSPProtectedInsert
PUBLIC	?GetNumParam@CSPProtectedInsert@@UAEHXZ		; CSPProtectedInsert::GetNumParam
PUBLIC	?BindParameters@CSPProtectedInsert@@UAEFH@Z	; CSPProtectedInsert::BindParameters
PUBLIC	??_7CSPProtectedInsert@@6B@			; CSPProtectedInsert::`vftable'
PUBLIC	??_GCSPProtectedInsert@@UAEPAXI@Z		; CSPProtectedInsert::`scalar deleting destructor'
PUBLIC	??_C@_0CF@PLLGJGJJ@?$HL?$DP?5?$DN?5CALL?5TProtectedInsert?$CI?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPProtectedInsert@@UAEPAXI@Z:NEAR		; CSPProtectedInsert::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T182146 DD	0ffffffffH
	DD	FLAT:$L181972
$T182143 DD	019930520H
	DD	01H
	DD	FLAT:$T182146
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CF@PLLGJGJJ@?$HL?$DP?5?$DN?5CALL?5TProtectedInsert?$CI?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CF@PLLGJGJJ@?$HL?$DP?5?$DN?5CALL?5TProtectedInsert?$CI?$DP?0?$DP?0?$DP@ DB '{'
	DB	'? = CALL TProtectedInsert(?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPProtectedInsert@@6B@
CONST	SEGMENT
??_7CSPProtectedInsert@@6B@ DD FLAT:??_ECSPProtectedInsert@@UAEPAXI@Z ; CSPProtectedInsert::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPProtectedInsert@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPProtectedInsert@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPProtectedInsert@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T181971 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPProtectedInsert@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPProtectedInsert::CSPProtectedInsert, COMDAT
; _this$ = ecx

; 4710 : DEF_QUERY(CSPProtectedInsert, _T("{? = CALL TProtectedInsert(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPProtectedInsert@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CF@PLLGJGJJ@?$HL?$DP?5?$DN?5CALL?5TProtectedInsert?$CI?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T181971[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPProtectedInsert@@6B@
  0005e	72 0d		 jb	 SHORT $L182144
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L182144:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L181972:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPProtectedInsert@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T182143
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPProtectedInsert@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPProtectedInsert::CSPProtectedInsert
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPProtectedInsert@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPProtectedInsert@@UAEHXZ PROC NEAR	; CSPProtectedInsert::GetNumParam, COMDAT
; _this$ = ecx

; 4712 : BEGIN_PARAM(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumParam@CSPProtectedInsert@@UAEHXZ ENDP		; CSPProtectedInsert::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPProtectedInsert@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPProtectedInsert@@UAEFH@Z PROC NEAR	; CSPProtectedInsert::BindParameters, COMDAT
; _this$ = ecx

; 4712 : BEGIN_PARAM(5)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4713 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L136771
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L136771
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 97 00 00
	00		 jne	 $L136766
$L136771:

; 4714 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L136772
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136772:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 06		 je	 SHORT $L136773
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	75 70		 jne	 SHORT $L136766
$L136773:

; 4715 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwProtected)

  0005d	3b fb		 cmp	 edi, ebx
  0005f	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00065	75 12		 jne	 SHORT $L136774
  00067	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006d	52		 push	 edx
  0006e	6a 03		 push	 3
  00070	6a 04		 push	 4
  00072	8b ce		 mov	 ecx, esi
  00074	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136774:
  00079	66 3b c3	 cmp	 ax, bx
  0007c	74 06		 je	 SHORT $L136775
  0007e	66 3d 01 00	 cmp	 ax, 1
  00082	75 49		 jne	 SHORT $L136766
$L136775:

; 4716 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szName)

  00084	3b fb		 cmp	 edi, ebx
  00086	c7 86 1c 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2076], -3 ; fffffffdH
  00090	75 14		 jne	 SHORT $L136776
  00092	6a 33		 push	 51			; 00000033H
  00094	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0009a	50		 push	 eax
  0009b	6a 04		 push	 4
  0009d	6a 01		 push	 1
  0009f	8b ce		 mov	 ecx, esi
  000a1	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L136776:
  000a6	66 3b c3	 cmp	 ax, bx
  000a9	74 06		 je	 SHORT $L136777
  000ab	66 3d 01 00	 cmp	 ax, 1
  000af	75 1c		 jne	 SHORT $L136766
$L136777:

; 4717 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bOption)

  000b1	3b fb		 cmp	 edi, ebx
  000b3	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b9	75 12		 jne	 SHORT $L136766
  000bb	8d 8e 6b 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3179]
  000c1	51		 push	 ecx
  000c2	6a 05		 push	 5
  000c4	6a 01		 push	 1
  000c6	8b ce		 mov	 ecx, esi
  000c8	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L136766:
  000cd	5f		 pop	 edi
  000ce	5e		 pop	 esi
  000cf	5b		 pop	 ebx

; 4718 : END_PARAM()

  000d0	c2 04 00	 ret	 4
?BindParameters@CSPProtectedInsert@@UAEFH@Z ENDP	; CSPProtectedInsert::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPProtectedInsert@@UAE@XZ			; CSPProtectedInsert::~CSPProtectedInsert
; Function compile flags: /Ogty
;	COMDAT ??_GCSPProtectedInsert@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPProtectedInsert@@UAEPAXI@Z PROC NEAR		; CSPProtectedInsert::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPProtectedInsert@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L182158
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L182158:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPProtectedInsert@@UAEPAXI@Z ENDP			; CSPProtectedInsert::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPProtectedInsert@@UAE@XZ
_TEXT	SEGMENT
??1CSPProtectedInsert@@UAE@XZ PROC NEAR			; CSPProtectedInsert::~CSPProtectedInsert, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPProtectedInsert@@UAE@XZ ENDP			; CSPProtectedInsert::~CSPProtectedInsert
_TEXT	ENDS
PUBLIC	??0CSPProtectedDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPProtectedDelete::CSPProtectedDelete
PUBLIC	?GetNumParam@CSPProtectedDelete@@UAEHXZ		; CSPProtectedDelete::GetNumParam
PUBLIC	?BindParameters@CSPProtectedDelete@@UAEFH@Z	; CSPProtectedDelete::BindParameters
PUBLIC	??_7CSPProtectedDelete@@6B@			; CSPProtectedDelete::`vftable'
PUBLIC	??_GCSPProtectedDelete@@UAEPAXI@Z		; CSPProtectedDelete::`scalar deleting destructor'
PUBLIC	??_C@_0BN@GLHBIPLO@?$HLCALL?5TProtectedDelete?$CI?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPProtectedDelete@@UAEPAXI@Z:NEAR		; CSPProtectedDelete::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T182341 DD	0ffffffffH
	DD	FLAT:$L182167
$T182338 DD	019930520H
	DD	01H
	DD	FLAT:$T182341
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BN@GLHBIPLO@?$HLCALL?5TProtectedDelete?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BN@GLHBIPLO@?$HLCALL?5TProtectedDelete?$CI?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL TProtectedDelete(?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPProtectedDelete@@6B@
CONST	SEGMENT
??_7CSPProtectedDelete@@6B@ DD FLAT:??_ECSPProtectedDelete@@UAEPAXI@Z ; CSPProtectedDelete::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPProtectedDelete@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPProtectedDelete@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPProtectedDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T182166 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPProtectedDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPProtectedDelete::CSPProtectedDelete, COMDAT
; _this$ = ecx

; 4726 : DEF_QUERY(CSPProtectedDelete, _T("{CALL TProtectedDelete(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPProtectedDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BN@GLHBIPLO@?$HLCALL?5TProtectedDelete?$CI?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T182166[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPProtectedDelete@@6B@
  0005e	72 0d		 jb	 SHORT $L182339
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L182339:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L182167:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPProtectedDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T182338
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPProtectedDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPProtectedDelete::CSPProtectedDelete
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPProtectedDelete@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPProtectedDelete@@UAEHXZ PROC NEAR	; CSPProtectedDelete::GetNumParam, COMDAT
; _this$ = ecx

; 4728 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPProtectedDelete@@UAEHXZ ENDP		; CSPProtectedDelete::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPProtectedDelete@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPProtectedDelete@@UAEFH@Z PROC NEAR	; CSPProtectedDelete::BindParameters, COMDAT
; _this$ = ecx

; 4728 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 4729 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L136823
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L136823
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L136818
$L136823:

; 4730 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwProtected)	

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L136818
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136818:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 4731 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CSPProtectedDelete@@UAEFH@Z ENDP	; CSPProtectedDelete::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPProtectedDelete@@UAE@XZ			; CSPProtectedDelete::~CSPProtectedDelete
; Function compile flags: /Ogty
;	COMDAT ??_GCSPProtectedDelete@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPProtectedDelete@@UAEPAXI@Z PROC NEAR		; CSPProtectedDelete::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPProtectedDelete@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L182353
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L182353:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPProtectedDelete@@UAEPAXI@Z ENDP			; CSPProtectedDelete::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPProtectedDelete@@UAE@XZ
_TEXT	SEGMENT
??1CSPProtectedDelete@@UAE@XZ PROC NEAR			; CSPProtectedDelete::~CSPProtectedDelete, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPProtectedDelete@@UAE@XZ ENDP			; CSPProtectedDelete::~CSPProtectedDelete
_TEXT	ENDS
PUBLIC	??0CSPPetDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPPetDelete::CSPPetDelete
PUBLIC	?GetNumParam@CSPPetDelete@@UAEHXZ		; CSPPetDelete::GetNumParam
PUBLIC	?BindParameters@CSPPetDelete@@UAEFH@Z		; CSPPetDelete::BindParameters
PUBLIC	??_7CSPPetDelete@@6B@				; CSPPetDelete::`vftable'
PUBLIC	??_GCSPPetDelete@@UAEPAXI@Z			; CSPPetDelete::`scalar deleting destructor'
PUBLIC	??_C@_0BH@JNKNPKHH@?$HLCALL?5TPetDelete?$CI?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPPetDelete@@UAEPAXI@Z:NEAR		; CSPPetDelete::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T182536 DD	0ffffffffH
	DD	FLAT:$L182362
$T182533 DD	019930520H
	DD	01H
	DD	FLAT:$T182536
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BH@JNKNPKHH@?$HLCALL?5TPetDelete?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BH@JNKNPKHH@?$HLCALL?5TPetDelete?$CI?$DP?0?$DP?$CJ?$HN?$AA@ DB '{C'
	DB	'ALL TPetDelete(?,?)}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CSPPetDelete@@6B@
CONST	SEGMENT
??_7CSPPetDelete@@6B@ DD FLAT:??_ECSPPetDelete@@UAEPAXI@Z ; CSPPetDelete::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPPetDelete@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPPetDelete@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPPetDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T182361 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPPetDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPPetDelete::CSPPetDelete, COMDAT
; _this$ = ecx

; 4740 : DEF_QUERY(CSPPetDelete, _T("{CALL TPetDelete(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPPetDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@JNKNPKHH@?$HLCALL?5TPetDelete?$CI?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T182361[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPPetDelete@@6B@
  0005e	72 0d		 jb	 SHORT $L182534
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L182534:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L182362:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPPetDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T182533
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPPetDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPPetDelete::CSPPetDelete
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPPetDelete@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPPetDelete@@UAEHXZ PROC NEAR		; CSPPetDelete::GetNumParam, COMDAT
; _this$ = ecx

; 4742 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPPetDelete@@UAEHXZ ENDP			; CSPPetDelete::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPPetDelete@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPPetDelete@@UAEFH@Z PROC NEAR		; CSPPetDelete::BindParameters, COMDAT
; _this$ = ecx

; 4742 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 4743 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwUserID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L136869
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L136869
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L136864
$L136869:

; 4744 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wPetID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L136864
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L136864:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 4745 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CSPPetDelete@@UAEFH@Z ENDP		; CSPPetDelete::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPPetDelete@@UAE@XZ				; CSPPetDelete::~CSPPetDelete
; Function compile flags: /Ogty
;	COMDAT ??_GCSPPetDelete@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPPetDelete@@UAEPAXI@Z PROC NEAR			; CSPPetDelete::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPPetDelete@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L182548
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L182548:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPPetDelete@@UAEPAXI@Z ENDP			; CSPPetDelete::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPPetDelete@@UAE@XZ
_TEXT	SEGMENT
??1CSPPetDelete@@UAE@XZ PROC NEAR			; CSPPetDelete::~CSPPetDelete, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPPetDelete@@UAE@XZ ENDP				; CSPPetDelete::~CSPPetDelete
_TEXT	ENDS
PUBLIC	??0CSPSavePet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSavePet::CSPSavePet
PUBLIC	?GetNumParam@CSPSavePet@@UAEHXZ			; CSPSavePet::GetNumParam
PUBLIC	?BindParameters@CSPSavePet@@UAEFH@Z		; CSPSavePet::BindParameters
PUBLIC	??_7CSPSavePet@@6B@				; CSPSavePet::`vftable'
PUBLIC	??_GCSPSavePet@@UAEPAXI@Z			; CSPSavePet::`scalar deleting destructor'
PUBLIC	??_C@_0BJ@PINFLPPI@?$HLCALL?5TSavePet?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPSavePet@@UAEPAXI@Z:NEAR			; CSPSavePet::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T182731 DD	0ffffffffH
	DD	FLAT:$L182557
$T182728 DD	019930520H
	DD	01H
	DD	FLAT:$T182731
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BJ@PINFLPPI@?$HLCALL?5TSavePet?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BJ@PINFLPPI@?$HLCALL?5TSavePet?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL TSavePet(?,?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPSavePet@@6B@
CONST	SEGMENT
??_7CSPSavePet@@6B@ DD FLAT:??_ECSPSavePet@@UAEPAXI@Z	; CSPSavePet::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSavePet@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSavePet@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSavePet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T182556 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSavePet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSavePet::CSPSavePet, COMDAT
; _this$ = ecx

; 4756 : DEF_QUERY(CSPSavePet, _T("{CALL TSavePet(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSavePet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@PINFLPPI@?$HLCALL?5TSavePet?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T182556[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSavePet@@6B@
  0005e	72 0d		 jb	 SHORT $L182729
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L182729:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L182557:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSavePet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T182728
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSavePet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSavePet::CSPSavePet
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSavePet@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSavePet@@UAEHXZ PROC NEAR		; CSPSavePet::GetNumParam, COMDAT
; _this$ = ecx

; 4758 : BEGIN_PARAM(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumParam@CSPSavePet@@UAEHXZ ENDP			; CSPSavePet::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSavePet@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSavePet@@UAEFH@Z PROC NEAR		; CSPSavePet::BindParameters, COMDAT
; _this$ = ecx

; 4758 : BEGIN_PARAM(4)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 4759 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L136917
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L136917
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 78		 jne	 SHORT $L136912
$L136917:

; 4760 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wPetID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L136918
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L136918:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L136919
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 4d		 jne	 SHORT $L136912
$L136919:

; 4761 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szName)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2072], -3 ; fffffffdH
  00066	75 14		 jne	 SHORT $L136920
  00068	6a 33		 push	 51			; 00000033H
  0006a	8d 96 32 0c 00
	00		 lea	 edx, DWORD PTR [esi+3122]
  00070	52		 push	 edx
  00071	6a 03		 push	 3
  00073	6a 01		 push	 1
  00075	8b ce		 mov	 ecx, esi
  00077	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L136920:
  0007c	66 85 c0	 test	 ax, ax
  0007f	74 06		 je	 SHORT $L136921
  00081	66 3d 01 00	 cmp	 ax, 1
  00085	75 20		 jne	 SHORT $L136912
$L136921:

; 4762 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_timeUse)

  00087	85 ff		 test	 edi, edi
  00089	c7 86 1c 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2076], 0
  00093	75 12		 jne	 SHORT $L136912
  00095	8d 86 68 0c 00
	00		 lea	 eax, DWORD PTR [esi+3176]
  0009b	50		 push	 eax
  0009c	6a 04		 push	 4
  0009e	6a 01		 push	 1
  000a0	8b ce		 mov	 ecx, esi
  000a2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L136912:
  000a7	5f		 pop	 edi
  000a8	5e		 pop	 esi

; 4763 : END_PARAM()

  000a9	c2 04 00	 ret	 4
?BindParameters@CSPSavePet@@UAEFH@Z ENDP		; CSPSavePet::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSavePet@@UAE@XZ				; CSPSavePet::~CSPSavePet
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSavePet@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSavePet@@UAEPAXI@Z PROC NEAR			; CSPSavePet::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSavePet@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L182743
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L182743:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSavePet@@UAEPAXI@Z ENDP				; CSPSavePet::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSavePet@@UAE@XZ
_TEXT	SEGMENT
??1CSPSavePet@@UAE@XZ PROC NEAR				; CSPSavePet::~CSPSavePet, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSavePet@@UAE@XZ ENDP				; CSPSavePet::~CSPSavePet
_TEXT	ENDS
PUBLIC	??0CSPSaveCharDataStart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveCharDataStart::CSPSaveCharDataStart
PUBLIC	?GetNumParam@CSPSaveCharDataStart@@UAEHXZ	; CSPSaveCharDataStart::GetNumParam
PUBLIC	?BindParameters@CSPSaveCharDataStart@@UAEFH@Z	; CSPSaveCharDataStart::BindParameters
PUBLIC	??_7CSPSaveCharDataStart@@6B@			; CSPSaveCharDataStart::`vftable'
PUBLIC	??_GCSPSaveCharDataStart@@UAEPAXI@Z		; CSPSaveCharDataStart::`scalar deleting destructor'
PUBLIC	??_C@_0BN@NCIFFGLJ@?$HLCALL?5TSaveCharDataStart?$CI?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPSaveCharDataStart@@UAEPAXI@Z:NEAR	; CSPSaveCharDataStart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T182926 DD	0ffffffffH
	DD	FLAT:$L182752
$T182923 DD	019930520H
	DD	01H
	DD	FLAT:$T182926
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BN@NCIFFGLJ@?$HLCALL?5TSaveCharDataStart?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BN@NCIFFGLJ@?$HLCALL?5TSaveCharDataStart?$CI?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL TSaveCharDataStart(?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveCharDataStart@@6B@
CONST	SEGMENT
??_7CSPSaveCharDataStart@@6B@ DD FLAT:??_ECSPSaveCharDataStart@@UAEPAXI@Z ; CSPSaveCharDataStart::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveCharDataStart@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveCharDataStart@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveCharDataStart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T182751 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveCharDataStart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveCharDataStart::CSPSaveCharDataStart, COMDAT
; _this$ = ecx

; 4771 : DEF_QUERY(CSPSaveCharDataStart, _T("{CALL TSaveCharDataStart(?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveCharDataStart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BN@NCIFFGLJ@?$HLCALL?5TSaveCharDataStart?$CI?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T182751[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveCharDataStart@@6B@
  0005e	72 0d		 jb	 SHORT $L182924
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L182924:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L182752:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveCharDataStart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T182923
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveCharDataStart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveCharDataStart::CSPSaveCharDataStart
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveCharDataStart@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveCharDataStart@@UAEHXZ PROC NEAR	; CSPSaveCharDataStart::GetNumParam, COMDAT
; _this$ = ecx

; 4773 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CSPSaveCharDataStart@@UAEHXZ ENDP		; CSPSaveCharDataStart::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveCharDataStart@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveCharDataStart@@UAEFH@Z PROC NEAR	; CSPSaveCharDataStart::BindParameters, COMDAT
; _this$ = ecx

; 4774 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L136961
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L136961:

; 4775 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CSPSaveCharDataStart@@UAEFH@Z ENDP	; CSPSaveCharDataStart::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveCharDataStart@@UAE@XZ			; CSPSaveCharDataStart::~CSPSaveCharDataStart
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveCharDataStart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveCharDataStart@@UAEPAXI@Z PROC NEAR		; CSPSaveCharDataStart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveCharDataStart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L182938
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L182938:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveCharDataStart@@UAEPAXI@Z ENDP		; CSPSaveCharDataStart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveCharDataStart@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveCharDataStart@@UAE@XZ PROC NEAR		; CSPSaveCharDataStart::~CSPSaveCharDataStart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveCharDataStart@@UAE@XZ ENDP			; CSPSaveCharDataStart::~CSPSaveCharDataStart
_TEXT	ENDS
PUBLIC	??0CSPSaveCharDataEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveCharDataEnd::CSPSaveCharDataEnd
PUBLIC	?GetNumParam@CSPSaveCharDataEnd@@UAEHXZ		; CSPSaveCharDataEnd::GetNumParam
PUBLIC	?BindParameters@CSPSaveCharDataEnd@@UAEFH@Z	; CSPSaveCharDataEnd::BindParameters
PUBLIC	??_7CSPSaveCharDataEnd@@6B@			; CSPSaveCharDataEnd::`vftable'
PUBLIC	??_GCSPSaveCharDataEnd@@UAEPAXI@Z		; CSPSaveCharDataEnd::`scalar deleting destructor'
PUBLIC	??_C@_0BL@ENCAHNLA@?$HLCALL?5TSaveCharDataEnd?$CI?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPSaveCharDataEnd@@UAEPAXI@Z:NEAR		; CSPSaveCharDataEnd::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T183121 DD	0ffffffffH
	DD	FLAT:$L182947
$T183118 DD	019930520H
	DD	01H
	DD	FLAT:$T183121
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BL@ENCAHNLA@?$HLCALL?5TSaveCharDataEnd?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BL@ENCAHNLA@?$HLCALL?5TSaveCharDataEnd?$CI?$DP?$CJ?$HN?$AA@ DB '{C'
	DB	'ALL TSaveCharDataEnd(?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveCharDataEnd@@6B@
CONST	SEGMENT
??_7CSPSaveCharDataEnd@@6B@ DD FLAT:??_ECSPSaveCharDataEnd@@UAEPAXI@Z ; CSPSaveCharDataEnd::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveCharDataEnd@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveCharDataEnd@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveCharDataEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T182946 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveCharDataEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveCharDataEnd::CSPSaveCharDataEnd, COMDAT
; _this$ = ecx

; 4783 : DEF_QUERY(CSPSaveCharDataEnd, _T("{CALL TSaveCharDataEnd(?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveCharDataEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@ENCAHNLA@?$HLCALL?5TSaveCharDataEnd?$CI?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T182946[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveCharDataEnd@@6B@
  0005e	72 0d		 jb	 SHORT $L183119
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L183119:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L182947:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveCharDataEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T183118
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveCharDataEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveCharDataEnd::CSPSaveCharDataEnd
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveCharDataEnd@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveCharDataEnd@@UAEHXZ PROC NEAR	; CSPSaveCharDataEnd::GetNumParam, COMDAT
; _this$ = ecx

; 4785 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CSPSaveCharDataEnd@@UAEHXZ ENDP		; CSPSaveCharDataEnd::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveCharDataEnd@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveCharDataEnd@@UAEFH@Z PROC NEAR	; CSPSaveCharDataEnd::BindParameters, COMDAT
; _this$ = ecx

; 4786 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L137004
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137004:

; 4787 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CSPSaveCharDataEnd@@UAEFH@Z ENDP	; CSPSaveCharDataEnd::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveCharDataEnd@@UAE@XZ			; CSPSaveCharDataEnd::~CSPSaveCharDataEnd
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveCharDataEnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveCharDataEnd@@UAEPAXI@Z PROC NEAR		; CSPSaveCharDataEnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveCharDataEnd@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L183133
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L183133:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveCharDataEnd@@UAEPAXI@Z ENDP			; CSPSaveCharDataEnd::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveCharDataEnd@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveCharDataEnd@@UAE@XZ PROC NEAR			; CSPSaveCharDataEnd::~CSPSaveCharDataEnd, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveCharDataEnd@@UAE@XZ ENDP			; CSPSaveCharDataEnd::~CSPSaveCharDataEnd
_TEXT	ENDS
PUBLIC	??0CSPSaveItemDataStart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveItemDataStart::CSPSaveItemDataStart
PUBLIC	?GetNumParam@CSPSaveItemDataStart@@UAEHXZ	; CSPSaveItemDataStart::GetNumParam
PUBLIC	?BindParameters@CSPSaveItemDataStart@@UAEFH@Z	; CSPSaveItemDataStart::BindParameters
PUBLIC	??_7CSPSaveItemDataStart@@6B@			; CSPSaveItemDataStart::`vftable'
PUBLIC	??_GCSPSaveItemDataStart@@UAEPAXI@Z		; CSPSaveItemDataStart::`scalar deleting destructor'
PUBLIC	??_C@_0BN@IGJCHCEP@?$HLCALL?5TSaveItemDataStart?$CI?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPSaveItemDataStart@@UAEPAXI@Z:NEAR	; CSPSaveItemDataStart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T183316 DD	0ffffffffH
	DD	FLAT:$L183142
$T183313 DD	019930520H
	DD	01H
	DD	FLAT:$T183316
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BN@IGJCHCEP@?$HLCALL?5TSaveItemDataStart?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BN@IGJCHCEP@?$HLCALL?5TSaveItemDataStart?$CI?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL TSaveItemDataStart(?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveItemDataStart@@6B@
CONST	SEGMENT
??_7CSPSaveItemDataStart@@6B@ DD FLAT:??_ECSPSaveItemDataStart@@UAEPAXI@Z ; CSPSaveItemDataStart::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveItemDataStart@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveItemDataStart@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveItemDataStart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T183141 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveItemDataStart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveItemDataStart::CSPSaveItemDataStart, COMDAT
; _this$ = ecx

; 4795 : DEF_QUERY(CSPSaveItemDataStart, _T("{CALL TSaveItemDataStart(?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveItemDataStart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BN@IGJCHCEP@?$HLCALL?5TSaveItemDataStart?$CI?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T183141[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveItemDataStart@@6B@
  0005e	72 0d		 jb	 SHORT $L183314
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L183314:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L183142:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveItemDataStart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T183313
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveItemDataStart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveItemDataStart::CSPSaveItemDataStart
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveItemDataStart@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveItemDataStart@@UAEHXZ PROC NEAR	; CSPSaveItemDataStart::GetNumParam, COMDAT
; _this$ = ecx

; 4797 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CSPSaveItemDataStart@@UAEHXZ ENDP		; CSPSaveItemDataStart::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveItemDataStart@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveItemDataStart@@UAEFH@Z PROC NEAR	; CSPSaveItemDataStart::BindParameters, COMDAT
; _this$ = ecx

; 4798 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L137047
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137047:

; 4799 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CSPSaveItemDataStart@@UAEFH@Z ENDP	; CSPSaveItemDataStart::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveItemDataStart@@UAE@XZ			; CSPSaveItemDataStart::~CSPSaveItemDataStart
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveItemDataStart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveItemDataStart@@UAEPAXI@Z PROC NEAR		; CSPSaveItemDataStart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveItemDataStart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L183328
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L183328:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveItemDataStart@@UAEPAXI@Z ENDP		; CSPSaveItemDataStart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveItemDataStart@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveItemDataStart@@UAE@XZ PROC NEAR		; CSPSaveItemDataStart::~CSPSaveItemDataStart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveItemDataStart@@UAE@XZ ENDP			; CSPSaveItemDataStart::~CSPSaveItemDataStart
_TEXT	ENDS
PUBLIC	??0CSPSaveItemDataEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveItemDataEnd::CSPSaveItemDataEnd
PUBLIC	?GetNumParam@CSPSaveItemDataEnd@@UAEHXZ		; CSPSaveItemDataEnd::GetNumParam
PUBLIC	?BindParameters@CSPSaveItemDataEnd@@UAEFH@Z	; CSPSaveItemDataEnd::BindParameters
PUBLIC	??_7CSPSaveItemDataEnd@@6B@			; CSPSaveItemDataEnd::`vftable'
PUBLIC	??_GCSPSaveItemDataEnd@@UAEPAXI@Z		; CSPSaveItemDataEnd::`scalar deleting destructor'
PUBLIC	??_C@_0BL@DCNPANMD@?$HLCALL?5TSaveItemDataEnd?$CI?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPSaveItemDataEnd@@UAEPAXI@Z:NEAR		; CSPSaveItemDataEnd::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T183511 DD	0ffffffffH
	DD	FLAT:$L183337
$T183508 DD	019930520H
	DD	01H
	DD	FLAT:$T183511
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BL@DCNPANMD@?$HLCALL?5TSaveItemDataEnd?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BL@DCNPANMD@?$HLCALL?5TSaveItemDataEnd?$CI?$DP?$CJ?$HN?$AA@ DB '{C'
	DB	'ALL TSaveItemDataEnd(?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveItemDataEnd@@6B@
CONST	SEGMENT
??_7CSPSaveItemDataEnd@@6B@ DD FLAT:??_ECSPSaveItemDataEnd@@UAEPAXI@Z ; CSPSaveItemDataEnd::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveItemDataEnd@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveItemDataEnd@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveItemDataEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T183336 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveItemDataEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveItemDataEnd::CSPSaveItemDataEnd, COMDAT
; _this$ = ecx

; 4807 : DEF_QUERY(CSPSaveItemDataEnd, _T("{CALL TSaveItemDataEnd(?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveItemDataEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@DCNPANMD@?$HLCALL?5TSaveItemDataEnd?$CI?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T183336[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveItemDataEnd@@6B@
  0005e	72 0d		 jb	 SHORT $L183509
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L183509:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L183337:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveItemDataEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T183508
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveItemDataEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveItemDataEnd::CSPSaveItemDataEnd
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveItemDataEnd@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveItemDataEnd@@UAEHXZ PROC NEAR	; CSPSaveItemDataEnd::GetNumParam, COMDAT
; _this$ = ecx

; 4809 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CSPSaveItemDataEnd@@UAEHXZ ENDP		; CSPSaveItemDataEnd::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveItemDataEnd@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveItemDataEnd@@UAEFH@Z PROC NEAR	; CSPSaveItemDataEnd::BindParameters, COMDAT
; _this$ = ecx

; 4810 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L137090
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137090:

; 4811 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CSPSaveItemDataEnd@@UAEFH@Z ENDP	; CSPSaveItemDataEnd::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveItemDataEnd@@UAE@XZ			; CSPSaveItemDataEnd::~CSPSaveItemDataEnd
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveItemDataEnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveItemDataEnd@@UAEPAXI@Z PROC NEAR		; CSPSaveItemDataEnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveItemDataEnd@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L183523
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L183523:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveItemDataEnd@@UAEPAXI@Z ENDP			; CSPSaveItemDataEnd::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveItemDataEnd@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveItemDataEnd@@UAE@XZ PROC NEAR			; CSPSaveItemDataEnd::~CSPSaveItemDataEnd, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveItemDataEnd@@UAE@XZ ENDP			; CSPSaveItemDataEnd::~CSPSaveItemDataEnd
_TEXT	ENDS
PUBLIC	??0CSPLoadService@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPLoadService::CSPLoadService
PUBLIC	?GetNumParam@CSPLoadService@@UAEHXZ		; CSPLoadService::GetNumParam
PUBLIC	?BindParameters@CSPLoadService@@UAEFH@Z		; CSPLoadService::BindParameters
PUBLIC	??_7CSPLoadService@@6B@				; CSPLoadService::`vftable'
PUBLIC	??_GCSPLoadService@@UAEPAXI@Z			; CSPLoadService::`scalar deleting destructor'
PUBLIC	??_C@_0BN@FKLLIGDD@?$HLCALL?5TLoadService?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPLoadService@@UAEPAXI@Z:NEAR		; CSPLoadService::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T183706 DD	0ffffffffH
	DD	FLAT:$L183532
$T183703 DD	019930520H
	DD	01H
	DD	FLAT:$T183706
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BN@FKLLIGDD@?$HLCALL?5TLoadService?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BN@FKLLIGDD@?$HLCALL?5TLoadService?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL TLoadService(?,?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPLoadService@@6B@
CONST	SEGMENT
??_7CSPLoadService@@6B@ DD FLAT:??_ECSPLoadService@@UAEPAXI@Z ; CSPLoadService::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPLoadService@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPLoadService@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPLoadService@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T183531 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPLoadService@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPLoadService::CSPLoadService, COMDAT
; _this$ = ecx

; 4822 : DEF_QUERY(CSPLoadService, _T("{CALL TLoadService(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPLoadService@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BN@FKLLIGDD@?$HLCALL?5TLoadService?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T183531[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPLoadService@@6B@
  0005e	72 0d		 jb	 SHORT $L183704
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L183704:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L183532:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPLoadService@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T183703
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPLoadService@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPLoadService::CSPLoadService
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPLoadService@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPLoadService@@UAEHXZ PROC NEAR		; CSPLoadService::GetNumParam, COMDAT
; _this$ = ecx

; 4824 : BEGIN_PARAM(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumParam@CSPLoadService@@UAEHXZ ENDP		; CSPLoadService::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPLoadService@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPLoadService@@UAEFH@Z PROC NEAR	; CSPLoadService::BindParameters, COMDAT
; _this$ = ecx

; 4824 : BEGIN_PARAM(4)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 4825 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bWorld)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L137141
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L137141
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 78		 jne	 SHORT $L137136
$L137141:

; 4826 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bServiceGroup)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L137142
  0003d	8d 8e 2d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3117]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137142:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L137143
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 4d		 jne	 SHORT $L137136
$L137143:

; 4827 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT, m_szIP)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2072], -3 ; fffffffdH
  00066	75 14		 jne	 SHORT $L137144
  00068	6a 33		 push	 51			; 00000033H
  0006a	8d 96 2e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3118]
  00070	52		 push	 edx
  00071	6a 03		 push	 3
  00073	6a 04		 push	 4
  00075	8b ce		 mov	 ecx, esi
  00077	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L137144:
  0007c	66 85 c0	 test	 ax, ax
  0007f	74 06		 je	 SHORT $L137145
  00081	66 3d 01 00	 cmp	 ax, 1
  00085	75 20		 jne	 SHORT $L137136
$L137145:

; 4828 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_wPort)

  00087	85 ff		 test	 edi, edi
  00089	c7 86 1c 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2076], 0
  00093	75 12		 jne	 SHORT $L137136
  00095	8d 86 62 0c 00
	00		 lea	 eax, DWORD PTR [esi+3170]
  0009b	50		 push	 eax
  0009c	6a 04		 push	 4
  0009e	6a 04		 push	 4
  000a0	8b ce		 mov	 ecx, esi
  000a2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137136:
  000a7	5f		 pop	 edi
  000a8	5e		 pop	 esi

; 4829 : END_PARAM()

  000a9	c2 04 00	 ret	 4
?BindParameters@CSPLoadService@@UAEFH@Z ENDP		; CSPLoadService::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPLoadService@@UAE@XZ			; CSPLoadService::~CSPLoadService
; Function compile flags: /Ogty
;	COMDAT ??_GCSPLoadService@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPLoadService@@UAEPAXI@Z PROC NEAR			; CSPLoadService::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPLoadService@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L183718
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L183718:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPLoadService@@UAEPAXI@Z ENDP			; CSPLoadService::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPLoadService@@UAE@XZ
_TEXT	SEGMENT
??1CSPLoadService@@UAE@XZ PROC NEAR			; CSPLoadService::~CSPLoadService, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPLoadService@@UAE@XZ ENDP				; CSPLoadService::~CSPLoadService
_TEXT	ENDS
PUBLIC	??0CSPSaveSMS@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveSMS::CSPSaveSMS
PUBLIC	?GetNumParam@CSPSaveSMS@@UAEHXZ			; CSPSaveSMS::GetNumParam
PUBLIC	?BindParameters@CSPSaveSMS@@UAEFH@Z		; CSPSaveSMS::BindParameters
PUBLIC	??_7CSPSaveSMS@@6B@				; CSPSaveSMS::`vftable'
PUBLIC	??_GCSPSaveSMS@@UAEPAXI@Z			; CSPSaveSMS::`scalar deleting destructor'
PUBLIC	??_C@_0CC@LHBJACLK@?$HL?5?$DP?5?$DN?5CALL?5TSaveSMS?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ@ ; `string'
EXTRN	??_ECSPSaveSMS@@UAEPAXI@Z:NEAR			; CSPSaveSMS::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T183901 DD	0ffffffffH
	DD	FLAT:$L183727
$T183898 DD	019930520H
	DD	01H
	DD	FLAT:$T183901
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CC@LHBJACLK@?$HL?5?$DP?5?$DN?5CALL?5TSaveSMS?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ@
CONST	SEGMENT
??_C@_0CC@LHBJACLK@?$HL?5?$DP?5?$DN?5CALL?5TSaveSMS?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ@ DB '{'
	DB	' ? = CALL TSaveSMS(?,?,?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveSMS@@6B@
CONST	SEGMENT
??_7CSPSaveSMS@@6B@ DD FLAT:??_ECSPSaveSMS@@UAEPAXI@Z	; CSPSaveSMS::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveSMS@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveSMS@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveSMS@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T183726 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveSMS@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveSMS::CSPSaveSMS, COMDAT
; _this$ = ecx

; 4843 : DEF_QUERY(CSPSaveSMS, _T("{ ? = CALL TSaveSMS(?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveSMS@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CC@LHBJACLK@?$HL?5?$DP?5?$DN?5CALL?5TSaveSMS?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T183726[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveSMS@@6B@
  0005e	72 0d		 jb	 SHORT $L183899
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L183899:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L183727:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveSMS@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T183898
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveSMS@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveSMS::CSPSaveSMS
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveSMS@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveSMS@@UAEHXZ PROC NEAR		; CSPSaveSMS::GetNumParam, COMDAT
; _this$ = ecx

; 4845 : BEGIN_PARAM(7)

  00000	b8 07 00 00 00	 mov	 eax, 7
  00005	c3		 ret	 0
?GetNumParam@CSPSaveSMS@@UAEHXZ ENDP			; CSPSaveSMS::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveSMS@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveSMS@@UAEFH@Z PROC NEAR		; CSPSaveSMS::BindParameters, COMDAT
; _this$ = ecx

; 4845 : BEGIN_PARAM(7)

  00000	55		 push	 ebp
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4846 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 ed		 xor	 ebp, ebp
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fd		 cmp	 edi, ebp
  0000f	89 ae 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebp
  00015	75 1f		 jne	 SHORT $L183910
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c5	 cmp	 ax, bp
  0002a	74 0a		 je	 SHORT $L183910
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 f3 00 00
	00		 jne	 $L137191
$L183910:

; 4847 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bWorld)

  00036	3b fd		 cmp	 edi, ebp
  00038	89 ae 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebp
  0003e	75 12		 jne	 SHORT $L183912
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L183912:
  00052	66 3b c5	 cmp	 ax, bp
  00055	74 0a		 je	 SHORT $L183913
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 c8 00 00
	00		 jne	 $L137191
$L183913:

; 4848 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bType)

  00061	3b fd		 cmp	 edi, ebp
  00063	89 ae 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebp
  00069	75 12		 jne	 SHORT $L183914
  0006b	8d 96 31 0c 00
	00		 lea	 edx, DWORD PTR [esi+3121]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L183914:
  0007d	66 3b c5	 cmp	 ax, bp
  00080	74 0a		 je	 SHORT $L183915
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 9d 00 00
	00		 jne	 $L137191
$L183915:

; 4849 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwSenderID)

  0008c	3b fd		 cmp	 edi, ebp
  0008e	89 ae 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebp
  00094	75 12		 jne	 SHORT $L183916
  00096	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L183916:
  000a8	66 3b c5	 cmp	 ax, bp
  000ab	74 06		 je	 SHORT $L183917
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	75 76		 jne	 SHORT $L137191
$L183917:

; 4850 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  000b3	3b fd		 cmp	 edi, ebp
  000b5	89 ae 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebp
  000bb	75 12		 jne	 SHORT $L183918
  000bd	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  000c3	51		 push	 ecx
  000c4	6a 05		 push	 5
  000c6	6a 01		 push	 1
  000c8	8b ce		 mov	 ecx, esi
  000ca	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L183918:
  000cf	66 3b c5	 cmp	 ax, bp
  000d2	74 06		 je	 SHORT $L137204
  000d4	66 3d 01 00	 cmp	 ax, 1
  000d8	75 4f		 jne	 SHORT $L137191
$L137204:

; 4851 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szTarget)

  000da	3b fd		 cmp	 edi, ebp
  000dc	c7 86 24 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2084], -3 ; fffffffdH
  000e6	75 14		 jne	 SHORT $L137205
  000e8	6a 33		 push	 51			; 00000033H
  000ea	8d 96 3c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3132]
  000f0	52		 push	 edx
  000f1	6a 06		 push	 6
  000f3	6a 01		 push	 1
  000f5	8b ce		 mov	 ecx, esi
  000f7	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L137205:
  000fc	66 3b c5	 cmp	 ax, bp
  000ff	74 06		 je	 SHORT $L183911
  00101	66 3d 01 00	 cmp	 ax, 1
  00105	75 22		 jne	 SHORT $L137191
$L183911:

; 4852 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szMsg)

  00107	3b fd		 cmp	 edi, ebp
  00109	c7 86 28 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2088], -3 ; fffffffdH
  00113	75 14		 jne	 SHORT $L137191
  00115	6a 51		 push	 81			; 00000051H
  00117	8d 86 6f 0c 00
	00		 lea	 eax, DWORD PTR [esi+3183]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 01		 push	 1
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L137191:
  00129	5f		 pop	 edi
  0012a	5e		 pop	 esi
  0012b	5d		 pop	 ebp

; 4853 : END_PARAM()

  0012c	c2 04 00	 ret	 4
?BindParameters@CSPSaveSMS@@UAEFH@Z ENDP		; CSPSaveSMS::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveSMS@@UAE@XZ				; CSPSaveSMS::~CSPSaveSMS
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveSMS@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveSMS@@UAEPAXI@Z PROC NEAR			; CSPSaveSMS::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveSMS@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L183922
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L183922:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveSMS@@UAEPAXI@Z ENDP				; CSPSaveSMS::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveSMS@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveSMS@@UAE@XZ PROC NEAR				; CSPSaveSMS::~CSPSaveSMS, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveSMS@@UAE@XZ ENDP				; CSPSaveSMS::~CSPSaveSMS
_TEXT	ENDS
PUBLIC	??0CSPGuildItemPutIn@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildItemPutIn::CSPGuildItemPutIn
PUBLIC	?GetNumParam@CSPGuildItemPutIn@@UAEHXZ		; CSPGuildItemPutIn::GetNumParam
PUBLIC	?BindParameters@CSPGuildItemPutIn@@UAEFH@Z	; CSPGuildItemPutIn::BindParameters
PUBLIC	??_7CSPGuildItemPutIn@@6B@			; CSPGuildItemPutIn::`vftable'
PUBLIC	??_GCSPGuildItemPutIn@@UAEPAXI@Z		; CSPGuildItemPutIn::`scalar deleting destructor'
PUBLIC	??_C@_0FJ@FDELKAMI@?$HL?5?$DP?5?$DN?5CALL?5TGuildItemPutIn?$CI?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPGuildItemPutIn@@UAEPAXI@Z:NEAR		; CSPGuildItemPutIn::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T184105 DD	0ffffffffH
	DD	FLAT:$L183931
$T184102 DD	019930520H
	DD	01H
	DD	FLAT:$T184105
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FJ@FDELKAMI@?$HL?5?$DP?5?$DN?5CALL?5TGuildItemPutIn?$CI?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0FJ@FDELKAMI@?$HL?5?$DP?5?$DN?5CALL?5TGuildItemPutIn?$CI?$DP?0?$DP?0?$DP@ DB '{'
	DB	' ? = CALL TGuildItemPutIn(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?'
	DB	',?,?,?,?,?,?,?,?,?,?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildItemPutIn@@6B@
CONST	SEGMENT
??_7CSPGuildItemPutIn@@6B@ DD FLAT:??_ECSPGuildItemPutIn@@UAEPAXI@Z ; CSPGuildItemPutIn::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildItemPutIn@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildItemPutIn@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildItemPutIn@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T183930 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildItemPutIn@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildItemPutIn::CSPGuildItemPutIn, COMDAT
; _this$ = ecx

; 4866 : DEF_QUERY(CSPGuildItemPutIn, _T("{ ? = CALL TGuildItemPutIn(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildItemPutIn@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FJ@FDELKAMI@?$HL?5?$DP?5?$DN?5CALL?5TGuildItemPutIn?$CI?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T183930[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildItemPutIn@@6B@
  0005e	72 0d		 jb	 SHORT $L184103
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L184103:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L183931:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildItemPutIn@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184102
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildItemPutIn@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildItemPutIn::CSPGuildItemPutIn
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildItemPutIn@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildItemPutIn@@UAEHXZ PROC NEAR	; CSPGuildItemPutIn::GetNumParam, COMDAT
; _this$ = ecx

; 4868 : BEGIN_PARAM(31)

  00000	b8 1f 00 00 00	 mov	 eax, 31			; 0000001fH
  00005	c3		 ret	 0
?GetNumParam@CSPGuildItemPutIn@@UAEHXZ ENDP		; CSPGuildItemPutIn::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildItemPutIn@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildItemPutIn@@UAEFH@Z PROC NEAR	; CSPGuildItemPutIn::BindParameters, COMDAT
; _this$ = ecx

; 4868 : BEGIN_PARAM(31)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4869 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L137254
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L137254
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 ef 04 00
	00		 jne	 $L137249
$L137254:

; 4870 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dlID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L137255
  00040	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
$L137255:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L137256
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 c4 04 00
	00		 jne	 $L137249
$L137256:

; 4871 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwGuildID)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L137257
  0006b	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137257:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L137258
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 99 04 00
	00		 jne	 $L137249
$L137258:

; 4872 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_dwItemID)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L137259
  00096	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 04		 push	 4
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137259:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 0a		 je	 SHORT $L137260
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 6e 04 00
	00		 jne	 $L137249
$L137260:

; 4873 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wItemID)

  000b7	3b fb		 cmp	 edi, ebx
  000b9	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bf	75 12		 jne	 SHORT $L137261
  000c1	8d 8e 42 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3138]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 01		 push	 1
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137261:
  000d3	66 3b c3	 cmp	 ax, bx
  000d6	74 0a		 je	 SHORT $L137262
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 43 04 00
	00		 jne	 $L137249
$L137262:

; 4874 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bLevel)

  000e2	3b fb		 cmp	 edi, ebx
  000e4	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000ea	75 12		 jne	 SHORT $L137263
  000ec	8d 96 44 0c 00
	00		 lea	 edx, DWORD PTR [esi+3140]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 01		 push	 1
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137263:
  000fe	66 3b c3	 cmp	 ax, bx
  00101	74 0a		 je	 SHORT $L137264
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	0f 85 18 04 00
	00		 jne	 $L137249
$L137264:

; 4875 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bCount)

  0010d	3b fb		 cmp	 edi, ebx
  0010f	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00115	75 12		 jne	 SHORT $L137265
  00117	8d 86 45 0c 00
	00		 lea	 eax, DWORD PTR [esi+3141]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 01		 push	 1
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137265:
  00129	66 3b c3	 cmp	 ax, bx
  0012c	74 0a		 je	 SHORT $L137266
  0012e	66 3d 01 00	 cmp	 ax, 1
  00132	0f 85 ed 03 00
	00		 jne	 $L137249
$L137266:

; 4876 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bGLevel)

  00138	3b fb		 cmp	 edi, ebx
  0013a	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  00140	75 12		 jne	 SHORT $L137267
  00142	8d 8e 46 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3142]
  00148	51		 push	 ecx
  00149	6a 08		 push	 8
  0014b	6a 01		 push	 1
  0014d	8b ce		 mov	 ecx, esi
  0014f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137267:
  00154	66 3b c3	 cmp	 ax, bx
  00157	74 0a		 je	 SHORT $L137268
  00159	66 3d 01 00	 cmp	 ax, 1
  0015d	0f 85 c2 03 00
	00		 jne	 $L137249
$L137268:

; 4877 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwDuraMax)

  00163	3b fb		 cmp	 edi, ebx
  00165	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  0016b	75 12		 jne	 SHORT $L137269
  0016d	8d 96 48 0c 00
	00		 lea	 edx, DWORD PTR [esi+3144]
  00173	52		 push	 edx
  00174	6a 09		 push	 9
  00176	6a 01		 push	 1
  00178	8b ce		 mov	 ecx, esi
  0017a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137269:
  0017f	66 3b c3	 cmp	 ax, bx
  00182	74 0a		 je	 SHORT $L137270
  00184	66 3d 01 00	 cmp	 ax, 1
  00188	0f 85 97 03 00
	00		 jne	 $L137249
$L137270:

; 4878 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwDuraCur)

  0018e	3b fb		 cmp	 edi, ebx
  00190	89 9e 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebx
  00196	75 12		 jne	 SHORT $L137271
  00198	8d 86 4c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3148]
  0019e	50		 push	 eax
  0019f	6a 0a		 push	 10			; 0000000aH
  001a1	6a 01		 push	 1
  001a3	8b ce		 mov	 ecx, esi
  001a5	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137271:
  001aa	66 3b c3	 cmp	 ax, bx
  001ad	74 0a		 je	 SHORT $L137272
  001af	66 3d 01 00	 cmp	 ax, 1
  001b3	0f 85 6c 03 00
	00		 jne	 $L137249
$L137272:

; 4879 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bRefineCur)

  001b9	3b fb		 cmp	 edi, ebx
  001bb	89 9e 38 08 00
	00		 mov	 DWORD PTR [esi+2104], ebx
  001c1	75 12		 jne	 SHORT $L137273
  001c3	8d 8e 50 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3152]
  001c9	51		 push	 ecx
  001ca	6a 0b		 push	 11			; 0000000bH
  001cc	6a 01		 push	 1
  001ce	8b ce		 mov	 ecx, esi
  001d0	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137273:
  001d5	66 3b c3	 cmp	 ax, bx
  001d8	74 0a		 je	 SHORT $L137274
  001da	66 3d 01 00	 cmp	 ax, 1
  001de	0f 85 41 03 00
	00		 jne	 $L137249
$L137274:

; 4880 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dEndTime)

  001e4	3b fb		 cmp	 edi, ebx
  001e6	89 9e 3c 08 00
	00		 mov	 DWORD PTR [esi+2108], ebx
  001ec	75 12		 jne	 SHORT $L137275
  001ee	8d 96 54 0c 00
	00		 lea	 edx, DWORD PTR [esi+3156]
  001f4	52		 push	 edx
  001f5	6a 0c		 push	 12			; 0000000cH
  001f7	6a 01		 push	 1
  001f9	8b ce		 mov	 ecx, esi
  001fb	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L137275:
  00200	66 3b c3	 cmp	 ax, bx
  00203	74 0a		 je	 SHORT $L137276
  00205	66 3d 01 00	 cmp	 ax, 1
  00209	0f 85 16 03 00
	00		 jne	 $L137249
$L137276:

; 4881 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bGradeEffect)

  0020f	3b fb		 cmp	 edi, ebx
  00211	89 9e 40 08 00
	00		 mov	 DWORD PTR [esi+2112], ebx
  00217	75 12		 jne	 SHORT $L137277
  00219	8d 86 64 0c 00
	00		 lea	 eax, DWORD PTR [esi+3172]
  0021f	50		 push	 eax
  00220	6a 0d		 push	 13			; 0000000dH
  00222	6a 01		 push	 1
  00224	8b ce		 mov	 ecx, esi
  00226	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137277:
  0022b	66 3b c3	 cmp	 ax, bx
  0022e	74 0a		 je	 SHORT $L137278
  00230	66 3d 01 00	 cmp	 ax, 1
  00234	0f 85 eb 02 00
	00		 jne	 $L137249
$L137278:

; 4882 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[0])

  0023a	3b fb		 cmp	 edi, ebx
  0023c	89 9e 44 08 00
	00		 mov	 DWORD PTR [esi+2116], ebx
  00242	75 12		 jne	 SHORT $L137279
  00244	8d 8e 65 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3173]
  0024a	51		 push	 ecx
  0024b	6a 0e		 push	 14			; 0000000eH
  0024d	6a 01		 push	 1
  0024f	8b ce		 mov	 ecx, esi
  00251	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137279:
  00256	66 3b c3	 cmp	 ax, bx
  00259	74 0a		 je	 SHORT $L137280
  0025b	66 3d 01 00	 cmp	 ax, 1
  0025f	0f 85 c0 02 00
	00		 jne	 $L137249
$L137280:

; 4883 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[1])

  00265	3b fb		 cmp	 edi, ebx
  00267	89 9e 48 08 00
	00		 mov	 DWORD PTR [esi+2120], ebx
  0026d	75 12		 jne	 SHORT $L137281
  0026f	8d 96 66 0c 00
	00		 lea	 edx, DWORD PTR [esi+3174]
  00275	52		 push	 edx
  00276	6a 0f		 push	 15			; 0000000fH
  00278	6a 01		 push	 1
  0027a	8b ce		 mov	 ecx, esi
  0027c	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137281:
  00281	66 3b c3	 cmp	 ax, bx
  00284	74 0a		 je	 SHORT $L137282
  00286	66 3d 01 00	 cmp	 ax, 1
  0028a	0f 85 95 02 00
	00		 jne	 $L137249
$L137282:

; 4884 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[2])

  00290	3b fb		 cmp	 edi, ebx
  00292	89 9e 4c 08 00
	00		 mov	 DWORD PTR [esi+2124], ebx
  00298	75 12		 jne	 SHORT $L137283
  0029a	8d 86 67 0c 00
	00		 lea	 eax, DWORD PTR [esi+3175]
  002a0	50		 push	 eax
  002a1	6a 10		 push	 16			; 00000010H
  002a3	6a 01		 push	 1
  002a5	8b ce		 mov	 ecx, esi
  002a7	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137283:
  002ac	66 3b c3	 cmp	 ax, bx
  002af	74 0a		 je	 SHORT $L137284
  002b1	66 3d 01 00	 cmp	 ax, 1
  002b5	0f 85 6a 02 00
	00		 jne	 $L137249
$L137284:

; 4885 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[3])

  002bb	3b fb		 cmp	 edi, ebx
  002bd	89 9e 50 08 00
	00		 mov	 DWORD PTR [esi+2128], ebx
  002c3	75 12		 jne	 SHORT $L137285
  002c5	8d 8e 68 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3176]
  002cb	51		 push	 ecx
  002cc	6a 11		 push	 17			; 00000011H
  002ce	6a 01		 push	 1
  002d0	8b ce		 mov	 ecx, esi
  002d2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137285:
  002d7	66 3b c3	 cmp	 ax, bx
  002da	74 0a		 je	 SHORT $L137286
  002dc	66 3d 01 00	 cmp	 ax, 1
  002e0	0f 85 3f 02 00
	00		 jne	 $L137249
$L137286:

; 4886 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[4])

  002e6	3b fb		 cmp	 edi, ebx
  002e8	89 9e 54 08 00
	00		 mov	 DWORD PTR [esi+2132], ebx
  002ee	75 12		 jne	 SHORT $L137287
  002f0	8d 96 69 0c 00
	00		 lea	 edx, DWORD PTR [esi+3177]
  002f6	52		 push	 edx
  002f7	6a 12		 push	 18			; 00000012H
  002f9	6a 01		 push	 1
  002fb	8b ce		 mov	 ecx, esi
  002fd	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137287:
  00302	66 3b c3	 cmp	 ax, bx
  00305	74 0a		 je	 SHORT $L137288
  00307	66 3d 01 00	 cmp	 ax, 1
  0030b	0f 85 14 02 00
	00		 jne	 $L137249
$L137288:

; 4887 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[5])

  00311	3b fb		 cmp	 edi, ebx
  00313	89 9e 58 08 00
	00		 mov	 DWORD PTR [esi+2136], ebx
  00319	75 12		 jne	 SHORT $L137289
  0031b	8d 86 6a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3178]
  00321	50		 push	 eax
  00322	6a 13		 push	 19			; 00000013H
  00324	6a 01		 push	 1
  00326	8b ce		 mov	 ecx, esi
  00328	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137289:
  0032d	66 3b c3	 cmp	 ax, bx
  00330	74 0a		 je	 SHORT $L137290
  00332	66 3d 01 00	 cmp	 ax, 1
  00336	0f 85 e9 01 00
	00		 jne	 $L137249
$L137290:

; 4888 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[0])

  0033c	3b fb		 cmp	 edi, ebx
  0033e	89 9e 5c 08 00
	00		 mov	 DWORD PTR [esi+2140], ebx
  00344	75 12		 jne	 SHORT $L137291
  00346	8d 8e 6c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3180]
  0034c	51		 push	 ecx
  0034d	6a 14		 push	 20			; 00000014H
  0034f	6a 01		 push	 1
  00351	8b ce		 mov	 ecx, esi
  00353	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137291:
  00358	66 3b c3	 cmp	 ax, bx
  0035b	74 0a		 je	 SHORT $L137292
  0035d	66 3d 01 00	 cmp	 ax, 1
  00361	0f 85 be 01 00
	00		 jne	 $L137249
$L137292:

; 4889 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[1])

  00367	3b fb		 cmp	 edi, ebx
  00369	89 9e 60 08 00
	00		 mov	 DWORD PTR [esi+2144], ebx
  0036f	75 12		 jne	 SHORT $L137293
  00371	8d 96 6e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3182]
  00377	52		 push	 edx
  00378	6a 15		 push	 21			; 00000015H
  0037a	6a 01		 push	 1
  0037c	8b ce		 mov	 ecx, esi
  0037e	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137293:
  00383	66 3b c3	 cmp	 ax, bx
  00386	74 0a		 je	 SHORT $L137294
  00388	66 3d 01 00	 cmp	 ax, 1
  0038c	0f 85 93 01 00
	00		 jne	 $L137249
$L137294:

; 4890 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[2])

  00392	3b fb		 cmp	 edi, ebx
  00394	89 9e 64 08 00
	00		 mov	 DWORD PTR [esi+2148], ebx
  0039a	75 12		 jne	 SHORT $L137295
  0039c	8d 86 70 0c 00
	00		 lea	 eax, DWORD PTR [esi+3184]
  003a2	50		 push	 eax
  003a3	6a 16		 push	 22			; 00000016H
  003a5	6a 01		 push	 1
  003a7	8b ce		 mov	 ecx, esi
  003a9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137295:
  003ae	66 3b c3	 cmp	 ax, bx
  003b1	74 0a		 je	 SHORT $L137296
  003b3	66 3d 01 00	 cmp	 ax, 1
  003b7	0f 85 68 01 00
	00		 jne	 $L137249
$L137296:

; 4891 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[3])

  003bd	3b fb		 cmp	 edi, ebx
  003bf	89 9e 68 08 00
	00		 mov	 DWORD PTR [esi+2152], ebx
  003c5	75 12		 jne	 SHORT $L137297
  003c7	8d 8e 72 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3186]
  003cd	51		 push	 ecx
  003ce	6a 17		 push	 23			; 00000017H
  003d0	6a 01		 push	 1
  003d2	8b ce		 mov	 ecx, esi
  003d4	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137297:
  003d9	66 3b c3	 cmp	 ax, bx
  003dc	74 0a		 je	 SHORT $L137298
  003de	66 3d 01 00	 cmp	 ax, 1
  003e2	0f 85 3d 01 00
	00		 jne	 $L137249
$L137298:

; 4892 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[4])

  003e8	3b fb		 cmp	 edi, ebx
  003ea	89 9e 6c 08 00
	00		 mov	 DWORD PTR [esi+2156], ebx
  003f0	75 12		 jne	 SHORT $L137299
  003f2	8d 96 74 0c 00
	00		 lea	 edx, DWORD PTR [esi+3188]
  003f8	52		 push	 edx
  003f9	6a 18		 push	 24			; 00000018H
  003fb	6a 01		 push	 1
  003fd	8b ce		 mov	 ecx, esi
  003ff	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137299:
  00404	66 3b c3	 cmp	 ax, bx
  00407	74 0a		 je	 SHORT $L137300
  00409	66 3d 01 00	 cmp	 ax, 1
  0040d	0f 85 12 01 00
	00		 jne	 $L137249
$L137300:

; 4893 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[5])

  00413	3b fb		 cmp	 edi, ebx
  00415	89 9e 70 08 00
	00		 mov	 DWORD PTR [esi+2160], ebx
  0041b	75 12		 jne	 SHORT $L137301
  0041d	8d 86 76 0c 00
	00		 lea	 eax, DWORD PTR [esi+3190]
  00423	50		 push	 eax
  00424	6a 19		 push	 25			; 00000019H
  00426	6a 01		 push	 1
  00428	8b ce		 mov	 ecx, esi
  0042a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137301:
  0042f	66 3b c3	 cmp	 ax, bx
  00432	74 0a		 je	 SHORT $L137302
  00434	66 3d 01 00	 cmp	 ax, 1
  00438	0f 85 e7 00 00
	00		 jne	 $L137249
$L137302:

; 4894 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[0])

  0043e	3b fb		 cmp	 edi, ebx
  00440	89 9e 74 08 00
	00		 mov	 DWORD PTR [esi+2164], ebx
  00446	75 12		 jne	 SHORT $L137303
  00448	8d 8e 78 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3192]
  0044e	51		 push	 ecx
  0044f	6a 1a		 push	 26			; 0000001aH
  00451	6a 01		 push	 1
  00453	8b ce		 mov	 ecx, esi
  00455	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137303:
  0045a	66 3b c3	 cmp	 ax, bx
  0045d	74 0a		 je	 SHORT $L137304
  0045f	66 3d 01 00	 cmp	 ax, 1
  00463	0f 85 bc 00 00
	00		 jne	 $L137249
$L137304:

; 4895 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[1])

  00469	3b fb		 cmp	 edi, ebx
  0046b	89 9e 78 08 00
	00		 mov	 DWORD PTR [esi+2168], ebx
  00471	75 12		 jne	 SHORT $L137305
  00473	8d 96 7c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3196]
  00479	52		 push	 edx
  0047a	6a 1b		 push	 27			; 0000001bH
  0047c	6a 01		 push	 1
  0047e	8b ce		 mov	 ecx, esi
  00480	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137305:
  00485	66 3b c3	 cmp	 ax, bx
  00488	74 0a		 je	 SHORT $L137306
  0048a	66 3d 01 00	 cmp	 ax, 1
  0048e	0f 85 91 00 00
	00		 jne	 $L137249
$L137306:

; 4896 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[2])

  00494	3b fb		 cmp	 edi, ebx
  00496	89 9e 7c 08 00
	00		 mov	 DWORD PTR [esi+2172], ebx
  0049c	75 12		 jne	 SHORT $L137307
  0049e	8d 86 80 0c 00
	00		 lea	 eax, DWORD PTR [esi+3200]
  004a4	50		 push	 eax
  004a5	6a 1c		 push	 28			; 0000001cH
  004a7	6a 01		 push	 1
  004a9	8b ce		 mov	 ecx, esi
  004ab	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137307:
  004b0	66 3b c3	 cmp	 ax, bx
  004b3	74 06		 je	 SHORT $L137308
  004b5	66 3d 01 00	 cmp	 ax, 1
  004b9	75 6a		 jne	 SHORT $L137249
$L137308:

; 4897 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[3])

  004bb	3b fb		 cmp	 edi, ebx
  004bd	89 9e 80 08 00
	00		 mov	 DWORD PTR [esi+2176], ebx
  004c3	75 12		 jne	 SHORT $L137309
  004c5	8d 8e 84 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3204]
  004cb	51		 push	 ecx
  004cc	6a 1d		 push	 29			; 0000001dH
  004ce	6a 01		 push	 1
  004d0	8b ce		 mov	 ecx, esi
  004d2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137309:
  004d7	66 3b c3	 cmp	 ax, bx
  004da	74 06		 je	 SHORT $L137310
  004dc	66 3d 01 00	 cmp	 ax, 1
  004e0	75 43		 jne	 SHORT $L137249
$L137310:

; 4898 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[4])

  004e2	3b fb		 cmp	 edi, ebx
  004e4	89 9e 84 08 00
	00		 mov	 DWORD PTR [esi+2180], ebx
  004ea	75 12		 jne	 SHORT $L137311
  004ec	8d 96 88 0c 00
	00		 lea	 edx, DWORD PTR [esi+3208]
  004f2	52		 push	 edx
  004f3	6a 1e		 push	 30			; 0000001eH
  004f5	6a 01		 push	 1
  004f7	8b ce		 mov	 ecx, esi
  004f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137311:
  004fe	66 3b c3	 cmp	 ax, bx
  00501	74 06		 je	 SHORT $L137312
  00503	66 3d 01 00	 cmp	 ax, 1
  00507	75 1c		 jne	 SHORT $L137249
$L137312:

; 4899 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[5])

  00509	3b fb		 cmp	 edi, ebx
  0050b	89 9e 88 08 00
	00		 mov	 DWORD PTR [esi+2184], ebx
  00511	75 12		 jne	 SHORT $L137249
  00513	8d 86 8c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3212]
  00519	50		 push	 eax
  0051a	6a 1f		 push	 31			; 0000001fH
  0051c	6a 01		 push	 1
  0051e	8b ce		 mov	 ecx, esi
  00520	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137249:
  00525	5f		 pop	 edi
  00526	5e		 pop	 esi
  00527	5b		 pop	 ebx

; 4900 : END_PARAM()

  00528	c2 04 00	 ret	 4
?BindParameters@CSPGuildItemPutIn@@UAEFH@Z ENDP		; CSPGuildItemPutIn::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildItemPutIn@@UAE@XZ			; CSPGuildItemPutIn::~CSPGuildItemPutIn
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildItemPutIn@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildItemPutIn@@UAEPAXI@Z PROC NEAR		; CSPGuildItemPutIn::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildItemPutIn@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L184117
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L184117:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildItemPutIn@@UAEPAXI@Z ENDP			; CSPGuildItemPutIn::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildItemPutIn@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildItemPutIn@@UAE@XZ PROC NEAR			; CSPGuildItemPutIn::~CSPGuildItemPutIn, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildItemPutIn@@UAE@XZ ENDP			; CSPGuildItemPutIn::~CSPGuildItemPutIn
_TEXT	ENDS
PUBLIC	??0CSPGuildItemTakeOut@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildItemTakeOut::CSPGuildItemTakeOut
PUBLIC	?GetNumParam@CSPGuildItemTakeOut@@UAEHXZ	; CSPGuildItemTakeOut::GetNumParam
PUBLIC	?BindParameters@CSPGuildItemTakeOut@@UAEFH@Z	; CSPGuildItemTakeOut::BindParameters
PUBLIC	??_7CSPGuildItemTakeOut@@6B@			; CSPGuildItemTakeOut::`vftable'
PUBLIC	??_GCSPGuildItemTakeOut@@UAEPAXI@Z		; CSPGuildItemTakeOut::`scalar deleting destructor'
PUBLIC	??_C@_0FL@JJIDANDC@?$HL?5?$DP?5?$DN?5CALL?5TGuildItemTakeOut?$CI?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPGuildItemTakeOut@@UAEPAXI@Z:NEAR		; CSPGuildItemTakeOut::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T184300 DD	0ffffffffH
	DD	FLAT:$L184126
$T184297 DD	019930520H
	DD	01H
	DD	FLAT:$T184300
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FL@JJIDANDC@?$HL?5?$DP?5?$DN?5CALL?5TGuildItemTakeOut?$CI?$DP?0?$DP@
CONST	SEGMENT
??_C@_0FL@JJIDANDC@?$HL?5?$DP?5?$DN?5CALL?5TGuildItemTakeOut?$CI?$DP?0?$DP@ DB '{'
	DB	' ? = CALL TGuildItemTakeOut(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?'
	DB	',?,?,?,?,?,?,?,?,?,?,?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildItemTakeOut@@6B@
CONST	SEGMENT
??_7CSPGuildItemTakeOut@@6B@ DD FLAT:??_ECSPGuildItemTakeOut@@UAEPAXI@Z ; CSPGuildItemTakeOut::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildItemTakeOut@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildItemTakeOut@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildItemTakeOut@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T184125 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildItemTakeOut@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildItemTakeOut::CSPGuildItemTakeOut, COMDAT
; _this$ = ecx

; 4911 : DEF_QUERY(CSPGuildItemTakeOut, _T("{ ? = CALL TGuildItemTakeOut(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildItemTakeOut@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FL@JJIDANDC@?$HL?5?$DP?5?$DN?5CALL?5TGuildItemTakeOut?$CI?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T184125[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildItemTakeOut@@6B@
  0005e	72 0d		 jb	 SHORT $L184298
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L184298:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184126:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildItemTakeOut@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184297
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildItemTakeOut@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildItemTakeOut::CSPGuildItemTakeOut
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildItemTakeOut@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildItemTakeOut@@UAEHXZ PROC NEAR	; CSPGuildItemTakeOut::GetNumParam, COMDAT
; _this$ = ecx

; 4913 : BEGIN_PARAM(31)

  00000	b8 1f 00 00 00	 mov	 eax, 31			; 0000001fH
  00005	c3		 ret	 0
?GetNumParam@CSPGuildItemTakeOut@@UAEHXZ ENDP		; CSPGuildItemTakeOut::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildItemTakeOut@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildItemTakeOut@@UAEFH@Z PROC NEAR	; CSPGuildItemTakeOut::BindParameters, COMDAT
; _this$ = ecx

; 4913 : BEGIN_PARAM(31)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4914 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L137360
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L137360
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 ef 04 00
	00		 jne	 $L137355
$L137360:

; 4915 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dlID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L137361
  00040	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 04		 push	 4
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
$L137361:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L137362
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 c4 04 00
	00		 jne	 $L137355
$L137362:

; 4916 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwGuildID)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L137363
  0006b	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137363:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L137364
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 99 04 00
	00		 jne	 $L137355
$L137364:

; 4917 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwItemID)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L137365
  00096	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137365:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 0a		 je	 SHORT $L137366
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 6e 04 00
	00		 jne	 $L137355
$L137366:

; 4918 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_wItemID)

  000b7	3b fb		 cmp	 edi, ebx
  000b9	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bf	75 12		 jne	 SHORT $L137367
  000c1	8d 8e 42 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3138]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 04		 push	 4
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137367:
  000d3	66 3b c3	 cmp	 ax, bx
  000d6	74 0a		 je	 SHORT $L137368
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 43 04 00
	00		 jne	 $L137355
$L137368:

; 4919 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bLevel)

  000e2	3b fb		 cmp	 edi, ebx
  000e4	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000ea	75 12		 jne	 SHORT $L137369
  000ec	8d 96 44 0c 00
	00		 lea	 edx, DWORD PTR [esi+3140]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 04		 push	 4
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137369:
  000fe	66 3b c3	 cmp	 ax, bx
  00101	74 0a		 je	 SHORT $L137370
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	0f 85 18 04 00
	00		 jne	 $L137355
$L137370:

; 4920 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bCount)

  0010d	3b fb		 cmp	 edi, ebx
  0010f	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00115	75 12		 jne	 SHORT $L137371
  00117	8d 86 45 0c 00
	00		 lea	 eax, DWORD PTR [esi+3141]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 01		 push	 1
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137371:
  00129	66 3b c3	 cmp	 ax, bx
  0012c	74 0a		 je	 SHORT $L137372
  0012e	66 3d 01 00	 cmp	 ax, 1
  00132	0f 85 ed 03 00
	00		 jne	 $L137355
$L137372:

; 4921 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bGLevel)

  00138	3b fb		 cmp	 edi, ebx
  0013a	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  00140	75 12		 jne	 SHORT $L137373
  00142	8d 8e 46 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3142]
  00148	51		 push	 ecx
  00149	6a 08		 push	 8
  0014b	6a 04		 push	 4
  0014d	8b ce		 mov	 ecx, esi
  0014f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137373:
  00154	66 3b c3	 cmp	 ax, bx
  00157	74 0a		 je	 SHORT $L137374
  00159	66 3d 01 00	 cmp	 ax, 1
  0015d	0f 85 c2 03 00
	00		 jne	 $L137355
$L137374:

; 4922 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dwDuraMax)

  00163	3b fb		 cmp	 edi, ebx
  00165	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  0016b	75 12		 jne	 SHORT $L137375
  0016d	8d 96 48 0c 00
	00		 lea	 edx, DWORD PTR [esi+3144]
  00173	52		 push	 edx
  00174	6a 09		 push	 9
  00176	6a 04		 push	 4
  00178	8b ce		 mov	 ecx, esi
  0017a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137375:
  0017f	66 3b c3	 cmp	 ax, bx
  00182	74 0a		 je	 SHORT $L137376
  00184	66 3d 01 00	 cmp	 ax, 1
  00188	0f 85 97 03 00
	00		 jne	 $L137355
$L137376:

; 4923 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dwDuraCur)

  0018e	3b fb		 cmp	 edi, ebx
  00190	89 9e 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebx
  00196	75 12		 jne	 SHORT $L137377
  00198	8d 86 4c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3148]
  0019e	50		 push	 eax
  0019f	6a 0a		 push	 10			; 0000000aH
  001a1	6a 04		 push	 4
  001a3	8b ce		 mov	 ecx, esi
  001a5	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137377:
  001aa	66 3b c3	 cmp	 ax, bx
  001ad	74 0a		 je	 SHORT $L137378
  001af	66 3d 01 00	 cmp	 ax, 1
  001b3	0f 85 6c 03 00
	00		 jne	 $L137355
$L137378:

; 4924 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bRefineCur)

  001b9	3b fb		 cmp	 edi, ebx
  001bb	89 9e 38 08 00
	00		 mov	 DWORD PTR [esi+2104], ebx
  001c1	75 12		 jne	 SHORT $L137379
  001c3	8d 8e 50 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3152]
  001c9	51		 push	 ecx
  001ca	6a 0b		 push	 11			; 0000000bH
  001cc	6a 04		 push	 4
  001ce	8b ce		 mov	 ecx, esi
  001d0	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137379:
  001d5	66 3b c3	 cmp	 ax, bx
  001d8	74 0a		 je	 SHORT $L137380
  001da	66 3d 01 00	 cmp	 ax, 1
  001de	0f 85 41 03 00
	00		 jne	 $L137355
$L137380:

; 4925 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dEndTime)

  001e4	3b fb		 cmp	 edi, ebx
  001e6	89 9e 3c 08 00
	00		 mov	 DWORD PTR [esi+2108], ebx
  001ec	75 12		 jne	 SHORT $L137381
  001ee	8d 96 54 0c 00
	00		 lea	 edx, DWORD PTR [esi+3156]
  001f4	52		 push	 edx
  001f5	6a 0c		 push	 12			; 0000000cH
  001f7	6a 04		 push	 4
  001f9	8b ce		 mov	 ecx, esi
  001fb	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L137381:
  00200	66 3b c3	 cmp	 ax, bx
  00203	74 0a		 je	 SHORT $L137382
  00205	66 3d 01 00	 cmp	 ax, 1
  00209	0f 85 16 03 00
	00		 jne	 $L137355
$L137382:

; 4926 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bGradeEffect)

  0020f	3b fb		 cmp	 edi, ebx
  00211	89 9e 40 08 00
	00		 mov	 DWORD PTR [esi+2112], ebx
  00217	75 12		 jne	 SHORT $L137383
  00219	8d 86 64 0c 00
	00		 lea	 eax, DWORD PTR [esi+3172]
  0021f	50		 push	 eax
  00220	6a 0d		 push	 13			; 0000000dH
  00222	6a 04		 push	 4
  00224	8b ce		 mov	 ecx, esi
  00226	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137383:
  0022b	66 3b c3	 cmp	 ax, bx
  0022e	74 0a		 je	 SHORT $L137384
  00230	66 3d 01 00	 cmp	 ax, 1
  00234	0f 85 eb 02 00
	00		 jne	 $L137355
$L137384:

; 4927 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bMagic[0])

  0023a	3b fb		 cmp	 edi, ebx
  0023c	89 9e 44 08 00
	00		 mov	 DWORD PTR [esi+2116], ebx
  00242	75 12		 jne	 SHORT $L137385
  00244	8d 8e 65 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3173]
  0024a	51		 push	 ecx
  0024b	6a 0e		 push	 14			; 0000000eH
  0024d	6a 04		 push	 4
  0024f	8b ce		 mov	 ecx, esi
  00251	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137385:
  00256	66 3b c3	 cmp	 ax, bx
  00259	74 0a		 je	 SHORT $L137386
  0025b	66 3d 01 00	 cmp	 ax, 1
  0025f	0f 85 c0 02 00
	00		 jne	 $L137355
$L137386:

; 4928 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bMagic[1])

  00265	3b fb		 cmp	 edi, ebx
  00267	89 9e 48 08 00
	00		 mov	 DWORD PTR [esi+2120], ebx
  0026d	75 12		 jne	 SHORT $L137387
  0026f	8d 96 66 0c 00
	00		 lea	 edx, DWORD PTR [esi+3174]
  00275	52		 push	 edx
  00276	6a 0f		 push	 15			; 0000000fH
  00278	6a 04		 push	 4
  0027a	8b ce		 mov	 ecx, esi
  0027c	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137387:
  00281	66 3b c3	 cmp	 ax, bx
  00284	74 0a		 je	 SHORT $L137388
  00286	66 3d 01 00	 cmp	 ax, 1
  0028a	0f 85 95 02 00
	00		 jne	 $L137355
$L137388:

; 4929 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bMagic[2])

  00290	3b fb		 cmp	 edi, ebx
  00292	89 9e 4c 08 00
	00		 mov	 DWORD PTR [esi+2124], ebx
  00298	75 12		 jne	 SHORT $L137389
  0029a	8d 86 67 0c 00
	00		 lea	 eax, DWORD PTR [esi+3175]
  002a0	50		 push	 eax
  002a1	6a 10		 push	 16			; 00000010H
  002a3	6a 04		 push	 4
  002a5	8b ce		 mov	 ecx, esi
  002a7	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137389:
  002ac	66 3b c3	 cmp	 ax, bx
  002af	74 0a		 je	 SHORT $L137390
  002b1	66 3d 01 00	 cmp	 ax, 1
  002b5	0f 85 6a 02 00
	00		 jne	 $L137355
$L137390:

; 4930 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bMagic[3])

  002bb	3b fb		 cmp	 edi, ebx
  002bd	89 9e 50 08 00
	00		 mov	 DWORD PTR [esi+2128], ebx
  002c3	75 12		 jne	 SHORT $L137391
  002c5	8d 8e 68 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3176]
  002cb	51		 push	 ecx
  002cc	6a 11		 push	 17			; 00000011H
  002ce	6a 04		 push	 4
  002d0	8b ce		 mov	 ecx, esi
  002d2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137391:
  002d7	66 3b c3	 cmp	 ax, bx
  002da	74 0a		 je	 SHORT $L137392
  002dc	66 3d 01 00	 cmp	 ax, 1
  002e0	0f 85 3f 02 00
	00		 jne	 $L137355
$L137392:

; 4931 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bMagic[4])

  002e6	3b fb		 cmp	 edi, ebx
  002e8	89 9e 54 08 00
	00		 mov	 DWORD PTR [esi+2132], ebx
  002ee	75 12		 jne	 SHORT $L137393
  002f0	8d 96 69 0c 00
	00		 lea	 edx, DWORD PTR [esi+3177]
  002f6	52		 push	 edx
  002f7	6a 12		 push	 18			; 00000012H
  002f9	6a 04		 push	 4
  002fb	8b ce		 mov	 ecx, esi
  002fd	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137393:
  00302	66 3b c3	 cmp	 ax, bx
  00305	74 0a		 je	 SHORT $L137394
  00307	66 3d 01 00	 cmp	 ax, 1
  0030b	0f 85 14 02 00
	00		 jne	 $L137355
$L137394:

; 4932 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_bMagic[5])

  00311	3b fb		 cmp	 edi, ebx
  00313	89 9e 58 08 00
	00		 mov	 DWORD PTR [esi+2136], ebx
  00319	75 12		 jne	 SHORT $L137395
  0031b	8d 86 6a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3178]
  00321	50		 push	 eax
  00322	6a 13		 push	 19			; 00000013H
  00324	6a 04		 push	 4
  00326	8b ce		 mov	 ecx, esi
  00328	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137395:
  0032d	66 3b c3	 cmp	 ax, bx
  00330	74 0a		 je	 SHORT $L137396
  00332	66 3d 01 00	 cmp	 ax, 1
  00336	0f 85 e9 01 00
	00		 jne	 $L137355
$L137396:

; 4933 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_wValue[0])

  0033c	3b fb		 cmp	 edi, ebx
  0033e	89 9e 5c 08 00
	00		 mov	 DWORD PTR [esi+2140], ebx
  00344	75 12		 jne	 SHORT $L137397
  00346	8d 8e 6c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3180]
  0034c	51		 push	 ecx
  0034d	6a 14		 push	 20			; 00000014H
  0034f	6a 04		 push	 4
  00351	8b ce		 mov	 ecx, esi
  00353	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137397:
  00358	66 3b c3	 cmp	 ax, bx
  0035b	74 0a		 je	 SHORT $L137398
  0035d	66 3d 01 00	 cmp	 ax, 1
  00361	0f 85 be 01 00
	00		 jne	 $L137355
$L137398:

; 4934 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_wValue[1])

  00367	3b fb		 cmp	 edi, ebx
  00369	89 9e 60 08 00
	00		 mov	 DWORD PTR [esi+2144], ebx
  0036f	75 12		 jne	 SHORT $L137399
  00371	8d 96 6e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3182]
  00377	52		 push	 edx
  00378	6a 15		 push	 21			; 00000015H
  0037a	6a 04		 push	 4
  0037c	8b ce		 mov	 ecx, esi
  0037e	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137399:
  00383	66 3b c3	 cmp	 ax, bx
  00386	74 0a		 je	 SHORT $L137400
  00388	66 3d 01 00	 cmp	 ax, 1
  0038c	0f 85 93 01 00
	00		 jne	 $L137355
$L137400:

; 4935 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_wValue[2])

  00392	3b fb		 cmp	 edi, ebx
  00394	89 9e 64 08 00
	00		 mov	 DWORD PTR [esi+2148], ebx
  0039a	75 12		 jne	 SHORT $L137401
  0039c	8d 86 70 0c 00
	00		 lea	 eax, DWORD PTR [esi+3184]
  003a2	50		 push	 eax
  003a3	6a 16		 push	 22			; 00000016H
  003a5	6a 04		 push	 4
  003a7	8b ce		 mov	 ecx, esi
  003a9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137401:
  003ae	66 3b c3	 cmp	 ax, bx
  003b1	74 0a		 je	 SHORT $L137402
  003b3	66 3d 01 00	 cmp	 ax, 1
  003b7	0f 85 68 01 00
	00		 jne	 $L137355
$L137402:

; 4936 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_wValue[3])

  003bd	3b fb		 cmp	 edi, ebx
  003bf	89 9e 68 08 00
	00		 mov	 DWORD PTR [esi+2152], ebx
  003c5	75 12		 jne	 SHORT $L137403
  003c7	8d 8e 72 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3186]
  003cd	51		 push	 ecx
  003ce	6a 17		 push	 23			; 00000017H
  003d0	6a 04		 push	 4
  003d2	8b ce		 mov	 ecx, esi
  003d4	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137403:
  003d9	66 3b c3	 cmp	 ax, bx
  003dc	74 0a		 je	 SHORT $L137404
  003de	66 3d 01 00	 cmp	 ax, 1
  003e2	0f 85 3d 01 00
	00		 jne	 $L137355
$L137404:

; 4937 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_wValue[4])

  003e8	3b fb		 cmp	 edi, ebx
  003ea	89 9e 6c 08 00
	00		 mov	 DWORD PTR [esi+2156], ebx
  003f0	75 12		 jne	 SHORT $L137405
  003f2	8d 96 74 0c 00
	00		 lea	 edx, DWORD PTR [esi+3188]
  003f8	52		 push	 edx
  003f9	6a 18		 push	 24			; 00000018H
  003fb	6a 04		 push	 4
  003fd	8b ce		 mov	 ecx, esi
  003ff	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137405:
  00404	66 3b c3	 cmp	 ax, bx
  00407	74 0a		 je	 SHORT $L137406
  00409	66 3d 01 00	 cmp	 ax, 1
  0040d	0f 85 12 01 00
	00		 jne	 $L137355
$L137406:

; 4938 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_wValue[5])

  00413	3b fb		 cmp	 edi, ebx
  00415	89 9e 70 08 00
	00		 mov	 DWORD PTR [esi+2160], ebx
  0041b	75 12		 jne	 SHORT $L137407
  0041d	8d 86 76 0c 00
	00		 lea	 eax, DWORD PTR [esi+3190]
  00423	50		 push	 eax
  00424	6a 19		 push	 25			; 00000019H
  00426	6a 04		 push	 4
  00428	8b ce		 mov	 ecx, esi
  0042a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137407:
  0042f	66 3b c3	 cmp	 ax, bx
  00432	74 0a		 je	 SHORT $L137408
  00434	66 3d 01 00	 cmp	 ax, 1
  00438	0f 85 e7 00 00
	00		 jne	 $L137355
$L137408:

; 4939 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dwExtValue[0])

  0043e	3b fb		 cmp	 edi, ebx
  00440	89 9e 74 08 00
	00		 mov	 DWORD PTR [esi+2164], ebx
  00446	75 12		 jne	 SHORT $L137409
  00448	8d 8e 78 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3192]
  0044e	51		 push	 ecx
  0044f	6a 1a		 push	 26			; 0000001aH
  00451	6a 04		 push	 4
  00453	8b ce		 mov	 ecx, esi
  00455	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137409:
  0045a	66 3b c3	 cmp	 ax, bx
  0045d	74 0a		 je	 SHORT $L137410
  0045f	66 3d 01 00	 cmp	 ax, 1
  00463	0f 85 bc 00 00
	00		 jne	 $L137355
$L137410:

; 4940 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dwExtValue[1])

  00469	3b fb		 cmp	 edi, ebx
  0046b	89 9e 78 08 00
	00		 mov	 DWORD PTR [esi+2168], ebx
  00471	75 12		 jne	 SHORT $L137411
  00473	8d 96 7c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3196]
  00479	52		 push	 edx
  0047a	6a 1b		 push	 27			; 0000001bH
  0047c	6a 04		 push	 4
  0047e	8b ce		 mov	 ecx, esi
  00480	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137411:
  00485	66 3b c3	 cmp	 ax, bx
  00488	74 0a		 je	 SHORT $L137412
  0048a	66 3d 01 00	 cmp	 ax, 1
  0048e	0f 85 91 00 00
	00		 jne	 $L137355
$L137412:

; 4941 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dwExtValue[2])

  00494	3b fb		 cmp	 edi, ebx
  00496	89 9e 7c 08 00
	00		 mov	 DWORD PTR [esi+2172], ebx
  0049c	75 12		 jne	 SHORT $L137413
  0049e	8d 86 80 0c 00
	00		 lea	 eax, DWORD PTR [esi+3200]
  004a4	50		 push	 eax
  004a5	6a 1c		 push	 28			; 0000001cH
  004a7	6a 04		 push	 4
  004a9	8b ce		 mov	 ecx, esi
  004ab	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137413:
  004b0	66 3b c3	 cmp	 ax, bx
  004b3	74 06		 je	 SHORT $L137414
  004b5	66 3d 01 00	 cmp	 ax, 1
  004b9	75 6a		 jne	 SHORT $L137355
$L137414:

; 4942 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dwExtValue[3])

  004bb	3b fb		 cmp	 edi, ebx
  004bd	89 9e 80 08 00
	00		 mov	 DWORD PTR [esi+2176], ebx
  004c3	75 12		 jne	 SHORT $L137415
  004c5	8d 8e 84 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3204]
  004cb	51		 push	 ecx
  004cc	6a 1d		 push	 29			; 0000001dH
  004ce	6a 04		 push	 4
  004d0	8b ce		 mov	 ecx, esi
  004d2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137415:
  004d7	66 3b c3	 cmp	 ax, bx
  004da	74 06		 je	 SHORT $L137416
  004dc	66 3d 01 00	 cmp	 ax, 1
  004e0	75 43		 jne	 SHORT $L137355
$L137416:

; 4943 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dwExtValue[4])

  004e2	3b fb		 cmp	 edi, ebx
  004e4	89 9e 84 08 00
	00		 mov	 DWORD PTR [esi+2180], ebx
  004ea	75 12		 jne	 SHORT $L137417
  004ec	8d 96 88 0c 00
	00		 lea	 edx, DWORD PTR [esi+3208]
  004f2	52		 push	 edx
  004f3	6a 1e		 push	 30			; 0000001eH
  004f5	6a 04		 push	 4
  004f7	8b ce		 mov	 ecx, esi
  004f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137417:
  004fe	66 3b c3	 cmp	 ax, bx
  00501	74 06		 je	 SHORT $L137418
  00503	66 3d 01 00	 cmp	 ax, 1
  00507	75 1c		 jne	 SHORT $L137355
$L137418:

; 4944 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_item.m_dwExtValue[5])

  00509	3b fb		 cmp	 edi, ebx
  0050b	89 9e 88 08 00
	00		 mov	 DWORD PTR [esi+2184], ebx
  00511	75 12		 jne	 SHORT $L137355
  00513	8d 86 8c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3212]
  00519	50		 push	 eax
  0051a	6a 1f		 push	 31			; 0000001fH
  0051c	6a 04		 push	 4
  0051e	8b ce		 mov	 ecx, esi
  00520	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137355:
  00525	5f		 pop	 edi
  00526	5e		 pop	 esi
  00527	5b		 pop	 ebx

; 4945 : END_PARAM()

  00528	c2 04 00	 ret	 4
?BindParameters@CSPGuildItemTakeOut@@UAEFH@Z ENDP	; CSPGuildItemTakeOut::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildItemTakeOut@@UAE@XZ			; CSPGuildItemTakeOut::~CSPGuildItemTakeOut
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildItemTakeOut@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildItemTakeOut@@UAEPAXI@Z PROC NEAR		; CSPGuildItemTakeOut::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildItemTakeOut@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L184312
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L184312:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildItemTakeOut@@UAEPAXI@Z ENDP			; CSPGuildItemTakeOut::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildItemTakeOut@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildItemTakeOut@@UAE@XZ PROC NEAR		; CSPGuildItemTakeOut::~CSPGuildItemTakeOut, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildItemTakeOut@@UAE@XZ ENDP			; CSPGuildItemTakeOut::~CSPGuildItemTakeOut
_TEXT	ENDS
PUBLIC	??0CSPGuildItemRollback@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildItemRollback::CSPGuildItemRollback
PUBLIC	?GetNumParam@CSPGuildItemRollback@@UAEHXZ	; CSPGuildItemRollback::GetNumParam
PUBLIC	?BindParameters@CSPGuildItemRollback@@UAEFH@Z	; CSPGuildItemRollback::BindParameters
PUBLIC	??_7CSPGuildItemRollback@@6B@			; CSPGuildItemRollback::`vftable'
PUBLIC	??_GCSPGuildItemRollback@@UAEPAXI@Z		; CSPGuildItemRollback::`scalar deleting destructor'
PUBLIC	??_C@_0FH@OCNAOBOL@?$HLCALL?5TGuildItemRollback?$CI?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPGuildItemRollback@@UAEPAXI@Z:NEAR	; CSPGuildItemRollback::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T184495 DD	0ffffffffH
	DD	FLAT:$L184321
$T184492 DD	019930520H
	DD	01H
	DD	FLAT:$T184495
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FH@OCNAOBOL@?$HLCALL?5TGuildItemRollback?$CI?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0FH@OCNAOBOL@?$HLCALL?5TGuildItemRollback?$CI?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	'CALL TGuildItemRollback(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?'
	DB	',?,?,?,?,?,?,?,?,?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildItemRollback@@6B@
CONST	SEGMENT
??_7CSPGuildItemRollback@@6B@ DD FLAT:??_ECSPGuildItemRollback@@UAEPAXI@Z ; CSPGuildItemRollback::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildItemRollback@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildItemRollback@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildItemRollback@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T184320 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildItemRollback@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildItemRollback::CSPGuildItemRollback, COMDAT
; _this$ = ecx

; 4955 : DEF_QUERY(CSPGuildItemRollback, _T("{CALL TGuildItemRollback(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildItemRollback@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FH@OCNAOBOL@?$HLCALL?5TGuildItemRollback?$CI?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T184320[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildItemRollback@@6B@
  0005e	72 0d		 jb	 SHORT $L184493
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L184493:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184321:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildItemRollback@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184492
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildItemRollback@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildItemRollback::CSPGuildItemRollback
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildItemRollback@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildItemRollback@@UAEHXZ PROC NEAR	; CSPGuildItemRollback::GetNumParam, COMDAT
; _this$ = ecx

; 4957 : BEGIN_PARAM(30)

  00000	b8 1e 00 00 00	 mov	 eax, 30			; 0000001eH
  00005	c3		 ret	 0
?GetNumParam@CSPGuildItemRollback@@UAEHXZ ENDP		; CSPGuildItemRollback::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildItemRollback@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildItemRollback@@UAEFH@Z PROC NEAR	; CSPGuildItemRollback::BindParameters, COMDAT
; _this$ = ecx

; 4957 : BEGIN_PARAM(30)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 4958 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dlID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L137465
  00017	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L137465
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 c4 04 00
	00		 jne	 $L137460
$L137465:

; 4959 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwGuildID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L137466
  00040	8d 8e 2c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3116]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137466:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L137467
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 99 04 00
	00		 jne	 $L137460
$L137467:

; 4960 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwItemID)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L137468
  0006b	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137468:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L137469
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 6e 04 00
	00		 jne	 $L137460
$L137469:

; 4961 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wItemID)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L137470
  00096	8d 86 42 0c 00
	00		 lea	 eax, DWORD PTR [esi+3138]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137470:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 0a		 je	 SHORT $L137471
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 43 04 00
	00		 jne	 $L137460
$L137471:

; 4962 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bLevel)

  000b7	3b fb		 cmp	 edi, ebx
  000b9	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bf	75 12		 jne	 SHORT $L137472
  000c1	8d 8e 44 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3140]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 01		 push	 1
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137472:
  000d3	66 3b c3	 cmp	 ax, bx
  000d6	74 0a		 je	 SHORT $L137473
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 18 04 00
	00		 jne	 $L137460
$L137473:

; 4963 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bCount)

  000e2	3b fb		 cmp	 edi, ebx
  000e4	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000ea	75 12		 jne	 SHORT $L137474
  000ec	8d 96 45 0c 00
	00		 lea	 edx, DWORD PTR [esi+3141]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 01		 push	 1
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137474:
  000fe	66 3b c3	 cmp	 ax, bx
  00101	74 0a		 je	 SHORT $L137475
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	0f 85 ed 03 00
	00		 jne	 $L137460
$L137475:

; 4964 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bGLevel)

  0010d	3b fb		 cmp	 edi, ebx
  0010f	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00115	75 12		 jne	 SHORT $L137476
  00117	8d 86 46 0c 00
	00		 lea	 eax, DWORD PTR [esi+3142]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 01		 push	 1
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137476:
  00129	66 3b c3	 cmp	 ax, bx
  0012c	74 0a		 je	 SHORT $L137477
  0012e	66 3d 01 00	 cmp	 ax, 1
  00132	0f 85 c2 03 00
	00		 jne	 $L137460
$L137477:

; 4965 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwDuraMax)

  00138	3b fb		 cmp	 edi, ebx
  0013a	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  00140	75 12		 jne	 SHORT $L137478
  00142	8d 8e 48 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3144]
  00148	51		 push	 ecx
  00149	6a 08		 push	 8
  0014b	6a 01		 push	 1
  0014d	8b ce		 mov	 ecx, esi
  0014f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137478:
  00154	66 3b c3	 cmp	 ax, bx
  00157	74 0a		 je	 SHORT $L137479
  00159	66 3d 01 00	 cmp	 ax, 1
  0015d	0f 85 97 03 00
	00		 jne	 $L137460
$L137479:

; 4966 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwDuraCur)

  00163	3b fb		 cmp	 edi, ebx
  00165	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  0016b	75 12		 jne	 SHORT $L137480
  0016d	8d 96 4c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3148]
  00173	52		 push	 edx
  00174	6a 09		 push	 9
  00176	6a 01		 push	 1
  00178	8b ce		 mov	 ecx, esi
  0017a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137480:
  0017f	66 3b c3	 cmp	 ax, bx
  00182	74 0a		 je	 SHORT $L137481
  00184	66 3d 01 00	 cmp	 ax, 1
  00188	0f 85 6c 03 00
	00		 jne	 $L137460
$L137481:

; 4967 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bRefineCur)

  0018e	3b fb		 cmp	 edi, ebx
  00190	89 9e 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebx
  00196	75 12		 jne	 SHORT $L137482
  00198	8d 86 50 0c 00
	00		 lea	 eax, DWORD PTR [esi+3152]
  0019e	50		 push	 eax
  0019f	6a 0a		 push	 10			; 0000000aH
  001a1	6a 01		 push	 1
  001a3	8b ce		 mov	 ecx, esi
  001a5	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137482:
  001aa	66 3b c3	 cmp	 ax, bx
  001ad	74 0a		 je	 SHORT $L137483
  001af	66 3d 01 00	 cmp	 ax, 1
  001b3	0f 85 41 03 00
	00		 jne	 $L137460
$L137483:

; 4968 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dEndTime)

  001b9	3b fb		 cmp	 edi, ebx
  001bb	89 9e 38 08 00
	00		 mov	 DWORD PTR [esi+2104], ebx
  001c1	75 12		 jne	 SHORT $L137484
  001c3	8d 8e 54 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3156]
  001c9	51		 push	 ecx
  001ca	6a 0b		 push	 11			; 0000000bH
  001cc	6a 01		 push	 1
  001ce	8b ce		 mov	 ecx, esi
  001d0	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L137484:
  001d5	66 3b c3	 cmp	 ax, bx
  001d8	74 0a		 je	 SHORT $L137485
  001da	66 3d 01 00	 cmp	 ax, 1
  001de	0f 85 16 03 00
	00		 jne	 $L137460
$L137485:

; 4969 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bGradeEffect)

  001e4	3b fb		 cmp	 edi, ebx
  001e6	89 9e 3c 08 00
	00		 mov	 DWORD PTR [esi+2108], ebx
  001ec	75 12		 jne	 SHORT $L137486
  001ee	8d 96 64 0c 00
	00		 lea	 edx, DWORD PTR [esi+3172]
  001f4	52		 push	 edx
  001f5	6a 0c		 push	 12			; 0000000cH
  001f7	6a 01		 push	 1
  001f9	8b ce		 mov	 ecx, esi
  001fb	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137486:
  00200	66 3b c3	 cmp	 ax, bx
  00203	74 0a		 je	 SHORT $L137487
  00205	66 3d 01 00	 cmp	 ax, 1
  00209	0f 85 eb 02 00
	00		 jne	 $L137460
$L137487:

; 4970 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[0])

  0020f	3b fb		 cmp	 edi, ebx
  00211	89 9e 40 08 00
	00		 mov	 DWORD PTR [esi+2112], ebx
  00217	75 12		 jne	 SHORT $L137488
  00219	8d 86 65 0c 00
	00		 lea	 eax, DWORD PTR [esi+3173]
  0021f	50		 push	 eax
  00220	6a 0d		 push	 13			; 0000000dH
  00222	6a 01		 push	 1
  00224	8b ce		 mov	 ecx, esi
  00226	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137488:
  0022b	66 3b c3	 cmp	 ax, bx
  0022e	74 0a		 je	 SHORT $L137489
  00230	66 3d 01 00	 cmp	 ax, 1
  00234	0f 85 c0 02 00
	00		 jne	 $L137460
$L137489:

; 4971 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[1])

  0023a	3b fb		 cmp	 edi, ebx
  0023c	89 9e 44 08 00
	00		 mov	 DWORD PTR [esi+2116], ebx
  00242	75 12		 jne	 SHORT $L137490
  00244	8d 8e 66 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3174]
  0024a	51		 push	 ecx
  0024b	6a 0e		 push	 14			; 0000000eH
  0024d	6a 01		 push	 1
  0024f	8b ce		 mov	 ecx, esi
  00251	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137490:
  00256	66 3b c3	 cmp	 ax, bx
  00259	74 0a		 je	 SHORT $L137491
  0025b	66 3d 01 00	 cmp	 ax, 1
  0025f	0f 85 95 02 00
	00		 jne	 $L137460
$L137491:

; 4972 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[2])

  00265	3b fb		 cmp	 edi, ebx
  00267	89 9e 48 08 00
	00		 mov	 DWORD PTR [esi+2120], ebx
  0026d	75 12		 jne	 SHORT $L137492
  0026f	8d 96 67 0c 00
	00		 lea	 edx, DWORD PTR [esi+3175]
  00275	52		 push	 edx
  00276	6a 0f		 push	 15			; 0000000fH
  00278	6a 01		 push	 1
  0027a	8b ce		 mov	 ecx, esi
  0027c	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137492:
  00281	66 3b c3	 cmp	 ax, bx
  00284	74 0a		 je	 SHORT $L137493
  00286	66 3d 01 00	 cmp	 ax, 1
  0028a	0f 85 6a 02 00
	00		 jne	 $L137460
$L137493:

; 4973 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[3])

  00290	3b fb		 cmp	 edi, ebx
  00292	89 9e 4c 08 00
	00		 mov	 DWORD PTR [esi+2124], ebx
  00298	75 12		 jne	 SHORT $L137494
  0029a	8d 86 68 0c 00
	00		 lea	 eax, DWORD PTR [esi+3176]
  002a0	50		 push	 eax
  002a1	6a 10		 push	 16			; 00000010H
  002a3	6a 01		 push	 1
  002a5	8b ce		 mov	 ecx, esi
  002a7	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137494:
  002ac	66 3b c3	 cmp	 ax, bx
  002af	74 0a		 je	 SHORT $L137495
  002b1	66 3d 01 00	 cmp	 ax, 1
  002b5	0f 85 3f 02 00
	00		 jne	 $L137460
$L137495:

; 4974 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[4])

  002bb	3b fb		 cmp	 edi, ebx
  002bd	89 9e 50 08 00
	00		 mov	 DWORD PTR [esi+2128], ebx
  002c3	75 12		 jne	 SHORT $L137496
  002c5	8d 8e 69 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3177]
  002cb	51		 push	 ecx
  002cc	6a 11		 push	 17			; 00000011H
  002ce	6a 01		 push	 1
  002d0	8b ce		 mov	 ecx, esi
  002d2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137496:
  002d7	66 3b c3	 cmp	 ax, bx
  002da	74 0a		 je	 SHORT $L137497
  002dc	66 3d 01 00	 cmp	 ax, 1
  002e0	0f 85 14 02 00
	00		 jne	 $L137460
$L137497:

; 4975 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_bMagic[5])

  002e6	3b fb		 cmp	 edi, ebx
  002e8	89 9e 54 08 00
	00		 mov	 DWORD PTR [esi+2132], ebx
  002ee	75 12		 jne	 SHORT $L137498
  002f0	8d 96 6a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3178]
  002f6	52		 push	 edx
  002f7	6a 12		 push	 18			; 00000012H
  002f9	6a 01		 push	 1
  002fb	8b ce		 mov	 ecx, esi
  002fd	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137498:
  00302	66 3b c3	 cmp	 ax, bx
  00305	74 0a		 je	 SHORT $L137499
  00307	66 3d 01 00	 cmp	 ax, 1
  0030b	0f 85 e9 01 00
	00		 jne	 $L137460
$L137499:

; 4976 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[0])

  00311	3b fb		 cmp	 edi, ebx
  00313	89 9e 58 08 00
	00		 mov	 DWORD PTR [esi+2136], ebx
  00319	75 12		 jne	 SHORT $L137500
  0031b	8d 86 6c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3180]
  00321	50		 push	 eax
  00322	6a 13		 push	 19			; 00000013H
  00324	6a 01		 push	 1
  00326	8b ce		 mov	 ecx, esi
  00328	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137500:
  0032d	66 3b c3	 cmp	 ax, bx
  00330	74 0a		 je	 SHORT $L137501
  00332	66 3d 01 00	 cmp	 ax, 1
  00336	0f 85 be 01 00
	00		 jne	 $L137460
$L137501:

; 4977 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[1])

  0033c	3b fb		 cmp	 edi, ebx
  0033e	89 9e 5c 08 00
	00		 mov	 DWORD PTR [esi+2140], ebx
  00344	75 12		 jne	 SHORT $L137502
  00346	8d 8e 6e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3182]
  0034c	51		 push	 ecx
  0034d	6a 14		 push	 20			; 00000014H
  0034f	6a 01		 push	 1
  00351	8b ce		 mov	 ecx, esi
  00353	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137502:
  00358	66 3b c3	 cmp	 ax, bx
  0035b	74 0a		 je	 SHORT $L137503
  0035d	66 3d 01 00	 cmp	 ax, 1
  00361	0f 85 93 01 00
	00		 jne	 $L137460
$L137503:

; 4978 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[2])

  00367	3b fb		 cmp	 edi, ebx
  00369	89 9e 60 08 00
	00		 mov	 DWORD PTR [esi+2144], ebx
  0036f	75 12		 jne	 SHORT $L137504
  00371	8d 96 70 0c 00
	00		 lea	 edx, DWORD PTR [esi+3184]
  00377	52		 push	 edx
  00378	6a 15		 push	 21			; 00000015H
  0037a	6a 01		 push	 1
  0037c	8b ce		 mov	 ecx, esi
  0037e	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137504:
  00383	66 3b c3	 cmp	 ax, bx
  00386	74 0a		 je	 SHORT $L137505
  00388	66 3d 01 00	 cmp	 ax, 1
  0038c	0f 85 68 01 00
	00		 jne	 $L137460
$L137505:

; 4979 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[3])

  00392	3b fb		 cmp	 edi, ebx
  00394	89 9e 64 08 00
	00		 mov	 DWORD PTR [esi+2148], ebx
  0039a	75 12		 jne	 SHORT $L137506
  0039c	8d 86 72 0c 00
	00		 lea	 eax, DWORD PTR [esi+3186]
  003a2	50		 push	 eax
  003a3	6a 16		 push	 22			; 00000016H
  003a5	6a 01		 push	 1
  003a7	8b ce		 mov	 ecx, esi
  003a9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137506:
  003ae	66 3b c3	 cmp	 ax, bx
  003b1	74 0a		 je	 SHORT $L137507
  003b3	66 3d 01 00	 cmp	 ax, 1
  003b7	0f 85 3d 01 00
	00		 jne	 $L137460
$L137507:

; 4980 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[4])

  003bd	3b fb		 cmp	 edi, ebx
  003bf	89 9e 68 08 00
	00		 mov	 DWORD PTR [esi+2152], ebx
  003c5	75 12		 jne	 SHORT $L137508
  003c7	8d 8e 74 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3188]
  003cd	51		 push	 ecx
  003ce	6a 17		 push	 23			; 00000017H
  003d0	6a 01		 push	 1
  003d2	8b ce		 mov	 ecx, esi
  003d4	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137508:
  003d9	66 3b c3	 cmp	 ax, bx
  003dc	74 0a		 je	 SHORT $L137509
  003de	66 3d 01 00	 cmp	 ax, 1
  003e2	0f 85 12 01 00
	00		 jne	 $L137460
$L137509:

; 4981 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_wValue[5])

  003e8	3b fb		 cmp	 edi, ebx
  003ea	89 9e 6c 08 00
	00		 mov	 DWORD PTR [esi+2156], ebx
  003f0	75 12		 jne	 SHORT $L137510
  003f2	8d 96 76 0c 00
	00		 lea	 edx, DWORD PTR [esi+3190]
  003f8	52		 push	 edx
  003f9	6a 18		 push	 24			; 00000018H
  003fb	6a 01		 push	 1
  003fd	8b ce		 mov	 ecx, esi
  003ff	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137510:
  00404	66 3b c3	 cmp	 ax, bx
  00407	74 0a		 je	 SHORT $L137511
  00409	66 3d 01 00	 cmp	 ax, 1
  0040d	0f 85 e7 00 00
	00		 jne	 $L137460
$L137511:

; 4982 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[0])

  00413	3b fb		 cmp	 edi, ebx
  00415	89 9e 70 08 00
	00		 mov	 DWORD PTR [esi+2160], ebx
  0041b	75 12		 jne	 SHORT $L137512
  0041d	8d 86 78 0c 00
	00		 lea	 eax, DWORD PTR [esi+3192]
  00423	50		 push	 eax
  00424	6a 19		 push	 25			; 00000019H
  00426	6a 01		 push	 1
  00428	8b ce		 mov	 ecx, esi
  0042a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137512:
  0042f	66 3b c3	 cmp	 ax, bx
  00432	74 0a		 je	 SHORT $L137513
  00434	66 3d 01 00	 cmp	 ax, 1
  00438	0f 85 bc 00 00
	00		 jne	 $L137460
$L137513:

; 4983 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[1])

  0043e	3b fb		 cmp	 edi, ebx
  00440	89 9e 74 08 00
	00		 mov	 DWORD PTR [esi+2164], ebx
  00446	75 12		 jne	 SHORT $L137514
  00448	8d 8e 7c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3196]
  0044e	51		 push	 ecx
  0044f	6a 1a		 push	 26			; 0000001aH
  00451	6a 01		 push	 1
  00453	8b ce		 mov	 ecx, esi
  00455	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137514:
  0045a	66 3b c3	 cmp	 ax, bx
  0045d	74 0a		 je	 SHORT $L137515
  0045f	66 3d 01 00	 cmp	 ax, 1
  00463	0f 85 91 00 00
	00		 jne	 $L137460
$L137515:

; 4984 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[2])

  00469	3b fb		 cmp	 edi, ebx
  0046b	89 9e 78 08 00
	00		 mov	 DWORD PTR [esi+2168], ebx
  00471	75 12		 jne	 SHORT $L137516
  00473	8d 96 80 0c 00
	00		 lea	 edx, DWORD PTR [esi+3200]
  00479	52		 push	 edx
  0047a	6a 1b		 push	 27			; 0000001bH
  0047c	6a 01		 push	 1
  0047e	8b ce		 mov	 ecx, esi
  00480	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137516:
  00485	66 3b c3	 cmp	 ax, bx
  00488	74 06		 je	 SHORT $L137517
  0048a	66 3d 01 00	 cmp	 ax, 1
  0048e	75 6a		 jne	 SHORT $L137460
$L137517:

; 4985 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[3])

  00490	3b fb		 cmp	 edi, ebx
  00492	89 9e 7c 08 00
	00		 mov	 DWORD PTR [esi+2172], ebx
  00498	75 12		 jne	 SHORT $L137518
  0049a	8d 86 84 0c 00
	00		 lea	 eax, DWORD PTR [esi+3204]
  004a0	50		 push	 eax
  004a1	6a 1c		 push	 28			; 0000001cH
  004a3	6a 01		 push	 1
  004a5	8b ce		 mov	 ecx, esi
  004a7	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137518:
  004ac	66 3b c3	 cmp	 ax, bx
  004af	74 06		 je	 SHORT $L137519
  004b1	66 3d 01 00	 cmp	 ax, 1
  004b5	75 43		 jne	 SHORT $L137460
$L137519:

; 4986 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[4])

  004b7	3b fb		 cmp	 edi, ebx
  004b9	89 9e 80 08 00
	00		 mov	 DWORD PTR [esi+2176], ebx
  004bf	75 12		 jne	 SHORT $L137520
  004c1	8d 8e 88 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3208]
  004c7	51		 push	 ecx
  004c8	6a 1d		 push	 29			; 0000001dH
  004ca	6a 01		 push	 1
  004cc	8b ce		 mov	 ecx, esi
  004ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137520:
  004d3	66 3b c3	 cmp	 ax, bx
  004d6	74 06		 je	 SHORT $L137521
  004d8	66 3d 01 00	 cmp	 ax, 1
  004dc	75 1c		 jne	 SHORT $L137460
$L137521:

; 4987 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_item.m_dwExtValue[5])

  004de	3b fb		 cmp	 edi, ebx
  004e0	89 9e 84 08 00
	00		 mov	 DWORD PTR [esi+2180], ebx
  004e6	75 12		 jne	 SHORT $L137460
  004e8	8d 96 8c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3212]
  004ee	52		 push	 edx
  004ef	6a 1e		 push	 30			; 0000001eH
  004f1	6a 01		 push	 1
  004f3	8b ce		 mov	 ecx, esi
  004f5	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137460:
  004fa	5f		 pop	 edi
  004fb	5e		 pop	 esi
  004fc	5b		 pop	 ebx

; 4988 : END_PARAM()

  004fd	c2 04 00	 ret	 4
?BindParameters@CSPGuildItemRollback@@UAEFH@Z ENDP	; CSPGuildItemRollback::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildItemRollback@@UAE@XZ			; CSPGuildItemRollback::~CSPGuildItemRollback
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildItemRollback@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildItemRollback@@UAEPAXI@Z PROC NEAR		; CSPGuildItemRollback::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildItemRollback@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L184507
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L184507:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildItemRollback@@UAEPAXI@Z ENDP		; CSPGuildItemRollback::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildItemRollback@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildItemRollback@@UAE@XZ PROC NEAR		; CSPGuildItemRollback::~CSPGuildItemRollback, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildItemRollback@@UAE@XZ ENDP			; CSPGuildItemRollback::~CSPGuildItemRollback
_TEXT	ENDS
PUBLIC	??0CSPGetPcBangData@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetPcBangData::CSPGetPcBangData
PUBLIC	?GetNumParam@CSPGetPcBangData@@UAEHXZ		; CSPGetPcBangData::GetNumParam
PUBLIC	?BindParameters@CSPGetPcBangData@@UAEFH@Z	; CSPGetPcBangData::BindParameters
PUBLIC	??_7CSPGetPcBangData@@6B@			; CSPGetPcBangData::`vftable'
PUBLIC	??_GCSPGetPcBangData@@UAEPAXI@Z			; CSPGetPcBangData::`scalar deleting destructor'
PUBLIC	??_C@_0CE@DAFLKCOF@?$HL?5CALL?5TGetPcBangData?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPGetPcBangData@@UAEPAXI@Z:NEAR		; CSPGetPcBangData::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T184690 DD	0ffffffffH
	DD	FLAT:$L184516
$T184687 DD	019930520H
	DD	01H
	DD	FLAT:$T184690
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CE@DAFLKCOF@?$HL?5CALL?5TGetPcBangData?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0CE@DAFLKCOF@?$HL?5CALL?5TGetPcBangData?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@ DB '{'
	DB	' CALL TGetPcBangData(?,?,?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPGetPcBangData@@6B@
CONST	SEGMENT
??_7CSPGetPcBangData@@6B@ DD FLAT:??_ECSPGetPcBangData@@UAEPAXI@Z ; CSPGetPcBangData::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGetPcBangData@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGetPcBangData@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGetPcBangData@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T184515 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGetPcBangData@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGetPcBangData::CSPGetPcBangData, COMDAT
; _this$ = ecx

; 5001 : DEF_QUERY(CSPGetPcBangData, _T("{ CALL TGetPcBangData(?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGetPcBangData@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CE@DAFLKCOF@?$HL?5CALL?5TGetPcBangData?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T184515[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGetPcBangData@@6B@
  0005e	72 0d		 jb	 SHORT $L184688
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L184688:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184516:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGetPcBangData@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184687
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGetPcBangData@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGetPcBangData::CSPGetPcBangData
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGetPcBangData@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGetPcBangData@@UAEHXZ PROC NEAR		; CSPGetPcBangData::GetNumParam, COMDAT
; _this$ = ecx

; 5003 : BEGIN_PARAM(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumParam@CSPGetPcBangData@@UAEHXZ ENDP		; CSPGetPcBangData::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetPcBangData@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGetPcBangData@@UAEFH@Z PROC NEAR	; CSPGetPcBangData::BindParameters, COMDAT
; _this$ = ecx

; 5003 : BEGIN_PARAM(6)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5004 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwUserID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L137571
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L137571
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 bc 00 00
	00		 jne	 $L137566
$L137571:

; 5005 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwEnterTime)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L137572
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137572:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L137573
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 91 00 00
	00		 jne	 $L137566
$L137573:

; 5006 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_bInPcBang)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L137574
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 04		 push	 4
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137574:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 06		 je	 SHORT $L137575
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 6a		 jne	 SHORT $L137566
$L137575:

; 5007 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwPcBangTime)

  00088	3b fb		 cmp	 edi, ebx
  0008a	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00090	75 12		 jne	 SHORT $L137576
  00092	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00098	50		 push	 eax
  00099	6a 04		 push	 4
  0009b	6a 04		 push	 4
  0009d	8b ce		 mov	 ecx, esi
  0009f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137576:
  000a4	66 3b c3	 cmp	 ax, bx
  000a7	74 06		 je	 SHORT $L137577
  000a9	66 3d 01 00	 cmp	 ax, 1
  000ad	75 43		 jne	 SHORT $L137566
$L137577:

; 5008 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_bItemCnt)

  000af	3b fb		 cmp	 edi, ebx
  000b1	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b7	75 12		 jne	 SHORT $L137578
  000b9	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  000bf	51		 push	 ecx
  000c0	6a 05		 push	 5
  000c2	6a 04		 push	 4
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137578:
  000cb	66 3b c3	 cmp	 ax, bx
  000ce	74 06		 je	 SHORT $L137579
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	75 1c		 jne	 SHORT $L137566
$L137579:

; 5009 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_bLuckyNumber)

  000d6	3b fb		 cmp	 edi, ebx
  000d8	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000de	75 12		 jne	 SHORT $L137566
  000e0	8d 96 3d 0c 00
	00		 lea	 edx, DWORD PTR [esi+3133]
  000e6	52		 push	 edx
  000e7	6a 06		 push	 6
  000e9	6a 04		 push	 4
  000eb	8b ce		 mov	 ecx, esi
  000ed	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137566:
  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx

; 5010 : END_PARAM()

  000f5	c2 04 00	 ret	 4
?BindParameters@CSPGetPcBangData@@UAEFH@Z ENDP		; CSPGetPcBangData::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGetPcBangData@@UAE@XZ			; CSPGetPcBangData::~CSPGetPcBangData
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGetPcBangData@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGetPcBangData@@UAEPAXI@Z PROC NEAR		; CSPGetPcBangData::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGetPcBangData@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L184702
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L184702:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGetPcBangData@@UAEPAXI@Z ENDP			; CSPGetPcBangData::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGetPcBangData@@UAE@XZ
_TEXT	SEGMENT
??1CSPGetPcBangData@@UAE@XZ PROC NEAR			; CSPGetPcBangData::~CSPGetPcBangData, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGetPcBangData@@UAE@XZ ENDP			; CSPGetPcBangData::~CSPGetPcBangData
_TEXT	ENDS
PUBLIC	??0CSPEventQuarter@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPEventQuarter::CSPEventQuarter
PUBLIC	?GetNumParam@CSPEventQuarter@@UAEHXZ		; CSPEventQuarter::GetNumParam
PUBLIC	?BindParameters@CSPEventQuarter@@UAEFH@Z	; CSPEventQuarter::BindParameters
PUBLIC	??_7CSPEventQuarter@@6B@			; CSPEventQuarter::`vftable'
PUBLIC	??_GCSPEventQuarter@@UAEPAXI@Z			; CSPEventQuarter::`scalar deleting destructor'
PUBLIC	??_C@_0BP@KFGLDCKH@?$HL?5CALL?5TEventQuarter?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPEventQuarter@@UAEPAXI@Z:NEAR		; CSPEventQuarter::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T184885 DD	0ffffffffH
	DD	FLAT:$L184711
$T184882 DD	019930520H
	DD	01H
	DD	FLAT:$T184885
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BP@KFGLDCKH@?$HL?5CALL?5TEventQuarter?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BP@KFGLDCKH@?$HL?5CALL?5TEventQuarter?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' CALL TEventQuarter(?,?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPEventQuarter@@6B@
CONST	SEGMENT
??_7CSPEventQuarter@@6B@ DD FLAT:??_ECSPEventQuarter@@UAEPAXI@Z ; CSPEventQuarter::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPEventQuarter@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPEventQuarter@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPEventQuarter@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T184710 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPEventQuarter@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPEventQuarter::CSPEventQuarter, COMDAT
; _this$ = ecx

; 5021 : DEF_QUERY(CSPEventQuarter, _T("{ CALL TEventQuarter(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPEventQuarter@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@KFGLDCKH@?$HL?5CALL?5TEventQuarter?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T184710[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPEventQuarter@@6B@
  0005e	72 0d		 jb	 SHORT $L184883
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L184883:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184711:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPEventQuarter@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T184882
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPEventQuarter@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPEventQuarter::CSPEventQuarter
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPEventQuarter@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPEventQuarter@@UAEHXZ PROC NEAR		; CSPEventQuarter::GetNumParam, COMDAT
; _this$ = ecx

; 5023 : BEGIN_PARAM(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumParam@CSPEventQuarter@@UAEHXZ ENDP		; CSPEventQuarter::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPEventQuarter@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPEventQuarter@@UAEFH@Z PROC NEAR	; CSPEventQuarter::BindParameters, COMDAT
; _this$ = ecx

; 5023 : BEGIN_PARAM(4)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 5024 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szName)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	8b f1		 mov	 esi, ecx
  00008	33 c0		 xor	 eax, eax
  0000a	85 ff		 test	 edi, edi
  0000c	c7 86 10 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2064], -3 ; fffffffdH
  00016	75 1d		 jne	 SHORT $L137627
  00018	6a 33		 push	 51			; 00000033H
  0001a	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00020	50		 push	 eax
  00021	6a 01		 push	 1
  00023	6a 01		 push	 1
  00025	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
  0002a	66 85 c0	 test	 ax, ax
  0002d	74 06		 je	 SHORT $L137627
  0002f	66 3d 01 00	 cmp	 ax, 1
  00033	75 76		 jne	 SHORT $L137622
$L137627:

; 5025 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bDay)

  00035	85 ff		 test	 edi, edi
  00037	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  00041	75 12		 jne	 SHORT $L137628
  00043	8d 8e 5f 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3167]
  00049	51		 push	 ecx
  0004a	6a 02		 push	 2
  0004c	6a 01		 push	 1
  0004e	8b ce		 mov	 ecx, esi
  00050	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137628:
  00055	66 85 c0	 test	 ax, ax
  00058	74 06		 je	 SHORT $L137629
  0005a	66 3d 01 00	 cmp	 ax, 1
  0005e	75 4b		 jne	 SHORT $L137622
$L137629:

; 5026 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bHour)

  00060	85 ff		 test	 edi, edi
  00062	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  0006c	75 12		 jne	 SHORT $L137630
  0006e	8d 96 60 0c 00
	00		 lea	 edx, DWORD PTR [esi+3168]
  00074	52		 push	 edx
  00075	6a 03		 push	 3
  00077	6a 01		 push	 1
  00079	8b ce		 mov	 ecx, esi
  0007b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137630:
  00080	66 85 c0	 test	 ax, ax
  00083	74 06		 je	 SHORT $L137631
  00085	66 3d 01 00	 cmp	 ax, 1
  00089	75 20		 jne	 SHORT $L137622
$L137631:

; 5027 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bMinute)

  0008b	85 ff		 test	 edi, edi
  0008d	c7 86 1c 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2076], 0
  00097	75 12		 jne	 SHORT $L137622
  00099	8d 86 61 0c 00
	00		 lea	 eax, DWORD PTR [esi+3169]
  0009f	50		 push	 eax
  000a0	6a 04		 push	 4
  000a2	6a 01		 push	 1
  000a4	8b ce		 mov	 ecx, esi
  000a6	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137622:
  000ab	5f		 pop	 edi
  000ac	5e		 pop	 esi

; 5028 : END_PARAM()

  000ad	c2 04 00	 ret	 4
?BindParameters@CSPEventQuarter@@UAEFH@Z ENDP		; CSPEventQuarter::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPEventQuarter@@UAE@XZ			; CSPEventQuarter::~CSPEventQuarter
; Function compile flags: /Ogty
;	COMDAT ??_GCSPEventQuarter@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPEventQuarter@@UAEPAXI@Z PROC NEAR		; CSPEventQuarter::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPEventQuarter@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L184897
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L184897:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPEventQuarter@@UAEPAXI@Z ENDP			; CSPEventQuarter::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPEventQuarter@@UAE@XZ
_TEXT	SEGMENT
??1CSPEventQuarter@@UAE@XZ PROC NEAR			; CSPEventQuarter::~CSPEventQuarter, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPEventQuarter@@UAE@XZ ENDP				; CSPEventQuarter::~CSPEventQuarter
_TEXT	ENDS
PUBLIC	??0CSPSaveEXP@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveEXP::CSPSaveEXP
PUBLIC	?GetNumParam@CSPSaveEXP@@UAEHXZ			; CSPSaveEXP::GetNumParam
PUBLIC	?BindParameters@CSPSaveEXP@@UAEFH@Z		; CSPSaveEXP::BindParameters
PUBLIC	??_7CSPSaveEXP@@6B@				; CSPSaveEXP::`vftable'
PUBLIC	??_GCSPSaveEXP@@UAEPAXI@Z			; CSPSaveEXP::`scalar deleting destructor'
PUBLIC	??_C@_0BG@FIIGNJJH@?$HL?5CALL?5TSaveEXP?$CI?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPSaveEXP@@UAEPAXI@Z:NEAR			; CSPSaveEXP::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T185080 DD	0ffffffffH
	DD	FLAT:$L184906
$T185077 DD	019930520H
	DD	01H
	DD	FLAT:$T185080
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BG@FIIGNJJH@?$HL?5CALL?5TSaveEXP?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BG@FIIGNJJH@?$HL?5CALL?5TSaveEXP?$CI?$DP?0?$DP?$CJ?$HN?$AA@ DB '{ '
	DB	'CALL TSaveEXP(?,?)}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveEXP@@6B@
CONST	SEGMENT
??_7CSPSaveEXP@@6B@ DD FLAT:??_ECSPSaveEXP@@UAEPAXI@Z	; CSPSaveEXP::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveEXP@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveEXP@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveEXP@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T184905 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveEXP@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveEXP::CSPSaveEXP, COMDAT
; _this$ = ecx

; 5037 : DEF_QUERY(CSPSaveEXP, _T("{ CALL TSaveEXP(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveEXP@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@FIIGNJJH@?$HL?5CALL?5TSaveEXP?$CI?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T184905[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveEXP@@6B@
  0005e	72 0d		 jb	 SHORT $L185078
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L185078:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L184906:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveEXP@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185077
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveEXP@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveEXP::CSPSaveEXP
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveEXP@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveEXP@@UAEHXZ PROC NEAR		; CSPSaveEXP::GetNumParam, COMDAT
; _this$ = ecx

; 5039 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPSaveEXP@@UAEHXZ ENDP			; CSPSaveEXP::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveEXP@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveEXP@@UAEFH@Z PROC NEAR		; CSPSaveEXP::BindParameters, COMDAT
; _this$ = ecx

; 5039 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 5040 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L137677
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L137677
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L137672
$L137677:

; 5041 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwEXP)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L137672
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137672:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 5042 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CSPSaveEXP@@UAEFH@Z ENDP		; CSPSaveEXP::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveEXP@@UAE@XZ				; CSPSaveEXP::~CSPSaveEXP
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveEXP@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveEXP@@UAEPAXI@Z PROC NEAR			; CSPSaveEXP::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveEXP@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L185092
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L185092:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveEXP@@UAEPAXI@Z ENDP				; CSPSaveEXP::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveEXP@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveEXP@@UAE@XZ PROC NEAR				; CSPSaveEXP::~CSPSaveEXP, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveEXP@@UAE@XZ ENDP				; CSPSaveEXP::~CSPSaveEXP
_TEXT	ENDS
PUBLIC	??0CSPSaveMoney@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveMoney::CSPSaveMoney
PUBLIC	?GetNumParam@CSPSaveMoney@@UAEHXZ		; CSPSaveMoney::GetNumParam
PUBLIC	?BindParameters@CSPSaveMoney@@UAEFH@Z		; CSPSaveMoney::BindParameters
PUBLIC	??_7CSPSaveMoney@@6B@				; CSPSaveMoney::`vftable'
PUBLIC	??_GCSPSaveMoney@@UAEPAXI@Z			; CSPSaveMoney::`scalar deleting destructor'
PUBLIC	??_C@_0BM@CCKPCLKC@?$HL?5CALL?5TSaveMoney?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPSaveMoney@@UAEPAXI@Z:NEAR		; CSPSaveMoney::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T185275 DD	0ffffffffH
	DD	FLAT:$L185101
$T185272 DD	019930520H
	DD	01H
	DD	FLAT:$T185275
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@CCKPCLKC@?$HL?5CALL?5TSaveMoney?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BM@CCKPCLKC@?$HL?5CALL?5TSaveMoney?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' CALL TSaveMoney(?,?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveMoney@@6B@
CONST	SEGMENT
??_7CSPSaveMoney@@6B@ DD FLAT:??_ECSPSaveMoney@@UAEPAXI@Z ; CSPSaveMoney::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveMoney@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveMoney@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveMoney@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T185100 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveMoney@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveMoney::CSPSaveMoney, COMDAT
; _this$ = ecx

; 5053 : DEF_QUERY(CSPSaveMoney, _T("{ CALL TSaveMoney(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveMoney@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@CCKPCLKC@?$HL?5CALL?5TSaveMoney?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T185100[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveMoney@@6B@
  0005e	72 0d		 jb	 SHORT $L185273
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L185273:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185101:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveMoney@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185272
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveMoney@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveMoney::CSPSaveMoney
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveMoney@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveMoney@@UAEHXZ PROC NEAR		; CSPSaveMoney::GetNumParam, COMDAT
; _this$ = ecx

; 5055 : BEGIN_PARAM(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumParam@CSPSaveMoney@@UAEHXZ ENDP			; CSPSaveMoney::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveMoney@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveMoney@@UAEFH@Z PROC NEAR		; CSPSaveMoney::BindParameters, COMDAT
; _this$ = ecx

; 5055 : BEGIN_PARAM(4)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5056 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1b		 jne	 SHORT $L137725
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 06		 je	 SHORT $L137725
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	75 6a		 jne	 SHORT $L137720
$L137725:

; 5057 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGold)

  00032	3b fb		 cmp	 edi, ebx
  00034	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003a	75 12		 jne	 SHORT $L137726
  0003c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00042	51		 push	 ecx
  00043	6a 02		 push	 2
  00045	6a 01		 push	 1
  00047	8b ce		 mov	 ecx, esi
  00049	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137726:
  0004e	66 3b c3	 cmp	 ax, bx
  00051	74 06		 je	 SHORT $L137727
  00053	66 3d 01 00	 cmp	 ax, 1
  00057	75 43		 jne	 SHORT $L137720
$L137727:

; 5058 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwSilver)

  00059	3b fb		 cmp	 edi, ebx
  0005b	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00061	75 12		 jne	 SHORT $L137728
  00063	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00069	52		 push	 edx
  0006a	6a 03		 push	 3
  0006c	6a 01		 push	 1
  0006e	8b ce		 mov	 ecx, esi
  00070	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137728:
  00075	66 3b c3	 cmp	 ax, bx
  00078	74 06		 je	 SHORT $L137729
  0007a	66 3d 01 00	 cmp	 ax, 1
  0007e	75 1c		 jne	 SHORT $L137720
$L137729:

; 5059 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCooper)

  00080	3b fb		 cmp	 edi, ebx
  00082	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00088	75 12		 jne	 SHORT $L137720
  0008a	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00090	50		 push	 eax
  00091	6a 04		 push	 4
  00093	6a 01		 push	 1
  00095	8b ce		 mov	 ecx, esi
  00097	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137720:
  0009c	5f		 pop	 edi
  0009d	5e		 pop	 esi
  0009e	5b		 pop	 ebx

; 5060 : END_PARAM()

  0009f	c2 04 00	 ret	 4
?BindParameters@CSPSaveMoney@@UAEFH@Z ENDP		; CSPSaveMoney::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveMoney@@UAE@XZ				; CSPSaveMoney::~CSPSaveMoney
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveMoney@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveMoney@@UAEPAXI@Z PROC NEAR			; CSPSaveMoney::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveMoney@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L185287
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L185287:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveMoney@@UAEPAXI@Z ENDP			; CSPSaveMoney::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveMoney@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveMoney@@UAE@XZ PROC NEAR			; CSPSaveMoney::~CSPSaveMoney, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveMoney@@UAE@XZ ENDP				; CSPSaveMoney::~CSPSaveMoney
_TEXT	ENDS
PUBLIC	??0CSPSaveDuringItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveDuringItem::CSPSaveDuringItem
PUBLIC	?GetNumParam@CSPSaveDuringItem@@UAEHXZ		; CSPSaveDuringItem::GetNumParam
PUBLIC	?BindParameters@CSPSaveDuringItem@@UAEFH@Z	; CSPSaveDuringItem::BindParameters
PUBLIC	??_7CSPSaveDuringItem@@6B@			; CSPSaveDuringItem::`vftable'
PUBLIC	??_GCSPSaveDuringItem@@UAEPAXI@Z		; CSPSaveDuringItem::`scalar deleting destructor'
PUBLIC	??_C@_0CD@HNFHNNLK@?$HL?5CALL?5TSaveDuringItem?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPSaveDuringItem@@UAEPAXI@Z:NEAR		; CSPSaveDuringItem::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T185470 DD	0ffffffffH
	DD	FLAT:$L185296
$T185467 DD	019930520H
	DD	01H
	DD	FLAT:$T185470
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CD@HNFHNNLK@?$HL?5CALL?5TSaveDuringItem?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CD@HNFHNNLK@?$HL?5CALL?5TSaveDuringItem?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	' CALL TSaveDuringItem(?,?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveDuringItem@@6B@
CONST	SEGMENT
??_7CSPSaveDuringItem@@6B@ DD FLAT:??_ECSPSaveDuringItem@@UAEPAXI@Z ; CSPSaveDuringItem::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveDuringItem@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveDuringItem@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveDuringItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T185295 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveDuringItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveDuringItem::CSPSaveDuringItem, COMDAT
; _this$ = ecx

; 5072 : DEF_QUERY(CSPSaveDuringItem, _T("{ CALL TSaveDuringItem(?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveDuringItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CD@HNFHNNLK@?$HL?5CALL?5TSaveDuringItem?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T185295[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveDuringItem@@6B@
  0005e	72 0d		 jb	 SHORT $L185468
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L185468:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185296:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveDuringItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185467
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveDuringItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveDuringItem::CSPSaveDuringItem
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveDuringItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveDuringItem@@UAEHXZ PROC NEAR	; CSPSaveDuringItem::GetNumParam, COMDAT
; _this$ = ecx

; 5074 : BEGIN_PARAM(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumParam@CSPSaveDuringItem@@UAEHXZ ENDP		; CSPSaveDuringItem::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveDuringItem@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveDuringItem@@UAEFH@Z PROC NEAR	; CSPSaveDuringItem::BindParameters, COMDAT
; _this$ = ecx

; 5074 : BEGIN_PARAM(5)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5075 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L137778
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L137778
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 91 00 00
	00		 jne	 $L137773
$L137778:

; 5076 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wItemID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L137779
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137779:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 06		 je	 SHORT $L137780
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	75 6a		 jne	 SHORT $L137773
$L137780:

; 5077 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bType)

  0005d	3b fb		 cmp	 edi, ebx
  0005f	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00065	75 12		 jne	 SHORT $L137781
  00067	8d 96 32 0c 00
	00		 lea	 edx, DWORD PTR [esi+3122]
  0006d	52		 push	 edx
  0006e	6a 03		 push	 3
  00070	6a 01		 push	 1
  00072	8b ce		 mov	 ecx, esi
  00074	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137781:
  00079	66 3b c3	 cmp	 ax, bx
  0007c	74 06		 je	 SHORT $L137782
  0007e	66 3d 01 00	 cmp	 ax, 1
  00082	75 43		 jne	 SHORT $L137773
$L137782:

; 5078 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwRemainTime)

  00084	3b fb		 cmp	 edi, ebx
  00086	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  0008c	75 12		 jne	 SHORT $L137783
  0008e	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  00094	50		 push	 eax
  00095	6a 04		 push	 4
  00097	6a 01		 push	 1
  00099	8b ce		 mov	 ecx, esi
  0009b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137783:
  000a0	66 3b c3	 cmp	 ax, bx
  000a3	74 06		 je	 SHORT $L137784
  000a5	66 3d 01 00	 cmp	 ax, 1
  000a9	75 1c		 jne	 SHORT $L137773
$L137784:

; 5079 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_tEndTime)

  000ab	3b fb		 cmp	 edi, ebx
  000ad	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b3	75 12		 jne	 SHORT $L137773
  000b5	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  000bb	51		 push	 ecx
  000bc	6a 05		 push	 5
  000be	6a 01		 push	 1
  000c0	8b ce		 mov	 ecx, esi
  000c2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L137773:
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx

; 5080 : END_PARAM()

  000ca	c2 04 00	 ret	 4
?BindParameters@CSPSaveDuringItem@@UAEFH@Z ENDP		; CSPSaveDuringItem::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveDuringItem@@UAE@XZ			; CSPSaveDuringItem::~CSPSaveDuringItem
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveDuringItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveDuringItem@@UAEPAXI@Z PROC NEAR		; CSPSaveDuringItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveDuringItem@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L185482
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L185482:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveDuringItem@@UAEPAXI@Z ENDP			; CSPSaveDuringItem::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveDuringItem@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveDuringItem@@UAE@XZ PROC NEAR			; CSPSaveDuringItem::~CSPSaveDuringItem, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveDuringItem@@UAE@XZ ENDP			; CSPSaveDuringItem::~CSPSaveDuringItem
_TEXT	ENDS
PUBLIC	??0CSPSaveExpItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveExpItem::CSPSaveExpItem
PUBLIC	?GetNumParam@CSPSaveExpItem@@UAEHXZ		; CSPSaveExpItem::GetNumParam
PUBLIC	?BindParameters@CSPSaveExpItem@@UAEFH@Z		; CSPSaveExpItem::BindParameters
PUBLIC	??_7CSPSaveExpItem@@6B@				; CSPSaveExpItem::`vftable'
PUBLIC	??_GCSPSaveExpItem@@UAEPAXI@Z			; CSPSaveExpItem::`scalar deleting destructor'
PUBLIC	??_C@_0CA@EPKIBBOM@?$HL?5CALL?5TSaveExpItem?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPSaveExpItem@@UAEPAXI@Z:NEAR		; CSPSaveExpItem::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T185665 DD	0ffffffffH
	DD	FLAT:$L185491
$T185662 DD	019930520H
	DD	01H
	DD	FLAT:$T185665
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CA@EPKIBBOM@?$HL?5CALL?5TSaveExpItem?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0CA@EPKIBBOM@?$HL?5CALL?5TSaveExpItem?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' CALL TSaveExpItem(?,?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveExpItem@@6B@
CONST	SEGMENT
??_7CSPSaveExpItem@@6B@ DD FLAT:??_ECSPSaveExpItem@@UAEPAXI@Z ; CSPSaveExpItem::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveExpItem@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveExpItem@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveExpItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T185490 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveExpItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveExpItem::CSPSaveExpItem, COMDAT
; _this$ = ecx

; 5092 : DEF_QUERY(CSPSaveExpItem, _T("{ CALL TSaveExpItem(?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveExpItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CA@EPKIBBOM@?$HL?5CALL?5TSaveExpItem?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T185490[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveExpItem@@6B@
  0005e	72 0d		 jb	 SHORT $L185663
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L185663:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185491:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveExpItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185662
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveExpItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveExpItem::CSPSaveExpItem
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveExpItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveExpItem@@UAEHXZ PROC NEAR		; CSPSaveExpItem::GetNumParam, COMDAT
; _this$ = ecx

; 5094 : BEGIN_PARAM(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumParam@CSPSaveExpItem@@UAEHXZ ENDP		; CSPSaveExpItem::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveExpItem@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveExpItem@@UAEFH@Z PROC NEAR	; CSPSaveExpItem::BindParameters, COMDAT
; _this$ = ecx

; 5094 : BEGIN_PARAM(5)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5095 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L137833
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L137833
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 91 00 00
	00		 jne	 $L137828
$L137833:

; 5096 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wItemID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L137834
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137834:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 06		 je	 SHORT $L137835
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	75 6a		 jne	 SHORT $L137828
$L137835:

; 5097 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bType)

  0005d	3b fb		 cmp	 edi, ebx
  0005f	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00065	75 12		 jne	 SHORT $L137836
  00067	8d 96 32 0c 00
	00		 lea	 edx, DWORD PTR [esi+3122]
  0006d	52		 push	 edx
  0006e	6a 03		 push	 3
  00070	6a 01		 push	 1
  00072	8b ce		 mov	 ecx, esi
  00074	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137836:
  00079	66 3b c3	 cmp	 ax, bx
  0007c	74 06		 je	 SHORT $L137837
  0007e	66 3d 01 00	 cmp	 ax, 1
  00082	75 43		 jne	 SHORT $L137828
$L137837:

; 5098 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwRemainTime)

  00084	3b fb		 cmp	 edi, ebx
  00086	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  0008c	75 12		 jne	 SHORT $L137838
  0008e	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  00094	50		 push	 eax
  00095	6a 04		 push	 4
  00097	6a 01		 push	 1
  00099	8b ce		 mov	 ecx, esi
  0009b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137838:
  000a0	66 3b c3	 cmp	 ax, bx
  000a3	74 06		 je	 SHORT $L137839
  000a5	66 3d 01 00	 cmp	 ax, 1
  000a9	75 1c		 jne	 SHORT $L137828
$L137839:

; 5099 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_tEndTime)

  000ab	3b fb		 cmp	 edi, ebx
  000ad	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b3	75 12		 jne	 SHORT $L137828
  000b5	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  000bb	51		 push	 ecx
  000bc	6a 05		 push	 5
  000be	6a 01		 push	 1
  000c0	8b ce		 mov	 ecx, esi
  000c2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L137828:
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx

; 5100 : END_PARAM()

  000ca	c2 04 00	 ret	 4
?BindParameters@CSPSaveExpItem@@UAEFH@Z ENDP		; CSPSaveExpItem::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveExpItem@@UAE@XZ			; CSPSaveExpItem::~CSPSaveExpItem
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveExpItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveExpItem@@UAEPAXI@Z PROC NEAR			; CSPSaveExpItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveExpItem@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L185677
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L185677:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveExpItem@@UAEPAXI@Z ENDP			; CSPSaveExpItem::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveExpItem@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveExpItem@@UAE@XZ PROC NEAR			; CSPSaveExpItem::~CSPSaveExpItem, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveExpItem@@UAE@XZ ENDP				; CSPSaveExpItem::~CSPSaveExpItem
_TEXT	ENDS
PUBLIC	??0CSPSaveActEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveActEnd::CSPSaveActEnd
PUBLIC	?GetNumParam@CSPSaveActEnd@@UAEHXZ		; CSPSaveActEnd::GetNumParam
PUBLIC	?BindParameters@CSPSaveActEnd@@UAEFH@Z		; CSPSaveActEnd::BindParameters
PUBLIC	??_7CSPSaveActEnd@@6B@				; CSPSaveActEnd::`vftable'
PUBLIC	??_GCSPSaveActEnd@@UAEPAXI@Z			; CSPSaveActEnd::`scalar deleting destructor'
PUBLIC	??_C@_0BH@OKDFEELC@?$HL?5CALL?5TSaveActEnd?$CI?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPSaveActEnd@@UAEPAXI@Z:NEAR		; CSPSaveActEnd::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T185860 DD	0ffffffffH
	DD	FLAT:$L185686
$T185857 DD	019930520H
	DD	01H
	DD	FLAT:$T185860
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BH@OKDFEELC@?$HL?5CALL?5TSaveActEnd?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BH@OKDFEELC@?$HL?5CALL?5TSaveActEnd?$CI?$DP?$CJ?$HN?$AA@ DB '{ CAL'
	DB	'L TSaveActEnd(?)}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveActEnd@@6B@
CONST	SEGMENT
??_7CSPSaveActEnd@@6B@ DD FLAT:??_ECSPSaveActEnd@@UAEPAXI@Z ; CSPSaveActEnd::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveActEnd@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveActEnd@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveActEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T185685 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveActEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveActEnd::CSPSaveActEnd, COMDAT
; _this$ = ecx

; 5108 : DEF_QUERY(CSPSaveActEnd, _T("{ CALL TSaveActEnd(?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveActEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@OKDFEELC@?$HL?5CALL?5TSaveActEnd?$CI?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T185685[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveActEnd@@6B@
  0005e	72 0d		 jb	 SHORT $L185858
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L185858:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185686:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveActEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T185857
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveActEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveActEnd::CSPSaveActEnd
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveActEnd@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveActEnd@@UAEHXZ PROC NEAR		; CSPSaveActEnd::GetNumParam, COMDAT
; _this$ = ecx

; 5110 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CSPSaveActEnd@@UAEHXZ ENDP			; CSPSaveActEnd::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveActEnd@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveActEnd@@UAEFH@Z PROC NEAR	; CSPSaveActEnd::BindParameters, COMDAT
; _this$ = ecx

; 5111 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L137879
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137879:

; 5112 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CSPSaveActEnd@@UAEFH@Z ENDP		; CSPSaveActEnd::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveActEnd@@UAE@XZ			; CSPSaveActEnd::~CSPSaveActEnd
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveActEnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveActEnd@@UAEPAXI@Z PROC NEAR			; CSPSaveActEnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveActEnd@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L185872
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L185872:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveActEnd@@UAEPAXI@Z ENDP			; CSPSaveActEnd::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveActEnd@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveActEnd@@UAE@XZ PROC NEAR			; CSPSaveActEnd::~CSPSaveActEnd, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveActEnd@@UAE@XZ ENDP				; CSPSaveActEnd::~CSPSaveActEnd
_TEXT	ENDS
PUBLIC	??0CSPCashCabinetBuy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPCashCabinetBuy::CSPCashCabinetBuy
PUBLIC	?GetNumParam@CSPCashCabinetBuy@@UAEHXZ		; CSPCashCabinetBuy::GetNumParam
PUBLIC	?BindParameters@CSPCashCabinetBuy@@UAEFH@Z	; CSPCashCabinetBuy::BindParameters
PUBLIC	??_7CSPCashCabinetBuy@@6B@			; CSPCashCabinetBuy::`vftable'
PUBLIC	??_GCSPCashCabinetBuy@@UAEPAXI@Z		; CSPCashCabinetBuy::`scalar deleting destructor'
PUBLIC	??_C@_0CH@COGOJAOJ@?$HL?5?$DP?5?$DN?5CALL?5TCashCabinetBuy?$CI?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPCashCabinetBuy@@UAEPAXI@Z:NEAR		; CSPCashCabinetBuy::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T186055 DD	0ffffffffH
	DD	FLAT:$L185881
$T186052 DD	019930520H
	DD	01H
	DD	FLAT:$T186055
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CH@COGOJAOJ@?$HL?5?$DP?5?$DN?5CALL?5TCashCabinetBuy?$CI?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CH@COGOJAOJ@?$HL?5?$DP?5?$DN?5CALL?5TCashCabinetBuy?$CI?$DP?0?$DP?0?$DP@ DB '{'
	DB	' ? = CALL TCashCabinetBuy(?,?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPCashCabinetBuy@@6B@
CONST	SEGMENT
??_7CSPCashCabinetBuy@@6B@ DD FLAT:??_ECSPCashCabinetBuy@@UAEPAXI@Z ; CSPCashCabinetBuy::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPCashCabinetBuy@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPCashCabinetBuy@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPCashCabinetBuy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T185880 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPCashCabinetBuy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPCashCabinetBuy::CSPCashCabinetBuy, COMDAT
; _this$ = ecx

; 5125 : DEF_QUERY(CSPCashCabinetBuy, _T("{ ? = CALL TCashCabinetBuy(?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPCashCabinetBuy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CH@COGOJAOJ@?$HL?5?$DP?5?$DN?5CALL?5TCashCabinetBuy?$CI?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T185880[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPCashCabinetBuy@@6B@
  0005e	72 0d		 jb	 SHORT $L186053
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L186053:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L185881:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPCashCabinetBuy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T186052
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPCashCabinetBuy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPCashCabinetBuy::CSPCashCabinetBuy
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPCashCabinetBuy@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPCashCabinetBuy@@UAEHXZ PROC NEAR	; CSPCashCabinetBuy::GetNumParam, COMDAT
; _this$ = ecx

; 5127 : BEGIN_PARAM(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumParam@CSPCashCabinetBuy@@UAEHXZ ENDP		; CSPCashCabinetBuy::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPCashCabinetBuy@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPCashCabinetBuy@@UAEFH@Z PROC NEAR	; CSPCashCabinetBuy::BindParameters, COMDAT
; _this$ = ecx

; 5127 : BEGIN_PARAM(6)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5128 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_nRet);

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L137932
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L137932
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 bc 00 00
	00		 jne	 $L137927
$L137932:

; 5129 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dateTime)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L137933
  00040	8d 8e 40 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3136]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 04		 push	 4
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L137933:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L137934
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 91 00 00
	00		 jne	 $L137927
$L137934:

; 5130 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwCash)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L137935
  0006b	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 04		 push	 4
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137935:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 06		 je	 SHORT $L137936
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 6a		 jne	 SHORT $L137927
$L137936:

; 5131 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwBonus)

  00088	3b fb		 cmp	 edi, ebx
  0008a	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00090	75 12		 jne	 SHORT $L137937
  00092	8d 86 3c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3132]
  00098	50		 push	 eax
  00099	6a 04		 push	 4
  0009b	6a 04		 push	 4
  0009d	8b ce		 mov	 ecx, esi
  0009f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137937:
  000a4	66 3b c3	 cmp	 ax, bx
  000a7	74 06		 je	 SHORT $L137938
  000a9	66 3d 01 00	 cmp	 ax, 1
  000ad	75 43		 jne	 SHORT $L137927
$L137938:

; 5132 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wCashItemID)

  000af	3b fb		 cmp	 edi, ebx
  000b1	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b7	75 12		 jne	 SHORT $L137939
  000b9	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  000bf	51		 push	 ecx
  000c0	6a 05		 push	 5
  000c2	6a 01		 push	 1
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L137939:
  000cb	66 3b c3	 cmp	 ax, bx
  000ce	74 06		 je	 SHORT $L137940
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	75 1c		 jne	 SHORT $L137927
$L137940:

; 5133 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  000d6	3b fb		 cmp	 edi, ebx
  000d8	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000de	75 12		 jne	 SHORT $L137927
  000e0	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  000e6	52		 push	 edx
  000e7	6a 06		 push	 6
  000e9	6a 01		 push	 1
  000eb	8b ce		 mov	 ecx, esi
  000ed	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137927:
  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx

; 5134 : END_PARAM()

  000f5	c2 04 00	 ret	 4
?BindParameters@CSPCashCabinetBuy@@UAEFH@Z ENDP		; CSPCashCabinetBuy::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPCashCabinetBuy@@UAE@XZ			; CSPCashCabinetBuy::~CSPCashCabinetBuy
; Function compile flags: /Ogty
;	COMDAT ??_GCSPCashCabinetBuy@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPCashCabinetBuy@@UAEPAXI@Z PROC NEAR		; CSPCashCabinetBuy::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPCashCabinetBuy@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L186067
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L186067:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPCashCabinetBuy@@UAEPAXI@Z ENDP			; CSPCashCabinetBuy::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPCashCabinetBuy@@UAE@XZ
_TEXT	SEGMENT
??1CSPCashCabinetBuy@@UAE@XZ PROC NEAR			; CSPCashCabinetBuy::~CSPCashCabinetBuy, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPCashCabinetBuy@@UAE@XZ ENDP			; CSPCashCabinetBuy::~CSPCashCabinetBuy
_TEXT	ENDS
PUBLIC	??0CSPCashItemPutin@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPCashItemPutin::CSPCashItemPutin
PUBLIC	?GetNumParam@CSPCashItemPutin@@UAEHXZ		; CSPCashItemPutin::GetNumParam
PUBLIC	?BindParameters@CSPCashItemPutin@@UAEFH@Z	; CSPCashItemPutin::BindParameters
PUBLIC	??_7CSPCashItemPutin@@6B@			; CSPCashItemPutin::`vftable'
PUBLIC	??_GCSPCashItemPutin@@UAEPAXI@Z			; CSPCashItemPutin::`scalar deleting destructor'
PUBLIC	??_C@_0CI@ECCGJFBO@?$HL?5?$DP?5?$DN?5CALL?5TCashItemPutin?$CI?$DP?0?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPCashItemPutin@@UAEPAXI@Z:NEAR		; CSPCashItemPutin::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T186250 DD	0ffffffffH
	DD	FLAT:$L186076
$T186247 DD	019930520H
	DD	01H
	DD	FLAT:$T186250
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CI@ECCGJFBO@?$HL?5?$DP?5?$DN?5CALL?5TCashItemPutin?$CI?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0CI@ECCGJFBO@?$HL?5?$DP?5?$DN?5CALL?5TCashItemPutin?$CI?$DP?0?$DP?0?$DP?0@ DB '{'
	DB	' ? = CALL TCashItemPutin(?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPCashItemPutin@@6B@
CONST	SEGMENT
??_7CSPCashItemPutin@@6B@ DD FLAT:??_ECSPCashItemPutin@@UAEPAXI@Z ; CSPCashItemPutin::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPCashItemPutin@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPCashItemPutin@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPCashItemPutin@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T186075 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPCashItemPutin@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPCashItemPutin::CSPCashItemPutin, COMDAT
; _this$ = ecx

; 5148 : DEF_QUERY(CSPCashItemPutin, _T("{ ? = CALL TCashItemPutin(?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPCashItemPutin@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CI@ECCGJFBO@?$HL?5?$DP?5?$DN?5CALL?5TCashItemPutin?$CI?$DP?0?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T186075[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPCashItemPutin@@6B@
  0005e	72 0d		 jb	 SHORT $L186248
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L186248:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L186076:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPCashItemPutin@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T186247
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPCashItemPutin@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPCashItemPutin::CSPCashItemPutin
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPCashItemPutin@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPCashItemPutin@@UAEHXZ PROC NEAR		; CSPCashItemPutin::GetNumParam, COMDAT
; _this$ = ecx

; 5150 : BEGIN_PARAM(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumParam@CSPCashItemPutin@@UAEHXZ ENDP		; CSPCashItemPutin::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPCashItemPutin@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPCashItemPutin@@UAEFH@Z PROC NEAR	; CSPCashItemPutin::BindParameters, COMDAT
; _this$ = ecx

; 5150 : BEGIN_PARAM(6)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5151 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_nRet);

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L137991
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L137991
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 e7 00 00
	00		 jne	 $L137986
$L137991:

; 5152 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwNewID);

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L137992
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 04		 push	 4
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137992:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L137993
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 bc 00 00
	00		 jne	 $L137986
$L137993:

; 5153 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwCash);

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L137994
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 04		 push	 4
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137994:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L137995
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 91 00 00
	00		 jne	 $L137986
$L137995:

; 5154 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwBonus);

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L137996
  00096	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 04		 push	 4
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137996:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 06		 je	 SHORT $L137997
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	75 6a		 jne	 SHORT $L137986
$L137997:

; 5155 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  000b3	3b fb		 cmp	 edi, ebx
  000b5	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bb	75 12		 jne	 SHORT $L137998
  000bd	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  000c3	51		 push	 ecx
  000c4	6a 05		 push	 5
  000c6	6a 01		 push	 1
  000c8	8b ce		 mov	 ecx, esi
  000ca	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L137998:
  000cf	66 3b c3	 cmp	 ax, bx
  000d2	74 06		 je	 SHORT $L137999
  000d4	66 3d 01 00	 cmp	 ax, 1
  000d8	75 43		 jne	 SHORT $L137986
$L137999:

; 5156 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bInven)

  000da	3b fb		 cmp	 edi, ebx
  000dc	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000e2	75 12		 jne	 SHORT $L138000
  000e4	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  000ea	52		 push	 edx
  000eb	6a 06		 push	 6
  000ed	6a 01		 push	 1
  000ef	8b ce		 mov	 ecx, esi
  000f1	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138000:
  000f6	66 3b c3	 cmp	 ax, bx
  000f9	74 06		 je	 SHORT $L138001
  000fb	66 3d 01 00	 cmp	 ax, 1
  000ff	75 1c		 jne	 SHORT $L137986
$L138001:

; 5157 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bItemID)

  00101	3b fb		 cmp	 edi, ebx
  00103	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00109	75 12		 jne	 SHORT $L137986
  0010b	8d 86 41 0c 00
	00		 lea	 eax, DWORD PTR [esi+3137]
  00111	50		 push	 eax
  00112	6a 07		 push	 7
  00114	6a 01		 push	 1
  00116	8b ce		 mov	 ecx, esi
  00118	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L137986:
  0011d	5f		 pop	 edi
  0011e	5e		 pop	 esi
  0011f	5b		 pop	 ebx

; 5158 : END_PARAM()

  00120	c2 04 00	 ret	 4
?BindParameters@CSPCashItemPutin@@UAEFH@Z ENDP		; CSPCashItemPutin::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPCashItemPutin@@UAE@XZ			; CSPCashItemPutin::~CSPCashItemPutin
; Function compile flags: /Ogty
;	COMDAT ??_GCSPCashItemPutin@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPCashItemPutin@@UAEPAXI@Z PROC NEAR		; CSPCashItemPutin::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPCashItemPutin@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L186262
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L186262:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPCashItemPutin@@UAEPAXI@Z ENDP			; CSPCashItemPutin::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPCashItemPutin@@UAE@XZ
_TEXT	SEGMENT
??1CSPCashItemPutin@@UAE@XZ PROC NEAR			; CSPCashItemPutin::~CSPCashItemPutin, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPCashItemPutin@@UAE@XZ ENDP			; CSPCashItemPutin::~CSPCashItemPutin
_TEXT	ENDS
PUBLIC	??0CSPGetCashCabinetUseTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetCashCabinetUseTime::CSPGetCashCabinetUseTime
PUBLIC	?GetNumParam@CSPGetCashCabinetUseTime@@UAEHXZ	; CSPGetCashCabinetUseTime::GetNumParam
PUBLIC	?BindParameters@CSPGetCashCabinetUseTime@@UAEFH@Z ; CSPGetCashCabinetUseTime::BindParameters
PUBLIC	??_7CSPGetCashCabinetUseTime@@6B@		; CSPGetCashCabinetUseTime::`vftable'
PUBLIC	??_GCSPGetCashCabinetUseTime@@UAEPAXI@Z		; CSPGetCashCabinetUseTime::`scalar deleting destructor'
PUBLIC	??_C@_0CM@DJINDKIA@?$HL?5?$DP?5?$DN?5CALL?5TGetCashCabinetUseTim@ ; `string'
EXTRN	??_ECSPGetCashCabinetUseTime@@UAEPAXI@Z:NEAR	; CSPGetCashCabinetUseTime::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T186445 DD	0ffffffffH
	DD	FLAT:$L186271
$T186442 DD	019930520H
	DD	01H
	DD	FLAT:$T186445
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CM@DJINDKIA@?$HL?5?$DP?5?$DN?5CALL?5TGetCashCabinetUseTim@
CONST	SEGMENT
??_C@_0CM@DJINDKIA@?$HL?5?$DP?5?$DN?5CALL?5TGetCashCabinetUseTim@ DB '{ ?'
	DB	' = CALL TGetCashCabinetUseTime(?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPGetCashCabinetUseTime@@6B@
CONST	SEGMENT
??_7CSPGetCashCabinetUseTime@@6B@ DD FLAT:??_ECSPGetCashCabinetUseTime@@UAEPAXI@Z ; CSPGetCashCabinetUseTime::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGetCashCabinetUseTime@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGetCashCabinetUseTime@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGetCashCabinetUseTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T186270 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGetCashCabinetUseTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGetCashCabinetUseTime::CSPGetCashCabinetUseTime, COMDAT
; _this$ = ecx

; 5170 : DEF_QUERY(CSPGetCashCabinetUseTime, _T("{ ? = CALL TGetCashCabinetUseTime(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGetCashCabinetUseTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CM@DJINDKIA@?$HL?5?$DP?5?$DN?5CALL?5TGetCashCabinetUseTim@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T186270[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGetCashCabinetUseTime@@6B@
  0005e	72 0d		 jb	 SHORT $L186443
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L186443:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L186271:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGetCashCabinetUseTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T186442
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGetCashCabinetUseTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGetCashCabinetUseTime::CSPGetCashCabinetUseTime
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGetCashCabinetUseTime@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGetCashCabinetUseTime@@UAEHXZ PROC NEAR	; CSPGetCashCabinetUseTime::GetNumParam, COMDAT
; _this$ = ecx

; 5172 : BEGIN_PARAM(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumParam@CSPGetCashCabinetUseTime@@UAEHXZ ENDP	; CSPGetCashCabinetUseTime::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetCashCabinetUseTime@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGetCashCabinetUseTime@@UAEFH@Z PROC NEAR ; CSPGetCashCabinetUseTime::BindParameters, COMDAT
; _this$ = ecx

; 5172 : BEGIN_PARAM(5)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5173 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_nRet)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L138050
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L138050
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 91 00 00
	00		 jne	 $L138045
$L138050:

; 5174 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dateTime)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L138051
  00040	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 04		 push	 4
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L138051:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 06		 je	 SHORT $L138052
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	75 6a		 jne	 SHORT $L138045
$L138052:

; 5175 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwCash)

  0005d	3b fb		 cmp	 edi, ebx
  0005f	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00065	75 12		 jne	 SHORT $L138053
  00067	8d 96 44 0c 00
	00		 lea	 edx, DWORD PTR [esi+3140]
  0006d	52		 push	 edx
  0006e	6a 03		 push	 3
  00070	6a 04		 push	 4
  00072	8b ce		 mov	 ecx, esi
  00074	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138053:
  00079	66 3b c3	 cmp	 ax, bx
  0007c	74 06		 je	 SHORT $L138054
  0007e	66 3d 01 00	 cmp	 ax, 1
  00082	75 43		 jne	 SHORT $L138045
$L138054:

; 5176 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwBonus)

  00084	3b fb		 cmp	 edi, ebx
  00086	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  0008c	75 12		 jne	 SHORT $L138055
  0008e	8d 86 48 0c 00
	00		 lea	 eax, DWORD PTR [esi+3144]
  00094	50		 push	 eax
  00095	6a 04		 push	 4
  00097	6a 04		 push	 4
  00099	8b ce		 mov	 ecx, esi
  0009b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138055:
  000a0	66 3b c3	 cmp	 ax, bx
  000a3	74 06		 je	 SHORT $L138056
  000a5	66 3d 01 00	 cmp	 ax, 1
  000a9	75 1c		 jne	 SHORT $L138045
$L138056:

; 5177 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  000ab	3b fb		 cmp	 edi, ebx
  000ad	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b3	75 12		 jne	 SHORT $L138045
  000b5	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  000bb	51		 push	 ecx
  000bc	6a 05		 push	 5
  000be	6a 01		 push	 1
  000c0	8b ce		 mov	 ecx, esi
  000c2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138045:
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx

; 5178 : END_PARAM()

  000ca	c2 04 00	 ret	 4
?BindParameters@CSPGetCashCabinetUseTime@@UAEFH@Z ENDP	; CSPGetCashCabinetUseTime::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGetCashCabinetUseTime@@UAE@XZ		; CSPGetCashCabinetUseTime::~CSPGetCashCabinetUseTime
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGetCashCabinetUseTime@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGetCashCabinetUseTime@@UAEPAXI@Z PROC NEAR	; CSPGetCashCabinetUseTime::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGetCashCabinetUseTime@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L186457
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L186457:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGetCashCabinetUseTime@@UAEPAXI@Z ENDP		; CSPGetCashCabinetUseTime::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGetCashCabinetUseTime@@UAE@XZ
_TEXT	SEGMENT
??1CSPGetCashCabinetUseTime@@UAE@XZ PROC NEAR		; CSPGetCashCabinetUseTime::~CSPGetCashCabinetUseTime, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGetCashCabinetUseTime@@UAE@XZ ENDP		; CSPGetCashCabinetUseTime::~CSPGetCashCabinetUseTime
_TEXT	ENDS
PUBLIC	??0CSPInitGenItemID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPInitGenItemID::CSPInitGenItemID
PUBLIC	?GetNumParam@CSPInitGenItemID@@UAEHXZ		; CSPInitGenItemID::GetNumParam
PUBLIC	?BindParameters@CSPInitGenItemID@@UAEFH@Z	; CSPInitGenItemID::BindParameters
PUBLIC	??_7CSPInitGenItemID@@6B@			; CSPInitGenItemID::`vftable'
PUBLIC	??_GCSPInitGenItemID@@UAEPAXI@Z			; CSPInitGenItemID::`scalar deleting destructor'
PUBLIC	??_C@_0BM@JKDEHEA@?$HL?5CALL?5TInitGenItemID?$CI?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPInitGenItemID@@UAEPAXI@Z:NEAR		; CSPInitGenItemID::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T186640 DD	0ffffffffH
	DD	FLAT:$L186466
$T186637 DD	019930520H
	DD	01H
	DD	FLAT:$T186640
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@JKDEHEA@?$HL?5CALL?5TInitGenItemID?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BM@JKDEHEA@?$HL?5CALL?5TInitGenItemID?$CI?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' CALL TInitGenItemID(?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPInitGenItemID@@6B@
CONST	SEGMENT
??_7CSPInitGenItemID@@6B@ DD FLAT:??_ECSPInitGenItemID@@UAEPAXI@Z ; CSPInitGenItemID::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPInitGenItemID@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPInitGenItemID@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPInitGenItemID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T186465 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPInitGenItemID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPInitGenItemID::CSPInitGenItemID, COMDAT
; _this$ = ecx

; 5187 : DEF_QUERY(CSPInitGenItemID, _T("{ CALL TInitGenItemID(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPInitGenItemID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@JKDEHEA@?$HL?5CALL?5TInitGenItemID?$CI?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T186465[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPInitGenItemID@@6B@
  0005e	72 0d		 jb	 SHORT $L186638
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L186638:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L186466:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPInitGenItemID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T186637
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPInitGenItemID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPInitGenItemID::CSPInitGenItemID
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPInitGenItemID@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPInitGenItemID@@UAEHXZ PROC NEAR		; CSPInitGenItemID::GetNumParam, COMDAT
; _this$ = ecx

; 5188 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPInitGenItemID@@UAEHXZ ENDP		; CSPInitGenItemID::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPInitGenItemID@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPInitGenItemID@@UAEFH@Z PROC NEAR	; CSPInitGenItemID::BindParameters, COMDAT
; _this$ = ecx

; 5188 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 5189 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dlGenItemID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L138102
  00014	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 04		 push	 4
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L138102
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L138097
$L138102:

; 5190 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bServerID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L138097
  0003d	8d 8e 2c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3116]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138097:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 5191 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CSPInitGenItemID@@UAEFH@Z ENDP		; CSPInitGenItemID::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPInitGenItemID@@UAE@XZ			; CSPInitGenItemID::~CSPInitGenItemID
; Function compile flags: /Ogty
;	COMDAT ??_GCSPInitGenItemID@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPInitGenItemID@@UAEPAXI@Z PROC NEAR		; CSPInitGenItemID::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPInitGenItemID@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L186652
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L186652:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPInitGenItemID@@UAEPAXI@Z ENDP			; CSPInitGenItemID::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPInitGenItemID@@UAE@XZ
_TEXT	SEGMENT
??1CSPInitGenItemID@@UAE@XZ PROC NEAR			; CSPInitGenItemID::~CSPInitGenItemID, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPInitGenItemID@@UAE@XZ ENDP			; CSPInitGenItemID::~CSPInitGenItemID
_TEXT	ENDS
PUBLIC	??0CSPDeleteDealItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPDeleteDealItem::CSPDeleteDealItem
PUBLIC	?GetNumParam@CSPDeleteDealItem@@UAEHXZ		; CSPDeleteDealItem::GetNumParam
PUBLIC	?BindParameters@CSPDeleteDealItem@@UAEFH@Z	; CSPDeleteDealItem::BindParameters
PUBLIC	??_7CSPDeleteDealItem@@6B@			; CSPDeleteDealItem::`vftable'
PUBLIC	??_GCSPDeleteDealItem@@UAEPAXI@Z		; CSPDeleteDealItem::`scalar deleting destructor'
PUBLIC	??_C@_0BL@IGEMDNJL@?$HL?5CALL?5TDeleteDealItem?$CI?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPDeleteDealItem@@UAEPAXI@Z:NEAR		; CSPDeleteDealItem::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T186835 DD	0ffffffffH
	DD	FLAT:$L186661
$T186832 DD	019930520H
	DD	01H
	DD	FLAT:$T186835
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BL@IGEMDNJL@?$HL?5CALL?5TDeleteDealItem?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BL@IGEMDNJL@?$HL?5CALL?5TDeleteDealItem?$CI?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' CALL TDeleteDealItem(?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPDeleteDealItem@@6B@
CONST	SEGMENT
??_7CSPDeleteDealItem@@6B@ DD FLAT:??_ECSPDeleteDealItem@@UAEPAXI@Z ; CSPDeleteDealItem::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPDeleteDealItem@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPDeleteDealItem@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPDeleteDealItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T186660 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPDeleteDealItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPDeleteDealItem::CSPDeleteDealItem, COMDAT
; _this$ = ecx

; 5199 : DEF_QUERY(CSPDeleteDealItem, _T("{ CALL TDeleteDealItem(?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPDeleteDealItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@IGEMDNJL@?$HL?5CALL?5TDeleteDealItem?$CI?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T186660[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPDeleteDealItem@@6B@
  0005e	72 0d		 jb	 SHORT $L186833
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L186833:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L186661:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPDeleteDealItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T186832
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPDeleteDealItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPDeleteDealItem::CSPDeleteDealItem
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPDeleteDealItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPDeleteDealItem@@UAEHXZ PROC NEAR	; CSPDeleteDealItem::GetNumParam, COMDAT
; _this$ = ecx

; 5200 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CSPDeleteDealItem@@UAEHXZ ENDP		; CSPDeleteDealItem::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPDeleteDealItem@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPDeleteDealItem@@UAEFH@Z PROC NEAR	; CSPDeleteDealItem::BindParameters, COMDAT
; _this$ = ecx

; 5201 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dlID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L138142
  00010	8d 81 30 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3120]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
$L138142:

; 5202 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CSPDeleteDealItem@@UAEFH@Z ENDP		; CSPDeleteDealItem::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPDeleteDealItem@@UAE@XZ			; CSPDeleteDealItem::~CSPDeleteDealItem
; Function compile flags: /Ogty
;	COMDAT ??_GCSPDeleteDealItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPDeleteDealItem@@UAEPAXI@Z PROC NEAR		; CSPDeleteDealItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPDeleteDealItem@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L186847
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L186847:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPDeleteDealItem@@UAEPAXI@Z ENDP			; CSPDeleteDealItem::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPDeleteDealItem@@UAE@XZ
_TEXT	SEGMENT
??1CSPDeleteDealItem@@UAE@XZ PROC NEAR			; CSPDeleteDealItem::~CSPDeleteDealItem, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPDeleteDealItem@@UAE@XZ ENDP			; CSPDeleteDealItem::~CSPDeleteDealItem
_TEXT	ENDS
PUBLIC	??0CSPSaveRecallMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveRecallMaintain::CSPSaveRecallMaintain
PUBLIC	?GetNumParam@CSPSaveRecallMaintain@@UAEHXZ	; CSPSaveRecallMaintain::GetNumParam
PUBLIC	?BindParameters@CSPSaveRecallMaintain@@UAEFH@Z	; CSPSaveRecallMaintain::BindParameters
PUBLIC	??_7CSPSaveRecallMaintain@@6B@			; CSPSaveRecallMaintain::`vftable'
PUBLIC	??_GCSPSaveRecallMaintain@@UAEPAXI@Z		; CSPSaveRecallMaintain::`scalar deleting destructor'
PUBLIC	??_C@_0DE@IBAPBHNA@?$HL?$DP?5?$DN?5CALL?5TSaveRecallMaintain?$CI?$DP?0@ ; `string'
EXTRN	??_ECSPSaveRecallMaintain@@UAEPAXI@Z:NEAR	; CSPSaveRecallMaintain::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T187030 DD	0ffffffffH
	DD	FLAT:$L186856
$T187027 DD	019930520H
	DD	01H
	DD	FLAT:$T187030
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DE@IBAPBHNA@?$HL?$DP?5?$DN?5CALL?5TSaveRecallMaintain?$CI?$DP?0@
CONST	SEGMENT
??_C@_0DE@IBAPBHNA@?$HL?$DP?5?$DN?5CALL?5TSaveRecallMaintain?$CI?$DP?0@ DB '{'
	DB	'? = CALL TSaveRecallMaintain(?,?,?,?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveRecallMaintain@@6B@
CONST	SEGMENT
??_7CSPSaveRecallMaintain@@6B@ DD FLAT:??_ECSPSaveRecallMaintain@@UAEPAXI@Z ; CSPSaveRecallMaintain::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveRecallMaintain@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveRecallMaintain@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveRecallMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T186855 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveRecallMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveRecallMaintain::CSPSaveRecallMaintain, COMDAT
; _this$ = ecx

; 5220 : DEF_QUERY( CSPSaveRecallMaintain, _T("{? = CALL TSaveRecallMaintain(?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveRecallMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DE@IBAPBHNA@?$HL?$DP?5?$DN?5CALL?5TSaveRecallMaintain?$CI?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T186855[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveRecallMaintain@@6B@
  0005e	72 0d		 jb	 SHORT $L187028
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L187028:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L186856:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveRecallMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187027
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveRecallMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveRecallMaintain::CSPSaveRecallMaintain
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveRecallMaintain@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveRecallMaintain@@UAEHXZ PROC NEAR	; CSPSaveRecallMaintain::GetNumParam, COMDAT
; _this$ = ecx

; 5222 : BEGIN_PARAM(11)

  00000	b8 0b 00 00 00	 mov	 eax, 11			; 0000000bH
  00005	c3		 ret	 0
?GetNumParam@CSPSaveRecallMaintain@@UAEHXZ ENDP		; CSPSaveRecallMaintain::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveRecallMaintain@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveRecallMaintain@@UAEFH@Z PROC NEAR ; CSPSaveRecallMaintain::BindParameters, COMDAT
; _this$ = ecx

; 5222 : BEGIN_PARAM(11)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5223 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L138200
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L138200
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 93 01 00
	00		 jne	 $L138195
$L138200:

; 5224 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L138201
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138201:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L138202
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 68 01 00
	00		 jne	 $L138195
$L138202:

; 5225 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwRecallID)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L138203
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138203:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L138204
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 3d 01 00
	00		 jne	 $L138195
$L138204:

; 5226 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wSkillID)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L138205
  00096	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L138205:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 0a		 je	 SHORT $L138206
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 12 01 00
	00		 jne	 $L138195
$L138206:

; 5227 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bLevel)

  000b7	3b fb		 cmp	 edi, ebx
  000b9	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bf	75 12		 jne	 SHORT $L138207
  000c1	8d 8e 3a 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3130]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 01		 push	 1
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138207:
  000d3	66 3b c3	 cmp	 ax, bx
  000d6	74 0a		 je	 SHORT $L138208
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 e7 00 00
	00		 jne	 $L138195
$L138208:

; 5228 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwTick)

  000e2	3b fb		 cmp	 edi, ebx
  000e4	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000ea	75 12		 jne	 SHORT $L138209
  000ec	8d 96 3c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3132]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 01		 push	 1
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138209:
  000fe	66 3b c3	 cmp	 ax, bx
  00101	74 0a		 je	 SHORT $L138210
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	0f 85 bc 00 00
	00		 jne	 $L138195
$L138210:

; 5229 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bAttackType)

  0010d	3b fb		 cmp	 edi, ebx
  0010f	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00115	75 12		 jne	 SHORT $L138211
  00117	8d 86 40 0c 00
	00		 lea	 eax, DWORD PTR [esi+3136]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 01		 push	 1
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138211:
  00129	66 3b c3	 cmp	 ax, bx
  0012c	74 0a		 je	 SHORT $L138212
  0012e	66 3d 01 00	 cmp	 ax, 1
  00132	0f 85 91 00 00
	00		 jne	 $L138195
$L138212:

; 5230 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwAttackID)

  00138	3b fb		 cmp	 edi, ebx
  0013a	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  00140	75 12		 jne	 SHORT $L138213
  00142	8d 8e 44 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3140]
  00148	51		 push	 ecx
  00149	6a 08		 push	 8
  0014b	6a 01		 push	 1
  0014d	8b ce		 mov	 ecx, esi
  0014f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138213:
  00154	66 3b c3	 cmp	 ax, bx
  00157	74 06		 je	 SHORT $L138214
  00159	66 3d 01 00	 cmp	 ax, 1
  0015d	75 6a		 jne	 SHORT $L138195
$L138214:

; 5231 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bHostType)

  0015f	3b fb		 cmp	 edi, ebx
  00161	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  00167	75 12		 jne	 SHORT $L138215
  00169	8d 96 48 0c 00
	00		 lea	 edx, DWORD PTR [esi+3144]
  0016f	52		 push	 edx
  00170	6a 09		 push	 9
  00172	6a 01		 push	 1
  00174	8b ce		 mov	 ecx, esi
  00176	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138215:
  0017b	66 3b c3	 cmp	 ax, bx
  0017e	74 06		 je	 SHORT $L138216
  00180	66 3d 01 00	 cmp	 ax, 1
  00184	75 43		 jne	 SHORT $L138195
$L138216:

; 5232 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwHostID)

  00186	3b fb		 cmp	 edi, ebx
  00188	89 9e 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebx
  0018e	75 12		 jne	 SHORT $L138217
  00190	8d 86 4c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3148]
  00196	50		 push	 eax
  00197	6a 0a		 push	 10			; 0000000aH
  00199	6a 01		 push	 1
  0019b	8b ce		 mov	 ecx, esi
  0019d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138217:
  001a2	66 3b c3	 cmp	 ax, bx
  001a5	74 06		 je	 SHORT $L138218
  001a7	66 3d 01 00	 cmp	 ax, 1
  001ab	75 1c		 jne	 SHORT $L138195
$L138218:

; 5233 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bAttackCountry)

  001ad	3b fb		 cmp	 edi, ebx
  001af	89 9e 38 08 00
	00		 mov	 DWORD PTR [esi+2104], ebx
  001b5	75 12		 jne	 SHORT $L138195
  001b7	8d 8e 50 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3152]
  001bd	51		 push	 ecx
  001be	6a 0b		 push	 11			; 0000000bH
  001c0	6a 01		 push	 1
  001c2	8b ce		 mov	 ecx, esi
  001c4	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138195:
  001c9	5f		 pop	 edi
  001ca	5e		 pop	 esi
  001cb	5b		 pop	 ebx

; 5234 : END_PARAM()

  001cc	c2 04 00	 ret	 4
?BindParameters@CSPSaveRecallMaintain@@UAEFH@Z ENDP	; CSPSaveRecallMaintain::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveRecallMaintain@@UAE@XZ		; CSPSaveRecallMaintain::~CSPSaveRecallMaintain
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveRecallMaintain@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveRecallMaintain@@UAEPAXI@Z PROC NEAR		; CSPSaveRecallMaintain::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveRecallMaintain@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L187042
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L187042:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveRecallMaintain@@UAEPAXI@Z ENDP		; CSPSaveRecallMaintain::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveRecallMaintain@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveRecallMaintain@@UAE@XZ PROC NEAR		; CSPSaveRecallMaintain::~CSPSaveRecallMaintain, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveRecallMaintain@@UAE@XZ ENDP			; CSPSaveRecallMaintain::~CSPSaveRecallMaintain
_TEXT	ENDS
PUBLIC	??_7CSPSaveCharBase@@6B@			; CSPSaveCharBase::`vftable'
PUBLIC	??_GCSPSaveCharBase@@UAEPAXI@Z			; CSPSaveCharBase::`scalar deleting destructor'
PUBLIC	??_C@_0BP@JKAJDJAN@?$HL?5CALL?5TSaveCharBase?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
PUBLIC	??0CSPSaveCharBase@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveCharBase::CSPSaveCharBase
PUBLIC	?GetNumParam@CSPSaveCharBase@@UAEHXZ		; CSPSaveCharBase::GetNumParam
PUBLIC	?BindParameters@CSPSaveCharBase@@UAEFH@Z	; CSPSaveCharBase::BindParameters
EXTRN	??_ECSPSaveCharBase@@UAEPAXI@Z:NEAR		; CSPSaveCharBase::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T187225 DD	0ffffffffH
	DD	FLAT:$L187051
$T187222 DD	019930520H
	DD	01H
	DD	FLAT:$T187225
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BP@JKAJDJAN@?$HL?5CALL?5TSaveCharBase?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BP@JKAJDJAN@?$HL?5CALL?5TSaveCharBase?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' CALL TSaveCharBase(?,?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveCharBase@@6B@
CONST	SEGMENT
??_7CSPSaveCharBase@@6B@ DD FLAT:??_ECSPSaveCharBase@@UAEPAXI@Z ; CSPSaveCharBase::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveCharBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveCharBase@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveCharBase@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T187050 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveCharBase@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveCharBase::CSPSaveCharBase, COMDAT
; _this$ = ecx

; 5245 : DEF_QUERY( CSPSaveCharBase, _T("{ CALL TSaveCharBase(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveCharBase@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@JKAJDJAN@?$HL?5CALL?5TSaveCharBase?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T187050[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveCharBase@@6B@
  0005e	72 0d		 jb	 SHORT $L187223
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L187223:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187051:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveCharBase@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187222
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveCharBase@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveCharBase::CSPSaveCharBase
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveCharBase@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveCharBase@@UAEHXZ PROC NEAR		; CSPSaveCharBase::GetNumParam, COMDAT
; _this$ = ecx

; 5247 : BEGIN_PARAM(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumParam@CSPSaveCharBase@@UAEHXZ ENDP		; CSPSaveCharBase::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveCharBase@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveCharBase@@UAEFH@Z PROC NEAR	; CSPSaveCharBase::BindParameters, COMDAT
; _this$ = ecx

; 5247 : BEGIN_PARAM(4)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 5248 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L138266
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L138266
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 78		 jne	 SHORT $L138261
$L138266:

; 5249 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bType)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L138267
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138267:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L138268
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 4d		 jne	 SHORT $L138261
$L138268:

; 5250 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bValue)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L138269
  00068	8d 96 31 0c 00
	00		 lea	 edx, DWORD PTR [esi+3121]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138269:
  0007a	66 85 c0	 test	 ax, ax
  0007d	74 06		 je	 SHORT $L138270
  0007f	66 3d 01 00	 cmp	 ax, 1
  00083	75 22		 jne	 SHORT $L138261
$L138270:

; 5251 : 	PARAM_ENTRY_STR( SQL_PARAM_INPUT, m_szName)

  00085	85 ff		 test	 edi, edi
  00087	c7 86 1c 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2076], -3 ; fffffffdH
  00091	75 14		 jne	 SHORT $L138261
  00093	6a 33		 push	 51			; 00000033H
  00095	8d 86 32 0c 00
	00		 lea	 eax, DWORD PTR [esi+3122]
  0009b	50		 push	 eax
  0009c	6a 04		 push	 4
  0009e	6a 01		 push	 1
  000a0	8b ce		 mov	 ecx, esi
  000a2	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L138261:
  000a7	5f		 pop	 edi
  000a8	5e		 pop	 esi

; 5252 : END_PARAM()

  000a9	c2 04 00	 ret	 4
?BindParameters@CSPSaveCharBase@@UAEFH@Z ENDP		; CSPSaveCharBase::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveCharBase@@UAE@XZ			; CSPSaveCharBase::~CSPSaveCharBase
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveCharBase@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveCharBase@@UAEPAXI@Z PROC NEAR		; CSPSaveCharBase::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveCharBase@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L187237
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L187237:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveCharBase@@UAEPAXI@Z ENDP			; CSPSaveCharBase::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveCharBase@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveCharBase@@UAE@XZ PROC NEAR			; CSPSaveCharBase::~CSPSaveCharBase, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveCharBase@@UAE@XZ ENDP				; CSPSaveCharBase::~CSPSaveCharBase
_TEXT	ENDS
PUBLIC	??0CSPCheckDuplicateName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPCheckDuplicateName::CSPCheckDuplicateName
PUBLIC	?GetNumParam@CSPCheckDuplicateName@@UAEHXZ	; CSPCheckDuplicateName::GetNumParam
PUBLIC	?BindParameters@CSPCheckDuplicateName@@UAEFH@Z	; CSPCheckDuplicateName::BindParameters
PUBLIC	??_7CSPCheckDuplicateName@@6B@			; CSPCheckDuplicateName::`vftable'
PUBLIC	??_GCSPCheckDuplicateName@@UAEPAXI@Z		; CSPCheckDuplicateName::`scalar deleting destructor'
PUBLIC	??_C@_0CF@GHNNGFIP@?$HL?5?$DP?5?$DN?5CALL?5TCheckDuplicateName?$CI?$DP@ ; `string'
EXTRN	??_ECSPCheckDuplicateName@@UAEPAXI@Z:NEAR	; CSPCheckDuplicateName::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T187420 DD	0ffffffffH
	DD	FLAT:$L187246
$T187417 DD	019930520H
	DD	01H
	DD	FLAT:$T187420
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CF@GHNNGFIP@?$HL?5?$DP?5?$DN?5CALL?5TCheckDuplicateName?$CI?$DP@
CONST	SEGMENT
??_C@_0CF@GHNNGFIP@?$HL?5?$DP?5?$DN?5CALL?5TCheckDuplicateName?$CI?$DP@ DB '{'
	DB	' ? = CALL TCheckDuplicateName(?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPCheckDuplicateName@@6B@
CONST	SEGMENT
??_7CSPCheckDuplicateName@@6B@ DD FLAT:??_ECSPCheckDuplicateName@@UAEPAXI@Z ; CSPCheckDuplicateName::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPCheckDuplicateName@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPCheckDuplicateName@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPCheckDuplicateName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T187245 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPCheckDuplicateName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPCheckDuplicateName::CSPCheckDuplicateName, COMDAT
; _this$ = ecx

; 5262 : DEF_QUERY( CSPCheckDuplicateName, _T("{ ? = CALL TCheckDuplicateName(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPCheckDuplicateName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CF@GHNNGFIP@?$HL?5?$DP?5?$DN?5CALL?5TCheckDuplicateName?$CI?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T187245[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPCheckDuplicateName@@6B@
  0005e	72 0d		 jb	 SHORT $L187418
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L187418:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187246:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPCheckDuplicateName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187417
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPCheckDuplicateName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPCheckDuplicateName::CSPCheckDuplicateName
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPCheckDuplicateName@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPCheckDuplicateName@@UAEHXZ PROC NEAR	; CSPCheckDuplicateName::GetNumParam, COMDAT
; _this$ = ecx

; 5264 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPCheckDuplicateName@@UAEHXZ ENDP		; CSPCheckDuplicateName::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPCheckDuplicateName@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPCheckDuplicateName@@UAEFH@Z PROC NEAR ; CSPCheckDuplicateName::BindParameters, COMDAT
; _this$ = ecx

; 5264 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 5265 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRet)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L138317
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 04		 push	 4
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L138317
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4d		 jne	 SHORT $L138312
$L138317:

; 5266 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L138318
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138318:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L138319
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 22		 jne	 SHORT $L138312
$L138319:

; 5267 : 	PARAM_ENTRY_STR( SQL_PARAM_INPUT, m_szName)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2072], -3 ; fffffffdH
  00066	75 14		 jne	 SHORT $L138312
  00068	6a 33		 push	 51			; 00000033H
  0006a	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00070	52		 push	 edx
  00071	6a 03		 push	 3
  00073	6a 01		 push	 1
  00075	8b ce		 mov	 ecx, esi
  00077	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L138312:
  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi

; 5268 : END_PARAM()

  0007e	c2 04 00	 ret	 4
?BindParameters@CSPCheckDuplicateName@@UAEFH@Z ENDP	; CSPCheckDuplicateName::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPCheckDuplicateName@@UAE@XZ		; CSPCheckDuplicateName::~CSPCheckDuplicateName
; Function compile flags: /Ogty
;	COMDAT ??_GCSPCheckDuplicateName@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPCheckDuplicateName@@UAEPAXI@Z PROC NEAR		; CSPCheckDuplicateName::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPCheckDuplicateName@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L187432
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L187432:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPCheckDuplicateName@@UAEPAXI@Z ENDP		; CSPCheckDuplicateName::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPCheckDuplicateName@@UAE@XZ
_TEXT	SEGMENT
??1CSPCheckDuplicateName@@UAE@XZ PROC NEAR		; CSPCheckDuplicateName::~CSPCheckDuplicateName, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPCheckDuplicateName@@UAE@XZ ENDP			; CSPCheckDuplicateName::~CSPCheckDuplicateName
_TEXT	ENDS
PUBLIC	??0CSPStopTheClock@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPStopTheClock::CSPStopTheClock
PUBLIC	?GetNumParam@CSPStopTheClock@@UAEHXZ		; CSPStopTheClock::GetNumParam
PUBLIC	?BindParameters@CSPStopTheClock@@UAEFH@Z	; CSPStopTheClock::BindParameters
PUBLIC	??_7CSPStopTheClock@@6B@			; CSPStopTheClock::`vftable'
PUBLIC	??_GCSPStopTheClock@@UAEPAXI@Z			; CSPStopTheClock::`scalar deleting destructor'
PUBLIC	??_C@_0BP@EAICODNF@?$HL?5?$DP?5?$DN?5CALL?5TStopTheClock?$CI?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPStopTheClock@@UAEPAXI@Z:NEAR		; CSPStopTheClock::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T187615 DD	0ffffffffH
	DD	FLAT:$L187441
$T187612 DD	019930520H
	DD	01H
	DD	FLAT:$T187615
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BP@EAICODNF@?$HL?5?$DP?5?$DN?5CALL?5TStopTheClock?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BP@EAICODNF@?$HL?5?$DP?5?$DN?5CALL?5TStopTheClock?$CI?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' ? = CALL TStopTheClock(?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPStopTheClock@@6B@
CONST	SEGMENT
??_7CSPStopTheClock@@6B@ DD FLAT:??_ECSPStopTheClock@@UAEPAXI@Z ; CSPStopTheClock::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPStopTheClock@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPStopTheClock@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPStopTheClock@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T187440 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPStopTheClock@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPStopTheClock::CSPStopTheClock, COMDAT
; _this$ = ecx

; 5278 : DEF_QUERY( CSPStopTheClock, _T("{ ? = CALL TStopTheClock(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPStopTheClock@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@EAICODNF@?$HL?5?$DP?5?$DN?5CALL?5TStopTheClock?$CI?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T187440[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPStopTheClock@@6B@
  0005e	72 0d		 jb	 SHORT $L187613
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L187613:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187441:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPStopTheClock@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187612
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPStopTheClock@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPStopTheClock::CSPStopTheClock
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPStopTheClock@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPStopTheClock@@UAEHXZ PROC NEAR		; CSPStopTheClock::GetNumParam, COMDAT
; _this$ = ecx

; 5280 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPStopTheClock@@UAEHXZ ENDP		; CSPStopTheClock::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPStopTheClock@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPStopTheClock@@UAEFH@Z PROC NEAR	; CSPStopTheClock::BindParameters, COMDAT
; _this$ = ecx

; 5280 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 5281 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRet)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L138366
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 04		 push	 4
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L138366
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L138361
$L138366:

; 5282 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L138367
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138367:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L138368
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L138361
$L138368:

; 5283 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wShopItemID)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L138361
  00068	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L138361:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 5284 : END_PARAM()

  0007c	c2 04 00	 ret	 4
?BindParameters@CSPStopTheClock@@UAEFH@Z ENDP		; CSPStopTheClock::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPStopTheClock@@UAE@XZ			; CSPStopTheClock::~CSPStopTheClock
; Function compile flags: /Ogty
;	COMDAT ??_GCSPStopTheClock@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPStopTheClock@@UAEPAXI@Z PROC NEAR		; CSPStopTheClock::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPStopTheClock@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L187627
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L187627:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPStopTheClock@@UAEPAXI@Z ENDP			; CSPStopTheClock::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPStopTheClock@@UAE@XZ
_TEXT	SEGMENT
??1CSPStopTheClock@@UAE@XZ PROC NEAR			; CSPStopTheClock::~CSPStopTheClock, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPStopTheClock@@UAE@XZ ENDP				; CSPStopTheClock::~CSPStopTheClock
_TEXT	ENDS
PUBLIC	??0CSPHeroSelect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPHeroSelect::CSPHeroSelect
PUBLIC	?GetNumParam@CSPHeroSelect@@UAEHXZ		; CSPHeroSelect::GetNumParam
PUBLIC	?BindParameters@CSPHeroSelect@@UAEFH@Z		; CSPHeroSelect::BindParameters
PUBLIC	??_7CSPHeroSelect@@6B@				; CSPHeroSelect::`vftable'
PUBLIC	??_GCSPHeroSelect@@UAEPAXI@Z			; CSPHeroSelect::`scalar deleting destructor'
PUBLIC	??_C@_0CE@GEBMGABJ@?$HL?5?$DP?5?$DN?5CALL?5THeroSelect?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPHeroSelect@@UAEPAXI@Z:NEAR		; CSPHeroSelect::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T187810 DD	0ffffffffH
	DD	FLAT:$L187636
$T187807 DD	019930520H
	DD	01H
	DD	FLAT:$T187810
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CE@GEBMGABJ@?$HL?5?$DP?5?$DN?5CALL?5THeroSelect?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CE@GEBMGABJ@?$HL?5?$DP?5?$DN?5CALL?5THeroSelect?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	' ? = CALL THeroSelect(?,?,?,?,?) }', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPHeroSelect@@6B@
CONST	SEGMENT
??_7CSPHeroSelect@@6B@ DD FLAT:??_ECSPHeroSelect@@UAEPAXI@Z ; CSPHeroSelect::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPHeroSelect@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPHeroSelect@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPHeroSelect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T187635 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPHeroSelect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPHeroSelect::CSPHeroSelect, COMDAT
; _this$ = ecx

; 5297 : DEF_QUERY(CSPHeroSelect, _T( "{ ? = CALL THeroSelect(?,?,?,?,?) }" ))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPHeroSelect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CE@GEBMGABJ@?$HL?5?$DP?5?$DN?5CALL?5THeroSelect?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T187635[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPHeroSelect@@6B@
  0005e	72 0d		 jb	 SHORT $L187808
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L187808:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187636:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPHeroSelect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T187807
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPHeroSelect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPHeroSelect::CSPHeroSelect
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPHeroSelect@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPHeroSelect@@UAEHXZ PROC NEAR		; CSPHeroSelect::GetNumParam, COMDAT
; _this$ = ecx

; 5299 : BEGIN_PARAM(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumParam@CSPHeroSelect@@UAEHXZ ENDP			; CSPHeroSelect::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPHeroSelect@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPHeroSelect@@UAEFH@Z PROC NEAR	; CSPHeroSelect::BindParameters, COMDAT
; _this$ = ecx

; 5299 : BEGIN_PARAM(6)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5300 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L138418
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L138418
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 c2 00 00
	00		 jne	 $L138413
$L138418:

; 5301 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCharID)	

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L138419
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138419:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L138420
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 97 00 00
	00		 jne	 $L138413
$L138420:

; 5302 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwGuildID)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L138421
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138421:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 06		 je	 SHORT $L138422
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 70		 jne	 SHORT $L138413
$L138422:

; 5303 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wBattleZoneID)	

  00088	3b fb		 cmp	 edi, ebx
  0008a	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00090	75 12		 jne	 SHORT $L138423
  00092	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00098	50		 push	 eax
  00099	6a 04		 push	 4
  0009b	6a 01		 push	 1
  0009d	8b ce		 mov	 ecx, esi
  0009f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L138423:
  000a4	66 3b c3	 cmp	 ax, bx
  000a7	74 06		 je	 SHORT $L138424
  000a9	66 3d 01 00	 cmp	 ax, 1
  000ad	75 49		 jne	 SHORT $L138413
$L138424:

; 5304 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT,m_szHero)

  000af	3b fb		 cmp	 edi, ebx
  000b1	c7 86 20 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2080], -3 ; fffffffdH
  000bb	75 14		 jne	 SHORT $L138425
  000bd	6a 33		 push	 51			; 00000033H
  000bf	8d 8e 4c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3148]
  000c5	51		 push	 ecx
  000c6	6a 05		 push	 5
  000c8	6a 01		 push	 1
  000ca	8b ce		 mov	 ecx, esi
  000cc	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L138425:
  000d1	66 3b c3	 cmp	 ax, bx
  000d4	74 06		 je	 SHORT $L138426
  000d6	66 3d 01 00	 cmp	 ax, 1
  000da	75 1c		 jne	 SHORT $L138413
$L138426:

; 5305 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_timeHero)

  000dc	3b fb		 cmp	 edi, ebx
  000de	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000e4	75 12		 jne	 SHORT $L138413
  000e6	8d 96 3c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3132]
  000ec	52		 push	 edx
  000ed	6a 06		 push	 6
  000ef	6a 01		 push	 1
  000f1	8b ce		 mov	 ecx, esi
  000f3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L138413:
  000f8	5f		 pop	 edi
  000f9	5e		 pop	 esi
  000fa	5b		 pop	 ebx

; 5306 : END_PARAM()

  000fb	c2 04 00	 ret	 4
?BindParameters@CSPHeroSelect@@UAEFH@Z ENDP		; CSPHeroSelect::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPHeroSelect@@UAE@XZ			; CSPHeroSelect::~CSPHeroSelect
; Function compile flags: /Ogty
;	COMDAT ??_GCSPHeroSelect@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPHeroSelect@@UAEPAXI@Z PROC NEAR			; CSPHeroSelect::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPHeroSelect@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L187822
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L187822:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPHeroSelect@@UAEPAXI@Z ENDP			; CSPHeroSelect::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPHeroSelect@@UAE@XZ
_TEXT	SEGMENT
??1CSPHeroSelect@@UAE@XZ PROC NEAR			; CSPHeroSelect::~CSPHeroSelect, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPHeroSelect@@UAE@XZ ENDP				; CSPHeroSelect::~CSPHeroSelect
_TEXT	ENDS
PUBLIC	??0CSPGetLimitedLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetLimitedLevel::CSPGetLimitedLevel
PUBLIC	?GetNumParam@CSPGetLimitedLevel@@UAEHXZ		; CSPGetLimitedLevel::GetNumParam
PUBLIC	?BindParameters@CSPGetLimitedLevel@@UAEFH@Z	; CSPGetLimitedLevel::BindParameters
PUBLIC	??_7CSPGetLimitedLevel@@6B@			; CSPGetLimitedLevel::`vftable'
PUBLIC	??_GCSPGetLimitedLevel@@UAEPAXI@Z		; CSPGetLimitedLevel::`scalar deleting destructor'
PUBLIC	??_C@_0BM@GKCNHNAL@?$HL?5CALL?5TGetLimitedLevel?$CI?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPGetLimitedLevel@@UAEPAXI@Z:NEAR		; CSPGetLimitedLevel::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T188005 DD	0ffffffffH
	DD	FLAT:$L187831
$T188002 DD	019930520H
	DD	01H
	DD	FLAT:$T188005
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@GKCNHNAL@?$HL?5CALL?5TGetLimitedLevel?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BM@GKCNHNAL@?$HL?5CALL?5TGetLimitedLevel?$CI?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' CALL TGetLimitedLevel(?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGetLimitedLevel@@6B@
CONST	SEGMENT
??_7CSPGetLimitedLevel@@6B@ DD FLAT:??_ECSPGetLimitedLevel@@UAEPAXI@Z ; CSPGetLimitedLevel::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGetLimitedLevel@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGetLimitedLevel@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGetLimitedLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T187830 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGetLimitedLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGetLimitedLevel::CSPGetLimitedLevel, COMDAT
; _this$ = ecx

; 5314 : DEF_QUERY(CSPGetLimitedLevel, _T("{ CALL TGetLimitedLevel(?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGetLimitedLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@GKCNHNAL@?$HL?5CALL?5TGetLimitedLevel?$CI?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T187830[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGetLimitedLevel@@6B@
  0005e	72 0d		 jb	 SHORT $L188003
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L188003:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L187831:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGetLimitedLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188002
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGetLimitedLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGetLimitedLevel::CSPGetLimitedLevel
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGetLimitedLevel@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGetLimitedLevel@@UAEHXZ PROC NEAR	; CSPGetLimitedLevel::GetNumParam, COMDAT
; _this$ = ecx

; 5316 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CSPGetLimitedLevel@@UAEHXZ ENDP		; CSPGetLimitedLevel::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetLimitedLevel@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGetLimitedLevel@@UAEFH@Z PROC NEAR	; CSPGetLimitedLevel::BindParameters, COMDAT
; _this$ = ecx

; 5317 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_bMaxLevel)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L138466
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 04		 push	 4
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138466:

; 5318 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CSPGetLimitedLevel@@UAEFH@Z ENDP	; CSPGetLimitedLevel::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGetLimitedLevel@@UAE@XZ			; CSPGetLimitedLevel::~CSPGetLimitedLevel
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGetLimitedLevel@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGetLimitedLevel@@UAEPAXI@Z PROC NEAR		; CSPGetLimitedLevel::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGetLimitedLevel@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L188017
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L188017:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGetLimitedLevel@@UAEPAXI@Z ENDP			; CSPGetLimitedLevel::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGetLimitedLevel@@UAE@XZ
_TEXT	SEGMENT
??1CSPGetLimitedLevel@@UAE@XZ PROC NEAR			; CSPGetLimitedLevel::~CSPGetLimitedLevel, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGetLimitedLevel@@UAE@XZ ENDP			; CSPGetLimitedLevel::~CSPGetLimitedLevel
_TEXT	ENDS
PUBLIC	??0CSPGetNation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetNation::CSPGetNation
PUBLIC	?GetNumParam@CSPGetNation@@UAEHXZ		; CSPGetNation::GetNumParam
PUBLIC	?BindParameters@CSPGetNation@@UAEFH@Z		; CSPGetNation::BindParameters
PUBLIC	??_7CSPGetNation@@6B@				; CSPGetNation::`vftable'
PUBLIC	??_GCSPGetNation@@UAEPAXI@Z			; CSPGetNation::`scalar deleting destructor'
PUBLIC	??_C@_0BF@MGHBOKLC@?$HLCALL?5TGetNation?$CI?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPGetNation@@UAEPAXI@Z:NEAR		; CSPGetNation::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T188200 DD	0ffffffffH
	DD	FLAT:$L188026
$T188197 DD	019930520H
	DD	01H
	DD	FLAT:$T188200
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BF@MGHBOKLC@?$HLCALL?5TGetNation?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BF@MGHBOKLC@?$HLCALL?5TGetNation?$CI?$DP?$CJ?$HN?$AA@ DB '{CALL TG'
	DB	'etNation(?)}', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CSPGetNation@@6B@
CONST	SEGMENT
??_7CSPGetNation@@6B@ DD FLAT:??_ECSPGetNation@@UAEPAXI@Z ; CSPGetNation::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGetNation@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGetNation@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGetNation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T188025 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGetNation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGetNation::CSPGetNation, COMDAT
; _this$ = ecx

; 5326 : DEF_QUERY(CSPGetNation, _T("{CALL TGetNation(?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGetNation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@MGHBOKLC@?$HLCALL?5TGetNation?$CI?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T188025[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGetNation@@6B@
  0005e	72 0d		 jb	 SHORT $L188198
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L188198:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L188026:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGetNation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188197
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGetNation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGetNation::CSPGetNation
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGetNation@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGetNation@@UAEHXZ PROC NEAR		; CSPGetNation::GetNumParam, COMDAT
; _this$ = ecx

; 5328 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CSPGetNation@@UAEHXZ ENDP			; CSPGetNation::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetNation@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGetNation@@UAEFH@Z PROC NEAR		; CSPGetNation::BindParameters, COMDAT
; _this$ = ecx

; 5329 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_bNation)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L138509
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 04		 push	 4
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138509:

; 5330 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CSPGetNation@@UAEFH@Z ENDP		; CSPGetNation::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGetNation@@UAE@XZ				; CSPGetNation::~CSPGetNation
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGetNation@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGetNation@@UAEPAXI@Z PROC NEAR			; CSPGetNation::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGetNation@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L188212
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L188212:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGetNation@@UAEPAXI@Z ENDP			; CSPGetNation::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGetNation@@UAE@XZ
_TEXT	SEGMENT
??1CSPGetNation@@UAE@XZ PROC NEAR			; CSPGetNation::~CSPGetNation, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGetNation@@UAE@XZ ENDP				; CSPGetNation::~CSPGetNation
_TEXT	ENDS
PUBLIC	??0CSPQuestSendPost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPQuestSendPost::CSPQuestSendPost
PUBLIC	?GetNumParam@CSPQuestSendPost@@UAEHXZ		; CSPQuestSendPost::GetNumParam
PUBLIC	?BindParameters@CSPQuestSendPost@@UAEFH@Z	; CSPQuestSendPost::BindParameters
PUBLIC	??_7CSPQuestSendPost@@6B@			; CSPQuestSendPost::`vftable'
PUBLIC	??_GCSPQuestSendPost@@UAEPAXI@Z			; CSPQuestSendPost::`scalar deleting destructor'
PUBLIC	??_C@_0FH@LNLLMHHA@?$HL?5?$DP?5?$DN?5CALL?5TQuestSendPost?$CI?$DP?0?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPQuestSendPost@@UAEPAXI@Z:NEAR		; CSPQuestSendPost::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T188395 DD	0ffffffffH
	DD	FLAT:$L188221
$T188392 DD	019930520H
	DD	01H
	DD	FLAT:$T188395
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FH@LNLLMHHA@?$HL?5?$DP?5?$DN?5CALL?5TQuestSendPost?$CI?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0FH@LNLLMHHA@?$HL?5?$DP?5?$DN?5CALL?5TQuestSendPost?$CI?$DP?0?$DP?0?$DP?0@ DB '{'
	DB	' ? = CALL TQuestSendPost(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,'
	DB	'?,?,?,?,?,?,?,?,?,?,?) }', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPQuestSendPost@@6B@
CONST	SEGMENT
??_7CSPQuestSendPost@@6B@ DD FLAT:??_ECSPQuestSendPost@@UAEPAXI@Z ; CSPQuestSendPost::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPQuestSendPost@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPQuestSendPost@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPQuestSendPost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T188220 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPQuestSendPost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPQuestSendPost::CSPQuestSendPost, COMDAT
; _this$ = ecx

; 5341 : DEF_QUERY(CSPQuestSendPost, _T("{ ? = CALL TQuestSendPost(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) }")) 

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPQuestSendPost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FH@LNLLMHHA@?$HL?5?$DP?5?$DN?5CALL?5TQuestSendPost?$CI?$DP?0?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T188220[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPQuestSendPost@@6B@
  0005e	72 0d		 jb	 SHORT $L188393
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L188393:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L188221:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPQuestSendPost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188392
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPQuestSendPost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPQuestSendPost::CSPQuestSendPost
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPQuestSendPost@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPQuestSendPost@@UAEHXZ PROC NEAR		; CSPQuestSendPost::GetNumParam, COMDAT
; _this$ = ecx

; 5343 : BEGIN_PARAM(30)

  00000	b8 1e 00 00 00	 mov	 eax, 30			; 0000001eH
  00005	c3		 ret	 0
?GetNumParam@CSPQuestSendPost@@UAEHXZ ENDP		; CSPQuestSendPost::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPQuestSendPost@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPQuestSendPost@@UAEFH@Z PROC NEAR	; CSPQuestSendPost::BindParameters, COMDAT
; _this$ = ecx

; 5343 : BEGIN_PARAM(30)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5344 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L138560
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L138560
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 c4 04 00
	00		 jne	 $L138555
$L138560:

; 5345 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwQuestID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L138561
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138561:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L138562
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 99 04 00
	00		 jne	 $L138555
$L138562:

; 5346 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCharID)		

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L138563
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138563:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L138564
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 6e 04 00
	00		 jne	 $L138555
$L138564:

; 5347 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_wItemID)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L138565
  00096	8d 86 42 0c 00
	00		 lea	 eax, DWORD PTR [esi+3138]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L138565:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 0a		 je	 SHORT $L138566
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 43 04 00
	00		 jne	 $L138555
$L138566:

; 5348 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_bLevel)

  000b7	3b fb		 cmp	 edi, ebx
  000b9	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bf	75 12		 jne	 SHORT $L138567
  000c1	8d 8e 44 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3140]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 01		 push	 1
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138567:
  000d3	66 3b c3	 cmp	 ax, bx
  000d6	74 0a		 je	 SHORT $L138568
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 18 04 00
	00		 jne	 $L138555
$L138568:

; 5349 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_bCount)

  000e2	3b fb		 cmp	 edi, ebx
  000e4	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000ea	75 12		 jne	 SHORT $L138569
  000ec	8d 96 45 0c 00
	00		 lea	 edx, DWORD PTR [esi+3141]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 01		 push	 1
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138569:
  000fe	66 3b c3	 cmp	 ax, bx
  00101	74 0a		 je	 SHORT $L138570
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	0f 85 ed 03 00
	00		 jne	 $L138555
$L138570:

; 5350 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_bGLevel)

  0010d	3b fb		 cmp	 edi, ebx
  0010f	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00115	75 12		 jne	 SHORT $L138571
  00117	8d 86 46 0c 00
	00		 lea	 eax, DWORD PTR [esi+3142]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 01		 push	 1
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138571:
  00129	66 3b c3	 cmp	 ax, bx
  0012c	74 0a		 je	 SHORT $L138572
  0012e	66 3d 01 00	 cmp	 ax, 1
  00132	0f 85 c2 03 00
	00		 jne	 $L138555
$L138572:

; 5351 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_dwDuraMax)

  00138	3b fb		 cmp	 edi, ebx
  0013a	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  00140	75 12		 jne	 SHORT $L138573
  00142	8d 8e 48 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3144]
  00148	51		 push	 ecx
  00149	6a 08		 push	 8
  0014b	6a 01		 push	 1
  0014d	8b ce		 mov	 ecx, esi
  0014f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138573:
  00154	66 3b c3	 cmp	 ax, bx
  00157	74 0a		 je	 SHORT $L138574
  00159	66 3d 01 00	 cmp	 ax, 1
  0015d	0f 85 97 03 00
	00		 jne	 $L138555
$L138574:

; 5352 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_dwDuraCur)

  00163	3b fb		 cmp	 edi, ebx
  00165	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  0016b	75 12		 jne	 SHORT $L138575
  0016d	8d 96 4c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3148]
  00173	52		 push	 edx
  00174	6a 09		 push	 9
  00176	6a 01		 push	 1
  00178	8b ce		 mov	 ecx, esi
  0017a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138575:
  0017f	66 3b c3	 cmp	 ax, bx
  00182	74 0a		 je	 SHORT $L138576
  00184	66 3d 01 00	 cmp	 ax, 1
  00188	0f 85 6c 03 00
	00		 jne	 $L138555
$L138576:

; 5353 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_bRefineCur)

  0018e	3b fb		 cmp	 edi, ebx
  00190	89 9e 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebx
  00196	75 12		 jne	 SHORT $L138577
  00198	8d 86 50 0c 00
	00		 lea	 eax, DWORD PTR [esi+3152]
  0019e	50		 push	 eax
  0019f	6a 0a		 push	 10			; 0000000aH
  001a1	6a 01		 push	 1
  001a3	8b ce		 mov	 ecx, esi
  001a5	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138577:
  001aa	66 3b c3	 cmp	 ax, bx
  001ad	74 0a		 je	 SHORT $L138578
  001af	66 3d 01 00	 cmp	 ax, 1
  001b3	0f 85 41 03 00
	00		 jne	 $L138555
$L138578:

; 5354 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_dEndTime)

  001b9	3b fb		 cmp	 edi, ebx
  001bb	89 9e 38 08 00
	00		 mov	 DWORD PTR [esi+2104], ebx
  001c1	75 12		 jne	 SHORT $L138579
  001c3	8d 8e 54 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3156]
  001c9	51		 push	 ecx
  001ca	6a 0b		 push	 11			; 0000000bH
  001cc	6a 01		 push	 1
  001ce	8b ce		 mov	 ecx, esi
  001d0	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L138579:
  001d5	66 3b c3	 cmp	 ax, bx
  001d8	74 0a		 je	 SHORT $L138580
  001da	66 3d 01 00	 cmp	 ax, 1
  001de	0f 85 16 03 00
	00		 jne	 $L138555
$L138580:

; 5355 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_bGradeEffect)

  001e4	3b fb		 cmp	 edi, ebx
  001e6	89 9e 3c 08 00
	00		 mov	 DWORD PTR [esi+2108], ebx
  001ec	75 12		 jne	 SHORT $L138581
  001ee	8d 96 64 0c 00
	00		 lea	 edx, DWORD PTR [esi+3172]
  001f4	52		 push	 edx
  001f5	6a 0c		 push	 12			; 0000000cH
  001f7	6a 01		 push	 1
  001f9	8b ce		 mov	 ecx, esi
  001fb	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138581:
  00200	66 3b c3	 cmp	 ax, bx
  00203	74 0a		 je	 SHORT $L138582
  00205	66 3d 01 00	 cmp	 ax, 1
  00209	0f 85 eb 02 00
	00		 jne	 $L138555
$L138582:

; 5356 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_bMagic[0])

  0020f	3b fb		 cmp	 edi, ebx
  00211	89 9e 40 08 00
	00		 mov	 DWORD PTR [esi+2112], ebx
  00217	75 12		 jne	 SHORT $L138583
  00219	8d 86 65 0c 00
	00		 lea	 eax, DWORD PTR [esi+3173]
  0021f	50		 push	 eax
  00220	6a 0d		 push	 13			; 0000000dH
  00222	6a 01		 push	 1
  00224	8b ce		 mov	 ecx, esi
  00226	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138583:
  0022b	66 3b c3	 cmp	 ax, bx
  0022e	74 0a		 je	 SHORT $L138584
  00230	66 3d 01 00	 cmp	 ax, 1
  00234	0f 85 c0 02 00
	00		 jne	 $L138555
$L138584:

; 5357 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_bMagic[1])

  0023a	3b fb		 cmp	 edi, ebx
  0023c	89 9e 44 08 00
	00		 mov	 DWORD PTR [esi+2116], ebx
  00242	75 12		 jne	 SHORT $L138585
  00244	8d 8e 66 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3174]
  0024a	51		 push	 ecx
  0024b	6a 0e		 push	 14			; 0000000eH
  0024d	6a 01		 push	 1
  0024f	8b ce		 mov	 ecx, esi
  00251	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138585:
  00256	66 3b c3	 cmp	 ax, bx
  00259	74 0a		 je	 SHORT $L138586
  0025b	66 3d 01 00	 cmp	 ax, 1
  0025f	0f 85 95 02 00
	00		 jne	 $L138555
$L138586:

; 5358 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_bMagic[2])

  00265	3b fb		 cmp	 edi, ebx
  00267	89 9e 48 08 00
	00		 mov	 DWORD PTR [esi+2120], ebx
  0026d	75 12		 jne	 SHORT $L138587
  0026f	8d 96 67 0c 00
	00		 lea	 edx, DWORD PTR [esi+3175]
  00275	52		 push	 edx
  00276	6a 0f		 push	 15			; 0000000fH
  00278	6a 01		 push	 1
  0027a	8b ce		 mov	 ecx, esi
  0027c	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138587:
  00281	66 3b c3	 cmp	 ax, bx
  00284	74 0a		 je	 SHORT $L138588
  00286	66 3d 01 00	 cmp	 ax, 1
  0028a	0f 85 6a 02 00
	00		 jne	 $L138555
$L138588:

; 5359 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_bMagic[3])

  00290	3b fb		 cmp	 edi, ebx
  00292	89 9e 4c 08 00
	00		 mov	 DWORD PTR [esi+2124], ebx
  00298	75 12		 jne	 SHORT $L138589
  0029a	8d 86 68 0c 00
	00		 lea	 eax, DWORD PTR [esi+3176]
  002a0	50		 push	 eax
  002a1	6a 10		 push	 16			; 00000010H
  002a3	6a 01		 push	 1
  002a5	8b ce		 mov	 ecx, esi
  002a7	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138589:
  002ac	66 3b c3	 cmp	 ax, bx
  002af	74 0a		 je	 SHORT $L138590
  002b1	66 3d 01 00	 cmp	 ax, 1
  002b5	0f 85 3f 02 00
	00		 jne	 $L138555
$L138590:

; 5360 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_bMagic[4])

  002bb	3b fb		 cmp	 edi, ebx
  002bd	89 9e 50 08 00
	00		 mov	 DWORD PTR [esi+2128], ebx
  002c3	75 12		 jne	 SHORT $L138591
  002c5	8d 8e 69 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3177]
  002cb	51		 push	 ecx
  002cc	6a 11		 push	 17			; 00000011H
  002ce	6a 01		 push	 1
  002d0	8b ce		 mov	 ecx, esi
  002d2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138591:
  002d7	66 3b c3	 cmp	 ax, bx
  002da	74 0a		 je	 SHORT $L138592
  002dc	66 3d 01 00	 cmp	 ax, 1
  002e0	0f 85 14 02 00
	00		 jne	 $L138555
$L138592:

; 5361 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_bMagic[5])

  002e6	3b fb		 cmp	 edi, ebx
  002e8	89 9e 54 08 00
	00		 mov	 DWORD PTR [esi+2132], ebx
  002ee	75 12		 jne	 SHORT $L138593
  002f0	8d 96 6a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3178]
  002f6	52		 push	 edx
  002f7	6a 12		 push	 18			; 00000012H
  002f9	6a 01		 push	 1
  002fb	8b ce		 mov	 ecx, esi
  002fd	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138593:
  00302	66 3b c3	 cmp	 ax, bx
  00305	74 0a		 je	 SHORT $L138594
  00307	66 3d 01 00	 cmp	 ax, 1
  0030b	0f 85 e9 01 00
	00		 jne	 $L138555
$L138594:

; 5362 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_wValue[0])

  00311	3b fb		 cmp	 edi, ebx
  00313	89 9e 58 08 00
	00		 mov	 DWORD PTR [esi+2136], ebx
  00319	75 12		 jne	 SHORT $L138595
  0031b	8d 86 6c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3180]
  00321	50		 push	 eax
  00322	6a 13		 push	 19			; 00000013H
  00324	6a 01		 push	 1
  00326	8b ce		 mov	 ecx, esi
  00328	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L138595:
  0032d	66 3b c3	 cmp	 ax, bx
  00330	74 0a		 je	 SHORT $L138596
  00332	66 3d 01 00	 cmp	 ax, 1
  00336	0f 85 be 01 00
	00		 jne	 $L138555
$L138596:

; 5363 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_wValue[1])

  0033c	3b fb		 cmp	 edi, ebx
  0033e	89 9e 5c 08 00
	00		 mov	 DWORD PTR [esi+2140], ebx
  00344	75 12		 jne	 SHORT $L138597
  00346	8d 8e 6e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3182]
  0034c	51		 push	 ecx
  0034d	6a 14		 push	 20			; 00000014H
  0034f	6a 01		 push	 1
  00351	8b ce		 mov	 ecx, esi
  00353	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L138597:
  00358	66 3b c3	 cmp	 ax, bx
  0035b	74 0a		 je	 SHORT $L138598
  0035d	66 3d 01 00	 cmp	 ax, 1
  00361	0f 85 93 01 00
	00		 jne	 $L138555
$L138598:

; 5364 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_wValue[2])

  00367	3b fb		 cmp	 edi, ebx
  00369	89 9e 60 08 00
	00		 mov	 DWORD PTR [esi+2144], ebx
  0036f	75 12		 jne	 SHORT $L138599
  00371	8d 96 70 0c 00
	00		 lea	 edx, DWORD PTR [esi+3184]
  00377	52		 push	 edx
  00378	6a 15		 push	 21			; 00000015H
  0037a	6a 01		 push	 1
  0037c	8b ce		 mov	 ecx, esi
  0037e	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L138599:
  00383	66 3b c3	 cmp	 ax, bx
  00386	74 0a		 je	 SHORT $L138600
  00388	66 3d 01 00	 cmp	 ax, 1
  0038c	0f 85 68 01 00
	00		 jne	 $L138555
$L138600:

; 5365 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_wValue[3])

  00392	3b fb		 cmp	 edi, ebx
  00394	89 9e 64 08 00
	00		 mov	 DWORD PTR [esi+2148], ebx
  0039a	75 12		 jne	 SHORT $L138601
  0039c	8d 86 72 0c 00
	00		 lea	 eax, DWORD PTR [esi+3186]
  003a2	50		 push	 eax
  003a3	6a 16		 push	 22			; 00000016H
  003a5	6a 01		 push	 1
  003a7	8b ce		 mov	 ecx, esi
  003a9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L138601:
  003ae	66 3b c3	 cmp	 ax, bx
  003b1	74 0a		 je	 SHORT $L138602
  003b3	66 3d 01 00	 cmp	 ax, 1
  003b7	0f 85 3d 01 00
	00		 jne	 $L138555
$L138602:

; 5366 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_wValue[4])

  003bd	3b fb		 cmp	 edi, ebx
  003bf	89 9e 68 08 00
	00		 mov	 DWORD PTR [esi+2152], ebx
  003c5	75 12		 jne	 SHORT $L138603
  003c7	8d 8e 74 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3188]
  003cd	51		 push	 ecx
  003ce	6a 17		 push	 23			; 00000017H
  003d0	6a 01		 push	 1
  003d2	8b ce		 mov	 ecx, esi
  003d4	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L138603:
  003d9	66 3b c3	 cmp	 ax, bx
  003dc	74 0a		 je	 SHORT $L138604
  003de	66 3d 01 00	 cmp	 ax, 1
  003e2	0f 85 12 01 00
	00		 jne	 $L138555
$L138604:

; 5367 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_wValue[5])

  003e8	3b fb		 cmp	 edi, ebx
  003ea	89 9e 6c 08 00
	00		 mov	 DWORD PTR [esi+2156], ebx
  003f0	75 12		 jne	 SHORT $L138605
  003f2	8d 96 76 0c 00
	00		 lea	 edx, DWORD PTR [esi+3190]
  003f8	52		 push	 edx
  003f9	6a 18		 push	 24			; 00000018H
  003fb	6a 01		 push	 1
  003fd	8b ce		 mov	 ecx, esi
  003ff	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L138605:
  00404	66 3b c3	 cmp	 ax, bx
  00407	74 0a		 je	 SHORT $L138606
  00409	66 3d 01 00	 cmp	 ax, 1
  0040d	0f 85 e7 00 00
	00		 jne	 $L138555
$L138606:

; 5368 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_dwExtValue[0])

  00413	3b fb		 cmp	 edi, ebx
  00415	89 9e 70 08 00
	00		 mov	 DWORD PTR [esi+2160], ebx
  0041b	75 12		 jne	 SHORT $L138607
  0041d	8d 86 78 0c 00
	00		 lea	 eax, DWORD PTR [esi+3192]
  00423	50		 push	 eax
  00424	6a 19		 push	 25			; 00000019H
  00426	6a 01		 push	 1
  00428	8b ce		 mov	 ecx, esi
  0042a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138607:
  0042f	66 3b c3	 cmp	 ax, bx
  00432	74 0a		 je	 SHORT $L138608
  00434	66 3d 01 00	 cmp	 ax, 1
  00438	0f 85 bc 00 00
	00		 jne	 $L138555
$L138608:

; 5369 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_dwExtValue[1])

  0043e	3b fb		 cmp	 edi, ebx
  00440	89 9e 74 08 00
	00		 mov	 DWORD PTR [esi+2164], ebx
  00446	75 12		 jne	 SHORT $L138609
  00448	8d 8e 7c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3196]
  0044e	51		 push	 ecx
  0044f	6a 1a		 push	 26			; 0000001aH
  00451	6a 01		 push	 1
  00453	8b ce		 mov	 ecx, esi
  00455	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138609:
  0045a	66 3b c3	 cmp	 ax, bx
  0045d	74 0a		 je	 SHORT $L138610
  0045f	66 3d 01 00	 cmp	 ax, 1
  00463	0f 85 91 00 00
	00		 jne	 $L138555
$L138610:

; 5370 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_dwExtValue[2])

  00469	3b fb		 cmp	 edi, ebx
  0046b	89 9e 78 08 00
	00		 mov	 DWORD PTR [esi+2168], ebx
  00471	75 12		 jne	 SHORT $L138611
  00473	8d 96 80 0c 00
	00		 lea	 edx, DWORD PTR [esi+3200]
  00479	52		 push	 edx
  0047a	6a 1b		 push	 27			; 0000001bH
  0047c	6a 01		 push	 1
  0047e	8b ce		 mov	 ecx, esi
  00480	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138611:
  00485	66 3b c3	 cmp	 ax, bx
  00488	74 06		 je	 SHORT $L138612
  0048a	66 3d 01 00	 cmp	 ax, 1
  0048e	75 6a		 jne	 SHORT $L138555
$L138612:

; 5371 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_dwExtValue[3])

  00490	3b fb		 cmp	 edi, ebx
  00492	89 9e 7c 08 00
	00		 mov	 DWORD PTR [esi+2172], ebx
  00498	75 12		 jne	 SHORT $L138613
  0049a	8d 86 84 0c 00
	00		 lea	 eax, DWORD PTR [esi+3204]
  004a0	50		 push	 eax
  004a1	6a 1c		 push	 28			; 0000001cH
  004a3	6a 01		 push	 1
  004a5	8b ce		 mov	 ecx, esi
  004a7	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138613:
  004ac	66 3b c3	 cmp	 ax, bx
  004af	74 06		 je	 SHORT $L138614
  004b1	66 3d 01 00	 cmp	 ax, 1
  004b5	75 43		 jne	 SHORT $L138555
$L138614:

; 5372 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_dwExtValue[4])

  004b7	3b fb		 cmp	 edi, ebx
  004b9	89 9e 80 08 00
	00		 mov	 DWORD PTR [esi+2176], ebx
  004bf	75 12		 jne	 SHORT $L138615
  004c1	8d 8e 88 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3208]
  004c7	51		 push	 ecx
  004c8	6a 1d		 push	 29			; 0000001dH
  004ca	6a 01		 push	 1
  004cc	8b ce		 mov	 ecx, esi
  004ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138615:
  004d3	66 3b c3	 cmp	 ax, bx
  004d6	74 06		 je	 SHORT $L138616
  004d8	66 3d 01 00	 cmp	 ax, 1
  004dc	75 1c		 jne	 SHORT $L138555
$L138616:

; 5373 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_item.m_dwExtValue[5])

  004de	3b fb		 cmp	 edi, ebx
  004e0	89 9e 84 08 00
	00		 mov	 DWORD PTR [esi+2180], ebx
  004e6	75 12		 jne	 SHORT $L138555
  004e8	8d 96 8c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3212]
  004ee	52		 push	 edx
  004ef	6a 1e		 push	 30			; 0000001eH
  004f1	6a 01		 push	 1
  004f3	8b ce		 mov	 ecx, esi
  004f5	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138555:
  004fa	5f		 pop	 edi
  004fb	5e		 pop	 esi
  004fc	5b		 pop	 ebx

; 5374 : END_PARAM()

  004fd	c2 04 00	 ret	 4
?BindParameters@CSPQuestSendPost@@UAEFH@Z ENDP		; CSPQuestSendPost::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPQuestSendPost@@UAE@XZ			; CSPQuestSendPost::~CSPQuestSendPost
; Function compile flags: /Ogty
;	COMDAT ??_GCSPQuestSendPost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPQuestSendPost@@UAEPAXI@Z PROC NEAR		; CSPQuestSendPost::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPQuestSendPost@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L188407
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L188407:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPQuestSendPost@@UAEPAXI@Z ENDP			; CSPQuestSendPost::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPQuestSendPost@@UAE@XZ
_TEXT	SEGMENT
??1CSPQuestSendPost@@UAE@XZ PROC NEAR			; CSPQuestSendPost::~CSPQuestSendPost, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPQuestSendPost@@UAE@XZ ENDP			; CSPQuestSendPost::~CSPQuestSendPost
_TEXT	ENDS
PUBLIC	??0CSPGetPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetPvPRecord::CSPGetPvPRecord
PUBLIC	?GetNumParam@CSPGetPvPRecord@@UAEHXZ		; CSPGetPvPRecord::GetNumParam
PUBLIC	?BindParameters@CSPGetPvPRecord@@UAEFH@Z	; CSPGetPvPRecord::BindParameters
PUBLIC	??_7CSPGetPvPRecord@@6B@			; CSPGetPvPRecord::`vftable'
PUBLIC	??_GCSPGetPvPRecord@@UAEPAXI@Z			; CSPGetPvPRecord::`scalar deleting destructor'
PUBLIC	??_C@_0DI@FDGCJLNM@?$HLCALL?5TGetPvPRecord?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPGetPvPRecord@@UAEPAXI@Z:NEAR		; CSPGetPvPRecord::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T188590 DD	0ffffffffH
	DD	FLAT:$L188416
$T188587 DD	019930520H
	DD	01H
	DD	FLAT:$T188590
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DI@FDGCJLNM@?$HLCALL?5TGetPvPRecord?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0DI@FDGCJLNM@?$HLCALL?5TGetPvPRecord?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@ DB '{'
	DB	'CALL TGetPvPRecord(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPGetPvPRecord@@6B@
CONST	SEGMENT
??_7CSPGetPvPRecord@@6B@ DD FLAT:??_ECSPGetPvPRecord@@UAEPAXI@Z ; CSPGetPvPRecord::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGetPvPRecord@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGetPvPRecord@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGetPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T188415 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGetPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGetPvPRecord::CSPGetPvPRecord, COMDAT
; _this$ = ecx

; 5388 : DEF_QUERY(CSPGetPvPRecord, _T("{CALL TGetPvPRecord(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGetPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DI@FDGCJLNM@?$HLCALL?5TGetPvPRecord?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T188415[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGetPvPRecord@@6B@
  0005e	72 0d		 jb	 SHORT $L188588
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L188588:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L188416:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGetPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188587
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGetPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGetPvPRecord::CSPGetPvPRecord
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGetPvPRecord@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGetPvPRecord@@UAEHXZ PROC NEAR		; CSPGetPvPRecord::GetNumParam, COMDAT
; _this$ = ecx

; 5390 : BEGIN_PARAM(17)

  00000	b8 11 00 00 00	 mov	 eax, 17			; 00000011H
  00005	c3		 ret	 0
?GetNumParam@CSPGetPvPRecord@@UAEHXZ ENDP		; CSPGetPvPRecord::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetPvPRecord@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGetPvPRecord@@UAEFH@Z PROC NEAR	; CSPGetPvPRecord::BindParameters, COMDAT
; _this$ = ecx

; 5390 : BEGIN_PARAM(17)

  00000	53		 push	 ebx
  00001	55		 push	 ebp

; 5391 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 6c 24 0c	 mov	 ebp, DWORD PTR _bRewind$[esp+4]
  00006	33 db		 xor	 ebx, ebx
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b eb		 cmp	 ebp, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L188603
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L188603
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 28 01 00
	00		 jne	 $L138661
$L188603:

; 5392 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwUseablePoint)

  00036	3b eb		 cmp	 ebp, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L188604
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 04		 push	 4
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L188604:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L188606
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 fd 00 00
	00		 jne	 $L138661
$L188606:

; 5393 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwTotalPoint)

  00061	3b eb		 cmp	 ebp, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L188607
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 04		 push	 4
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L188607:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L188608
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 d2 00 00
	00		 jne	 $L138661
$L188608:

; 5394 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwRankOrder)

  0008c	3b eb		 cmp	 ebp, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L188609
  00096	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 04		 push	 4
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L188609:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 0a		 je	 SHORT $L138672
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 a7 00 00
	00		 jne	 $L138661
$L138672:

; 5395 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_bRankPercent)

  000b7	3b eb		 cmp	 ebp, ebx
  000b9	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bf	75 12		 jne	 SHORT $L138673
  000c1	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 04		 push	 4
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138673:
  000d3	66 3b c3	 cmp	 ax, bx
  000d6	57		 push	 edi
  000d7	bf 06 00 00 00	 mov	 edi, 6
  000dc	74 06		 je	 SHORT $L138674
  000de	66 3d 01 00	 cmp	 ax, 1
  000e2	75 79		 jne	 SHORT $L188610
$L138674:

; 5396 : 	for(BYTE cr=0; cr<TCLASS_COUNT; cr++)

  000e4	32 db		 xor	 bl, bl
  000e6	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$L138676:

; 5397 : 	{
; 5398 : 		PARAM_ENTRY(SQL_PARAM_OUTPUT, m_aRecord[cr][0])

  000f0	85 ed		 test	 ebp, ebp
  000f2	0f bf d7	 movsx	 edx, di
  000f5	c7 84 96 0c 08
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+edx*4+2060], 0
  00100	75 15		 jne	 SHORT $L138679
  00102	0f b6 c3	 movzx	 eax, bl
  00105	8d 8c c6 40 0c
	00 00		 lea	 ecx, DWORD PTR [esi+eax*8+3136]
  0010c	51		 push	 ecx
  0010d	57		 push	 edi
  0010e	6a 04		 push	 4
  00110	8b ce		 mov	 ecx, esi
  00112	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138679:
  00117	47		 inc	 edi
  00118	66 85 c0	 test	 ax, ax
  0011b	74 06		 je	 SHORT $L188605
  0011d	66 3d 01 00	 cmp	 ax, 1
  00121	75 3a		 jne	 SHORT $L188610
$L188605:

; 5399 : 		PARAM_ENTRY(SQL_PARAM_OUTPUT, m_aRecord[cr][1])

  00123	85 ed		 test	 ebp, ebp
  00125	0f bf d7	 movsx	 edx, di
  00128	c7 84 96 0c 08
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+edx*4+2060], 0
  00133	75 15		 jne	 SHORT $L138681
  00135	0f b6 c3	 movzx	 eax, bl
  00138	8d 8c c6 44 0c
	00 00		 lea	 ecx, DWORD PTR [esi+eax*8+3140]
  0013f	51		 push	 ecx
  00140	57		 push	 edi
  00141	6a 04		 push	 4
  00143	8b ce		 mov	 ecx, esi
  00145	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138681:
  0014a	47		 inc	 edi
  0014b	66 85 c0	 test	 ax, ax
  0014e	74 06		 je	 SHORT $L138677
  00150	66 3d 01 00	 cmp	 ax, 1
  00154	75 07		 jne	 SHORT $L188610
$L138677:

; 5396 : 	for(BYTE cr=0; cr<TCLASS_COUNT; cr++)

  00156	fe c3		 inc	 bl
  00158	80 fb 06	 cmp	 bl, 6
  0015b	72 93		 jb	 SHORT $L138676
$L188610:
  0015d	5f		 pop	 edi
$L138661:
  0015e	5e		 pop	 esi
  0015f	5d		 pop	 ebp
  00160	5b		 pop	 ebx

; 5400 : 	}
; 5401 : END_PARAM()

  00161	c2 04 00	 ret	 4
?BindParameters@CSPGetPvPRecord@@UAEFH@Z ENDP		; CSPGetPvPRecord::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGetPvPRecord@@UAE@XZ			; CSPGetPvPRecord::~CSPGetPvPRecord
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGetPvPRecord@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGetPvPRecord@@UAEPAXI@Z PROC NEAR		; CSPGetPvPRecord::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGetPvPRecord@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L188614
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L188614:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGetPvPRecord@@UAEPAXI@Z ENDP			; CSPGetPvPRecord::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGetPvPRecord@@UAE@XZ
_TEXT	SEGMENT
??1CSPGetPvPRecord@@UAE@XZ PROC NEAR			; CSPGetPvPRecord::~CSPGetPvPRecord, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGetPvPRecord@@UAE@XZ ENDP				; CSPGetPvPRecord::~CSPGetPvPRecord
_TEXT	ENDS
PUBLIC	??0CSPSavePvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSavePvPRecord::CSPSavePvPRecord
PUBLIC	?GetNumParam@CSPSavePvPRecord@@UAEHXZ		; CSPSavePvPRecord::GetNumParam
PUBLIC	?BindParameters@CSPSavePvPRecord@@UAEFH@Z	; CSPSavePvPRecord::BindParameters
PUBLIC	??_7CSPSavePvPRecord@@6B@			; CSPSavePvPRecord::`vftable'
PUBLIC	??_GCSPSavePvPRecord@@UAEPAXI@Z			; CSPSavePvPRecord::`scalar deleting destructor'
PUBLIC	??_C@_0DF@MGGMNJMH@?$HLCALL?5TSavePvPRecord?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPSavePvPRecord@@UAEPAXI@Z:NEAR		; CSPSavePvPRecord::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T188797 DD	0ffffffffH
	DD	FLAT:$L188623
$T188794 DD	019930520H
	DD	01H
	DD	FLAT:$T188797
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DF@MGGMNJMH@?$HLCALL?5TSavePvPRecord?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0DF@MGGMNJMH@?$HLCALL?5TSavePvPRecord?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	'CALL TSavePvPRecord(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPSavePvPRecord@@6B@
CONST	SEGMENT
??_7CSPSavePvPRecord@@6B@ DD FLAT:??_ECSPSavePvPRecord@@UAEPAXI@Z ; CSPSavePvPRecord::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSavePvPRecord@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSavePvPRecord@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSavePvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T188622 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSavePvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSavePvPRecord::CSPSavePvPRecord, COMDAT
; _this$ = ecx

; 5413 : DEF_QUERY(CSPSavePvPRecord, _T("{CALL TSavePvPRecord(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSavePvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DF@MGGMNJMH@?$HLCALL?5TSavePvPRecord?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T188622[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSavePvPRecord@@6B@
  0005e	72 0d		 jb	 SHORT $L188795
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L188795:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L188623:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSavePvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188794
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSavePvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSavePvPRecord::CSPSavePvPRecord
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSavePvPRecord@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSavePvPRecord@@UAEHXZ PROC NEAR		; CSPSavePvPRecord::GetNumParam, COMDAT
; _this$ = ecx

; 5415 : BEGIN_PARAM(15)

  00000	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH
  00005	c3		 ret	 0
?GetNumParam@CSPSavePvPRecord@@UAEHXZ ENDP		; CSPSavePvPRecord::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSavePvPRecord@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSavePvPRecord@@UAEFH@Z PROC NEAR	; CSPSavePvPRecord::BindParameters, COMDAT
; _this$ = ecx

; 5415 : BEGIN_PARAM(15)

  00000	53		 push	 ebx
  00001	55		 push	 ebp

; 5416 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 6c 24 0c	 mov	 ebp, DWORD PTR _bRewind$[esp+4]
  00006	33 db		 xor	 ebx, ebx
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b eb		 cmp	 ebp, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L188810
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L188810
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 c8 00 00
	00		 jne	 $L138723
$L188810:

; 5417 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwUseablePoint)

  00036	3b eb		 cmp	 ebp, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L188812
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L188812:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L188813
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 9d 00 00
	00		 jne	 $L138723
$L188813:

; 5418 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwTotalPoint)

  00061	3b eb		 cmp	 ebp, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L138731
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138731:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	57		 push	 edi
  00081	bf 04 00 00 00	 mov	 edi, 4
  00086	74 06		 je	 SHORT $L138732
  00088	66 3d 01 00	 cmp	 ax, 1
  0008c	75 6f		 jne	 SHORT $L188814
$L138732:

; 5419 : 	for(BYTE cr=0; cr<TCLASS_COUNT; cr++)

  0008e	32 db		 xor	 bl, bl
$L138734:

; 5420 : 	{
; 5421 : 		PARAM_ENTRY(SQL_PARAM_INPUT, m_aRecord[cr][0])

  00090	85 ed		 test	 ebp, ebp
  00092	0f bf cf	 movsx	 ecx, di
  00095	c7 84 8e 0c 08
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+2060], 0
  000a0	75 15		 jne	 SHORT $L138737
  000a2	0f b6 d3	 movzx	 edx, bl
  000a5	8d 84 d6 38 0c
	00 00		 lea	 eax, DWORD PTR [esi+edx*8+3128]
  000ac	50		 push	 eax
  000ad	57		 push	 edi
  000ae	6a 01		 push	 1
  000b0	8b ce		 mov	 ecx, esi
  000b2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138737:
  000b7	47		 inc	 edi
  000b8	66 85 c0	 test	 ax, ax
  000bb	74 06		 je	 SHORT $L188811
  000bd	66 3d 01 00	 cmp	 ax, 1
  000c1	75 3a		 jne	 SHORT $L188814
$L188811:

; 5422 : 		PARAM_ENTRY(SQL_PARAM_INPUT, m_aRecord[cr][1])

  000c3	85 ed		 test	 ebp, ebp
  000c5	0f bf cf	 movsx	 ecx, di
  000c8	c7 84 8e 0c 08
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+ecx*4+2060], 0
  000d3	75 15		 jne	 SHORT $L138739
  000d5	0f b6 d3	 movzx	 edx, bl
  000d8	8d 84 d6 3c 0c
	00 00		 lea	 eax, DWORD PTR [esi+edx*8+3132]
  000df	50		 push	 eax
  000e0	57		 push	 edi
  000e1	6a 01		 push	 1
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138739:
  000ea	47		 inc	 edi
  000eb	66 85 c0	 test	 ax, ax
  000ee	74 06		 je	 SHORT $L138735
  000f0	66 3d 01 00	 cmp	 ax, 1
  000f4	75 07		 jne	 SHORT $L188814
$L138735:

; 5419 : 	for(BYTE cr=0; cr<TCLASS_COUNT; cr++)

  000f6	fe c3		 inc	 bl
  000f8	80 fb 06	 cmp	 bl, 6
  000fb	72 93		 jb	 SHORT $L138734
$L188814:
  000fd	5f		 pop	 edi
$L138723:
  000fe	5e		 pop	 esi
  000ff	5d		 pop	 ebp
  00100	5b		 pop	 ebx

; 5423 : 	}
; 5424 : END_PARAM()

  00101	c2 04 00	 ret	 4
?BindParameters@CSPSavePvPRecord@@UAEFH@Z ENDP		; CSPSavePvPRecord::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSavePvPRecord@@UAE@XZ			; CSPSavePvPRecord::~CSPSavePvPRecord
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSavePvPRecord@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSavePvPRecord@@UAEPAXI@Z PROC NEAR		; CSPSavePvPRecord::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSavePvPRecord@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L188818
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L188818:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSavePvPRecord@@UAEPAXI@Z ENDP			; CSPSavePvPRecord::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSavePvPRecord@@UAE@XZ
_TEXT	SEGMENT
??1CSPSavePvPRecord@@UAE@XZ PROC NEAR			; CSPSavePvPRecord::~CSPSavePvPRecord, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSavePvPRecord@@UAE@XZ ENDP			; CSPSavePvPRecord::~CSPSavePvPRecord
_TEXT	ENDS
PUBLIC	??0CSPSavePvPRecent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSavePvPRecent::CSPSavePvPRecent
PUBLIC	?GetNumParam@CSPSavePvPRecent@@UAEHXZ		; CSPSavePvPRecent::GetNumParam
PUBLIC	?BindParameters@CSPSavePvPRecent@@UAEFH@Z	; CSPSavePvPRecent::BindParameters
PUBLIC	??_7CSPSavePvPRecent@@6B@			; CSPSavePvPRecent::`vftable'
PUBLIC	??_GCSPSavePvPRecent@@UAEPAXI@Z			; CSPSavePvPRecent::`scalar deleting destructor'
PUBLIC	??_C@_0CF@MFBNHAAG@?$HLCALL?5TSavePvPRecent?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPSavePvPRecent@@UAEPAXI@Z:NEAR		; CSPSavePvPRecent::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T189001 DD	0ffffffffH
	DD	FLAT:$L188827
$T188998 DD	019930520H
	DD	01H
	DD	FLAT:$T189001
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CF@MFBNHAAG@?$HLCALL?5TSavePvPRecent?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CF@MFBNHAAG@?$HLCALL?5TSavePvPRecent?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	'CALL TSavePvPRecent(?,?,?,?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPSavePvPRecent@@6B@
CONST	SEGMENT
??_7CSPSavePvPRecent@@6B@ DD FLAT:??_ECSPSavePvPRecent@@UAEPAXI@Z ; CSPSavePvPRecent::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSavePvPRecent@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSavePvPRecent@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSavePvPRecent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T188826 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSavePvPRecent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSavePvPRecent::CSPSavePvPRecent, COMDAT
; _this$ = ecx

; 5438 : DEF_QUERY(CSPSavePvPRecent, _T("{CALL TSavePvPRecent(?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSavePvPRecent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CF@MFBNHAAG@?$HLCALL?5TSavePvPRecent?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T188826[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSavePvPRecent@@6B@
  0005e	72 0d		 jb	 SHORT $L188999
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L188999:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L188827:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSavePvPRecent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T188998
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSavePvPRecent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSavePvPRecent::CSPSavePvPRecent
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSavePvPRecent@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSavePvPRecent@@UAEHXZ PROC NEAR		; CSPSavePvPRecent::GetNumParam, COMDAT
; _this$ = ecx

; 5440 : BEGIN_PARAM(7)

  00000	b8 07 00 00 00	 mov	 eax, 7
  00005	c3		 ret	 0
?GetNumParam@CSPSavePvPRecent@@UAEHXZ ENDP		; CSPSavePvPRecent::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSavePvPRecent@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSavePvPRecent@@UAEFH@Z PROC NEAR	; CSPSavePvPRecent::BindParameters, COMDAT
; _this$ = ecx

; 5440 : BEGIN_PARAM(7)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5441 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L138789
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L138789
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 ed 00 00
	00		 jne	 $L138784
$L138789:

; 5442 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szName)

  00036	3b fb		 cmp	 edi, ebx
  00038	c7 86 14 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2068], -3 ; fffffffdH
  00042	75 14		 jne	 SHORT $L138790
  00044	6a 33		 push	 51			; 00000033H
  00046	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  0004c	51		 push	 ecx
  0004d	6a 02		 push	 2
  0004f	6a 01		 push	 1
  00051	8b ce		 mov	 ecx, esi
  00053	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L138790:
  00058	66 3b c3	 cmp	 ax, bx
  0005b	74 0a		 je	 SHORT $L138791
  0005d	66 3d 01 00	 cmp	 ax, 1
  00061	0f 85 bc 00 00
	00		 jne	 $L138784
$L138791:

; 5443 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bClass)

  00067	3b fb		 cmp	 edi, ebx
  00069	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  0006f	75 12		 jne	 SHORT $L138792
  00071	8d 96 63 0c 00
	00		 lea	 edx, DWORD PTR [esi+3171]
  00077	52		 push	 edx
  00078	6a 03		 push	 3
  0007a	6a 01		 push	 1
  0007c	8b ce		 mov	 ecx, esi
  0007e	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138792:
  00083	66 3b c3	 cmp	 ax, bx
  00086	74 0a		 je	 SHORT $L138793
  00088	66 3d 01 00	 cmp	 ax, 1
  0008c	0f 85 91 00 00
	00		 jne	 $L138784
$L138793:

; 5444 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bLevel)

  00092	3b fb		 cmp	 edi, ebx
  00094	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  0009a	75 12		 jne	 SHORT $L138794
  0009c	8d 86 64 0c 00
	00		 lea	 eax, DWORD PTR [esi+3172]
  000a2	50		 push	 eax
  000a3	6a 04		 push	 4
  000a5	6a 01		 push	 1
  000a7	8b ce		 mov	 ecx, esi
  000a9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138794:
  000ae	66 3b c3	 cmp	 ax, bx
  000b1	74 06		 je	 SHORT $L138795
  000b3	66 3d 01 00	 cmp	 ax, 1
  000b7	75 6a		 jne	 SHORT $L138784
$L138795:

; 5445 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bWin)

  000b9	3b fb		 cmp	 edi, ebx
  000bb	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000c1	75 12		 jne	 SHORT $L138796
  000c3	8d 8e 65 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3173]
  000c9	51		 push	 ecx
  000ca	6a 05		 push	 5
  000cc	6a 01		 push	 1
  000ce	8b ce		 mov	 ecx, esi
  000d0	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138796:
  000d5	66 3b c3	 cmp	 ax, bx
  000d8	74 06		 je	 SHORT $L138797
  000da	66 3d 01 00	 cmp	 ax, 1
  000de	75 43		 jne	 SHORT $L138784
$L138797:

; 5446 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwPoint)

  000e0	3b fb		 cmp	 edi, ebx
  000e2	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000e8	75 12		 jne	 SHORT $L138798
  000ea	8d 96 68 0c 00
	00		 lea	 edx, DWORD PTR [esi+3176]
  000f0	52		 push	 edx
  000f1	6a 06		 push	 6
  000f3	6a 01		 push	 1
  000f5	8b ce		 mov	 ecx, esi
  000f7	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138798:
  000fc	66 3b c3	 cmp	 ax, bx
  000ff	74 06		 je	 SHORT $L138799
  00101	66 3d 01 00	 cmp	 ax, 1
  00105	75 1c		 jne	 SHORT $L138784
$L138799:

; 5447 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dlDate)

  00107	3b fb		 cmp	 edi, ebx
  00109	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  0010f	75 12		 jne	 SHORT $L138784
  00111	8d 86 6c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3180]
  00117	50		 push	 eax
  00118	6a 07		 push	 7
  0011a	6a 01		 push	 1
  0011c	8b ce		 mov	 ecx, esi
  0011e	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L138784:
  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 5448 : END_PARAM()

  00126	c2 04 00	 ret	 4
?BindParameters@CSPSavePvPRecent@@UAEFH@Z ENDP		; CSPSavePvPRecent::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSavePvPRecent@@UAE@XZ			; CSPSavePvPRecent::~CSPSavePvPRecent
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSavePvPRecent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSavePvPRecent@@UAEPAXI@Z PROC NEAR		; CSPSavePvPRecent::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSavePvPRecent@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L189013
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L189013:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSavePvPRecent@@UAEPAXI@Z ENDP			; CSPSavePvPRecent::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSavePvPRecent@@UAE@XZ
_TEXT	SEGMENT
??1CSPSavePvPRecent@@UAE@XZ PROC NEAR			; CSPSavePvPRecent::~CSPSavePvPRecent, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSavePvPRecent@@UAE@XZ ENDP			; CSPSavePvPRecent::~CSPSavePvPRecent
_TEXT	ENDS
PUBLIC	??0CSPDuelScore@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPDuelScore::CSPDuelScore
PUBLIC	?GetNumParam@CSPDuelScore@@UAEHXZ		; CSPDuelScore::GetNumParam
PUBLIC	?BindParameters@CSPDuelScore@@UAEFH@Z		; CSPDuelScore::BindParameters
PUBLIC	??_7CSPDuelScore@@6B@				; CSPDuelScore::`vftable'
PUBLIC	??_GCSPDuelScore@@UAEPAXI@Z			; CSPDuelScore::`scalar deleting destructor'
PUBLIC	??_C@_0DB@ICOHJADD@?$HL?$DP?5?$DN?5CALL?5TDuelScore?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPDuelScore@@UAEPAXI@Z:NEAR		; CSPDuelScore::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T189196 DD	0ffffffffH
	DD	FLAT:$L189022
$T189193 DD	019930520H
	DD	01H
	DD	FLAT:$T189196
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DB@ICOHJADD@?$HL?$DP?5?$DN?5CALL?5TDuelScore?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0DB@ICOHJADD@?$HL?$DP?5?$DN?5CALL?5TDuelScore?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	'? = CALL TDuelScore(?,?,?,?,?,?,?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPDuelScore@@6B@
CONST	SEGMENT
??_7CSPDuelScore@@6B@ DD FLAT:??_ECSPDuelScore@@UAEPAXI@Z ; CSPDuelScore::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPDuelScore@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPDuelScore@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPDuelScore@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T189021 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPDuelScore@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPDuelScore::CSPDuelScore, COMDAT
; _this$ = ecx

; 5458 : DEF_QUERY(CSPDuelScore, _T("{? = CALL TDuelScore(?,?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPDuelScore@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DB@ICOHJADD@?$HL?$DP?5?$DN?5CALL?5TDuelScore?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T189021[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPDuelScore@@6B@
  0005e	72 0d		 jb	 SHORT $L189194
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L189194:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L189022:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPDuelScore@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T189193
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPDuelScore@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPDuelScore::CSPDuelScore
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPDuelScore@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPDuelScore@@UAEHXZ PROC NEAR		; CSPDuelScore::GetNumParam, COMDAT
; _this$ = ecx

; 5459 : BEGIN_PARAM(15)

  00000	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH
  00005	c3		 ret	 0
?GetNumParam@CSPDuelScore@@UAEHXZ ENDP			; CSPDuelScore::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPDuelScore@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPDuelScore@@UAEFH@Z PROC NEAR		; CSPDuelScore::BindParameters, COMDAT
; _this$ = ecx

; 5459 : BEGIN_PARAM(15)

  00000	53		 push	 ebx
  00001	55		 push	 ebp

; 5460 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_nRET)

  00002	8b 6c 24 0c	 mov	 ebp, DWORD PTR _bRewind$[esp+4]
  00006	33 db		 xor	 ebx, ebx
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b eb		 cmp	 ebp, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L189209
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L189209
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 a8 00 00
	00		 jne	 $L138841
$L189209:

; 5461 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCharID)	

  00036	3b eb		 cmp	 ebp, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L138847
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138847:
  00052	66 3b c3	 cmp	 ax, bx
  00055	57		 push	 edi
  00056	bf 03 00 00 00	 mov	 edi, 3
  0005b	74 06		 je	 SHORT $L138848
  0005d	66 3d 01 00	 cmp	 ax, 1
  00061	75 7a		 jne	 SHORT $L189211
$L138848:

; 5462 : 	for(BYTE i = 0; i < TCLASS_COUNT; i++)

  00063	32 db		 xor	 bl, bl
  00065	eb 09 8d a4 24
	00 00 00 00 8b
	ff		 npad	 11
$L138850:

; 5463 : 	{
; 5464 : 		PARAM_ENTRY(SQL_PARAM_INPUT,m_aDuelScore[i][0])

  00070	85 ed		 test	 ebp, ebp
  00072	0f bf d7	 movsx	 edx, di
  00075	c7 84 96 0c 08
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+edx*4+2060], 0
  00080	75 15		 jne	 SHORT $L138853
  00082	0f b6 c3	 movzx	 eax, bl
  00085	8d 8c c6 34 0c
	00 00		 lea	 ecx, DWORD PTR [esi+eax*8+3124]
  0008c	51		 push	 ecx
  0008d	57		 push	 edi
  0008e	6a 01		 push	 1
  00090	8b ce		 mov	 ecx, esi
  00092	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138853:
  00097	47		 inc	 edi
  00098	66 85 c0	 test	 ax, ax
  0009b	74 06		 je	 SHORT $L189210
  0009d	66 3d 01 00	 cmp	 ax, 1
  000a1	75 3a		 jne	 SHORT $L189211
$L189210:

; 5465 : 		PARAM_ENTRY(SQL_PARAM_INPUT,m_aDuelScore[i][1])

  000a3	85 ed		 test	 ebp, ebp
  000a5	0f bf d7	 movsx	 edx, di
  000a8	c7 84 96 0c 08
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+edx*4+2060], 0
  000b3	75 15		 jne	 SHORT $L138855
  000b5	0f b6 c3	 movzx	 eax, bl
  000b8	8d 8c c6 38 0c
	00 00		 lea	 ecx, DWORD PTR [esi+eax*8+3128]
  000bf	51		 push	 ecx
  000c0	57		 push	 edi
  000c1	6a 01		 push	 1
  000c3	8b ce		 mov	 ecx, esi
  000c5	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138855:
  000ca	47		 inc	 edi
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 06		 je	 SHORT $L138851
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	75 07		 jne	 SHORT $L189211
$L138851:

; 5462 : 	for(BYTE i = 0; i < TCLASS_COUNT; i++)

  000d6	fe c3		 inc	 bl
  000d8	80 fb 06	 cmp	 bl, 6
  000db	72 93		 jb	 SHORT $L138850
$L189211:
  000dd	5f		 pop	 edi
$L138841:
  000de	5e		 pop	 esi
  000df	5d		 pop	 ebp
  000e0	5b		 pop	 ebx

; 5466 : 	}
; 5467 : END_PARAM()

  000e1	c2 04 00	 ret	 4
?BindParameters@CSPDuelScore@@UAEFH@Z ENDP		; CSPDuelScore::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPDuelScore@@UAE@XZ				; CSPDuelScore::~CSPDuelScore
; Function compile flags: /Ogty
;	COMDAT ??_GCSPDuelScore@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPDuelScore@@UAEPAXI@Z PROC NEAR			; CSPDuelScore::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPDuelScore@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L189215
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L189215:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPDuelScore@@UAEPAXI@Z ENDP			; CSPDuelScore::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPDuelScore@@UAE@XZ
_TEXT	SEGMENT
??1CSPDuelScore@@UAE@XZ PROC NEAR			; CSPDuelScore::~CSPDuelScore, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPDuelScore@@UAE@XZ ENDP				; CSPDuelScore::~CSPDuelScore
_TEXT	ENDS
PUBLIC	??0CSPDuelCharAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPDuelCharAdd::CSPDuelCharAdd
PUBLIC	?GetNumParam@CSPDuelCharAdd@@UAEHXZ		; CSPDuelCharAdd::GetNumParam
PUBLIC	?BindParameters@CSPDuelCharAdd@@UAEFH@Z		; CSPDuelCharAdd::BindParameters
PUBLIC	??_7CSPDuelCharAdd@@6B@				; CSPDuelCharAdd::`vftable'
PUBLIC	??_GCSPDuelCharAdd@@UAEPAXI@Z			; CSPDuelCharAdd::`scalar deleting destructor'
PUBLIC	??_C@_0CH@LCAOLEAM@?$HL?$DP?5?$DN?5CALL?5TDuelCharAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPDuelCharAdd@@UAEPAXI@Z:NEAR		; CSPDuelCharAdd::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T189398 DD	0ffffffffH
	DD	FLAT:$L189224
$T189395 DD	019930520H
	DD	01H
	DD	FLAT:$T189398
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CH@LCAOLEAM@?$HL?$DP?5?$DN?5CALL?5TDuelCharAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CH@LCAOLEAM@?$HL?$DP?5?$DN?5CALL?5TDuelCharAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	'? = CALL TDuelCharAdd(?,?,?,?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPDuelCharAdd@@6B@
CONST	SEGMENT
??_7CSPDuelCharAdd@@6B@ DD FLAT:??_ECSPDuelCharAdd@@UAEPAXI@Z ; CSPDuelCharAdd::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPDuelCharAdd@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPDuelCharAdd@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPDuelCharAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T189223 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPDuelCharAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPDuelCharAdd::CSPDuelCharAdd, COMDAT
; _this$ = ecx

; 5482 : DEF_QUERY(CSPDuelCharAdd, _T("{? = CALL TDuelCharAdd(?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPDuelCharAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CH@LCAOLEAM@?$HL?$DP?5?$DN?5CALL?5TDuelCharAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T189223[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPDuelCharAdd@@6B@
  0005e	72 0d		 jb	 SHORT $L189396
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L189396:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L189224:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPDuelCharAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T189395
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPDuelCharAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPDuelCharAdd::CSPDuelCharAdd
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPDuelCharAdd@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPDuelCharAdd@@UAEHXZ PROC NEAR		; CSPDuelCharAdd::GetNumParam, COMDAT
; _this$ = ecx

; 5483 : BEGIN_PARAM(8)

  00000	b8 08 00 00 00	 mov	 eax, 8
  00005	c3		 ret	 0
?GetNumParam@CSPDuelCharAdd@@UAEHXZ ENDP		; CSPDuelCharAdd::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPDuelCharAdd@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPDuelCharAdd@@UAEFH@Z PROC NEAR	; CSPDuelCharAdd::BindParameters, COMDAT
; _this$ = ecx

; 5483 : BEGIN_PARAM(8)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5484 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L138906
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L138906
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 18 01 00
	00		 jne	 $L138901
$L138906:

; 5485 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCharID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L138907
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138907:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L138908
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 ed 00 00
	00		 jne	 $L138901
$L138908:

; 5486 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT,m_szName)

  00061	3b fb		 cmp	 edi, ebx
  00063	c7 86 18 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2072], -3 ; fffffffdH
  0006d	75 14		 jne	 SHORT $L138909
  0006f	6a 33		 push	 51			; 00000033H
  00071	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00077	52		 push	 edx
  00078	6a 03		 push	 3
  0007a	6a 01		 push	 1
  0007c	8b ce		 mov	 ecx, esi
  0007e	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L138909:
  00083	66 3b c3	 cmp	 ax, bx
  00086	74 0a		 je	 SHORT $L138910
  00088	66 3d 01 00	 cmp	 ax, 1
  0008c	0f 85 bc 00 00
	00		 jne	 $L138901
$L138910:

; 5487 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bClass)

  00092	3b fb		 cmp	 edi, ebx
  00094	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  0009a	75 12		 jne	 SHORT $L138911
  0009c	8d 86 67 0c 00
	00		 lea	 eax, DWORD PTR [esi+3175]
  000a2	50		 push	 eax
  000a3	6a 04		 push	 4
  000a5	6a 01		 push	 1
  000a7	8b ce		 mov	 ecx, esi
  000a9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138911:
  000ae	66 3b c3	 cmp	 ax, bx
  000b1	74 0a		 je	 SHORT $L138912
  000b3	66 3d 01 00	 cmp	 ax, 1
  000b7	0f 85 91 00 00
	00		 jne	 $L138901
$L138912:

; 5488 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bLevel)

  000bd	3b fb		 cmp	 edi, ebx
  000bf	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000c5	75 12		 jne	 SHORT $L138913
  000c7	8d 8e 68 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3176]
  000cd	51		 push	 ecx
  000ce	6a 05		 push	 5
  000d0	6a 01		 push	 1
  000d2	8b ce		 mov	 ecx, esi
  000d4	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138913:
  000d9	66 3b c3	 cmp	 ax, bx
  000dc	74 06		 je	 SHORT $L138914
  000de	66 3d 01 00	 cmp	 ax, 1
  000e2	75 6a		 jne	 SHORT $L138901
$L138914:

; 5489 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bWin)

  000e4	3b fb		 cmp	 edi, ebx
  000e6	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000ec	75 12		 jne	 SHORT $L138915
  000ee	8d 96 69 0c 00
	00		 lea	 edx, DWORD PTR [esi+3177]
  000f4	52		 push	 edx
  000f5	6a 06		 push	 6
  000f7	6a 01		 push	 1
  000f9	8b ce		 mov	 ecx, esi
  000fb	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138915:
  00100	66 3b c3	 cmp	 ax, bx
  00103	74 06		 je	 SHORT $L138916
  00105	66 3d 01 00	 cmp	 ax, 1
  00109	75 43		 jne	 SHORT $L138901
$L138916:

; 5490 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwPoint)

  0010b	3b fb		 cmp	 edi, ebx
  0010d	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00113	75 12		 jne	 SHORT $L138917
  00115	8d 86 6c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3180]
  0011b	50		 push	 eax
  0011c	6a 07		 push	 7
  0011e	6a 01		 push	 1
  00120	8b ce		 mov	 ecx, esi
  00122	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138917:
  00127	66 3b c3	 cmp	 ax, bx
  0012a	74 06		 je	 SHORT $L138918
  0012c	66 3d 01 00	 cmp	 ax, 1
  00130	75 1c		 jne	 SHORT $L138901
$L138918:

; 5491 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_timeDuel)

  00132	3b fb		 cmp	 edi, ebx
  00134	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  0013a	75 12		 jne	 SHORT $L138901
  0013c	8d 8e 70 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3184]
  00142	51		 push	 ecx
  00143	6a 08		 push	 8
  00145	6a 01		 push	 1
  00147	8b ce		 mov	 ecx, esi
  00149	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L138901:
  0014e	5f		 pop	 edi
  0014f	5e		 pop	 esi
  00150	5b		 pop	 ebx

; 5492 : END_PARAM()

  00151	c2 04 00	 ret	 4
?BindParameters@CSPDuelCharAdd@@UAEFH@Z ENDP		; CSPDuelCharAdd::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPDuelCharAdd@@UAE@XZ			; CSPDuelCharAdd::~CSPDuelCharAdd
; Function compile flags: /Ogty
;	COMDAT ??_GCSPDuelCharAdd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPDuelCharAdd@@UAEPAXI@Z PROC NEAR			; CSPDuelCharAdd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPDuelCharAdd@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L189410
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L189410:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPDuelCharAdd@@UAEPAXI@Z ENDP			; CSPDuelCharAdd::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPDuelCharAdd@@UAE@XZ
_TEXT	SEGMENT
??1CSPDuelCharAdd@@UAE@XZ PROC NEAR			; CSPDuelCharAdd::~CSPDuelCharAdd, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPDuelCharAdd@@UAE@XZ ENDP				; CSPDuelCharAdd::~CSPDuelCharAdd
_TEXT	ENDS
PUBLIC	??0CSPSaveProtectedOption@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveProtectedOption::CSPSaveProtectedOption
PUBLIC	?GetNumParam@CSPSaveProtectedOption@@UAEHXZ	; CSPSaveProtectedOption::GetNumParam
PUBLIC	?BindParameters@CSPSaveProtectedOption@@UAEFH@Z	; CSPSaveProtectedOption::BindParameters
PUBLIC	??_7CSPSaveProtectedOption@@6B@			; CSPSaveProtectedOption::`vftable'
PUBLIC	??_GCSPSaveProtectedOption@@UAEPAXI@Z		; CSPSaveProtectedOption::`scalar deleting destructor'
PUBLIC	??_C@_0CD@KOOCPODB@?$HLCALL?5TSaveProtectedOption?$CI?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPSaveProtectedOption@@UAEPAXI@Z:NEAR	; CSPSaveProtectedOption::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T189593 DD	0ffffffffH
	DD	FLAT:$L189419
$T189590 DD	019930520H
	DD	01H
	DD	FLAT:$T189593
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CD@KOOCPODB@?$HLCALL?5TSaveProtectedOption?$CI?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CD@KOOCPODB@?$HLCALL?5TSaveProtectedOption?$CI?$DP?0?$DP?0?$DP@ DB '{'
	DB	'CALL TSaveProtectedOption(?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveProtectedOption@@6B@
CONST	SEGMENT
??_7CSPSaveProtectedOption@@6B@ DD FLAT:??_ECSPSaveProtectedOption@@UAEPAXI@Z ; CSPSaveProtectedOption::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveProtectedOption@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveProtectedOption@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveProtectedOption@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T189418 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveProtectedOption@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveProtectedOption::CSPSaveProtectedOption, COMDAT
; _this$ = ecx

; 5502 : DEF_QUERY(CSPSaveProtectedOption, _T("{CALL TSaveProtectedOption(?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveProtectedOption@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CD@KOOCPODB@?$HLCALL?5TSaveProtectedOption?$CI?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T189418[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveProtectedOption@@6B@
  0005e	72 0d		 jb	 SHORT $L189591
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L189591:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L189419:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveProtectedOption@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T189590
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveProtectedOption@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveProtectedOption::CSPSaveProtectedOption
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveProtectedOption@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveProtectedOption@@UAEHXZ PROC NEAR	; CSPSaveProtectedOption::GetNumParam, COMDAT
; _this$ = ecx

; 5503 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPSaveProtectedOption@@UAEHXZ ENDP	; CSPSaveProtectedOption::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveProtectedOption@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveProtectedOption@@UAEFH@Z PROC NEAR ; CSPSaveProtectedOption::BindParameters, COMDAT
; _this$ = ecx

; 5503 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 5504 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L138965
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L138965
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L138960
$L138965:

; 5505 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwTarget)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L138966
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138966:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L138967
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L138960
$L138967:

; 5506 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bOption)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L138960
  00068	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138960:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 5507 : END_PARAM()

  0007c	c2 04 00	 ret	 4
?BindParameters@CSPSaveProtectedOption@@UAEFH@Z ENDP	; CSPSaveProtectedOption::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveProtectedOption@@UAE@XZ		; CSPSaveProtectedOption::~CSPSaveProtectedOption
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveProtectedOption@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveProtectedOption@@UAEPAXI@Z PROC NEAR		; CSPSaveProtectedOption::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveProtectedOption@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L189605
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L189605:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveProtectedOption@@UAEPAXI@Z ENDP		; CSPSaveProtectedOption::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveProtectedOption@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveProtectedOption@@UAE@XZ PROC NEAR		; CSPSaveProtectedOption::~CSPSaveProtectedOption, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveProtectedOption@@UAE@XZ ENDP			; CSPSaveProtectedOption::~CSPSaveProtectedOption
_TEXT	ENDS
PUBLIC	??0CSPAuctionReg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPAuctionReg::CSPAuctionReg
PUBLIC	?GetNumParam@CSPAuctionReg@@UAEHXZ		; CSPAuctionReg::GetNumParam
PUBLIC	?BindParameters@CSPAuctionReg@@UAEFH@Z		; CSPAuctionReg::BindParameters
PUBLIC	??_7CSPAuctionReg@@6B@				; CSPAuctionReg::`vftable'
PUBLIC	??_GCSPAuctionReg@@UAEPAXI@Z			; CSPAuctionReg::`scalar deleting destructor'
PUBLIC	??_C@_0CL@JBKCJOLC@?$HL?5?$DP?5?$DN?5CALL?5TAuctionReg?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPAuctionReg@@UAEPAXI@Z:NEAR		; CSPAuctionReg::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T189788 DD	0ffffffffH
	DD	FLAT:$L189614
$T189785 DD	019930520H
	DD	01H
	DD	FLAT:$T189788
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CL@JBKCJOLC@?$HL?5?$DP?5?$DN?5CALL?5TAuctionReg?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CL@JBKCJOLC@?$HL?5?$DP?5?$DN?5CALL?5TAuctionReg?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	' ? = CALL TAuctionReg(?,?,?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPAuctionReg@@6B@
CONST	SEGMENT
??_7CSPAuctionReg@@6B@ DD FLAT:??_ECSPAuctionReg@@UAEPAXI@Z ; CSPAuctionReg::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPAuctionReg@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPAuctionReg@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPAuctionReg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T189613 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPAuctionReg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPAuctionReg::CSPAuctionReg, COMDAT
; _this$ = ecx

; 5525 : DEF_QUERY(CSPAuctionReg, _T("{ ? = CALL TAuctionReg(?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPAuctionReg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CL@JBKCJOLC@?$HL?5?$DP?5?$DN?5CALL?5TAuctionReg?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T189613[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPAuctionReg@@6B@
  0005e	72 0d		 jb	 SHORT $L189786
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L189786:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L189614:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPAuctionReg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T189785
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPAuctionReg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPAuctionReg::CSPAuctionReg
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPAuctionReg@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPAuctionReg@@UAEHXZ PROC NEAR		; CSPAuctionReg::GetNumParam, COMDAT
; _this$ = ecx

; 5526 : BEGIN_PARAM(10)

  00000	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  00005	c3		 ret	 0
?GetNumParam@CSPAuctionReg@@UAEHXZ ENDP			; CSPAuctionReg::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPAuctionReg@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPAuctionReg@@UAEFH@Z PROC NEAR	; CSPAuctionReg::BindParameters, COMDAT
; _this$ = ecx

; 5526 : BEGIN_PARAM(10)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5527 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L139021
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L139021
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 68 01 00
	00		 jne	 $L139016
$L139021:

; 5528 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wNpcID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L139022
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L139022:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L139023
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 3d 01 00
	00		 jne	 $L139016
$L139023:

; 5529 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wHour)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L139024
  0006b	8d 96 32 0c 00
	00		 lea	 edx, DWORD PTR [esi+3122]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L139024:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L139025
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 12 01 00
	00		 jne	 $L139016
$L139025:

; 5530 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwSeller)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L139026
  00096	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139026:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 0a		 je	 SHORT $L139027
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 e7 00 00
	00		 jne	 $L139016
$L139027:

; 5531 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dlDirectPrice)

  000b7	3b fb		 cmp	 edi, ebx
  000b9	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bf	75 12		 jne	 SHORT $L139028
  000c1	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 01		 push	 1
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
$L139028:
  000d3	66 3b c3	 cmp	 ax, bx
  000d6	74 0a		 je	 SHORT $L139029
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 bc 00 00
	00		 jne	 $L139016
$L139029:

; 5532 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dlStartPrice)

  000e2	3b fb		 cmp	 edi, ebx
  000e4	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000ea	75 12		 jne	 SHORT $L139030
  000ec	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 01		 push	 1
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
$L139030:
  000fe	66 3b c3	 cmp	 ax, bx
  00101	74 0a		 je	 SHORT $L139031
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	0f 85 91 00 00
	00		 jne	 $L139016
$L139031:

; 5533 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dlID)

  0010d	3b fb		 cmp	 edi, ebx
  0010f	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00115	75 12		 jne	 SHORT $L139032
  00117	8d 86 48 0c 00
	00		 lea	 eax, DWORD PTR [esi+3144]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 01		 push	 1
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
$L139032:
  00129	66 3b c3	 cmp	 ax, bx
  0012c	74 06		 je	 SHORT $L139033
  0012e	66 3d 01 00	 cmp	 ax, 1
  00132	75 6a		 jne	 SHORT $L139016
$L139033:

; 5534 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_dwAuctionID)

  00134	3b fb		 cmp	 edi, ebx
  00136	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  0013c	75 12		 jne	 SHORT $L139034
  0013e	8d 8e 50 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3152]
  00144	51		 push	 ecx
  00145	6a 08		 push	 8
  00147	6a 04		 push	 4
  00149	8b ce		 mov	 ecx, esi
  0014b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139034:
  00150	66 3b c3	 cmp	 ax, bx
  00153	74 06		 je	 SHORT $L139035
  00155	66 3d 01 00	 cmp	 ax, 1
  00159	75 43		 jne	 SHORT $L139016
$L139035:

; 5535 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_DateStart)

  0015b	3b fb		 cmp	 edi, ebx
  0015d	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  00163	75 12		 jne	 SHORT $L139036
  00165	8d 96 54 0c 00
	00		 lea	 edx, DWORD PTR [esi+3156]
  0016b	52		 push	 edx
  0016c	6a 09		 push	 9
  0016e	6a 04		 push	 4
  00170	8b ce		 mov	 ecx, esi
  00172	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L139036:
  00177	66 3b c3	 cmp	 ax, bx
  0017a	74 06		 je	 SHORT $L139037
  0017c	66 3d 01 00	 cmp	 ax, 1
  00180	75 1c		 jne	 SHORT $L139016
$L139037:

; 5536 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_DateEnd)	

  00182	3b fb		 cmp	 edi, ebx
  00184	89 9e 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebx
  0018a	75 12		 jne	 SHORT $L139016
  0018c	8d 86 64 0c 00
	00		 lea	 eax, DWORD PTR [esi+3172]
  00192	50		 push	 eax
  00193	6a 0a		 push	 10			; 0000000aH
  00195	6a 04		 push	 4
  00197	8b ce		 mov	 ecx, esi
  00199	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L139016:
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	5b		 pop	 ebx

; 5537 : 	
; 5538 : END_PARAM()	

  001a1	c2 04 00	 ret	 4
?BindParameters@CSPAuctionReg@@UAEFH@Z ENDP		; CSPAuctionReg::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPAuctionReg@@UAE@XZ			; CSPAuctionReg::~CSPAuctionReg
; Function compile flags: /Ogty
;	COMDAT ??_GCSPAuctionReg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPAuctionReg@@UAEPAXI@Z PROC NEAR			; CSPAuctionReg::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPAuctionReg@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L189800
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L189800:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPAuctionReg@@UAEPAXI@Z ENDP			; CSPAuctionReg::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPAuctionReg@@UAE@XZ
_TEXT	SEGMENT
??1CSPAuctionReg@@UAE@XZ PROC NEAR			; CSPAuctionReg::~CSPAuctionReg, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPAuctionReg@@UAE@XZ ENDP				; CSPAuctionReg::~CSPAuctionReg
_TEXT	ENDS
PUBLIC	??0CSPAuctionRegCancel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPAuctionRegCancel::CSPAuctionRegCancel
PUBLIC	?GetNumParam@CSPAuctionRegCancel@@UAEHXZ	; CSPAuctionRegCancel::GetNumParam
PUBLIC	?BindParameters@CSPAuctionRegCancel@@UAEFH@Z	; CSPAuctionRegCancel::BindParameters
PUBLIC	??_7CSPAuctionRegCancel@@6B@			; CSPAuctionRegCancel::`vftable'
PUBLIC	??_GCSPAuctionRegCancel@@UAEPAXI@Z		; CSPAuctionRegCancel::`scalar deleting destructor'
PUBLIC	??_C@_0CM@LLKMDBFH@?$HL?5?$DP?5?$DN?5CALL?5TAuctionRegCancel?$CI?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPAuctionRegCancel@@UAEPAXI@Z:NEAR		; CSPAuctionRegCancel::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T189983 DD	0ffffffffH
	DD	FLAT:$L189809
$T189980 DD	019930520H
	DD	01H
	DD	FLAT:$T189983
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CM@LLKMDBFH@?$HL?5?$DP?5?$DN?5CALL?5TAuctionRegCancel?$CI?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CM@LLKMDBFH@?$HL?5?$DP?5?$DN?5CALL?5TAuctionRegCancel?$CI?$DP?0?$DP@ DB '{'
	DB	' ? = CALL TAuctionRegCancel(?,?,?,?,?,?) }', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPAuctionRegCancel@@6B@
CONST	SEGMENT
??_7CSPAuctionRegCancel@@6B@ DD FLAT:??_ECSPAuctionRegCancel@@UAEPAXI@Z ; CSPAuctionRegCancel::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPAuctionRegCancel@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPAuctionRegCancel@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPAuctionRegCancel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T189808 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPAuctionRegCancel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPAuctionRegCancel::CSPAuctionRegCancel, COMDAT
; _this$ = ecx

; 5552 : DEF_QUERY(CSPAuctionRegCancel, _T("{ ? = CALL TAuctionRegCancel(?,?,?,?,?,?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPAuctionRegCancel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CM@LLKMDBFH@?$HL?5?$DP?5?$DN?5CALL?5TAuctionRegCancel?$CI?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T189808[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPAuctionRegCancel@@6B@
  0005e	72 0d		 jb	 SHORT $L189981
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L189981:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L189809:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPAuctionRegCancel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T189980
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPAuctionRegCancel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPAuctionRegCancel::CSPAuctionRegCancel
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPAuctionRegCancel@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPAuctionRegCancel@@UAEHXZ PROC NEAR	; CSPAuctionRegCancel::GetNumParam, COMDAT
; _this$ = ecx

; 5553 : BEGIN_PARAM(7)

  00000	b8 07 00 00 00	 mov	 eax, 7
  00005	c3		 ret	 0
?GetNumParam@CSPAuctionRegCancel@@UAEHXZ ENDP		; CSPAuctionRegCancel::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPAuctionRegCancel@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPAuctionRegCancel@@UAEFH@Z PROC NEAR	; CSPAuctionRegCancel::BindParameters, COMDAT
; _this$ = ecx

; 5553 : BEGIN_PARAM(7)

  00000	55		 push	 ebp
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5554 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 ed		 xor	 ebp, ebp
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fd		 cmp	 edi, ebp
  0000f	89 ae 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebp
  00015	75 1f		 jne	 SHORT $L189992
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c5	 cmp	 ax, bp
  0002a	74 0a		 je	 SHORT $L189992
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 f3 00 00
	00		 jne	 $L139083
$L189992:

; 5555 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wNpcID)

  00036	3b fd		 cmp	 edi, ebp
  00038	89 ae 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebp
  0003e	75 12		 jne	 SHORT $L189995
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L189995:
  00052	66 3b c5	 cmp	 ax, bp
  00055	74 0a		 je	 SHORT $L189997
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 c8 00 00
	00		 jne	 $L139083
$L189997:

; 5556 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwAuctionID)

  00061	3b fd		 cmp	 edi, ebp
  00063	89 ae 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebp
  00069	75 12		 jne	 SHORT $L189998
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L189998:
  0007d	66 3b c5	 cmp	 ax, bp
  00080	74 0a		 je	 SHORT $L139092
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 9d 00 00
	00		 jne	 $L139083
$L139092:

; 5557 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szSeller)

  0008c	3b fd		 cmp	 edi, ebp
  0008e	c7 86 1c 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2076], -3 ; fffffffdH
  00098	75 14		 jne	 SHORT $L139093
  0009a	6a 33		 push	 51			; 00000033H
  0009c	8d 86 48 0c 00
	00		 lea	 eax, DWORD PTR [esi+3144]
  000a2	50		 push	 eax
  000a3	6a 04		 push	 4
  000a5	6a 04		 push	 4
  000a7	8b ce		 mov	 ecx, esi
  000a9	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L139093:
  000ae	66 3b c5	 cmp	 ax, bp
  000b1	74 06		 je	 SHORT $L189993
  000b3	66 3d 01 00	 cmp	 ax, 1
  000b7	75 70		 jne	 SHORT $L139083
$L189993:

; 5558 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szBidder)

  000b9	3b fd		 cmp	 edi, ebp
  000bb	c7 86 20 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2080], -3 ; fffffffdH
  000c5	75 14		 jne	 SHORT $L189994
  000c7	6a 33		 push	 51			; 00000033H
  000c9	8d 8e 7b 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3195]
  000cf	51		 push	 ecx
  000d0	6a 05		 push	 5
  000d2	6a 04		 push	 4
  000d4	8b ce		 mov	 ecx, esi
  000d6	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L189994:
  000db	66 3b c5	 cmp	 ax, bp
  000de	74 06		 je	 SHORT $L139096
  000e0	66 3d 01 00	 cmp	 ax, 1
  000e4	75 43		 jne	 SHORT $L139083
$L139096:

; 5559 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_dwBidder)

  000e6	3b fd		 cmp	 edi, ebp
  000e8	89 ae 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebp
  000ee	75 12		 jne	 SHORT $L189996
  000f0	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  000f6	52		 push	 edx
  000f7	6a 06		 push	 6
  000f9	6a 04		 push	 4
  000fb	8b ce		 mov	 ecx, esi
  000fd	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L189996:
  00102	66 3b c5	 cmp	 ax, bp
  00105	74 06		 je	 SHORT $L139098
  00107	66 3d 01 00	 cmp	 ax, 1
  0010b	75 1c		 jne	 SHORT $L139083
$L139098:

; 5560 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_ldwBidPrice)	

  0010d	3b fd		 cmp	 edi, ebp
  0010f	89 ae 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebp
  00115	75 12		 jne	 SHORT $L139083
  00117	8d 86 40 0c 00
	00		 lea	 eax, DWORD PTR [esi+3136]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 04		 push	 4
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
$L139083:
  00129	5f		 pop	 edi
  0012a	5e		 pop	 esi
  0012b	5d		 pop	 ebp

; 5561 : END_PARAM()

  0012c	c2 04 00	 ret	 4
?BindParameters@CSPAuctionRegCancel@@UAEFH@Z ENDP	; CSPAuctionRegCancel::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPAuctionRegCancel@@UAE@XZ			; CSPAuctionRegCancel::~CSPAuctionRegCancel
; Function compile flags: /Ogty
;	COMDAT ??_GCSPAuctionRegCancel@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPAuctionRegCancel@@UAEPAXI@Z PROC NEAR		; CSPAuctionRegCancel::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPAuctionRegCancel@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L190002
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L190002:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPAuctionRegCancel@@UAEPAXI@Z ENDP			; CSPAuctionRegCancel::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPAuctionRegCancel@@UAE@XZ
_TEXT	SEGMENT
??1CSPAuctionRegCancel@@UAE@XZ PROC NEAR		; CSPAuctionRegCancel::~CSPAuctionRegCancel, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPAuctionRegCancel@@UAE@XZ ENDP			; CSPAuctionRegCancel::~CSPAuctionRegCancel
_TEXT	ENDS
PUBLIC	??0CSPAuctionBid@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPAuctionBid::CSPAuctionBid
PUBLIC	?GetNumParam@CSPAuctionBid@@UAEHXZ		; CSPAuctionBid::GetNumParam
PUBLIC	?BindParameters@CSPAuctionBid@@UAEFH@Z		; CSPAuctionBid::BindParameters
PUBLIC	??_7CSPAuctionBid@@6B@				; CSPAuctionBid::`vftable'
PUBLIC	??_GCSPAuctionBid@@UAEPAXI@Z			; CSPAuctionBid::`scalar deleting destructor'
PUBLIC	??_C@_0CJ@EJJPIBAB@?$HL?5?$DP?5?$DN?5CALL?5TAuctionBid?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPAuctionBid@@UAEPAXI@Z:NEAR		; CSPAuctionBid::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T190185 DD	0ffffffffH
	DD	FLAT:$L190011
$T190182 DD	019930520H
	DD	01H
	DD	FLAT:$T190185
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CJ@EJJPIBAB@?$HL?5?$DP?5?$DN?5CALL?5TAuctionBid?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CJ@EJJPIBAB@?$HL?5?$DP?5?$DN?5CALL?5TAuctionBid?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	' ? = CALL TAuctionBid(?,?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPAuctionBid@@6B@
CONST	SEGMENT
??_7CSPAuctionBid@@6B@ DD FLAT:??_ECSPAuctionBid@@UAEPAXI@Z ; CSPAuctionBid::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPAuctionBid@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPAuctionBid@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPAuctionBid@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T190010 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPAuctionBid@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPAuctionBid::CSPAuctionBid, COMDAT
; _this$ = ecx

; 5577 : DEF_QUERY(CSPAuctionBid, _T("{ ? = CALL TAuctionBid(?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPAuctionBid@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CJ@EJJPIBAB@?$HL?5?$DP?5?$DN?5CALL?5TAuctionBid?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T190010[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPAuctionBid@@6B@
  0005e	72 0d		 jb	 SHORT $L190183
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L190183:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L190011:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPAuctionBid@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T190182
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPAuctionBid@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPAuctionBid::CSPAuctionBid
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPAuctionBid@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPAuctionBid@@UAEHXZ PROC NEAR		; CSPAuctionBid::GetNumParam, COMDAT
; _this$ = ecx

; 5578 : BEGIN_PARAM(9)

  00000	b8 09 00 00 00	 mov	 eax, 9
  00005	c3		 ret	 0
?GetNumParam@CSPAuctionBid@@UAEHXZ ENDP			; CSPAuctionBid::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPAuctionBid@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPAuctionBid@@UAEFH@Z PROC NEAR	; CSPAuctionBid::BindParameters, COMDAT
; _this$ = ecx

; 5578 : BEGIN_PARAM(9)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5579 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_nRET)	

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L139151
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L139151
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 43 01 00
	00		 jne	 $L139146
$L139151:

; 5580 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wNpcID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L139152
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L139152:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L139153
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 18 01 00
	00		 jne	 $L139146
$L139153:

; 5581 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwAuctionID)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L139154
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139154:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L139155
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 ed 00 00
	00		 jne	 $L139146
$L139155:

; 5582 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCharID)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L139156
  00096	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139156:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 0a		 je	 SHORT $L139157
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 c2 00 00
	00		 jne	 $L139146
$L139157:

; 5583 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_ldwBidPrice)

  000b7	3b fb		 cmp	 edi, ebx
  000b9	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bf	75 12		 jne	 SHORT $L139158
  000c1	8d 8e 40 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3136]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 01		 push	 1
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
$L139158:
  000d3	66 3b c3	 cmp	 ax, bx
  000d6	74 0a		 je	 SHORT $L139159
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 97 00 00
	00		 jne	 $L139146
$L139159:

; 5584 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_ldwDropBidPrice)

  000e2	3b fb		 cmp	 edi, ebx
  000e4	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000ea	75 12		 jne	 SHORT $L139160
  000ec	8d 96 50 0c 00
	00		 lea	 edx, DWORD PTR [esi+3152]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 04		 push	 4
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
$L139160:
  000fe	66 3b c3	 cmp	 ax, bx
  00101	74 06		 je	 SHORT $L139161
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	75 70		 jne	 SHORT $L139146
$L139161:

; 5585 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwDropBidder)

  00109	3b fb		 cmp	 edi, ebx
  0010b	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00111	75 12		 jne	 SHORT $L139162
  00113	8d 86 48 0c 00
	00		 lea	 eax, DWORD PTR [esi+3144]
  00119	50		 push	 eax
  0011a	6a 07		 push	 7
  0011c	6a 04		 push	 4
  0011e	8b ce		 mov	 ecx, esi
  00120	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139162:
  00125	66 3b c3	 cmp	 ax, bx
  00128	74 06		 je	 SHORT $L139163
  0012a	66 3d 01 00	 cmp	 ax, 1
  0012e	75 49		 jne	 SHORT $L139146
$L139163:

; 5586 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szDropBidder)

  00130	3b fb		 cmp	 edi, ebx
  00132	c7 86 2c 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2092], -3 ; fffffffdH
  0013c	75 14		 jne	 SHORT $L139164
  0013e	6a 33		 push	 51			; 00000033H
  00140	8d 8e 58 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3160]
  00146	51		 push	 ecx
  00147	6a 08		 push	 8
  00149	6a 04		 push	 4
  0014b	8b ce		 mov	 ecx, esi
  0014d	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L139164:
  00152	66 3b c3	 cmp	 ax, bx
  00155	74 06		 je	 SHORT $L139165
  00157	66 3d 01 00	 cmp	 ax, 1
  0015b	75 1c		 jne	 SHORT $L139146
$L139165:

; 5587 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dBid)

  0015d	3b fb		 cmp	 edi, ebx
  0015f	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  00165	75 12		 jne	 SHORT $L139146
  00167	8d 96 8c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3212]
  0016d	52		 push	 edx
  0016e	6a 09		 push	 9
  00170	6a 04		 push	 4
  00172	8b ce		 mov	 ecx, esi
  00174	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L139146:
  00179	5f		 pop	 edi
  0017a	5e		 pop	 esi
  0017b	5b		 pop	 ebx

; 5588 : END_PARAM()

  0017c	c2 04 00	 ret	 4
?BindParameters@CSPAuctionBid@@UAEFH@Z ENDP		; CSPAuctionBid::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPAuctionBid@@UAE@XZ			; CSPAuctionBid::~CSPAuctionBid
; Function compile flags: /Ogty
;	COMDAT ??_GCSPAuctionBid@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPAuctionBid@@UAEPAXI@Z PROC NEAR			; CSPAuctionBid::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPAuctionBid@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L190197
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L190197:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPAuctionBid@@UAEPAXI@Z ENDP			; CSPAuctionBid::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPAuctionBid@@UAE@XZ
_TEXT	SEGMENT
??1CSPAuctionBid@@UAE@XZ PROC NEAR			; CSPAuctionBid::~CSPAuctionBid, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPAuctionBid@@UAE@XZ ENDP				; CSPAuctionBid::~CSPAuctionBid
_TEXT	ENDS
PUBLIC	??0CSPAuctionEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPAuctionEnd::CSPAuctionEnd
PUBLIC	?GetNumParam@CSPAuctionEnd@@UAEHXZ		; CSPAuctionEnd::GetNumParam
PUBLIC	?BindParameters@CSPAuctionEnd@@UAEFH@Z		; CSPAuctionEnd::BindParameters
PUBLIC	??_7CSPAuctionEnd@@6B@				; CSPAuctionEnd::`vftable'
PUBLIC	??_GCSPAuctionEnd@@UAEPAXI@Z			; CSPAuctionEnd::`scalar deleting destructor'
PUBLIC	??_C@_0CH@FCCGOHHA@?$HL?5?$DP?5?$DN?5CALL?5TAuctionEnd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPAuctionEnd@@UAEPAXI@Z:NEAR		; CSPAuctionEnd::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T190380 DD	0ffffffffH
	DD	FLAT:$L190206
$T190377 DD	019930520H
	DD	01H
	DD	FLAT:$T190380
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CH@FCCGOHHA@?$HL?5?$DP?5?$DN?5CALL?5TAuctionEnd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CH@FCCGOHHA@?$HL?5?$DP?5?$DN?5CALL?5TAuctionEnd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	' ? = CALL TAuctionEnd(?,?,?,?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPAuctionEnd@@6B@
CONST	SEGMENT
??_7CSPAuctionEnd@@6B@ DD FLAT:??_ECSPAuctionEnd@@UAEPAXI@Z ; CSPAuctionEnd::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPAuctionEnd@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPAuctionEnd@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPAuctionEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T190205 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPAuctionEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPAuctionEnd::CSPAuctionEnd, COMDAT
; _this$ = ecx

; 5605 : DEF_QUERY(CSPAuctionEnd, _T("{ ? = CALL TAuctionEnd(?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPAuctionEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CH@FCCGOHHA@?$HL?5?$DP?5?$DN?5CALL?5TAuctionEnd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T190205[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPAuctionEnd@@6B@
  0005e	72 0d		 jb	 SHORT $L190378
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L190378:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L190206:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPAuctionEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T190377
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPAuctionEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPAuctionEnd::CSPAuctionEnd
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPAuctionEnd@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPAuctionEnd@@UAEHXZ PROC NEAR		; CSPAuctionEnd::GetNumParam, COMDAT
; _this$ = ecx

; 5606 : BEGIN_PARAM(8)

  00000	b8 08 00 00 00	 mov	 eax, 8
  00005	c3		 ret	 0
?GetNumParam@CSPAuctionEnd@@UAEHXZ ENDP			; CSPAuctionEnd::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPAuctionEnd@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPAuctionEnd@@UAEFH@Z PROC NEAR	; CSPAuctionEnd::BindParameters, COMDAT
; _this$ = ecx

; 5606 : BEGIN_PARAM(8)

  00000	55		 push	 ebp
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5607 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_nRET)	

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 ed		 xor	 ebp, ebp
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fd		 cmp	 edi, ebp
  0000f	89 ae 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebp
  00015	75 1f		 jne	 SHORT $L190389
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c5	 cmp	 ax, bp
  0002a	74 0a		 je	 SHORT $L190389
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 1e 01 00
	00		 jne	 $L139212
$L190389:

; 5608 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wNpcID)

  00036	3b fd		 cmp	 edi, ebp
  00038	89 ae 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebp
  0003e	75 12		 jne	 SHORT $L190392
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L190392:
  00052	66 3b c5	 cmp	 ax, bp
  00055	74 0a		 je	 SHORT $L190394
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 f3 00 00
	00		 jne	 $L139212
$L190394:

; 5609 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwAuctionID)

  00061	3b fd		 cmp	 edi, ebp
  00063	89 ae 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebp
  00069	75 12		 jne	 SHORT $L190395
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L190395:
  0007d	66 3b c5	 cmp	 ax, bp
  00080	74 0a		 je	 SHORT $L190396
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 c8 00 00
	00		 jne	 $L139212
$L190396:

; 5610 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_dwBuyer)

  0008c	3b fd		 cmp	 edi, ebp
  0008e	89 ae 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebp
  00094	75 12		 jne	 SHORT $L190393
  00096	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 04		 push	 4
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L190393:
  000a8	66 3b c5	 cmp	 ax, bp
  000ab	74 0a		 je	 SHORT $L190397
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 9d 00 00
	00		 jne	 $L139212
$L190397:

; 5611 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_dwSeller)

  000b7	3b fd		 cmp	 edi, ebp
  000b9	89 ae 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebp
  000bf	75 12		 jne	 SHORT $L139224
  000c1	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 04		 push	 4
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139224:
  000d3	66 3b c5	 cmp	 ax, bp
  000d6	74 06		 je	 SHORT $L139225
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	75 76		 jne	 SHORT $L139212
$L139225:

; 5612 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szBuyer)

  000de	3b fd		 cmp	 edi, ebp
  000e0	c7 86 24 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2084], -3 ; fffffffdH
  000ea	75 14		 jne	 SHORT $L139226
  000ec	6a 33		 push	 51			; 00000033H
  000ee	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  000f4	52		 push	 edx
  000f5	6a 06		 push	 6
  000f7	6a 04		 push	 4
  000f9	8b ce		 mov	 ecx, esi
  000fb	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L139226:
  00100	66 3b c5	 cmp	 ax, bp
  00103	74 06		 je	 SHORT $L190390
  00105	66 3d 01 00	 cmp	 ax, 1
  00109	75 49		 jne	 SHORT $L139212
$L190390:

; 5613 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szSeller)

  0010b	3b fd		 cmp	 edi, ebp
  0010d	c7 86 28 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2088], -3 ; fffffffdH
  00117	75 14		 jne	 SHORT $L190391
  00119	6a 33		 push	 51			; 00000033H
  0011b	8d 86 73 0c 00
	00		 lea	 eax, DWORD PTR [esi+3187]
  00121	50		 push	 eax
  00122	6a 07		 push	 7
  00124	6a 04		 push	 4
  00126	8b ce		 mov	 ecx, esi
  00128	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L190391:
  0012d	66 3b c5	 cmp	 ax, bp
  00130	74 06		 je	 SHORT $L139229
  00132	66 3d 01 00	 cmp	 ax, 1
  00136	75 1c		 jne	 SHORT $L139212
$L139229:

; 5614 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_ldwPrice)	

  00138	3b fd		 cmp	 edi, ebp
  0013a	89 ae 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebp
  00140	75 12		 jne	 SHORT $L139212
  00142	8d 8e a8 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3240]
  00148	51		 push	 ecx
  00149	6a 08		 push	 8
  0014b	6a 04		 push	 4
  0014d	8b ce		 mov	 ecx, esi
  0014f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
$L139212:
  00154	5f		 pop	 edi
  00155	5e		 pop	 esi
  00156	5d		 pop	 ebp

; 5615 : END_PARAM()

  00157	c2 04 00	 ret	 4
?BindParameters@CSPAuctionEnd@@UAEFH@Z ENDP		; CSPAuctionEnd::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPAuctionEnd@@UAE@XZ			; CSPAuctionEnd::~CSPAuctionEnd
; Function compile flags: /Ogty
;	COMDAT ??_GCSPAuctionEnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPAuctionEnd@@UAEPAXI@Z PROC NEAR			; CSPAuctionEnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPAuctionEnd@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L190401
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L190401:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPAuctionEnd@@UAEPAXI@Z ENDP			; CSPAuctionEnd::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPAuctionEnd@@UAE@XZ
_TEXT	SEGMENT
??1CSPAuctionEnd@@UAE@XZ PROC NEAR			; CSPAuctionEnd::~CSPAuctionEnd, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPAuctionEnd@@UAE@XZ ENDP				; CSPAuctionEnd::~CSPAuctionEnd
_TEXT	ENDS
PUBLIC	??_7CSPAuctionBuyDirect@@6B@			; CSPAuctionBuyDirect::`vftable'
PUBLIC	??_GCSPAuctionBuyDirect@@UAEPAXI@Z		; CSPAuctionBuyDirect::`scalar deleting destructor'
PUBLIC	??_C@_0DD@PNGBOCNJ@?$HL?5?$DP?5?$DN?5CALL?5TAuctionBuyDirect?$CI?$DP?0?$DP@ ; `string'
PUBLIC	??0CSPAuctionBuyDirect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPAuctionBuyDirect::CSPAuctionBuyDirect
PUBLIC	?GetNumParam@CSPAuctionBuyDirect@@UAEHXZ	; CSPAuctionBuyDirect::GetNumParam
PUBLIC	?BindParameters@CSPAuctionBuyDirect@@UAEFH@Z	; CSPAuctionBuyDirect::BindParameters
EXTRN	??_ECSPAuctionBuyDirect@@UAEPAXI@Z:NEAR		; CSPAuctionBuyDirect::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T190584 DD	0ffffffffH
	DD	FLAT:$L190410
$T190581 DD	019930520H
	DD	01H
	DD	FLAT:$T190584
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DD@PNGBOCNJ@?$HL?5?$DP?5?$DN?5CALL?5TAuctionBuyDirect?$CI?$DP?0?$DP@
CONST	SEGMENT
??_C@_0DD@PNGBOCNJ@?$HL?5?$DP?5?$DN?5CALL?5TAuctionBuyDirect?$CI?$DP?0?$DP@ DB '{'
	DB	' ? = CALL TAuctionBuyDirect(?,?,?,?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPAuctionBuyDirect@@6B@
CONST	SEGMENT
??_7CSPAuctionBuyDirect@@6B@ DD FLAT:??_ECSPAuctionBuyDirect@@UAEPAXI@Z ; CSPAuctionBuyDirect::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPAuctionBuyDirect@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPAuctionBuyDirect@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPAuctionBuyDirect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T190409 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPAuctionBuyDirect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPAuctionBuyDirect::CSPAuctionBuyDirect, COMDAT
; _this$ = ecx

; 5634 : DEF_QUERY(CSPAuctionBuyDirect, _T("{ ? = CALL TAuctionBuyDirect(?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPAuctionBuyDirect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DD@PNGBOCNJ@?$HL?5?$DP?5?$DN?5CALL?5TAuctionBuyDirect?$CI?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T190409[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPAuctionBuyDirect@@6B@
  0005e	72 0d		 jb	 SHORT $L190582
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L190582:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L190410:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPAuctionBuyDirect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T190581
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPAuctionBuyDirect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPAuctionBuyDirect::CSPAuctionBuyDirect
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPAuctionBuyDirect@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPAuctionBuyDirect@@UAEHXZ PROC NEAR	; CSPAuctionBuyDirect::GetNumParam, COMDAT
; _this$ = ecx

; 5635 : BEGIN_PARAM(11)

  00000	b8 0b 00 00 00	 mov	 eax, 11			; 0000000bH
  00005	c3		 ret	 0
?GetNumParam@CSPAuctionBuyDirect@@UAEHXZ ENDP		; CSPAuctionBuyDirect::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPAuctionBuyDirect@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPAuctionBuyDirect@@UAEFH@Z PROC NEAR	; CSPAuctionBuyDirect::BindParameters, COMDAT
; _this$ = ecx

; 5635 : BEGIN_PARAM(11)

  00000	55		 push	 ebp
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5636 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_nRET)	

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 ed		 xor	 ebp, ebp
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fd		 cmp	 edi, ebp
  0000f	89 ae 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebp
  00015	75 1f		 jne	 SHORT $L190593
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c5	 cmp	 ax, bp
  0002a	74 0a		 je	 SHORT $L190593
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 9f 01 00
	00		 jne	 $L139279
$L190593:

; 5637 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wNpcID)

  00036	3b fd		 cmp	 edi, ebp
  00038	89 ae 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebp
  0003e	75 12		 jne	 SHORT $L190596
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L190596:
  00052	66 3b c5	 cmp	 ax, bp
  00055	74 0a		 je	 SHORT $L190598
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 74 01 00
	00		 jne	 $L139279
$L190598:

; 5638 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwAuctionID)

  00061	3b fd		 cmp	 edi, ebp
  00063	89 ae 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebp
  00069	75 12		 jne	 SHORT $L190599
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L190599:
  0007d	66 3b c5	 cmp	 ax, bp
  00080	74 0a		 je	 SHORT $L190600
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 49 01 00
	00		 jne	 $L139279
$L190600:

; 5639 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCharID)

  0008c	3b fd		 cmp	 edi, ebp
  0008e	89 ae 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebp
  00094	75 12		 jne	 SHORT $L190597
  00096	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L190597:
  000a8	66 3b c5	 cmp	 ax, bp
  000ab	74 0a		 je	 SHORT $L190601
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 1e 01 00
	00		 jne	 $L139279
$L190601:

; 5640 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bBuyCount)

  000b7	3b fd		 cmp	 edi, ebp
  000b9	89 ae 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebp
  000bf	75 12		 jne	 SHORT $L190602
  000c1	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 01		 push	 1
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L190602:
  000d3	66 3b c5	 cmp	 ax, bp
  000d6	74 0a		 je	 SHORT $L190603
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 f3 00 00
	00		 jne	 $L139279
$L190603:

; 5641 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_ldwBidPrice)

  000e2	3b fd		 cmp	 edi, ebp
  000e4	89 ae 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebp
  000ea	75 12		 jne	 SHORT $L190604
  000ec	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 01		 push	 1
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
$L190604:
  000fe	66 3b c5	 cmp	 ax, bp
  00101	74 0a		 je	 SHORT $L190605
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	0f 85 c8 00 00
	00		 jne	 $L139279
$L190605:

; 5642 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_dwSeller)

  0010d	3b fd		 cmp	 edi, ebp
  0010f	89 ae 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebp
  00115	75 12		 jne	 SHORT $L139295
  00117	8d 86 48 0c 00
	00		 lea	 eax, DWORD PTR [esi+3144]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 04		 push	 4
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139295:
  00129	66 3b c5	 cmp	 ax, bp
  0012c	74 0a		 je	 SHORT $L139296
  0012e	66 3d 01 00	 cmp	 ax, 1
  00132	0f 85 9d 00 00
	00		 jne	 $L139279
$L139296:

; 5643 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szSeller)

  00138	3b fd		 cmp	 edi, ebp
  0013a	c7 86 2c 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2092], -3 ; fffffffdH
  00144	75 14		 jne	 SHORT $L139297
  00146	6a 33		 push	 51			; 00000033H
  00148	8d 8e 4c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3148]
  0014e	51		 push	 ecx
  0014f	6a 08		 push	 8
  00151	6a 04		 push	 4
  00153	8b ce		 mov	 ecx, esi
  00155	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L139297:
  0015a	66 3b c5	 cmp	 ax, bp
  0015d	74 06		 je	 SHORT $L190594
  0015f	66 3d 01 00	 cmp	 ax, 1
  00163	75 70		 jne	 SHORT $L139279
$L190594:

; 5644 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_dwDropBidder)

  00165	3b fd		 cmp	 edi, ebp
  00167	89 ae 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebp
  0016d	75 12		 jne	 SHORT $L139299
  0016f	8d 96 80 0c 00
	00		 lea	 edx, DWORD PTR [esi+3200]
  00175	52		 push	 edx
  00176	6a 09		 push	 9
  00178	6a 04		 push	 4
  0017a	8b ce		 mov	 ecx, esi
  0017c	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139299:
  00181	66 3b c5	 cmp	 ax, bp
  00184	74 06		 je	 SHORT $L139300
  00186	66 3d 01 00	 cmp	 ax, 1
  0018a	75 49		 jne	 SHORT $L139279
$L139300:

; 5645 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szDropBidder)

  0018c	3b fd		 cmp	 edi, ebp
  0018e	c7 86 34 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2100], -3 ; fffffffdH
  00198	75 14		 jne	 SHORT $L190595
  0019a	6a 33		 push	 51			; 00000033H
  0019c	8d 86 84 0c 00
	00		 lea	 eax, DWORD PTR [esi+3204]
  001a2	50		 push	 eax
  001a3	6a 0a		 push	 10			; 0000000aH
  001a5	6a 04		 push	 4
  001a7	8b ce		 mov	 ecx, esi
  001a9	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L190595:
  001ae	66 3b c5	 cmp	 ax, bp
  001b1	74 06		 je	 SHORT $L139302
  001b3	66 3d 01 00	 cmp	 ax, 1
  001b7	75 1c		 jne	 SHORT $L139279
$L139302:

; 5646 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_ldwDropBidPrice)	

  001b9	3b fd		 cmp	 edi, ebp
  001bb	89 ae 38 08 00
	00		 mov	 DWORD PTR [esi+2104], ebp
  001c1	75 12		 jne	 SHORT $L139279
  001c3	8d 8e b8 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3256]
  001c9	51		 push	 ecx
  001ca	6a 0b		 push	 11			; 0000000bH
  001cc	6a 04		 push	 4
  001ce	8b ce		 mov	 ecx, esi
  001d0	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
$L139279:
  001d5	5f		 pop	 edi
  001d6	5e		 pop	 esi
  001d7	5d		 pop	 ebp

; 5647 : END_PARAM()

  001d8	c2 04 00	 ret	 4
?BindParameters@CSPAuctionBuyDirect@@UAEFH@Z ENDP	; CSPAuctionBuyDirect::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPAuctionBuyDirect@@UAE@XZ			; CSPAuctionBuyDirect::~CSPAuctionBuyDirect
; Function compile flags: /Ogty
;	COMDAT ??_GCSPAuctionBuyDirect@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPAuctionBuyDirect@@UAEPAXI@Z PROC NEAR		; CSPAuctionBuyDirect::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPAuctionBuyDirect@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L190609
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L190609:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPAuctionBuyDirect@@UAEPAXI@Z ENDP			; CSPAuctionBuyDirect::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPAuctionBuyDirect@@UAE@XZ
_TEXT	SEGMENT
??1CSPAuctionBuyDirect@@UAE@XZ PROC NEAR		; CSPAuctionBuyDirect::~CSPAuctionBuyDirect, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPAuctionBuyDirect@@UAE@XZ ENDP			; CSPAuctionBuyDirect::~CSPAuctionBuyDirect
_TEXT	ENDS
PUBLIC	??0CSPSaveAuctionInterest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveAuctionInterest::CSPSaveAuctionInterest
PUBLIC	?GetNumParam@CSPSaveAuctionInterest@@UAEHXZ	; CSPSaveAuctionInterest::GetNumParam
PUBLIC	?BindParameters@CSPSaveAuctionInterest@@UAEFH@Z	; CSPSaveAuctionInterest::BindParameters
PUBLIC	??_7CSPSaveAuctionInterest@@6B@			; CSPSaveAuctionInterest::`vftable'
PUBLIC	??_GCSPSaveAuctionInterest@@UAEPAXI@Z		; CSPSaveAuctionInterest::`scalar deleting destructor'
PUBLIC	??_C@_0CB@LACBEJAB@?$HLCALL?5TSaveAuctionInterest?$CI?$DP?0?$DP?$CJ?$HN@ ; `string'
EXTRN	??_ECSPSaveAuctionInterest@@UAEPAXI@Z:NEAR	; CSPSaveAuctionInterest::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T190792 DD	0ffffffffH
	DD	FLAT:$L190618
$T190789 DD	019930520H
	DD	01H
	DD	FLAT:$T190792
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CB@LACBEJAB@?$HLCALL?5TSaveAuctionInterest?$CI?$DP?0?$DP?$CJ?$HN@
CONST	SEGMENT
??_C@_0CB@LACBEJAB@?$HLCALL?5TSaveAuctionInterest?$CI?$DP?0?$DP?$CJ?$HN@ DB '{'
	DB	'CALL TSaveAuctionInterest(?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveAuctionInterest@@6B@
CONST	SEGMENT
??_7CSPSaveAuctionInterest@@6B@ DD FLAT:??_ECSPSaveAuctionInterest@@UAEPAXI@Z ; CSPSaveAuctionInterest::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveAuctionInterest@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveAuctionInterest@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveAuctionInterest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T190617 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveAuctionInterest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveAuctionInterest::CSPSaveAuctionInterest, COMDAT
; _this$ = ecx

; 5656 : DEF_QUERY(CSPSaveAuctionInterest, _T("{CALL TSaveAuctionInterest(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveAuctionInterest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CB@LACBEJAB@?$HLCALL?5TSaveAuctionInterest?$CI?$DP?0?$DP?$CJ?$HN@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T190617[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveAuctionInterest@@6B@
  0005e	72 0d		 jb	 SHORT $L190790
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L190790:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L190618:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveAuctionInterest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T190789
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveAuctionInterest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveAuctionInterest::CSPSaveAuctionInterest
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveAuctionInterest@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveAuctionInterest@@UAEHXZ PROC NEAR	; CSPSaveAuctionInterest::GetNumParam, COMDAT
; _this$ = ecx

; 5658 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPSaveAuctionInterest@@UAEHXZ ENDP	; CSPSaveAuctionInterest::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveAuctionInterest@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveAuctionInterest@@UAEFH@Z PROC NEAR ; CSPSaveAuctionInterest::BindParameters, COMDAT
; _this$ = ecx

; 5658 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 5659 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L139348
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L139348
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L139343
$L139348:

; 5660 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwAuctionID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L139343
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139343:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 5661 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CSPSaveAuctionInterest@@UAEFH@Z ENDP	; CSPSaveAuctionInterest::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveAuctionInterest@@UAE@XZ		; CSPSaveAuctionInterest::~CSPSaveAuctionInterest
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveAuctionInterest@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveAuctionInterest@@UAEPAXI@Z PROC NEAR		; CSPSaveAuctionInterest::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveAuctionInterest@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L190804
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L190804:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveAuctionInterest@@UAEPAXI@Z ENDP		; CSPSaveAuctionInterest::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveAuctionInterest@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveAuctionInterest@@UAE@XZ PROC NEAR		; CSPSaveAuctionInterest::~CSPSaveAuctionInterest, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveAuctionInterest@@UAE@XZ ENDP			; CSPSaveAuctionInterest::~CSPSaveAuctionInterest
_TEXT	ENDS
PUBLIC	??0CSPGainCashBonus@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGainCashBonus::CSPGainCashBonus
PUBLIC	?GetNumParam@CSPGainCashBonus@@UAEHXZ		; CSPGainCashBonus::GetNumParam
PUBLIC	?BindParameters@CSPGainCashBonus@@UAEFH@Z	; CSPGainCashBonus::BindParameters
PUBLIC	??_7CSPGainCashBonus@@6B@			; CSPGainCashBonus::`vftable'
PUBLIC	??_GCSPGainCashBonus@@UAEPAXI@Z			; CSPGainCashBonus::`scalar deleting destructor'
PUBLIC	??_C@_0CE@DLCKDLE@?$HL?5?$DP?5?$DN?5CALL?5TGainCashBonus?$CI?$DP?0?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPGainCashBonus@@UAEPAXI@Z:NEAR		; CSPGainCashBonus::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T190987 DD	0ffffffffH
	DD	FLAT:$L190813
$T190984 DD	019930520H
	DD	01H
	DD	FLAT:$T190987
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CE@DLCKDLE@?$HL?5?$DP?5?$DN?5CALL?5TGainCashBonus?$CI?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0CE@DLCKDLE@?$HL?5?$DP?5?$DN?5CALL?5TGainCashBonus?$CI?$DP?0?$DP?0?$DP?0@ DB '{'
	DB	' ? = CALL TGainCashBonus(?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPGainCashBonus@@6B@
CONST	SEGMENT
??_7CSPGainCashBonus@@6B@ DD FLAT:??_ECSPGainCashBonus@@UAEPAXI@Z ; CSPGainCashBonus::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGainCashBonus@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGainCashBonus@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGainCashBonus@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T190812 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGainCashBonus@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGainCashBonus::CSPGainCashBonus, COMDAT
; _this$ = ecx

; 5673 : DEF_QUERY(CSPGainCashBonus, _T("{ ? = CALL TGainCashBonus(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGainCashBonus@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CE@DLCKDLE@?$HL?5?$DP?5?$DN?5CALL?5TGainCashBonus?$CI?$DP?0?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T190812[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGainCashBonus@@6B@
  0005e	72 0d		 jb	 SHORT $L190985
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L190985:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L190813:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGainCashBonus@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T190984
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGainCashBonus@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGainCashBonus::CSPGainCashBonus
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGainCashBonus@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGainCashBonus@@UAEHXZ PROC NEAR		; CSPGainCashBonus::GetNumParam, COMDAT
; _this$ = ecx

; 5675 : BEGIN_PARAM(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumParam@CSPGainCashBonus@@UAEHXZ ENDP		; CSPGainCashBonus::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGainCashBonus@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGainCashBonus@@UAEFH@Z PROC NEAR	; CSPGainCashBonus::BindParameters, COMDAT
; _this$ = ecx

; 5675 : BEGIN_PARAM(5)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5676 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_nRet)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L139397
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L139397
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 91 00 00
	00		 jne	 $L139392
$L139397:

; 5677 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCharID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L139398
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139398:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 06		 je	 SHORT $L139399
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	75 6a		 jne	 SHORT $L139392
$L139399:

; 5678 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bInven)

  0005d	3b fb		 cmp	 edi, ebx
  0005f	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00065	75 12		 jne	 SHORT $L139400
  00067	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006d	52		 push	 edx
  0006e	6a 03		 push	 3
  00070	6a 01		 push	 1
  00072	8b ce		 mov	 ecx, esi
  00074	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L139400:
  00079	66 3b c3	 cmp	 ax, bx
  0007c	74 06		 je	 SHORT $L139401
  0007e	66 3d 01 00	 cmp	 ax, 1
  00082	75 43		 jne	 SHORT $L139392
$L139401:

; 5679 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bItem)

  00084	3b fb		 cmp	 edi, ebx
  00086	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  0008c	75 12		 jne	 SHORT $L139402
  0008e	8d 86 35 0c 00
	00		 lea	 eax, DWORD PTR [esi+3125]
  00094	50		 push	 eax
  00095	6a 04		 push	 4
  00097	6a 01		 push	 1
  00099	8b ce		 mov	 ecx, esi
  0009b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L139402:
  000a0	66 3b c3	 cmp	 ax, bx
  000a3	74 06		 je	 SHORT $L139403
  000a5	66 3d 01 00	 cmp	 ax, 1
  000a9	75 1c		 jne	 SHORT $L139392
$L139403:

; 5680 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwBonus)

  000ab	3b fb		 cmp	 edi, ebx
  000ad	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b3	75 12		 jne	 SHORT $L139392
  000b5	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  000bb	51		 push	 ecx
  000bc	6a 05		 push	 5
  000be	6a 01		 push	 1
  000c0	8b ce		 mov	 ecx, esi
  000c2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139392:
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx

; 5681 : END_PARAM()

  000ca	c2 04 00	 ret	 4
?BindParameters@CSPGainCashBonus@@UAEFH@Z ENDP		; CSPGainCashBonus::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGainCashBonus@@UAE@XZ			; CSPGainCashBonus::~CSPGainCashBonus
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGainCashBonus@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGainCashBonus@@UAEPAXI@Z PROC NEAR		; CSPGainCashBonus::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGainCashBonus@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L190999
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L190999:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGainCashBonus@@UAEPAXI@Z ENDP			; CSPGainCashBonus::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGainCashBonus@@UAE@XZ
_TEXT	SEGMENT
??1CSPGainCashBonus@@UAE@XZ PROC NEAR			; CSPGainCashBonus::~CSPGainCashBonus, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGainCashBonus@@UAE@XZ ENDP			; CSPGainCashBonus::~CSPGainCashBonus
_TEXT	ENDS
PUBLIC	??0CSPGetMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetMonthPvPoint::CSPGetMonthPvPoint
PUBLIC	?GetNumParam@CSPGetMonthPvPoint@@UAEHXZ		; CSPGetMonthPvPoint::GetNumParam
PUBLIC	?BindParameters@CSPGetMonthPvPoint@@UAEFH@Z	; CSPGetMonthPvPoint::BindParameters
PUBLIC	??_7CSPGetMonthPvPoint@@6B@			; CSPGetMonthPvPoint::`vftable'
PUBLIC	??_GCSPGetMonthPvPoint@@UAEPAXI@Z		; CSPGetMonthPvPoint::`scalar deleting destructor'
PUBLIC	??_C@_0CF@LINCEDJC@?$HLCALL?5TGetMonthPvPoint?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPGetMonthPvPoint@@UAEPAXI@Z:NEAR		; CSPGetMonthPvPoint::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T191182 DD	0ffffffffH
	DD	FLAT:$L191008
$T191179 DD	019930520H
	DD	01H
	DD	FLAT:$T191182
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CF@LINCEDJC@?$HLCALL?5TGetMonthPvPoint?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CF@LINCEDJC@?$HLCALL?5TGetMonthPvPoint?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	'CALL TGetMonthPvPoint(?,?,?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPGetMonthPvPoint@@6B@
CONST	SEGMENT
??_7CSPGetMonthPvPoint@@6B@ DD FLAT:??_ECSPGetMonthPvPoint@@UAEPAXI@Z ; CSPGetMonthPvPoint::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGetMonthPvPoint@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGetMonthPvPoint@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGetMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T191007 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGetMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGetMonthPvPoint::CSPGetMonthPvPoint, COMDAT
; _this$ = ecx

; 5694 : DEF_QUERY(CSPGetMonthPvPoint, _T("{CALL TGetMonthPvPoint(?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGetMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CF@LINCEDJC@?$HLCALL?5TGetMonthPvPoint?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T191007[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGetMonthPvPoint@@6B@
  0005e	72 0d		 jb	 SHORT $L191180
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L191180:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191008:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGetMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191179
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGetMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGetMonthPvPoint::CSPGetMonthPvPoint
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGetMonthPvPoint@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGetMonthPvPoint@@UAEHXZ PROC NEAR	; CSPGetMonthPvPoint::GetNumParam, COMDAT
; _this$ = ecx

; 5696 : BEGIN_PARAM(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumParam@CSPGetMonthPvPoint@@UAEHXZ ENDP		; CSPGetMonthPvPoint::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetMonthPvPoint@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGetMonthPvPoint@@UAEFH@Z PROC NEAR	; CSPGetMonthPvPoint::BindParameters, COMDAT
; _this$ = ecx

; 5696 : BEGIN_PARAM(6)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5697 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCharID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L139453
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L139453
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 bc 00 00
	00		 jne	 $L139448
$L139453:

; 5698 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_dwMonthPvPoint)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L139454
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 04		 push	 4
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139454:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L139455
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 91 00 00
	00		 jne	 $L139448
$L139455:

; 5699 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_wMonthWin)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L139456
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 04		 push	 4
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L139456:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 06		 je	 SHORT $L139457
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 6a		 jne	 SHORT $L139448
$L139457:

; 5700 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_wMonthLose)

  00088	3b fb		 cmp	 edi, ebx
  0008a	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00090	75 12		 jne	 SHORT $L139458
  00092	8d 86 36 0c 00
	00		 lea	 eax, DWORD PTR [esi+3126]
  00098	50		 push	 eax
  00099	6a 04		 push	 4
  0009b	6a 04		 push	 4
  0009d	8b ce		 mov	 ecx, esi
  0009f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L139458:
  000a4	66 3b c3	 cmp	 ax, bx
  000a7	74 06		 je	 SHORT $L139459
  000a9	66 3d 01 00	 cmp	 ax, 1
  000ad	75 43		 jne	 SHORT $L139448
$L139459:

; 5701 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_dwMonthRankOrder)

  000af	3b fb		 cmp	 edi, ebx
  000b1	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b7	75 12		 jne	 SHORT $L139460
  000b9	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  000bf	51		 push	 ecx
  000c0	6a 05		 push	 5
  000c2	6a 04		 push	 4
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139460:
  000cb	66 3b c3	 cmp	 ax, bx
  000ce	74 06		 je	 SHORT $L139461
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	75 1c		 jne	 SHORT $L139448
$L139461:

; 5702 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_bMonthRankPercent)

  000d6	3b fb		 cmp	 edi, ebx
  000d8	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000de	75 12		 jne	 SHORT $L139448
  000e0	8d 96 3c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3132]
  000e6	52		 push	 edx
  000e7	6a 06		 push	 6
  000e9	6a 04		 push	 4
  000eb	8b ce		 mov	 ecx, esi
  000ed	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L139448:
  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx

; 5703 : END_PARAM()

  000f5	c2 04 00	 ret	 4
?BindParameters@CSPGetMonthPvPoint@@UAEFH@Z ENDP	; CSPGetMonthPvPoint::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGetMonthPvPoint@@UAE@XZ			; CSPGetMonthPvPoint::~CSPGetMonthPvPoint
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGetMonthPvPoint@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGetMonthPvPoint@@UAEPAXI@Z PROC NEAR		; CSPGetMonthPvPoint::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGetMonthPvPoint@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L191194
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L191194:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGetMonthPvPoint@@UAEPAXI@Z ENDP			; CSPGetMonthPvPoint::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGetMonthPvPoint@@UAE@XZ
_TEXT	SEGMENT
??1CSPGetMonthPvPoint@@UAE@XZ PROC NEAR			; CSPGetMonthPvPoint::~CSPGetMonthPvPoint, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGetMonthPvPoint@@UAE@XZ ENDP			; CSPGetMonthPvPoint::~CSPGetMonthPvPoint
_TEXT	ENDS
PUBLIC	??0CSPSaveMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveMonthPvPoint::CSPSaveMonthPvPoint
PUBLIC	?GetNumParam@CSPSaveMonthPvPoint@@UAEHXZ	; CSPSaveMonthPvPoint::GetNumParam
PUBLIC	?BindParameters@CSPSaveMonthPvPoint@@UAEFH@Z	; CSPSaveMonthPvPoint::BindParameters
PUBLIC	??_7CSPSaveMonthPvPoint@@6B@			; CSPSaveMonthPvPoint::`vftable'
PUBLIC	??_GCSPSaveMonthPvPoint@@UAEPAXI@Z		; CSPSaveMonthPvPoint::`scalar deleting destructor'
PUBLIC	??_C@_0CG@BCLLDKOA@?$HLCALL?5TSaveMonthPvPoint?$CI?$DP?0?$DP?0?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPSaveMonthPvPoint@@UAEPAXI@Z:NEAR		; CSPSaveMonthPvPoint::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T191377 DD	0ffffffffH
	DD	FLAT:$L191203
$T191374 DD	019930520H
	DD	01H
	DD	FLAT:$T191377
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CG@BCLLDKOA@?$HLCALL?5TSaveMonthPvPoint?$CI?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0CG@BCLLDKOA@?$HLCALL?5TSaveMonthPvPoint?$CI?$DP?0?$DP?0?$DP?0?$DP?0@ DB '{'
	DB	'CALL TSaveMonthPvPoint(?,?,?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveMonthPvPoint@@6B@
CONST	SEGMENT
??_7CSPSaveMonthPvPoint@@6B@ DD FLAT:??_ECSPSaveMonthPvPoint@@UAEPAXI@Z ; CSPSaveMonthPvPoint::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveMonthPvPoint@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveMonthPvPoint@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T191202 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveMonthPvPoint::CSPSaveMonthPvPoint, COMDAT
; _this$ = ecx

; 5716 : DEF_QUERY(CSPSaveMonthPvPoint,_T("{CALL TSaveMonthPvPoint(?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CG@BCLLDKOA@?$HLCALL?5TSaveMonthPvPoint?$CI?$DP?0?$DP?0?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T191202[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveMonthPvPoint@@6B@
  0005e	72 0d		 jb	 SHORT $L191375
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L191375:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191203:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191374
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveMonthPvPoint::CSPSaveMonthPvPoint
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveMonthPvPoint@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveMonthPvPoint@@UAEHXZ PROC NEAR	; CSPSaveMonthPvPoint::GetNumParam, COMDAT
; _this$ = ecx

; 5718 : BEGIN_PARAM(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumParam@CSPSaveMonthPvPoint@@UAEHXZ ENDP		; CSPSaveMonthPvPoint::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveMonthPvPoint@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveMonthPvPoint@@UAEFH@Z PROC NEAR	; CSPSaveMonthPvPoint::BindParameters, COMDAT
; _this$ = ecx

; 5718 : BEGIN_PARAM(6)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5719 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCharID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L139511
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L139511
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 c5 00 00
	00		 jne	 $L139506
$L139511:

; 5720 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwPoint)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L139512
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139512:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L139513
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 9a 00 00
	00		 jne	 $L139506
$L139513:

; 5721 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wWin)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L139514
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L139514:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 06		 je	 SHORT $L139515
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 73		 jne	 SHORT $L139506
$L139515:

; 5722 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wLose)	

  00088	3b fb		 cmp	 edi, ebx
  0008a	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00090	75 12		 jne	 SHORT $L139516
  00092	8d 86 36 0c 00
	00		 lea	 eax, DWORD PTR [esi+3126]
  00098	50		 push	 eax
  00099	6a 04		 push	 4
  0009b	6a 01		 push	 1
  0009d	8b ce		 mov	 ecx, esi
  0009f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L139516:
  000a4	66 3b c3	 cmp	 ax, bx
  000a7	74 06		 je	 SHORT $L139517
  000a9	66 3d 01 00	 cmp	 ax, 1
  000ad	75 4c		 jne	 SHORT $L139506
$L139517:

; 5723 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT,m_szSay)	

  000af	3b fb		 cmp	 edi, ebx
  000b1	c7 86 20 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2080], -3 ; fffffffdH
  000bb	75 17		 jne	 SHORT $L139518
  000bd	68 01 01 00 00	 push	 257			; 00000101H
  000c2	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  000c8	51		 push	 ecx
  000c9	6a 05		 push	 5
  000cb	6a 01		 push	 1
  000cd	8b ce		 mov	 ecx, esi
  000cf	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L139518:
  000d4	66 3b c3	 cmp	 ax, bx
  000d7	74 06		 je	 SHORT $L139519
  000d9	66 3d 01 00	 cmp	 ax, 1
  000dd	75 1c		 jne	 SHORT $L139506
$L139519:

; 5724 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bCountry)

  000df	3b fb		 cmp	 edi, ebx
  000e1	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000e7	75 12		 jne	 SHORT $L139506
  000e9	8d 96 39 0d 00
	00		 lea	 edx, DWORD PTR [esi+3385]
  000ef	52		 push	 edx
  000f0	6a 06		 push	 6
  000f2	6a 01		 push	 1
  000f4	8b ce		 mov	 ecx, esi
  000f6	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L139506:
  000fb	5f		 pop	 edi
  000fc	5e		 pop	 esi
  000fd	5b		 pop	 ebx

; 5725 : END_PARAM()

  000fe	c2 04 00	 ret	 4
?BindParameters@CSPSaveMonthPvPoint@@UAEFH@Z ENDP	; CSPSaveMonthPvPoint::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveMonthPvPoint@@UAE@XZ			; CSPSaveMonthPvPoint::~CSPSaveMonthPvPoint
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveMonthPvPoint@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveMonthPvPoint@@UAEPAXI@Z PROC NEAR		; CSPSaveMonthPvPoint::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveMonthPvPoint@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L191389
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L191389:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveMonthPvPoint@@UAEPAXI@Z ENDP			; CSPSaveMonthPvPoint::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveMonthPvPoint@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveMonthPvPoint@@UAE@XZ PROC NEAR		; CSPSaveMonthPvPoint::~CSPSaveMonthPvPoint, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveMonthPvPoint@@UAE@XZ ENDP			; CSPSaveMonthPvPoint::~CSPSaveMonthPvPoint
_TEXT	ENDS
PUBLIC	??0CSPSaveWarlordSay@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveWarlordSay::CSPSaveWarlordSay
PUBLIC	?GetNumParam@CSPSaveWarlordSay@@UAEHXZ		; CSPSaveWarlordSay::GetNumParam
PUBLIC	?BindParameters@CSPSaveWarlordSay@@UAEFH@Z	; CSPSaveWarlordSay::BindParameters
PUBLIC	??_7CSPSaveWarlordSay@@6B@			; CSPSaveWarlordSay::`vftable'
PUBLIC	??_GCSPSaveWarlordSay@@UAEPAXI@Z		; CSPSaveWarlordSay::`scalar deleting destructor'
PUBLIC	??_C@_0CE@EICKELFH@?$HL?$DP?5?$DN?5CALL?5TSaveWarlordSay?$CI?$DP?0?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPSaveWarlordSay@@UAEPAXI@Z:NEAR		; CSPSaveWarlordSay::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T191572 DD	0ffffffffH
	DD	FLAT:$L191398
$T191569 DD	019930520H
	DD	01H
	DD	FLAT:$T191572
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CE@EICKELFH@?$HL?$DP?5?$DN?5CALL?5TSaveWarlordSay?$CI?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0CE@EICKELFH@?$HL?$DP?5?$DN?5CALL?5TSaveWarlordSay?$CI?$DP?0?$DP?0?$DP?0@ DB '{'
	DB	'? = CALL TSaveWarlordSay(?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveWarlordSay@@6B@
CONST	SEGMENT
??_7CSPSaveWarlordSay@@6B@ DD FLAT:??_ECSPSaveWarlordSay@@UAEPAXI@Z ; CSPSaveWarlordSay::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveWarlordSay@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveWarlordSay@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveWarlordSay@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T191397 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveWarlordSay@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveWarlordSay::CSPSaveWarlordSay, COMDAT
; _this$ = ecx

; 5737 : DEF_QUERY(CSPSaveWarlordSay,_T("{? = CALL TSaveWarlordSay(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveWarlordSay@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CE@EICKELFH@?$HL?$DP?5?$DN?5CALL?5TSaveWarlordSay?$CI?$DP?0?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T191397[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveWarlordSay@@6B@
  0005e	72 0d		 jb	 SHORT $L191570
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L191570:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191398:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveWarlordSay@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191569
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveWarlordSay@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveWarlordSay::CSPSaveWarlordSay
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveWarlordSay@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveWarlordSay@@UAEHXZ PROC NEAR	; CSPSaveWarlordSay::GetNumParam, COMDAT
; _this$ = ecx

; 5739 : BEGIN_PARAM(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumParam@CSPSaveWarlordSay@@UAEHXZ ENDP		; CSPSaveWarlordSay::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveWarlordSay@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveWarlordSay@@UAEFH@Z PROC NEAR	; CSPSaveWarlordSay::BindParameters, COMDAT
; _this$ = ecx

; 5739 : BEGIN_PARAM(5)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5740 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L139568
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L139568
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 9a 00 00
	00		 jne	 $L139563
$L139568:

; 5741 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bType)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L139569
  00040	8d 8e 2d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3117]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L139569:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 06		 je	 SHORT $L139570
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	75 73		 jne	 SHORT $L139563
$L139570:

; 5742 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bRankMonth)

  0005d	3b fb		 cmp	 edi, ebx
  0005f	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00065	75 12		 jne	 SHORT $L139571
  00067	8d 96 2e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3118]
  0006d	52		 push	 edx
  0006e	6a 03		 push	 3
  00070	6a 01		 push	 1
  00072	8b ce		 mov	 ecx, esi
  00074	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L139571:
  00079	66 3b c3	 cmp	 ax, bx
  0007c	74 06		 je	 SHORT $L139572
  0007e	66 3d 01 00	 cmp	 ax, 1
  00082	75 4c		 jne	 SHORT $L139563
$L139572:

; 5743 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCharID)

  00084	3b fb		 cmp	 edi, ebx
  00086	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  0008c	75 12		 jne	 SHORT $L139573
  0008e	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00094	50		 push	 eax
  00095	6a 04		 push	 4
  00097	6a 01		 push	 1
  00099	8b ce		 mov	 ecx, esi
  0009b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139573:
  000a0	66 3b c3	 cmp	 ax, bx
  000a3	74 06		 je	 SHORT $L139574
  000a5	66 3d 01 00	 cmp	 ax, 1
  000a9	75 25		 jne	 SHORT $L139563
$L139574:

; 5744 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT,m_szSay)

  000ab	3b fb		 cmp	 edi, ebx
  000ad	c7 86 20 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2080], -3 ; fffffffdH
  000b7	75 17		 jne	 SHORT $L139563
  000b9	68 01 01 00 00	 push	 257			; 00000101H
  000be	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  000c4	51		 push	 ecx
  000c5	6a 05		 push	 5
  000c7	6a 01		 push	 1
  000c9	8b ce		 mov	 ecx, esi
  000cb	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L139563:
  000d0	5f		 pop	 edi
  000d1	5e		 pop	 esi
  000d2	5b		 pop	 ebx

; 5745 : END_PARAM()	

  000d3	c2 04 00	 ret	 4
?BindParameters@CSPSaveWarlordSay@@UAEFH@Z ENDP		; CSPSaveWarlordSay::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveWarlordSay@@UAE@XZ			; CSPSaveWarlordSay::~CSPSaveWarlordSay
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveWarlordSay@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveWarlordSay@@UAEPAXI@Z PROC NEAR		; CSPSaveWarlordSay::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveWarlordSay@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L191584
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L191584:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveWarlordSay@@UAEPAXI@Z ENDP			; CSPSaveWarlordSay::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveWarlordSay@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveWarlordSay@@UAE@XZ PROC NEAR			; CSPSaveWarlordSay::~CSPSaveWarlordSay, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveWarlordSay@@UAE@XZ ENDP			; CSPSaveWarlordSay::~CSPSaveWarlordSay
_TEXT	ENDS
PUBLIC	??0CSPTournamentReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTournamentReward::CSPTournamentReward
PUBLIC	?GetNumParam@CSPTournamentReward@@UAEHXZ	; CSPTournamentReward::GetNumParam
PUBLIC	?BindParameters@CSPTournamentReward@@UAEFH@Z	; CSPTournamentReward::BindParameters
PUBLIC	??_7CSPTournamentReward@@6B@			; CSPTournamentReward::`vftable'
PUBLIC	??_GCSPTournamentReward@@UAEPAXI@Z		; CSPTournamentReward::`scalar deleting destructor'
PUBLIC	??_C@_0EM@CDGOFCOF@?$HLCALL?5TTournamentReward?$CI?$DP?0?$DP?0?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPTournamentReward@@UAEPAXI@Z:NEAR		; CSPTournamentReward::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T191767 DD	0ffffffffH
	DD	FLAT:$L191593
$T191764 DD	019930520H
	DD	01H
	DD	FLAT:$T191767
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EM@CDGOFCOF@?$HLCALL?5TTournamentReward?$CI?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0EM@CDGOFCOF@?$HLCALL?5TTournamentReward?$CI?$DP?0?$DP?0?$DP?0?$DP?0@ DB '{'
	DB	'CALL TTournamentReward(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,'
	DB	'?,?,?,?,?,?)}', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CSPTournamentReward@@6B@
CONST	SEGMENT
??_7CSPTournamentReward@@6B@ DD FLAT:??_ECSPTournamentReward@@UAEPAXI@Z ; CSPTournamentReward::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPTournamentReward@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPTournamentReward@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPTournamentReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T191592 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPTournamentReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPTournamentReward::CSPTournamentReward, COMDAT
; _this$ = ecx

; 5777 : DEF_QUERY(CSPTournamentReward,_T("{CALL TTournamentReward(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPTournamentReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EM@CDGOFCOF@?$HLCALL?5TTournamentReward?$CI?$DP?0?$DP?0?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T191592[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPTournamentReward@@6B@
  0005e	72 0d		 jb	 SHORT $L191765
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L191765:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191593:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPTournamentReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191764
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPTournamentReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPTournamentReward::CSPTournamentReward
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPTournamentReward@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPTournamentReward@@UAEHXZ PROC NEAR	; CSPTournamentReward::GetNumParam, COMDAT
; _this$ = ecx

; 5779 : BEGIN_PARAM(20)

  00000	b8 14 00 00 00	 mov	 eax, 20			; 00000014H
  00005	c3		 ret	 0
?GetNumParam@CSPTournamentReward@@UAEHXZ ENDP		; CSPTournamentReward::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTournamentReward@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPTournamentReward@@UAEFH@Z PROC NEAR	; CSPTournamentReward::BindParameters, COMDAT
; _this$ = ecx

; 5779 : BEGIN_PARAM(20)

  00000	53		 push	 ebx

; 5780 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_bType)

  00001	8b 5c 24 08	 mov	 ebx, DWORD PTR _bRewind$[esp]
  00005	55		 push	 ebp
  00006	33 ed		 xor	 ebp, ebp
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b dd		 cmp	 ebx, ebp
  0000f	89 ae 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebp
  00015	75 1f		 jne	 SHORT $L139643
  00017	8d 86 3a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3130]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
  00027	66 3b c5	 cmp	 ax, bp
  0002a	74 0a		 je	 SHORT $L139643
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 f9 03 00
	00		 jne	 $L139638
$L139643:

; 5781 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_bOrder)

  00036	3b dd		 cmp	 ebx, ebp
  00038	89 ae 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebp
  0003e	75 12		 jne	 SHORT $L139644
  00040	8d 8e 3b 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3131]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 04		 push	 4
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L139644:
  00052	66 3b c5	 cmp	 ax, bp
  00055	74 0a		 je	 SHORT $L139645
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 ce 03 00
	00		 jne	 $L139638
$L139645:

; 5782 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwMonthRank)

  00061	3b dd		 cmp	 ebx, ebp
  00063	89 ae 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebp
  00069	75 12		 jne	 SHORT $L139646
  0006b	8d 96 3c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3132]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 04		 push	 4
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139646:
  0007d	66 3b c5	 cmp	 ax, bp
  00080	74 0a		 je	 SHORT $L139647
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 a3 03 00
	00		 jne	 $L139638
$L139647:

; 5783 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwTotalRank)

  0008c	3b dd		 cmp	 ebx, ebp
  0008e	89 ae 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebp
  00094	75 12		 jne	 SHORT $L139648
  00096	8d 86 40 0c 00
	00		 lea	 eax, DWORD PTR [esi+3136]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 04		 push	 4
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139648:
  000a8	66 3b c5	 cmp	 ax, bp
  000ab	74 0a		 je	 SHORT $L139649
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 78 03 00
	00		 jne	 $L139638
$L139649:

; 5784 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwMonthPoint)

  000b7	3b dd		 cmp	 ebx, ebp
  000b9	89 ae 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebp
  000bf	75 12		 jne	 SHORT $L139650
  000c1	8d 8e 44 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3140]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 04		 push	 4
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139650:
  000d3	66 3b c5	 cmp	 ax, bp
  000d6	74 0a		 je	 SHORT $L139651
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 4d 03 00
	00		 jne	 $L139638
$L139651:

; 5785 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwTotalPoint)

  000e2	3b dd		 cmp	 ebx, ebp
  000e4	89 ae 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebp
  000ea	75 12		 jne	 SHORT $L139652
  000ec	8d 96 48 0c 00
	00		 lea	 edx, DWORD PTR [esi+3144]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 04		 push	 4
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139652:
  000fe	66 3b c5	 cmp	 ax, bp
  00101	74 0a		 je	 SHORT $L139653
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	0f 85 22 03 00
	00		 jne	 $L139638
$L139653:

; 5786 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_wMonthWin)

  0010d	3b dd		 cmp	 ebx, ebp
  0010f	89 ae 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebp
  00115	75 12		 jne	 SHORT $L139654
  00117	8d 86 4c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3148]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 04		 push	 4
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L139654:
  00129	66 3b c5	 cmp	 ax, bp
  0012c	74 0a		 je	 SHORT $L139655
  0012e	66 3d 01 00	 cmp	 ax, 1
  00132	0f 85 f7 02 00
	00		 jne	 $L139638
$L139655:

; 5787 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_wMonthLose)

  00138	3b dd		 cmp	 ebx, ebp
  0013a	89 ae 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebp
  00140	75 12		 jne	 SHORT $L139656
  00142	8d 8e 4e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3150]
  00148	51		 push	 ecx
  00149	6a 08		 push	 8
  0014b	6a 04		 push	 4
  0014d	8b ce		 mov	 ecx, esi
  0014f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L139656:
  00154	66 3b c5	 cmp	 ax, bp
  00157	74 0a		 je	 SHORT $L139657
  00159	66 3d 01 00	 cmp	 ax, 1
  0015d	0f 85 cc 02 00
	00		 jne	 $L139638
$L139657:

; 5788 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwTotalWin)

  00163	3b dd		 cmp	 ebx, ebp
  00165	89 ae 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebp
  0016b	75 12		 jne	 SHORT $L139658
  0016d	8d 96 50 0c 00
	00		 lea	 edx, DWORD PTR [esi+3152]
  00173	52		 push	 edx
  00174	6a 09		 push	 9
  00176	6a 04		 push	 4
  00178	8b ce		 mov	 ecx, esi
  0017a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139658:
  0017f	66 3b c5	 cmp	 ax, bp
  00182	74 0a		 je	 SHORT $L139659
  00184	66 3d 01 00	 cmp	 ax, 1
  00188	0f 85 a1 02 00
	00		 jne	 $L139638
$L139659:

; 5789 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwTotalLose)

  0018e	3b dd		 cmp	 ebx, ebp
  00190	89 ae 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebp
  00196	75 12		 jne	 SHORT $L139660
  00198	8d 86 54 0c 00
	00		 lea	 eax, DWORD PTR [esi+3156]
  0019e	50		 push	 eax
  0019f	6a 0a		 push	 10			; 0000000aH
  001a1	6a 04		 push	 4
  001a3	8b ce		 mov	 ecx, esi
  001a5	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139660:
  001aa	66 3b c5	 cmp	 ax, bp
  001ad	74 0a		 je	 SHORT $L139661
  001af	66 3d 01 00	 cmp	 ax, 1
  001b3	0f 85 76 02 00
	00		 jne	 $L139638
$L139661:

; 5790 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_bCountry)

  001b9	3b dd		 cmp	 ebx, ebp
  001bb	89 ae 38 08 00
	00		 mov	 DWORD PTR [esi+2104], ebp
  001c1	75 12		 jne	 SHORT $L139662
  001c3	8d 8e 58 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3160]
  001c9	51		 push	 ecx
  001ca	6a 0b		 push	 11			; 0000000bH
  001cc	6a 04		 push	 4
  001ce	8b ce		 mov	 ecx, esi
  001d0	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L139662:
  001d5	66 3b c5	 cmp	 ax, bp
  001d8	74 0a		 je	 SHORT $L139663
  001da	66 3d 01 00	 cmp	 ax, 1
  001de	0f 85 4b 02 00
	00		 jne	 $L139638
$L139663:

; 5791 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_bLevel)

  001e4	3b dd		 cmp	 ebx, ebp
  001e6	89 ae 3c 08 00
	00		 mov	 DWORD PTR [esi+2108], ebp
  001ec	75 12		 jne	 SHORT $L139664
  001ee	8d 96 59 0c 00
	00		 lea	 edx, DWORD PTR [esi+3161]
  001f4	52		 push	 edx
  001f5	6a 0c		 push	 12			; 0000000cH
  001f7	6a 04		 push	 4
  001f9	8b ce		 mov	 ecx, esi
  001fb	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L139664:
  00200	66 3b c5	 cmp	 ax, bp
  00203	74 0a		 je	 SHORT $L139665
  00205	66 3d 01 00	 cmp	 ax, 1
  00209	0f 85 20 02 00
	00		 jne	 $L139638
$L139665:

; 5792 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_bClass)

  0020f	3b dd		 cmp	 ebx, ebp
  00211	89 ae 40 08 00
	00		 mov	 DWORD PTR [esi+2112], ebp
  00217	75 12		 jne	 SHORT $L139666
  00219	8d 86 5a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3162]
  0021f	50		 push	 eax
  00220	6a 0d		 push	 13			; 0000000dH
  00222	6a 04		 push	 4
  00224	8b ce		 mov	 ecx, esi
  00226	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L139666:
  0022b	66 3b c5	 cmp	 ax, bp
  0022e	74 0a		 je	 SHORT $L139667
  00230	66 3d 01 00	 cmp	 ax, 1
  00234	0f 85 f5 01 00
	00		 jne	 $L139638
$L139667:

; 5793 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_bRace)

  0023a	3b dd		 cmp	 ebx, ebp
  0023c	89 ae 44 08 00
	00		 mov	 DWORD PTR [esi+2116], ebp
  00242	75 12		 jne	 SHORT $L139668
  00244	8d 8e 5b 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3163]
  0024a	51		 push	 ecx
  0024b	6a 0e		 push	 14			; 0000000eH
  0024d	6a 04		 push	 4
  0024f	8b ce		 mov	 ecx, esi
  00251	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L139668:
  00256	66 3b c5	 cmp	 ax, bp
  00259	74 0a		 je	 SHORT $L139669
  0025b	66 3d 01 00	 cmp	 ax, 1
  0025f	0f 85 ca 01 00
	00		 jne	 $L139638
$L139669:

; 5794 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_bSex)

  00265	3b dd		 cmp	 ebx, ebp
  00267	89 ae 48 08 00
	00		 mov	 DWORD PTR [esi+2120], ebp
  0026d	75 12		 jne	 SHORT $L139670
  0026f	8d 96 5c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3164]
  00275	52		 push	 edx
  00276	6a 0f		 push	 15			; 0000000fH
  00278	6a 04		 push	 4
  0027a	8b ce		 mov	 ecx, esi
  0027c	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L139670:
  00281	66 3b c5	 cmp	 ax, bp
  00284	74 0a		 je	 SHORT $L139671
  00286	66 3d 01 00	 cmp	 ax, 1
  0028a	0f 85 9f 01 00
	00		 jne	 $L139638
$L139671:

; 5795 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_bFace)

  00290	3b dd		 cmp	 ebx, ebp
  00292	89 ae 4c 08 00
	00		 mov	 DWORD PTR [esi+2124], ebp
  00298	75 12		 jne	 SHORT $L139672
  0029a	8d 86 5d 0c 00
	00		 lea	 eax, DWORD PTR [esi+3165]
  002a0	50		 push	 eax
  002a1	6a 10		 push	 16			; 00000010H
  002a3	6a 04		 push	 4
  002a5	8b ce		 mov	 ecx, esi
  002a7	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L139672:
  002ac	66 3b c5	 cmp	 ax, bp
  002af	74 0a		 je	 SHORT $L139673
  002b1	66 3d 01 00	 cmp	 ax, 1
  002b5	0f 85 74 01 00
	00		 jne	 $L139638
$L139673:

; 5796 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_bHair)

  002bb	3b dd		 cmp	 ebx, ebp
  002bd	89 ae 50 08 00
	00		 mov	 DWORD PTR [esi+2128], ebp
  002c3	75 12		 jne	 SHORT $L139674
  002c5	8d 8e 5e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3166]
  002cb	51		 push	 ecx
  002cc	6a 11		 push	 17			; 00000011H
  002ce	6a 04		 push	 4
  002d0	8b ce		 mov	 ecx, esi
  002d2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L139674:
  002d7	66 3b c5	 cmp	 ax, bp
  002da	74 0a		 je	 SHORT $L139675
  002dc	66 3d 01 00	 cmp	 ax, 1
  002e0	0f 85 49 01 00
	00		 jne	 $L139638
$L139675:

; 5797 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT, m_szName)

  002e6	3b dd		 cmp	 ebx, ebp
  002e8	c7 86 54 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2132], -3 ; fffffffdH
  002f2	75 14		 jne	 SHORT $L139676
  002f4	6a 33		 push	 51			; 00000033H
  002f6	8d 96 5f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3167]
  002fc	52		 push	 edx
  002fd	6a 12		 push	 18			; 00000012H
  002ff	6a 04		 push	 4
  00301	8b ce		 mov	 ecx, esi
  00303	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L139676:
  00308	66 3b c5	 cmp	 ax, bp
  0030b	74 0a		 je	 SHORT $L191776
  0030d	66 3d 01 00	 cmp	 ax, 1
  00311	0f 85 18 01 00
	00		 jne	 $L139638
$L191776:

; 5798 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT, m_szGuild)

  00317	3b dd		 cmp	 ebx, ebp
  00319	c7 86 58 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2136], -3 ; fffffffdH
  00323	75 14		 jne	 SHORT $L139678
  00325	6a 33		 push	 51			; 00000033H
  00327	8d 86 92 0c 00
	00		 lea	 eax, DWORD PTR [esi+3218]
  0032d	50		 push	 eax
  0032e	6a 13		 push	 19			; 00000013H
  00330	6a 04		 push	 4
  00332	8b ce		 mov	 ecx, esi
  00334	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L139678:
  00339	66 3b c5	 cmp	 ax, bp
  0033c	74 0a		 je	 SHORT $L139679
  0033e	66 3d 01 00	 cmp	 ax, 1
  00342	0f 85 e7 00 00
	00		 jne	 $L139638
$L139679:

; 5799 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bMonth)

  00348	3b dd		 cmp	 ebx, ebp
  0034a	89 ae 5c 08 00
	00		 mov	 DWORD PTR [esi+2140], ebp
  00350	75 12		 jne	 SHORT $L139680
  00352	8d 8e 39 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3129]
  00358	51		 push	 ecx
  00359	6a 14		 push	 20			; 00000014H
  0035b	6a 01		 push	 1
  0035d	8b ce		 mov	 ecx, esi
  0035f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L139680:
  00364	66 3b c5	 cmp	 ax, bp
  00367	74 0a		 je	 SHORT $L139681
  00369	66 3d 01 00	 cmp	 ax, 1
  0036d	0f 85 bc 00 00
	00		 jne	 $L139638
$L139681:

; 5800 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wTournamentID)

  00373	3b dd		 cmp	 ebx, ebp
  00375	89 ae 60 08 00
	00		 mov	 DWORD PTR [esi+2144], ebp
  0037b	75 12		 jne	 SHORT $L139682
  0037d	8d 96 2c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3116]
  00383	52		 push	 edx
  00384	6a 15		 push	 21			; 00000015H
  00386	6a 01		 push	 1
  00388	8b ce		 mov	 ecx, esi
  0038a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L139682:
  0038f	66 3b c5	 cmp	 ax, bp
  00392	74 0a		 je	 SHORT $L139683
  00394	66 3d 01 00	 cmp	 ax, 1
  00398	0f 85 91 00 00
	00		 jne	 $L139638
$L139683:

; 5801 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bEntryID)

  0039e	3b dd		 cmp	 ebx, ebp
  003a0	89 ae 64 08 00
	00		 mov	 DWORD PTR [esi+2148], ebp
  003a6	75 12		 jne	 SHORT $L139684
  003a8	8d 86 2e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3118]
  003ae	50		 push	 eax
  003af	6a 16		 push	 22			; 00000016H
  003b1	6a 01		 push	 1
  003b3	8b ce		 mov	 ecx, esi
  003b5	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L139684:
  003ba	66 3b c5	 cmp	 ax, bp
  003bd	74 06		 je	 SHORT $L139685
  003bf	66 3d 01 00	 cmp	 ax, 1
  003c3	75 6a		 jne	 SHORT $L139638
$L139685:

; 5802 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwChiefID)

  003c5	3b dd		 cmp	 ebx, ebp
  003c7	89 ae 68 08 00
	00		 mov	 DWORD PTR [esi+2152], ebp
  003cd	75 12		 jne	 SHORT $L139686
  003cf	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  003d5	51		 push	 ecx
  003d6	6a 17		 push	 23			; 00000017H
  003d8	6a 01		 push	 1
  003da	8b ce		 mov	 ecx, esi
  003dc	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139686:
  003e1	66 3b c5	 cmp	 ax, bp
  003e4	74 06		 je	 SHORT $L139687
  003e6	66 3d 01 00	 cmp	 ax, 1
  003ea	75 43		 jne	 SHORT $L139638
$L139687:

; 5803 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwWinner)

  003ec	3b dd		 cmp	 ebx, ebp
  003ee	89 ae 6c 08 00
	00		 mov	 DWORD PTR [esi+2156], ebp
  003f4	75 12		 jne	 SHORT $L139688
  003f6	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  003fc	52		 push	 edx
  003fd	6a 18		 push	 24			; 00000018H
  003ff	6a 01		 push	 1
  00401	8b ce		 mov	 ecx, esi
  00403	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139688:
  00408	66 3b c5	 cmp	 ax, bp
  0040b	74 06		 je	 SHORT $L139689
  0040d	66 3d 01 00	 cmp	 ax, 1
  00411	75 1c		 jne	 SHORT $L139638
$L139689:

; 5804 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bIsEquipShield)

  00413	3b dd		 cmp	 ebx, ebp
  00415	89 ae 70 08 00
	00		 mov	 DWORD PTR [esi+2160], ebp
  0041b	75 12		 jne	 SHORT $L139638
  0041d	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00423	50		 push	 eax
  00424	6a 19		 push	 25			; 00000019H
  00426	6a 01		 push	 1
  00428	8b ce		 mov	 ecx, esi
  0042a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L139638:
  0042f	5e		 pop	 esi
  00430	5d		 pop	 ebp
  00431	5b		 pop	 ebx

; 5805 : END_PARAM()

  00432	c2 04 00	 ret	 4
?BindParameters@CSPTournamentReward@@UAEFH@Z ENDP	; CSPTournamentReward::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPTournamentReward@@UAE@XZ			; CSPTournamentReward::~CSPTournamentReward
; Function compile flags: /Ogty
;	COMDAT ??_GCSPTournamentReward@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPTournamentReward@@UAEPAXI@Z PROC NEAR		; CSPTournamentReward::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPTournamentReward@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L191780
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L191780:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPTournamentReward@@UAEPAXI@Z ENDP			; CSPTournamentReward::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPTournamentReward@@UAE@XZ
_TEXT	SEGMENT
??1CSPTournamentReward@@UAE@XZ PROC NEAR		; CSPTournamentReward::~CSPTournamentReward, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPTournamentReward@@UAE@XZ ENDP			; CSPTournamentReward::~CSPTournamentReward
_TEXT	ENDS
PUBLIC	??0CSPGetPostInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetPostInfo::CSPGetPostInfo
PUBLIC	?GetNumParam@CSPGetPostInfo@@UAEHXZ		; CSPGetPostInfo::GetNumParam
PUBLIC	?BindParameters@CSPGetPostInfo@@UAEFH@Z		; CSPGetPostInfo::BindParameters
PUBLIC	??_7CSPGetPostInfo@@6B@				; CSPGetPostInfo::`vftable'
PUBLIC	??_GCSPGetPostInfo@@UAEPAXI@Z			; CSPGetPostInfo::`scalar deleting destructor'
PUBLIC	??_C@_0BP@KFAALJLF@?$HLCALL?5TGetPostInfo?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPGetPostInfo@@UAEPAXI@Z:NEAR		; CSPGetPostInfo::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T191963 DD	0ffffffffH
	DD	FLAT:$L191789
$T191960 DD	019930520H
	DD	01H
	DD	FLAT:$T191963
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BP@KFAALJLF@?$HLCALL?5TGetPostInfo?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BP@KFAALJLF@?$HLCALL?5TGetPostInfo?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL TGetPostInfo(?,?,?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGetPostInfo@@6B@
CONST	SEGMENT
??_7CSPGetPostInfo@@6B@ DD FLAT:??_ECSPGetPostInfo@@UAEPAXI@Z ; CSPGetPostInfo::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGetPostInfo@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGetPostInfo@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGetPostInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T191788 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGetPostInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGetPostInfo::CSPGetPostInfo, COMDAT
; _this$ = ecx

; 5818 : DEF_QUERY(CSPGetPostInfo, _T("{CALL TGetPostInfo(?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGetPostInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@KFAALJLF@?$HLCALL?5TGetPostInfo?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T191788[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGetPostInfo@@6B@
  0005e	72 0d		 jb	 SHORT $L191961
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L191961:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191789:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGetPostInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T191960
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGetPostInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGetPostInfo::CSPGetPostInfo
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGetPostInfo@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGetPostInfo@@UAEHXZ PROC NEAR		; CSPGetPostInfo::GetNumParam, COMDAT
; _this$ = ecx

; 5820 : BEGIN_PARAM(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumParam@CSPGetPostInfo@@UAEHXZ ENDP		; CSPGetPostInfo::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetPostInfo@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGetPostInfo@@UAEFH@Z PROC NEAR	; CSPGetPostInfo::BindParameters, COMDAT
; _this$ = ecx

; 5820 : BEGIN_PARAM(5)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5821 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_wTotalCount)	

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L139739
  00017	8d 86 36 0c 00
	00		 lea	 eax, DWORD PTR [esi+3126]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L139739
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 91 00 00
	00		 jne	 $L139734
$L139739:

; 5822 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_wNotReadCount)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L139740
  00040	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 04		 push	 4
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L139740:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 06		 je	 SHORT $L139741
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	75 6a		 jne	 SHORT $L139734
$L139741:

; 5823 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_dwBeginID)

  0005d	3b fb		 cmp	 edi, ebx
  0005f	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00065	75 12		 jne	 SHORT $L139742
  00067	8d 96 3c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3132]
  0006d	52		 push	 edx
  0006e	6a 03		 push	 3
  00070	6a 04		 push	 4
  00072	8b ce		 mov	 ecx, esi
  00074	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139742:
  00079	66 3b c3	 cmp	 ax, bx
  0007c	74 06		 je	 SHORT $L139743
  0007e	66 3d 01 00	 cmp	 ax, 1
  00082	75 43		 jne	 SHORT $L139734
$L139743:

; 5824 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCharID)

  00084	3b fb		 cmp	 edi, ebx
  00086	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  0008c	75 12		 jne	 SHORT $L139744
  0008e	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00094	50		 push	 eax
  00095	6a 04		 push	 4
  00097	6a 01		 push	 1
  00099	8b ce		 mov	 ecx, esi
  0009b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139744:
  000a0	66 3b c3	 cmp	 ax, bx
  000a3	74 06		 je	 SHORT $L139745
  000a5	66 3d 01 00	 cmp	 ax, 1
  000a9	75 1c		 jne	 SHORT $L139734
$L139745:

; 5825 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wPage)

  000ab	3b fb		 cmp	 edi, ebx
  000ad	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b3	75 12		 jne	 SHORT $L139734
  000b5	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  000bb	51		 push	 ecx
  000bc	6a 05		 push	 5
  000be	6a 01		 push	 1
  000c0	8b ce		 mov	 ecx, esi
  000c2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L139734:
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx

; 5826 : END_PARAM()	

  000ca	c2 04 00	 ret	 4
?BindParameters@CSPGetPostInfo@@UAEFH@Z ENDP		; CSPGetPostInfo::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGetPostInfo@@UAE@XZ			; CSPGetPostInfo::~CSPGetPostInfo
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGetPostInfo@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGetPostInfo@@UAEPAXI@Z PROC NEAR			; CSPGetPostInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGetPostInfo@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L191975
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L191975:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGetPostInfo@@UAEPAXI@Z ENDP			; CSPGetPostInfo::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGetPostInfo@@UAE@XZ
_TEXT	SEGMENT
??1CSPGetPostInfo@@UAE@XZ PROC NEAR			; CSPGetPostInfo::~CSPGetPostInfo, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGetPostInfo@@UAE@XZ ENDP				; CSPGetPostInfo::~CSPGetPostInfo
_TEXT	ENDS
PUBLIC	??0CSPPostView@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPPostView::CSPPostView
PUBLIC	?GetNumParam@CSPPostView@@UAEHXZ		; CSPPostView::GetNumParam
PUBLIC	?BindParameters@CSPPostView@@UAEFH@Z		; CSPPostView::BindParameters
PUBLIC	??_7CSPPostView@@6B@				; CSPPostView::`vftable'
PUBLIC	??_GCSPPostView@@UAEPAXI@Z			; CSPPostView::`scalar deleting destructor'
PUBLIC	??_C@_0DA@NPPLBBCI@?$HL?$DP?5?$DN?5CALL?5TPostView?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPPostView@@UAEPAXI@Z:NEAR			; CSPPostView::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T192158 DD	0ffffffffH
	DD	FLAT:$L191984
$T192155 DD	019930520H
	DD	01H
	DD	FLAT:$T192158
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DA@NPPLBBCI@?$HL?$DP?5?$DN?5CALL?5TPostView?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0DA@NPPLBBCI@?$HL?$DP?5?$DN?5CALL?5TPostView?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@ DB '{'
	DB	'? = CALL TPostView(?,?,?,?,?,?,?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPPostView@@6B@
CONST	SEGMENT
??_7CSPPostView@@6B@ DD FLAT:??_ECSPPostView@@UAEPAXI@Z	; CSPPostView::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPPostView@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPPostView@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPPostView@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T191983 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPPostView@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPPostView::CSPPostView, COMDAT
; _this$ = ecx

; 5848 : DEF_QUERY(CSPPostView, _T("{? = CALL TPostView(?,?,?,?,?,?,?,?,?,?,?,?,?)}"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPPostView@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DA@NPPLBBCI@?$HL?$DP?5?$DN?5CALL?5TPostView?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T191983[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPPostView@@6B@
  0005e	72 0d		 jb	 SHORT $L192156
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L192156:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L191984:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPPostView@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192155
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPPostView@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPPostView::CSPPostView
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPPostView@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPPostView@@UAEHXZ PROC NEAR		; CSPPostView::GetNumParam, COMDAT
; _this$ = ecx

; 5850 : BEGIN_PARAM(14)

  00000	b8 0e 00 00 00	 mov	 eax, 14			; 0000000eH
  00005	c3		 ret	 0
?GetNumParam@CSPPostView@@UAEHXZ ENDP			; CSPPostView::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPPostView@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPPostView@@UAEFH@Z PROC NEAR		; CSPPostView::BindParameters, COMDAT
; _this$ = ecx

; 5850 : BEGIN_PARAM(14)

  00000	55		 push	 ebp
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5851 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_nRet)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 ed		 xor	 ebp, ebp
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fd		 cmp	 edi, ebp
  0000f	89 ae 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebp
  00015	75 1f		 jne	 SHORT $L192167
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c5	 cmp	 ax, bp
  0002a	74 0a		 je	 SHORT $L192167
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 2c 02 00
	00		 jne	 $L139798
$L192167:

; 5852 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_bItemCount)

  00036	3b fd		 cmp	 edi, ebp
  00038	89 ae 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebp
  0003e	75 12		 jne	 SHORT $L192169
  00040	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 04		 push	 4
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L192169:
  00052	66 3b c5	 cmp	 ax, bp
  00055	74 0a		 je	 SHORT $L192170
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 01 02 00
	00		 jne	 $L139798
$L192170:

; 5853 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_dwSendID)

  00061	3b fd		 cmp	 edi, ebp
  00063	89 ae 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebp
  00069	75 12		 jne	 SHORT $L192173
  0006b	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 04		 push	 4
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L192173:
  0007d	66 3b c5	 cmp	 ax, bp
  00080	74 0a		 je	 SHORT $L192174
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 d6 01 00
	00		 jne	 $L139798
$L192174:

; 5854 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_bType)

  0008c	3b fd		 cmp	 edi, ebp
  0008e	89 ae 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebp
  00094	75 12		 jne	 SHORT $L192175
  00096	8d 86 3d 0c 00
	00		 lea	 eax, DWORD PTR [esi+3133]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 04		 push	 4
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L192175:
  000a8	66 3b c5	 cmp	 ax, bp
  000ab	74 0a		 je	 SHORT $L192176
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 ab 01 00
	00		 jne	 $L139798
$L192176:

; 5855 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_bRead)

  000b7	3b fd		 cmp	 edi, ebp
  000b9	89 ae 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebp
  000bf	75 12		 jne	 SHORT $L192177
  000c1	8d 8e 3e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3134]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 04		 push	 4
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L192177:
  000d3	66 3b c5	 cmp	 ax, bp
  000d6	74 0a		 je	 SHORT $L192178
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 80 01 00
	00		 jne	 $L139798
$L192178:

; 5856 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_dwGold)

  000e2	3b fd		 cmp	 edi, ebp
  000e4	89 ae 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebp
  000ea	75 12		 jne	 SHORT $L192179
  000ec	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 04		 push	 4
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L192179:
  000fe	66 3b c5	 cmp	 ax, bp
  00101	74 0a		 je	 SHORT $L192180
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	0f 85 55 01 00
	00		 jne	 $L139798
$L192180:

; 5857 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_dwSilver)

  0010d	3b fd		 cmp	 edi, ebp
  0010f	89 ae 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebp
  00115	75 12		 jne	 SHORT $L192181
  00117	8d 86 44 0c 00
	00		 lea	 eax, DWORD PTR [esi+3140]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 04		 push	 4
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L192181:
  00129	66 3b c5	 cmp	 ax, bp
  0012c	74 0a		 je	 SHORT $L192182
  0012e	66 3d 01 00	 cmp	 ax, 1
  00132	0f 85 2a 01 00
	00		 jne	 $L139798
$L192182:

; 5858 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_dwCooper)

  00138	3b fd		 cmp	 edi, ebp
  0013a	89 ae 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebp
  00140	75 12		 jne	 SHORT $L192183
  00142	8d 8e 48 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3144]
  00148	51		 push	 ecx
  00149	6a 08		 push	 8
  0014b	6a 04		 push	 4
  0014d	8b ce		 mov	 ecx, esi
  0014f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L192183:
  00154	66 3b c5	 cmp	 ax, bp
  00157	74 0a		 je	 SHORT $L192184
  00159	66 3d 01 00	 cmp	 ax, 1
  0015d	0f 85 ff 00 00
	00		 jne	 $L139798
$L192184:

; 5859 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_timeRecv)

  00163	3b fd		 cmp	 edi, ebp
  00165	89 ae 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebp
  0016b	75 12		 jne	 SHORT $L139818
  0016d	8d 96 4c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3148]
  00173	52		 push	 edx
  00174	6a 09		 push	 9
  00176	6a 04		 push	 4
  00178	8b ce		 mov	 ecx, esi
  0017a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L139818:
  0017f	66 3b c5	 cmp	 ax, bp
  00182	74 0a		 je	 SHORT $L139819
  00184	66 3d 01 00	 cmp	 ax, 1
  00188	0f 85 d4 00 00
	00		 jne	 $L139798
$L139819:

; 5860 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szSender)

  0018e	3b fd		 cmp	 edi, ebp
  00190	c7 86 34 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2100], -3 ; fffffffdH
  0019a	75 14		 jne	 SHORT $L139820
  0019c	6a 33		 push	 51			; 00000033H
  0019e	8d 86 5c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3164]
  001a4	50		 push	 eax
  001a5	6a 0a		 push	 10			; 0000000aH
  001a7	6a 04		 push	 4
  001a9	8b ce		 mov	 ecx, esi
  001ab	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L139820:
  001b0	66 3b c5	 cmp	 ax, bp
  001b3	74 0a		 je	 SHORT $L192168
  001b5	66 3d 01 00	 cmp	 ax, 1
  001b9	0f 85 a3 00 00
	00		 jne	 $L139798
$L192168:

; 5861 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szTitle)

  001bf	3b fd		 cmp	 edi, ebp
  001c1	c7 86 38 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2104], -3 ; fffffffdH
  001cb	75 17		 jne	 SHORT $L139822
  001cd	68 01 01 00 00	 push	 257			; 00000101H
  001d2	8d 8e 8f 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3215]
  001d8	51		 push	 ecx
  001d9	6a 0b		 push	 11			; 0000000bH
  001db	6a 04		 push	 4
  001dd	8b ce		 mov	 ecx, esi
  001df	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L139822:
  001e4	66 3b c5	 cmp	 ax, bp
  001e7	74 06		 je	 SHORT $L139823
  001e9	66 3d 01 00	 cmp	 ax, 1
  001ed	75 73		 jne	 SHORT $L139798
$L139823:

; 5862 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szMessage)

  001ef	3b fd		 cmp	 edi, ebp
  001f1	c7 86 3c 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2108], -3 ; fffffffdH
  001fb	75 17		 jne	 SHORT $L139824
  001fd	68 01 08 00 00	 push	 2049			; 00000801H
  00202	8d 96 90 0d 00
	00		 lea	 edx, DWORD PTR [esi+3472]
  00208	52		 push	 edx
  00209	6a 0c		 push	 12			; 0000000cH
  0020b	6a 04		 push	 4
  0020d	8b ce		 mov	 ecx, esi
  0020f	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L139824:
  00214	66 3b c5	 cmp	 ax, bp
  00217	74 06		 je	 SHORT $L192171
  00219	66 3d 01 00	 cmp	 ax, 1
  0021d	75 43		 jne	 SHORT $L139798
$L192171:

; 5863 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  0021f	3b fd		 cmp	 edi, ebp
  00221	89 ae 40 08 00
	00		 mov	 DWORD PTR [esi+2112], ebp
  00227	75 12		 jne	 SHORT $L139826
  00229	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  0022f	50		 push	 eax
  00230	6a 0d		 push	 13			; 0000000dH
  00232	6a 01		 push	 1
  00234	8b ce		 mov	 ecx, esi
  00236	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139826:
  0023b	66 3b c5	 cmp	 ax, bp
  0023e	74 06		 je	 SHORT $L192172
  00240	66 3d 01 00	 cmp	 ax, 1
  00244	75 1c		 jne	 SHORT $L139798
$L192172:

; 5864 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwPostID)

  00246	3b fd		 cmp	 edi, ebp
  00248	89 ae 44 08 00
	00		 mov	 DWORD PTR [esi+2116], ebp
  0024e	75 12		 jne	 SHORT $L139798
  00250	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00256	51		 push	 ecx
  00257	6a 0e		 push	 14			; 0000000eH
  00259	6a 01		 push	 1
  0025b	8b ce		 mov	 ecx, esi
  0025d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139798:
  00262	5f		 pop	 edi
  00263	5e		 pop	 esi
  00264	5d		 pop	 ebp

; 5865 : END_PARAM()

  00265	c2 04 00	 ret	 4
?BindParameters@CSPPostView@@UAEFH@Z ENDP		; CSPPostView::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPPostView@@UAE@XZ				; CSPPostView::~CSPPostView
; Function compile flags: /Ogty
;	COMDAT ??_GCSPPostView@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPPostView@@UAEPAXI@Z PROC NEAR			; CSPPostView::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPPostView@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L192188
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L192188:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPPostView@@UAEPAXI@Z ENDP				; CSPPostView::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPPostView@@UAE@XZ
_TEXT	SEGMENT
??1CSPPostView@@UAE@XZ PROC NEAR			; CSPPostView::~CSPPostView, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPPostView@@UAE@XZ ENDP				; CSPPostView::~CSPPostView
_TEXT	ENDS
PUBLIC	??0CSPPostBillsUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPPostBillsUpdate::CSPPostBillsUpdate
PUBLIC	?GetNumParam@CSPPostBillsUpdate@@UAEHXZ		; CSPPostBillsUpdate::GetNumParam
PUBLIC	?BindParameters@CSPPostBillsUpdate@@UAEFH@Z	; CSPPostBillsUpdate::BindParameters
PUBLIC	??_7CSPPostBillsUpdate@@6B@			; CSPPostBillsUpdate::`vftable'
PUBLIC	??_GCSPPostBillsUpdate@@UAEPAXI@Z		; CSPPostBillsUpdate::`scalar deleting destructor'
PUBLIC	??_C@_0CL@GLFIEBPI@?$HL?$DP?5?$DN?5CALL?5TPostBillsUpdate?$CI?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPPostBillsUpdate@@UAEPAXI@Z:NEAR		; CSPPostBillsUpdate::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T192371 DD	0ffffffffH
	DD	FLAT:$L192197
$T192368 DD	019930520H
	DD	01H
	DD	FLAT:$T192371
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CL@GLFIEBPI@?$HL?$DP?5?$DN?5CALL?5TPostBillsUpdate?$CI?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CL@GLFIEBPI@?$HL?$DP?5?$DN?5CALL?5TPostBillsUpdate?$CI?$DP?0?$DP?0?$DP@ DB '{'
	DB	'? = CALL TPostBillsUpdate(?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPPostBillsUpdate@@6B@
CONST	SEGMENT
??_7CSPPostBillsUpdate@@6B@ DD FLAT:??_ECSPPostBillsUpdate@@UAEPAXI@Z ; CSPPostBillsUpdate::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPPostBillsUpdate@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPPostBillsUpdate@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPPostBillsUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T192196 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPPostBillsUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPPostBillsUpdate::CSPPostBillsUpdate, COMDAT
; _this$ = ecx

; 5880 : DEF_QUERY(CSPPostBillsUpdate, _T("{? = CALL TPostBillsUpdate(?,?,?,?,?,?,?)}"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPPostBillsUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CL@GLFIEBPI@?$HL?$DP?5?$DN?5CALL?5TPostBillsUpdate?$CI?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T192196[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPPostBillsUpdate@@6B@
  0005e	72 0d		 jb	 SHORT $L192369
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L192369:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192197:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPPostBillsUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192368
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPPostBillsUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPPostBillsUpdate::CSPPostBillsUpdate
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPPostBillsUpdate@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPPostBillsUpdate@@UAEHXZ PROC NEAR	; CSPPostBillsUpdate::GetNumParam, COMDAT
; _this$ = ecx

; 5882 : BEGIN_PARAM(8)

  00000	b8 08 00 00 00	 mov	 eax, 8
  00005	c3		 ret	 0
?GetNumParam@CSPPostBillsUpdate@@UAEHXZ ENDP		; CSPPostBillsUpdate::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPPostBillsUpdate@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPPostBillsUpdate@@UAEFH@Z PROC NEAR	; CSPPostBillsUpdate::BindParameters, COMDAT
; _this$ = ecx

; 5882 : BEGIN_PARAM(8)

  00000	55		 push	 ebp
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5883 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_nRet)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 ed		 xor	 ebp, ebp
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fd		 cmp	 edi, ebp
  0000f	89 ae 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebp
  00015	75 1f		 jne	 SHORT $L192380
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c5	 cmp	 ax, bp
  0002a	74 0a		 je	 SHORT $L192380
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 24 01 00
	00		 jne	 $L139874
$L192380:

; 5884 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwNewID)

  00036	3b fd		 cmp	 edi, ebp
  00038	89 ae 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebp
  0003e	75 12		 jne	 SHORT $L139880
  00040	8d 8e 68 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3176]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 04		 push	 4
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139880:
  00052	66 3b c5	 cmp	 ax, bp
  00055	74 0a		 je	 SHORT $L139881
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 f9 00 00
	00		 jne	 $L139874
$L139881:

; 5885 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szSender)

  00061	3b fd		 cmp	 edi, ebp
  00063	53		 push	 ebx
  00064	bb fd ff ff ff	 mov	 ebx, -3			; fffffffdH
  00069	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  0006f	75 14		 jne	 SHORT $L139882
  00071	6a 33		 push	 51			; 00000033H
  00073	8d 96 6d 0c 00
	00		 lea	 edx, DWORD PTR [esi+3181]
  00079	52		 push	 edx
  0007a	6a 03		 push	 3
  0007c	6a 04		 push	 4
  0007e	8b ce		 mov	 ecx, esi
  00080	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L139882:
  00085	66 3b c5	 cmp	 ax, bp
  00088	74 0a		 je	 SHORT $L192381
  0008a	66 3d 01 00	 cmp	 ax, 1
  0008e	0f 85 c5 00 00
	00		 jne	 $L192385
$L192381:

; 5886 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szRecvName)

  00094	3b fd		 cmp	 edi, ebp
  00096	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  0009c	75 14		 jne	 SHORT $L139884
  0009e	6a 33		 push	 51			; 00000033H
  000a0	8d 86 a0 0c 00
	00		 lea	 eax, DWORD PTR [esi+3232]
  000a6	50		 push	 eax
  000a7	6a 04		 push	 4
  000a9	6a 04		 push	 4
  000ab	8b ce		 mov	 ecx, esi
  000ad	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L139884:
  000b2	66 3b c5	 cmp	 ax, bp
  000b5	74 0a		 je	 SHORT $L139885
  000b7	66 3d 01 00	 cmp	 ax, 1
  000bb	0f 85 98 00 00
	00		 jne	 $L192385
$L139885:

; 5887 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szTitle)

  000c1	3b fd		 cmp	 edi, ebp
  000c3	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000c9	75 17		 jne	 SHORT $L139886
  000cb	68 01 01 00 00	 push	 257			; 00000101H
  000d0	8d 8e d3 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3283]
  000d6	51		 push	 ecx
  000d7	6a 05		 push	 5
  000d9	6a 04		 push	 4
  000db	8b ce		 mov	 ecx, esi
  000dd	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L139886:
  000e2	66 3b c5	 cmp	 ax, bp
  000e5	74 06		 je	 SHORT $L192382
  000e7	66 3d 01 00	 cmp	 ax, 1
  000eb	75 6c		 jne	 SHORT $L192385
$L192382:

; 5888 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwPostID)

  000ed	3b fd		 cmp	 edi, ebp
  000ef	89 ae 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebp
  000f5	75 12		 jne	 SHORT $L139888
  000f7	8d 96 64 0c 00
	00		 lea	 edx, DWORD PTR [esi+3172]
  000fd	52		 push	 edx
  000fe	6a 06		 push	 6
  00100	6a 01		 push	 1
  00102	8b ce		 mov	 ecx, esi
  00104	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139888:
  00109	66 3b c5	 cmp	 ax, bp
  0010c	74 06		 je	 SHORT $L192383
  0010e	66 3d 01 00	 cmp	 ax, 1
  00112	75 45		 jne	 SHORT $L192385
$L192383:

; 5889 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szCharName)

  00114	3b fd		 cmp	 edi, ebp
  00116	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  0011c	75 14		 jne	 SHORT $L139890
  0011e	6a 33		 push	 51			; 00000033H
  00120	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00126	50		 push	 eax
  00127	6a 07		 push	 7
  00129	6a 01		 push	 1
  0012b	8b ce		 mov	 ecx, esi
  0012d	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L139890:
  00132	66 3b c5	 cmp	 ax, bp
  00135	74 06		 je	 SHORT $L192384
  00137	66 3d 01 00	 cmp	 ax, 1
  0013b	75 1c		 jne	 SHORT $L192385
$L192384:

; 5890 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bType)

  0013d	3b fd		 cmp	 edi, ebp
  0013f	89 ae 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebp
  00145	75 12		 jne	 SHORT $L192385
  00147	8d 8e 6c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3180]
  0014d	51		 push	 ecx
  0014e	6a 08		 push	 8
  00150	6a 01		 push	 1
  00152	8b ce		 mov	 ecx, esi
  00154	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L192385:
  00159	5b		 pop	 ebx
$L139874:
  0015a	5f		 pop	 edi
  0015b	5e		 pop	 esi
  0015c	5d		 pop	 ebp

; 5891 : END_PARAM()

  0015d	c2 04 00	 ret	 4
?BindParameters@CSPPostBillsUpdate@@UAEFH@Z ENDP	; CSPPostBillsUpdate::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPPostBillsUpdate@@UAE@XZ			; CSPPostBillsUpdate::~CSPPostBillsUpdate
; Function compile flags: /Ogty
;	COMDAT ??_GCSPPostBillsUpdate@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPPostBillsUpdate@@UAEPAXI@Z PROC NEAR		; CSPPostBillsUpdate::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPPostBillsUpdate@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L192389
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L192389:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPPostBillsUpdate@@UAEPAXI@Z ENDP			; CSPPostBillsUpdate::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPPostBillsUpdate@@UAE@XZ
_TEXT	SEGMENT
??1CSPPostBillsUpdate@@UAE@XZ PROC NEAR			; CSPPostBillsUpdate::~CSPPostBillsUpdate, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPPostBillsUpdate@@UAE@XZ ENDP			; CSPPostBillsUpdate::~CSPPostBillsUpdate
_TEXT	ENDS
PUBLIC	??0CSPSaveCharPosition@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveCharPosition::CSPSaveCharPosition
PUBLIC	?GetNumParam@CSPSaveCharPosition@@UAEHXZ	; CSPSaveCharPosition::GetNumParam
PUBLIC	?BindParameters@CSPSaveCharPosition@@UAEFH@Z	; CSPSaveCharPosition::BindParameters
PUBLIC	??_7CSPSaveCharPosition@@6B@			; CSPSaveCharPosition::`vftable'
PUBLIC	??_GCSPSaveCharPosition@@UAEPAXI@Z		; CSPSaveCharPosition::`scalar deleting destructor'
PUBLIC	??_C@_0CK@JMBAPFHB@?$HL?$DP?5?$DN?5CALL?5TSaveCharPosition?$CI?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPSaveCharPosition@@UAEPAXI@Z:NEAR		; CSPSaveCharPosition::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T192572 DD	0ffffffffH
	DD	FLAT:$L192398
$T192569 DD	019930520H
	DD	01H
	DD	FLAT:$T192572
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CK@JMBAPFHB@?$HL?$DP?5?$DN?5CALL?5TSaveCharPosition?$CI?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0CK@JMBAPFHB@?$HL?$DP?5?$DN?5CALL?5TSaveCharPosition?$CI?$DP?0?$DP?0@ DB '{'
	DB	'? = CALL TSaveCharPosition(?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveCharPosition@@6B@
CONST	SEGMENT
??_7CSPSaveCharPosition@@6B@ DD FLAT:??_ECSPSaveCharPosition@@UAEPAXI@Z ; CSPSaveCharPosition::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveCharPosition@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveCharPosition@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveCharPosition@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T192397 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveCharPosition@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveCharPosition::CSPSaveCharPosition, COMDAT
; _this$ = ecx

; 5905 : DEF_QUERY(CSPSaveCharPosition, _T("{? = CALL TSaveCharPosition(?,?,?,?,?,?)}"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveCharPosition@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CK@JMBAPFHB@?$HL?$DP?5?$DN?5CALL?5TSaveCharPosition?$CI?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T192397[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveCharPosition@@6B@
  0005e	72 0d		 jb	 SHORT $L192570
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L192570:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192398:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveCharPosition@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192569
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveCharPosition@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveCharPosition::CSPSaveCharPosition
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveCharPosition@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveCharPosition@@UAEHXZ PROC NEAR	; CSPSaveCharPosition::GetNumParam, COMDAT
; _this$ = ecx

; 5907 : BEGIN_PARAM(7)

  00000	b8 07 00 00 00	 mov	 eax, 7
  00005	c3		 ret	 0
?GetNumParam@CSPSaveCharPosition@@UAEHXZ ENDP		; CSPSaveCharPosition::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveCharPosition@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveCharPosition@@UAEFH@Z PROC NEAR	; CSPSaveCharPosition::BindParameters, COMDAT
; _this$ = ecx

; 5907 : BEGIN_PARAM(7)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5908 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_nRet)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L139942
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L139942
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 e7 00 00
	00		 jne	 $L139937
$L139942:

; 5909 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L139943
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L139943:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L139944
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 bc 00 00
	00		 jne	 $L139937
$L139944:

; 5910 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wMapID)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L139945
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L139945:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L139946
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 91 00 00
	00		 jne	 $L139937
$L139946:

; 5911 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_fPosX)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L139947
  00096	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAM@Z ; CSqlBase::BindParam
$L139947:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 06		 je	 SHORT $L139948
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	75 6a		 jne	 SHORT $L139937
$L139948:

; 5912 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_fPosY)

  000b3	3b fb		 cmp	 edi, ebx
  000b5	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bb	75 12		 jne	 SHORT $L139949
  000bd	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  000c3	51		 push	 ecx
  000c4	6a 05		 push	 5
  000c6	6a 01		 push	 1
  000c8	8b ce		 mov	 ecx, esi
  000ca	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAM@Z ; CSqlBase::BindParam
$L139949:
  000cf	66 3b c3	 cmp	 ax, bx
  000d2	74 06		 je	 SHORT $L139950
  000d4	66 3d 01 00	 cmp	 ax, 1
  000d8	75 43		 jne	 SHORT $L139937
$L139950:

; 5913 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_fPosZ)

  000da	3b fb		 cmp	 edi, ebx
  000dc	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000e2	75 12		 jne	 SHORT $L139951
  000e4	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  000ea	52		 push	 edx
  000eb	6a 06		 push	 6
  000ed	6a 01		 push	 1
  000ef	8b ce		 mov	 ecx, esi
  000f1	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAM@Z ; CSqlBase::BindParam
$L139951:
  000f6	66 3b c3	 cmp	 ax, bx
  000f9	74 06		 je	 SHORT $L139952
  000fb	66 3d 01 00	 cmp	 ax, 1
  000ff	75 1c		 jne	 SHORT $L139937
$L139952:

; 5914 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wDir)

  00101	3b fb		 cmp	 edi, ebx
  00103	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00109	75 12		 jne	 SHORT $L139937
  0010b	8d 86 44 0c 00
	00		 lea	 eax, DWORD PTR [esi+3140]
  00111	50		 push	 eax
  00112	6a 07		 push	 7
  00114	6a 01		 push	 1
  00116	8b ce		 mov	 ecx, esi
  00118	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L139937:
  0011d	5f		 pop	 edi
  0011e	5e		 pop	 esi
  0011f	5b		 pop	 ebx

; 5915 : END_PARAM()

  00120	c2 04 00	 ret	 4
?BindParameters@CSPSaveCharPosition@@UAEFH@Z ENDP	; CSPSaveCharPosition::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveCharPosition@@UAE@XZ			; CSPSaveCharPosition::~CSPSaveCharPosition
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveCharPosition@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveCharPosition@@UAEPAXI@Z PROC NEAR		; CSPSaveCharPosition::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveCharPosition@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L192584
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L192584:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveCharPosition@@UAEPAXI@Z ENDP			; CSPSaveCharPosition::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveCharPosition@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveCharPosition@@UAE@XZ PROC NEAR		; CSPSaveCharPosition::~CSPSaveCharPosition, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveCharPosition@@UAE@XZ ENDP			; CSPSaveCharPosition::~CSPSaveCharPosition
_TEXT	ENDS
PUBLIC	??0CSPSaveMissionOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveMissionOccupy::CSPSaveMissionOccupy
PUBLIC	?GetNumParam@CSPSaveMissionOccupy@@UAEHXZ	; CSPSaveMissionOccupy::GetNumParam
PUBLIC	?BindParameters@CSPSaveMissionOccupy@@UAEFH@Z	; CSPSaveMissionOccupy::BindParameters
PUBLIC	??_7CSPSaveMissionOccupy@@6B@			; CSPSaveMissionOccupy::`vftable'
PUBLIC	??_GCSPSaveMissionOccupy@@UAEPAXI@Z		; CSPSaveMissionOccupy::`scalar deleting destructor'
PUBLIC	??_C@_0CI@PNBOFEED@?$HL?5?$DP?5?$DN?5CALL?5TSaveMissionOccupy?$CI?$DP?0@ ; `string'
EXTRN	??_ECSPSaveMissionOccupy@@UAEPAXI@Z:NEAR	; CSPSaveMissionOccupy::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T192767 DD	0ffffffffH
	DD	FLAT:$L192593
$T192764 DD	019930520H
	DD	01H
	DD	FLAT:$T192767
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CI@PNBOFEED@?$HL?5?$DP?5?$DN?5CALL?5TSaveMissionOccupy?$CI?$DP?0@
CONST	SEGMENT
??_C@_0CI@PNBOFEED@?$HL?5?$DP?5?$DN?5CALL?5TSaveMissionOccupy?$CI?$DP?0@ DB '{'
	DB	' ? = CALL TSaveMissionOccupy(?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveMissionOccupy@@6B@
CONST	SEGMENT
??_7CSPSaveMissionOccupy@@6B@ DD FLAT:??_ECSPSaveMissionOccupy@@UAEPAXI@Z ; CSPSaveMissionOccupy::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveMissionOccupy@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveMissionOccupy@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveMissionOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T192592 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveMissionOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveMissionOccupy::CSPSaveMissionOccupy, COMDAT
; _this$ = ecx

; 5927 : DEF_QUERY(CSPSaveMissionOccupy, _T("{ ? = CALL TSaveMissionOccupy(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveMissionOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CI@PNBOFEED@?$HL?5?$DP?5?$DN?5CALL?5TSaveMissionOccupy?$CI?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T192592[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveMissionOccupy@@6B@
  0005e	72 0d		 jb	 SHORT $L192765
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L192765:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192593:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveMissionOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192764
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveMissionOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveMissionOccupy::CSPSaveMissionOccupy
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveMissionOccupy@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveMissionOccupy@@UAEHXZ PROC NEAR	; CSPSaveMissionOccupy::GetNumParam, COMDAT
; _this$ = ecx

; 5929 : BEGIN_PARAM(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumParam@CSPSaveMissionOccupy@@UAEHXZ ENDP		; CSPSaveMissionOccupy::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveMissionOccupy@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveMissionOccupy@@UAEFH@Z PROC NEAR	; CSPSaveMissionOccupy::BindParameters, COMDAT
; _this$ = ecx

; 5929 : BEGIN_PARAM(5)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5930 : 	PARAM_ENTRY( SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L140001
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L140001
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 91 00 00
	00		 jne	 $L139996
$L140001:

; 5931 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wLocalID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L140002
  00040	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L140002:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 06		 je	 SHORT $L140003
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	75 6a		 jne	 SHORT $L139996
$L140003:

; 5932 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bType)

  0005d	3b fb		 cmp	 edi, ebx
  0005f	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00065	75 12		 jne	 SHORT $L140004
  00067	8d 96 36 0c 00
	00		 lea	 edx, DWORD PTR [esi+3126]
  0006d	52		 push	 edx
  0006e	6a 03		 push	 3
  00070	6a 01		 push	 1
  00072	8b ce		 mov	 ecx, esi
  00074	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L140004:
  00079	66 3b c3	 cmp	 ax, bx
  0007c	74 06		 je	 SHORT $L140005
  0007e	66 3d 01 00	 cmp	 ax, 1
  00082	75 43		 jne	 SHORT $L139996
$L140005:

; 5933 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwOccupiedChar)

  00084	3b fb		 cmp	 edi, ebx
  00086	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  0008c	75 12		 jne	 SHORT $L140006
  0008e	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00094	50		 push	 eax
  00095	6a 04		 push	 4
  00097	6a 01		 push	 1
  00099	8b ce		 mov	 ecx, esi
  0009b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L140006:
  000a0	66 3b c3	 cmp	 ax, bx
  000a3	74 06		 je	 SHORT $L140007
  000a5	66 3d 01 00	 cmp	 ax, 1
  000a9	75 1c		 jne	 SHORT $L139996
$L140007:

; 5934 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bCountry)

  000ab	3b fb		 cmp	 edi, ebx
  000ad	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b3	75 12		 jne	 SHORT $L139996
  000b5	8d 8e 37 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3127]
  000bb	51		 push	 ecx
  000bc	6a 05		 push	 5
  000be	6a 01		 push	 1
  000c0	8b ce		 mov	 ecx, esi
  000c2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L139996:
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx

; 5935 : END_PARAM()

  000ca	c2 04 00	 ret	 4
?BindParameters@CSPSaveMissionOccupy@@UAEFH@Z ENDP	; CSPSaveMissionOccupy::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveMissionOccupy@@UAE@XZ			; CSPSaveMissionOccupy::~CSPSaveMissionOccupy
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveMissionOccupy@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveMissionOccupy@@UAEPAXI@Z PROC NEAR		; CSPSaveMissionOccupy::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveMissionOccupy@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L192779
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L192779:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveMissionOccupy@@UAEPAXI@Z ENDP		; CSPSaveMissionOccupy::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveMissionOccupy@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveMissionOccupy@@UAE@XZ PROC NEAR		; CSPSaveMissionOccupy::~CSPSaveMissionOccupy, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveMissionOccupy@@UAE@XZ ENDP			; CSPSaveMissionOccupy::~CSPSaveMissionOccupy
_TEXT	ENDS
PUBLIC	??0CSPMonthPvPointClear@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPMonthPvPointClear::CSPMonthPvPointClear
PUBLIC	??_7CSPMonthPvPointClear@@6B@			; CSPMonthPvPointClear::`vftable'
PUBLIC	??_GCSPMonthPvPointClear@@UAEPAXI@Z		; CSPMonthPvPointClear::`scalar deleting destructor'
PUBLIC	??_C@_0BM@ODIPLIJG@?$HL?5CALL?5TMonthPvPointClear?5?$HN?$AA@ ; `string'
EXTRN	??_ECSPMonthPvPointClear@@UAEPAXI@Z:NEAR	; CSPMonthPvPointClear::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T192962 DD	0ffffffffH
	DD	FLAT:$L192788
$T192959 DD	019930520H
	DD	01H
	DD	FLAT:$T192962
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@ODIPLIJG@?$HL?5CALL?5TMonthPvPointClear?5?$HN?$AA@
CONST	SEGMENT
??_C@_0BM@ODIPLIJG@?$HL?5CALL?5TMonthPvPointClear?5?$HN?$AA@ DB '{ CALL T'
	DB	'MonthPvPointClear }', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CSPMonthPvPointClear@@6B@
CONST	SEGMENT
??_7CSPMonthPvPointClear@@6B@ DD FLAT:??_ECSPMonthPvPointClear@@UAEPAXI@Z ; CSPMonthPvPointClear::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPMonthPvPointClear@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T192787 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPMonthPvPointClear@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPMonthPvPointClear::CSPMonthPvPointClear, COMDAT
; _this$ = ecx

; 5941 : 	DEF_QUERY(CSPMonthPvPointClear, _T("{ CALL TMonthPvPointClear }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPMonthPvPointClear@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@ODIPLIJG@?$HL?5CALL?5TMonthPvPointClear?5?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T192787[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPMonthPvPointClear@@6B@
  0005e	72 0d		 jb	 SHORT $L192960
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L192960:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192788:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPMonthPvPointClear@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T192959
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPMonthPvPointClear@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPMonthPvPointClear::CSPMonthPvPointClear
PUBLIC	??1CSPMonthPvPointClear@@UAE@XZ			; CSPMonthPvPointClear::~CSPMonthPvPointClear
; Function compile flags: /Ogty
;	COMDAT ??_GCSPMonthPvPointClear@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPMonthPvPointClear@@UAEPAXI@Z PROC NEAR		; CSPMonthPvPointClear::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPMonthPvPointClear@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L192968
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L192968:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPMonthPvPointClear@@UAEPAXI@Z ENDP		; CSPMonthPvPointClear::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPMonthPvPointClear@@UAE@XZ
_TEXT	SEGMENT
??1CSPMonthPvPointClear@@UAE@XZ PROC NEAR		; CSPMonthPvPointClear::~CSPMonthPvPointClear, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPMonthPvPointClear@@UAE@XZ ENDP			; CSPMonthPvPointClear::~CSPMonthPvPointClear
_TEXT	ENDS
PUBLIC	??0CSPTCMGiftLog@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTCMGiftLog::CSPTCMGiftLog
PUBLIC	?GetNumParam@CSPTCMGiftLog@@UAEHXZ		; CSPTCMGiftLog::GetNumParam
PUBLIC	?BindParameters@CSPTCMGiftLog@@UAEFH@Z		; CSPTCMGiftLog::BindParameters
PUBLIC	??_7CSPTCMGiftLog@@6B@				; CSPTCMGiftLog::`vftable'
PUBLIC	??_GCSPTCMGiftLog@@UAEPAXI@Z			; CSPTCMGiftLog::`scalar deleting destructor'
PUBLIC	??_C@_0BP@ODAIIEOC@?$HL?5CALL?5TCMGiftLog?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@ ; `string'
EXTRN	??_ECSPTCMGiftLog@@UAEPAXI@Z:NEAR		; CSPTCMGiftLog::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T193151 DD	0ffffffffH
	DD	FLAT:$L192977
$T193148 DD	019930520H
	DD	01H
	DD	FLAT:$T193151
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BP@ODAIIEOC@?$HL?5CALL?5TCMGiftLog?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT
??_C@_0BP@ODAIIEOC@?$HL?5CALL?5TCMGiftLog?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@ DB '{'
	DB	' CALL TCMGiftLog(?,?,?,?,?) }', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPTCMGiftLog@@6B@
CONST	SEGMENT
??_7CSPTCMGiftLog@@6B@ DD FLAT:??_ECSPTCMGiftLog@@UAEPAXI@Z ; CSPTCMGiftLog::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPTCMGiftLog@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPTCMGiftLog@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPTCMGiftLog@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T192976 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPTCMGiftLog@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPTCMGiftLog::CSPTCMGiftLog, COMDAT
; _this$ = ecx

; 5953 : 	DEF_QUERY(CSPTCMGiftLog, _T("{ CALL TCMGiftLog(?,?,?,?,?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPTCMGiftLog@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@ODAIIEOC@?$HL?5CALL?5TCMGiftLog?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T192976[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPTCMGiftLog@@6B@
  0005e	72 0d		 jb	 SHORT $L193149
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L193149:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L192977:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPTCMGiftLog@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T193148
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPTCMGiftLog@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPTCMGiftLog::CSPTCMGiftLog
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPTCMGiftLog@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPTCMGiftLog@@UAEHXZ PROC NEAR		; CSPTCMGiftLog::GetNumParam, COMDAT
; _this$ = ecx

; 5955 : BEGIN_PARAM(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumParam@CSPTCMGiftLog@@UAEHXZ ENDP			; CSPTCMGiftLog::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTCMGiftLog@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPTCMGiftLog@@UAEFH@Z PROC NEAR	; CSPTCMGiftLog::BindParameters, COMDAT
; _this$ = ecx

; 5955 : BEGIN_PARAM(5)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 5956 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwUserID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L140085
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L140085
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 91 00 00
	00		 jne	 $L140080
$L140085:

; 5957 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwCharID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L140086
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L140086:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 06		 je	 SHORT $L140087
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	75 6a		 jne	 SHORT $L140080
$L140087:

; 5958 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wGiftID)

  0005d	3b fb		 cmp	 edi, ebx
  0005f	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00065	75 12		 jne	 SHORT $L140088
  00067	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006d	52		 push	 edx
  0006e	6a 03		 push	 3
  00070	6a 01		 push	 1
  00072	8b ce		 mov	 ecx, esi
  00074	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L140088:
  00079	66 3b c3	 cmp	 ax, bx
  0007c	74 06		 je	 SHORT $L140089
  0007e	66 3d 01 00	 cmp	 ax, 1
  00082	75 43		 jne	 SHORT $L140080
$L140089:

; 5959 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwGMCharID)

  00084	3b fb		 cmp	 edi, ebx
  00086	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  0008c	75 12		 jne	 SHORT $L140090
  0008e	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00094	50		 push	 eax
  00095	6a 04		 push	 4
  00097	6a 01		 push	 1
  00099	8b ce		 mov	 ecx, esi
  0009b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L140090:
  000a0	66 3b c3	 cmp	 ax, bx
  000a3	74 06		 je	 SHORT $L140091
  000a5	66 3d 01 00	 cmp	 ax, 1
  000a9	75 1c		 jne	 SHORT $L140080
$L140091:

; 5960 : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_wErrID)

  000ab	3b fb		 cmp	 edi, ebx
  000ad	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b3	75 12		 jne	 SHORT $L140080
  000b5	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  000bb	51		 push	 ecx
  000bc	6a 05		 push	 5
  000be	6a 01		 push	 1
  000c0	8b ce		 mov	 ecx, esi
  000c2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L140080:
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx

; 5961 : END_PARAM()

  000ca	c2 04 00	 ret	 4
?BindParameters@CSPTCMGiftLog@@UAEFH@Z ENDP		; CSPTCMGiftLog::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPTCMGiftLog@@UAE@XZ			; CSPTCMGiftLog::~CSPTCMGiftLog
; Function compile flags: /Ogty
;	COMDAT ??_GCSPTCMGiftLog@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPTCMGiftLog@@UAEPAXI@Z PROC NEAR			; CSPTCMGiftLog::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPTCMGiftLog@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L193163
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L193163:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPTCMGiftLog@@UAEPAXI@Z ENDP			; CSPTCMGiftLog::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPTCMGiftLog@@UAE@XZ
_TEXT	SEGMENT
??1CSPTCMGiftLog@@UAE@XZ PROC NEAR			; CSPTCMGiftLog::~CSPTCMGiftLog, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPTCMGiftLog@@UAE@XZ ENDP				; CSPTCMGiftLog::~CSPTCMGiftLog
_TEXT	ENDS
PUBLIC	??_C@_0BH@HOJHKDNG@CSPSaveAuctionInterest?$AA@	; `string'
PUBLIC	??_C@_0BE@PDCBGENO@CTBLBattleZoneChart?$AA@	; `string'
PUBLIC	??_C@_0BB@GHLMOLCL@CSPGainCashBonus?$AA@	; `string'
PUBLIC	??_C@_0P@BHJHBODJ@CTBLLocalTable?$AA@		; `string'
PUBLIC	??_C@_0BD@JGHBDNBK@CSPGetMonthPvPoint?$AA@	; `string'
PUBLIC	??_C@_0BA@FEIOLMMB@CTBLCastleTable?$AA@		; `string'
PUBLIC	??_C@_0BE@JJKPAFHN@CSPSaveMonthPvPoint?$AA@	; `string'
PUBLIC	??_C@_0BC@FJNLONLJ@CTBLItemAttrChart?$AA@	; `string'
PUBLIC	??_C@_0BC@DCKKNBGN@CSPSaveWarlordSay?$AA@	; `string'
PUBLIC	??_C@_0BD@MKKIPGEA@CTBLItemGradeChart?$AA@	; `string'
PUBLIC	??_C@_0P@CNBPHJDO@CSPGetPostInfo?$AA@		; `string'
PUBLIC	??_C@_0BD@GPFBMNEO@CTBLItemMagicChart?$AA@	; `string'
PUBLIC	??_C@_0M@HCCKHDOF@CSPPostView?$AA@		; `string'
PUBLIC	??_C@_0BB@EBJKHPCD@CTBLItemSetChart?$AA@	; `string'
PUBLIC	??_C@_0BD@LHLNMLKP@CSPPostBillsUpdate?$AA@	; `string'
PUBLIC	??_C@_0N@FKAOJOJE@CTBLFindChar?$AA@		; `string'
PUBLIC	??_C@_0BE@JGAPCJOE@CSPTournamentReward?$AA@	; `string'
PUBLIC	??_C@_0O@PBEPFHDD@CTBLLocalInfo?$AA@		; `string'
PUBLIC	??_C@_0BE@JHKBAIGF@CSPSaveCharPosition?$AA@	; `string'
PUBLIC	??_C@_0N@DECINPDK@CTBLItemUsed?$AA@		; `string'
PUBLIC	??_C@_0BF@FGFIEEGL@CSPSaveMissionOccupy?$AA@	; `string'
PUBLIC	??_C@_0O@DKAAALAI@CTBLSpawnPath?$AA@		; `string'
PUBLIC	??_C@_0BF@PJDMFFDP@CSPMonthPvPointClear?$AA@	; `string'
PUBLIC	??_C@_0O@PAGKMGJM@CTBLRecallMon?$AA@		; `string'
PUBLIC	??_C@_0O@FOOMFNIG@CSPTCMGiftLog?$AA@		; `string'
PUBLIC	??_C@_0BA@NIDGMBCB@CTBLPortalChart?$AA@		; `string'
PUBLIC	??_C@_0BF@HOGANJA@CTBLDestinationChart?$AA@	; `string'
PUBLIC	??_C@_0O@KDHNAKEA@CTBLGateChart?$AA@		; `string'
PUBLIC	??_C@_0BA@NCLJGPCO@CTBLSwitchChart?$AA@		; `string'
PUBLIC	??_C@_0BC@DCCCNCDJ@CTBLOperatorChart?$AA@	; `string'
PUBLIC	??_C@_0N@MMEIPPMI@CTBLPetTable?$AA@		; `string'
PUBLIC	??_C@_0M@JLPOMNGI@CTBLMonAttr?$AA@		; `string'
PUBLIC	??_C@_0BD@HKDAILMJ@CTBLItemMagicSkill?$AA@	; `string'
PUBLIC	??_C@_0BE@GIHLAPGK@CTBLCashItemCabinet?$AA@	; `string'
PUBLIC	??_C@_0BB@CKCJFDDH@CTBLCashShopItem?$AA@	; `string'
PUBLIC	??_C@_0BB@GBEKHCCK@CTBLCashCategory?$AA@	; `string'
PUBLIC	??_C@_0L@OLFFNDG@CTBLGamble?$AA@		; `string'
PUBLIC	??_C@_0N@CAFCPGKD@CTBLGodTower?$AA@		; `string'
PUBLIC	??_C@_0M@ENLGOCKM@CTBLGodBall?$AA@		; `string'
PUBLIC	??_C@_0BA@IDGCOEKI@CTBLLocalOccupy?$AA@		; `string'
PUBLIC	??_C@_0P@KDDMBKPB@CTBLDuringItem?$AA@		; `string'
PUBLIC	??_C@_0M@DDHAJLGO@CTBLExpItem?$AA@		; `string'
PUBLIC	??_C@_0P@IOKEJNAJ@CTBLSkillPoint?$AA@		; `string'
PUBLIC	??_C@_0BD@MHEPPGPJ@CTBLRecallMaintain?$AA@	; `string'
PUBLIC	??_C@_0L@LMFKOODM@CTBLSvrMsg?$AA@		; `string'
PUBLIC	??_C@_0BB@CFIOCMPH@CTBLPvPointChart?$AA@	; `string'
PUBLIC	??_C@_0O@ICCNFCGA@CTBLPvPRecent?$AA@		; `string'
PUBLIC	??_C@_0BB@EPODMDNB@CTBLDuelCharList?$AA@	; `string'
PUBLIC	??_C@_0BC@EPGDKCBJ@CTBLDuelCharScore?$AA@	; `string'
PUBLIC	??_C@_0BA@KGPMLMDC@CTBLMonsterShop?$AA@		; `string'
PUBLIC	??_C@_0BE@PGAGDFLB@CTBLCashGambleChart?$AA@	; `string'
PUBLIC	??_C@_0BB@BOFEEHJC@CTBLAuctionTable?$AA@	; `string'
PUBLIC	??_C@_0BE@EJNLEJEB@CTBLAuctionInterest?$AA@	; `string'
PUBLIC	??_C@_0BD@GCFOENGO@CTBLAuctionBidList?$AA@	; `string'
PUBLIC	??_C@_0BF@JPDCKDNI@CTBLALLAuctionBidder?$AA@	; `string'
PUBLIC	??_C@_0BD@FPNBGEJP@CTBLAuctionRegList?$AA@	; `string'
PUBLIC	??_C@_0BD@MAPHLBOO@CTBLMonthRankTable?$AA@	; `string'
PUBLIC	??_C@_0BE@IMHJOJNN@CTBLFirstGradeGroup?$AA@	; `string'
PUBLIC	??_C@_0N@NMEIAFLJ@CTBLPostItem?$AA@		; `string'
PUBLIC	??_C@_0N@BPCBLBCE@CTBLPostBill?$AA@		; `string'
PUBLIC	??_C@_0O@CJJCAENO@CTBLHeroTable?$AA@		; `string'
PUBLIC	??_C@_0BF@GKEPILDD@CTBLTutorialCharItem?$AA@	; `string'
PUBLIC	??_C@_0BA@DFDJDDIP@CTBLHelpMessage?$AA@		; `string'
PUBLIC	??_C@_0BB@MBNGIBKG@CTBLMissionTable?$AA@	; `string'
PUBLIC	??_C@_0M@CGFJGBED@CTBLRPSGame?$AA@		; `string'
PUBLIC	??_C@_09NLBEDAFG@CTBLArena?$AA@			; `string'
PUBLIC	??_C@_0N@EHICCAHL@CTBLAidTable?$AA@		; `string'
PUBLIC	??_C@_0BD@KBGBHHPH@CSPCreateRecallMon?$AA@	; `string'
PUBLIC	??_C@_0BB@BPPADGEL@CSPSaveRecallMon?$AA@	; `string'
PUBLIC	??_C@_0P@NIFMANIC@CSPEnterServer?$AA@		; `string'
PUBLIC	??_C@_0P@DFHCCFBK@CSPGetServerID?$AA@		; `string'
PUBLIC	??_C@_0N@JMHOGABD@CSPSaveInven?$AA@		; `string'
PUBLIC	??_C@_0M@DEHBNGEB@CSPSaveItem?$AA@		; `string'
PUBLIC	??_C@_0M@KOFNIAIF@CSPSaveChar?$AA@		; `string'
PUBLIC	??_C@_09FMDGFNJM@CSPLogout?$AA@			; `string'
PUBLIC	??_C@_08ELCCIPKB@CSPRoute?$AA@			; `string'
PUBLIC	??_C@_0N@MDEONAFK@CSPSaveSkill?$AA@		; `string'
PUBLIC	??_C@_0BF@NIDOFGNK@CSPSaveSkillMaintain?$AA@	; `string'
PUBLIC	??_C@_0N@IOOBJLBO@CSPSaveQuest?$AA@		; `string'
PUBLIC	??_C@_0BB@EKKINMNJ@CSPSaveQuestTerm?$AA@	; `string'
PUBLIC	??_C@_0P@BDCNMICA@CSPSaveCabinet?$AA@		; `string'
PUBLIC	??_C@_0O@IBLOOOKC@CSPSaveHotkey?$AA@		; `string'
PUBLIC	??_C@_0BD@PAKGKKPG@CSPSaveLocalOccupy?$AA@	; `string'
PUBLIC	??_C@_0BE@LMOHDPJJ@CSPSaveCastleOccupy?$AA@	; `string'
PUBLIC	??_C@_0P@GGJCLGEN@CSPPostCanSend?$AA@		; `string'
PUBLIC	??_C@_0M@FNDCIFPG@CSPSavePost?$AA@		; `string'
PUBLIC	??_C@_0M@KLJKIDND@CSPPostRead?$AA@		; `string'
PUBLIC	??_C@_0O@NBPELKJC@CSPPostDelete?$AA@		; `string'
PUBLIC	??_C@_0P@KLLIFGCI@CSPPostGetItem?$AA@		; `string'
PUBLIC	??_C@_0BA@HLMICCHJ@CSPSaveItemUsed?$AA@		; `string'
PUBLIC	??_C@_0BE@MEAJGGBL@CSPClearCurrentUser?$AA@	; `string'
PUBLIC	??_C@_0BA@BJNJMJOJ@CSPRecallmonDel?$AA@		; `string'
PUBLIC	??_C@_0M@EOLAMDPB@CSPLogSkill?$AA@		; `string'
PUBLIC	??_C@_0BD@LAGALIBN@CSPProtectedInsert?$AA@	; `string'
PUBLIC	??_C@_0BD@OJEHGOP@CSPProtectedDelete?$AA@	; `string'
PUBLIC	??_C@_0N@LHFIMBJJ@CSPPetDelete?$AA@		; `string'
PUBLIC	??_C@_0L@EPCAFCMO@CSPSavePet?$AA@		; `string'
PUBLIC	??_C@_0BF@NOILHOMJ@CSPSaveCharDataStart?$AA@	; `string'
PUBLIC	??_C@_0BD@PCEMMOCL@CSPSaveCharDataEnd?$AA@	; `string'
PUBLIC	??_C@_0BB@KCHGIENF@CTBLChannelChart?$AA@	; `string'
PUBLIC	??_C@_0BF@BMAJLAAB@CSPSaveItemDataStart?$AA@	; `string'
PUBLIC	??_C@_0BA@DFIJDCCK@CTBLChannelList?$AA@		; `string'
PUBLIC	??_C@_0BD@MGAFFNJM@CSPSaveItemDataEnd?$AA@	; `string'
PUBLIC	??_C@_0BA@NAFKIKLK@CTBLServerChart?$AA@		; `string'
PUBLIC	??_C@_0P@EOMPGPJC@CSPLoadService?$AA@		; `string'
PUBLIC	??_C@_0BB@EHOPGBMH@CTBLFormulaChart?$AA@	; `string'
PUBLIC	??_C@_0L@LBAOFIBN@CSPSaveSMS?$AA@		; `string'
PUBLIC	??_C@_0BA@IJPCID@CTBLAICondition?$AA@		; `string'
PUBLIC	??_C@_0BB@CGOEDDEN@CSPGetPcBangData?$AA@	; `string'
PUBLIC	??_C@_0O@BGIKPMOF@CTBLAICommand?$AA@		; `string'
PUBLIC	??_C@_0BA@FEAEGPEI@CSPEventQuarter?$AA@		; `string'
PUBLIC	??_C@_0M@CCMPPDIF@CTBLAIChart?$AA@		; `string'
PUBLIC	??_C@_0L@PGJMCPPI@CSPGetCash?$AA@		; `string'
PUBLIC	??_C@_0M@FNPLOPMJ@CTBLMonster?$AA@		; `string'
PUBLIC	??_C@_0P@JJMKNAKC@CSPCashItemGet?$AA@		; `string'
PUBLIC	??_C@_07PLIEIMII@CTBLPet?$AA@			; `string'
PUBLIC	??_C@_0P@HJMPNKN@CSPCashItemBuy?$AA@		; `string'
PUBLIC	??_C@_0N@GCBODBJI@CTBLMonSpawn?$AA@		; `string'
PUBLIC	??_C@_0BC@LLGEMHHG@CSPSaveDuringItem?$AA@	; `string'
PUBLIC	??_C@_0N@PMGDDPLK@CTBLMonParty?$AA@		; `string'
PUBLIC	??_C@_0P@MHPIKMN@CSPSaveExpItem?$AA@		; `string'
PUBLIC	??_C@_0L@CLFGIJLB@CTBLMapMon?$AA@		; `string'
PUBLIC	??_C@_0BC@CDMHKLGI@CSPSaveItemDirect?$AA@	; `string'
PUBLIC	??_C@_0P@CGLPNFOC@CTBLLevelChart?$AA@		; `string'
PUBLIC	??_C@_0BC@ICGANCLP@CSPGuildItemPutIn?$AA@	; `string'
PUBLIC	??_C@_0P@KKLBPBNN@CTBLClassChart?$AA@		; `string'
PUBLIC	??_C@_0BE@OLANJJJB@CSPGuildItemTakeOut?$AA@	; `string'
PUBLIC	??_C@_0P@GJEOEDNH@CTBLSkillChart?$AA@		; `string'
PUBLIC	??_C@_0BF@HKJBIGFB@CSPGuildItemRollback?$AA@	; `string'
PUBLIC	??_C@_0O@NIBNECBP@CTBLItemChart?$AA@		; `string'
PUBLIC	??_C@_0L@PFLMGCAG@CSPSaveEXP?$AA@		; `string'
PUBLIC	??_C@_0O@BEIEHINO@CTBLRaceChart?$AA@		; `string'
PUBLIC	??_C@_0N@KKKBPAFD@CSPSaveMoney?$AA@		; `string'
PUBLIC	??_C@_09EAGHDKO@CTBLSkill?$AA@			; `string'
PUBLIC	??_C@_0O@NADADAPK@CSPSaveActEnd?$AA@		; `string'
PUBLIC	??_C@_09FLDGMDOH@CTBLInven?$AA@			; `string'
PUBLIC	??_C@_0BC@CEIJJCMA@CSPCashCabinetBuy?$AA@	; `string'
PUBLIC	??_C@_08KLHKJGDK@CTBLItem?$AA@			; `string'
PUBLIC	?InitQueryTMapSvr@@YAHPAVCSqlDatabase@@@Z	; InitQueryTMapSvr
PUBLIC	??_C@_0BB@NIKJIGFC@CSPCashItemPutin?$AA@	; `string'
PUBLIC	??_C@_08DBFGMAPO@CTBLChar?$AA@			; `string'
PUBLIC	??_C@_0BJ@EIMKHAJ@CSPGetCashCabinetUseTime?$AA@	; `string'
PUBLIC	??_C@_0BC@CGFODEPN@CTBLSoulmateTable?$AA@	; `string'
PUBLIC	??_C@_0BB@CKCNPPEK@CSPInitGenItemID?$AA@	; `string'
PUBLIC	??_C@_0BD@HFJFAGJP@CTBLProtectedTable?$AA@	; `string'
PUBLIC	??_C@_0BC@GKDMPOAN@CSPDeleteDealItem?$AA@	; `string'
PUBLIC	??_C@_0O@KDICEIP@CTBLCharGuild?$AA@		; `string'
PUBLIC	??_C@_0BG@FDJOJBBC@CSPSaveRecallMaintain?$AA@	; `string'
PUBLIC	??_C@_0BA@KMFPJMMM@CTBLCharTactics?$AA@		; `string'
PUBLIC	??_C@_0BG@JNMKAOE@CSPCheckDuplicateName?$AA@	; `string'
PUBLIC	??_C@_0BC@FNBBGHEG@CTBLCharGuildInfo?$AA@	; `string'
PUBLIC	??_C@_0O@MIAACEO@CSPHeroSelect?$AA@		; `string'
PUBLIC	??_C@_0BC@GNGCDJFD@CTBLSkillMaintain?$AA@	; `string'
PUBLIC	??_C@_0BA@IFJJLPNO@CSPStopTheClock?$AA@		; `string'
PUBLIC	??_C@_0O@KLMDCPCF@CTBLSkillData?$AA@		; `string'
PUBLIC	??_C@_0BA@OKFNCCNL@CSPSaveCharBase?$AA@		; `string'
PUBLIC	??_C@_0P@BPNLEJHH@CTBLQuestChart?$AA@		; `string'
PUBLIC	??_C@_0BD@CAGAKGIN@CSPGetLimitedLevel?$AA@	; `string'
PUBLIC	??_C@_0BI@FPLMGNFI@CTBLQuestConditionChart?$AA@	; `string'
PUBLIC	??_C@_0N@KEAKLAPB@CSPGetNation?$AA@		; `string'
PUBLIC	??_C@_0BF@EAJLALIO@CTBLQuestRewardChart?$AA@	; `string'
PUBLIC	??_C@_0BB@LPACKMBP@CSPQuestSendPost?$AA@	; `string'
PUBLIC	??_C@_0BI@OCGLNJNE@CTBLQuestMagicItemChart?$AA@	; `string'
PUBLIC	??_C@_0BA@PKCCEPBN@CSPGetPvPRecord?$AA@		; `string'
PUBLIC	??_C@_0BD@BOHJADFB@CTBLQuestTermChart?$AA@	; `string'
PUBLIC	??_C@_0BB@FNPEAKJG@CSPSavePvPRecord?$AA@	; `string'
PUBLIC	??_C@_0P@FLMMBLKB@CTBLQuestTable?$AA@		; `string'
PUBLIC	??_C@_0BB@GNLHKCLH@CSPSavePvPRecent?$AA@	; `string'
PUBLIC	??_C@_0BD@FKGOFBIH@CTBLQuestTermTable?$AA@	; `string'
PUBLIC	??_C@_0N@ECNNALID@CSPDuelScore?$AA@		; `string'
PUBLIC	??_C@_0BB@FEMHEDED@CTBLCabinetTable?$AA@	; `string'
PUBLIC	??_C@_0P@KCNFKBEK@CSPDuelCharAdd?$AA@		; `string'
PUBLIC	??_C@_0N@LDOMJEMG@CTBLSpawnPos?$AA@		; `string'
PUBLIC	??_C@_0BH@NEENLJKB@CSPSaveProtectedOption?$AA@	; `string'
PUBLIC	??_C@_0P@MGBKMIKC@CTBLIndunChart?$AA@		; `string'
PUBLIC	??_C@_0O@BFNPLBEO@CSPAuctionReg?$AA@		; `string'
PUBLIC	??_C@_07FECMEJCJ@CTBLNpc?$AA@			; `string'
PUBLIC	??_C@_0BE@ECKBINFG@CSPAuctionRegCancel?$AA@	; `string'
PUBLIC	??_C@_0M@NILHLJGK@CTBLNpcItem?$AA@		; `string'
PUBLIC	??_C@_0O@GHPBEMHG@CSPAuctionBid?$AA@		; `string'
PUBLIC	??_C@_0M@HLDAEBHA@CTBLMonItem?$AA@		; `string'
PUBLIC	??_C@_0BE@IPOHBAIB@CSPAuctionBuyDirect?$AA@	; `string'
PUBLIC	??_C@_0O@CBLGIHPG@CTBLPostTable?$AA@		; `string'
PUBLIC	??_C@_0O@PPGJGCEK@CSPAuctionEnd?$AA@		; `string'
PUBLIC	??_C@_0L@JLJLDPDK@CTBLHotKey?$AA@		; `string'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T194675 DD	0ffffffffH
	DD	FLAT:$L194091
	DD	0ffffffffH
	DD	FLAT:$L194093
	DD	0ffffffffH
	DD	FLAT:$L194095
	DD	0ffffffffH
	DD	FLAT:$L194097
	DD	0ffffffffH
	DD	FLAT:$L194099
	DD	0ffffffffH
	DD	FLAT:$L194101
	DD	0ffffffffH
	DD	FLAT:$L194103
	DD	0ffffffffH
	DD	FLAT:$L194105
	DD	0ffffffffH
	DD	FLAT:$L194107
	DD	0ffffffffH
	DD	FLAT:$L194109
	DD	0ffffffffH
	DD	FLAT:$L194111
	DD	0ffffffffH
	DD	FLAT:$L194113
	DD	0ffffffffH
	DD	FLAT:$L194115
	DD	0ffffffffH
	DD	FLAT:$L194117
	DD	0ffffffffH
	DD	FLAT:$L194119
	DD	0ffffffffH
	DD	FLAT:$L194121
	DD	0ffffffffH
	DD	FLAT:$L194123
	DD	0ffffffffH
	DD	FLAT:$L194125
	DD	0ffffffffH
	DD	FLAT:$L194127
	DD	0ffffffffH
	DD	FLAT:$L194129
	DD	0ffffffffH
	DD	FLAT:$L194131
	DD	0ffffffffH
	DD	FLAT:$L194133
	DD	0ffffffffH
	DD	FLAT:$L194135
	DD	0ffffffffH
	DD	FLAT:$L194137
	DD	0ffffffffH
	DD	FLAT:$L194139
	DD	0ffffffffH
	DD	FLAT:$L194141
	DD	0ffffffffH
	DD	FLAT:$L194143
	DD	0ffffffffH
	DD	FLAT:$L194145
	DD	0ffffffffH
	DD	FLAT:$L194147
	DD	0ffffffffH
	DD	FLAT:$L194149
	DD	0ffffffffH
	DD	FLAT:$L194151
	DD	0ffffffffH
	DD	FLAT:$L194153
	DD	0ffffffffH
	DD	FLAT:$L194155
	DD	0ffffffffH
	DD	FLAT:$L194157
	DD	0ffffffffH
	DD	FLAT:$L194159
	DD	0ffffffffH
	DD	FLAT:$L194161
	DD	0ffffffffH
	DD	FLAT:$L194163
	DD	0ffffffffH
	DD	FLAT:$L194165
	DD	0ffffffffH
	DD	FLAT:$L194167
	DD	0ffffffffH
	DD	FLAT:$L194169
	DD	0ffffffffH
	DD	FLAT:$L194171
	DD	0ffffffffH
	DD	FLAT:$L194173
	DD	0ffffffffH
	DD	FLAT:$L194175
	DD	0ffffffffH
	DD	FLAT:$L194177
	DD	0ffffffffH
	DD	FLAT:$L194179
	DD	0ffffffffH
	DD	FLAT:$L194181
	DD	0ffffffffH
	DD	FLAT:$L194183
	DD	0ffffffffH
	DD	FLAT:$L194185
	DD	0ffffffffH
	DD	FLAT:$L194187
	DD	0ffffffffH
	DD	FLAT:$L194189
	DD	0ffffffffH
	DD	FLAT:$L194191
	DD	0ffffffffH
	DD	FLAT:$L194193
	DD	0ffffffffH
	DD	FLAT:$L194195
	DD	0ffffffffH
	DD	FLAT:$L194197
	DD	0ffffffffH
	DD	FLAT:$L194199
	DD	0ffffffffH
	DD	FLAT:$L194201
	DD	0ffffffffH
	DD	FLAT:$L194203
	DD	0ffffffffH
	DD	FLAT:$L194205
	DD	0ffffffffH
	DD	FLAT:$L194207
	DD	0ffffffffH
	DD	FLAT:$L194209
	DD	0ffffffffH
	DD	FLAT:$L194211
	DD	0ffffffffH
	DD	FLAT:$L194213
	DD	0ffffffffH
	DD	FLAT:$L194215
	DD	0ffffffffH
	DD	FLAT:$L194217
	DD	0ffffffffH
	DD	FLAT:$L194219
	DD	0ffffffffH
	DD	FLAT:$L194221
	DD	0ffffffffH
	DD	FLAT:$L194223
	DD	0ffffffffH
	DD	FLAT:$L194225
	DD	0ffffffffH
	DD	FLAT:$L194227
	DD	0ffffffffH
	DD	FLAT:$L194229
	DD	0ffffffffH
	DD	FLAT:$L194231
	DD	0ffffffffH
	DD	FLAT:$L194233
	DD	0ffffffffH
	DD	FLAT:$L194235
	DD	0ffffffffH
	DD	FLAT:$L194237
	DD	0ffffffffH
	DD	FLAT:$L194239
	DD	0ffffffffH
	DD	FLAT:$L194241
	DD	0ffffffffH
	DD	FLAT:$L194243
	DD	0ffffffffH
	DD	FLAT:$L194245
	DD	0ffffffffH
	DD	FLAT:$L194247
	DD	0ffffffffH
	DD	FLAT:$L194249
	DD	0ffffffffH
	DD	FLAT:$L194251
	DD	0ffffffffH
	DD	FLAT:$L194253
	DD	0ffffffffH
	DD	FLAT:$L194255
	DD	0ffffffffH
	DD	FLAT:$L194257
	DD	0ffffffffH
	DD	FLAT:$L194259
	DD	0ffffffffH
	DD	FLAT:$L194261
	DD	0ffffffffH
	DD	FLAT:$L194263
	DD	0ffffffffH
	DD	FLAT:$L194265
	DD	0ffffffffH
	DD	FLAT:$L194267
	DD	0ffffffffH
	DD	FLAT:$L194269
	DD	0ffffffffH
	DD	FLAT:$L194271
	DD	0ffffffffH
	DD	FLAT:$L194273
	DD	0ffffffffH
	DD	FLAT:$L194275
	DD	0ffffffffH
	DD	FLAT:$L194277
	DD	0ffffffffH
	DD	FLAT:$L194279
	DD	0ffffffffH
	DD	FLAT:$L194281
	DD	0ffffffffH
	DD	FLAT:$L194283
	DD	0ffffffffH
	DD	FLAT:$L194285
	DD	0ffffffffH
	DD	FLAT:$L194287
	DD	0ffffffffH
	DD	FLAT:$L194289
	DD	0ffffffffH
	DD	FLAT:$L194291
	DD	0ffffffffH
	DD	FLAT:$L194293
	DD	0ffffffffH
	DD	FLAT:$L194295
	DD	0ffffffffH
	DD	FLAT:$L194297
	DD	0ffffffffH
	DD	FLAT:$L194299
	DD	0ffffffffH
	DD	FLAT:$L194301
	DD	0ffffffffH
	DD	FLAT:$L194303
	DD	0ffffffffH
	DD	FLAT:$L194305
	DD	0ffffffffH
	DD	FLAT:$L194307
	DD	0ffffffffH
	DD	FLAT:$L194309
	DD	0ffffffffH
	DD	FLAT:$L194311
	DD	0ffffffffH
	DD	FLAT:$L194313
	DD	0ffffffffH
	DD	FLAT:$L194315
	DD	0ffffffffH
	DD	FLAT:$L194317
	DD	0ffffffffH
	DD	FLAT:$L194319
	DD	0ffffffffH
	DD	FLAT:$L194321
	DD	0ffffffffH
	DD	FLAT:$L194323
	DD	0ffffffffH
	DD	FLAT:$L194325
	DD	0ffffffffH
	DD	FLAT:$L194327
	DD	0ffffffffH
	DD	FLAT:$L194329
	DD	0ffffffffH
	DD	FLAT:$L194331
	DD	0ffffffffH
	DD	FLAT:$L194333
	DD	0ffffffffH
	DD	FLAT:$L194335
	DD	0ffffffffH
	DD	FLAT:$L194337
	DD	0ffffffffH
	DD	FLAT:$L194339
	DD	0ffffffffH
	DD	FLAT:$L194341
	DD	0ffffffffH
	DD	FLAT:$L194343
	DD	0ffffffffH
	DD	FLAT:$L194345
	DD	0ffffffffH
	DD	FLAT:$L194347
	DD	0ffffffffH
	DD	FLAT:$L194349
	DD	0ffffffffH
	DD	FLAT:$L194351
	DD	0ffffffffH
	DD	FLAT:$L194353
	DD	0ffffffffH
	DD	FLAT:$L194355
	DD	0ffffffffH
	DD	FLAT:$L194357
	DD	0ffffffffH
	DD	FLAT:$L194359
	DD	0ffffffffH
	DD	FLAT:$L194361
	DD	0ffffffffH
	DD	FLAT:$L194363
	DD	0ffffffffH
	DD	FLAT:$L194365
	DD	0ffffffffH
	DD	FLAT:$L194367
	DD	0ffffffffH
	DD	FLAT:$L194369
	DD	0ffffffffH
	DD	FLAT:$L194371
	DD	0ffffffffH
	DD	FLAT:$L194373
	DD	0ffffffffH
	DD	FLAT:$L194375
	DD	0ffffffffH
	DD	FLAT:$L194377
	DD	0ffffffffH
	DD	FLAT:$L194379
	DD	0ffffffffH
	DD	FLAT:$L194381
	DD	0ffffffffH
	DD	FLAT:$L194383
	DD	0ffffffffH
	DD	FLAT:$L194385
	DD	0ffffffffH
	DD	FLAT:$L194387
	DD	0ffffffffH
	DD	FLAT:$L194389
	DD	0ffffffffH
	DD	FLAT:$L194391
	DD	0ffffffffH
	DD	FLAT:$L194393
	DD	0ffffffffH
	DD	FLAT:$L194395
	DD	0ffffffffH
	DD	FLAT:$L194397
	DD	0ffffffffH
	DD	FLAT:$L194399
	DD	0ffffffffH
	DD	FLAT:$L194401
	DD	0ffffffffH
	DD	FLAT:$L194403
	DD	0ffffffffH
	DD	FLAT:$L194405
	DD	0ffffffffH
	DD	FLAT:$L194407
	DD	0ffffffffH
	DD	FLAT:$L194409
	DD	0ffffffffH
	DD	FLAT:$L194411
	DD	0ffffffffH
	DD	FLAT:$L194413
	DD	0ffffffffH
	DD	FLAT:$L194415
	DD	0ffffffffH
	DD	FLAT:$L194417
	DD	0ffffffffH
	DD	FLAT:$L194419
	DD	0ffffffffH
	DD	FLAT:$L194421
	DD	0ffffffffH
	DD	FLAT:$L194423
	DD	0ffffffffH
	DD	FLAT:$L194425
	DD	0ffffffffH
	DD	FLAT:$L194427
	DD	0ffffffffH
	DD	FLAT:$L194429
	DD	0ffffffffH
	DD	FLAT:$L194431
	DD	0ffffffffH
	DD	FLAT:$L194433
	DD	0ffffffffH
	DD	FLAT:$L194435
	DD	0ffffffffH
	DD	FLAT:$L194437
	DD	0ffffffffH
	DD	FLAT:$L194439
	DD	0ffffffffH
	DD	FLAT:$L194441
	DD	0ffffffffH
	DD	FLAT:$L194443
	DD	0ffffffffH
	DD	FLAT:$L194445
	DD	0ffffffffH
	DD	FLAT:$L194447
	DD	0ffffffffH
	DD	FLAT:$L194449
	DD	0ffffffffH
	DD	FLAT:$L194451
	DD	0ffffffffH
	DD	FLAT:$L194453
	DD	0ffffffffH
	DD	FLAT:$L194455
	DD	0ffffffffH
	DD	FLAT:$L194457
$T194672 DD	019930520H
	DD	0b8H
	DD	FLAT:$T194675
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BB@KCHGIENF@CTBLChannelChart?$AA@
CONST	SEGMENT
??_C@_0BB@KCHGIENF@CTBLChannelChart?$AA@ DB 'CTBLChannelChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DFIJDCCK@CTBLChannelList?$AA@
CONST	SEGMENT
??_C@_0BA@DFIJDCCK@CTBLChannelList?$AA@ DB 'CTBLChannelList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NAFKIKLK@CTBLServerChart?$AA@
CONST	SEGMENT
??_C@_0BA@NAFKIKLK@CTBLServerChart?$AA@ DB 'CTBLServerChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EHOPGBMH@CTBLFormulaChart?$AA@
CONST	SEGMENT
??_C@_0BB@EHOPGBMH@CTBLFormulaChart?$AA@ DB 'CTBLFormulaChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IJPCID@CTBLAICondition?$AA@
CONST	SEGMENT
??_C@_0BA@IJPCID@CTBLAICondition?$AA@ DB 'CTBLAICondition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BGIKPMOF@CTBLAICommand?$AA@
CONST	SEGMENT
??_C@_0O@BGIKPMOF@CTBLAICommand?$AA@ DB 'CTBLAICommand', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CCMPPDIF@CTBLAIChart?$AA@
CONST	SEGMENT
??_C@_0M@CCMPPDIF@CTBLAIChart?$AA@ DB 'CTBLAIChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FNPLOPMJ@CTBLMonster?$AA@
CONST	SEGMENT
??_C@_0M@FNPLOPMJ@CTBLMonster?$AA@ DB 'CTBLMonster', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07PLIEIMII@CTBLPet?$AA@
CONST	SEGMENT
??_C@_07PLIEIMII@CTBLPet?$AA@ DB 'CTBLPet', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GCBODBJI@CTBLMonSpawn?$AA@
CONST	SEGMENT
??_C@_0N@GCBODBJI@CTBLMonSpawn?$AA@ DB 'CTBLMonSpawn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PMGDDPLK@CTBLMonParty?$AA@
CONST	SEGMENT
??_C@_0N@PMGDDPLK@CTBLMonParty?$AA@ DB 'CTBLMonParty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@CLFGIJLB@CTBLMapMon?$AA@
CONST	SEGMENT
??_C@_0L@CLFGIJLB@CTBLMapMon?$AA@ DB 'CTBLMapMon', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CGLPNFOC@CTBLLevelChart?$AA@
CONST	SEGMENT
??_C@_0P@CGLPNFOC@CTBLLevelChart?$AA@ DB 'CTBLLevelChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KKLBPBNN@CTBLClassChart?$AA@
CONST	SEGMENT
??_C@_0P@KKLBPBNN@CTBLClassChart?$AA@ DB 'CTBLClassChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GJEOEDNH@CTBLSkillChart?$AA@
CONST	SEGMENT
??_C@_0P@GJEOEDNH@CTBLSkillChart?$AA@ DB 'CTBLSkillChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NIBNECBP@CTBLItemChart?$AA@
CONST	SEGMENT
??_C@_0O@NIBNECBP@CTBLItemChart?$AA@ DB 'CTBLItemChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BEIEHINO@CTBLRaceChart?$AA@
CONST	SEGMENT
??_C@_0O@BEIEHINO@CTBLRaceChart?$AA@ DB 'CTBLRaceChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09EAGHDKO@CTBLSkill?$AA@
CONST	SEGMENT
??_C@_09EAGHDKO@CTBLSkill?$AA@ DB 'CTBLSkill', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FLDGMDOH@CTBLInven?$AA@
CONST	SEGMENT
??_C@_09FLDGMDOH@CTBLInven?$AA@ DB 'CTBLInven', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08KLHKJGDK@CTBLItem?$AA@
CONST	SEGMENT
??_C@_08KLHKJGDK@CTBLItem?$AA@ DB 'CTBLItem', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08DBFGMAPO@CTBLChar?$AA@
CONST	SEGMENT
??_C@_08DBFGMAPO@CTBLChar?$AA@ DB 'CTBLChar', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CGFODEPN@CTBLSoulmateTable?$AA@
CONST	SEGMENT
??_C@_0BC@CGFODEPN@CTBLSoulmateTable?$AA@ DB 'CTBLSoulmateTable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HFJFAGJP@CTBLProtectedTable?$AA@
CONST	SEGMENT
??_C@_0BD@HFJFAGJP@CTBLProtectedTable?$AA@ DB 'CTBLProtectedTable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KDICEIP@CTBLCharGuild?$AA@
CONST	SEGMENT
??_C@_0O@KDICEIP@CTBLCharGuild?$AA@ DB 'CTBLCharGuild', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KMFPJMMM@CTBLCharTactics?$AA@
CONST	SEGMENT
??_C@_0BA@KMFPJMMM@CTBLCharTactics?$AA@ DB 'CTBLCharTactics', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FNBBGHEG@CTBLCharGuildInfo?$AA@
CONST	SEGMENT
??_C@_0BC@FNBBGHEG@CTBLCharGuildInfo?$AA@ DB 'CTBLCharGuildInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GNGCDJFD@CTBLSkillMaintain?$AA@
CONST	SEGMENT
??_C@_0BC@GNGCDJFD@CTBLSkillMaintain?$AA@ DB 'CTBLSkillMaintain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KLMDCPCF@CTBLSkillData?$AA@
CONST	SEGMENT
??_C@_0O@KLMDCPCF@CTBLSkillData?$AA@ DB 'CTBLSkillData', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BPNLEJHH@CTBLQuestChart?$AA@
CONST	SEGMENT
??_C@_0P@BPNLEJHH@CTBLQuestChart?$AA@ DB 'CTBLQuestChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FPLMGNFI@CTBLQuestConditionChart?$AA@
CONST	SEGMENT
??_C@_0BI@FPLMGNFI@CTBLQuestConditionChart?$AA@ DB 'CTBLQuestConditionCha'
	DB	'rt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EAJLALIO@CTBLQuestRewardChart?$AA@
CONST	SEGMENT
??_C@_0BF@EAJLALIO@CTBLQuestRewardChart?$AA@ DB 'CTBLQuestRewardChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@OCGLNJNE@CTBLQuestMagicItemChart?$AA@
CONST	SEGMENT
??_C@_0BI@OCGLNJNE@CTBLQuestMagicItemChart?$AA@ DB 'CTBLQuestMagicItemCha'
	DB	'rt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BOHJADFB@CTBLQuestTermChart?$AA@
CONST	SEGMENT
??_C@_0BD@BOHJADFB@CTBLQuestTermChart?$AA@ DB 'CTBLQuestTermChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FLMMBLKB@CTBLQuestTable?$AA@
CONST	SEGMENT
??_C@_0P@FLMMBLKB@CTBLQuestTable?$AA@ DB 'CTBLQuestTable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FKGOFBIH@CTBLQuestTermTable?$AA@
CONST	SEGMENT
??_C@_0BD@FKGOFBIH@CTBLQuestTermTable?$AA@ DB 'CTBLQuestTermTable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FEMHEDED@CTBLCabinetTable?$AA@
CONST	SEGMENT
??_C@_0BB@FEMHEDED@CTBLCabinetTable?$AA@ DB 'CTBLCabinetTable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LDOMJEMG@CTBLSpawnPos?$AA@
CONST	SEGMENT
??_C@_0N@LDOMJEMG@CTBLSpawnPos?$AA@ DB 'CTBLSpawnPos', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MGBKMIKC@CTBLIndunChart?$AA@
CONST	SEGMENT
??_C@_0P@MGBKMIKC@CTBLIndunChart?$AA@ DB 'CTBLIndunChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07FECMEJCJ@CTBLNpc?$AA@
CONST	SEGMENT
??_C@_07FECMEJCJ@CTBLNpc?$AA@ DB 'CTBLNpc', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NILHLJGK@CTBLNpcItem?$AA@
CONST	SEGMENT
??_C@_0M@NILHLJGK@CTBLNpcItem?$AA@ DB 'CTBLNpcItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HLDAEBHA@CTBLMonItem?$AA@
CONST	SEGMENT
??_C@_0M@HLDAEBHA@CTBLMonItem?$AA@ DB 'CTBLMonItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CBLGIHPG@CTBLPostTable?$AA@
CONST	SEGMENT
??_C@_0O@CBLGIHPG@CTBLPostTable?$AA@ DB 'CTBLPostTable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JLJLDPDK@CTBLHotKey?$AA@
CONST	SEGMENT
??_C@_0L@JLJLDPDK@CTBLHotKey?$AA@ DB 'CTBLHotKey', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PDCBGENO@CTBLBattleZoneChart?$AA@
CONST	SEGMENT
??_C@_0BE@PDCBGENO@CTBLBattleZoneChart?$AA@ DB 'CTBLBattleZoneChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BHJHBODJ@CTBLLocalTable?$AA@
CONST	SEGMENT
??_C@_0P@BHJHBODJ@CTBLLocalTable?$AA@ DB 'CTBLLocalTable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FEIOLMMB@CTBLCastleTable?$AA@
CONST	SEGMENT
??_C@_0BA@FEIOLMMB@CTBLCastleTable?$AA@ DB 'CTBLCastleTable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@FJNLONLJ@CTBLItemAttrChart?$AA@
CONST	SEGMENT
??_C@_0BC@FJNLONLJ@CTBLItemAttrChart?$AA@ DB 'CTBLItemAttrChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MKKIPGEA@CTBLItemGradeChart?$AA@
CONST	SEGMENT
??_C@_0BD@MKKIPGEA@CTBLItemGradeChart?$AA@ DB 'CTBLItemGradeChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GPFBMNEO@CTBLItemMagicChart?$AA@
CONST	SEGMENT
??_C@_0BD@GPFBMNEO@CTBLItemMagicChart?$AA@ DB 'CTBLItemMagicChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EBJKHPCD@CTBLItemSetChart?$AA@
CONST	SEGMENT
??_C@_0BB@EBJKHPCD@CTBLItemSetChart?$AA@ DB 'CTBLItemSetChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FKAOJOJE@CTBLFindChar?$AA@
CONST	SEGMENT
??_C@_0N@FKAOJOJE@CTBLFindChar?$AA@ DB 'CTBLFindChar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PBEPFHDD@CTBLLocalInfo?$AA@
CONST	SEGMENT
??_C@_0O@PBEPFHDD@CTBLLocalInfo?$AA@ DB 'CTBLLocalInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@DECINPDK@CTBLItemUsed?$AA@
CONST	SEGMENT
??_C@_0N@DECINPDK@CTBLItemUsed?$AA@ DB 'CTBLItemUsed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DKAAALAI@CTBLSpawnPath?$AA@
CONST	SEGMENT
??_C@_0O@DKAAALAI@CTBLSpawnPath?$AA@ DB 'CTBLSpawnPath', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PAGKMGJM@CTBLRecallMon?$AA@
CONST	SEGMENT
??_C@_0O@PAGKMGJM@CTBLRecallMon?$AA@ DB 'CTBLRecallMon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NIDGMBCB@CTBLPortalChart?$AA@
CONST	SEGMENT
??_C@_0BA@NIDGMBCB@CTBLPortalChart?$AA@ DB 'CTBLPortalChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HOGANJA@CTBLDestinationChart?$AA@
CONST	SEGMENT
??_C@_0BF@HOGANJA@CTBLDestinationChart?$AA@ DB 'CTBLDestinationChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KDHNAKEA@CTBLGateChart?$AA@
CONST	SEGMENT
??_C@_0O@KDHNAKEA@CTBLGateChart?$AA@ DB 'CTBLGateChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NCLJGPCO@CTBLSwitchChart?$AA@
CONST	SEGMENT
??_C@_0BA@NCLJGPCO@CTBLSwitchChart?$AA@ DB 'CTBLSwitchChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DCCCNCDJ@CTBLOperatorChart?$AA@
CONST	SEGMENT
??_C@_0BC@DCCCNCDJ@CTBLOperatorChart?$AA@ DB 'CTBLOperatorChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MMEIPPMI@CTBLPetTable?$AA@
CONST	SEGMENT
??_C@_0N@MMEIPPMI@CTBLPetTable?$AA@ DB 'CTBLPetTable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JLPOMNGI@CTBLMonAttr?$AA@
CONST	SEGMENT
??_C@_0M@JLPOMNGI@CTBLMonAttr?$AA@ DB 'CTBLMonAttr', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HKDAILMJ@CTBLItemMagicSkill?$AA@
CONST	SEGMENT
??_C@_0BD@HKDAILMJ@CTBLItemMagicSkill?$AA@ DB 'CTBLItemMagicSkill', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GIHLAPGK@CTBLCashItemCabinet?$AA@
CONST	SEGMENT
??_C@_0BE@GIHLAPGK@CTBLCashItemCabinet?$AA@ DB 'CTBLCashItemCabinet', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CKCJFDDH@CTBLCashShopItem?$AA@
CONST	SEGMENT
??_C@_0BB@CKCJFDDH@CTBLCashShopItem?$AA@ DB 'CTBLCashShopItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GBEKHCCK@CTBLCashCategory?$AA@
CONST	SEGMENT
??_C@_0BB@GBEKHCCK@CTBLCashCategory?$AA@ DB 'CTBLCashCategory', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@OLFFNDG@CTBLGamble?$AA@
CONST	SEGMENT
??_C@_0L@OLFFNDG@CTBLGamble?$AA@ DB 'CTBLGamble', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CAFCPGKD@CTBLGodTower?$AA@
CONST	SEGMENT
??_C@_0N@CAFCPGKD@CTBLGodTower?$AA@ DB 'CTBLGodTower', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ENLGOCKM@CTBLGodBall?$AA@
CONST	SEGMENT
??_C@_0M@ENLGOCKM@CTBLGodBall?$AA@ DB 'CTBLGodBall', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IDGCOEKI@CTBLLocalOccupy?$AA@
CONST	SEGMENT
??_C@_0BA@IDGCOEKI@CTBLLocalOccupy?$AA@ DB 'CTBLLocalOccupy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KDDMBKPB@CTBLDuringItem?$AA@
CONST	SEGMENT
??_C@_0P@KDDMBKPB@CTBLDuringItem?$AA@ DB 'CTBLDuringItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DDHAJLGO@CTBLExpItem?$AA@
CONST	SEGMENT
??_C@_0M@DDHAJLGO@CTBLExpItem?$AA@ DB 'CTBLExpItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@IOKEJNAJ@CTBLSkillPoint?$AA@
CONST	SEGMENT
??_C@_0P@IOKEJNAJ@CTBLSkillPoint?$AA@ DB 'CTBLSkillPoint', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MHEPPGPJ@CTBLRecallMaintain?$AA@
CONST	SEGMENT
??_C@_0BD@MHEPPGPJ@CTBLRecallMaintain?$AA@ DB 'CTBLRecallMaintain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LMFKOODM@CTBLSvrMsg?$AA@
CONST	SEGMENT
??_C@_0L@LMFKOODM@CTBLSvrMsg?$AA@ DB 'CTBLSvrMsg', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CFIOCMPH@CTBLPvPointChart?$AA@
CONST	SEGMENT
??_C@_0BB@CFIOCMPH@CTBLPvPointChart?$AA@ DB 'CTBLPvPointChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ICCNFCGA@CTBLPvPRecent?$AA@
CONST	SEGMENT
??_C@_0O@ICCNFCGA@CTBLPvPRecent?$AA@ DB 'CTBLPvPRecent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EPODMDNB@CTBLDuelCharList?$AA@
CONST	SEGMENT
??_C@_0BB@EPODMDNB@CTBLDuelCharList?$AA@ DB 'CTBLDuelCharList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EPGDKCBJ@CTBLDuelCharScore?$AA@
CONST	SEGMENT
??_C@_0BC@EPGDKCBJ@CTBLDuelCharScore?$AA@ DB 'CTBLDuelCharScore', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KGPMLMDC@CTBLMonsterShop?$AA@
CONST	SEGMENT
??_C@_0BA@KGPMLMDC@CTBLMonsterShop?$AA@ DB 'CTBLMonsterShop', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PGAGDFLB@CTBLCashGambleChart?$AA@
CONST	SEGMENT
??_C@_0BE@PGAGDFLB@CTBLCashGambleChart?$AA@ DB 'CTBLCashGambleChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BOFEEHJC@CTBLAuctionTable?$AA@
CONST	SEGMENT
??_C@_0BB@BOFEEHJC@CTBLAuctionTable?$AA@ DB 'CTBLAuctionTable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EJNLEJEB@CTBLAuctionInterest?$AA@
CONST	SEGMENT
??_C@_0BE@EJNLEJEB@CTBLAuctionInterest?$AA@ DB 'CTBLAuctionInterest', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GCFOENGO@CTBLAuctionBidList?$AA@
CONST	SEGMENT
??_C@_0BD@GCFOENGO@CTBLAuctionBidList?$AA@ DB 'CTBLAuctionBidList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JPDCKDNI@CTBLALLAuctionBidder?$AA@
CONST	SEGMENT
??_C@_0BF@JPDCKDNI@CTBLALLAuctionBidder?$AA@ DB 'CTBLALLAuctionBidder', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FPNBGEJP@CTBLAuctionRegList?$AA@
CONST	SEGMENT
??_C@_0BD@FPNBGEJP@CTBLAuctionRegList?$AA@ DB 'CTBLAuctionRegList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MAPHLBOO@CTBLMonthRankTable?$AA@
CONST	SEGMENT
??_C@_0BD@MAPHLBOO@CTBLMonthRankTable?$AA@ DB 'CTBLMonthRankTable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IMHJOJNN@CTBLFirstGradeGroup?$AA@
CONST	SEGMENT
??_C@_0BE@IMHJOJNN@CTBLFirstGradeGroup?$AA@ DB 'CTBLFirstGradeGroup', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NMEIAFLJ@CTBLPostItem?$AA@
CONST	SEGMENT
??_C@_0N@NMEIAFLJ@CTBLPostItem?$AA@ DB 'CTBLPostItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BPCBLBCE@CTBLPostBill?$AA@
CONST	SEGMENT
??_C@_0N@BPCBLBCE@CTBLPostBill?$AA@ DB 'CTBLPostBill', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CJJCAENO@CTBLHeroTable?$AA@
CONST	SEGMENT
??_C@_0O@CJJCAENO@CTBLHeroTable?$AA@ DB 'CTBLHeroTable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GKEPILDD@CTBLTutorialCharItem?$AA@
CONST	SEGMENT
??_C@_0BF@GKEPILDD@CTBLTutorialCharItem?$AA@ DB 'CTBLTutorialCharItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DFDJDDIP@CTBLHelpMessage?$AA@
CONST	SEGMENT
??_C@_0BA@DFDJDDIP@CTBLHelpMessage?$AA@ DB 'CTBLHelpMessage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MBNGIBKG@CTBLMissionTable?$AA@
CONST	SEGMENT
??_C@_0BB@MBNGIBKG@CTBLMissionTable?$AA@ DB 'CTBLMissionTable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CGFJGBED@CTBLRPSGame?$AA@
CONST	SEGMENT
??_C@_0M@CGFJGBED@CTBLRPSGame?$AA@ DB 'CTBLRPSGame', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09NLBEDAFG@CTBLArena?$AA@
CONST	SEGMENT
??_C@_09NLBEDAFG@CTBLArena?$AA@ DB 'CTBLArena', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EHICCAHL@CTBLAidTable?$AA@
CONST	SEGMENT
??_C@_0N@EHICCAHL@CTBLAidTable?$AA@ DB 'CTBLAidTable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KBGBHHPH@CSPCreateRecallMon?$AA@
CONST	SEGMENT
??_C@_0BD@KBGBHHPH@CSPCreateRecallMon?$AA@ DB 'CSPCreateRecallMon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BPPADGEL@CSPSaveRecallMon?$AA@
CONST	SEGMENT
??_C@_0BB@BPPADGEL@CSPSaveRecallMon?$AA@ DB 'CSPSaveRecallMon', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NIFMANIC@CSPEnterServer?$AA@
CONST	SEGMENT
??_C@_0P@NIFMANIC@CSPEnterServer?$AA@ DB 'CSPEnterServer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DFHCCFBK@CSPGetServerID?$AA@
CONST	SEGMENT
??_C@_0P@DFHCCFBK@CSPGetServerID?$AA@ DB 'CSPGetServerID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JMHOGABD@CSPSaveInven?$AA@
CONST	SEGMENT
??_C@_0N@JMHOGABD@CSPSaveInven?$AA@ DB 'CSPSaveInven', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DEHBNGEB@CSPSaveItem?$AA@
CONST	SEGMENT
??_C@_0M@DEHBNGEB@CSPSaveItem?$AA@ DB 'CSPSaveItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KOFNIAIF@CSPSaveChar?$AA@
CONST	SEGMENT
??_C@_0M@KOFNIAIF@CSPSaveChar?$AA@ DB 'CSPSaveChar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09FMDGFNJM@CSPLogout?$AA@
CONST	SEGMENT
??_C@_09FMDGFNJM@CSPLogout?$AA@ DB 'CSPLogout', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08ELCCIPKB@CSPRoute?$AA@
CONST	SEGMENT
??_C@_08ELCCIPKB@CSPRoute?$AA@ DB 'CSPRoute', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MDEONAFK@CSPSaveSkill?$AA@
CONST	SEGMENT
??_C@_0N@MDEONAFK@CSPSaveSkill?$AA@ DB 'CSPSaveSkill', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NIDOFGNK@CSPSaveSkillMaintain?$AA@
CONST	SEGMENT
??_C@_0BF@NIDOFGNK@CSPSaveSkillMaintain?$AA@ DB 'CSPSaveSkillMaintain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@IOOBJLBO@CSPSaveQuest?$AA@
CONST	SEGMENT
??_C@_0N@IOOBJLBO@CSPSaveQuest?$AA@ DB 'CSPSaveQuest', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@EKKINMNJ@CSPSaveQuestTerm?$AA@
CONST	SEGMENT
??_C@_0BB@EKKINMNJ@CSPSaveQuestTerm?$AA@ DB 'CSPSaveQuestTerm', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BDCNMICA@CSPSaveCabinet?$AA@
CONST	SEGMENT
??_C@_0P@BDCNMICA@CSPSaveCabinet?$AA@ DB 'CSPSaveCabinet', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IBLOOOKC@CSPSaveHotkey?$AA@
CONST	SEGMENT
??_C@_0O@IBLOOOKC@CSPSaveHotkey?$AA@ DB 'CSPSaveHotkey', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PAKGKKPG@CSPSaveLocalOccupy?$AA@
CONST	SEGMENT
??_C@_0BD@PAKGKKPG@CSPSaveLocalOccupy?$AA@ DB 'CSPSaveLocalOccupy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LMOHDPJJ@CSPSaveCastleOccupy?$AA@
CONST	SEGMENT
??_C@_0BE@LMOHDPJJ@CSPSaveCastleOccupy?$AA@ DB 'CSPSaveCastleOccupy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@GGJCLGEN@CSPPostCanSend?$AA@
CONST	SEGMENT
??_C@_0P@GGJCLGEN@CSPPostCanSend?$AA@ DB 'CSPPostCanSend', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@FNDCIFPG@CSPSavePost?$AA@
CONST	SEGMENT
??_C@_0M@FNDCIFPG@CSPSavePost?$AA@ DB 'CSPSavePost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KLJKIDND@CSPPostRead?$AA@
CONST	SEGMENT
??_C@_0M@KLJKIDND@CSPPostRead?$AA@ DB 'CSPPostRead', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NBPELKJC@CSPPostDelete?$AA@
CONST	SEGMENT
??_C@_0O@NBPELKJC@CSPPostDelete?$AA@ DB 'CSPPostDelete', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KLLIFGCI@CSPPostGetItem?$AA@
CONST	SEGMENT
??_C@_0P@KLLIFGCI@CSPPostGetItem?$AA@ DB 'CSPPostGetItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HLMICCHJ@CSPSaveItemUsed?$AA@
CONST	SEGMENT
??_C@_0BA@HLMICCHJ@CSPSaveItemUsed?$AA@ DB 'CSPSaveItemUsed', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@MEAJGGBL@CSPClearCurrentUser?$AA@
CONST	SEGMENT
??_C@_0BE@MEAJGGBL@CSPClearCurrentUser?$AA@ DB 'CSPClearCurrentUser', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@BJNJMJOJ@CSPRecallmonDel?$AA@
CONST	SEGMENT
??_C@_0BA@BJNJMJOJ@CSPRecallmonDel?$AA@ DB 'CSPRecallmonDel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EOLAMDPB@CSPLogSkill?$AA@
CONST	SEGMENT
??_C@_0M@EOLAMDPB@CSPLogSkill?$AA@ DB 'CSPLogSkill', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LAGALIBN@CSPProtectedInsert?$AA@
CONST	SEGMENT
??_C@_0BD@LAGALIBN@CSPProtectedInsert?$AA@ DB 'CSPProtectedInsert', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OJEHGOP@CSPProtectedDelete?$AA@
CONST	SEGMENT
??_C@_0BD@OJEHGOP@CSPProtectedDelete?$AA@ DB 'CSPProtectedDelete', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@LHFIMBJJ@CSPPetDelete?$AA@
CONST	SEGMENT
??_C@_0N@LHFIMBJJ@CSPPetDelete?$AA@ DB 'CSPPetDelete', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EPCAFCMO@CSPSavePet?$AA@
CONST	SEGMENT
??_C@_0L@EPCAFCMO@CSPSavePet?$AA@ DB 'CSPSavePet', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@NOILHOMJ@CSPSaveCharDataStart?$AA@
CONST	SEGMENT
??_C@_0BF@NOILHOMJ@CSPSaveCharDataStart?$AA@ DB 'CSPSaveCharDataStart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PCEMMOCL@CSPSaveCharDataEnd?$AA@
CONST	SEGMENT
??_C@_0BD@PCEMMOCL@CSPSaveCharDataEnd?$AA@ DB 'CSPSaveCharDataEnd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@BMAJLAAB@CSPSaveItemDataStart?$AA@
CONST	SEGMENT
??_C@_0BF@BMAJLAAB@CSPSaveItemDataStart?$AA@ DB 'CSPSaveItemDataStart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MGAFFNJM@CSPSaveItemDataEnd?$AA@
CONST	SEGMENT
??_C@_0BD@MGAFFNJM@CSPSaveItemDataEnd?$AA@ DB 'CSPSaveItemDataEnd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EOMPGPJC@CSPLoadService?$AA@
CONST	SEGMENT
??_C@_0P@EOMPGPJC@CSPLoadService?$AA@ DB 'CSPLoadService', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LBAOFIBN@CSPSaveSMS?$AA@
CONST	SEGMENT
??_C@_0L@LBAOFIBN@CSPSaveSMS?$AA@ DB 'CSPSaveSMS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CGOEDDEN@CSPGetPcBangData?$AA@
CONST	SEGMENT
??_C@_0BB@CGOEDDEN@CSPGetPcBangData?$AA@ DB 'CSPGetPcBangData', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FEAEGPEI@CSPEventQuarter?$AA@
CONST	SEGMENT
??_C@_0BA@FEAEGPEI@CSPEventQuarter?$AA@ DB 'CSPEventQuarter', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PGJMCPPI@CSPGetCash?$AA@
CONST	SEGMENT
??_C@_0L@PGJMCPPI@CSPGetCash?$AA@ DB 'CSPGetCash', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JJMKNAKC@CSPCashItemGet?$AA@
CONST	SEGMENT
??_C@_0P@JJMKNAKC@CSPCashItemGet?$AA@ DB 'CSPCashItemGet', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HJMPNKN@CSPCashItemBuy?$AA@
CONST	SEGMENT
??_C@_0P@HJMPNKN@CSPCashItemBuy?$AA@ DB 'CSPCashItemBuy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LLGEMHHG@CSPSaveDuringItem?$AA@
CONST	SEGMENT
??_C@_0BC@LLGEMHHG@CSPSaveDuringItem?$AA@ DB 'CSPSaveDuringItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MHPIKMN@CSPSaveExpItem?$AA@
CONST	SEGMENT
??_C@_0P@MHPIKMN@CSPSaveExpItem?$AA@ DB 'CSPSaveExpItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CDMHKLGI@CSPSaveItemDirect?$AA@
CONST	SEGMENT
??_C@_0BC@CDMHKLGI@CSPSaveItemDirect?$AA@ DB 'CSPSaveItemDirect', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ICGANCLP@CSPGuildItemPutIn?$AA@
CONST	SEGMENT
??_C@_0BC@ICGANCLP@CSPGuildItemPutIn?$AA@ DB 'CSPGuildItemPutIn', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OLANJJJB@CSPGuildItemTakeOut?$AA@
CONST	SEGMENT
??_C@_0BE@OLANJJJB@CSPGuildItemTakeOut?$AA@ DB 'CSPGuildItemTakeOut', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HKJBIGFB@CSPGuildItemRollback?$AA@
CONST	SEGMENT
??_C@_0BF@HKJBIGFB@CSPGuildItemRollback?$AA@ DB 'CSPGuildItemRollback', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PFLMGCAG@CSPSaveEXP?$AA@
CONST	SEGMENT
??_C@_0L@PFLMGCAG@CSPSaveEXP?$AA@ DB 'CSPSaveEXP', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KKKBPAFD@CSPSaveMoney?$AA@
CONST	SEGMENT
??_C@_0N@KKKBPAFD@CSPSaveMoney?$AA@ DB 'CSPSaveMoney', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@NADADAPK@CSPSaveActEnd?$AA@
CONST	SEGMENT
??_C@_0O@NADADAPK@CSPSaveActEnd?$AA@ DB 'CSPSaveActEnd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@CEIJJCMA@CSPCashCabinetBuy?$AA@
CONST	SEGMENT
??_C@_0BC@CEIJJCMA@CSPCashCabinetBuy?$AA@ DB 'CSPCashCabinetBuy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@NIKJIGFC@CSPCashItemPutin?$AA@
CONST	SEGMENT
??_C@_0BB@NIKJIGFC@CSPCashItemPutin?$AA@ DB 'CSPCashItemPutin', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@EIMKHAJ@CSPGetCashCabinetUseTime?$AA@
CONST	SEGMENT
??_C@_0BJ@EIMKHAJ@CSPGetCashCabinetUseTime?$AA@ DB 'CSPGetCashCabinetUseT'
	DB	'ime', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CKCNPPEK@CSPInitGenItemID?$AA@
CONST	SEGMENT
??_C@_0BB@CKCNPPEK@CSPInitGenItemID?$AA@ DB 'CSPInitGenItemID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@GKDMPOAN@CSPDeleteDealItem?$AA@
CONST	SEGMENT
??_C@_0BC@GKDMPOAN@CSPDeleteDealItem?$AA@ DB 'CSPDeleteDealItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@FDJOJBBC@CSPSaveRecallMaintain?$AA@
CONST	SEGMENT
??_C@_0BG@FDJOJBBC@CSPSaveRecallMaintain?$AA@ DB 'CSPSaveRecallMaintain', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@JNMKAOE@CSPCheckDuplicateName?$AA@
CONST	SEGMENT
??_C@_0BG@JNMKAOE@CSPCheckDuplicateName?$AA@ DB 'CSPCheckDuplicateName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MIAACEO@CSPHeroSelect?$AA@
CONST	SEGMENT
??_C@_0O@MIAACEO@CSPHeroSelect?$AA@ DB 'CSPHeroSelect', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IFJJLPNO@CSPStopTheClock?$AA@
CONST	SEGMENT
??_C@_0BA@IFJJLPNO@CSPStopTheClock?$AA@ DB 'CSPStopTheClock', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OKFNCCNL@CSPSaveCharBase?$AA@
CONST	SEGMENT
??_C@_0BA@OKFNCCNL@CSPSaveCharBase?$AA@ DB 'CSPSaveCharBase', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CAGAKGIN@CSPGetLimitedLevel?$AA@
CONST	SEGMENT
??_C@_0BD@CAGAKGIN@CSPGetLimitedLevel?$AA@ DB 'CSPGetLimitedLevel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KEAKLAPB@CSPGetNation?$AA@
CONST	SEGMENT
??_C@_0N@KEAKLAPB@CSPGetNation?$AA@ DB 'CSPGetNation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@LPACKMBP@CSPQuestSendPost?$AA@
CONST	SEGMENT
??_C@_0BB@LPACKMBP@CSPQuestSendPost?$AA@ DB 'CSPQuestSendPost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PKCCEPBN@CSPGetPvPRecord?$AA@
CONST	SEGMENT
??_C@_0BA@PKCCEPBN@CSPGetPvPRecord?$AA@ DB 'CSPGetPvPRecord', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FNPEAKJG@CSPSavePvPRecord?$AA@
CONST	SEGMENT
??_C@_0BB@FNPEAKJG@CSPSavePvPRecord?$AA@ DB 'CSPSavePvPRecord', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GNLHKCLH@CSPSavePvPRecent?$AA@
CONST	SEGMENT
??_C@_0BB@GNLHKCLH@CSPSavePvPRecent?$AA@ DB 'CSPSavePvPRecent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@ECNNALID@CSPDuelScore?$AA@
CONST	SEGMENT
??_C@_0N@ECNNALID@CSPDuelScore?$AA@ DB 'CSPDuelScore', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KCNFKBEK@CSPDuelCharAdd?$AA@
CONST	SEGMENT
??_C@_0P@KCNFKBEK@CSPDuelCharAdd?$AA@ DB 'CSPDuelCharAdd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NEENLJKB@CSPSaveProtectedOption?$AA@
CONST	SEGMENT
??_C@_0BH@NEENLJKB@CSPSaveProtectedOption?$AA@ DB 'CSPSaveProtectedOption'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BFNPLBEO@CSPAuctionReg?$AA@
CONST	SEGMENT
??_C@_0O@BFNPLBEO@CSPAuctionReg?$AA@ DB 'CSPAuctionReg', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@ECKBINFG@CSPAuctionRegCancel?$AA@
CONST	SEGMENT
??_C@_0BE@ECKBINFG@CSPAuctionRegCancel?$AA@ DB 'CSPAuctionRegCancel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GHPBEMHG@CSPAuctionBid?$AA@
CONST	SEGMENT
??_C@_0O@GHPBEMHG@CSPAuctionBid?$AA@ DB 'CSPAuctionBid', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IPOHBAIB@CSPAuctionBuyDirect?$AA@
CONST	SEGMENT
??_C@_0BE@IPOHBAIB@CSPAuctionBuyDirect?$AA@ DB 'CSPAuctionBuyDirect', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@PPGJGCEK@CSPAuctionEnd?$AA@
CONST	SEGMENT
??_C@_0O@PPGJGCEK@CSPAuctionEnd?$AA@ DB 'CSPAuctionEnd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HOJHKDNG@CSPSaveAuctionInterest?$AA@
CONST	SEGMENT
??_C@_0BH@HOJHKDNG@CSPSaveAuctionInterest?$AA@ DB 'CSPSaveAuctionInterest'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GHLMOLCL@CSPGainCashBonus?$AA@
CONST	SEGMENT
??_C@_0BB@GHLMOLCL@CSPGainCashBonus?$AA@ DB 'CSPGainCashBonus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JGHBDNBK@CSPGetMonthPvPoint?$AA@
CONST	SEGMENT
??_C@_0BD@JGHBDNBK@CSPGetMonthPvPoint?$AA@ DB 'CSPGetMonthPvPoint', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JJKPAFHN@CSPSaveMonthPvPoint?$AA@
CONST	SEGMENT
??_C@_0BE@JJKPAFHN@CSPSaveMonthPvPoint?$AA@ DB 'CSPSaveMonthPvPoint', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DCKKNBGN@CSPSaveWarlordSay?$AA@
CONST	SEGMENT
??_C@_0BC@DCKKNBGN@CSPSaveWarlordSay?$AA@ DB 'CSPSaveWarlordSay', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CNBPHJDO@CSPGetPostInfo?$AA@
CONST	SEGMENT
??_C@_0P@CNBPHJDO@CSPGetPostInfo?$AA@ DB 'CSPGetPostInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HCCKHDOF@CSPPostView?$AA@
CONST	SEGMENT
??_C@_0M@HCCKHDOF@CSPPostView?$AA@ DB 'CSPPostView', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LHLNMLKP@CSPPostBillsUpdate?$AA@
CONST	SEGMENT
??_C@_0BD@LHLNMLKP@CSPPostBillsUpdate?$AA@ DB 'CSPPostBillsUpdate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JGAPCJOE@CSPTournamentReward?$AA@
CONST	SEGMENT
??_C@_0BE@JGAPCJOE@CSPTournamentReward?$AA@ DB 'CSPTournamentReward', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@JHKBAIGF@CSPSaveCharPosition?$AA@
CONST	SEGMENT
??_C@_0BE@JHKBAIGF@CSPSaveCharPosition?$AA@ DB 'CSPSaveCharPosition', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FGFIEEGL@CSPSaveMissionOccupy?$AA@
CONST	SEGMENT
??_C@_0BF@FGFIEEGL@CSPSaveMissionOccupy?$AA@ DB 'CSPSaveMissionOccupy', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PJDMFFDP@CSPMonthPvPointClear?$AA@
CONST	SEGMENT
??_C@_0BF@PJDMFFDP@CSPMonthPvPointClear?$AA@ DB 'CSPMonthPvPointClear', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FOOMFNIG@CSPTCMGiftLog?$AA@
CONST	SEGMENT
??_C@_0O@FOOMFNIG@CSPTCMGiftLog?$AA@ DB 'CSPTCMGiftLog', 00H ; `string'
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\dbaccess.cpp
CONST	ENDS
;	COMDAT ?InitQueryTMapSvr@@YAHPAVCSqlDatabase@@@Z
_TEXT	SEGMENT
$T194088 = -20						; size = 4
$T194083 = -20						; size = 4
$T194078 = -20						; size = 4
$T194073 = -20						; size = 4
$T194068 = -20						; size = 4
$T194063 = -20						; size = 4
$T194058 = -20						; size = 4
$T194053 = -20						; size = 4
$T194048 = -20						; size = 4
$T194043 = -20						; size = 4
$T194038 = -20						; size = 4
$T194033 = -20						; size = 4
$T194028 = -20						; size = 4
$T194023 = -20						; size = 4
$T194018 = -20						; size = 4
$T194013 = -20						; size = 4
$T194008 = -20						; size = 4
$T194003 = -20						; size = 4
$T193998 = -20						; size = 4
$T193993 = -20						; size = 4
$T193988 = -20						; size = 4
$T193983 = -20						; size = 4
$T193978 = -20						; size = 4
$T193973 = -20						; size = 4
$T193968 = -20						; size = 4
$T193963 = -20						; size = 4
$T193958 = -20						; size = 4
$T193953 = -20						; size = 4
$T193948 = -20						; size = 4
$T193943 = -20						; size = 4
$T193938 = -20						; size = 4
$T193933 = -20						; size = 4
$T193928 = -20						; size = 4
$T193923 = -20						; size = 4
$T193918 = -20						; size = 4
$T193913 = -20						; size = 4
$T193908 = -20						; size = 4
$T193903 = -20						; size = 4
$T193898 = -20						; size = 4
$T193893 = -20						; size = 4
$T193888 = -20						; size = 4
$T193883 = -20						; size = 4
$T193878 = -20						; size = 4
$T193873 = -20						; size = 4
$T193868 = -20						; size = 4
$T193863 = -20						; size = 4
$T193858 = -20						; size = 4
$T193853 = -20						; size = 4
$T193848 = -20						; size = 4
$T193843 = -20						; size = 4
$T193838 = -20						; size = 4
$T193833 = -20						; size = 4
$T193828 = -20						; size = 4
$T193823 = -20						; size = 4
$T193818 = -20						; size = 4
$T193813 = -20						; size = 4
$T193808 = -20						; size = 4
$T193803 = -20						; size = 4
$T193798 = -20						; size = 4
$T193793 = -20						; size = 4
$T193788 = -20						; size = 4
$T193783 = -20						; size = 4
$T193778 = -20						; size = 4
$T193773 = -20						; size = 4
$T193768 = -20						; size = 4
$T193763 = -20						; size = 4
$T193758 = -20						; size = 4
$T193753 = -20						; size = 4
$T193748 = -20						; size = 4
$T193743 = -20						; size = 4
$T193738 = -20						; size = 4
$T193733 = -20						; size = 4
$T193728 = -20						; size = 4
$T193723 = -20						; size = 4
$T193718 = -20						; size = 4
$T193713 = -20						; size = 4
$T193708 = -20						; size = 4
$T193703 = -20						; size = 4
$T193698 = -20						; size = 4
$T193693 = -20						; size = 4
$T193688 = -20						; size = 4
$T193683 = -20						; size = 4
$T193678 = -20						; size = 4
$T193673 = -20						; size = 4
$T193668 = -20						; size = 4
$T193663 = -20						; size = 4
$T193658 = -20						; size = 4
$T193653 = -20						; size = 4
$T193648 = -20						; size = 4
$T193643 = -20						; size = 4
$T193638 = -20						; size = 4
$T193633 = -20						; size = 4
$T193628 = -20						; size = 4
$T193623 = -20						; size = 4
$T193618 = -20						; size = 4
$T193613 = -20						; size = 4
$T193608 = -20						; size = 4
$T193603 = -20						; size = 4
$T193598 = -20						; size = 4
$T193593 = -20						; size = 4
$T193588 = -20						; size = 4
$T193583 = -20						; size = 4
$T193578 = -20						; size = 4
$T193573 = -20						; size = 4
$T193568 = -20						; size = 4
$T193563 = -20						; size = 4
$T193558 = -20						; size = 4
$T193553 = -20						; size = 4
$T193548 = -20						; size = 4
$T193543 = -20						; size = 4
$T193538 = -20						; size = 4
$T193533 = -20						; size = 4
$T193528 = -20						; size = 4
$T193523 = -20						; size = 4
$T193518 = -20						; size = 4
$T193513 = -20						; size = 4
$T193508 = -20						; size = 4
$T193503 = -20						; size = 4
$T193498 = -20						; size = 4
$T193493 = -20						; size = 4
$T193488 = -20						; size = 4
$T193483 = -20						; size = 4
$T193478 = -20						; size = 4
$T193473 = -20						; size = 4
$T193468 = -20						; size = 4
$T193463 = -20						; size = 4
$T193458 = -20						; size = 4
$T193453 = -20						; size = 4
$T193448 = -20						; size = 4
$T193443 = -20						; size = 4
$T193438 = -20						; size = 4
$T193433 = -20						; size = 4
$T193428 = -20						; size = 4
$T193423 = -20						; size = 4
$T193418 = -20						; size = 4
$T193413 = -20						; size = 4
$T193408 = -20						; size = 4
$T193403 = -20						; size = 4
$T193398 = -20						; size = 4
$T193393 = -20						; size = 4
$T193388 = -20						; size = 4
$T193383 = -20						; size = 4
$T193378 = -20						; size = 4
$T193373 = -20						; size = 4
$T193368 = -20						; size = 4
$T193363 = -20						; size = 4
$T193358 = -20						; size = 4
$T193353 = -20						; size = 4
$T193348 = -20						; size = 4
$T193343 = -20						; size = 4
$T193338 = -20						; size = 4
$T193333 = -20						; size = 4
$T193328 = -20						; size = 4
$T193323 = -20						; size = 4
$T193318 = -20						; size = 4
$T193313 = -20						; size = 4
$T193308 = -20						; size = 4
$T193303 = -20						; size = 4
$T193298 = -20						; size = 4
$T193293 = -20						; size = 4
$T193288 = -20						; size = 4
$T193283 = -20						; size = 4
$T193278 = -20						; size = 4
$T193273 = -20						; size = 4
$T193268 = -20						; size = 4
$T193263 = -20						; size = 4
$T193258 = -20						; size = 4
$T193253 = -20						; size = 4
$T193248 = -20						; size = 4
$T193243 = -20						; size = 4
$T193238 = -20						; size = 4
$T193233 = -20						; size = 4
$T193228 = -20						; size = 4
$T193223 = -20						; size = 4
$T193218 = -20						; size = 4
$T193213 = -20						; size = 4
$T193208 = -20						; size = 4
$T193203 = -20						; size = 4
$T193198 = -20						; size = 4
$T193193 = -20						; size = 4
$T193188 = -20						; size = 4
$T193183 = -20						; size = 4
$T193178 = -20						; size = 4
$T193172 = -20						; size = 4
$T194087 = -16						; size = 4
$T194082 = -16						; size = 4
$T194077 = -16						; size = 4
$T194072 = -16						; size = 4
$T194067 = -16						; size = 4
$T194062 = -16						; size = 4
$T194057 = -16						; size = 4
$T194052 = -16						; size = 4
$T194047 = -16						; size = 4
$T194042 = -16						; size = 4
$T194037 = -16						; size = 4
$T194032 = -16						; size = 4
$T194027 = -16						; size = 4
$T194022 = -16						; size = 4
$T194017 = -16						; size = 4
$T194012 = -16						; size = 4
$T194007 = -16						; size = 4
$T194002 = -16						; size = 4
$T193997 = -16						; size = 4
$T193992 = -16						; size = 4
$T193987 = -16						; size = 4
$T193982 = -16						; size = 4
$T193977 = -16						; size = 4
$T193972 = -16						; size = 4
$T193967 = -16						; size = 4
$T193962 = -16						; size = 4
$T193957 = -16						; size = 4
$T193952 = -16						; size = 4
$T193947 = -16						; size = 4
$T193942 = -16						; size = 4
$T193937 = -16						; size = 4
$T193932 = -16						; size = 4
$T193927 = -16						; size = 4
$T193922 = -16						; size = 4
$T193917 = -16						; size = 4
$T193912 = -16						; size = 4
$T193907 = -16						; size = 4
$T193902 = -16						; size = 4
$T193897 = -16						; size = 4
$T193892 = -16						; size = 4
$T193887 = -16						; size = 4
$T193882 = -16						; size = 4
$T193877 = -16						; size = 4
$T193872 = -16						; size = 4
$T193867 = -16						; size = 4
$T193862 = -16						; size = 4
$T193857 = -16						; size = 4
$T193852 = -16						; size = 4
$T193847 = -16						; size = 4
$T193842 = -16						; size = 4
$T193837 = -16						; size = 4
$T193832 = -16						; size = 4
$T193827 = -16						; size = 4
$T193822 = -16						; size = 4
$T193817 = -16						; size = 4
$T193812 = -16						; size = 4
$T193807 = -16						; size = 4
$T193802 = -16						; size = 4
$T193797 = -16						; size = 4
$T193792 = -16						; size = 4
$T193787 = -16						; size = 4
$T193782 = -16						; size = 4
$T193777 = -16						; size = 4
$T193772 = -16						; size = 4
$T193767 = -16						; size = 4
$T193762 = -16						; size = 4
$T193757 = -16						; size = 4
$T193752 = -16						; size = 4
$T193747 = -16						; size = 4
$T193742 = -16						; size = 4
$T193737 = -16						; size = 4
$T193732 = -16						; size = 4
$T193727 = -16						; size = 4
$T193722 = -16						; size = 4
$T193717 = -16						; size = 4
$T193712 = -16						; size = 4
$T193707 = -16						; size = 4
$T193702 = -16						; size = 4
$T193697 = -16						; size = 4
$T193692 = -16						; size = 4
$T193687 = -16						; size = 4
$T193682 = -16						; size = 4
$T193677 = -16						; size = 4
$T193672 = -16						; size = 4
$T193667 = -16						; size = 4
$T193662 = -16						; size = 4
$T193657 = -16						; size = 4
$T193652 = -16						; size = 4
$T193647 = -16						; size = 4
$T193642 = -16						; size = 4
$T193637 = -16						; size = 4
$T193632 = -16						; size = 4
$T193627 = -16						; size = 4
$T193622 = -16						; size = 4
$T193617 = -16						; size = 4
$T193612 = -16						; size = 4
$T193607 = -16						; size = 4
$T193602 = -16						; size = 4
$T193597 = -16						; size = 4
$T193592 = -16						; size = 4
$T193587 = -16						; size = 4
$T193582 = -16						; size = 4
$T193577 = -16						; size = 4
$T193572 = -16						; size = 4
$T193567 = -16						; size = 4
$T193562 = -16						; size = 4
$T193557 = -16						; size = 4
$T193552 = -16						; size = 4
$T193547 = -16						; size = 4
$T193542 = -16						; size = 4
$T193537 = -16						; size = 4
$T193532 = -16						; size = 4
$T193527 = -16						; size = 4
$T193522 = -16						; size = 4
$T193517 = -16						; size = 4
$T193512 = -16						; size = 4
$T193507 = -16						; size = 4
$T193502 = -16						; size = 4
$T193497 = -16						; size = 4
$T193492 = -16						; size = 4
$T193487 = -16						; size = 4
$T193482 = -16						; size = 4
$T193477 = -16						; size = 4
$T193472 = -16						; size = 4
$T193467 = -16						; size = 4
$T193462 = -16						; size = 4
$T193457 = -16						; size = 4
$T193452 = -16						; size = 4
$T193447 = -16						; size = 4
$T193442 = -16						; size = 4
$T193437 = -16						; size = 4
$T193432 = -16						; size = 4
$T193427 = -16						; size = 4
$T193422 = -16						; size = 4
$T193417 = -16						; size = 4
$T193412 = -16						; size = 4
$T193407 = -16						; size = 4
$T193402 = -16						; size = 4
$T193397 = -16						; size = 4
$T193392 = -16						; size = 4
$T193387 = -16						; size = 4
$T193382 = -16						; size = 4
$T193377 = -16						; size = 4
$T193372 = -16						; size = 4
$T193367 = -16						; size = 4
$T193362 = -16						; size = 4
$T193357 = -16						; size = 4
$T193352 = -16						; size = 4
$T193347 = -16						; size = 4
$T193342 = -16						; size = 4
$T193337 = -16						; size = 4
$T193332 = -16						; size = 4
$T193327 = -16						; size = 4
$T193322 = -16						; size = 4
$T193317 = -16						; size = 4
$T193312 = -16						; size = 4
$T193307 = -16						; size = 4
$T193302 = -16						; size = 4
$T193297 = -16						; size = 4
$T193292 = -16						; size = 4
$T193287 = -16						; size = 4
$T193282 = -16						; size = 4
$T193277 = -16						; size = 4
$T193272 = -16						; size = 4
$T193267 = -16						; size = 4
$T193262 = -16						; size = 4
$T193257 = -16						; size = 4
$T193252 = -16						; size = 4
$T193247 = -16						; size = 4
$T193242 = -16						; size = 4
$T193237 = -16						; size = 4
$T193232 = -16						; size = 4
$T193227 = -16						; size = 4
$T193222 = -16						; size = 4
$T193217 = -16						; size = 4
$T193212 = -16						; size = 4
$T193207 = -16						; size = 4
$T193202 = -16						; size = 4
$T193197 = -16						; size = 4
$T193192 = -16						; size = 4
$T193187 = -16						; size = 4
$T193182 = -16						; size = 4
$T193177 = -16						; size = 4
$T193173 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
?InitQueryTMapSvr@@YAHPAVCSqlDatabase@@@Z PROC NEAR	; InitQueryTMapSvr, COMDAT

; 3    : BEGIN_INIT_QUERY(TMapSvr)

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?InitQueryTMapSvr@@YAHPAVCSqlDatabase@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi

; 4    : 	PREDEFINE_QUERY(CTBLChannelChart)

  0001c	68 34 0c 00 00	 push	 3124			; 00000c34H
  00021	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00026	8b f0		 mov	 esi, eax
  00028	83 c4 04	 add	 esp, 4
  0002b	89 74 24 10	 mov	 DWORD PTR $T193172[esp+36], esi
  0002f	8b 6c 24 28	 mov	 ebp, DWORD PTR _pdb$[esp+32]
  00033	33 db		 xor	 ebx, ebx
  00035	3b f3		 cmp	 esi, ebx
  00037	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  0003b	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH
  00040	74 28		 je	 SHORT $L193174
  00042	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00045	8b cc		 mov	 ecx, esp
  00047	89 64 24 30	 mov	 DWORD PTR $T193173[esp+64], esp
  0004b	6a 10		 push	 16			; 00000010H
  0004d	89 79 18	 mov	 DWORD PTR [ecx+24], edi
  00050	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  00053	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@KCHGIENF@CTBLChannelChart?$AA@
  00058	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  0005b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00060	55		 push	 ebp
  00061	8b ce		 mov	 ecx, esi
  00063	e8 00 00 00 00	 call	 ??0CTBLChannelChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLChannelChart::CTBLChannelChart
  00068	eb 02		 jmp	 SHORT $L193175
$L193174:
  0006a	33 c0		 xor	 eax, eax
$L193175:
  0006c	3b c3		 cmp	 eax, ebx
  0006e	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00076	0f 84 17 35 00
	00		 je	 $L194673

; 5    : 	PREDEFINE_QUERY(CTBLChannelList)

  0007c	68 30 0c 00 00	 push	 3120			; 00000c30H
  00081	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00086	8b f0		 mov	 esi, eax
  00088	83 c4 04	 add	 esp, 4
  0008b	89 74 24 14	 mov	 DWORD PTR $T193177[esp+36], esi
  0008f	3b f3		 cmp	 esi, ebx
  00091	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 1
  00099	74 27		 je	 SHORT $L193179
  0009b	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0009e	8b cc		 mov	 ecx, esp
  000a0	89 64 24 2c	 mov	 DWORD PTR $T193178[esp+64], esp
  000a4	57		 push	 edi
  000a5	89 79 18	 mov	 DWORD PTR [ecx+24], edi
  000a8	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  000ab	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@DFIJDCCK@CTBLChannelList?$AA@
  000b0	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  000b3	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  000b8	55		 push	 ebp
  000b9	8b ce		 mov	 ecx, esi
  000bb	e8 00 00 00 00	 call	 ??0CTBLChannelList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLChannelList::CTBLChannelList
  000c0	eb 02		 jmp	 SHORT $L193180
$L193179:
  000c2	33 c0		 xor	 eax, eax
$L193180:
  000c4	3b c3		 cmp	 eax, ebx
  000c6	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  000ce	0f 84 bf 34 00
	00		 je	 $L194673

; 6    : 	PREDEFINE_QUERY(CTBLServerChart)

  000d4	68 34 0c 00 00	 push	 3124			; 00000c34H
  000d9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000de	8b f0		 mov	 esi, eax
  000e0	83 c4 04	 add	 esp, 4
  000e3	89 74 24 14	 mov	 DWORD PTR $T193182[esp+36], esi
  000e7	3b f3		 cmp	 esi, ebx
  000e9	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 2
  000f1	74 1d		 je	 SHORT $L193184
  000f3	83 ec 1c	 sub	 esp, 28			; 0000001cH
  000f6	8b cc		 mov	 ecx, esp
  000f8	89 64 24 2c	 mov	 DWORD PTR $T193183[esp+64], esp
  000fc	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@NAFKIKLK@CTBLServerChart?$AA@
  00101	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00106	55		 push	 ebp
  00107	8b ce		 mov	 ecx, esi
  00109	e8 00 00 00 00	 call	 ??0CTBLServerChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLServerChart::CTBLServerChart
  0010e	eb 02		 jmp	 SHORT $L193185
$L193184:
  00110	33 c0		 xor	 eax, eax
$L193185:
  00112	3b c3		 cmp	 eax, ebx
  00114	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  0011c	0f 84 71 34 00
	00		 je	 $L194673

; 7    : 	PREDEFINE_QUERY(CTBLFormulaChart)

  00122	68 6c 0c 00 00	 push	 3180			; 00000c6cH
  00127	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0012c	8b f0		 mov	 esi, eax
  0012e	83 c4 04	 add	 esp, 4
  00131	89 74 24 14	 mov	 DWORD PTR $T193187[esp+36], esi
  00135	3b f3		 cmp	 esi, ebx
  00137	c7 44 24 20 03
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 3
  0013f	74 1d		 je	 SHORT $L193189
  00141	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00144	8b cc		 mov	 ecx, esp
  00146	89 64 24 2c	 mov	 DWORD PTR $T193188[esp+64], esp
  0014a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@EHOPGBMH@CTBLFormulaChart?$AA@
  0014f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00154	55		 push	 ebp
  00155	8b ce		 mov	 ecx, esi
  00157	e8 00 00 00 00	 call	 ??0CTBLFormulaChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLFormulaChart::CTBLFormulaChart
  0015c	eb 02		 jmp	 SHORT $L193190
$L193189:
  0015e	33 c0		 xor	 eax, eax
$L193190:
  00160	3b c3		 cmp	 eax, ebx
  00162	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  0016a	0f 84 23 34 00
	00		 je	 $L194673

; 8    : 	PREDEFINE_QUERY(CTBLAICondition)

  00170	68 38 0c 00 00	 push	 3128			; 00000c38H
  00175	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0017a	8b f0		 mov	 esi, eax
  0017c	83 c4 04	 add	 esp, 4
  0017f	89 74 24 14	 mov	 DWORD PTR $T193192[esp+36], esi
  00183	3b f3		 cmp	 esi, ebx
  00185	c7 44 24 20 04
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 4
  0018d	74 1d		 je	 SHORT $L193194
  0018f	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00192	8b cc		 mov	 ecx, esp
  00194	89 64 24 2c	 mov	 DWORD PTR $T193193[esp+64], esp
  00198	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@IJPCID@CTBLAICondition?$AA@
  0019d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  001a2	55		 push	 ebp
  001a3	8b ce		 mov	 ecx, esi
  001a5	e8 00 00 00 00	 call	 ??0CTBLAICondition@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLAICondition::CTBLAICondition
  001aa	eb 02		 jmp	 SHORT $L193195
$L193194:
  001ac	33 c0		 xor	 eax, eax
$L193195:
  001ae	3b c3		 cmp	 eax, ebx
  001b0	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  001b8	0f 84 d5 33 00
	00		 je	 $L194673

; 9    : 	PREDEFINE_QUERY(CTBLAICommand)

  001be	68 34 0c 00 00	 push	 3124			; 00000c34H
  001c3	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  001c8	8b f0		 mov	 esi, eax
  001ca	83 c4 04	 add	 esp, 4
  001cd	89 74 24 14	 mov	 DWORD PTR $T193197[esp+36], esi
  001d1	3b f3		 cmp	 esi, ebx
  001d3	c7 44 24 20 05
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 5
  001db	74 1d		 je	 SHORT $L193199
  001dd	83 ec 1c	 sub	 esp, 28			; 0000001cH
  001e0	8b cc		 mov	 ecx, esp
  001e2	89 64 24 2c	 mov	 DWORD PTR $T193198[esp+64], esp
  001e6	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@BGIKPMOF@CTBLAICommand?$AA@
  001eb	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  001f0	55		 push	 ebp
  001f1	8b ce		 mov	 ecx, esi
  001f3	e8 00 00 00 00	 call	 ??0CTBLAICommand@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLAICommand::CTBLAICommand
  001f8	eb 02		 jmp	 SHORT $L193200
$L193199:
  001fa	33 c0		 xor	 eax, eax
$L193200:
  001fc	3b c3		 cmp	 eax, ebx
  001fe	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00206	0f 84 87 33 00
	00		 je	 $L194673

; 10   : 	PREDEFINE_QUERY(CTBLAIChart)

  0020c	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  00211	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00216	8b f0		 mov	 esi, eax
  00218	83 c4 04	 add	 esp, 4
  0021b	89 74 24 14	 mov	 DWORD PTR $T193202[esp+36], esi
  0021f	3b f3		 cmp	 esi, ebx
  00221	c7 44 24 20 06
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 6
  00229	74 1d		 je	 SHORT $L193204
  0022b	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0022e	8b cc		 mov	 ecx, esp
  00230	89 64 24 2c	 mov	 DWORD PTR $T193203[esp+64], esp
  00234	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@CCMPPDIF@CTBLAIChart?$AA@
  00239	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0023e	55		 push	 ebp
  0023f	8b ce		 mov	 ecx, esi
  00241	e8 00 00 00 00	 call	 ??0CTBLAIChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLAIChart::CTBLAIChart
  00246	eb 02		 jmp	 SHORT $L193205
$L193204:
  00248	33 c0		 xor	 eax, eax
$L193205:
  0024a	3b c3		 cmp	 eax, ebx
  0024c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00254	0f 84 39 33 00
	00		 je	 $L194673

; 11   : 	PREDEFINE_QUERY(CTBLMonster)

  0025a	68 64 0c 00 00	 push	 3172			; 00000c64H
  0025f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00264	8b f0		 mov	 esi, eax
  00266	83 c4 04	 add	 esp, 4
  00269	89 74 24 14	 mov	 DWORD PTR $T193207[esp+36], esi
  0026d	3b f3		 cmp	 esi, ebx
  0026f	c7 44 24 20 07
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 7
  00277	74 1d		 je	 SHORT $L193209
  00279	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0027c	8b cc		 mov	 ecx, esp
  0027e	89 64 24 2c	 mov	 DWORD PTR $T193208[esp+64], esp
  00282	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@FNPLOPMJ@CTBLMonster?$AA@
  00287	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0028c	55		 push	 ebp
  0028d	8b ce		 mov	 ecx, esi
  0028f	e8 00 00 00 00	 call	 ??0CTBLMonster@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonster::CTBLMonster
  00294	eb 02		 jmp	 SHORT $L193210
$L193209:
  00296	33 c0		 xor	 eax, eax
$L193210:
  00298	3b c3		 cmp	 eax, ebx
  0029a	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  002a2	0f 84 eb 32 00
	00		 je	 $L194673

; 12   : 	PREDEFINE_QUERY(CTBLPet)

  002a8	68 40 0c 00 00	 push	 3136			; 00000c40H
  002ad	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  002b2	8b f0		 mov	 esi, eax
  002b4	83 c4 04	 add	 esp, 4
  002b7	89 74 24 14	 mov	 DWORD PTR $T193212[esp+36], esi
  002bb	3b f3		 cmp	 esi, ebx
  002bd	c7 44 24 20 08
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 8
  002c5	74 1d		 je	 SHORT $L193214
  002c7	83 ec 1c	 sub	 esp, 28			; 0000001cH
  002ca	8b cc		 mov	 ecx, esp
  002cc	89 64 24 2c	 mov	 DWORD PTR $T193213[esp+64], esp
  002d0	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07PLIEIMII@CTBLPet?$AA@
  002d5	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  002da	55		 push	 ebp
  002db	8b ce		 mov	 ecx, esi
  002dd	e8 00 00 00 00	 call	 ??0CTBLPet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLPet::CTBLPet
  002e2	eb 02		 jmp	 SHORT $L193215
$L193214:
  002e4	33 c0		 xor	 eax, eax
$L193215:
  002e6	3b c3		 cmp	 eax, ebx
  002e8	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  002f0	0f 84 9d 32 00
	00		 je	 $L194673

; 13   : 	PREDEFINE_QUERY(CTBLMonSpawn)

  002f6	68 58 0c 00 00	 push	 3160			; 00000c58H
  002fb	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00300	8b f0		 mov	 esi, eax
  00302	83 c4 04	 add	 esp, 4
  00305	89 74 24 14	 mov	 DWORD PTR $T193217[esp+36], esi
  00309	3b f3		 cmp	 esi, ebx
  0030b	c7 44 24 20 09
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 9
  00313	74 1d		 je	 SHORT $L193219
  00315	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00318	8b cc		 mov	 ecx, esp
  0031a	89 64 24 2c	 mov	 DWORD PTR $T193218[esp+64], esp
  0031e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@GCBODBJI@CTBLMonSpawn?$AA@
  00323	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00328	55		 push	 ebp
  00329	8b ce		 mov	 ecx, esi
  0032b	e8 00 00 00 00	 call	 ??0CTBLMonSpawn@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonSpawn::CTBLMonSpawn
  00330	eb 02		 jmp	 SHORT $L193220
$L193219:
  00332	33 c0		 xor	 eax, eax
$L193220:
  00334	3b c3		 cmp	 eax, ebx
  00336	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  0033e	0f 84 4f 32 00
	00		 je	 $L194673

; 14   : 	PREDEFINE_QUERY(CTBLMonParty)

  00344	68 30 0c 00 00	 push	 3120			; 00000c30H
  00349	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0034e	8b f0		 mov	 esi, eax
  00350	83 c4 04	 add	 esp, 4
  00353	89 74 24 14	 mov	 DWORD PTR $T193222[esp+36], esi
  00357	3b f3		 cmp	 esi, ebx
  00359	c7 44 24 20 0a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 10 ; 0000000aH
  00361	74 1d		 je	 SHORT $L193224
  00363	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00366	8b cc		 mov	 ecx, esp
  00368	89 64 24 2c	 mov	 DWORD PTR $T193223[esp+64], esp
  0036c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@PMGDDPLK@CTBLMonParty?$AA@
  00371	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00376	55		 push	 ebp
  00377	8b ce		 mov	 ecx, esi
  00379	e8 00 00 00 00	 call	 ??0CTBLMonParty@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonParty::CTBLMonParty
  0037e	eb 02		 jmp	 SHORT $L193225
$L193224:
  00380	33 c0		 xor	 eax, eax
$L193225:
  00382	3b c3		 cmp	 eax, ebx
  00384	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  0038c	0f 84 01 32 00
	00		 je	 $L194673

; 15   : 	PREDEFINE_QUERY(CTBLMapMon)

  00392	68 34 0c 00 00	 push	 3124			; 00000c34H
  00397	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0039c	8b f0		 mov	 esi, eax
  0039e	83 c4 04	 add	 esp, 4
  003a1	89 74 24 14	 mov	 DWORD PTR $T193227[esp+36], esi
  003a5	3b f3		 cmp	 esi, ebx
  003a7	c7 44 24 20 0b
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 11 ; 0000000bH
  003af	74 1d		 je	 SHORT $L193229
  003b1	83 ec 1c	 sub	 esp, 28			; 0000001cH
  003b4	8b cc		 mov	 ecx, esp
  003b6	89 64 24 2c	 mov	 DWORD PTR $T193228[esp+64], esp
  003ba	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@CLFGIJLB@CTBLMapMon?$AA@
  003bf	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  003c4	55		 push	 ebp
  003c5	8b ce		 mov	 ecx, esi
  003c7	e8 00 00 00 00	 call	 ??0CTBLMapMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMapMon::CTBLMapMon
  003cc	eb 02		 jmp	 SHORT $L193230
$L193229:
  003ce	33 c0		 xor	 eax, eax
$L193230:
  003d0	3b c3		 cmp	 eax, ebx
  003d2	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  003da	0f 84 b3 31 00
	00		 je	 $L194673

; 16   : 	PREDEFINE_QUERY(CTBLLevelChart)

  003e0	68 64 0c 00 00	 push	 3172			; 00000c64H
  003e5	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  003ea	8b f0		 mov	 esi, eax
  003ec	83 c4 04	 add	 esp, 4
  003ef	89 74 24 14	 mov	 DWORD PTR $T193232[esp+36], esi
  003f3	3b f3		 cmp	 esi, ebx
  003f5	c7 44 24 20 0c
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 12 ; 0000000cH
  003fd	74 1d		 je	 SHORT $L193234
  003ff	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00402	8b cc		 mov	 ecx, esp
  00404	89 64 24 2c	 mov	 DWORD PTR $T193233[esp+64], esp
  00408	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@CGLPNFOC@CTBLLevelChart?$AA@
  0040d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00412	55		 push	 ebp
  00413	8b ce		 mov	 ecx, esi
  00415	e8 00 00 00 00	 call	 ??0CTBLLevelChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLLevelChart::CTBLLevelChart
  0041a	eb 02		 jmp	 SHORT $L193235
$L193234:
  0041c	33 c0		 xor	 eax, eax
$L193235:
  0041e	3b c3		 cmp	 eax, ebx
  00420	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00428	0f 84 65 31 00
	00		 je	 $L194673

; 17   : 	PREDEFINE_QUERY(CTBLClassChart)

  0042e	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  00433	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00438	8b f0		 mov	 esi, eax
  0043a	83 c4 04	 add	 esp, 4
  0043d	89 74 24 14	 mov	 DWORD PTR $T193237[esp+36], esi
  00441	3b f3		 cmp	 esi, ebx
  00443	c7 44 24 20 0d
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 13 ; 0000000dH
  0044b	74 1d		 je	 SHORT $L193239
  0044d	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00450	8b cc		 mov	 ecx, esp
  00452	89 64 24 2c	 mov	 DWORD PTR $T193238[esp+64], esp
  00456	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@KKLBPBNN@CTBLClassChart?$AA@
  0045b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00460	55		 push	 ebp
  00461	8b ce		 mov	 ecx, esi
  00463	e8 00 00 00 00	 call	 ??0CTBLClassChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLClassChart::CTBLClassChart
  00468	eb 02		 jmp	 SHORT $L193240
$L193239:
  0046a	33 c0		 xor	 eax, eax
$L193240:
  0046c	3b c3		 cmp	 eax, ebx
  0046e	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00476	0f 84 17 31 00
	00		 je	 $L194673

; 18   : 	PREDEFINE_QUERY(CTBLSkillChart)

  0047c	68 a0 0c 00 00	 push	 3232			; 00000ca0H
  00481	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00486	8b f0		 mov	 esi, eax
  00488	83 c4 04	 add	 esp, 4
  0048b	89 74 24 14	 mov	 DWORD PTR $T193242[esp+36], esi
  0048f	3b f3		 cmp	 esi, ebx
  00491	c7 44 24 20 0e
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 14 ; 0000000eH
  00499	74 1d		 je	 SHORT $L193244
  0049b	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0049e	8b cc		 mov	 ecx, esp
  004a0	89 64 24 2c	 mov	 DWORD PTR $T193243[esp+64], esp
  004a4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@GJEOEDNH@CTBLSkillChart?$AA@
  004a9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  004ae	55		 push	 ebp
  004af	8b ce		 mov	 ecx, esi
  004b1	e8 00 00 00 00	 call	 ??0CTBLSkillChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSkillChart::CTBLSkillChart
  004b6	eb 02		 jmp	 SHORT $L193245
$L193244:
  004b8	33 c0		 xor	 eax, eax
$L193245:
  004ba	3b c3		 cmp	 eax, ebx
  004bc	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  004c4	0f 84 c9 30 00
	00		 je	 $L194673

; 19   : 	PREDEFINE_QUERY(CTBLItemChart)

  004ca	68 94 0c 00 00	 push	 3220			; 00000c94H
  004cf	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  004d4	8b f0		 mov	 esi, eax
  004d6	83 c4 04	 add	 esp, 4
  004d9	89 74 24 14	 mov	 DWORD PTR $T193247[esp+36], esi
  004dd	3b f3		 cmp	 esi, ebx
  004df	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  004e3	74 1d		 je	 SHORT $L193249
  004e5	83 ec 1c	 sub	 esp, 28			; 0000001cH
  004e8	8b cc		 mov	 ecx, esp
  004ea	89 64 24 2c	 mov	 DWORD PTR $T193248[esp+64], esp
  004ee	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@NIBNECBP@CTBLItemChart?$AA@
  004f3	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  004f8	55		 push	 ebp
  004f9	8b ce		 mov	 ecx, esi
  004fb	e8 00 00 00 00	 call	 ??0CTBLItemChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLItemChart::CTBLItemChart
  00500	eb 02		 jmp	 SHORT $L193250
$L193249:
  00502	33 c0		 xor	 eax, eax
$L193250:
  00504	83 cf ff	 or	 edi, -1
  00507	3b c3		 cmp	 eax, ebx
  00509	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0050d	0f 84 80 30 00
	00		 je	 $L194673

; 20   : 	PREDEFINE_QUERY(CTBLRaceChart)

  00513	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  00518	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0051d	8b f0		 mov	 esi, eax
  0051f	83 c4 04	 add	 esp, 4
  00522	89 74 24 14	 mov	 DWORD PTR $T193252[esp+36], esi
  00526	3b f3		 cmp	 esi, ebx
  00528	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 16 ; 00000010H
  00530	74 1d		 je	 SHORT $L193254
  00532	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00535	8b cc		 mov	 ecx, esp
  00537	89 64 24 2c	 mov	 DWORD PTR $T193253[esp+64], esp
  0053b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@BEIEHINO@CTBLRaceChart?$AA@
  00540	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00545	55		 push	 ebp
  00546	8b ce		 mov	 ecx, esi
  00548	e8 00 00 00 00	 call	 ??0CTBLRaceChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLRaceChart::CTBLRaceChart
  0054d	eb 02		 jmp	 SHORT $L193255
$L193254:
  0054f	33 c0		 xor	 eax, eax
$L193255:
  00551	3b c3		 cmp	 eax, ebx
  00553	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00557	0f 84 36 30 00
	00		 je	 $L194673

; 21   : 	PREDEFINE_QUERY(CTBLSkill)

  0055d	68 38 0c 00 00	 push	 3128			; 00000c38H
  00562	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00567	8b f0		 mov	 esi, eax
  00569	83 c4 04	 add	 esp, 4
  0056c	89 74 24 14	 mov	 DWORD PTR $T193257[esp+36], esi
  00570	3b f3		 cmp	 esi, ebx
  00572	c7 44 24 20 11
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 17 ; 00000011H
  0057a	74 1d		 je	 SHORT $L193259
  0057c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0057f	8b cc		 mov	 ecx, esp
  00581	89 64 24 2c	 mov	 DWORD PTR $T193258[esp+64], esp
  00585	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09EAGHDKO@CTBLSkill?$AA@
  0058a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0058f	55		 push	 ebp
  00590	8b ce		 mov	 ecx, esi
  00592	e8 00 00 00 00	 call	 ??0CTBLSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSkill::CTBLSkill
  00597	eb 02		 jmp	 SHORT $L193260
$L193259:
  00599	33 c0		 xor	 eax, eax
$L193260:
  0059b	3b c3		 cmp	 eax, ebx
  0059d	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  005a1	0f 84 ec 2f 00
	00		 je	 $L194673

; 22   : 	PREDEFINE_QUERY(CTBLInven)

  005a7	68 48 0c 00 00	 push	 3144			; 00000c48H
  005ac	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  005b1	8b f0		 mov	 esi, eax
  005b3	83 c4 04	 add	 esp, 4
  005b6	89 74 24 14	 mov	 DWORD PTR $T193262[esp+36], esi
  005ba	3b f3		 cmp	 esi, ebx
  005bc	c7 44 24 20 12
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 18 ; 00000012H
  005c4	74 1d		 je	 SHORT $L193264
  005c6	83 ec 1c	 sub	 esp, 28			; 0000001cH
  005c9	8b cc		 mov	 ecx, esp
  005cb	89 64 24 2c	 mov	 DWORD PTR $T193263[esp+64], esp
  005cf	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09FLDGMDOH@CTBLInven?$AA@
  005d4	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  005d9	55		 push	 ebp
  005da	8b ce		 mov	 ecx, esi
  005dc	e8 00 00 00 00	 call	 ??0CTBLInven@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLInven::CTBLInven
  005e1	eb 02		 jmp	 SHORT $L193265
$L193264:
  005e3	33 c0		 xor	 eax, eax
$L193265:
  005e5	3b c3		 cmp	 eax, ebx
  005e7	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  005eb	0f 84 a2 2f 00
	00		 je	 $L194673

; 23   : 	PREDEFINE_QUERY(CTBLItem)

  005f1	68 98 0c 00 00	 push	 3224			; 00000c98H
  005f6	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  005fb	8b f0		 mov	 esi, eax
  005fd	83 c4 04	 add	 esp, 4
  00600	89 74 24 14	 mov	 DWORD PTR $T193267[esp+36], esi
  00604	3b f3		 cmp	 esi, ebx
  00606	c7 44 24 20 13
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 19 ; 00000013H
  0060e	74 1d		 je	 SHORT $L193269
  00610	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00613	8b cc		 mov	 ecx, esp
  00615	89 64 24 2c	 mov	 DWORD PTR $T193268[esp+64], esp
  00619	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08KLHKJGDK@CTBLItem?$AA@
  0061e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00623	55		 push	 ebp
  00624	8b ce		 mov	 ecx, esi
  00626	e8 00 00 00 00	 call	 ??0CTBLItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLItem::CTBLItem
  0062b	eb 02		 jmp	 SHORT $L193270
$L193269:
  0062d	33 c0		 xor	 eax, eax
$L193270:
  0062f	3b c3		 cmp	 eax, ebx
  00631	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00635	0f 84 58 2f 00
	00		 je	 $L194673

; 24   : 	PREDEFINE_QUERY(CTBLChar)

  0063b	68 bc 0c 00 00	 push	 3260			; 00000cbcH
  00640	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00645	8b f0		 mov	 esi, eax
  00647	83 c4 04	 add	 esp, 4
  0064a	89 74 24 14	 mov	 DWORD PTR $T193272[esp+36], esi
  0064e	3b f3		 cmp	 esi, ebx
  00650	c7 44 24 20 14
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 20 ; 00000014H
  00658	74 1d		 je	 SHORT $L193274
  0065a	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0065d	8b cc		 mov	 ecx, esp
  0065f	89 64 24 2c	 mov	 DWORD PTR $T193273[esp+64], esp
  00663	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08DBFGMAPO@CTBLChar?$AA@
  00668	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0066d	55		 push	 ebp
  0066e	8b ce		 mov	 ecx, esi
  00670	e8 00 00 00 00	 call	 ??0CTBLChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLChar::CTBLChar
  00675	eb 02		 jmp	 SHORT $L193275
$L193274:
  00677	33 c0		 xor	 eax, eax
$L193275:
  00679	3b c3		 cmp	 eax, ebx
  0067b	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0067f	0f 84 0e 2f 00
	00		 je	 $L194673

; 25   : 	PREDEFINE_QUERY(CTBLSoulmateTable)

  00685	68 6c 0c 00 00	 push	 3180			; 00000c6cH
  0068a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0068f	8b f0		 mov	 esi, eax
  00691	83 c4 04	 add	 esp, 4
  00694	89 74 24 14	 mov	 DWORD PTR $T193277[esp+36], esi
  00698	3b f3		 cmp	 esi, ebx
  0069a	c7 44 24 20 15
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 21 ; 00000015H
  006a2	74 1d		 je	 SHORT $L193279
  006a4	83 ec 1c	 sub	 esp, 28			; 0000001cH
  006a7	8b cc		 mov	 ecx, esp
  006a9	89 64 24 2c	 mov	 DWORD PTR $T193278[esp+64], esp
  006ad	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@CGFODEPN@CTBLSoulmateTable?$AA@
  006b2	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  006b7	55		 push	 ebp
  006b8	8b ce		 mov	 ecx, esi
  006ba	e8 00 00 00 00	 call	 ??0CTBLSoulmateTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSoulmateTable::CTBLSoulmateTable
  006bf	eb 02		 jmp	 SHORT $L193280
$L193279:
  006c1	33 c0		 xor	 eax, eax
$L193280:
  006c3	3b c3		 cmp	 eax, ebx
  006c5	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  006c9	0f 84 c4 2e 00
	00		 je	 $L194673

; 26   : 	PREDEFINE_QUERY(CTBLProtectedTable)

  006cf	68 68 0c 00 00	 push	 3176			; 00000c68H
  006d4	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  006d9	8b f0		 mov	 esi, eax
  006db	83 c4 04	 add	 esp, 4
  006de	89 74 24 14	 mov	 DWORD PTR $T193282[esp+36], esi
  006e2	3b f3		 cmp	 esi, ebx
  006e4	c7 44 24 20 16
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 22 ; 00000016H
  006ec	74 1d		 je	 SHORT $L193284
  006ee	83 ec 1c	 sub	 esp, 28			; 0000001cH
  006f1	8b cc		 mov	 ecx, esp
  006f3	89 64 24 2c	 mov	 DWORD PTR $T193283[esp+64], esp
  006f7	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@HFJFAGJP@CTBLProtectedTable?$AA@
  006fc	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00701	55		 push	 ebp
  00702	8b ce		 mov	 ecx, esi
  00704	e8 00 00 00 00	 call	 ??0CTBLProtectedTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLProtectedTable::CTBLProtectedTable
  00709	eb 02		 jmp	 SHORT $L193285
$L193284:
  0070b	33 c0		 xor	 eax, eax
$L193285:
  0070d	3b c3		 cmp	 eax, ebx
  0070f	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00713	0f 84 7a 2e 00
	00		 je	 $L194673

; 27   : 	PREDEFINE_QUERY(CTBLCharGuild)

  00719	68 38 0c 00 00	 push	 3128			; 00000c38H
  0071e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00723	8b f0		 mov	 esi, eax
  00725	83 c4 04	 add	 esp, 4
  00728	89 74 24 14	 mov	 DWORD PTR $T193287[esp+36], esi
  0072c	3b f3		 cmp	 esi, ebx
  0072e	c7 44 24 20 17
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 23 ; 00000017H
  00736	74 1d		 je	 SHORT $L193289
  00738	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0073b	8b cc		 mov	 ecx, esp
  0073d	89 64 24 2c	 mov	 DWORD PTR $T193288[esp+64], esp
  00741	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@KDICEIP@CTBLCharGuild?$AA@
  00746	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0074b	55		 push	 ebp
  0074c	8b ce		 mov	 ecx, esi
  0074e	e8 00 00 00 00	 call	 ??0CTBLCharGuild@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCharGuild::CTBLCharGuild
  00753	eb 02		 jmp	 SHORT $L193290
$L193289:
  00755	33 c0		 xor	 eax, eax
$L193290:
  00757	3b c3		 cmp	 eax, ebx
  00759	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0075d	0f 84 30 2e 00
	00		 je	 $L194673

; 28   : 	PREDEFINE_QUERY(CTBLCharTactics)

  00763	68 34 0c 00 00	 push	 3124			; 00000c34H
  00768	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0076d	8b f0		 mov	 esi, eax
  0076f	83 c4 04	 add	 esp, 4
  00772	89 74 24 14	 mov	 DWORD PTR $T193292[esp+36], esi
  00776	3b f3		 cmp	 esi, ebx
  00778	c7 44 24 20 18
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 24 ; 00000018H
  00780	74 1d		 je	 SHORT $L193294
  00782	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00785	8b cc		 mov	 ecx, esp
  00787	89 64 24 2c	 mov	 DWORD PTR $T193293[esp+64], esp
  0078b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@KMFPJMMM@CTBLCharTactics?$AA@
  00790	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00795	55		 push	 ebp
  00796	8b ce		 mov	 ecx, esi
  00798	e8 00 00 00 00	 call	 ??0CTBLCharTactics@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCharTactics::CTBLCharTactics
  0079d	eb 02		 jmp	 SHORT $L193295
$L193294:
  0079f	33 c0		 xor	 eax, eax
$L193295:
  007a1	3b c3		 cmp	 eax, ebx
  007a3	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  007a7	0f 84 e6 2d 00
	00		 je	 $L194673

; 29   : 	PREDEFINE_QUERY(CTBLCharGuildInfo)

  007ad	68 38 0c 00 00	 push	 3128			; 00000c38H
  007b2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  007b7	8b f0		 mov	 esi, eax
  007b9	83 c4 04	 add	 esp, 4
  007bc	89 74 24 14	 mov	 DWORD PTR $T193297[esp+36], esi
  007c0	3b f3		 cmp	 esi, ebx
  007c2	c7 44 24 20 19
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 25 ; 00000019H
  007ca	74 1d		 je	 SHORT $L193299
  007cc	83 ec 1c	 sub	 esp, 28			; 0000001cH
  007cf	8b cc		 mov	 ecx, esp
  007d1	89 64 24 2c	 mov	 DWORD PTR $T193298[esp+64], esp
  007d5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@FNBBGHEG@CTBLCharGuildInfo?$AA@
  007da	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  007df	55		 push	 ebp
  007e0	8b ce		 mov	 ecx, esi
  007e2	e8 00 00 00 00	 call	 ??0CTBLCharGuildInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCharGuildInfo::CTBLCharGuildInfo
  007e7	eb 02		 jmp	 SHORT $L193300
$L193299:
  007e9	33 c0		 xor	 eax, eax
$L193300:
  007eb	3b c3		 cmp	 eax, ebx
  007ed	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  007f1	0f 84 9c 2d 00
	00		 je	 $L194673

; 30   : 	PREDEFINE_QUERY(CTBLSkillMaintain)

  007f7	68 4c 0c 00 00	 push	 3148			; 00000c4cH
  007fc	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00801	8b f0		 mov	 esi, eax
  00803	83 c4 04	 add	 esp, 4
  00806	89 74 24 14	 mov	 DWORD PTR $T193302[esp+36], esi
  0080a	3b f3		 cmp	 esi, ebx
  0080c	c7 44 24 20 1a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 26 ; 0000001aH
  00814	74 1d		 je	 SHORT $L193304
  00816	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00819	8b cc		 mov	 ecx, esp
  0081b	89 64 24 2c	 mov	 DWORD PTR $T193303[esp+64], esp
  0081f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@GNGCDJFD@CTBLSkillMaintain?$AA@
  00824	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00829	55		 push	 ebp
  0082a	8b ce		 mov	 ecx, esi
  0082c	e8 00 00 00 00	 call	 ??0CTBLSkillMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSkillMaintain::CTBLSkillMaintain
  00831	eb 02		 jmp	 SHORT $L193305
$L193304:
  00833	33 c0		 xor	 eax, eax
$L193305:
  00835	3b c3		 cmp	 eax, ebx
  00837	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0083b	0f 84 52 2d 00
	00		 je	 $L194673

; 31   : 	PREDEFINE_QUERY(CTBLSkillData)

  00841	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  00846	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0084b	8b f0		 mov	 esi, eax
  0084d	83 c4 04	 add	 esp, 4
  00850	89 74 24 14	 mov	 DWORD PTR $T193307[esp+36], esi
  00854	3b f3		 cmp	 esi, ebx
  00856	c7 44 24 20 1b
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 27 ; 0000001bH
  0085e	74 1d		 je	 SHORT $L193309
  00860	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00863	8b cc		 mov	 ecx, esp
  00865	89 64 24 2c	 mov	 DWORD PTR $T193308[esp+64], esp
  00869	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@KLMDCPCF@CTBLSkillData?$AA@
  0086e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00873	55		 push	 ebp
  00874	8b ce		 mov	 ecx, esi
  00876	e8 00 00 00 00	 call	 ??0CTBLSkillData@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSkillData::CTBLSkillData
  0087b	eb 02		 jmp	 SHORT $L193310
$L193309:
  0087d	33 c0		 xor	 eax, eax
$L193310:
  0087f	3b c3		 cmp	 eax, ebx
  00881	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00885	0f 84 08 2d 00
	00		 je	 $L194673

; 32   : 	PREDEFINE_QUERY(CTBLQuestChart)

  0088b	68 40 0c 00 00	 push	 3136			; 00000c40H
  00890	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00895	8b f0		 mov	 esi, eax
  00897	83 c4 04	 add	 esp, 4
  0089a	89 74 24 14	 mov	 DWORD PTR $T193312[esp+36], esi
  0089e	3b f3		 cmp	 esi, ebx
  008a0	c7 44 24 20 1c
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 28 ; 0000001cH
  008a8	74 1d		 je	 SHORT $L193314
  008aa	83 ec 1c	 sub	 esp, 28			; 0000001cH
  008ad	8b cc		 mov	 ecx, esp
  008af	89 64 24 2c	 mov	 DWORD PTR $T193313[esp+64], esp
  008b3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@BPNLEJHH@CTBLQuestChart?$AA@
  008b8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  008bd	55		 push	 ebp
  008be	8b ce		 mov	 ecx, esi
  008c0	e8 00 00 00 00	 call	 ??0CTBLQuestChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLQuestChart::CTBLQuestChart
  008c5	eb 02		 jmp	 SHORT $L193315
$L193314:
  008c7	33 c0		 xor	 eax, eax
$L193315:
  008c9	3b c3		 cmp	 eax, ebx
  008cb	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  008cf	0f 84 be 2c 00
	00		 je	 $L194673

; 33   : 	PREDEFINE_QUERY(CTBLQuestConditionChart)

  008d5	68 38 0c 00 00	 push	 3128			; 00000c38H
  008da	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  008df	8b f0		 mov	 esi, eax
  008e1	83 c4 04	 add	 esp, 4
  008e4	89 74 24 14	 mov	 DWORD PTR $T193317[esp+36], esi
  008e8	3b f3		 cmp	 esi, ebx
  008ea	c7 44 24 20 1d
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 29 ; 0000001dH
  008f2	74 1d		 je	 SHORT $L193319
  008f4	83 ec 1c	 sub	 esp, 28			; 0000001cH
  008f7	8b cc		 mov	 ecx, esp
  008f9	89 64 24 2c	 mov	 DWORD PTR $T193318[esp+64], esp
  008fd	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@FPLMGNFI@CTBLQuestConditionChart?$AA@
  00902	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00907	55		 push	 ebp
  00908	8b ce		 mov	 ecx, esi
  0090a	e8 00 00 00 00	 call	 ??0CTBLQuestConditionChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLQuestConditionChart::CTBLQuestConditionChart
  0090f	eb 02		 jmp	 SHORT $L193320
$L193319:
  00911	33 c0		 xor	 eax, eax
$L193320:
  00913	3b c3		 cmp	 eax, ebx
  00915	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00919	0f 84 74 2c 00
	00		 je	 $L194673

; 34   : 	PREDEFINE_QUERY(CTBLQuestRewardChart)

  0091f	68 38 0c 00 00	 push	 3128			; 00000c38H
  00924	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00929	8b f0		 mov	 esi, eax
  0092b	83 c4 04	 add	 esp, 4
  0092e	89 74 24 14	 mov	 DWORD PTR $T193322[esp+36], esi
  00932	3b f3		 cmp	 esi, ebx
  00934	c7 44 24 20 1e
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 30 ; 0000001eH
  0093c	74 1d		 je	 SHORT $L193324
  0093e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00941	8b cc		 mov	 ecx, esp
  00943	89 64 24 2c	 mov	 DWORD PTR $T193323[esp+64], esp
  00947	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@EAJLALIO@CTBLQuestRewardChart?$AA@
  0094c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00951	55		 push	 ebp
  00952	8b ce		 mov	 ecx, esi
  00954	e8 00 00 00 00	 call	 ??0CTBLQuestRewardChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLQuestRewardChart::CTBLQuestRewardChart
  00959	eb 02		 jmp	 SHORT $L193325
$L193324:
  0095b	33 c0		 xor	 eax, eax
$L193325:
  0095d	3b c3		 cmp	 eax, ebx
  0095f	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00963	0f 84 2a 2c 00
	00		 je	 $L194673

; 35   : 	PREDEFINE_QUERY(CTBLQuestMagicItemChart)

  00969	68 98 0c 00 00	 push	 3224			; 00000c98H
  0096e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00973	8b f0		 mov	 esi, eax
  00975	83 c4 04	 add	 esp, 4
  00978	89 74 24 14	 mov	 DWORD PTR $T193327[esp+36], esi
  0097c	3b f3		 cmp	 esi, ebx
  0097e	c7 44 24 20 1f
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 31 ; 0000001fH
  00986	74 1d		 je	 SHORT $L193329
  00988	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0098b	8b cc		 mov	 ecx, esp
  0098d	89 64 24 2c	 mov	 DWORD PTR $T193328[esp+64], esp
  00991	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@OCGLNJNE@CTBLQuestMagicItemChart?$AA@
  00996	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0099b	55		 push	 ebp
  0099c	8b ce		 mov	 ecx, esi
  0099e	e8 00 00 00 00	 call	 ??0CTBLQuestMagicItemChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLQuestMagicItemChart::CTBLQuestMagicItemChart
  009a3	eb 02		 jmp	 SHORT $L193330
$L193329:
  009a5	33 c0		 xor	 eax, eax
$L193330:
  009a7	3b c3		 cmp	 eax, ebx
  009a9	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  009ad	0f 84 e0 2b 00
	00		 je	 $L194673

; 36   : 	PREDEFINE_QUERY(CTBLQuestTermChart)

  009b3	68 38 0c 00 00	 push	 3128			; 00000c38H
  009b8	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  009bd	8b f0		 mov	 esi, eax
  009bf	83 c4 04	 add	 esp, 4
  009c2	89 74 24 14	 mov	 DWORD PTR $T193332[esp+36], esi
  009c6	3b f3		 cmp	 esi, ebx
  009c8	c7 44 24 20 20
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 32 ; 00000020H
  009d0	74 1d		 je	 SHORT $L193334
  009d2	83 ec 1c	 sub	 esp, 28			; 0000001cH
  009d5	8b cc		 mov	 ecx, esp
  009d7	89 64 24 2c	 mov	 DWORD PTR $T193333[esp+64], esp
  009db	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@BOHJADFB@CTBLQuestTermChart?$AA@
  009e0	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  009e5	55		 push	 ebp
  009e6	8b ce		 mov	 ecx, esi
  009e8	e8 00 00 00 00	 call	 ??0CTBLQuestTermChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLQuestTermChart::CTBLQuestTermChart
  009ed	eb 02		 jmp	 SHORT $L193335
$L193334:
  009ef	33 c0		 xor	 eax, eax
$L193335:
  009f1	3b c3		 cmp	 eax, ebx
  009f3	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  009f7	0f 84 96 2b 00
	00		 je	 $L194673

; 37   : 	PREDEFINE_QUERY(CTBLQuestTable)

  009fd	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  00a02	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00a07	8b f0		 mov	 esi, eax
  00a09	83 c4 04	 add	 esp, 4
  00a0c	89 74 24 14	 mov	 DWORD PTR $T193337[esp+36], esi
  00a10	3b f3		 cmp	 esi, ebx
  00a12	c7 44 24 20 21
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 33 ; 00000021H
  00a1a	74 1d		 je	 SHORT $L193339
  00a1c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00a1f	8b cc		 mov	 ecx, esp
  00a21	89 64 24 2c	 mov	 DWORD PTR $T193338[esp+64], esp
  00a25	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@FLMMBLKB@CTBLQuestTable?$AA@
  00a2a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00a2f	55		 push	 ebp
  00a30	8b ce		 mov	 ecx, esi
  00a32	e8 00 00 00 00	 call	 ??0CTBLQuestTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLQuestTable::CTBLQuestTable
  00a37	eb 02		 jmp	 SHORT $L193340
$L193339:
  00a39	33 c0		 xor	 eax, eax
$L193340:
  00a3b	3b c3		 cmp	 eax, ebx
  00a3d	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00a41	0f 84 4c 2b 00
	00		 je	 $L194673

; 38   : 	PREDEFINE_QUERY(CTBLQuestTermTable)

  00a47	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  00a4c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00a51	8b f0		 mov	 esi, eax
  00a53	83 c4 04	 add	 esp, 4
  00a56	89 74 24 14	 mov	 DWORD PTR $T193342[esp+36], esi
  00a5a	3b f3		 cmp	 esi, ebx
  00a5c	c7 44 24 20 22
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 34 ; 00000022H
  00a64	74 1d		 je	 SHORT $L193344
  00a66	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00a69	8b cc		 mov	 ecx, esp
  00a6b	89 64 24 2c	 mov	 DWORD PTR $T193343[esp+64], esp
  00a6f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@FKGOFBIH@CTBLQuestTermTable?$AA@
  00a74	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00a79	55		 push	 ebp
  00a7a	8b ce		 mov	 ecx, esi
  00a7c	e8 00 00 00 00	 call	 ??0CTBLQuestTermTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLQuestTermTable::CTBLQuestTermTable
  00a81	eb 02		 jmp	 SHORT $L193345
$L193344:
  00a83	33 c0		 xor	 eax, eax
$L193345:
  00a85	3b c3		 cmp	 eax, ebx
  00a87	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00a8b	0f 84 02 2b 00
	00		 je	 $L194673

; 39   : 	PREDEFINE_QUERY(CTBLCabinetTable)

  00a91	68 34 0c 00 00	 push	 3124			; 00000c34H
  00a96	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00a9b	8b f0		 mov	 esi, eax
  00a9d	83 c4 04	 add	 esp, 4
  00aa0	89 74 24 14	 mov	 DWORD PTR $T193347[esp+36], esi
  00aa4	3b f3		 cmp	 esi, ebx
  00aa6	c7 44 24 20 23
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 35 ; 00000023H
  00aae	74 1d		 je	 SHORT $L193349
  00ab0	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00ab3	8b cc		 mov	 ecx, esp
  00ab5	89 64 24 2c	 mov	 DWORD PTR $T193348[esp+64], esp
  00ab9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@FEMHEDED@CTBLCabinetTable?$AA@
  00abe	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00ac3	55		 push	 ebp
  00ac4	8b ce		 mov	 ecx, esi
  00ac6	e8 00 00 00 00	 call	 ??0CTBLCabinetTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCabinetTable::CTBLCabinetTable
  00acb	eb 02		 jmp	 SHORT $L193350
$L193349:
  00acd	33 c0		 xor	 eax, eax
$L193350:
  00acf	3b c3		 cmp	 eax, ebx
  00ad1	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00ad5	0f 84 b8 2a 00
	00		 je	 $L194673

; 40   : 	PREDEFINE_QUERY(CTBLSpawnPos)

  00adb	68 40 0c 00 00	 push	 3136			; 00000c40H
  00ae0	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00ae5	8b f0		 mov	 esi, eax
  00ae7	83 c4 04	 add	 esp, 4
  00aea	89 74 24 14	 mov	 DWORD PTR $T193352[esp+36], esi
  00aee	3b f3		 cmp	 esi, ebx
  00af0	c7 44 24 20 24
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 36 ; 00000024H
  00af8	74 1d		 je	 SHORT $L193354
  00afa	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00afd	8b cc		 mov	 ecx, esp
  00aff	89 64 24 2c	 mov	 DWORD PTR $T193353[esp+64], esp
  00b03	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@LDOMJEMG@CTBLSpawnPos?$AA@
  00b08	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00b0d	55		 push	 ebp
  00b0e	8b ce		 mov	 ecx, esi
  00b10	e8 00 00 00 00	 call	 ??0CTBLSpawnPos@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSpawnPos::CTBLSpawnPos
  00b15	eb 02		 jmp	 SHORT $L193355
$L193354:
  00b17	33 c0		 xor	 eax, eax
$L193355:
  00b19	3b c3		 cmp	 eax, ebx
  00b1b	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00b1f	0f 84 6e 2a 00
	00		 je	 $L194673

; 41   : 	PREDEFINE_QUERY(CTBLIndunChart)

  00b25	68 34 0c 00 00	 push	 3124			; 00000c34H
  00b2a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00b2f	8b f0		 mov	 esi, eax
  00b31	83 c4 04	 add	 esp, 4
  00b34	89 74 24 14	 mov	 DWORD PTR $T193357[esp+36], esi
  00b38	3b f3		 cmp	 esi, ebx
  00b3a	c7 44 24 20 25
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 37 ; 00000025H
  00b42	74 1d		 je	 SHORT $L193359
  00b44	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00b47	8b cc		 mov	 ecx, esp
  00b49	89 64 24 2c	 mov	 DWORD PTR $T193358[esp+64], esp
  00b4d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@MGBKMIKC@CTBLIndunChart?$AA@
  00b52	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00b57	55		 push	 ebp
  00b58	8b ce		 mov	 ecx, esi
  00b5a	e8 00 00 00 00	 call	 ??0CTBLIndunChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLIndunChart::CTBLIndunChart
  00b5f	eb 02		 jmp	 SHORT $L193360
$L193359:
  00b61	33 c0		 xor	 eax, eax
$L193360:
  00b63	3b c3		 cmp	 eax, ebx
  00b65	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00b69	0f 84 24 2a 00
	00		 je	 $L194673

; 42   : 	PREDEFINE_QUERY(CTBLNpc)

  00b6f	68 48 0c 00 00	 push	 3144			; 00000c48H
  00b74	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00b79	8b f0		 mov	 esi, eax
  00b7b	83 c4 04	 add	 esp, 4
  00b7e	89 74 24 14	 mov	 DWORD PTR $T193362[esp+36], esi
  00b82	3b f3		 cmp	 esi, ebx
  00b84	c7 44 24 20 26
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 38 ; 00000026H
  00b8c	74 1d		 je	 SHORT $L193364
  00b8e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00b91	8b cc		 mov	 ecx, esp
  00b93	89 64 24 2c	 mov	 DWORD PTR $T193363[esp+64], esp
  00b97	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_07FECMEJCJ@CTBLNpc?$AA@
  00b9c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00ba1	55		 push	 ebp
  00ba2	8b ce		 mov	 ecx, esi
  00ba4	e8 00 00 00 00	 call	 ??0CTBLNpc@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLNpc::CTBLNpc
  00ba9	eb 02		 jmp	 SHORT $L193365
$L193364:
  00bab	33 c0		 xor	 eax, eax
$L193365:
  00bad	3b c3		 cmp	 eax, ebx
  00baf	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00bb3	0f 84 da 29 00
	00		 je	 $L194673

; 43   : 	PREDEFINE_QUERY(CTBLNpcItem)

  00bb9	68 34 0c 00 00	 push	 3124			; 00000c34H
  00bbe	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00bc3	8b f0		 mov	 esi, eax
  00bc5	83 c4 04	 add	 esp, 4
  00bc8	89 74 24 14	 mov	 DWORD PTR $T193367[esp+36], esi
  00bcc	3b f3		 cmp	 esi, ebx
  00bce	c7 44 24 20 27
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 39 ; 00000027H
  00bd6	74 1d		 je	 SHORT $L193369
  00bd8	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00bdb	8b cc		 mov	 ecx, esp
  00bdd	89 64 24 2c	 mov	 DWORD PTR $T193368[esp+64], esp
  00be1	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@NILHLJGK@CTBLNpcItem?$AA@
  00be6	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00beb	55		 push	 ebp
  00bec	8b ce		 mov	 ecx, esi
  00bee	e8 00 00 00 00	 call	 ??0CTBLNpcItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLNpcItem::CTBLNpcItem
  00bf3	eb 02		 jmp	 SHORT $L193370
$L193369:
  00bf5	33 c0		 xor	 eax, eax
$L193370:
  00bf7	3b c3		 cmp	 eax, ebx
  00bf9	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00bfd	0f 84 90 29 00
	00		 je	 $L194673

; 44   : 	PREDEFINE_QUERY(CTBLMonItem)

  00c03	68 44 0c 00 00	 push	 3140			; 00000c44H
  00c08	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00c0d	8b f0		 mov	 esi, eax
  00c0f	83 c4 04	 add	 esp, 4
  00c12	89 74 24 14	 mov	 DWORD PTR $T193372[esp+36], esi
  00c16	3b f3		 cmp	 esi, ebx
  00c18	c7 44 24 20 28
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 40 ; 00000028H
  00c20	74 1d		 je	 SHORT $L193374
  00c22	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00c25	8b cc		 mov	 ecx, esp
  00c27	89 64 24 2c	 mov	 DWORD PTR $T193373[esp+64], esp
  00c2b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@HLDAEBHA@CTBLMonItem?$AA@
  00c30	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00c35	55		 push	 ebp
  00c36	8b ce		 mov	 ecx, esi
  00c38	e8 00 00 00 00	 call	 ??0CTBLMonItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonItem::CTBLMonItem
  00c3d	eb 02		 jmp	 SHORT $L193375
$L193374:
  00c3f	33 c0		 xor	 eax, eax
$L193375:
  00c41	3b c3		 cmp	 eax, ebx
  00c43	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00c47	0f 84 46 29 00
	00		 je	 $L194673

; 45   : 	PREDEFINE_QUERY(CTBLPostTable)

  00c4d	68 84 0d 00 00	 push	 3460			; 00000d84H
  00c52	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00c57	8b f0		 mov	 esi, eax
  00c59	83 c4 04	 add	 esp, 4
  00c5c	89 74 24 14	 mov	 DWORD PTR $T193377[esp+36], esi
  00c60	3b f3		 cmp	 esi, ebx
  00c62	c7 44 24 20 29
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 41 ; 00000029H
  00c6a	74 1d		 je	 SHORT $L193379
  00c6c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00c6f	8b cc		 mov	 ecx, esp
  00c71	89 64 24 2c	 mov	 DWORD PTR $T193378[esp+64], esp
  00c75	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@CBLGIHPG@CTBLPostTable?$AA@
  00c7a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00c7f	55		 push	 ebp
  00c80	8b ce		 mov	 ecx, esi
  00c82	e8 00 00 00 00	 call	 ??0CTBLPostTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLPostTable::CTBLPostTable
  00c87	eb 02		 jmp	 SHORT $L193380
$L193379:
  00c89	33 c0		 xor	 eax, eax
$L193380:
  00c8b	3b c3		 cmp	 eax, ebx
  00c8d	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00c91	0f 84 fc 28 00
	00		 je	 $L194673

; 46   : 	PREDEFINE_QUERY(CTBLHotKey)

  00c97	68 58 0c 00 00	 push	 3160			; 00000c58H
  00c9c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00ca1	8b f0		 mov	 esi, eax
  00ca3	83 c4 04	 add	 esp, 4
  00ca6	89 74 24 14	 mov	 DWORD PTR $T193382[esp+36], esi
  00caa	3b f3		 cmp	 esi, ebx
  00cac	c7 44 24 20 2a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 42 ; 0000002aH
  00cb4	74 1d		 je	 SHORT $L193384
  00cb6	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00cb9	8b cc		 mov	 ecx, esp
  00cbb	89 64 24 2c	 mov	 DWORD PTR $T193383[esp+64], esp
  00cbf	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@JLJLDPDK@CTBLHotKey?$AA@
  00cc4	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00cc9	55		 push	 ebp
  00cca	8b ce		 mov	 ecx, esi
  00ccc	e8 00 00 00 00	 call	 ??0CTBLHotKey@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLHotKey::CTBLHotKey
  00cd1	eb 02		 jmp	 SHORT $L193385
$L193384:
  00cd3	33 c0		 xor	 eax, eax
$L193385:
  00cd5	3b c3		 cmp	 eax, ebx
  00cd7	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00cdb	0f 84 b2 28 00
	00		 je	 $L194673

; 47   : 	PREDEFINE_QUERY(CTBLBattleZoneChart)

  00ce1	68 88 0c 00 00	 push	 3208			; 00000c88H
  00ce6	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00ceb	8b f0		 mov	 esi, eax
  00ced	83 c4 04	 add	 esp, 4
  00cf0	89 74 24 14	 mov	 DWORD PTR $T193387[esp+36], esi
  00cf4	3b f3		 cmp	 esi, ebx
  00cf6	c7 44 24 20 2b
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 43 ; 0000002bH
  00cfe	74 1d		 je	 SHORT $L193389
  00d00	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00d03	8b cc		 mov	 ecx, esp
  00d05	89 64 24 2c	 mov	 DWORD PTR $T193388[esp+64], esp
  00d09	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@PDCBGENO@CTBLBattleZoneChart?$AA@
  00d0e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00d13	55		 push	 ebp
  00d14	8b ce		 mov	 ecx, esi
  00d16	e8 00 00 00 00	 call	 ??0CTBLBattleZoneChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLBattleZoneChart::CTBLBattleZoneChart
  00d1b	eb 02		 jmp	 SHORT $L193390
$L193389:
  00d1d	33 c0		 xor	 eax, eax
$L193390:
  00d1f	3b c3		 cmp	 eax, ebx
  00d21	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00d25	0f 84 68 28 00
	00		 je	 $L194673

; 48   : 	PREDEFINE_QUERY(CTBLLocalTable)

  00d2b	68 cc 0c 00 00	 push	 3276			; 00000cccH
  00d30	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00d35	8b f0		 mov	 esi, eax
  00d37	83 c4 04	 add	 esp, 4
  00d3a	89 74 24 14	 mov	 DWORD PTR $T193392[esp+36], esi
  00d3e	3b f3		 cmp	 esi, ebx
  00d40	c7 44 24 20 2c
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 44 ; 0000002cH
  00d48	74 1d		 je	 SHORT $L193394
  00d4a	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00d4d	8b cc		 mov	 ecx, esp
  00d4f	89 64 24 2c	 mov	 DWORD PTR $T193393[esp+64], esp
  00d53	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@BHJHBODJ@CTBLLocalTable?$AA@
  00d58	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00d5d	55		 push	 ebp
  00d5e	8b ce		 mov	 ecx, esi
  00d60	e8 00 00 00 00	 call	 ??0CTBLLocalTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLLocalTable::CTBLLocalTable
  00d65	eb 02		 jmp	 SHORT $L193395
$L193394:
  00d67	33 c0		 xor	 eax, eax
$L193395:
  00d69	3b c3		 cmp	 eax, ebx
  00d6b	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00d6f	0f 84 1e 28 00
	00		 je	 $L194673

; 49   : 	PREDEFINE_QUERY(CTBLCastleTable)

  00d75	68 bc 0c 00 00	 push	 3260			; 00000cbcH
  00d7a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00d7f	8b f0		 mov	 esi, eax
  00d81	83 c4 04	 add	 esp, 4
  00d84	89 74 24 14	 mov	 DWORD PTR $T193397[esp+36], esi
  00d88	3b f3		 cmp	 esi, ebx
  00d8a	c7 44 24 20 2d
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 45 ; 0000002dH
  00d92	74 1d		 je	 SHORT $L193399
  00d94	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00d97	8b cc		 mov	 ecx, esp
  00d99	89 64 24 2c	 mov	 DWORD PTR $T193398[esp+64], esp
  00d9d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@FEIOLMMB@CTBLCastleTable?$AA@
  00da2	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00da7	55		 push	 ebp
  00da8	8b ce		 mov	 ecx, esi
  00daa	e8 00 00 00 00	 call	 ??0CTBLCastleTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCastleTable::CTBLCastleTable
  00daf	eb 02		 jmp	 SHORT $L193400
$L193399:
  00db1	33 c0		 xor	 eax, eax
$L193400:
  00db3	3b c3		 cmp	 eax, ebx
  00db5	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00db9	0f 84 d4 27 00
	00		 je	 $L194673

; 50   : 	PREDEFINE_QUERY(CTBLItemAttrChart)

  00dbf	68 40 0c 00 00	 push	 3136			; 00000c40H
  00dc4	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00dc9	8b f0		 mov	 esi, eax
  00dcb	83 c4 04	 add	 esp, 4
  00dce	89 74 24 14	 mov	 DWORD PTR $T193402[esp+36], esi
  00dd2	3b f3		 cmp	 esi, ebx
  00dd4	c7 44 24 20 2e
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 46 ; 0000002eH
  00ddc	74 1d		 je	 SHORT $L193404
  00dde	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00de1	8b cc		 mov	 ecx, esp
  00de3	89 64 24 2c	 mov	 DWORD PTR $T193403[esp+64], esp
  00de7	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@FJNLONLJ@CTBLItemAttrChart?$AA@
  00dec	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00df1	55		 push	 ebp
  00df2	8b ce		 mov	 ecx, esi
  00df4	e8 00 00 00 00	 call	 ??0CTBLItemAttrChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLItemAttrChart::CTBLItemAttrChart
  00df9	eb 02		 jmp	 SHORT $L193405
$L193404:
  00dfb	33 c0		 xor	 eax, eax
$L193405:
  00dfd	3b c3		 cmp	 eax, ebx
  00dff	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00e03	0f 84 8a 27 00
	00		 je	 $L194673

; 51   : 	PREDEFINE_QUERY(CTBLItemGradeChart)

  00e09	68 34 0c 00 00	 push	 3124			; 00000c34H
  00e0e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00e13	8b f0		 mov	 esi, eax
  00e15	83 c4 04	 add	 esp, 4
  00e18	89 74 24 14	 mov	 DWORD PTR $T193407[esp+36], esi
  00e1c	3b f3		 cmp	 esi, ebx
  00e1e	c7 44 24 20 2f
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 47 ; 0000002fH
  00e26	74 1d		 je	 SHORT $L193409
  00e28	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00e2b	8b cc		 mov	 ecx, esp
  00e2d	89 64 24 2c	 mov	 DWORD PTR $T193408[esp+64], esp
  00e31	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@MKKIPGEA@CTBLItemGradeChart?$AA@
  00e36	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00e3b	55		 push	 ebp
  00e3c	8b ce		 mov	 ecx, esi
  00e3e	e8 00 00 00 00	 call	 ??0CTBLItemGradeChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLItemGradeChart::CTBLItemGradeChart
  00e43	eb 02		 jmp	 SHORT $L193410
$L193409:
  00e45	33 c0		 xor	 eax, eax
$L193410:
  00e47	3b c3		 cmp	 eax, ebx
  00e49	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00e4d	0f 84 40 27 00
	00		 je	 $L194673

; 52   : 	PREDEFINE_QUERY(CTBLItemMagicChart)

  00e53	68 48 0c 00 00	 push	 3144			; 00000c48H
  00e58	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00e5d	8b f0		 mov	 esi, eax
  00e5f	83 c4 04	 add	 esp, 4
  00e62	89 74 24 14	 mov	 DWORD PTR $T193412[esp+36], esi
  00e66	3b f3		 cmp	 esi, ebx
  00e68	c7 44 24 20 30
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 48 ; 00000030H
  00e70	74 1d		 je	 SHORT $L193414
  00e72	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00e75	8b cc		 mov	 ecx, esp
  00e77	89 64 24 2c	 mov	 DWORD PTR $T193413[esp+64], esp
  00e7b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@GPFBMNEO@CTBLItemMagicChart?$AA@
  00e80	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00e85	55		 push	 ebp
  00e86	8b ce		 mov	 ecx, esi
  00e88	e8 00 00 00 00	 call	 ??0CTBLItemMagicChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLItemMagicChart::CTBLItemMagicChart
  00e8d	eb 02		 jmp	 SHORT $L193415
$L193414:
  00e8f	33 c0		 xor	 eax, eax
$L193415:
  00e91	3b c3		 cmp	 eax, ebx
  00e93	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00e97	0f 84 f6 26 00
	00		 je	 $L194673

; 53   : 	PREDEFINE_QUERY(CTBLItemSetChart)

  00e9d	68 44 0c 00 00	 push	 3140			; 00000c44H
  00ea2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00ea7	8b f0		 mov	 esi, eax
  00ea9	83 c4 04	 add	 esp, 4
  00eac	89 74 24 14	 mov	 DWORD PTR $T193417[esp+36], esi
  00eb0	3b f3		 cmp	 esi, ebx
  00eb2	c7 44 24 20 31
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 49 ; 00000031H
  00eba	74 1d		 je	 SHORT $L193419
  00ebc	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00ebf	8b cc		 mov	 ecx, esp
  00ec1	89 64 24 2c	 mov	 DWORD PTR $T193418[esp+64], esp
  00ec5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@EBJKHPCD@CTBLItemSetChart?$AA@
  00eca	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00ecf	55		 push	 ebp
  00ed0	8b ce		 mov	 ecx, esi
  00ed2	e8 00 00 00 00	 call	 ??0CTBLItemSetChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLItemSetChart::CTBLItemSetChart
  00ed7	eb 02		 jmp	 SHORT $L193420
$L193419:
  00ed9	33 c0		 xor	 eax, eax
$L193420:
  00edb	3b c3		 cmp	 eax, ebx
  00edd	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00ee1	0f 84 ac 26 00
	00		 je	 $L194673

; 54   : 	PREDEFINE_QUERY(CTBLFindChar)

  00ee7	68 64 0c 00 00	 push	 3172			; 00000c64H
  00eec	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00ef1	8b f0		 mov	 esi, eax
  00ef3	83 c4 04	 add	 esp, 4
  00ef6	89 74 24 14	 mov	 DWORD PTR $T193422[esp+36], esi
  00efa	3b f3		 cmp	 esi, ebx
  00efc	c7 44 24 20 32
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 50 ; 00000032H
  00f04	74 1d		 je	 SHORT $L193424
  00f06	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00f09	8b cc		 mov	 ecx, esp
  00f0b	89 64 24 2c	 mov	 DWORD PTR $T193423[esp+64], esp
  00f0f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@FKAOJOJE@CTBLFindChar?$AA@
  00f14	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00f19	55		 push	 ebp
  00f1a	8b ce		 mov	 ecx, esi
  00f1c	e8 00 00 00 00	 call	 ??0CTBLFindChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLFindChar::CTBLFindChar
  00f21	eb 02		 jmp	 SHORT $L193425
$L193424:
  00f23	33 c0		 xor	 eax, eax
$L193425:
  00f25	3b c3		 cmp	 eax, ebx
  00f27	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00f2b	0f 84 62 26 00
	00		 je	 $L194673

; 55   : 	PREDEFINE_QUERY(CTBLLocalInfo)

  00f31	68 38 0c 00 00	 push	 3128			; 00000c38H
  00f36	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00f3b	8b f0		 mov	 esi, eax
  00f3d	83 c4 04	 add	 esp, 4
  00f40	89 74 24 14	 mov	 DWORD PTR $T193427[esp+36], esi
  00f44	3b f3		 cmp	 esi, ebx
  00f46	c7 44 24 20 33
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 51 ; 00000033H
  00f4e	74 1d		 je	 SHORT $L193429
  00f50	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00f53	8b cc		 mov	 ecx, esp
  00f55	89 64 24 2c	 mov	 DWORD PTR $T193428[esp+64], esp
  00f59	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@PBEPFHDD@CTBLLocalInfo?$AA@
  00f5e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00f63	55		 push	 ebp
  00f64	8b ce		 mov	 ecx, esi
  00f66	e8 00 00 00 00	 call	 ??0CTBLLocalInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLLocalInfo::CTBLLocalInfo
  00f6b	eb 02		 jmp	 SHORT $L193430
$L193429:
  00f6d	33 c0		 xor	 eax, eax
$L193430:
  00f6f	3b c3		 cmp	 eax, ebx
  00f71	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00f75	0f 84 18 26 00
	00		 je	 $L194673

; 56   : 	PREDEFINE_QUERY(CTBLItemUsed)

  00f7b	68 38 0c 00 00	 push	 3128			; 00000c38H
  00f80	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00f85	8b f0		 mov	 esi, eax
  00f87	83 c4 04	 add	 esp, 4
  00f8a	89 74 24 14	 mov	 DWORD PTR $T193432[esp+36], esi
  00f8e	3b f3		 cmp	 esi, ebx
  00f90	c7 44 24 20 34
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 52 ; 00000034H
  00f98	74 1d		 je	 SHORT $L193434
  00f9a	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00f9d	8b cc		 mov	 ecx, esp
  00f9f	89 64 24 2c	 mov	 DWORD PTR $T193433[esp+64], esp
  00fa3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@DECINPDK@CTBLItemUsed?$AA@
  00fa8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00fad	55		 push	 ebp
  00fae	8b ce		 mov	 ecx, esi
  00fb0	e8 00 00 00 00	 call	 ??0CTBLItemUsed@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLItemUsed::CTBLItemUsed
  00fb5	eb 02		 jmp	 SHORT $L193435
$L193434:
  00fb7	33 c0		 xor	 eax, eax
$L193435:
  00fb9	3b c3		 cmp	 eax, ebx
  00fbb	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00fbf	0f 84 ce 25 00
	00		 je	 $L194673

; 57   : 	PREDEFINE_QUERY(CTBLSpawnPath)

  00fc5	68 44 0c 00 00	 push	 3140			; 00000c44H
  00fca	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00fcf	8b f0		 mov	 esi, eax
  00fd1	83 c4 04	 add	 esp, 4
  00fd4	89 74 24 14	 mov	 DWORD PTR $T193437[esp+36], esi
  00fd8	3b f3		 cmp	 esi, ebx
  00fda	c7 44 24 20 35
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 53 ; 00000035H
  00fe2	74 1d		 je	 SHORT $L193439
  00fe4	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00fe7	8b cc		 mov	 ecx, esp
  00fe9	89 64 24 2c	 mov	 DWORD PTR $T193438[esp+64], esp
  00fed	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@DKAAALAI@CTBLSpawnPath?$AA@
  00ff2	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00ff7	55		 push	 ebp
  00ff8	8b ce		 mov	 ecx, esi
  00ffa	e8 00 00 00 00	 call	 ??0CTBLSpawnPath@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSpawnPath::CTBLSpawnPath
  00fff	eb 02		 jmp	 SHORT $L193440
$L193439:
  01001	33 c0		 xor	 eax, eax
$L193440:
  01003	3b c3		 cmp	 eax, ebx
  01005	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01009	0f 84 84 25 00
	00		 je	 $L194673

; 58   : 	PREDEFINE_QUERY(CTBLRecallMon)

  0100f	68 54 0c 00 00	 push	 3156			; 00000c54H
  01014	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01019	8b f0		 mov	 esi, eax
  0101b	83 c4 04	 add	 esp, 4
  0101e	89 74 24 14	 mov	 DWORD PTR $T193442[esp+36], esi
  01022	3b f3		 cmp	 esi, ebx
  01024	c7 44 24 20 36
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 54 ; 00000036H
  0102c	74 1d		 je	 SHORT $L193444
  0102e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01031	8b cc		 mov	 ecx, esp
  01033	89 64 24 2c	 mov	 DWORD PTR $T193443[esp+64], esp
  01037	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@PAGKMGJM@CTBLRecallMon?$AA@
  0103c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01041	55		 push	 ebp
  01042	8b ce		 mov	 ecx, esi
  01044	e8 00 00 00 00	 call	 ??0CTBLRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLRecallMon::CTBLRecallMon
  01049	eb 02		 jmp	 SHORT $L193445
$L193444:
  0104b	33 c0		 xor	 eax, eax
$L193445:
  0104d	3b c3		 cmp	 eax, ebx
  0104f	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01053	0f 84 3a 25 00
	00		 je	 $L194673

; 59   : 	PREDEFINE_QUERY(CTBLPortalChart)

  01059	68 38 0c 00 00	 push	 3128			; 00000c38H
  0105e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01063	8b f0		 mov	 esi, eax
  01065	83 c4 04	 add	 esp, 4
  01068	89 74 24 14	 mov	 DWORD PTR $T193447[esp+36], esi
  0106c	3b f3		 cmp	 esi, ebx
  0106e	c7 44 24 20 37
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 55 ; 00000037H
  01076	74 1d		 je	 SHORT $L193449
  01078	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0107b	8b cc		 mov	 ecx, esp
  0107d	89 64 24 2c	 mov	 DWORD PTR $T193448[esp+64], esp
  01081	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@NIDGMBCB@CTBLPortalChart?$AA@
  01086	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0108b	55		 push	 ebp
  0108c	8b ce		 mov	 ecx, esi
  0108e	e8 00 00 00 00	 call	 ??0CTBLPortalChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLPortalChart::CTBLPortalChart
  01093	eb 02		 jmp	 SHORT $L193450
$L193449:
  01095	33 c0		 xor	 eax, eax
$L193450:
  01097	3b c3		 cmp	 eax, ebx
  01099	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0109d	0f 84 f0 24 00
	00		 je	 $L194673

; 60   : 	PREDEFINE_QUERY(CTBLDestinationChart)

  010a3	68 44 0c 00 00	 push	 3140			; 00000c44H
  010a8	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  010ad	8b f0		 mov	 esi, eax
  010af	83 c4 04	 add	 esp, 4
  010b2	89 74 24 14	 mov	 DWORD PTR $T193452[esp+36], esi
  010b6	3b f3		 cmp	 esi, ebx
  010b8	c7 44 24 20 38
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 56 ; 00000038H
  010c0	74 1d		 je	 SHORT $L193454
  010c2	83 ec 1c	 sub	 esp, 28			; 0000001cH
  010c5	8b cc		 mov	 ecx, esp
  010c7	89 64 24 2c	 mov	 DWORD PTR $T193453[esp+64], esp
  010cb	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@HOGANJA@CTBLDestinationChart?$AA@
  010d0	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  010d5	55		 push	 ebp
  010d6	8b ce		 mov	 ecx, esi
  010d8	e8 00 00 00 00	 call	 ??0CTBLDestinationChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLDestinationChart::CTBLDestinationChart
  010dd	eb 02		 jmp	 SHORT $L193455
$L193454:
  010df	33 c0		 xor	 eax, eax
$L193455:
  010e1	3b c3		 cmp	 eax, ebx
  010e3	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  010e7	0f 84 a6 24 00
	00		 je	 $L194673

; 61   : 	PREDEFINE_QUERY(CTBLGateChart)

  010ed	68 40 0c 00 00	 push	 3136			; 00000c40H
  010f2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  010f7	8b f0		 mov	 esi, eax
  010f9	83 c4 04	 add	 esp, 4
  010fc	89 74 24 14	 mov	 DWORD PTR $T193457[esp+36], esi
  01100	3b f3		 cmp	 esi, ebx
  01102	c7 44 24 20 39
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 57 ; 00000039H
  0110a	74 1d		 je	 SHORT $L193459
  0110c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0110f	8b cc		 mov	 ecx, esp
  01111	89 64 24 2c	 mov	 DWORD PTR $T193458[esp+64], esp
  01115	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@KDHNAKEA@CTBLGateChart?$AA@
  0111a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0111f	55		 push	 ebp
  01120	8b ce		 mov	 ecx, esi
  01122	e8 00 00 00 00	 call	 ??0CTBLGateChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGateChart::CTBLGateChart
  01127	eb 02		 jmp	 SHORT $L193460
$L193459:
  01129	33 c0		 xor	 eax, eax
$L193460:
  0112b	3b c3		 cmp	 eax, ebx
  0112d	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01131	0f 84 5c 24 00
	00		 je	 $L194673

; 62   : 	PREDEFINE_QUERY(CTBLSwitchChart)

  01137	68 40 0c 00 00	 push	 3136			; 00000c40H
  0113c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01141	8b f0		 mov	 esi, eax
  01143	83 c4 04	 add	 esp, 4
  01146	89 74 24 14	 mov	 DWORD PTR $T193462[esp+36], esi
  0114a	3b f3		 cmp	 esi, ebx
  0114c	c7 44 24 20 3a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 58 ; 0000003aH
  01154	74 1d		 je	 SHORT $L193464
  01156	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01159	8b cc		 mov	 ecx, esp
  0115b	89 64 24 2c	 mov	 DWORD PTR $T193463[esp+64], esp
  0115f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@NCLJGPCO@CTBLSwitchChart?$AA@
  01164	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01169	55		 push	 ebp
  0116a	8b ce		 mov	 ecx, esi
  0116c	e8 00 00 00 00	 call	 ??0CTBLSwitchChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSwitchChart::CTBLSwitchChart
  01171	eb 02		 jmp	 SHORT $L193465
$L193464:
  01173	33 c0		 xor	 eax, eax
$L193465:
  01175	3b c3		 cmp	 eax, ebx
  01177	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0117b	0f 84 12 24 00
	00		 je	 $L194673

; 63   : 	PREDEFINE_QUERY(CTBLOperatorChart)

  01181	68 30 0c 00 00	 push	 3120			; 00000c30H
  01186	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0118b	8b f0		 mov	 esi, eax
  0118d	83 c4 04	 add	 esp, 4
  01190	89 74 24 14	 mov	 DWORD PTR $T193467[esp+36], esi
  01194	3b f3		 cmp	 esi, ebx
  01196	c7 44 24 20 3b
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 59 ; 0000003bH
  0119e	74 1d		 je	 SHORT $L193469
  011a0	83 ec 1c	 sub	 esp, 28			; 0000001cH
  011a3	8b cc		 mov	 ecx, esp
  011a5	89 64 24 2c	 mov	 DWORD PTR $T193468[esp+64], esp
  011a9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@DCCCNCDJ@CTBLOperatorChart?$AA@
  011ae	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  011b3	55		 push	 ebp
  011b4	8b ce		 mov	 ecx, esi
  011b6	e8 00 00 00 00	 call	 ??0CTBLOperatorChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLOperatorChart::CTBLOperatorChart
  011bb	eb 02		 jmp	 SHORT $L193470
$L193469:
  011bd	33 c0		 xor	 eax, eax
$L193470:
  011bf	3b c3		 cmp	 eax, ebx
  011c1	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  011c5	0f 84 c8 23 00
	00		 je	 $L194673

; 64   : 	PREDEFINE_QUERY(CTBLPetTable)

  011cb	68 78 0c 00 00	 push	 3192			; 00000c78H
  011d0	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  011d5	8b f0		 mov	 esi, eax
  011d7	83 c4 04	 add	 esp, 4
  011da	89 74 24 14	 mov	 DWORD PTR $T193472[esp+36], esi
  011de	3b f3		 cmp	 esi, ebx
  011e0	c7 44 24 20 3c
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 60 ; 0000003cH
  011e8	74 1d		 je	 SHORT $L193474
  011ea	83 ec 1c	 sub	 esp, 28			; 0000001cH
  011ed	8b cc		 mov	 ecx, esp
  011ef	89 64 24 2c	 mov	 DWORD PTR $T193473[esp+64], esp
  011f3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@MMEIPPMI@CTBLPetTable?$AA@
  011f8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  011fd	55		 push	 ebp
  011fe	8b ce		 mov	 ecx, esi
  01200	e8 00 00 00 00	 call	 ??0CTBLPetTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLPetTable::CTBLPetTable
  01205	eb 02		 jmp	 SHORT $L193475
$L193474:
  01207	33 c0		 xor	 eax, eax
$L193475:
  01209	3b c3		 cmp	 eax, ebx
  0120b	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0120f	0f 84 7e 23 00
	00		 je	 $L194673

; 65   : 	PREDEFINE_QUERY(CTBLMonAttr)

  01215	68 60 0c 00 00	 push	 3168			; 00000c60H
  0121a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0121f	8b f0		 mov	 esi, eax
  01221	83 c4 04	 add	 esp, 4
  01224	89 74 24 14	 mov	 DWORD PTR $T193477[esp+36], esi
  01228	3b f3		 cmp	 esi, ebx
  0122a	c7 44 24 20 3d
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 61 ; 0000003dH
  01232	74 1d		 je	 SHORT $L193479
  01234	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01237	8b cc		 mov	 ecx, esp
  01239	89 64 24 2c	 mov	 DWORD PTR $T193478[esp+64], esp
  0123d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@JLPOMNGI@CTBLMonAttr?$AA@
  01242	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01247	55		 push	 ebp
  01248	8b ce		 mov	 ecx, esi
  0124a	e8 00 00 00 00	 call	 ??0CTBLMonAttr@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonAttr::CTBLMonAttr
  0124f	eb 02		 jmp	 SHORT $L193480
$L193479:
  01251	33 c0		 xor	 eax, eax
$L193480:
  01253	3b c3		 cmp	 eax, ebx
  01255	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01259	0f 84 34 23 00
	00		 je	 $L194673

; 66   : 	PREDEFINE_QUERY(CTBLItemMagicSkill)

  0125f	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  01264	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01269	8b f0		 mov	 esi, eax
  0126b	83 c4 04	 add	 esp, 4
  0126e	89 74 24 14	 mov	 DWORD PTR $T193482[esp+36], esi
  01272	3b f3		 cmp	 esi, ebx
  01274	c7 44 24 20 3e
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 62 ; 0000003eH
  0127c	74 1d		 je	 SHORT $L193484
  0127e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01281	8b cc		 mov	 ecx, esp
  01283	89 64 24 2c	 mov	 DWORD PTR $T193483[esp+64], esp
  01287	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@HKDAILMJ@CTBLItemMagicSkill?$AA@
  0128c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01291	55		 push	 ebp
  01292	8b ce		 mov	 ecx, esi
  01294	e8 00 00 00 00	 call	 ??0CTBLItemMagicSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLItemMagicSkill::CTBLItemMagicSkill
  01299	eb 02		 jmp	 SHORT $L193485
$L193484:
  0129b	33 c0		 xor	 eax, eax
$L193485:
  0129d	3b c3		 cmp	 eax, ebx
  0129f	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  012a3	0f 84 ea 22 00
	00		 je	 $L194673

; 67   : 	PREDEFINE_QUERY(CTBLCashItemCabinet)

  012a9	68 90 0c 00 00	 push	 3216			; 00000c90H
  012ae	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  012b3	8b f0		 mov	 esi, eax
  012b5	83 c4 04	 add	 esp, 4
  012b8	89 74 24 14	 mov	 DWORD PTR $T193487[esp+36], esi
  012bc	3b f3		 cmp	 esi, ebx
  012be	c7 44 24 20 3f
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 63 ; 0000003fH
  012c6	74 1d		 je	 SHORT $L193489
  012c8	83 ec 1c	 sub	 esp, 28			; 0000001cH
  012cb	8b cc		 mov	 ecx, esp
  012cd	89 64 24 2c	 mov	 DWORD PTR $T193488[esp+64], esp
  012d1	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@GIHLAPGK@CTBLCashItemCabinet?$AA@
  012d6	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  012db	55		 push	 ebp
  012dc	8b ce		 mov	 ecx, esi
  012de	e8 00 00 00 00	 call	 ??0CTBLCashItemCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCashItemCabinet::CTBLCashItemCabinet
  012e3	eb 02		 jmp	 SHORT $L193490
$L193489:
  012e5	33 c0		 xor	 eax, eax
$L193490:
  012e7	3b c3		 cmp	 eax, ebx
  012e9	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  012ed	0f 84 a0 22 00
	00		 je	 $L194673

; 68   : 	PREDEFINE_QUERY(CTBLCashShopItem)

  012f3	68 a0 0c 00 00	 push	 3232			; 00000ca0H
  012f8	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  012fd	8b f0		 mov	 esi, eax
  012ff	83 c4 04	 add	 esp, 4
  01302	89 74 24 14	 mov	 DWORD PTR $T193492[esp+36], esi
  01306	3b f3		 cmp	 esi, ebx
  01308	c7 44 24 20 40
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 64 ; 00000040H
  01310	74 1d		 je	 SHORT $L193494
  01312	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01315	8b cc		 mov	 ecx, esp
  01317	89 64 24 2c	 mov	 DWORD PTR $T193493[esp+64], esp
  0131b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@CKCJFDDH@CTBLCashShopItem?$AA@
  01320	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01325	55		 push	 ebp
  01326	8b ce		 mov	 ecx, esi
  01328	e8 00 00 00 00	 call	 ??0CTBLCashShopItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCashShopItem::CTBLCashShopItem
  0132d	eb 02		 jmp	 SHORT $L193495
$L193494:
  0132f	33 c0		 xor	 eax, eax
$L193495:
  01331	3b c3		 cmp	 eax, ebx
  01333	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01337	0f 84 56 22 00
	00		 je	 $L194673

; 69   : 	PREDEFINE_QUERY(CTBLCashCategory)

  0133d	68 60 0c 00 00	 push	 3168			; 00000c60H
  01342	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01347	8b f0		 mov	 esi, eax
  01349	83 c4 04	 add	 esp, 4
  0134c	89 74 24 14	 mov	 DWORD PTR $T193497[esp+36], esi
  01350	3b f3		 cmp	 esi, ebx
  01352	c7 44 24 20 41
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 65 ; 00000041H
  0135a	74 1d		 je	 SHORT $L193499
  0135c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0135f	8b cc		 mov	 ecx, esp
  01361	89 64 24 2c	 mov	 DWORD PTR $T193498[esp+64], esp
  01365	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@GBEKHCCK@CTBLCashCategory?$AA@
  0136a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0136f	55		 push	 ebp
  01370	8b ce		 mov	 ecx, esi
  01372	e8 00 00 00 00	 call	 ??0CTBLCashCategory@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCashCategory::CTBLCashCategory
  01377	eb 02		 jmp	 SHORT $L193500
$L193499:
  01379	33 c0		 xor	 eax, eax
$L193500:
  0137b	3b c3		 cmp	 eax, ebx
  0137d	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01381	0f 84 0c 22 00
	00		 je	 $L194673

; 70   : 	PREDEFINE_QUERY(CTBLGamble)

  01387	68 38 0c 00 00	 push	 3128			; 00000c38H
  0138c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01391	8b f0		 mov	 esi, eax
  01393	83 c4 04	 add	 esp, 4
  01396	89 74 24 14	 mov	 DWORD PTR $T193502[esp+36], esi
  0139a	3b f3		 cmp	 esi, ebx
  0139c	c7 44 24 20 42
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 66 ; 00000042H
  013a4	74 1d		 je	 SHORT $L193504
  013a6	83 ec 1c	 sub	 esp, 28			; 0000001cH
  013a9	8b cc		 mov	 ecx, esp
  013ab	89 64 24 2c	 mov	 DWORD PTR $T193503[esp+64], esp
  013af	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@OLFFNDG@CTBLGamble?$AA@
  013b4	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  013b9	55		 push	 ebp
  013ba	8b ce		 mov	 ecx, esi
  013bc	e8 00 00 00 00	 call	 ??0CTBLGamble@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGamble::CTBLGamble
  013c1	eb 02		 jmp	 SHORT $L193505
$L193504:
  013c3	33 c0		 xor	 eax, eax
$L193505:
  013c5	3b c3		 cmp	 eax, ebx
  013c7	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  013cb	0f 84 c2 21 00
	00		 je	 $L194673

; 71   : 	PREDEFINE_QUERY(CTBLGodTower)

  013d1	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  013d6	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  013db	8b f0		 mov	 esi, eax
  013dd	83 c4 04	 add	 esp, 4
  013e0	89 74 24 14	 mov	 DWORD PTR $T193507[esp+36], esi
  013e4	3b f3		 cmp	 esi, ebx
  013e6	c7 44 24 20 43
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 67 ; 00000043H
  013ee	74 1d		 je	 SHORT $L193509
  013f0	83 ec 1c	 sub	 esp, 28			; 0000001cH
  013f3	8b cc		 mov	 ecx, esp
  013f5	89 64 24 2c	 mov	 DWORD PTR $T193508[esp+64], esp
  013f9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@CAFCPGKD@CTBLGodTower?$AA@
  013fe	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01403	55		 push	 ebp
  01404	8b ce		 mov	 ecx, esi
  01406	e8 00 00 00 00	 call	 ??0CTBLGodTower@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGodTower::CTBLGodTower
  0140b	eb 02		 jmp	 SHORT $L193510
$L193509:
  0140d	33 c0		 xor	 eax, eax
$L193510:
  0140f	3b c3		 cmp	 eax, ebx
  01411	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01415	0f 84 78 21 00
	00		 je	 $L194673

; 72   : 	PREDEFINE_QUERY(CTBLGodBall)

  0141b	68 40 0c 00 00	 push	 3136			; 00000c40H
  01420	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01425	8b f0		 mov	 esi, eax
  01427	83 c4 04	 add	 esp, 4
  0142a	89 74 24 14	 mov	 DWORD PTR $T193512[esp+36], esi
  0142e	3b f3		 cmp	 esi, ebx
  01430	c7 44 24 20 44
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 68 ; 00000044H
  01438	74 1d		 je	 SHORT $L193514
  0143a	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0143d	8b cc		 mov	 ecx, esp
  0143f	89 64 24 2c	 mov	 DWORD PTR $T193513[esp+64], esp
  01443	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@ENLGOCKM@CTBLGodBall?$AA@
  01448	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0144d	55		 push	 ebp
  0144e	8b ce		 mov	 ecx, esi
  01450	e8 00 00 00 00	 call	 ??0CTBLGodBall@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGodBall::CTBLGodBall
  01455	eb 02		 jmp	 SHORT $L193515
$L193514:
  01457	33 c0		 xor	 eax, eax
$L193515:
  01459	3b c3		 cmp	 eax, ebx
  0145b	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0145f	0f 84 2e 21 00
	00		 je	 $L194673

; 73   : 	PREDEFINE_QUERY(CTBLLocalOccupy)

  01465	68 38 0c 00 00	 push	 3128			; 00000c38H
  0146a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0146f	8b f0		 mov	 esi, eax
  01471	83 c4 04	 add	 esp, 4
  01474	89 74 24 14	 mov	 DWORD PTR $T193517[esp+36], esi
  01478	3b f3		 cmp	 esi, ebx
  0147a	c7 44 24 20 45
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 69 ; 00000045H
  01482	74 1d		 je	 SHORT $L193519
  01484	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01487	8b cc		 mov	 ecx, esp
  01489	89 64 24 2c	 mov	 DWORD PTR $T193518[esp+64], esp
  0148d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@IDGCOEKI@CTBLLocalOccupy?$AA@
  01492	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01497	55		 push	 ebp
  01498	8b ce		 mov	 ecx, esi
  0149a	e8 00 00 00 00	 call	 ??0CTBLLocalOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLLocalOccupy::CTBLLocalOccupy
  0149f	eb 02		 jmp	 SHORT $L193520
$L193519:
  014a1	33 c0		 xor	 eax, eax
$L193520:
  014a3	3b c3		 cmp	 eax, ebx
  014a5	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  014a9	0f 84 e4 20 00
	00		 je	 $L194673

; 74   : 	PREDEFINE_QUERY(CTBLDuringItem)

  014af	68 48 0c 00 00	 push	 3144			; 00000c48H
  014b4	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  014b9	8b f0		 mov	 esi, eax
  014bb	83 c4 04	 add	 esp, 4
  014be	89 74 24 14	 mov	 DWORD PTR $T193522[esp+36], esi
  014c2	3b f3		 cmp	 esi, ebx
  014c4	c7 44 24 20 46
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 70 ; 00000046H
  014cc	74 1d		 je	 SHORT $L193524
  014ce	83 ec 1c	 sub	 esp, 28			; 0000001cH
  014d1	8b cc		 mov	 ecx, esp
  014d3	89 64 24 2c	 mov	 DWORD PTR $T193523[esp+64], esp
  014d7	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@KDDMBKPB@CTBLDuringItem?$AA@
  014dc	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  014e1	55		 push	 ebp
  014e2	8b ce		 mov	 ecx, esi
  014e4	e8 00 00 00 00	 call	 ??0CTBLDuringItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLDuringItem::CTBLDuringItem
  014e9	eb 02		 jmp	 SHORT $L193525
$L193524:
  014eb	33 c0		 xor	 eax, eax
$L193525:
  014ed	3b c3		 cmp	 eax, ebx
  014ef	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  014f3	0f 84 9a 20 00
	00		 je	 $L194673

; 75   : 	PREDEFINE_QUERY(CTBLExpItem)

  014f9	68 48 0c 00 00	 push	 3144			; 00000c48H
  014fe	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01503	8b f0		 mov	 esi, eax
  01505	83 c4 04	 add	 esp, 4
  01508	89 74 24 14	 mov	 DWORD PTR $T193527[esp+36], esi
  0150c	3b f3		 cmp	 esi, ebx
  0150e	c7 44 24 20 47
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 71 ; 00000047H
  01516	74 1d		 je	 SHORT $L193529
  01518	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0151b	8b cc		 mov	 ecx, esp
  0151d	89 64 24 2c	 mov	 DWORD PTR $T193528[esp+64], esp
  01521	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@DDHAJLGO@CTBLExpItem?$AA@
  01526	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0152b	55		 push	 ebp
  0152c	8b ce		 mov	 ecx, esi
  0152e	e8 00 00 00 00	 call	 ??0CTBLExpItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLExpItem::CTBLExpItem
  01533	eb 02		 jmp	 SHORT $L193530
$L193529:
  01535	33 c0		 xor	 eax, eax
$L193530:
  01537	3b c3		 cmp	 eax, ebx
  01539	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0153d	0f 84 50 20 00
	00		 je	 $L194673

; 76   : 	PREDEFINE_QUERY(CTBLSkillPoint)

  01543	68 38 0c 00 00	 push	 3128			; 00000c38H
  01548	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0154d	8b f0		 mov	 esi, eax
  0154f	83 c4 04	 add	 esp, 4
  01552	89 74 24 14	 mov	 DWORD PTR $T193532[esp+36], esi
  01556	3b f3		 cmp	 esi, ebx
  01558	c7 44 24 20 48
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 72 ; 00000048H
  01560	74 1d		 je	 SHORT $L193534
  01562	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01565	8b cc		 mov	 ecx, esp
  01567	89 64 24 2c	 mov	 DWORD PTR $T193533[esp+64], esp
  0156b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@IOKEJNAJ@CTBLSkillPoint?$AA@
  01570	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01575	55		 push	 ebp
  01576	8b ce		 mov	 ecx, esi
  01578	e8 00 00 00 00	 call	 ??0CTBLSkillPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSkillPoint::CTBLSkillPoint
  0157d	eb 02		 jmp	 SHORT $L193535
$L193534:
  0157f	33 c0		 xor	 eax, eax
$L193535:
  01581	3b c3		 cmp	 eax, ebx
  01583	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01587	0f 84 06 20 00
	00		 je	 $L194673

; 77   : 	PREDEFINE_QUERY(CTBLRecallMaintain)

  0158d	68 50 0c 00 00	 push	 3152			; 00000c50H
  01592	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01597	8b f0		 mov	 esi, eax
  01599	83 c4 04	 add	 esp, 4
  0159c	89 74 24 14	 mov	 DWORD PTR $T193537[esp+36], esi
  015a0	3b f3		 cmp	 esi, ebx
  015a2	c7 44 24 20 49
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 73 ; 00000049H
  015aa	74 1d		 je	 SHORT $L193539
  015ac	83 ec 1c	 sub	 esp, 28			; 0000001cH
  015af	8b cc		 mov	 ecx, esp
  015b1	89 64 24 2c	 mov	 DWORD PTR $T193538[esp+64], esp
  015b5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@MHEPPGPJ@CTBLRecallMaintain?$AA@
  015ba	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  015bf	55		 push	 ebp
  015c0	8b ce		 mov	 ecx, esi
  015c2	e8 00 00 00 00	 call	 ??0CTBLRecallMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLRecallMaintain::CTBLRecallMaintain
  015c7	eb 02		 jmp	 SHORT $L193540
$L193539:
  015c9	33 c0		 xor	 eax, eax
$L193540:
  015cb	3b c3		 cmp	 eax, ebx
  015cd	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  015d1	0f 84 bc 1f 00
	00		 je	 $L194673

; 78   : 	PREDEFINE_QUERY(CTBLSvrMsg)

  015d7	68 34 0d 00 00	 push	 3380			; 00000d34H
  015dc	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  015e1	8b f0		 mov	 esi, eax
  015e3	83 c4 04	 add	 esp, 4
  015e6	89 74 24 14	 mov	 DWORD PTR $T193542[esp+36], esi
  015ea	3b f3		 cmp	 esi, ebx
  015ec	c7 44 24 20 4a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 74 ; 0000004aH
  015f4	74 1d		 je	 SHORT $L193544
  015f6	83 ec 1c	 sub	 esp, 28			; 0000001cH
  015f9	8b cc		 mov	 ecx, esp
  015fb	89 64 24 2c	 mov	 DWORD PTR $T193543[esp+64], esp
  015ff	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@LMFKOODM@CTBLSvrMsg?$AA@
  01604	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01609	55		 push	 ebp
  0160a	8b ce		 mov	 ecx, esi
  0160c	e8 00 00 00 00	 call	 ??0CTBLSvrMsg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSvrMsg::CTBLSvrMsg
  01611	eb 02		 jmp	 SHORT $L193545
$L193544:
  01613	33 c0		 xor	 eax, eax
$L193545:
  01615	3b c3		 cmp	 eax, ebx
  01617	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0161b	0f 84 72 1f 00
	00		 je	 $L194673

; 79   : 	PREDEFINE_QUERY(CTBLPvPointChart)

  01621	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  01626	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0162b	8b f0		 mov	 esi, eax
  0162d	83 c4 04	 add	 esp, 4
  01630	89 74 24 14	 mov	 DWORD PTR $T193547[esp+36], esi
  01634	3b f3		 cmp	 esi, ebx
  01636	c7 44 24 20 4b
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 75 ; 0000004bH
  0163e	74 1d		 je	 SHORT $L193549
  01640	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01643	8b cc		 mov	 ecx, esp
  01645	89 64 24 2c	 mov	 DWORD PTR $T193548[esp+64], esp
  01649	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@CFIOCMPH@CTBLPvPointChart?$AA@
  0164e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01653	55		 push	 ebp
  01654	8b ce		 mov	 ecx, esi
  01656	e8 00 00 00 00	 call	 ??0CTBLPvPointChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLPvPointChart::CTBLPvPointChart
  0165b	eb 02		 jmp	 SHORT $L193550
$L193549:
  0165d	33 c0		 xor	 eax, eax
$L193550:
  0165f	3b c3		 cmp	 eax, ebx
  01661	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01665	0f 84 28 1f 00
	00		 je	 $L194673

; 80   : 	PREDEFINE_QUERY(CTBLPvPRecent)

  0166b	68 7c 0c 00 00	 push	 3196			; 00000c7cH
  01670	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01675	8b f0		 mov	 esi, eax
  01677	83 c4 04	 add	 esp, 4
  0167a	89 74 24 14	 mov	 DWORD PTR $T193552[esp+36], esi
  0167e	3b f3		 cmp	 esi, ebx
  01680	c7 44 24 20 4c
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 76 ; 0000004cH
  01688	74 1d		 je	 SHORT $L193554
  0168a	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0168d	8b cc		 mov	 ecx, esp
  0168f	89 64 24 2c	 mov	 DWORD PTR $T193553[esp+64], esp
  01693	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@ICCNFCGA@CTBLPvPRecent?$AA@
  01698	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0169d	55		 push	 ebp
  0169e	8b ce		 mov	 ecx, esi
  016a0	e8 00 00 00 00	 call	 ??0CTBLPvPRecent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLPvPRecent::CTBLPvPRecent
  016a5	eb 02		 jmp	 SHORT $L193555
$L193554:
  016a7	33 c0		 xor	 eax, eax
$L193555:
  016a9	3b c3		 cmp	 eax, ebx
  016ab	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  016af	0f 84 de 1e 00
	00		 je	 $L194673

; 81   : 	PREDEFINE_QUERY(CTBLDuelCharList)

  016b5	68 7c 0c 00 00	 push	 3196			; 00000c7cH
  016ba	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  016bf	8b f0		 mov	 esi, eax
  016c1	83 c4 04	 add	 esp, 4
  016c4	89 74 24 14	 mov	 DWORD PTR $T193557[esp+36], esi
  016c8	3b f3		 cmp	 esi, ebx
  016ca	c7 44 24 20 4d
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 77 ; 0000004dH
  016d2	74 1d		 je	 SHORT $L193559
  016d4	83 ec 1c	 sub	 esp, 28			; 0000001cH
  016d7	8b cc		 mov	 ecx, esp
  016d9	89 64 24 2c	 mov	 DWORD PTR $T193558[esp+64], esp
  016dd	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@EPODMDNB@CTBLDuelCharList?$AA@
  016e2	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  016e7	55		 push	 ebp
  016e8	8b ce		 mov	 ecx, esi
  016ea	e8 00 00 00 00	 call	 ??0CTBLDuelCharList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLDuelCharList::CTBLDuelCharList
  016ef	eb 02		 jmp	 SHORT $L193560
$L193559:
  016f1	33 c0		 xor	 eax, eax
$L193560:
  016f3	3b c3		 cmp	 eax, ebx
  016f5	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  016f9	0f 84 94 1e 00
	00		 je	 $L194673

; 82   : 	PREDEFINE_QUERY(CTBLDuelCharScore)

  016ff	68 60 0c 00 00	 push	 3168			; 00000c60H
  01704	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01709	8b f0		 mov	 esi, eax
  0170b	83 c4 04	 add	 esp, 4
  0170e	89 74 24 14	 mov	 DWORD PTR $T193562[esp+36], esi
  01712	3b f3		 cmp	 esi, ebx
  01714	c7 44 24 20 4e
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 78 ; 0000004eH
  0171c	74 1d		 je	 SHORT $L193564
  0171e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01721	8b cc		 mov	 ecx, esp
  01723	89 64 24 2c	 mov	 DWORD PTR $T193563[esp+64], esp
  01727	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@EPGDKCBJ@CTBLDuelCharScore?$AA@
  0172c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01731	55		 push	 ebp
  01732	8b ce		 mov	 ecx, esi
  01734	e8 00 00 00 00	 call	 ??0CTBLDuelCharScore@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLDuelCharScore::CTBLDuelCharScore
  01739	eb 02		 jmp	 SHORT $L193565
$L193564:
  0173b	33 c0		 xor	 eax, eax
$L193565:
  0173d	3b c3		 cmp	 eax, ebx
  0173f	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01743	0f 84 4a 1e 00
	00		 je	 $L194673

; 83   : 	PREDEFINE_QUERY(CTBLMonsterShop)

  01749	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  0174e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01753	8b f0		 mov	 esi, eax
  01755	83 c4 04	 add	 esp, 4
  01758	89 74 24 14	 mov	 DWORD PTR $T193567[esp+36], esi
  0175c	3b f3		 cmp	 esi, ebx
  0175e	c7 44 24 20 4f
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 79 ; 0000004fH
  01766	74 1d		 je	 SHORT $L193569
  01768	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0176b	8b cc		 mov	 ecx, esp
  0176d	89 64 24 2c	 mov	 DWORD PTR $T193568[esp+64], esp
  01771	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@KGPMLMDC@CTBLMonsterShop?$AA@
  01776	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0177b	55		 push	 ebp
  0177c	8b ce		 mov	 ecx, esi
  0177e	e8 00 00 00 00	 call	 ??0CTBLMonsterShop@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonsterShop::CTBLMonsterShop
  01783	eb 02		 jmp	 SHORT $L193570
$L193569:
  01785	33 c0		 xor	 eax, eax
$L193570:
  01787	3b c3		 cmp	 eax, ebx
  01789	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0178d	0f 84 00 1e 00
	00		 je	 $L194673

; 84   : 	PREDEFINE_QUERY(CTBLCashGambleChart)	

  01793	68 90 0c 00 00	 push	 3216			; 00000c90H
  01798	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0179d	8b f0		 mov	 esi, eax
  0179f	83 c4 04	 add	 esp, 4
  017a2	89 74 24 14	 mov	 DWORD PTR $T193572[esp+36], esi
  017a6	3b f3		 cmp	 esi, ebx
  017a8	c7 44 24 20 50
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 80 ; 00000050H
  017b0	74 1d		 je	 SHORT $L193574
  017b2	83 ec 1c	 sub	 esp, 28			; 0000001cH
  017b5	8b cc		 mov	 ecx, esp
  017b7	89 64 24 2c	 mov	 DWORD PTR $T193573[esp+64], esp
  017bb	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@PGAGDFLB@CTBLCashGambleChart?$AA@
  017c0	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  017c5	55		 push	 ebp
  017c6	8b ce		 mov	 ecx, esi
  017c8	e8 00 00 00 00	 call	 ??0CTBLCashGambleChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCashGambleChart::CTBLCashGambleChart
  017cd	eb 02		 jmp	 SHORT $L193575
$L193574:
  017cf	33 c0		 xor	 eax, eax
$L193575:
  017d1	3b c3		 cmp	 eax, ebx
  017d3	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  017d7	0f 84 b6 1d 00
	00		 je	 $L194673

; 85   : 	PREDEFINE_QUERY(CTBLAuctionTable) 

  017dd	68 f8 0c 00 00	 push	 3320			; 00000cf8H
  017e2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  017e7	8b f0		 mov	 esi, eax
  017e9	83 c4 04	 add	 esp, 4
  017ec	89 74 24 14	 mov	 DWORD PTR $T193577[esp+36], esi
  017f0	3b f3		 cmp	 esi, ebx
  017f2	c7 44 24 20 51
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 81 ; 00000051H
  017fa	74 1d		 je	 SHORT $L193579
  017fc	83 ec 1c	 sub	 esp, 28			; 0000001cH
  017ff	8b cc		 mov	 ecx, esp
  01801	89 64 24 2c	 mov	 DWORD PTR $T193578[esp+64], esp
  01805	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@BOFEEHJC@CTBLAuctionTable?$AA@
  0180a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0180f	55		 push	 ebp
  01810	8b ce		 mov	 ecx, esi
  01812	e8 00 00 00 00	 call	 ??0CTBLAuctionTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLAuctionTable::CTBLAuctionTable
  01817	eb 02		 jmp	 SHORT $L193580
$L193579:
  01819	33 c0		 xor	 eax, eax
$L193580:
  0181b	3b c3		 cmp	 eax, ebx
  0181d	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01821	0f 84 6c 1d 00
	00		 je	 $L194673

; 86   : 	PREDEFINE_QUERY(CTBLAuctionInterest)

  01827	68 34 0c 00 00	 push	 3124			; 00000c34H
  0182c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01831	8b f0		 mov	 esi, eax
  01833	83 c4 04	 add	 esp, 4
  01836	89 74 24 14	 mov	 DWORD PTR $T193582[esp+36], esi
  0183a	3b f3		 cmp	 esi, ebx
  0183c	c7 44 24 20 52
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 82 ; 00000052H
  01844	74 1d		 je	 SHORT $L193584
  01846	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01849	8b cc		 mov	 ecx, esp
  0184b	89 64 24 2c	 mov	 DWORD PTR $T193583[esp+64], esp
  0184f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@EJNLEJEB@CTBLAuctionInterest?$AA@
  01854	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01859	55		 push	 ebp
  0185a	8b ce		 mov	 ecx, esi
  0185c	e8 00 00 00 00	 call	 ??0CTBLAuctionInterest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLAuctionInterest::CTBLAuctionInterest
  01861	eb 02		 jmp	 SHORT $L193585
$L193584:
  01863	33 c0		 xor	 eax, eax
$L193585:
  01865	3b c3		 cmp	 eax, ebx
  01867	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0186b	0f 84 22 1d 00
	00		 je	 $L194673

; 87   : 	PREDEFINE_QUERY(CTBLAuctionBidList)

  01871	68 50 0c 00 00	 push	 3152			; 00000c50H
  01876	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0187b	8b f0		 mov	 esi, eax
  0187d	83 c4 04	 add	 esp, 4
  01880	89 74 24 14	 mov	 DWORD PTR $T193587[esp+36], esi
  01884	3b f3		 cmp	 esi, ebx
  01886	c7 44 24 20 53
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 83 ; 00000053H
  0188e	74 1d		 je	 SHORT $L193589
  01890	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01893	8b cc		 mov	 ecx, esp
  01895	89 64 24 2c	 mov	 DWORD PTR $T193588[esp+64], esp
  01899	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@GCFOENGO@CTBLAuctionBidList?$AA@
  0189e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  018a3	55		 push	 ebp
  018a4	8b ce		 mov	 ecx, esi
  018a6	e8 00 00 00 00	 call	 ??0CTBLAuctionBidList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLAuctionBidList::CTBLAuctionBidList
  018ab	eb 02		 jmp	 SHORT $L193590
$L193589:
  018ad	33 c0		 xor	 eax, eax
$L193590:
  018af	3b c3		 cmp	 eax, ebx
  018b1	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  018b5	0f 84 d8 1c 00
	00		 je	 $L194673

; 88   : 	PREDEFINE_QUERY(CTBLALLAuctionBidder)

  018bb	68 50 0c 00 00	 push	 3152			; 00000c50H
  018c0	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  018c5	8b f0		 mov	 esi, eax
  018c7	83 c4 04	 add	 esp, 4
  018ca	89 74 24 14	 mov	 DWORD PTR $T193592[esp+36], esi
  018ce	3b f3		 cmp	 esi, ebx
  018d0	c7 44 24 20 54
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 84 ; 00000054H
  018d8	74 1d		 je	 SHORT $L193594
  018da	83 ec 1c	 sub	 esp, 28			; 0000001cH
  018dd	8b cc		 mov	 ecx, esp
  018df	89 64 24 2c	 mov	 DWORD PTR $T193593[esp+64], esp
  018e3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@JPDCKDNI@CTBLALLAuctionBidder?$AA@
  018e8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  018ed	55		 push	 ebp
  018ee	8b ce		 mov	 ecx, esi
  018f0	e8 00 00 00 00	 call	 ??0CTBLALLAuctionBidder@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLALLAuctionBidder::CTBLALLAuctionBidder
  018f5	eb 02		 jmp	 SHORT $L193595
$L193594:
  018f7	33 c0		 xor	 eax, eax
$L193595:
  018f9	3b c3		 cmp	 eax, ebx
  018fb	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  018ff	0f 84 8e 1c 00
	00		 je	 $L194673

; 89   : 	PREDEFINE_QUERY(CTBLAuctionRegList)

  01905	68 34 0c 00 00	 push	 3124			; 00000c34H
  0190a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0190f	8b f0		 mov	 esi, eax
  01911	83 c4 04	 add	 esp, 4
  01914	89 74 24 14	 mov	 DWORD PTR $T193597[esp+36], esi
  01918	3b f3		 cmp	 esi, ebx
  0191a	c7 44 24 20 55
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 85 ; 00000055H
  01922	74 1d		 je	 SHORT $L193599
  01924	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01927	8b cc		 mov	 ecx, esp
  01929	89 64 24 2c	 mov	 DWORD PTR $T193598[esp+64], esp
  0192d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@FPNBGEJP@CTBLAuctionRegList?$AA@
  01932	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01937	55		 push	 ebp
  01938	8b ce		 mov	 ecx, esi
  0193a	e8 00 00 00 00	 call	 ??0CTBLAuctionRegList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLAuctionRegList::CTBLAuctionRegList
  0193f	eb 02		 jmp	 SHORT $L193600
$L193599:
  01941	33 c0		 xor	 eax, eax
$L193600:
  01943	3b c3		 cmp	 eax, ebx
  01945	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01949	0f 84 44 1c 00
	00		 je	 $L194673

; 90   : 	PREDEFINE_QUERY(CTBLMonthRankTable)

  0194f	68 bc 0d 00 00	 push	 3516			; 00000dbcH
  01954	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01959	8b f0		 mov	 esi, eax
  0195b	83 c4 04	 add	 esp, 4
  0195e	89 74 24 14	 mov	 DWORD PTR $T193602[esp+36], esi
  01962	3b f3		 cmp	 esi, ebx
  01964	c7 44 24 20 56
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 86 ; 00000056H
  0196c	74 1d		 je	 SHORT $L193604
  0196e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01971	8b cc		 mov	 ecx, esp
  01973	89 64 24 2c	 mov	 DWORD PTR $T193603[esp+64], esp
  01977	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@MAPHLBOO@CTBLMonthRankTable?$AA@
  0197c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01981	55		 push	 ebp
  01982	8b ce		 mov	 ecx, esi
  01984	e8 00 00 00 00	 call	 ??0CTBLMonthRankTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonthRankTable::CTBLMonthRankTable
  01989	eb 02		 jmp	 SHORT $L193605
$L193604:
  0198b	33 c0		 xor	 eax, eax
$L193605:
  0198d	3b c3		 cmp	 eax, ebx
  0198f	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01993	0f 84 fa 1b 00
	00		 je	 $L194673

; 91   : 	PREDEFINE_QUERY(CTBLFirstGradeGroup)

  01999	68 b8 0d 00 00	 push	 3512			; 00000db8H
  0199e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  019a3	8b f0		 mov	 esi, eax
  019a5	83 c4 04	 add	 esp, 4
  019a8	89 74 24 14	 mov	 DWORD PTR $T193607[esp+36], esi
  019ac	3b f3		 cmp	 esi, ebx
  019ae	c7 44 24 20 57
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 87 ; 00000057H
  019b6	74 1d		 je	 SHORT $L193609
  019b8	83 ec 1c	 sub	 esp, 28			; 0000001cH
  019bb	8b cc		 mov	 ecx, esp
  019bd	89 64 24 2c	 mov	 DWORD PTR $T193608[esp+64], esp
  019c1	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@IMHJOJNN@CTBLFirstGradeGroup?$AA@
  019c6	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  019cb	55		 push	 ebp
  019cc	8b ce		 mov	 ecx, esi
  019ce	e8 00 00 00 00	 call	 ??0CTBLFirstGradeGroup@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLFirstGradeGroup::CTBLFirstGradeGroup
  019d3	eb 02		 jmp	 SHORT $L193610
$L193609:
  019d5	33 c0		 xor	 eax, eax
$L193610:
  019d7	3b c3		 cmp	 eax, ebx
  019d9	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  019dd	0f 84 b0 1b 00
	00		 je	 $L194673

; 92   : 	PREDEFINE_QUERY(CTBLPostItem)

  019e3	68 98 0c 00 00	 push	 3224			; 00000c98H
  019e8	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  019ed	8b f0		 mov	 esi, eax
  019ef	83 c4 04	 add	 esp, 4
  019f2	89 74 24 14	 mov	 DWORD PTR $T193612[esp+36], esi
  019f6	3b f3		 cmp	 esi, ebx
  019f8	c7 44 24 20 58
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 88 ; 00000058H
  01a00	74 1d		 je	 SHORT $L193614
  01a02	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01a05	8b cc		 mov	 ecx, esp
  01a07	89 64 24 2c	 mov	 DWORD PTR $T193613[esp+64], esp
  01a0b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@NMEIAFLJ@CTBLPostItem?$AA@
  01a10	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01a15	55		 push	 ebp
  01a16	8b ce		 mov	 ecx, esi
  01a18	e8 00 00 00 00	 call	 ??0CTBLPostItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLPostItem::CTBLPostItem
  01a1d	eb 02		 jmp	 SHORT $L193615
$L193614:
  01a1f	33 c0		 xor	 eax, eax
$L193615:
  01a21	3b c3		 cmp	 eax, ebx
  01a23	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01a27	0f 84 66 1b 00
	00		 je	 $L194673

; 93   : 	PREDEFINE_QUERY(CTBLPostBill)

  01a2d	68 48 0c 00 00	 push	 3144			; 00000c48H
  01a32	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01a37	8b f0		 mov	 esi, eax
  01a39	83 c4 04	 add	 esp, 4
  01a3c	89 74 24 14	 mov	 DWORD PTR $T193617[esp+36], esi
  01a40	3b f3		 cmp	 esi, ebx
  01a42	c7 44 24 20 59
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 89 ; 00000059H
  01a4a	74 1d		 je	 SHORT $L193619
  01a4c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01a4f	8b cc		 mov	 ecx, esp
  01a51	89 64 24 2c	 mov	 DWORD PTR $T193618[esp+64], esp
  01a55	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@BPCBLBCE@CTBLPostBill?$AA@
  01a5a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01a5f	55		 push	 ebp
  01a60	8b ce		 mov	 ecx, esi
  01a62	e8 00 00 00 00	 call	 ??0CTBLPostBill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLPostBill::CTBLPostBill
  01a67	eb 02		 jmp	 SHORT $L193620
$L193619:
  01a69	33 c0		 xor	 eax, eax
$L193620:
  01a6b	3b c3		 cmp	 eax, ebx
  01a6d	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01a71	0f 84 1c 1b 00
	00		 je	 $L194673

; 94   : 	PREDEFINE_QUERY(CTBLHeroTable)

  01a77	68 c0 0d 00 00	 push	 3520			; 00000dc0H
  01a7c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01a81	8b f0		 mov	 esi, eax
  01a83	83 c4 04	 add	 esp, 4
  01a86	89 74 24 14	 mov	 DWORD PTR $T193622[esp+36], esi
  01a8a	3b f3		 cmp	 esi, ebx
  01a8c	c7 44 24 20 5a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 90 ; 0000005aH
  01a94	74 1d		 je	 SHORT $L193624
  01a96	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01a99	8b cc		 mov	 ecx, esp
  01a9b	89 64 24 2c	 mov	 DWORD PTR $T193623[esp+64], esp
  01a9f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@CJJCAENO@CTBLHeroTable?$AA@
  01aa4	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01aa9	55		 push	 ebp
  01aaa	8b ce		 mov	 ecx, esi
  01aac	e8 00 00 00 00	 call	 ??0CTBLHeroTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLHeroTable::CTBLHeroTable
  01ab1	eb 02		 jmp	 SHORT $L193625
$L193624:
  01ab3	33 c0		 xor	 eax, eax
$L193625:
  01ab5	3b c3		 cmp	 eax, ebx
  01ab7	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01abb	0f 84 d2 1a 00
	00		 je	 $L194673

; 95   : 	PREDEFINE_QUERY(CTBLTutorialCharItem)

  01ac1	68 44 0c 00 00	 push	 3140			; 00000c44H
  01ac6	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01acb	8b f0		 mov	 esi, eax
  01acd	83 c4 04	 add	 esp, 4
  01ad0	89 74 24 14	 mov	 DWORD PTR $T193627[esp+36], esi
  01ad4	3b f3		 cmp	 esi, ebx
  01ad6	c7 44 24 20 5b
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 91 ; 0000005bH
  01ade	74 1d		 je	 SHORT $L193629
  01ae0	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01ae3	8b cc		 mov	 ecx, esp
  01ae5	89 64 24 2c	 mov	 DWORD PTR $T193628[esp+64], esp
  01ae9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@GKEPILDD@CTBLTutorialCharItem?$AA@
  01aee	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01af3	55		 push	 ebp
  01af4	8b ce		 mov	 ecx, esi
  01af6	e8 00 00 00 00	 call	 ??0CTBLTutorialCharItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTutorialCharItem::CTBLTutorialCharItem
  01afb	eb 02		 jmp	 SHORT $L193630
$L193629:
  01afd	33 c0		 xor	 eax, eax
$L193630:
  01aff	3b c3		 cmp	 eax, ebx
  01b01	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01b05	0f 84 88 1a 00
	00		 je	 $L194673

; 96   : 	PREDEFINE_QUERY(CTBLHelpMessage)

  01b0b	68 54 14 00 00	 push	 5204			; 00001454H
  01b10	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01b15	8b f0		 mov	 esi, eax
  01b17	83 c4 04	 add	 esp, 4
  01b1a	89 74 24 14	 mov	 DWORD PTR $T193632[esp+36], esi
  01b1e	3b f3		 cmp	 esi, ebx
  01b20	c7 44 24 20 5c
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 92 ; 0000005cH
  01b28	74 1d		 je	 SHORT $L193634
  01b2a	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01b2d	8b cc		 mov	 ecx, esp
  01b2f	89 64 24 2c	 mov	 DWORD PTR $T193633[esp+64], esp
  01b33	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@DFDJDDIP@CTBLHelpMessage?$AA@
  01b38	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01b3d	55		 push	 ebp
  01b3e	8b ce		 mov	 ecx, esi
  01b40	e8 00 00 00 00	 call	 ??0CTBLHelpMessage@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLHelpMessage::CTBLHelpMessage
  01b45	eb 02		 jmp	 SHORT $L193635
$L193634:
  01b47	33 c0		 xor	 eax, eax
$L193635:
  01b49	3b c3		 cmp	 eax, ebx
  01b4b	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01b4f	0f 84 3e 1a 00
	00		 je	 $L194673

; 97   : 	PREDEFINE_QUERY(CTBLMissionTable)

  01b55	68 30 0c 00 00	 push	 3120			; 00000c30H
  01b5a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01b5f	8b f0		 mov	 esi, eax
  01b61	83 c4 04	 add	 esp, 4
  01b64	89 74 24 14	 mov	 DWORD PTR $T193637[esp+36], esi
  01b68	3b f3		 cmp	 esi, ebx
  01b6a	c7 44 24 20 5d
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 93 ; 0000005dH
  01b72	74 1d		 je	 SHORT $L193639
  01b74	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01b77	8b cc		 mov	 ecx, esp
  01b79	89 64 24 2c	 mov	 DWORD PTR $T193638[esp+64], esp
  01b7d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@MBNGIBKG@CTBLMissionTable?$AA@
  01b82	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01b87	55		 push	 ebp
  01b88	8b ce		 mov	 ecx, esi
  01b8a	e8 00 00 00 00	 call	 ??0CTBLMissionTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMissionTable::CTBLMissionTable
  01b8f	eb 02		 jmp	 SHORT $L193640
$L193639:
  01b91	33 c0		 xor	 eax, eax
$L193640:
  01b93	3b c3		 cmp	 eax, ebx
  01b95	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01b99	0f 84 f4 19 00
	00		 je	 $L194673

; 98   : 	PREDEFINE_QUERY(CTBLRPSGame)

  01b9f	68 44 0c 00 00	 push	 3140			; 00000c44H
  01ba4	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01ba9	8b f0		 mov	 esi, eax
  01bab	83 c4 04	 add	 esp, 4
  01bae	89 74 24 14	 mov	 DWORD PTR $T193642[esp+36], esi
  01bb2	3b f3		 cmp	 esi, ebx
  01bb4	c7 44 24 20 5e
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 94 ; 0000005eH
  01bbc	74 1d		 je	 SHORT $L193644
  01bbe	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01bc1	8b cc		 mov	 ecx, esp
  01bc3	89 64 24 2c	 mov	 DWORD PTR $T193643[esp+64], esp
  01bc7	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@CGFJGBED@CTBLRPSGame?$AA@
  01bcc	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01bd1	55		 push	 ebp
  01bd2	8b ce		 mov	 ecx, esi
  01bd4	e8 00 00 00 00	 call	 ??0CTBLRPSGame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLRPSGame::CTBLRPSGame
  01bd9	eb 02		 jmp	 SHORT $L193645
$L193644:
  01bdb	33 c0		 xor	 eax, eax
$L193645:
  01bdd	3b c3		 cmp	 eax, ebx
  01bdf	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01be3	0f 84 aa 19 00
	00		 je	 $L194673

; 99   : 	PREDEFINE_QUERY(CTBLArena)

  01be9	68 38 0c 00 00	 push	 3128			; 00000c38H
  01bee	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01bf3	8b f0		 mov	 esi, eax
  01bf5	83 c4 04	 add	 esp, 4
  01bf8	89 74 24 14	 mov	 DWORD PTR $T193647[esp+36], esi
  01bfc	3b f3		 cmp	 esi, ebx
  01bfe	c7 44 24 20 5f
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 95 ; 0000005fH
  01c06	74 1d		 je	 SHORT $L193649
  01c08	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01c0b	8b cc		 mov	 ecx, esp
  01c0d	89 64 24 2c	 mov	 DWORD PTR $T193648[esp+64], esp
  01c11	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09NLBEDAFG@CTBLArena?$AA@
  01c16	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01c1b	55		 push	 ebp
  01c1c	8b ce		 mov	 ecx, esi
  01c1e	e8 00 00 00 00	 call	 ??0CTBLArena@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLArena::CTBLArena
  01c23	eb 02		 jmp	 SHORT $L193650
$L193649:
  01c25	33 c0		 xor	 eax, eax
$L193650:
  01c27	3b c3		 cmp	 eax, ebx
  01c29	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01c2d	0f 84 60 19 00
	00		 je	 $L194673

; 100  : 	PREDEFINE_QUERY(CTBLAidTable)

  01c33	68 44 0c 00 00	 push	 3140			; 00000c44H
  01c38	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01c3d	8b f0		 mov	 esi, eax
  01c3f	83 c4 04	 add	 esp, 4
  01c42	89 74 24 14	 mov	 DWORD PTR $T193652[esp+36], esi
  01c46	3b f3		 cmp	 esi, ebx
  01c48	c7 44 24 20 60
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 96 ; 00000060H
  01c50	74 1d		 je	 SHORT $L193654
  01c52	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01c55	8b cc		 mov	 ecx, esp
  01c57	89 64 24 2c	 mov	 DWORD PTR $T193653[esp+64], esp
  01c5b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@EHICCAHL@CTBLAidTable?$AA@
  01c60	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01c65	55		 push	 ebp
  01c66	8b ce		 mov	 ecx, esi
  01c68	e8 00 00 00 00	 call	 ??0CTBLAidTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLAidTable::CTBLAidTable
  01c6d	eb 02		 jmp	 SHORT $L193655
$L193654:
  01c6f	33 c0		 xor	 eax, eax
$L193655:
  01c71	3b c3		 cmp	 eax, ebx
  01c73	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01c77	0f 84 16 19 00
	00		 je	 $L194673

; 101  : 
; 102  : 	PREDEFINE_QUERY(CSPCreateRecallMon)

  01c7d	68 58 0c 00 00	 push	 3160			; 00000c58H
  01c82	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01c87	8b f0		 mov	 esi, eax
  01c89	83 c4 04	 add	 esp, 4
  01c8c	89 74 24 14	 mov	 DWORD PTR $T193657[esp+36], esi
  01c90	3b f3		 cmp	 esi, ebx
  01c92	c7 44 24 20 61
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 97 ; 00000061H
  01c9a	74 1d		 je	 SHORT $L193659
  01c9c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01c9f	8b cc		 mov	 ecx, esp
  01ca1	89 64 24 2c	 mov	 DWORD PTR $T193658[esp+64], esp
  01ca5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@KBGBHHPH@CSPCreateRecallMon?$AA@
  01caa	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01caf	55		 push	 ebp
  01cb0	8b ce		 mov	 ecx, esi
  01cb2	e8 00 00 00 00	 call	 ??0CSPCreateRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPCreateRecallMon::CSPCreateRecallMon
  01cb7	eb 02		 jmp	 SHORT $L193660
$L193659:
  01cb9	33 c0		 xor	 eax, eax
$L193660:
  01cbb	3b c3		 cmp	 eax, ebx
  01cbd	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01cc1	0f 84 cc 18 00
	00		 je	 $L194673

; 103  : 	PREDEFINE_QUERY(CSPSaveRecallMon)

  01cc7	68 5c 0c 00 00	 push	 3164			; 00000c5cH
  01ccc	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01cd1	8b f0		 mov	 esi, eax
  01cd3	83 c4 04	 add	 esp, 4
  01cd6	89 74 24 14	 mov	 DWORD PTR $T193662[esp+36], esi
  01cda	3b f3		 cmp	 esi, ebx
  01cdc	c7 44 24 20 62
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 98 ; 00000062H
  01ce4	74 1d		 je	 SHORT $L193664
  01ce6	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01ce9	8b cc		 mov	 ecx, esp
  01ceb	89 64 24 2c	 mov	 DWORD PTR $T193663[esp+64], esp
  01cef	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@BPPADGEL@CSPSaveRecallMon?$AA@
  01cf4	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01cf9	55		 push	 ebp
  01cfa	8b ce		 mov	 ecx, esi
  01cfc	e8 00 00 00 00	 call	 ??0CSPSaveRecallMon@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveRecallMon::CSPSaveRecallMon
  01d01	eb 02		 jmp	 SHORT $L193665
$L193664:
  01d03	33 c0		 xor	 eax, eax
$L193665:
  01d05	3b c3		 cmp	 eax, ebx
  01d07	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01d0b	0f 84 82 18 00
	00		 je	 $L194673

; 104  : 	PREDEFINE_QUERY(CSPEnterServer)

  01d11	68 78 0c 00 00	 push	 3192			; 00000c78H
  01d16	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01d1b	8b f0		 mov	 esi, eax
  01d1d	83 c4 04	 add	 esp, 4
  01d20	89 74 24 14	 mov	 DWORD PTR $T193667[esp+36], esi
  01d24	3b f3		 cmp	 esi, ebx
  01d26	c7 44 24 20 63
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 99 ; 00000063H
  01d2e	74 1d		 je	 SHORT $L193669
  01d30	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01d33	8b cc		 mov	 ecx, esp
  01d35	89 64 24 2c	 mov	 DWORD PTR $T193668[esp+64], esp
  01d39	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@NIFMANIC@CSPEnterServer?$AA@
  01d3e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01d43	55		 push	 ebp
  01d44	8b ce		 mov	 ecx, esi
  01d46	e8 00 00 00 00	 call	 ??0CSPEnterServer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPEnterServer::CSPEnterServer
  01d4b	eb 02		 jmp	 SHORT $L193670
$L193669:
  01d4d	33 c0		 xor	 eax, eax
$L193670:
  01d4f	3b c3		 cmp	 eax, ebx
  01d51	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01d55	0f 84 38 18 00
	00		 je	 $L194673

; 105  : 	PREDEFINE_QUERY(CSPGetServerID)

  01d5b	68 38 0c 00 00	 push	 3128			; 00000c38H
  01d60	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01d65	8b f0		 mov	 esi, eax
  01d67	83 c4 04	 add	 esp, 4
  01d6a	89 74 24 14	 mov	 DWORD PTR $T193672[esp+36], esi
  01d6e	3b f3		 cmp	 esi, ebx
  01d70	c7 44 24 20 64
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 100 ; 00000064H
  01d78	74 1d		 je	 SHORT $L193674
  01d7a	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01d7d	8b cc		 mov	 ecx, esp
  01d7f	89 64 24 2c	 mov	 DWORD PTR $T193673[esp+64], esp
  01d83	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@DFHCCFBK@CSPGetServerID?$AA@
  01d88	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01d8d	55		 push	 ebp
  01d8e	8b ce		 mov	 ecx, esi
  01d90	e8 00 00 00 00	 call	 ??0CSPGetServerID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetServerID::CSPGetServerID
  01d95	eb 02		 jmp	 SHORT $L193675
$L193674:
  01d97	33 c0		 xor	 eax, eax
$L193675:
  01d99	3b c3		 cmp	 eax, ebx
  01d9b	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01d9f	0f 84 ee 17 00
	00		 je	 $L194673

; 106  : 	PREDEFINE_QUERY(CSPSaveInven)

  01da5	68 4c 0c 00 00	 push	 3148			; 00000c4cH
  01daa	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01daf	8b f0		 mov	 esi, eax
  01db1	83 c4 04	 add	 esp, 4
  01db4	89 74 24 14	 mov	 DWORD PTR $T193677[esp+36], esi
  01db8	3b f3		 cmp	 esi, ebx
  01dba	c7 44 24 20 65
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 101 ; 00000065H
  01dc2	74 1d		 je	 SHORT $L193679
  01dc4	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01dc7	8b cc		 mov	 ecx, esp
  01dc9	89 64 24 2c	 mov	 DWORD PTR $T193678[esp+64], esp
  01dcd	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@JMHOGABD@CSPSaveInven?$AA@
  01dd2	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01dd7	55		 push	 ebp
  01dd8	8b ce		 mov	 ecx, esi
  01dda	e8 00 00 00 00	 call	 ??0CSPSaveInven@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveInven::CSPSaveInven
  01ddf	eb 02		 jmp	 SHORT $L193680
$L193679:
  01de1	33 c0		 xor	 eax, eax
$L193680:
  01de3	3b c3		 cmp	 eax, ebx
  01de5	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01de9	0f 84 a4 17 00
	00		 je	 $L194673

; 107  : 	PREDEFINE_QUERY(CSPSaveItem)

  01def	68 98 0c 00 00	 push	 3224			; 00000c98H
  01df4	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01df9	8b f0		 mov	 esi, eax
  01dfb	83 c4 04	 add	 esp, 4
  01dfe	89 74 24 14	 mov	 DWORD PTR $T193682[esp+36], esi
  01e02	3b f3		 cmp	 esi, ebx
  01e04	c7 44 24 20 66
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 102 ; 00000066H
  01e0c	74 1d		 je	 SHORT $L193684
  01e0e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01e11	8b cc		 mov	 ecx, esp
  01e13	89 64 24 2c	 mov	 DWORD PTR $T193683[esp+64], esp
  01e17	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@DEHBNGEB@CSPSaveItem?$AA@
  01e1c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01e21	55		 push	 ebp
  01e22	8b ce		 mov	 ecx, esi
  01e24	e8 00 00 00 00	 call	 ??0CSPSaveItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveItem::CSPSaveItem
  01e29	eb 02		 jmp	 SHORT $L193685
$L193684:
  01e2b	33 c0		 xor	 eax, eax
$L193685:
  01e2d	3b c3		 cmp	 eax, ebx
  01e2f	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01e33	0f 84 5a 17 00
	00		 je	 $L194673

; 108  : 	PREDEFINE_QUERY(CSPSaveChar)

  01e39	68 88 0c 00 00	 push	 3208			; 00000c88H
  01e3e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01e43	8b f0		 mov	 esi, eax
  01e45	83 c4 04	 add	 esp, 4
  01e48	89 74 24 14	 mov	 DWORD PTR $T193687[esp+36], esi
  01e4c	3b f3		 cmp	 esi, ebx
  01e4e	c7 44 24 20 67
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 103 ; 00000067H
  01e56	74 1d		 je	 SHORT $L193689
  01e58	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01e5b	8b cc		 mov	 ecx, esp
  01e5d	89 64 24 2c	 mov	 DWORD PTR $T193688[esp+64], esp
  01e61	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@KOFNIAIF@CSPSaveChar?$AA@
  01e66	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01e6b	55		 push	 ebp
  01e6c	8b ce		 mov	 ecx, esi
  01e6e	e8 00 00 00 00	 call	 ??0CSPSaveChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveChar::CSPSaveChar
  01e73	eb 02		 jmp	 SHORT $L193690
$L193689:
  01e75	33 c0		 xor	 eax, eax
$L193690:
  01e77	3b c3		 cmp	 eax, ebx
  01e79	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01e7d	0f 84 10 17 00
	00		 je	 $L194673

; 109  : 	PREDEFINE_QUERY(CSPLogout)

  01e83	68 38 0c 00 00	 push	 3128			; 00000c38H
  01e88	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01e8d	8b f0		 mov	 esi, eax
  01e8f	83 c4 04	 add	 esp, 4
  01e92	89 74 24 14	 mov	 DWORD PTR $T193692[esp+36], esi
  01e96	3b f3		 cmp	 esi, ebx
  01e98	c7 44 24 20 68
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 104 ; 00000068H
  01ea0	74 1d		 je	 SHORT $L193694
  01ea2	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01ea5	8b cc		 mov	 ecx, esp
  01ea7	89 64 24 2c	 mov	 DWORD PTR $T193693[esp+64], esp
  01eab	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09FMDGFNJM@CSPLogout?$AA@
  01eb0	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01eb5	55		 push	 ebp
  01eb6	8b ce		 mov	 ecx, esi
  01eb8	e8 00 00 00 00	 call	 ??0CSPLogout@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPLogout::CSPLogout
  01ebd	eb 02		 jmp	 SHORT $L193695
$L193694:
  01ebf	33 c0		 xor	 eax, eax
$L193695:
  01ec1	3b c3		 cmp	 eax, ebx
  01ec3	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01ec7	0f 84 c6 16 00
	00		 je	 $L194673

; 110  : 	PREDEFINE_QUERY(CSPRoute)

  01ecd	68 68 0c 00 00	 push	 3176			; 00000c68H
  01ed2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01ed7	8b f0		 mov	 esi, eax
  01ed9	83 c4 04	 add	 esp, 4
  01edc	89 74 24 14	 mov	 DWORD PTR $T193697[esp+36], esi
  01ee0	3b f3		 cmp	 esi, ebx
  01ee2	c7 44 24 20 69
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 105 ; 00000069H
  01eea	74 1d		 je	 SHORT $L193699
  01eec	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01eef	8b cc		 mov	 ecx, esp
  01ef1	89 64 24 2c	 mov	 DWORD PTR $T193698[esp+64], esp
  01ef5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08ELCCIPKB@CSPRoute?$AA@
  01efa	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01eff	55		 push	 ebp
  01f00	8b ce		 mov	 ecx, esi
  01f02	e8 00 00 00 00	 call	 ??0CSPRoute@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPRoute::CSPRoute
  01f07	eb 02		 jmp	 SHORT $L193700
$L193699:
  01f09	33 c0		 xor	 eax, eax
$L193700:
  01f0b	3b c3		 cmp	 eax, ebx
  01f0d	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01f11	0f 84 7c 16 00
	00		 je	 $L194673

; 111  : 	PREDEFINE_QUERY(CSPSaveSkill)

  01f17	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  01f1c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01f21	8b f0		 mov	 esi, eax
  01f23	83 c4 04	 add	 esp, 4
  01f26	89 74 24 14	 mov	 DWORD PTR $T193702[esp+36], esi
  01f2a	3b f3		 cmp	 esi, ebx
  01f2c	c7 44 24 20 6a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 106 ; 0000006aH
  01f34	74 1d		 je	 SHORT $L193704
  01f36	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01f39	8b cc		 mov	 ecx, esp
  01f3b	89 64 24 2c	 mov	 DWORD PTR $T193703[esp+64], esp
  01f3f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@MDEONAFK@CSPSaveSkill?$AA@
  01f44	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01f49	55		 push	 ebp
  01f4a	8b ce		 mov	 ecx, esi
  01f4c	e8 00 00 00 00	 call	 ??0CSPSaveSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveSkill::CSPSaveSkill
  01f51	eb 02		 jmp	 SHORT $L193705
$L193704:
  01f53	33 c0		 xor	 eax, eax
$L193705:
  01f55	3b c3		 cmp	 eax, ebx
  01f57	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01f5b	0f 84 32 16 00
	00		 je	 $L194673

; 112  : 	PREDEFINE_QUERY(CSPSaveSkillMaintain)

  01f61	68 50 0c 00 00	 push	 3152			; 00000c50H
  01f66	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01f6b	8b f0		 mov	 esi, eax
  01f6d	83 c4 04	 add	 esp, 4
  01f70	89 74 24 14	 mov	 DWORD PTR $T193707[esp+36], esi
  01f74	3b f3		 cmp	 esi, ebx
  01f76	c7 44 24 20 6b
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 107 ; 0000006bH
  01f7e	74 1d		 je	 SHORT $L193709
  01f80	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01f83	8b cc		 mov	 ecx, esp
  01f85	89 64 24 2c	 mov	 DWORD PTR $T193708[esp+64], esp
  01f89	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@NIDOFGNK@CSPSaveSkillMaintain?$AA@
  01f8e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01f93	55		 push	 ebp
  01f94	8b ce		 mov	 ecx, esi
  01f96	e8 00 00 00 00	 call	 ??0CSPSaveSkillMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveSkillMaintain::CSPSaveSkillMaintain
  01f9b	eb 02		 jmp	 SHORT $L193710
$L193709:
  01f9d	33 c0		 xor	 eax, eax
$L193710:
  01f9f	3b c3		 cmp	 eax, ebx
  01fa1	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01fa5	0f 84 e8 15 00
	00		 je	 $L194673

; 113  : 	PREDEFINE_QUERY(CSPSaveQuest)

  01fab	68 40 0c 00 00	 push	 3136			; 00000c40H
  01fb0	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01fb5	8b f0		 mov	 esi, eax
  01fb7	83 c4 04	 add	 esp, 4
  01fba	89 74 24 14	 mov	 DWORD PTR $T193712[esp+36], esi
  01fbe	3b f3		 cmp	 esi, ebx
  01fc0	c7 44 24 20 6c
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 108 ; 0000006cH
  01fc8	74 1d		 je	 SHORT $L193714
  01fca	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01fcd	8b cc		 mov	 ecx, esp
  01fcf	89 64 24 2c	 mov	 DWORD PTR $T193713[esp+64], esp
  01fd3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@IOOBJLBO@CSPSaveQuest?$AA@
  01fd8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01fdd	55		 push	 ebp
  01fde	8b ce		 mov	 ecx, esi
  01fe0	e8 00 00 00 00	 call	 ??0CSPSaveQuest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveQuest::CSPSaveQuest
  01fe5	eb 02		 jmp	 SHORT $L193715
$L193714:
  01fe7	33 c0		 xor	 eax, eax
$L193715:
  01fe9	3b c3		 cmp	 eax, ebx
  01feb	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01fef	0f 84 9e 15 00
	00		 je	 $L194673

; 114  : 	PREDEFINE_QUERY(CSPSaveQuestTerm)

  01ff5	68 40 0c 00 00	 push	 3136			; 00000c40H
  01ffa	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01fff	8b f0		 mov	 esi, eax
  02001	83 c4 04	 add	 esp, 4
  02004	89 74 24 14	 mov	 DWORD PTR $T193717[esp+36], esi
  02008	3b f3		 cmp	 esi, ebx
  0200a	c7 44 24 20 6d
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 109 ; 0000006dH
  02012	74 1d		 je	 SHORT $L193719
  02014	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02017	8b cc		 mov	 ecx, esp
  02019	89 64 24 2c	 mov	 DWORD PTR $T193718[esp+64], esp
  0201d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@EKKINMNJ@CSPSaveQuestTerm?$AA@
  02022	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02027	55		 push	 ebp
  02028	8b ce		 mov	 ecx, esi
  0202a	e8 00 00 00 00	 call	 ??0CSPSaveQuestTerm@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveQuestTerm::CSPSaveQuestTerm
  0202f	eb 02		 jmp	 SHORT $L193720
$L193719:
  02031	33 c0		 xor	 eax, eax
$L193720:
  02033	3b c3		 cmp	 eax, ebx
  02035	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02039	0f 84 54 15 00
	00		 je	 $L194673

; 115  : 	PREDEFINE_QUERY(CSPSaveCabinet)

  0203f	68 38 0c 00 00	 push	 3128			; 00000c38H
  02044	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02049	8b f0		 mov	 esi, eax
  0204b	83 c4 04	 add	 esp, 4
  0204e	89 74 24 14	 mov	 DWORD PTR $T193722[esp+36], esi
  02052	3b f3		 cmp	 esi, ebx
  02054	c7 44 24 20 6e
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 110 ; 0000006eH
  0205c	74 1d		 je	 SHORT $L193724
  0205e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02061	8b cc		 mov	 ecx, esp
  02063	89 64 24 2c	 mov	 DWORD PTR $T193723[esp+64], esp
  02067	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@BDCNMICA@CSPSaveCabinet?$AA@
  0206c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02071	55		 push	 ebp
  02072	8b ce		 mov	 ecx, esi
  02074	e8 00 00 00 00	 call	 ??0CSPSaveCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveCabinet::CSPSaveCabinet
  02079	eb 02		 jmp	 SHORT $L193725
$L193724:
  0207b	33 c0		 xor	 eax, eax
$L193725:
  0207d	3b c3		 cmp	 eax, ebx
  0207f	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02083	0f 84 0a 15 00
	00		 je	 $L194673

; 116  : 	PREDEFINE_QUERY(CSPSaveHotkey)

  02089	68 58 0c 00 00	 push	 3160			; 00000c58H
  0208e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02093	8b f0		 mov	 esi, eax
  02095	83 c4 04	 add	 esp, 4
  02098	89 74 24 14	 mov	 DWORD PTR $T193727[esp+36], esi
  0209c	3b f3		 cmp	 esi, ebx
  0209e	c7 44 24 20 6f
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 111 ; 0000006fH
  020a6	74 1d		 je	 SHORT $L193729
  020a8	83 ec 1c	 sub	 esp, 28			; 0000001cH
  020ab	8b cc		 mov	 ecx, esp
  020ad	89 64 24 2c	 mov	 DWORD PTR $T193728[esp+64], esp
  020b1	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@IBLOOOKC@CSPSaveHotkey?$AA@
  020b6	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  020bb	55		 push	 ebp
  020bc	8b ce		 mov	 ecx, esi
  020be	e8 00 00 00 00	 call	 ??0CSPSaveHotkey@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveHotkey::CSPSaveHotkey
  020c3	eb 02		 jmp	 SHORT $L193730
$L193729:
  020c5	33 c0		 xor	 eax, eax
$L193730:
  020c7	3b c3		 cmp	 eax, ebx
  020c9	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  020cd	0f 84 c0 14 00
	00		 je	 $L194673

; 117  : 	PREDEFINE_QUERY(CSPSaveLocalOccupy)

  020d3	68 40 0c 00 00	 push	 3136			; 00000c40H
  020d8	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  020dd	8b f0		 mov	 esi, eax
  020df	83 c4 04	 add	 esp, 4
  020e2	89 74 24 14	 mov	 DWORD PTR $T193732[esp+36], esi
  020e6	3b f3		 cmp	 esi, ebx
  020e8	c7 44 24 20 70
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 112 ; 00000070H
  020f0	74 1d		 je	 SHORT $L193734
  020f2	83 ec 1c	 sub	 esp, 28			; 0000001cH
  020f5	8b cc		 mov	 ecx, esp
  020f7	89 64 24 2c	 mov	 DWORD PTR $T193733[esp+64], esp
  020fb	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@PAKGKKPG@CSPSaveLocalOccupy?$AA@
  02100	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02105	55		 push	 ebp
  02106	8b ce		 mov	 ecx, esi
  02108	e8 00 00 00 00	 call	 ??0CSPSaveLocalOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveLocalOccupy::CSPSaveLocalOccupy
  0210d	eb 02		 jmp	 SHORT $L193735
$L193734:
  0210f	33 c0		 xor	 eax, eax
$L193735:
  02111	3b c3		 cmp	 eax, ebx
  02113	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02117	0f 84 76 14 00
	00		 je	 $L194673

; 118  : 	PREDEFINE_QUERY(CSPSaveCastleOccupy)

  0211d	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  02122	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02127	8b f0		 mov	 esi, eax
  02129	83 c4 04	 add	 esp, 4
  0212c	89 74 24 14	 mov	 DWORD PTR $T193737[esp+36], esi
  02130	3b f3		 cmp	 esi, ebx
  02132	c7 44 24 20 71
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 113 ; 00000071H
  0213a	74 1d		 je	 SHORT $L193739
  0213c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0213f	8b cc		 mov	 ecx, esp
  02141	89 64 24 2c	 mov	 DWORD PTR $T193738[esp+64], esp
  02145	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@LMOHDPJJ@CSPSaveCastleOccupy?$AA@
  0214a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0214f	55		 push	 ebp
  02150	8b ce		 mov	 ecx, esi
  02152	e8 00 00 00 00	 call	 ??0CSPSaveCastleOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveCastleOccupy::CSPSaveCastleOccupy
  02157	eb 02		 jmp	 SHORT $L193740
$L193739:
  02159	33 c0		 xor	 eax, eax
$L193740:
  0215b	3b c3		 cmp	 eax, ebx
  0215d	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02161	0f 84 2c 14 00
	00		 je	 $L194673

; 119  : 	PREDEFINE_QUERY(CSPPostCanSend)

  02167	68 a0 0c 00 00	 push	 3232			; 00000ca0H
  0216c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02171	8b f0		 mov	 esi, eax
  02173	83 c4 04	 add	 esp, 4
  02176	89 74 24 14	 mov	 DWORD PTR $T193742[esp+36], esi
  0217a	3b f3		 cmp	 esi, ebx
  0217c	c7 44 24 20 72
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 114 ; 00000072H
  02184	74 1d		 je	 SHORT $L193744
  02186	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02189	8b cc		 mov	 ecx, esp
  0218b	89 64 24 2c	 mov	 DWORD PTR $T193743[esp+64], esp
  0218f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@GGJCLGEN@CSPPostCanSend?$AA@
  02194	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02199	55		 push	 ebp
  0219a	8b ce		 mov	 ecx, esi
  0219c	e8 00 00 00 00	 call	 ??0CSPPostCanSend@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPPostCanSend::CSPPostCanSend
  021a1	eb 02		 jmp	 SHORT $L193745
$L193744:
  021a3	33 c0		 xor	 eax, eax
$L193745:
  021a5	3b c3		 cmp	 eax, ebx
  021a7	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  021ab	0f 84 e2 13 00
	00		 je	 $L194673

; 120  : 	PREDEFINE_QUERY(CSPSavePost)

  021b1	68 c8 15 00 00	 push	 5576			; 000015c8H
  021b6	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  021bb	8b f0		 mov	 esi, eax
  021bd	83 c4 04	 add	 esp, 4
  021c0	89 74 24 14	 mov	 DWORD PTR $T193747[esp+36], esi
  021c4	3b f3		 cmp	 esi, ebx
  021c6	c7 44 24 20 73
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 115 ; 00000073H
  021ce	74 1d		 je	 SHORT $L193749
  021d0	83 ec 1c	 sub	 esp, 28			; 0000001cH
  021d3	8b cc		 mov	 ecx, esp
  021d5	89 64 24 2c	 mov	 DWORD PTR $T193748[esp+64], esp
  021d9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@FNDCIFPG@CSPSavePost?$AA@
  021de	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  021e3	55		 push	 ebp
  021e4	8b ce		 mov	 ecx, esi
  021e6	e8 00 00 00 00	 call	 ??0CSPSavePost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSavePost::CSPSavePost
  021eb	eb 02		 jmp	 SHORT $L193750
$L193749:
  021ed	33 c0		 xor	 eax, eax
$L193750:
  021ef	3b c3		 cmp	 eax, ebx
  021f1	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  021f5	0f 84 98 13 00
	00		 je	 $L194673

; 121  : 	PREDEFINE_QUERY(CSPPostRead)

  021fb	68 38 0c 00 00	 push	 3128			; 00000c38H
  02200	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02205	8b f0		 mov	 esi, eax
  02207	83 c4 04	 add	 esp, 4
  0220a	89 74 24 14	 mov	 DWORD PTR $T193752[esp+36], esi
  0220e	3b f3		 cmp	 esi, ebx
  02210	c7 44 24 20 74
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 116 ; 00000074H
  02218	74 1d		 je	 SHORT $L193754
  0221a	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0221d	8b cc		 mov	 ecx, esp
  0221f	89 64 24 2c	 mov	 DWORD PTR $T193753[esp+64], esp
  02223	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@KLJKIDND@CSPPostRead?$AA@
  02228	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0222d	55		 push	 ebp
  0222e	8b ce		 mov	 ecx, esi
  02230	e8 00 00 00 00	 call	 ??0CSPPostRead@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPPostRead::CSPPostRead
  02235	eb 02		 jmp	 SHORT $L193755
$L193754:
  02237	33 c0		 xor	 eax, eax
$L193755:
  02239	3b c3		 cmp	 eax, ebx
  0223b	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0223f	0f 84 4e 13 00
	00		 je	 $L194673

; 122  : 	PREDEFINE_QUERY(CSPPostDelete)

  02245	68 38 0c 00 00	 push	 3128			; 00000c38H
  0224a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0224f	8b f0		 mov	 esi, eax
  02251	83 c4 04	 add	 esp, 4
  02254	89 74 24 14	 mov	 DWORD PTR $T193757[esp+36], esi
  02258	3b f3		 cmp	 esi, ebx
  0225a	c7 44 24 20 75
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 117 ; 00000075H
  02262	74 1d		 je	 SHORT $L193759
  02264	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02267	8b cc		 mov	 ecx, esp
  02269	89 64 24 2c	 mov	 DWORD PTR $T193758[esp+64], esp
  0226d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@NBPELKJC@CSPPostDelete?$AA@
  02272	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02277	55		 push	 ebp
  02278	8b ce		 mov	 ecx, esi
  0227a	e8 00 00 00 00	 call	 ??0CSPPostDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPPostDelete::CSPPostDelete
  0227f	eb 02		 jmp	 SHORT $L193760
$L193759:
  02281	33 c0		 xor	 eax, eax
$L193760:
  02283	3b c3		 cmp	 eax, ebx
  02285	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02289	0f 84 04 13 00
	00		 je	 $L194673

; 123  : 	PREDEFINE_QUERY(CSPPostGetItem)

  0228f	68 34 0c 00 00	 push	 3124			; 00000c34H
  02294	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02299	8b f0		 mov	 esi, eax
  0229b	83 c4 04	 add	 esp, 4
  0229e	89 74 24 14	 mov	 DWORD PTR $T193762[esp+36], esi
  022a2	3b f3		 cmp	 esi, ebx
  022a4	c7 44 24 20 76
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 118 ; 00000076H
  022ac	74 1d		 je	 SHORT $L193764
  022ae	83 ec 1c	 sub	 esp, 28			; 0000001cH
  022b1	8b cc		 mov	 ecx, esp
  022b3	89 64 24 2c	 mov	 DWORD PTR $T193763[esp+64], esp
  022b7	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@KLLIFGCI@CSPPostGetItem?$AA@
  022bc	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  022c1	55		 push	 ebp
  022c2	8b ce		 mov	 ecx, esi
  022c4	e8 00 00 00 00	 call	 ??0CSPPostGetItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPPostGetItem::CSPPostGetItem
  022c9	eb 02		 jmp	 SHORT $L193765
$L193764:
  022cb	33 c0		 xor	 eax, eax
$L193765:
  022cd	3b c3		 cmp	 eax, ebx
  022cf	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  022d3	0f 84 ba 12 00
	00		 je	 $L194673

; 124  : 	PREDEFINE_QUERY(CSPSaveItemUsed)

  022d9	68 38 0c 00 00	 push	 3128			; 00000c38H
  022de	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  022e3	8b f0		 mov	 esi, eax
  022e5	83 c4 04	 add	 esp, 4
  022e8	89 74 24 14	 mov	 DWORD PTR $T193767[esp+36], esi
  022ec	3b f3		 cmp	 esi, ebx
  022ee	c7 44 24 20 77
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 119 ; 00000077H
  022f6	74 1d		 je	 SHORT $L193769
  022f8	83 ec 1c	 sub	 esp, 28			; 0000001cH
  022fb	8b cc		 mov	 ecx, esp
  022fd	89 64 24 2c	 mov	 DWORD PTR $T193768[esp+64], esp
  02301	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@HLMICCHJ@CSPSaveItemUsed?$AA@
  02306	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0230b	55		 push	 ebp
  0230c	8b ce		 mov	 ecx, esi
  0230e	e8 00 00 00 00	 call	 ??0CSPSaveItemUsed@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveItemUsed::CSPSaveItemUsed
  02313	eb 02		 jmp	 SHORT $L193770
$L193769:
  02315	33 c0		 xor	 eax, eax
$L193770:
  02317	3b c3		 cmp	 eax, ebx
  02319	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0231d	0f 84 70 12 00
	00		 je	 $L194673

; 125  : 	PREDEFINE_QUERY(CSPClearCurrentUser)

  02323	68 30 0c 00 00	 push	 3120			; 00000c30H
  02328	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0232d	8b f0		 mov	 esi, eax
  0232f	83 c4 04	 add	 esp, 4
  02332	89 74 24 14	 mov	 DWORD PTR $T193772[esp+36], esi
  02336	3b f3		 cmp	 esi, ebx
  02338	c7 44 24 20 78
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 120 ; 00000078H
  02340	74 1d		 je	 SHORT $L193774
  02342	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02345	8b cc		 mov	 ecx, esp
  02347	89 64 24 2c	 mov	 DWORD PTR $T193773[esp+64], esp
  0234b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@MEAJGGBL@CSPClearCurrentUser?$AA@
  02350	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02355	55		 push	 ebp
  02356	8b ce		 mov	 ecx, esi
  02358	e8 00 00 00 00	 call	 ??0CSPClearCurrentUser@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPClearCurrentUser::CSPClearCurrentUser
  0235d	eb 02		 jmp	 SHORT $L193775
$L193774:
  0235f	33 c0		 xor	 eax, eax
$L193775:
  02361	3b c3		 cmp	 eax, ebx
  02363	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02367	0f 84 26 12 00
	00		 je	 $L194673

; 126  : 	PREDEFINE_QUERY(CSPRecallmonDel)

  0236d	68 34 0c 00 00	 push	 3124			; 00000c34H
  02372	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02377	8b f0		 mov	 esi, eax
  02379	83 c4 04	 add	 esp, 4
  0237c	89 74 24 14	 mov	 DWORD PTR $T193777[esp+36], esi
  02380	3b f3		 cmp	 esi, ebx
  02382	c7 44 24 20 79
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 121 ; 00000079H
  0238a	74 1d		 je	 SHORT $L193779
  0238c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0238f	8b cc		 mov	 ecx, esp
  02391	89 64 24 2c	 mov	 DWORD PTR $T193778[esp+64], esp
  02395	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@BJNJMJOJ@CSPRecallmonDel?$AA@
  0239a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0239f	55		 push	 ebp
  023a0	8b ce		 mov	 ecx, esi
  023a2	e8 00 00 00 00	 call	 ??0CSPRecallmonDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPRecallmonDel::CSPRecallmonDel
  023a7	eb 02		 jmp	 SHORT $L193780
$L193779:
  023a9	33 c0		 xor	 eax, eax
$L193780:
  023ab	3b c3		 cmp	 eax, ebx
  023ad	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  023b1	0f 84 dc 11 00
	00		 je	 $L194673

; 127  : 	PREDEFINE_QUERY(CSPLogSkill)

  023b7	68 40 0c 00 00	 push	 3136			; 00000c40H
  023bc	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  023c1	8b f0		 mov	 esi, eax
  023c3	83 c4 04	 add	 esp, 4
  023c6	89 74 24 14	 mov	 DWORD PTR $T193782[esp+36], esi
  023ca	3b f3		 cmp	 esi, ebx
  023cc	c7 44 24 20 7a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 122 ; 0000007aH
  023d4	74 1d		 je	 SHORT $L193784
  023d6	83 ec 1c	 sub	 esp, 28			; 0000001cH
  023d9	8b cc		 mov	 ecx, esp
  023db	89 64 24 2c	 mov	 DWORD PTR $T193783[esp+64], esp
  023df	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@EOLAMDPB@CSPLogSkill?$AA@
  023e4	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  023e9	55		 push	 ebp
  023ea	8b ce		 mov	 ecx, esi
  023ec	e8 00 00 00 00	 call	 ??0CSPLogSkill@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPLogSkill::CSPLogSkill
  023f1	eb 02		 jmp	 SHORT $L193785
$L193784:
  023f3	33 c0		 xor	 eax, eax
$L193785:
  023f5	3b c3		 cmp	 eax, ebx
  023f7	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  023fb	0f 84 92 11 00
	00		 je	 $L194673

; 128  : 	PREDEFINE_QUERY(CSPProtectedInsert)

  02401	68 6c 0c 00 00	 push	 3180			; 00000c6cH
  02406	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0240b	8b f0		 mov	 esi, eax
  0240d	83 c4 04	 add	 esp, 4
  02410	89 74 24 14	 mov	 DWORD PTR $T193787[esp+36], esi
  02414	3b f3		 cmp	 esi, ebx
  02416	c7 44 24 20 7b
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 123 ; 0000007bH
  0241e	74 1d		 je	 SHORT $L193789
  02420	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02423	8b cc		 mov	 ecx, esp
  02425	89 64 24 2c	 mov	 DWORD PTR $T193788[esp+64], esp
  02429	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@LAGALIBN@CSPProtectedInsert?$AA@
  0242e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02433	55		 push	 ebp
  02434	8b ce		 mov	 ecx, esi
  02436	e8 00 00 00 00	 call	 ??0CSPProtectedInsert@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPProtectedInsert::CSPProtectedInsert
  0243b	eb 02		 jmp	 SHORT $L193790
$L193789:
  0243d	33 c0		 xor	 eax, eax
$L193790:
  0243f	3b c3		 cmp	 eax, ebx
  02441	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02445	0f 84 48 11 00
	00		 je	 $L194673

; 129  : 	PREDEFINE_QUERY(CSPProtectedDelete)

  0244b	68 34 0c 00 00	 push	 3124			; 00000c34H
  02450	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02455	8b f0		 mov	 esi, eax
  02457	83 c4 04	 add	 esp, 4
  0245a	89 74 24 14	 mov	 DWORD PTR $T193792[esp+36], esi
  0245e	3b f3		 cmp	 esi, ebx
  02460	c7 44 24 20 7c
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 124 ; 0000007cH
  02468	74 1d		 je	 SHORT $L193794
  0246a	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0246d	8b cc		 mov	 ecx, esp
  0246f	89 64 24 2c	 mov	 DWORD PTR $T193793[esp+64], esp
  02473	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@OJEHGOP@CSPProtectedDelete?$AA@
  02478	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0247d	55		 push	 ebp
  0247e	8b ce		 mov	 ecx, esi
  02480	e8 00 00 00 00	 call	 ??0CSPProtectedDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPProtectedDelete::CSPProtectedDelete
  02485	eb 02		 jmp	 SHORT $L193795
$L193794:
  02487	33 c0		 xor	 eax, eax
$L193795:
  02489	3b c3		 cmp	 eax, ebx
  0248b	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0248f	0f 84 fe 10 00
	00		 je	 $L194673

; 130  : 	PREDEFINE_QUERY(CSPPetDelete)

  02495	68 34 0c 00 00	 push	 3124			; 00000c34H
  0249a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0249f	8b f0		 mov	 esi, eax
  024a1	83 c4 04	 add	 esp, 4
  024a4	89 74 24 14	 mov	 DWORD PTR $T193797[esp+36], esi
  024a8	3b f3		 cmp	 esi, ebx
  024aa	c7 44 24 20 7d
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 125 ; 0000007dH
  024b2	74 1d		 je	 SHORT $L193799
  024b4	83 ec 1c	 sub	 esp, 28			; 0000001cH
  024b7	8b cc		 mov	 ecx, esp
  024b9	89 64 24 2c	 mov	 DWORD PTR $T193798[esp+64], esp
  024bd	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@LHFIMBJJ@CSPPetDelete?$AA@
  024c2	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  024c7	55		 push	 ebp
  024c8	8b ce		 mov	 ecx, esi
  024ca	e8 00 00 00 00	 call	 ??0CSPPetDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPPetDelete::CSPPetDelete
  024cf	eb 02		 jmp	 SHORT $L193800
$L193799:
  024d1	33 c0		 xor	 eax, eax
$L193800:
  024d3	3b c3		 cmp	 eax, ebx
  024d5	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  024d9	0f 84 b4 10 00
	00		 je	 $L194673

; 131  : 	PREDEFINE_QUERY(CSPSavePet)

  024df	68 78 0c 00 00	 push	 3192			; 00000c78H
  024e4	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  024e9	8b f0		 mov	 esi, eax
  024eb	83 c4 04	 add	 esp, 4
  024ee	89 74 24 14	 mov	 DWORD PTR $T193802[esp+36], esi
  024f2	3b f3		 cmp	 esi, ebx
  024f4	c7 44 24 20 7e
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 126 ; 0000007eH
  024fc	74 1d		 je	 SHORT $L193804
  024fe	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02501	8b cc		 mov	 ecx, esp
  02503	89 64 24 2c	 mov	 DWORD PTR $T193803[esp+64], esp
  02507	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@EPCAFCMO@CSPSavePet?$AA@
  0250c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02511	55		 push	 ebp
  02512	8b ce		 mov	 ecx, esi
  02514	e8 00 00 00 00	 call	 ??0CSPSavePet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSavePet::CSPSavePet
  02519	eb 02		 jmp	 SHORT $L193805
$L193804:
  0251b	33 c0		 xor	 eax, eax
$L193805:
  0251d	3b c3		 cmp	 eax, ebx
  0251f	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02523	0f 84 6a 10 00
	00		 je	 $L194673

; 132  : 	PREDEFINE_QUERY(CSPSaveCharDataStart)

  02529	68 30 0c 00 00	 push	 3120			; 00000c30H
  0252e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02533	8b f0		 mov	 esi, eax
  02535	83 c4 04	 add	 esp, 4
  02538	89 74 24 14	 mov	 DWORD PTR $T193807[esp+36], esi
  0253c	3b f3		 cmp	 esi, ebx
  0253e	c7 44 24 20 7f
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 127 ; 0000007fH
  02546	74 1d		 je	 SHORT $L193809
  02548	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0254b	8b cc		 mov	 ecx, esp
  0254d	89 64 24 2c	 mov	 DWORD PTR $T193808[esp+64], esp
  02551	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@NOILHOMJ@CSPSaveCharDataStart?$AA@
  02556	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0255b	55		 push	 ebp
  0255c	8b ce		 mov	 ecx, esi
  0255e	e8 00 00 00 00	 call	 ??0CSPSaveCharDataStart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveCharDataStart::CSPSaveCharDataStart
  02563	eb 02		 jmp	 SHORT $L193810
$L193809:
  02565	33 c0		 xor	 eax, eax
$L193810:
  02567	3b c3		 cmp	 eax, ebx
  02569	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0256d	0f 84 20 10 00
	00		 je	 $L194673

; 133  : 	PREDEFINE_QUERY(CSPSaveCharDataEnd)

  02573	68 30 0c 00 00	 push	 3120			; 00000c30H
  02578	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0257d	8b f0		 mov	 esi, eax
  0257f	83 c4 04	 add	 esp, 4
  02582	89 74 24 14	 mov	 DWORD PTR $T193812[esp+36], esi
  02586	3b f3		 cmp	 esi, ebx
  02588	c7 44 24 20 80
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 128 ; 00000080H
  02590	74 1d		 je	 SHORT $L193814
  02592	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02595	8b cc		 mov	 ecx, esp
  02597	89 64 24 2c	 mov	 DWORD PTR $T193813[esp+64], esp
  0259b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@PCEMMOCL@CSPSaveCharDataEnd?$AA@
  025a0	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  025a5	55		 push	 ebp
  025a6	8b ce		 mov	 ecx, esi
  025a8	e8 00 00 00 00	 call	 ??0CSPSaveCharDataEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveCharDataEnd::CSPSaveCharDataEnd
  025ad	eb 02		 jmp	 SHORT $L193815
$L193814:
  025af	33 c0		 xor	 eax, eax
$L193815:
  025b1	3b c3		 cmp	 eax, ebx
  025b3	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  025b7	0f 84 d6 0f 00
	00		 je	 $L194673

; 134  : 	PREDEFINE_QUERY(CSPSaveItemDataStart)

  025bd	68 30 0c 00 00	 push	 3120			; 00000c30H
  025c2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  025c7	8b f0		 mov	 esi, eax
  025c9	83 c4 04	 add	 esp, 4
  025cc	89 74 24 14	 mov	 DWORD PTR $T193817[esp+36], esi
  025d0	3b f3		 cmp	 esi, ebx
  025d2	c7 44 24 20 81
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 129 ; 00000081H
  025da	74 1d		 je	 SHORT $L193819
  025dc	83 ec 1c	 sub	 esp, 28			; 0000001cH
  025df	8b cc		 mov	 ecx, esp
  025e1	89 64 24 2c	 mov	 DWORD PTR $T193818[esp+64], esp
  025e5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@BMAJLAAB@CSPSaveItemDataStart?$AA@
  025ea	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  025ef	55		 push	 ebp
  025f0	8b ce		 mov	 ecx, esi
  025f2	e8 00 00 00 00	 call	 ??0CSPSaveItemDataStart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveItemDataStart::CSPSaveItemDataStart
  025f7	eb 02		 jmp	 SHORT $L193820
$L193819:
  025f9	33 c0		 xor	 eax, eax
$L193820:
  025fb	3b c3		 cmp	 eax, ebx
  025fd	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02601	0f 84 8c 0f 00
	00		 je	 $L194673

; 135  : 	PREDEFINE_QUERY(CSPSaveItemDataEnd)

  02607	68 30 0c 00 00	 push	 3120			; 00000c30H
  0260c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02611	8b f0		 mov	 esi, eax
  02613	83 c4 04	 add	 esp, 4
  02616	89 74 24 14	 mov	 DWORD PTR $T193822[esp+36], esi
  0261a	3b f3		 cmp	 esi, ebx
  0261c	c7 44 24 20 82
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 130 ; 00000082H
  02624	74 1d		 je	 SHORT $L193824
  02626	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02629	8b cc		 mov	 ecx, esp
  0262b	89 64 24 2c	 mov	 DWORD PTR $T193823[esp+64], esp
  0262f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@MGAFFNJM@CSPSaveItemDataEnd?$AA@
  02634	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02639	55		 push	 ebp
  0263a	8b ce		 mov	 ecx, esi
  0263c	e8 00 00 00 00	 call	 ??0CSPSaveItemDataEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveItemDataEnd::CSPSaveItemDataEnd
  02641	eb 02		 jmp	 SHORT $L193825
$L193824:
  02643	33 c0		 xor	 eax, eax
$L193825:
  02645	3b c3		 cmp	 eax, ebx
  02647	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0264b	0f 84 42 0f 00
	00		 je	 $L194673

; 136  : 	PREDEFINE_QUERY(CSPLoadService)

  02651	68 64 0c 00 00	 push	 3172			; 00000c64H
  02656	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0265b	8b f0		 mov	 esi, eax
  0265d	83 c4 04	 add	 esp, 4
  02660	89 74 24 14	 mov	 DWORD PTR $T193827[esp+36], esi
  02664	3b f3		 cmp	 esi, ebx
  02666	c7 44 24 20 83
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 131 ; 00000083H
  0266e	74 1d		 je	 SHORT $L193829
  02670	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02673	8b cc		 mov	 ecx, esp
  02675	89 64 24 2c	 mov	 DWORD PTR $T193828[esp+64], esp
  02679	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@EOMPGPJC@CSPLoadService?$AA@
  0267e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02683	55		 push	 ebp
  02684	8b ce		 mov	 ecx, esi
  02686	e8 00 00 00 00	 call	 ??0CSPLoadService@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPLoadService::CSPLoadService
  0268b	eb 02		 jmp	 SHORT $L193830
$L193829:
  0268d	33 c0		 xor	 eax, eax
$L193830:
  0268f	3b c3		 cmp	 eax, ebx
  02691	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02695	0f 84 f8 0e 00
	00		 je	 $L194673

; 137  : 	PREDEFINE_QUERY(CSPSaveSMS)

  0269b	68 c0 0c 00 00	 push	 3264			; 00000cc0H
  026a0	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  026a5	8b f0		 mov	 esi, eax
  026a7	83 c4 04	 add	 esp, 4
  026aa	89 74 24 14	 mov	 DWORD PTR $T193832[esp+36], esi
  026ae	3b f3		 cmp	 esi, ebx
  026b0	c7 44 24 20 84
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 132 ; 00000084H
  026b8	74 1d		 je	 SHORT $L193834
  026ba	83 ec 1c	 sub	 esp, 28			; 0000001cH
  026bd	8b cc		 mov	 ecx, esp
  026bf	89 64 24 2c	 mov	 DWORD PTR $T193833[esp+64], esp
  026c3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@LBAOFIBN@CSPSaveSMS?$AA@
  026c8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  026cd	55		 push	 ebp
  026ce	8b ce		 mov	 ecx, esi
  026d0	e8 00 00 00 00	 call	 ??0CSPSaveSMS@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveSMS::CSPSaveSMS
  026d5	eb 02		 jmp	 SHORT $L193835
$L193834:
  026d7	33 c0		 xor	 eax, eax
$L193835:
  026d9	3b c3		 cmp	 eax, ebx
  026db	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  026df	0f 84 ae 0e 00
	00		 je	 $L194673

; 138  : 	PREDEFINE_QUERY(CSPGetPcBangData)

  026e5	68 40 0c 00 00	 push	 3136			; 00000c40H
  026ea	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  026ef	8b f0		 mov	 esi, eax
  026f1	83 c4 04	 add	 esp, 4
  026f4	89 74 24 14	 mov	 DWORD PTR $T193837[esp+36], esi
  026f8	3b f3		 cmp	 esi, ebx
  026fa	c7 44 24 20 85
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 133 ; 00000085H
  02702	74 1d		 je	 SHORT $L193839
  02704	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02707	8b cc		 mov	 ecx, esp
  02709	89 64 24 2c	 mov	 DWORD PTR $T193838[esp+64], esp
  0270d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@CGOEDDEN@CSPGetPcBangData?$AA@
  02712	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02717	55		 push	 ebp
  02718	8b ce		 mov	 ecx, esi
  0271a	e8 00 00 00 00	 call	 ??0CSPGetPcBangData@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetPcBangData::CSPGetPcBangData
  0271f	eb 02		 jmp	 SHORT $L193840
$L193839:
  02721	33 c0		 xor	 eax, eax
$L193840:
  02723	3b c3		 cmp	 eax, ebx
  02725	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02729	0f 84 64 0e 00
	00		 je	 $L194673

; 139  : 	PREDEFINE_QUERY(CSPEventQuarter)

  0272f	68 64 0c 00 00	 push	 3172			; 00000c64H
  02734	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02739	8b f0		 mov	 esi, eax
  0273b	83 c4 04	 add	 esp, 4
  0273e	89 74 24 14	 mov	 DWORD PTR $T193842[esp+36], esi
  02742	3b f3		 cmp	 esi, ebx
  02744	c7 44 24 20 86
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 134 ; 00000086H
  0274c	74 1d		 je	 SHORT $L193844
  0274e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02751	8b cc		 mov	 ecx, esp
  02753	89 64 24 2c	 mov	 DWORD PTR $T193843[esp+64], esp
  02757	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@FEAEGPEI@CSPEventQuarter?$AA@
  0275c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02761	55		 push	 ebp
  02762	8b ce		 mov	 ecx, esi
  02764	e8 00 00 00 00	 call	 ??0CSPEventQuarter@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPEventQuarter::CSPEventQuarter
  02769	eb 02		 jmp	 SHORT $L193845
$L193844:
  0276b	33 c0		 xor	 eax, eax
$L193845:
  0276d	3b c3		 cmp	 eax, ebx
  0276f	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02773	0f 84 1a 0e 00
	00		 je	 $L194673

; 140  : 	PREDEFINE_QUERY(CSPGetCash)

  02779	68 38 0c 00 00	 push	 3128			; 00000c38H
  0277e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02783	8b f0		 mov	 esi, eax
  02785	83 c4 04	 add	 esp, 4
  02788	89 74 24 14	 mov	 DWORD PTR $T193847[esp+36], esi
  0278c	3b f3		 cmp	 esi, ebx
  0278e	c7 44 24 20 87
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 135 ; 00000087H
  02796	74 1d		 je	 SHORT $L193849
  02798	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0279b	8b cc		 mov	 ecx, esp
  0279d	89 64 24 2c	 mov	 DWORD PTR $T193848[esp+64], esp
  027a1	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@PGJMCPPI@CSPGetCash?$AA@
  027a6	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  027ab	55		 push	 ebp
  027ac	8b ce		 mov	 ecx, esi
  027ae	e8 00 00 00 00	 call	 ??0CSPGetCash@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetCash::CSPGetCash
  027b3	eb 02		 jmp	 SHORT $L193850
$L193849:
  027b5	33 c0		 xor	 eax, eax
$L193850:
  027b7	3b c3		 cmp	 eax, ebx
  027b9	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  027bd	0f 84 d0 0d 00
	00		 je	 $L194673

; 141  : 	PREDEFINE_QUERY(CSPCashItemGet)

  027c3	68 98 0c 00 00	 push	 3224			; 00000c98H
  027c8	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  027cd	8b f0		 mov	 esi, eax
  027cf	83 c4 04	 add	 esp, 4
  027d2	89 74 24 14	 mov	 DWORD PTR $T193852[esp+36], esi
  027d6	3b f3		 cmp	 esi, ebx
  027d8	c7 44 24 20 88
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 136 ; 00000088H
  027e0	74 1d		 je	 SHORT $L193854
  027e2	83 ec 1c	 sub	 esp, 28			; 0000001cH
  027e5	8b cc		 mov	 ecx, esp
  027e7	89 64 24 2c	 mov	 DWORD PTR $T193853[esp+64], esp
  027eb	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@JJMKNAKC@CSPCashItemGet?$AA@
  027f0	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  027f5	55		 push	 ebp
  027f6	8b ce		 mov	 ecx, esi
  027f8	e8 00 00 00 00	 call	 ??0CSPCashItemGet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPCashItemGet::CSPCashItemGet
  027fd	eb 02		 jmp	 SHORT $L193855
$L193854:
  027ff	33 c0		 xor	 eax, eax
$L193855:
  02801	3b c3		 cmp	 eax, ebx
  02803	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02807	0f 84 86 0d 00
	00		 je	 $L194673

; 142  : 	PREDEFINE_QUERY(CSPCashItemBuy)

  0280d	68 c0 0c 00 00	 push	 3264			; 00000cc0H
  02812	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02817	8b f0		 mov	 esi, eax
  02819	83 c4 04	 add	 esp, 4
  0281c	89 74 24 14	 mov	 DWORD PTR $T193857[esp+36], esi
  02820	3b f3		 cmp	 esi, ebx
  02822	c7 44 24 20 89
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 137 ; 00000089H
  0282a	74 1d		 je	 SHORT $L193859
  0282c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0282f	8b cc		 mov	 ecx, esp
  02831	89 64 24 2c	 mov	 DWORD PTR $T193858[esp+64], esp
  02835	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@HJMPNKN@CSPCashItemBuy?$AA@
  0283a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0283f	55		 push	 ebp
  02840	8b ce		 mov	 ecx, esi
  02842	e8 00 00 00 00	 call	 ??0CSPCashItemBuy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPCashItemBuy::CSPCashItemBuy
  02847	eb 02		 jmp	 SHORT $L193860
$L193859:
  02849	33 c0		 xor	 eax, eax
$L193860:
  0284b	3b c3		 cmp	 eax, ebx
  0284d	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02851	0f 84 3c 0d 00
	00		 je	 $L194673

; 143  : 	PREDEFINE_QUERY(CSPSaveDuringItem)

  02857	68 48 0c 00 00	 push	 3144			; 00000c48H
  0285c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02861	8b f0		 mov	 esi, eax
  02863	83 c4 04	 add	 esp, 4
  02866	89 74 24 14	 mov	 DWORD PTR $T193862[esp+36], esi
  0286a	3b f3		 cmp	 esi, ebx
  0286c	c7 44 24 20 8a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 138 ; 0000008aH
  02874	74 1d		 je	 SHORT $L193864
  02876	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02879	8b cc		 mov	 ecx, esp
  0287b	89 64 24 2c	 mov	 DWORD PTR $T193863[esp+64], esp
  0287f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@LLGEMHHG@CSPSaveDuringItem?$AA@
  02884	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02889	55		 push	 ebp
  0288a	8b ce		 mov	 ecx, esi
  0288c	e8 00 00 00 00	 call	 ??0CSPSaveDuringItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveDuringItem::CSPSaveDuringItem
  02891	eb 02		 jmp	 SHORT $L193865
$L193864:
  02893	33 c0		 xor	 eax, eax
$L193865:
  02895	3b c3		 cmp	 eax, ebx
  02897	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0289b	0f 84 f2 0c 00
	00		 je	 $L194673

; 144  : 	PREDEFINE_QUERY(CSPSaveExpItem)

  028a1	68 48 0c 00 00	 push	 3144			; 00000c48H
  028a6	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  028ab	8b f0		 mov	 esi, eax
  028ad	83 c4 04	 add	 esp, 4
  028b0	89 74 24 14	 mov	 DWORD PTR $T193867[esp+36], esi
  028b4	3b f3		 cmp	 esi, ebx
  028b6	c7 44 24 20 8b
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 139 ; 0000008bH
  028be	74 1d		 je	 SHORT $L193869
  028c0	83 ec 1c	 sub	 esp, 28			; 0000001cH
  028c3	8b cc		 mov	 ecx, esp
  028c5	89 64 24 2c	 mov	 DWORD PTR $T193868[esp+64], esp
  028c9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@MHPIKMN@CSPSaveExpItem?$AA@
  028ce	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  028d3	55		 push	 ebp
  028d4	8b ce		 mov	 ecx, esi
  028d6	e8 00 00 00 00	 call	 ??0CSPSaveExpItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveExpItem::CSPSaveExpItem
  028db	eb 02		 jmp	 SHORT $L193870
$L193869:
  028dd	33 c0		 xor	 eax, eax
$L193870:
  028df	3b c3		 cmp	 eax, ebx
  028e1	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  028e5	0f 84 a8 0c 00
	00		 je	 $L194673

; 145  : 	PREDEFINE_QUERY(CSPSaveItemDirect)

  028eb	68 98 0c 00 00	 push	 3224			; 00000c98H
  028f0	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  028f5	8b f0		 mov	 esi, eax
  028f7	83 c4 04	 add	 esp, 4
  028fa	89 74 24 14	 mov	 DWORD PTR $T193872[esp+36], esi
  028fe	3b f3		 cmp	 esi, ebx
  02900	c7 44 24 20 8c
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 140 ; 0000008cH
  02908	74 1d		 je	 SHORT $L193874
  0290a	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0290d	8b cc		 mov	 ecx, esp
  0290f	89 64 24 2c	 mov	 DWORD PTR $T193873[esp+64], esp
  02913	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@CDMHKLGI@CSPSaveItemDirect?$AA@
  02918	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0291d	55		 push	 ebp
  0291e	8b ce		 mov	 ecx, esi
  02920	e8 00 00 00 00	 call	 ??0CSPSaveItemDirect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveItemDirect::CSPSaveItemDirect
  02925	eb 02		 jmp	 SHORT $L193875
$L193874:
  02927	33 c0		 xor	 eax, eax
$L193875:
  02929	3b c3		 cmp	 eax, ebx
  0292b	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0292f	0f 84 5e 0c 00
	00		 je	 $L194673

; 146  : 	PREDEFINE_QUERY(CSPGuildItemPutIn)

  02935	68 90 0c 00 00	 push	 3216			; 00000c90H
  0293a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0293f	8b f0		 mov	 esi, eax
  02941	83 c4 04	 add	 esp, 4
  02944	89 74 24 14	 mov	 DWORD PTR $T193877[esp+36], esi
  02948	3b f3		 cmp	 esi, ebx
  0294a	c7 44 24 20 8d
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 141 ; 0000008dH
  02952	74 1d		 je	 SHORT $L193879
  02954	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02957	8b cc		 mov	 ecx, esp
  02959	89 64 24 2c	 mov	 DWORD PTR $T193878[esp+64], esp
  0295d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@ICGANCLP@CSPGuildItemPutIn?$AA@
  02962	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02967	55		 push	 ebp
  02968	8b ce		 mov	 ecx, esi
  0296a	e8 00 00 00 00	 call	 ??0CSPGuildItemPutIn@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildItemPutIn::CSPGuildItemPutIn
  0296f	eb 02		 jmp	 SHORT $L193880
$L193879:
  02971	33 c0		 xor	 eax, eax
$L193880:
  02973	3b c3		 cmp	 eax, ebx
  02975	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02979	0f 84 14 0c 00
	00		 je	 $L194673

; 147  : 	PREDEFINE_QUERY(CSPGuildItemTakeOut)

  0297f	68 90 0c 00 00	 push	 3216			; 00000c90H
  02984	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02989	8b f0		 mov	 esi, eax
  0298b	83 c4 04	 add	 esp, 4
  0298e	89 74 24 14	 mov	 DWORD PTR $T193882[esp+36], esi
  02992	3b f3		 cmp	 esi, ebx
  02994	c7 44 24 20 8e
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 142 ; 0000008eH
  0299c	74 1d		 je	 SHORT $L193884
  0299e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  029a1	8b cc		 mov	 ecx, esp
  029a3	89 64 24 2c	 mov	 DWORD PTR $T193883[esp+64], esp
  029a7	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@OLANJJJB@CSPGuildItemTakeOut?$AA@
  029ac	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  029b1	55		 push	 ebp
  029b2	8b ce		 mov	 ecx, esi
  029b4	e8 00 00 00 00	 call	 ??0CSPGuildItemTakeOut@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildItemTakeOut::CSPGuildItemTakeOut
  029b9	eb 02		 jmp	 SHORT $L193885
$L193884:
  029bb	33 c0		 xor	 eax, eax
$L193885:
  029bd	3b c3		 cmp	 eax, ebx
  029bf	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  029c3	0f 84 ca 0b 00
	00		 je	 $L194673

; 148  : 	PREDEFINE_QUERY(CSPGuildItemRollback)

  029c9	68 90 0c 00 00	 push	 3216			; 00000c90H
  029ce	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  029d3	8b f0		 mov	 esi, eax
  029d5	83 c4 04	 add	 esp, 4
  029d8	89 74 24 14	 mov	 DWORD PTR $T193887[esp+36], esi
  029dc	3b f3		 cmp	 esi, ebx
  029de	c7 44 24 20 8f
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 143 ; 0000008fH
  029e6	74 1d		 je	 SHORT $L193889
  029e8	83 ec 1c	 sub	 esp, 28			; 0000001cH
  029eb	8b cc		 mov	 ecx, esp
  029ed	89 64 24 2c	 mov	 DWORD PTR $T193888[esp+64], esp
  029f1	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@HKJBIGFB@CSPGuildItemRollback?$AA@
  029f6	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  029fb	55		 push	 ebp
  029fc	8b ce		 mov	 ecx, esi
  029fe	e8 00 00 00 00	 call	 ??0CSPGuildItemRollback@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildItemRollback::CSPGuildItemRollback
  02a03	eb 02		 jmp	 SHORT $L193890
$L193889:
  02a05	33 c0		 xor	 eax, eax
$L193890:
  02a07	3b c3		 cmp	 eax, ebx
  02a09	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02a0d	0f 84 80 0b 00
	00		 je	 $L194673

; 149  : 	PREDEFINE_QUERY(CSPSaveEXP)

  02a13	68 34 0c 00 00	 push	 3124			; 00000c34H
  02a18	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02a1d	8b f0		 mov	 esi, eax
  02a1f	83 c4 04	 add	 esp, 4
  02a22	89 74 24 14	 mov	 DWORD PTR $T193892[esp+36], esi
  02a26	3b f3		 cmp	 esi, ebx
  02a28	c7 44 24 20 90
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 144 ; 00000090H
  02a30	74 1d		 je	 SHORT $L193894
  02a32	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02a35	8b cc		 mov	 ecx, esp
  02a37	89 64 24 2c	 mov	 DWORD PTR $T193893[esp+64], esp
  02a3b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@PFLMGCAG@CSPSaveEXP?$AA@
  02a40	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02a45	55		 push	 ebp
  02a46	8b ce		 mov	 ecx, esi
  02a48	e8 00 00 00 00	 call	 ??0CSPSaveEXP@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveEXP::CSPSaveEXP
  02a4d	eb 02		 jmp	 SHORT $L193895
$L193894:
  02a4f	33 c0		 xor	 eax, eax
$L193895:
  02a51	3b c3		 cmp	 eax, ebx
  02a53	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02a57	0f 84 36 0b 00
	00		 je	 $L194673

; 150  : 	PREDEFINE_QUERY(CSPSaveMoney)

  02a5d	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  02a62	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02a67	8b f0		 mov	 esi, eax
  02a69	83 c4 04	 add	 esp, 4
  02a6c	89 74 24 14	 mov	 DWORD PTR $T193897[esp+36], esi
  02a70	3b f3		 cmp	 esi, ebx
  02a72	c7 44 24 20 91
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 145 ; 00000091H
  02a7a	74 1d		 je	 SHORT $L193899
  02a7c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02a7f	8b cc		 mov	 ecx, esp
  02a81	89 64 24 2c	 mov	 DWORD PTR $T193898[esp+64], esp
  02a85	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@KKKBPAFD@CSPSaveMoney?$AA@
  02a8a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02a8f	55		 push	 ebp
  02a90	8b ce		 mov	 ecx, esi
  02a92	e8 00 00 00 00	 call	 ??0CSPSaveMoney@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveMoney::CSPSaveMoney
  02a97	eb 02		 jmp	 SHORT $L193900
$L193899:
  02a99	33 c0		 xor	 eax, eax
$L193900:
  02a9b	3b c3		 cmp	 eax, ebx
  02a9d	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02aa1	0f 84 ec 0a 00
	00		 je	 $L194673

; 151  : 	PREDEFINE_QUERY(CSPSaveActEnd)

  02aa7	68 30 0c 00 00	 push	 3120			; 00000c30H
  02aac	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02ab1	8b f0		 mov	 esi, eax
  02ab3	83 c4 04	 add	 esp, 4
  02ab6	89 74 24 14	 mov	 DWORD PTR $T193902[esp+36], esi
  02aba	3b f3		 cmp	 esi, ebx
  02abc	c7 44 24 20 92
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 146 ; 00000092H
  02ac4	74 1d		 je	 SHORT $L193904
  02ac6	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02ac9	8b cc		 mov	 ecx, esp
  02acb	89 64 24 2c	 mov	 DWORD PTR $T193903[esp+64], esp
  02acf	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@NADADAPK@CSPSaveActEnd?$AA@
  02ad4	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02ad9	55		 push	 ebp
  02ada	8b ce		 mov	 ecx, esi
  02adc	e8 00 00 00 00	 call	 ??0CSPSaveActEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveActEnd::CSPSaveActEnd
  02ae1	eb 02		 jmp	 SHORT $L193905
$L193904:
  02ae3	33 c0		 xor	 eax, eax
$L193905:
  02ae5	3b c3		 cmp	 eax, ebx
  02ae7	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02aeb	0f 84 a2 0a 00
	00		 je	 $L194673

; 152  : 	PREDEFINE_QUERY(CSPCashCabinetBuy)

  02af1	68 50 0c 00 00	 push	 3152			; 00000c50H
  02af6	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02afb	8b f0		 mov	 esi, eax
  02afd	83 c4 04	 add	 esp, 4
  02b00	89 74 24 14	 mov	 DWORD PTR $T193907[esp+36], esi
  02b04	3b f3		 cmp	 esi, ebx
  02b06	c7 44 24 20 93
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 147 ; 00000093H
  02b0e	74 1d		 je	 SHORT $L193909
  02b10	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02b13	8b cc		 mov	 ecx, esp
  02b15	89 64 24 2c	 mov	 DWORD PTR $T193908[esp+64], esp
  02b19	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@CEIJJCMA@CSPCashCabinetBuy?$AA@
  02b1e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02b23	55		 push	 ebp
  02b24	8b ce		 mov	 ecx, esi
  02b26	e8 00 00 00 00	 call	 ??0CSPCashCabinetBuy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPCashCabinetBuy::CSPCashCabinetBuy
  02b2b	eb 02		 jmp	 SHORT $L193910
$L193909:
  02b2d	33 c0		 xor	 eax, eax
$L193910:
  02b2f	3b c3		 cmp	 eax, ebx
  02b31	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02b35	0f 84 58 0a 00
	00		 je	 $L194673

; 153  : 	PREDEFINE_QUERY(CSPCashItemPutin)

  02b3b	68 44 0c 00 00	 push	 3140			; 00000c44H
  02b40	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02b45	8b f0		 mov	 esi, eax
  02b47	83 c4 04	 add	 esp, 4
  02b4a	89 74 24 14	 mov	 DWORD PTR $T193912[esp+36], esi
  02b4e	3b f3		 cmp	 esi, ebx
  02b50	c7 44 24 20 94
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 148 ; 00000094H
  02b58	74 1d		 je	 SHORT $L193914
  02b5a	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02b5d	8b cc		 mov	 ecx, esp
  02b5f	89 64 24 2c	 mov	 DWORD PTR $T193913[esp+64], esp
  02b63	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@NIKJIGFC@CSPCashItemPutin?$AA@
  02b68	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02b6d	55		 push	 ebp
  02b6e	8b ce		 mov	 ecx, esi
  02b70	e8 00 00 00 00	 call	 ??0CSPCashItemPutin@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPCashItemPutin::CSPCashItemPutin
  02b75	eb 02		 jmp	 SHORT $L193915
$L193914:
  02b77	33 c0		 xor	 eax, eax
$L193915:
  02b79	3b c3		 cmp	 eax, ebx
  02b7b	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02b7f	0f 84 0e 0a 00
	00		 je	 $L194673

; 154  : 	PREDEFINE_QUERY(CSPGetCashCabinetUseTime)

  02b85	68 4c 0c 00 00	 push	 3148			; 00000c4cH
  02b8a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02b8f	8b f0		 mov	 esi, eax
  02b91	83 c4 04	 add	 esp, 4
  02b94	89 74 24 14	 mov	 DWORD PTR $T193917[esp+36], esi
  02b98	3b f3		 cmp	 esi, ebx
  02b9a	c7 44 24 20 95
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 149 ; 00000095H
  02ba2	74 1d		 je	 SHORT $L193919
  02ba4	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02ba7	8b cc		 mov	 ecx, esp
  02ba9	89 64 24 2c	 mov	 DWORD PTR $T193918[esp+64], esp
  02bad	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@EIMKHAJ@CSPGetCashCabinetUseTime?$AA@
  02bb2	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02bb7	55		 push	 ebp
  02bb8	8b ce		 mov	 ecx, esi
  02bba	e8 00 00 00 00	 call	 ??0CSPGetCashCabinetUseTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetCashCabinetUseTime::CSPGetCashCabinetUseTime
  02bbf	eb 02		 jmp	 SHORT $L193920
$L193919:
  02bc1	33 c0		 xor	 eax, eax
$L193920:
  02bc3	3b c3		 cmp	 eax, ebx
  02bc5	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02bc9	0f 84 c4 09 00
	00		 je	 $L194673

; 155  : 	PREDEFINE_QUERY(CSPInitGenItemID)

  02bcf	68 38 0c 00 00	 push	 3128			; 00000c38H
  02bd4	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02bd9	8b f0		 mov	 esi, eax
  02bdb	83 c4 04	 add	 esp, 4
  02bde	89 74 24 14	 mov	 DWORD PTR $T193922[esp+36], esi
  02be2	3b f3		 cmp	 esi, ebx
  02be4	c7 44 24 20 96
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 150 ; 00000096H
  02bec	74 1d		 je	 SHORT $L193924
  02bee	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02bf1	8b cc		 mov	 ecx, esp
  02bf3	89 64 24 2c	 mov	 DWORD PTR $T193923[esp+64], esp
  02bf7	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@CKCNPPEK@CSPInitGenItemID?$AA@
  02bfc	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02c01	55		 push	 ebp
  02c02	8b ce		 mov	 ecx, esi
  02c04	e8 00 00 00 00	 call	 ??0CSPInitGenItemID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPInitGenItemID::CSPInitGenItemID
  02c09	eb 02		 jmp	 SHORT $L193925
$L193924:
  02c0b	33 c0		 xor	 eax, eax
$L193925:
  02c0d	3b c3		 cmp	 eax, ebx
  02c0f	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02c13	0f 84 7a 09 00
	00		 je	 $L194673

; 156  : 	PREDEFINE_QUERY(CSPDeleteDealItem)

  02c19	68 38 0c 00 00	 push	 3128			; 00000c38H
  02c1e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02c23	8b f0		 mov	 esi, eax
  02c25	83 c4 04	 add	 esp, 4
  02c28	89 74 24 14	 mov	 DWORD PTR $T193927[esp+36], esi
  02c2c	3b f3		 cmp	 esi, ebx
  02c2e	c7 44 24 20 97
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 151 ; 00000097H
  02c36	74 1d		 je	 SHORT $L193929
  02c38	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02c3b	8b cc		 mov	 ecx, esp
  02c3d	89 64 24 2c	 mov	 DWORD PTR $T193928[esp+64], esp
  02c41	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@GKDMPOAN@CSPDeleteDealItem?$AA@
  02c46	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02c4b	55		 push	 ebp
  02c4c	8b ce		 mov	 ecx, esi
  02c4e	e8 00 00 00 00	 call	 ??0CSPDeleteDealItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPDeleteDealItem::CSPDeleteDealItem
  02c53	eb 02		 jmp	 SHORT $L193930
$L193929:
  02c55	33 c0		 xor	 eax, eax
$L193930:
  02c57	3b c3		 cmp	 eax, ebx
  02c59	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02c5d	0f 84 30 09 00
	00		 je	 $L194673

; 157  : 	PREDEFINE_QUERY(CSPSaveRecallMaintain)

  02c63	68 54 0c 00 00	 push	 3156			; 00000c54H
  02c68	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02c6d	8b f0		 mov	 esi, eax
  02c6f	83 c4 04	 add	 esp, 4
  02c72	89 74 24 14	 mov	 DWORD PTR $T193932[esp+36], esi
  02c76	3b f3		 cmp	 esi, ebx
  02c78	c7 44 24 20 98
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 152 ; 00000098H
  02c80	74 1d		 je	 SHORT $L193934
  02c82	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02c85	8b cc		 mov	 ecx, esp
  02c87	89 64 24 2c	 mov	 DWORD PTR $T193933[esp+64], esp
  02c8b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@FDJOJBBC@CSPSaveRecallMaintain?$AA@
  02c90	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02c95	55		 push	 ebp
  02c96	8b ce		 mov	 ecx, esi
  02c98	e8 00 00 00 00	 call	 ??0CSPSaveRecallMaintain@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveRecallMaintain::CSPSaveRecallMaintain
  02c9d	eb 02		 jmp	 SHORT $L193935
$L193934:
  02c9f	33 c0		 xor	 eax, eax
$L193935:
  02ca1	3b c3		 cmp	 eax, ebx
  02ca3	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02ca7	0f 84 e6 08 00
	00		 je	 $L194673

; 158  : 	PREDEFINE_QUERY(CSPCheckDuplicateName)

  02cad	68 68 0c 00 00	 push	 3176			; 00000c68H
  02cb2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02cb7	8b f0		 mov	 esi, eax
  02cb9	83 c4 04	 add	 esp, 4
  02cbc	89 74 24 14	 mov	 DWORD PTR $T193937[esp+36], esi
  02cc0	3b f3		 cmp	 esi, ebx
  02cc2	c7 44 24 20 99
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 153 ; 00000099H
  02cca	74 1d		 je	 SHORT $L193939
  02ccc	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02ccf	8b cc		 mov	 ecx, esp
  02cd1	89 64 24 2c	 mov	 DWORD PTR $T193938[esp+64], esp
  02cd5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@JNMKAOE@CSPCheckDuplicateName?$AA@
  02cda	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02cdf	55		 push	 ebp
  02ce0	8b ce		 mov	 ecx, esi
  02ce2	e8 00 00 00 00	 call	 ??0CSPCheckDuplicateName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPCheckDuplicateName::CSPCheckDuplicateName
  02ce7	eb 02		 jmp	 SHORT $L193940
$L193939:
  02ce9	33 c0		 xor	 eax, eax
$L193940:
  02ceb	3b c3		 cmp	 eax, ebx
  02ced	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02cf1	0f 84 9c 08 00
	00		 je	 $L194673

; 159  : 	PREDEFINE_QUERY(CSPHeroSelect)  

  02cf7	68 80 0c 00 00	 push	 3200			; 00000c80H
  02cfc	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02d01	8b f0		 mov	 esi, eax
  02d03	83 c4 04	 add	 esp, 4
  02d06	89 74 24 14	 mov	 DWORD PTR $T193942[esp+36], esi
  02d0a	3b f3		 cmp	 esi, ebx
  02d0c	c7 44 24 20 9a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 154 ; 0000009aH
  02d14	74 1d		 je	 SHORT $L193944
  02d16	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02d19	8b cc		 mov	 ecx, esp
  02d1b	89 64 24 2c	 mov	 DWORD PTR $T193943[esp+64], esp
  02d1f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@MIAACEO@CSPHeroSelect?$AA@
  02d24	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02d29	55		 push	 ebp
  02d2a	8b ce		 mov	 ecx, esi
  02d2c	e8 00 00 00 00	 call	 ??0CSPHeroSelect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPHeroSelect::CSPHeroSelect
  02d31	eb 02		 jmp	 SHORT $L193945
$L193944:
  02d33	33 c0		 xor	 eax, eax
$L193945:
  02d35	3b c3		 cmp	 eax, ebx
  02d37	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02d3b	0f 84 52 08 00
	00		 je	 $L194673

; 160  : 	PREDEFINE_QUERY(CSPStopTheClock)

  02d41	68 38 0c 00 00	 push	 3128			; 00000c38H
  02d46	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02d4b	8b f0		 mov	 esi, eax
  02d4d	83 c4 04	 add	 esp, 4
  02d50	89 74 24 14	 mov	 DWORD PTR $T193947[esp+36], esi
  02d54	3b f3		 cmp	 esi, ebx
  02d56	c7 44 24 20 9b
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 155 ; 0000009bH
  02d5e	74 1d		 je	 SHORT $L193949
  02d60	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02d63	8b cc		 mov	 ecx, esp
  02d65	89 64 24 2c	 mov	 DWORD PTR $T193948[esp+64], esp
  02d69	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@IFJJLPNO@CSPStopTheClock?$AA@
  02d6e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02d73	55		 push	 ebp
  02d74	8b ce		 mov	 ecx, esi
  02d76	e8 00 00 00 00	 call	 ??0CSPStopTheClock@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPStopTheClock::CSPStopTheClock
  02d7b	eb 02		 jmp	 SHORT $L193950
$L193949:
  02d7d	33 c0		 xor	 eax, eax
$L193950:
  02d7f	3b c3		 cmp	 eax, ebx
  02d81	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02d85	0f 84 08 08 00
	00		 je	 $L194673

; 161  : 	PREDEFINE_QUERY(CSPSaveCharBase)

  02d8b	68 68 0c 00 00	 push	 3176			; 00000c68H
  02d90	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02d95	8b f0		 mov	 esi, eax
  02d97	83 c4 04	 add	 esp, 4
  02d9a	89 74 24 14	 mov	 DWORD PTR $T193952[esp+36], esi
  02d9e	3b f3		 cmp	 esi, ebx
  02da0	c7 44 24 20 9c
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 156 ; 0000009cH
  02da8	74 1d		 je	 SHORT $L193954
  02daa	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02dad	8b cc		 mov	 ecx, esp
  02daf	89 64 24 2c	 mov	 DWORD PTR $T193953[esp+64], esp
  02db3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@OKFNCCNL@CSPSaveCharBase?$AA@
  02db8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02dbd	55		 push	 ebp
  02dbe	8b ce		 mov	 ecx, esi
  02dc0	e8 00 00 00 00	 call	 ??0CSPSaveCharBase@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveCharBase::CSPSaveCharBase
  02dc5	eb 02		 jmp	 SHORT $L193955
$L193954:
  02dc7	33 c0		 xor	 eax, eax
$L193955:
  02dc9	3b c3		 cmp	 eax, ebx
  02dcb	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02dcf	0f 84 be 07 00
	00		 je	 $L194673

; 162  : 	PREDEFINE_QUERY(CSPGetLimitedLevel)

  02dd5	68 30 0c 00 00	 push	 3120			; 00000c30H
  02dda	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02ddf	8b f0		 mov	 esi, eax
  02de1	83 c4 04	 add	 esp, 4
  02de4	89 74 24 14	 mov	 DWORD PTR $T193957[esp+36], esi
  02de8	3b f3		 cmp	 esi, ebx
  02dea	c7 44 24 20 9d
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 157 ; 0000009dH
  02df2	74 1d		 je	 SHORT $L193959
  02df4	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02df7	8b cc		 mov	 ecx, esp
  02df9	89 64 24 2c	 mov	 DWORD PTR $T193958[esp+64], esp
  02dfd	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@CAGAKGIN@CSPGetLimitedLevel?$AA@
  02e02	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02e07	55		 push	 ebp
  02e08	8b ce		 mov	 ecx, esi
  02e0a	e8 00 00 00 00	 call	 ??0CSPGetLimitedLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetLimitedLevel::CSPGetLimitedLevel
  02e0f	eb 02		 jmp	 SHORT $L193960
$L193959:
  02e11	33 c0		 xor	 eax, eax
$L193960:
  02e13	3b c3		 cmp	 eax, ebx
  02e15	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02e19	0f 84 74 07 00
	00		 je	 $L194673

; 163  : 	PREDEFINE_QUERY(CSPGetNation)

  02e1f	68 30 0c 00 00	 push	 3120			; 00000c30H
  02e24	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02e29	8b f0		 mov	 esi, eax
  02e2b	83 c4 04	 add	 esp, 4
  02e2e	89 74 24 14	 mov	 DWORD PTR $T193962[esp+36], esi
  02e32	3b f3		 cmp	 esi, ebx
  02e34	c7 44 24 20 9e
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 158 ; 0000009eH
  02e3c	74 1d		 je	 SHORT $L193964
  02e3e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02e41	8b cc		 mov	 ecx, esp
  02e43	89 64 24 2c	 mov	 DWORD PTR $T193963[esp+64], esp
  02e47	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@KEAKLAPB@CSPGetNation?$AA@
  02e4c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02e51	55		 push	 ebp
  02e52	8b ce		 mov	 ecx, esi
  02e54	e8 00 00 00 00	 call	 ??0CSPGetNation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetNation::CSPGetNation
  02e59	eb 02		 jmp	 SHORT $L193965
$L193964:
  02e5b	33 c0		 xor	 eax, eax
$L193965:
  02e5d	3b c3		 cmp	 eax, ebx
  02e5f	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02e63	0f 84 2a 07 00
	00		 je	 $L194673

; 164  : 	PREDEFINE_QUERY(CSPQuestSendPost)

  02e69	68 90 0c 00 00	 push	 3216			; 00000c90H
  02e6e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02e73	8b f0		 mov	 esi, eax
  02e75	83 c4 04	 add	 esp, 4
  02e78	89 74 24 14	 mov	 DWORD PTR $T193967[esp+36], esi
  02e7c	3b f3		 cmp	 esi, ebx
  02e7e	c7 44 24 20 9f
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 159 ; 0000009fH
  02e86	74 1d		 je	 SHORT $L193969
  02e88	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02e8b	8b cc		 mov	 ecx, esp
  02e8d	89 64 24 2c	 mov	 DWORD PTR $T193968[esp+64], esp
  02e91	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@LPACKMBP@CSPQuestSendPost?$AA@
  02e96	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02e9b	55		 push	 ebp
  02e9c	8b ce		 mov	 ecx, esi
  02e9e	e8 00 00 00 00	 call	 ??0CSPQuestSendPost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPQuestSendPost::CSPQuestSendPost
  02ea3	eb 02		 jmp	 SHORT $L193970
$L193969:
  02ea5	33 c0		 xor	 eax, eax
$L193970:
  02ea7	3b c3		 cmp	 eax, ebx
  02ea9	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02ead	0f 84 e0 06 00
	00		 je	 $L194673

; 165  : 	PREDEFINE_QUERY(CSPGetPvPRecord)

  02eb3	68 70 0c 00 00	 push	 3184			; 00000c70H
  02eb8	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02ebd	8b f0		 mov	 esi, eax
  02ebf	83 c4 04	 add	 esp, 4
  02ec2	89 74 24 14	 mov	 DWORD PTR $T193972[esp+36], esi
  02ec6	3b f3		 cmp	 esi, ebx
  02ec8	c7 44 24 20 a0
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 160 ; 000000a0H
  02ed0	74 1d		 je	 SHORT $L193974
  02ed2	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02ed5	8b cc		 mov	 ecx, esp
  02ed7	89 64 24 2c	 mov	 DWORD PTR $T193973[esp+64], esp
  02edb	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@PKCCEPBN@CSPGetPvPRecord?$AA@
  02ee0	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02ee5	55		 push	 ebp
  02ee6	8b ce		 mov	 ecx, esi
  02ee8	e8 00 00 00 00	 call	 ??0CSPGetPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetPvPRecord::CSPGetPvPRecord
  02eed	eb 02		 jmp	 SHORT $L193975
$L193974:
  02eef	33 c0		 xor	 eax, eax
$L193975:
  02ef1	3b c3		 cmp	 eax, ebx
  02ef3	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02ef7	0f 84 96 06 00
	00		 je	 $L194673

; 166  : 	PREDEFINE_QUERY(CSPSavePvPRecord)

  02efd	68 68 0c 00 00	 push	 3176			; 00000c68H
  02f02	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02f07	8b f0		 mov	 esi, eax
  02f09	83 c4 04	 add	 esp, 4
  02f0c	89 74 24 14	 mov	 DWORD PTR $T193977[esp+36], esi
  02f10	3b f3		 cmp	 esi, ebx
  02f12	c7 44 24 20 a1
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 161 ; 000000a1H
  02f1a	74 1d		 je	 SHORT $L193979
  02f1c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02f1f	8b cc		 mov	 ecx, esp
  02f21	89 64 24 2c	 mov	 DWORD PTR $T193978[esp+64], esp
  02f25	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@FNPEAKJG@CSPSavePvPRecord?$AA@
  02f2a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02f2f	55		 push	 ebp
  02f30	8b ce		 mov	 ecx, esi
  02f32	e8 00 00 00 00	 call	 ??0CSPSavePvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSavePvPRecord::CSPSavePvPRecord
  02f37	eb 02		 jmp	 SHORT $L193980
$L193979:
  02f39	33 c0		 xor	 eax, eax
$L193980:
  02f3b	3b c3		 cmp	 eax, ebx
  02f3d	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02f41	0f 84 4c 06 00
	00		 je	 $L194673

; 167  : 	PREDEFINE_QUERY(CSPSavePvPRecent)

  02f47	68 7c 0c 00 00	 push	 3196			; 00000c7cH
  02f4c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02f51	8b f0		 mov	 esi, eax
  02f53	83 c4 04	 add	 esp, 4
  02f56	89 74 24 14	 mov	 DWORD PTR $T193982[esp+36], esi
  02f5a	3b f3		 cmp	 esi, ebx
  02f5c	c7 44 24 20 a2
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 162 ; 000000a2H
  02f64	74 1d		 je	 SHORT $L193984
  02f66	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02f69	8b cc		 mov	 ecx, esp
  02f6b	89 64 24 2c	 mov	 DWORD PTR $T193983[esp+64], esp
  02f6f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@GNLHKCLH@CSPSavePvPRecent?$AA@
  02f74	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02f79	55		 push	 ebp
  02f7a	8b ce		 mov	 ecx, esi
  02f7c	e8 00 00 00 00	 call	 ??0CSPSavePvPRecent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSavePvPRecent::CSPSavePvPRecent
  02f81	eb 02		 jmp	 SHORT $L193985
$L193984:
  02f83	33 c0		 xor	 eax, eax
$L193985:
  02f85	3b c3		 cmp	 eax, ebx
  02f87	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02f8b	0f 84 02 06 00
	00		 je	 $L194673

; 168  : 	PREDEFINE_QUERY(CSPDuelScore)

  02f91	68 64 0c 00 00	 push	 3172			; 00000c64H
  02f96	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02f9b	8b f0		 mov	 esi, eax
  02f9d	83 c4 04	 add	 esp, 4
  02fa0	89 74 24 14	 mov	 DWORD PTR $T193987[esp+36], esi
  02fa4	3b f3		 cmp	 esi, ebx
  02fa6	c7 44 24 20 a3
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 163 ; 000000a3H
  02fae	74 1d		 je	 SHORT $L193989
  02fb0	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02fb3	8b cc		 mov	 ecx, esp
  02fb5	89 64 24 2c	 mov	 DWORD PTR $T193988[esp+64], esp
  02fb9	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@ECNNALID@CSPDuelScore?$AA@
  02fbe	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02fc3	55		 push	 ebp
  02fc4	8b ce		 mov	 ecx, esi
  02fc6	e8 00 00 00 00	 call	 ??0CSPDuelScore@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPDuelScore::CSPDuelScore
  02fcb	eb 02		 jmp	 SHORT $L193990
$L193989:
  02fcd	33 c0		 xor	 eax, eax
$L193990:
  02fcf	3b c3		 cmp	 eax, ebx
  02fd1	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02fd5	0f 84 b8 05 00
	00		 je	 $L194673

; 169  : 	PREDEFINE_QUERY(CSPDuelCharAdd)	

  02fdb	68 80 0c 00 00	 push	 3200			; 00000c80H
  02fe0	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02fe5	8b f0		 mov	 esi, eax
  02fe7	83 c4 04	 add	 esp, 4
  02fea	89 74 24 14	 mov	 DWORD PTR $T193992[esp+36], esi
  02fee	3b f3		 cmp	 esi, ebx
  02ff0	c7 44 24 20 a4
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 164 ; 000000a4H
  02ff8	74 1d		 je	 SHORT $L193994
  02ffa	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02ffd	8b cc		 mov	 ecx, esp
  02fff	89 64 24 2c	 mov	 DWORD PTR $T193993[esp+64], esp
  03003	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@KCNFKBEK@CSPDuelCharAdd?$AA@
  03008	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0300d	55		 push	 ebp
  0300e	8b ce		 mov	 ecx, esi
  03010	e8 00 00 00 00	 call	 ??0CSPDuelCharAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPDuelCharAdd::CSPDuelCharAdd
  03015	eb 02		 jmp	 SHORT $L193995
$L193994:
  03017	33 c0		 xor	 eax, eax
$L193995:
  03019	3b c3		 cmp	 eax, ebx
  0301b	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0301f	0f 84 6e 05 00
	00		 je	 $L194673

; 170  : 	PREDEFINE_QUERY(CSPSaveProtectedOption)

  03025	68 38 0c 00 00	 push	 3128			; 00000c38H
  0302a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0302f	8b f0		 mov	 esi, eax
  03031	83 c4 04	 add	 esp, 4
  03034	89 74 24 14	 mov	 DWORD PTR $T193997[esp+36], esi
  03038	3b f3		 cmp	 esi, ebx
  0303a	c7 44 24 20 a5
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 165 ; 000000a5H
  03042	74 1d		 je	 SHORT $L193999
  03044	83 ec 1c	 sub	 esp, 28			; 0000001cH
  03047	8b cc		 mov	 ecx, esp
  03049	89 64 24 2c	 mov	 DWORD PTR $T193998[esp+64], esp
  0304d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@NEENLJKB@CSPSaveProtectedOption?$AA@
  03052	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  03057	55		 push	 ebp
  03058	8b ce		 mov	 ecx, esi
  0305a	e8 00 00 00 00	 call	 ??0CSPSaveProtectedOption@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveProtectedOption::CSPSaveProtectedOption
  0305f	eb 02		 jmp	 SHORT $L194000
$L193999:
  03061	33 c0		 xor	 eax, eax
$L194000:
  03063	3b c3		 cmp	 eax, ebx
  03065	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  03069	0f 84 24 05 00
	00		 je	 $L194673

; 171  : 	PREDEFINE_QUERY(CSPAuctionReg)

  0306f	68 78 0c 00 00	 push	 3192			; 00000c78H
  03074	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03079	8b f0		 mov	 esi, eax
  0307b	83 c4 04	 add	 esp, 4
  0307e	89 74 24 14	 mov	 DWORD PTR $T194002[esp+36], esi
  03082	3b f3		 cmp	 esi, ebx
  03084	c7 44 24 20 a6
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 166 ; 000000a6H
  0308c	74 1d		 je	 SHORT $L194004
  0308e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  03091	8b cc		 mov	 ecx, esp
  03093	89 64 24 2c	 mov	 DWORD PTR $T194003[esp+64], esp
  03097	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@BFNPLBEO@CSPAuctionReg?$AA@
  0309c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  030a1	55		 push	 ebp
  030a2	8b ce		 mov	 ecx, esi
  030a4	e8 00 00 00 00	 call	 ??0CSPAuctionReg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPAuctionReg::CSPAuctionReg
  030a9	eb 02		 jmp	 SHORT $L194005
$L194004:
  030ab	33 c0		 xor	 eax, eax
$L194005:
  030ad	3b c3		 cmp	 eax, ebx
  030af	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  030b3	0f 84 da 04 00
	00		 je	 $L194673

; 172  : 	PREDEFINE_QUERY(CSPAuctionRegCancel)

  030b9	68 b0 0c 00 00	 push	 3248			; 00000cb0H
  030be	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  030c3	8b f0		 mov	 esi, eax
  030c5	83 c4 04	 add	 esp, 4
  030c8	89 74 24 14	 mov	 DWORD PTR $T194007[esp+36], esi
  030cc	3b f3		 cmp	 esi, ebx
  030ce	c7 44 24 20 a7
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 167 ; 000000a7H
  030d6	74 1d		 je	 SHORT $L194009
  030d8	83 ec 1c	 sub	 esp, 28			; 0000001cH
  030db	8b cc		 mov	 ecx, esp
  030dd	89 64 24 2c	 mov	 DWORD PTR $T194008[esp+64], esp
  030e1	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@ECKBINFG@CSPAuctionRegCancel?$AA@
  030e6	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  030eb	55		 push	 ebp
  030ec	8b ce		 mov	 ecx, esi
  030ee	e8 00 00 00 00	 call	 ??0CSPAuctionRegCancel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPAuctionRegCancel::CSPAuctionRegCancel
  030f3	eb 02		 jmp	 SHORT $L194010
$L194009:
  030f5	33 c0		 xor	 eax, eax
$L194010:
  030f7	3b c3		 cmp	 eax, ebx
  030f9	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  030fd	0f 84 90 04 00
	00		 je	 $L194673

; 173  : 	PREDEFINE_QUERY(CSPAuctionBid)

  03103	68 a0 0c 00 00	 push	 3232			; 00000ca0H
  03108	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0310d	8b f0		 mov	 esi, eax
  0310f	83 c4 04	 add	 esp, 4
  03112	89 74 24 14	 mov	 DWORD PTR $T194012[esp+36], esi
  03116	3b f3		 cmp	 esi, ebx
  03118	c7 44 24 20 a8
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 168 ; 000000a8H
  03120	74 1d		 je	 SHORT $L194014
  03122	83 ec 1c	 sub	 esp, 28			; 0000001cH
  03125	8b cc		 mov	 ecx, esp
  03127	89 64 24 2c	 mov	 DWORD PTR $T194013[esp+64], esp
  0312b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@GHPBEMHG@CSPAuctionBid?$AA@
  03130	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  03135	55		 push	 ebp
  03136	8b ce		 mov	 ecx, esi
  03138	e8 00 00 00 00	 call	 ??0CSPAuctionBid@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPAuctionBid::CSPAuctionBid
  0313d	eb 02		 jmp	 SHORT $L194015
$L194014:
  0313f	33 c0		 xor	 eax, eax
$L194015:
  03141	3b c3		 cmp	 eax, ebx
  03143	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  03147	0f 84 46 04 00
	00		 je	 $L194673

; 174  : 	PREDEFINE_QUERY(CSPAuctionBuyDirect)

  0314d	68 c0 0c 00 00	 push	 3264			; 00000cc0H
  03152	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03157	8b f0		 mov	 esi, eax
  03159	83 c4 04	 add	 esp, 4
  0315c	89 74 24 14	 mov	 DWORD PTR $T194017[esp+36], esi
  03160	3b f3		 cmp	 esi, ebx
  03162	c7 44 24 20 a9
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 169 ; 000000a9H
  0316a	74 1d		 je	 SHORT $L194019
  0316c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0316f	8b cc		 mov	 ecx, esp
  03171	89 64 24 2c	 mov	 DWORD PTR $T194018[esp+64], esp
  03175	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@IPOHBAIB@CSPAuctionBuyDirect?$AA@
  0317a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0317f	55		 push	 ebp
  03180	8b ce		 mov	 ecx, esi
  03182	e8 00 00 00 00	 call	 ??0CSPAuctionBuyDirect@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPAuctionBuyDirect::CSPAuctionBuyDirect
  03187	eb 02		 jmp	 SHORT $L194020
$L194019:
  03189	33 c0		 xor	 eax, eax
$L194020:
  0318b	3b c3		 cmp	 eax, ebx
  0318d	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  03191	0f 84 fc 03 00
	00		 je	 $L194673

; 175  : 	PREDEFINE_QUERY(CSPAuctionEnd)

  03197	68 b0 0c 00 00	 push	 3248			; 00000cb0H
  0319c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  031a1	8b f0		 mov	 esi, eax
  031a3	83 c4 04	 add	 esp, 4
  031a6	89 74 24 14	 mov	 DWORD PTR $T194022[esp+36], esi
  031aa	3b f3		 cmp	 esi, ebx
  031ac	c7 44 24 20 aa
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 170 ; 000000aaH
  031b4	74 1d		 je	 SHORT $L194024
  031b6	83 ec 1c	 sub	 esp, 28			; 0000001cH
  031b9	8b cc		 mov	 ecx, esp
  031bb	89 64 24 2c	 mov	 DWORD PTR $T194023[esp+64], esp
  031bf	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@PPGJGCEK@CSPAuctionEnd?$AA@
  031c4	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  031c9	55		 push	 ebp
  031ca	8b ce		 mov	 ecx, esi
  031cc	e8 00 00 00 00	 call	 ??0CSPAuctionEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPAuctionEnd::CSPAuctionEnd
  031d1	eb 02		 jmp	 SHORT $L194025
$L194024:
  031d3	33 c0		 xor	 eax, eax
$L194025:
  031d5	3b c3		 cmp	 eax, ebx
  031d7	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  031db	0f 84 b2 03 00
	00		 je	 $L194673

; 176  : 	PREDEFINE_QUERY(CSPSaveAuctionInterest)

  031e1	68 34 0c 00 00	 push	 3124			; 00000c34H
  031e6	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  031eb	8b f0		 mov	 esi, eax
  031ed	83 c4 04	 add	 esp, 4
  031f0	89 74 24 14	 mov	 DWORD PTR $T194027[esp+36], esi
  031f4	3b f3		 cmp	 esi, ebx
  031f6	c7 44 24 20 ab
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 171 ; 000000abH
  031fe	74 1d		 je	 SHORT $L194029
  03200	83 ec 1c	 sub	 esp, 28			; 0000001cH
  03203	8b cc		 mov	 ecx, esp
  03205	89 64 24 2c	 mov	 DWORD PTR $T194028[esp+64], esp
  03209	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@HOJHKDNG@CSPSaveAuctionInterest?$AA@
  0320e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  03213	55		 push	 ebp
  03214	8b ce		 mov	 ecx, esi
  03216	e8 00 00 00 00	 call	 ??0CSPSaveAuctionInterest@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveAuctionInterest::CSPSaveAuctionInterest
  0321b	eb 02		 jmp	 SHORT $L194030
$L194029:
  0321d	33 c0		 xor	 eax, eax
$L194030:
  0321f	3b c3		 cmp	 eax, ebx
  03221	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  03225	0f 84 68 03 00
	00		 je	 $L194673

; 177  : 	PREDEFINE_QUERY(CSPGainCashBonus)

  0322b	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  03230	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03235	8b f0		 mov	 esi, eax
  03237	83 c4 04	 add	 esp, 4
  0323a	89 74 24 14	 mov	 DWORD PTR $T194032[esp+36], esi
  0323e	3b f3		 cmp	 esi, ebx
  03240	c7 44 24 20 ac
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 172 ; 000000acH
  03248	74 1d		 je	 SHORT $L194034
  0324a	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0324d	8b cc		 mov	 ecx, esp
  0324f	89 64 24 2c	 mov	 DWORD PTR $T194033[esp+64], esp
  03253	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@GHLMOLCL@CSPGainCashBonus?$AA@
  03258	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0325d	55		 push	 ebp
  0325e	8b ce		 mov	 ecx, esi
  03260	e8 00 00 00 00	 call	 ??0CSPGainCashBonus@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGainCashBonus::CSPGainCashBonus
  03265	eb 02		 jmp	 SHORT $L194035
$L194034:
  03267	33 c0		 xor	 eax, eax
$L194035:
  03269	3b c3		 cmp	 eax, ebx
  0326b	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0326f	0f 84 1e 03 00
	00		 je	 $L194673

; 178  : 	PREDEFINE_QUERY(CSPGetMonthPvPoint)  

  03275	68 40 0c 00 00	 push	 3136			; 00000c40H
  0327a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0327f	8b f0		 mov	 esi, eax
  03281	83 c4 04	 add	 esp, 4
  03284	89 74 24 14	 mov	 DWORD PTR $T194037[esp+36], esi
  03288	3b f3		 cmp	 esi, ebx
  0328a	c7 44 24 20 ad
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 173 ; 000000adH
  03292	74 1d		 je	 SHORT $L194039
  03294	83 ec 1c	 sub	 esp, 28			; 0000001cH
  03297	8b cc		 mov	 ecx, esp
  03299	89 64 24 2c	 mov	 DWORD PTR $T194038[esp+64], esp
  0329d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@JGHBDNBK@CSPGetMonthPvPoint?$AA@
  032a2	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  032a7	55		 push	 ebp
  032a8	8b ce		 mov	 ecx, esi
  032aa	e8 00 00 00 00	 call	 ??0CSPGetMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetMonthPvPoint::CSPGetMonthPvPoint
  032af	eb 02		 jmp	 SHORT $L194040
$L194039:
  032b1	33 c0		 xor	 eax, eax
$L194040:
  032b3	3b c3		 cmp	 eax, ebx
  032b5	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  032b9	0f 84 d4 02 00
	00		 je	 $L194673

; 179  : 	PREDEFINE_QUERY(CSPSaveMonthPvPoint)

  032bf	68 3c 0d 00 00	 push	 3388			; 00000d3cH
  032c4	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  032c9	8b f0		 mov	 esi, eax
  032cb	83 c4 04	 add	 esp, 4
  032ce	89 74 24 14	 mov	 DWORD PTR $T194042[esp+36], esi
  032d2	3b f3		 cmp	 esi, ebx
  032d4	c7 44 24 20 ae
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 174 ; 000000aeH
  032dc	74 1d		 je	 SHORT $L194044
  032de	83 ec 1c	 sub	 esp, 28			; 0000001cH
  032e1	8b cc		 mov	 ecx, esp
  032e3	89 64 24 2c	 mov	 DWORD PTR $T194043[esp+64], esp
  032e7	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JJKPAFHN@CSPSaveMonthPvPoint?$AA@
  032ec	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  032f1	55		 push	 ebp
  032f2	8b ce		 mov	 ecx, esi
  032f4	e8 00 00 00 00	 call	 ??0CSPSaveMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveMonthPvPoint::CSPSaveMonthPvPoint
  032f9	eb 02		 jmp	 SHORT $L194045
$L194044:
  032fb	33 c0		 xor	 eax, eax
$L194045:
  032fd	3b c3		 cmp	 eax, ebx
  032ff	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  03303	0f 84 8a 02 00
	00		 je	 $L194673

; 180  : 	PREDEFINE_QUERY(CSPSaveWarlordSay)

  03309	68 38 0d 00 00	 push	 3384			; 00000d38H
  0330e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03313	8b f0		 mov	 esi, eax
  03315	83 c4 04	 add	 esp, 4
  03318	89 74 24 14	 mov	 DWORD PTR $T194047[esp+36], esi
  0331c	3b f3		 cmp	 esi, ebx
  0331e	c7 44 24 20 af
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 175 ; 000000afH
  03326	74 1d		 je	 SHORT $L194049
  03328	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0332b	8b cc		 mov	 ecx, esp
  0332d	89 64 24 2c	 mov	 DWORD PTR $T194048[esp+64], esp
  03331	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@DCKKNBGN@CSPSaveWarlordSay?$AA@
  03336	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0333b	55		 push	 ebp
  0333c	8b ce		 mov	 ecx, esi
  0333e	e8 00 00 00 00	 call	 ??0CSPSaveWarlordSay@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveWarlordSay::CSPSaveWarlordSay
  03343	eb 02		 jmp	 SHORT $L194050
$L194049:
  03345	33 c0		 xor	 eax, eax
$L194050:
  03347	3b c3		 cmp	 eax, ebx
  03349	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0334d	0f 84 40 02 00
	00		 je	 $L194673

; 181  : 	PREDEFINE_QUERY(CSPGetPostInfo)

  03353	68 40 0c 00 00	 push	 3136			; 00000c40H
  03358	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0335d	8b f0		 mov	 esi, eax
  0335f	83 c4 04	 add	 esp, 4
  03362	89 74 24 14	 mov	 DWORD PTR $T194052[esp+36], esi
  03366	3b f3		 cmp	 esi, ebx
  03368	c7 44 24 20 b0
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 176 ; 000000b0H
  03370	74 1d		 je	 SHORT $L194054
  03372	83 ec 1c	 sub	 esp, 28			; 0000001cH
  03375	8b cc		 mov	 ecx, esp
  03377	89 64 24 2c	 mov	 DWORD PTR $T194053[esp+64], esp
  0337b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@CNBPHJDO@CSPGetPostInfo?$AA@
  03380	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  03385	55		 push	 ebp
  03386	8b ce		 mov	 ecx, esi
  03388	e8 00 00 00 00	 call	 ??0CSPGetPostInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetPostInfo::CSPGetPostInfo
  0338d	eb 02		 jmp	 SHORT $L194055
$L194054:
  0338f	33 c0		 xor	 eax, eax
$L194055:
  03391	3b c3		 cmp	 eax, ebx
  03393	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  03397	0f 84 f6 01 00
	00		 je	 $L194673

; 182  : 	PREDEFINE_QUERY(CSPPostView)

  0339d	68 94 15 00 00	 push	 5524			; 00001594H
  033a2	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  033a7	8b f0		 mov	 esi, eax
  033a9	83 c4 04	 add	 esp, 4
  033ac	89 74 24 14	 mov	 DWORD PTR $T194057[esp+36], esi
  033b0	3b f3		 cmp	 esi, ebx
  033b2	c7 44 24 20 b1
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 177 ; 000000b1H
  033ba	74 1d		 je	 SHORT $L194059
  033bc	83 ec 1c	 sub	 esp, 28			; 0000001cH
  033bf	8b cc		 mov	 ecx, esp
  033c1	89 64 24 2c	 mov	 DWORD PTR $T194058[esp+64], esp
  033c5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@HCCKHDOF@CSPPostView?$AA@
  033ca	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  033cf	55		 push	 ebp
  033d0	8b ce		 mov	 ecx, esi
  033d2	e8 00 00 00 00	 call	 ??0CSPPostView@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPPostView::CSPPostView
  033d7	eb 02		 jmp	 SHORT $L194060
$L194059:
  033d9	33 c0		 xor	 eax, eax
$L194060:
  033db	3b c3		 cmp	 eax, ebx
  033dd	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  033e1	0f 84 ac 01 00
	00		 je	 $L194673

; 183  : 	PREDEFINE_QUERY(CSPPostBillsUpdate)

  033e7	68 d4 0d 00 00	 push	 3540			; 00000dd4H
  033ec	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  033f1	8b f0		 mov	 esi, eax
  033f3	83 c4 04	 add	 esp, 4
  033f6	89 74 24 14	 mov	 DWORD PTR $T194062[esp+36], esi
  033fa	3b f3		 cmp	 esi, ebx
  033fc	c7 44 24 20 b2
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 178 ; 000000b2H
  03404	74 1d		 je	 SHORT $L194064
  03406	83 ec 1c	 sub	 esp, 28			; 0000001cH
  03409	8b cc		 mov	 ecx, esp
  0340b	89 64 24 2c	 mov	 DWORD PTR $T194063[esp+64], esp
  0340f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@LHLNMLKP@CSPPostBillsUpdate?$AA@
  03414	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  03419	55		 push	 ebp
  0341a	8b ce		 mov	 ecx, esi
  0341c	e8 00 00 00 00	 call	 ??0CSPPostBillsUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPPostBillsUpdate::CSPPostBillsUpdate
  03421	eb 02		 jmp	 SHORT $L194065
$L194064:
  03423	33 c0		 xor	 eax, eax
$L194065:
  03425	3b c3		 cmp	 eax, ebx
  03427	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0342b	0f 84 62 01 00
	00		 je	 $L194673

; 184  : 	PREDEFINE_QUERY(CSPTournamentReward)

  03431	68 c8 0c 00 00	 push	 3272			; 00000cc8H
  03436	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0343b	8b f0		 mov	 esi, eax
  0343d	83 c4 04	 add	 esp, 4
  03440	89 74 24 14	 mov	 DWORD PTR $T194067[esp+36], esi
  03444	3b f3		 cmp	 esi, ebx
  03446	c7 44 24 20 b3
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 179 ; 000000b3H
  0344e	74 1d		 je	 SHORT $L194069
  03450	83 ec 1c	 sub	 esp, 28			; 0000001cH
  03453	8b cc		 mov	 ecx, esp
  03455	89 64 24 2c	 mov	 DWORD PTR $T194068[esp+64], esp
  03459	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JGAPCJOE@CSPTournamentReward?$AA@
  0345e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  03463	55		 push	 ebp
  03464	8b ce		 mov	 ecx, esi
  03466	e8 00 00 00 00	 call	 ??0CSPTournamentReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTournamentReward::CSPTournamentReward
  0346b	eb 02		 jmp	 SHORT $L194070
$L194069:
  0346d	33 c0		 xor	 eax, eax
$L194070:
  0346f	3b c3		 cmp	 eax, ebx
  03471	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  03475	0f 84 18 01 00
	00		 je	 $L194673

; 185  : 	PREDEFINE_QUERY(CSPSaveCharPosition)

  0347b	68 48 0c 00 00	 push	 3144			; 00000c48H
  03480	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03485	8b f0		 mov	 esi, eax
  03487	83 c4 04	 add	 esp, 4
  0348a	89 74 24 14	 mov	 DWORD PTR $T194072[esp+36], esi
  0348e	3b f3		 cmp	 esi, ebx
  03490	c7 44 24 20 b4
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 180 ; 000000b4H
  03498	74 1d		 je	 SHORT $L194074
  0349a	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0349d	8b cc		 mov	 ecx, esp
  0349f	89 64 24 2c	 mov	 DWORD PTR $T194073[esp+64], esp
  034a3	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JHKBAIGF@CSPSaveCharPosition?$AA@
  034a8	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  034ad	55		 push	 ebp
  034ae	8b ce		 mov	 ecx, esi
  034b0	e8 00 00 00 00	 call	 ??0CSPSaveCharPosition@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveCharPosition::CSPSaveCharPosition
  034b5	eb 02		 jmp	 SHORT $L194075
$L194074:
  034b7	33 c0		 xor	 eax, eax
$L194075:
  034b9	3b c3		 cmp	 eax, ebx
  034bb	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  034bf	0f 84 ce 00 00
	00		 je	 $L194673

; 186  : 	PREDEFINE_QUERY(CSPSaveMissionOccupy)

  034c5	68 38 0c 00 00	 push	 3128			; 00000c38H
  034ca	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  034cf	8b f0		 mov	 esi, eax
  034d1	83 c4 04	 add	 esp, 4
  034d4	89 74 24 14	 mov	 DWORD PTR $T194077[esp+36], esi
  034d8	3b f3		 cmp	 esi, ebx
  034da	c7 44 24 20 b5
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 181 ; 000000b5H
  034e2	74 1d		 je	 SHORT $L194079
  034e4	83 ec 1c	 sub	 esp, 28			; 0000001cH
  034e7	8b cc		 mov	 ecx, esp
  034e9	89 64 24 2c	 mov	 DWORD PTR $T194078[esp+64], esp
  034ed	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@FGFIEEGL@CSPSaveMissionOccupy?$AA@
  034f2	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  034f7	55		 push	 ebp
  034f8	8b ce		 mov	 ecx, esi
  034fa	e8 00 00 00 00	 call	 ??0CSPSaveMissionOccupy@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveMissionOccupy::CSPSaveMissionOccupy
  034ff	eb 02		 jmp	 SHORT $L194080
$L194079:
  03501	33 c0		 xor	 eax, eax
$L194080:
  03503	3b c3		 cmp	 eax, ebx
  03505	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  03509	0f 84 84 00 00
	00		 je	 $L194673

; 187  : 	PREDEFINE_QUERY(CSPMonthPvPointClear)

  0350f	68 2c 0c 00 00	 push	 3116			; 00000c2cH
  03514	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  03519	8b f0		 mov	 esi, eax
  0351b	83 c4 04	 add	 esp, 4
  0351e	89 74 24 14	 mov	 DWORD PTR $T194082[esp+36], esi
  03522	3b f3		 cmp	 esi, ebx
  03524	c7 44 24 20 b6
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 182 ; 000000b6H
  0352c	74 1d		 je	 SHORT $L194084
  0352e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  03531	8b cc		 mov	 ecx, esp
  03533	89 64 24 2c	 mov	 DWORD PTR $T194083[esp+64], esp
  03537	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@PJDMFFDP@CSPMonthPvPointClear?$AA@
  0353c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  03541	55		 push	 ebp
  03542	8b ce		 mov	 ecx, esi
  03544	e8 00 00 00 00	 call	 ??0CSPMonthPvPointClear@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPMonthPvPointClear::CSPMonthPvPointClear
  03549	eb 02		 jmp	 SHORT $L194085
$L194084:
  0354b	33 c0		 xor	 eax, eax
$L194085:
  0354d	3b c3		 cmp	 eax, ebx
  0354f	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  03553	74 3e		 je	 SHORT $L194673

; 188  : 	PREDEFINE_QUERY(CSPTCMGiftLog)

  03555	68 40 0c 00 00	 push	 3136			; 00000c40H
  0355a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0355f	8b f0		 mov	 esi, eax
  03561	83 c4 04	 add	 esp, 4
  03564	89 74 24 14	 mov	 DWORD PTR $T194087[esp+36], esi
  03568	3b f3		 cmp	 esi, ebx
  0356a	c7 44 24 20 b7
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 183 ; 000000b7H
  03572	74 1f		 je	 SHORT $L194673
  03574	83 ec 1c	 sub	 esp, 28			; 0000001cH
  03577	8b cc		 mov	 ecx, esp
  03579	89 64 24 2c	 mov	 DWORD PTR $T194088[esp+64], esp
  0357d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@FOOMFNIG@CSPTCMGiftLog?$AA@
  03582	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  03587	55		 push	 ebp
  03588	8b ce		 mov	 ecx, esi
  0358a	e8 00 00 00 00	 call	 ??0CSPTCMGiftLog@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTCMGiftLog::CSPTCMGiftLog
  0358f	3b c3		 cmp	 eax, ebx
  03591	75 15		 jne	 SHORT $L153700
$L194673:
  03593	33 c0		 xor	 eax, eax

; 189  : 
; 190  : END_INIT_QUERY()

  03595	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  03599	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  035a0	5f		 pop	 edi
  035a1	5e		 pop	 esi
  035a2	5d		 pop	 ebp
  035a3	5b		 pop	 ebx
  035a4	83 c4 14	 add	 esp, 20			; 00000014H
  035a7	c3		 ret	 0
$L153700:
  035a8	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  035ac	5f		 pop	 edi
  035ad	5e		 pop	 esi
  035ae	5d		 pop	 ebp
  035af	b8 01 00 00 00	 mov	 eax, 1
  035b4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  035bb	5b		 pop	 ebx
  035bc	83 c4 14	 add	 esp, 20			; 00000014H
  035bf	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L194091:
  00000	8b 45 ec	 mov	 eax, DWORD PTR $T193172[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
$L194093:
  0000b	8b 45 f0	 mov	 eax, DWORD PTR $T193177[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
$L194095:
  00016	8b 45 f0	 mov	 eax, DWORD PTR $T193182[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001f	59		 pop	 ecx
  00020	c3		 ret	 0
$L194097:
  00021	8b 45 f0	 mov	 eax, DWORD PTR $T193187[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002a	59		 pop	 ecx
  0002b	c3		 ret	 0
$L194099:
  0002c	8b 45 f0	 mov	 eax, DWORD PTR $T193192[ebp]
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00035	59		 pop	 ecx
  00036	c3		 ret	 0
$L194101:
  00037	8b 45 f0	 mov	 eax, DWORD PTR $T193197[ebp]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00040	59		 pop	 ecx
  00041	c3		 ret	 0
$L194103:
  00042	8b 45 f0	 mov	 eax, DWORD PTR $T193202[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004b	59		 pop	 ecx
  0004c	c3		 ret	 0
$L194105:
  0004d	8b 45 f0	 mov	 eax, DWORD PTR $T193207[ebp]
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00056	59		 pop	 ecx
  00057	c3		 ret	 0
$L194107:
  00058	8b 45 f0	 mov	 eax, DWORD PTR $T193212[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00061	59		 pop	 ecx
  00062	c3		 ret	 0
$L194109:
  00063	8b 45 f0	 mov	 eax, DWORD PTR $T193217[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006c	59		 pop	 ecx
  0006d	c3		 ret	 0
$L194111:
  0006e	8b 45 f0	 mov	 eax, DWORD PTR $T193222[ebp]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00077	59		 pop	 ecx
  00078	c3		 ret	 0
$L194113:
  00079	8b 45 f0	 mov	 eax, DWORD PTR $T193227[ebp]
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00082	59		 pop	 ecx
  00083	c3		 ret	 0
$L194115:
  00084	8b 45 f0	 mov	 eax, DWORD PTR $T193232[ebp]
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0008d	59		 pop	 ecx
  0008e	c3		 ret	 0
$L194117:
  0008f	8b 45 f0	 mov	 eax, DWORD PTR $T193237[ebp]
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00098	59		 pop	 ecx
  00099	c3		 ret	 0
$L194119:
  0009a	8b 45 f0	 mov	 eax, DWORD PTR $T193242[ebp]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000a3	59		 pop	 ecx
  000a4	c3		 ret	 0
$L194121:
  000a5	8b 45 f0	 mov	 eax, DWORD PTR $T193247[ebp]
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000ae	59		 pop	 ecx
  000af	c3		 ret	 0
$L194123:
  000b0	8b 45 f0	 mov	 eax, DWORD PTR $T193252[ebp]
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000b9	59		 pop	 ecx
  000ba	c3		 ret	 0
$L194125:
  000bb	8b 45 f0	 mov	 eax, DWORD PTR $T193257[ebp]
  000be	50		 push	 eax
  000bf	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000c4	59		 pop	 ecx
  000c5	c3		 ret	 0
$L194127:
  000c6	8b 45 f0	 mov	 eax, DWORD PTR $T193262[ebp]
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000cf	59		 pop	 ecx
  000d0	c3		 ret	 0
$L194129:
  000d1	8b 45 f0	 mov	 eax, DWORD PTR $T193267[ebp]
  000d4	50		 push	 eax
  000d5	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000da	59		 pop	 ecx
  000db	c3		 ret	 0
$L194131:
  000dc	8b 45 f0	 mov	 eax, DWORD PTR $T193272[ebp]
  000df	50		 push	 eax
  000e0	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000e5	59		 pop	 ecx
  000e6	c3		 ret	 0
$L194133:
  000e7	8b 45 f0	 mov	 eax, DWORD PTR $T193277[ebp]
  000ea	50		 push	 eax
  000eb	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000f0	59		 pop	 ecx
  000f1	c3		 ret	 0
$L194135:
  000f2	8b 45 f0	 mov	 eax, DWORD PTR $T193282[ebp]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000fb	59		 pop	 ecx
  000fc	c3		 ret	 0
$L194137:
  000fd	8b 45 f0	 mov	 eax, DWORD PTR $T193287[ebp]
  00100	50		 push	 eax
  00101	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00106	59		 pop	 ecx
  00107	c3		 ret	 0
$L194139:
  00108	8b 45 f0	 mov	 eax, DWORD PTR $T193292[ebp]
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00111	59		 pop	 ecx
  00112	c3		 ret	 0
$L194141:
  00113	8b 45 f0	 mov	 eax, DWORD PTR $T193297[ebp]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0011c	59		 pop	 ecx
  0011d	c3		 ret	 0
$L194143:
  0011e	8b 45 f0	 mov	 eax, DWORD PTR $T193302[ebp]
  00121	50		 push	 eax
  00122	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00127	59		 pop	 ecx
  00128	c3		 ret	 0
$L194145:
  00129	8b 45 f0	 mov	 eax, DWORD PTR $T193307[ebp]
  0012c	50		 push	 eax
  0012d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00132	59		 pop	 ecx
  00133	c3		 ret	 0
$L194147:
  00134	8b 45 f0	 mov	 eax, DWORD PTR $T193312[ebp]
  00137	50		 push	 eax
  00138	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0013d	59		 pop	 ecx
  0013e	c3		 ret	 0
$L194149:
  0013f	8b 45 f0	 mov	 eax, DWORD PTR $T193317[ebp]
  00142	50		 push	 eax
  00143	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00148	59		 pop	 ecx
  00149	c3		 ret	 0
$L194151:
  0014a	8b 45 f0	 mov	 eax, DWORD PTR $T193322[ebp]
  0014d	50		 push	 eax
  0014e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00153	59		 pop	 ecx
  00154	c3		 ret	 0
$L194153:
  00155	8b 45 f0	 mov	 eax, DWORD PTR $T193327[ebp]
  00158	50		 push	 eax
  00159	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0015e	59		 pop	 ecx
  0015f	c3		 ret	 0
$L194155:
  00160	8b 45 f0	 mov	 eax, DWORD PTR $T193332[ebp]
  00163	50		 push	 eax
  00164	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00169	59		 pop	 ecx
  0016a	c3		 ret	 0
$L194157:
  0016b	8b 45 f0	 mov	 eax, DWORD PTR $T193337[ebp]
  0016e	50		 push	 eax
  0016f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00174	59		 pop	 ecx
  00175	c3		 ret	 0
$L194159:
  00176	8b 45 f0	 mov	 eax, DWORD PTR $T193342[ebp]
  00179	50		 push	 eax
  0017a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0017f	59		 pop	 ecx
  00180	c3		 ret	 0
$L194161:
  00181	8b 45 f0	 mov	 eax, DWORD PTR $T193347[ebp]
  00184	50		 push	 eax
  00185	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0018a	59		 pop	 ecx
  0018b	c3		 ret	 0
$L194163:
  0018c	8b 45 f0	 mov	 eax, DWORD PTR $T193352[ebp]
  0018f	50		 push	 eax
  00190	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00195	59		 pop	 ecx
  00196	c3		 ret	 0
$L194165:
  00197	8b 45 f0	 mov	 eax, DWORD PTR $T193357[ebp]
  0019a	50		 push	 eax
  0019b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001a0	59		 pop	 ecx
  001a1	c3		 ret	 0
$L194167:
  001a2	8b 45 f0	 mov	 eax, DWORD PTR $T193362[ebp]
  001a5	50		 push	 eax
  001a6	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001ab	59		 pop	 ecx
  001ac	c3		 ret	 0
$L194169:
  001ad	8b 45 f0	 mov	 eax, DWORD PTR $T193367[ebp]
  001b0	50		 push	 eax
  001b1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001b6	59		 pop	 ecx
  001b7	c3		 ret	 0
$L194171:
  001b8	8b 45 f0	 mov	 eax, DWORD PTR $T193372[ebp]
  001bb	50		 push	 eax
  001bc	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001c1	59		 pop	 ecx
  001c2	c3		 ret	 0
$L194173:
  001c3	8b 45 f0	 mov	 eax, DWORD PTR $T193377[ebp]
  001c6	50		 push	 eax
  001c7	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001cc	59		 pop	 ecx
  001cd	c3		 ret	 0
$L194175:
  001ce	8b 45 f0	 mov	 eax, DWORD PTR $T193382[ebp]
  001d1	50		 push	 eax
  001d2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001d7	59		 pop	 ecx
  001d8	c3		 ret	 0
$L194177:
  001d9	8b 45 f0	 mov	 eax, DWORD PTR $T193387[ebp]
  001dc	50		 push	 eax
  001dd	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001e2	59		 pop	 ecx
  001e3	c3		 ret	 0
$L194179:
  001e4	8b 45 f0	 mov	 eax, DWORD PTR $T193392[ebp]
  001e7	50		 push	 eax
  001e8	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001ed	59		 pop	 ecx
  001ee	c3		 ret	 0
$L194181:
  001ef	8b 45 f0	 mov	 eax, DWORD PTR $T193397[ebp]
  001f2	50		 push	 eax
  001f3	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001f8	59		 pop	 ecx
  001f9	c3		 ret	 0
$L194183:
  001fa	8b 45 f0	 mov	 eax, DWORD PTR $T193402[ebp]
  001fd	50		 push	 eax
  001fe	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00203	59		 pop	 ecx
  00204	c3		 ret	 0
$L194185:
  00205	8b 45 f0	 mov	 eax, DWORD PTR $T193407[ebp]
  00208	50		 push	 eax
  00209	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0020e	59		 pop	 ecx
  0020f	c3		 ret	 0
$L194187:
  00210	8b 45 f0	 mov	 eax, DWORD PTR $T193412[ebp]
  00213	50		 push	 eax
  00214	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00219	59		 pop	 ecx
  0021a	c3		 ret	 0
$L194189:
  0021b	8b 45 f0	 mov	 eax, DWORD PTR $T193417[ebp]
  0021e	50		 push	 eax
  0021f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00224	59		 pop	 ecx
  00225	c3		 ret	 0
$L194191:
  00226	8b 45 f0	 mov	 eax, DWORD PTR $T193422[ebp]
  00229	50		 push	 eax
  0022a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0022f	59		 pop	 ecx
  00230	c3		 ret	 0
$L194193:
  00231	8b 45 f0	 mov	 eax, DWORD PTR $T193427[ebp]
  00234	50		 push	 eax
  00235	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0023a	59		 pop	 ecx
  0023b	c3		 ret	 0
$L194195:
  0023c	8b 45 f0	 mov	 eax, DWORD PTR $T193432[ebp]
  0023f	50		 push	 eax
  00240	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00245	59		 pop	 ecx
  00246	c3		 ret	 0
$L194197:
  00247	8b 45 f0	 mov	 eax, DWORD PTR $T193437[ebp]
  0024a	50		 push	 eax
  0024b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00250	59		 pop	 ecx
  00251	c3		 ret	 0
$L194199:
  00252	8b 45 f0	 mov	 eax, DWORD PTR $T193442[ebp]
  00255	50		 push	 eax
  00256	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0025b	59		 pop	 ecx
  0025c	c3		 ret	 0
$L194201:
  0025d	8b 45 f0	 mov	 eax, DWORD PTR $T193447[ebp]
  00260	50		 push	 eax
  00261	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00266	59		 pop	 ecx
  00267	c3		 ret	 0
$L194203:
  00268	8b 45 f0	 mov	 eax, DWORD PTR $T193452[ebp]
  0026b	50		 push	 eax
  0026c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00271	59		 pop	 ecx
  00272	c3		 ret	 0
$L194205:
  00273	8b 45 f0	 mov	 eax, DWORD PTR $T193457[ebp]
  00276	50		 push	 eax
  00277	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0027c	59		 pop	 ecx
  0027d	c3		 ret	 0
$L194207:
  0027e	8b 45 f0	 mov	 eax, DWORD PTR $T193462[ebp]
  00281	50		 push	 eax
  00282	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00287	59		 pop	 ecx
  00288	c3		 ret	 0
$L194209:
  00289	8b 45 f0	 mov	 eax, DWORD PTR $T193467[ebp]
  0028c	50		 push	 eax
  0028d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00292	59		 pop	 ecx
  00293	c3		 ret	 0
$L194211:
  00294	8b 45 f0	 mov	 eax, DWORD PTR $T193472[ebp]
  00297	50		 push	 eax
  00298	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0029d	59		 pop	 ecx
  0029e	c3		 ret	 0
$L194213:
  0029f	8b 45 f0	 mov	 eax, DWORD PTR $T193477[ebp]
  002a2	50		 push	 eax
  002a3	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002a8	59		 pop	 ecx
  002a9	c3		 ret	 0
$L194215:
  002aa	8b 45 f0	 mov	 eax, DWORD PTR $T193482[ebp]
  002ad	50		 push	 eax
  002ae	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002b3	59		 pop	 ecx
  002b4	c3		 ret	 0
$L194217:
  002b5	8b 45 f0	 mov	 eax, DWORD PTR $T193487[ebp]
  002b8	50		 push	 eax
  002b9	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002be	59		 pop	 ecx
  002bf	c3		 ret	 0
$L194219:
  002c0	8b 45 f0	 mov	 eax, DWORD PTR $T193492[ebp]
  002c3	50		 push	 eax
  002c4	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002c9	59		 pop	 ecx
  002ca	c3		 ret	 0
$L194221:
  002cb	8b 45 f0	 mov	 eax, DWORD PTR $T193497[ebp]
  002ce	50		 push	 eax
  002cf	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002d4	59		 pop	 ecx
  002d5	c3		 ret	 0
$L194223:
  002d6	8b 45 f0	 mov	 eax, DWORD PTR $T193502[ebp]
  002d9	50		 push	 eax
  002da	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002df	59		 pop	 ecx
  002e0	c3		 ret	 0
$L194225:
  002e1	8b 45 f0	 mov	 eax, DWORD PTR $T193507[ebp]
  002e4	50		 push	 eax
  002e5	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002ea	59		 pop	 ecx
  002eb	c3		 ret	 0
$L194227:
  002ec	8b 45 f0	 mov	 eax, DWORD PTR $T193512[ebp]
  002ef	50		 push	 eax
  002f0	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002f5	59		 pop	 ecx
  002f6	c3		 ret	 0
$L194229:
  002f7	8b 45 f0	 mov	 eax, DWORD PTR $T193517[ebp]
  002fa	50		 push	 eax
  002fb	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00300	59		 pop	 ecx
  00301	c3		 ret	 0
$L194231:
  00302	8b 45 f0	 mov	 eax, DWORD PTR $T193522[ebp]
  00305	50		 push	 eax
  00306	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0030b	59		 pop	 ecx
  0030c	c3		 ret	 0
$L194233:
  0030d	8b 45 f0	 mov	 eax, DWORD PTR $T193527[ebp]
  00310	50		 push	 eax
  00311	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00316	59		 pop	 ecx
  00317	c3		 ret	 0
$L194235:
  00318	8b 45 f0	 mov	 eax, DWORD PTR $T193532[ebp]
  0031b	50		 push	 eax
  0031c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00321	59		 pop	 ecx
  00322	c3		 ret	 0
$L194237:
  00323	8b 45 f0	 mov	 eax, DWORD PTR $T193537[ebp]
  00326	50		 push	 eax
  00327	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0032c	59		 pop	 ecx
  0032d	c3		 ret	 0
$L194239:
  0032e	8b 45 f0	 mov	 eax, DWORD PTR $T193542[ebp]
  00331	50		 push	 eax
  00332	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00337	59		 pop	 ecx
  00338	c3		 ret	 0
$L194241:
  00339	8b 45 f0	 mov	 eax, DWORD PTR $T193547[ebp]
  0033c	50		 push	 eax
  0033d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00342	59		 pop	 ecx
  00343	c3		 ret	 0
$L194243:
  00344	8b 45 f0	 mov	 eax, DWORD PTR $T193552[ebp]
  00347	50		 push	 eax
  00348	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0034d	59		 pop	 ecx
  0034e	c3		 ret	 0
$L194245:
  0034f	8b 45 f0	 mov	 eax, DWORD PTR $T193557[ebp]
  00352	50		 push	 eax
  00353	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00358	59		 pop	 ecx
  00359	c3		 ret	 0
$L194247:
  0035a	8b 45 f0	 mov	 eax, DWORD PTR $T193562[ebp]
  0035d	50		 push	 eax
  0035e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00363	59		 pop	 ecx
  00364	c3		 ret	 0
$L194249:
  00365	8b 45 f0	 mov	 eax, DWORD PTR $T193567[ebp]
  00368	50		 push	 eax
  00369	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0036e	59		 pop	 ecx
  0036f	c3		 ret	 0
$L194251:
  00370	8b 45 f0	 mov	 eax, DWORD PTR $T193572[ebp]
  00373	50		 push	 eax
  00374	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00379	59		 pop	 ecx
  0037a	c3		 ret	 0
$L194253:
  0037b	8b 45 f0	 mov	 eax, DWORD PTR $T193577[ebp]
  0037e	50		 push	 eax
  0037f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00384	59		 pop	 ecx
  00385	c3		 ret	 0
$L194255:
  00386	8b 45 f0	 mov	 eax, DWORD PTR $T193582[ebp]
  00389	50		 push	 eax
  0038a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0038f	59		 pop	 ecx
  00390	c3		 ret	 0
$L194257:
  00391	8b 45 f0	 mov	 eax, DWORD PTR $T193587[ebp]
  00394	50		 push	 eax
  00395	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0039a	59		 pop	 ecx
  0039b	c3		 ret	 0
$L194259:
  0039c	8b 45 f0	 mov	 eax, DWORD PTR $T193592[ebp]
  0039f	50		 push	 eax
  003a0	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003a5	59		 pop	 ecx
  003a6	c3		 ret	 0
$L194261:
  003a7	8b 45 f0	 mov	 eax, DWORD PTR $T193597[ebp]
  003aa	50		 push	 eax
  003ab	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003b0	59		 pop	 ecx
  003b1	c3		 ret	 0
$L194263:
  003b2	8b 45 f0	 mov	 eax, DWORD PTR $T193602[ebp]
  003b5	50		 push	 eax
  003b6	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003bb	59		 pop	 ecx
  003bc	c3		 ret	 0
$L194265:
  003bd	8b 45 f0	 mov	 eax, DWORD PTR $T193607[ebp]
  003c0	50		 push	 eax
  003c1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003c6	59		 pop	 ecx
  003c7	c3		 ret	 0
$L194267:
  003c8	8b 45 f0	 mov	 eax, DWORD PTR $T193612[ebp]
  003cb	50		 push	 eax
  003cc	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003d1	59		 pop	 ecx
  003d2	c3		 ret	 0
$L194269:
  003d3	8b 45 f0	 mov	 eax, DWORD PTR $T193617[ebp]
  003d6	50		 push	 eax
  003d7	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003dc	59		 pop	 ecx
  003dd	c3		 ret	 0
$L194271:
  003de	8b 45 f0	 mov	 eax, DWORD PTR $T193622[ebp]
  003e1	50		 push	 eax
  003e2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003e7	59		 pop	 ecx
  003e8	c3		 ret	 0
$L194273:
  003e9	8b 45 f0	 mov	 eax, DWORD PTR $T193627[ebp]
  003ec	50		 push	 eax
  003ed	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003f2	59		 pop	 ecx
  003f3	c3		 ret	 0
$L194275:
  003f4	8b 45 f0	 mov	 eax, DWORD PTR $T193632[ebp]
  003f7	50		 push	 eax
  003f8	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003fd	59		 pop	 ecx
  003fe	c3		 ret	 0
$L194277:
  003ff	8b 45 f0	 mov	 eax, DWORD PTR $T193637[ebp]
  00402	50		 push	 eax
  00403	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00408	59		 pop	 ecx
  00409	c3		 ret	 0
$L194279:
  0040a	8b 45 f0	 mov	 eax, DWORD PTR $T193642[ebp]
  0040d	50		 push	 eax
  0040e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00413	59		 pop	 ecx
  00414	c3		 ret	 0
$L194281:
  00415	8b 45 f0	 mov	 eax, DWORD PTR $T193647[ebp]
  00418	50		 push	 eax
  00419	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0041e	59		 pop	 ecx
  0041f	c3		 ret	 0
$L194283:
  00420	8b 45 f0	 mov	 eax, DWORD PTR $T193652[ebp]
  00423	50		 push	 eax
  00424	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00429	59		 pop	 ecx
  0042a	c3		 ret	 0
$L194285:
  0042b	8b 45 f0	 mov	 eax, DWORD PTR $T193657[ebp]
  0042e	50		 push	 eax
  0042f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00434	59		 pop	 ecx
  00435	c3		 ret	 0
$L194287:
  00436	8b 45 f0	 mov	 eax, DWORD PTR $T193662[ebp]
  00439	50		 push	 eax
  0043a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0043f	59		 pop	 ecx
  00440	c3		 ret	 0
$L194289:
  00441	8b 45 f0	 mov	 eax, DWORD PTR $T193667[ebp]
  00444	50		 push	 eax
  00445	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0044a	59		 pop	 ecx
  0044b	c3		 ret	 0
$L194291:
  0044c	8b 45 f0	 mov	 eax, DWORD PTR $T193672[ebp]
  0044f	50		 push	 eax
  00450	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00455	59		 pop	 ecx
  00456	c3		 ret	 0
$L194293:
  00457	8b 45 f0	 mov	 eax, DWORD PTR $T193677[ebp]
  0045a	50		 push	 eax
  0045b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00460	59		 pop	 ecx
  00461	c3		 ret	 0
$L194295:
  00462	8b 45 f0	 mov	 eax, DWORD PTR $T193682[ebp]
  00465	50		 push	 eax
  00466	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0046b	59		 pop	 ecx
  0046c	c3		 ret	 0
$L194297:
  0046d	8b 45 f0	 mov	 eax, DWORD PTR $T193687[ebp]
  00470	50		 push	 eax
  00471	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00476	59		 pop	 ecx
  00477	c3		 ret	 0
$L194299:
  00478	8b 45 f0	 mov	 eax, DWORD PTR $T193692[ebp]
  0047b	50		 push	 eax
  0047c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00481	59		 pop	 ecx
  00482	c3		 ret	 0
$L194301:
  00483	8b 45 f0	 mov	 eax, DWORD PTR $T193697[ebp]
  00486	50		 push	 eax
  00487	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0048c	59		 pop	 ecx
  0048d	c3		 ret	 0
$L194303:
  0048e	8b 45 f0	 mov	 eax, DWORD PTR $T193702[ebp]
  00491	50		 push	 eax
  00492	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00497	59		 pop	 ecx
  00498	c3		 ret	 0
$L194305:
  00499	8b 45 f0	 mov	 eax, DWORD PTR $T193707[ebp]
  0049c	50		 push	 eax
  0049d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004a2	59		 pop	 ecx
  004a3	c3		 ret	 0
$L194307:
  004a4	8b 45 f0	 mov	 eax, DWORD PTR $T193712[ebp]
  004a7	50		 push	 eax
  004a8	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004ad	59		 pop	 ecx
  004ae	c3		 ret	 0
$L194309:
  004af	8b 45 f0	 mov	 eax, DWORD PTR $T193717[ebp]
  004b2	50		 push	 eax
  004b3	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004b8	59		 pop	 ecx
  004b9	c3		 ret	 0
$L194311:
  004ba	8b 45 f0	 mov	 eax, DWORD PTR $T193722[ebp]
  004bd	50		 push	 eax
  004be	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004c3	59		 pop	 ecx
  004c4	c3		 ret	 0
$L194313:
  004c5	8b 45 f0	 mov	 eax, DWORD PTR $T193727[ebp]
  004c8	50		 push	 eax
  004c9	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004ce	59		 pop	 ecx
  004cf	c3		 ret	 0
$L194315:
  004d0	8b 45 f0	 mov	 eax, DWORD PTR $T193732[ebp]
  004d3	50		 push	 eax
  004d4	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004d9	59		 pop	 ecx
  004da	c3		 ret	 0
$L194317:
  004db	8b 45 f0	 mov	 eax, DWORD PTR $T193737[ebp]
  004de	50		 push	 eax
  004df	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004e4	59		 pop	 ecx
  004e5	c3		 ret	 0
$L194319:
  004e6	8b 45 f0	 mov	 eax, DWORD PTR $T193742[ebp]
  004e9	50		 push	 eax
  004ea	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004ef	59		 pop	 ecx
  004f0	c3		 ret	 0
$L194321:
  004f1	8b 45 f0	 mov	 eax, DWORD PTR $T193747[ebp]
  004f4	50		 push	 eax
  004f5	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004fa	59		 pop	 ecx
  004fb	c3		 ret	 0
$L194323:
  004fc	8b 45 f0	 mov	 eax, DWORD PTR $T193752[ebp]
  004ff	50		 push	 eax
  00500	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00505	59		 pop	 ecx
  00506	c3		 ret	 0
$L194325:
  00507	8b 45 f0	 mov	 eax, DWORD PTR $T193757[ebp]
  0050a	50		 push	 eax
  0050b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00510	59		 pop	 ecx
  00511	c3		 ret	 0
$L194327:
  00512	8b 45 f0	 mov	 eax, DWORD PTR $T193762[ebp]
  00515	50		 push	 eax
  00516	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0051b	59		 pop	 ecx
  0051c	c3		 ret	 0
$L194329:
  0051d	8b 45 f0	 mov	 eax, DWORD PTR $T193767[ebp]
  00520	50		 push	 eax
  00521	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00526	59		 pop	 ecx
  00527	c3		 ret	 0
$L194331:
  00528	8b 45 f0	 mov	 eax, DWORD PTR $T193772[ebp]
  0052b	50		 push	 eax
  0052c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00531	59		 pop	 ecx
  00532	c3		 ret	 0
$L194333:
  00533	8b 45 f0	 mov	 eax, DWORD PTR $T193777[ebp]
  00536	50		 push	 eax
  00537	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0053c	59		 pop	 ecx
  0053d	c3		 ret	 0
$L194335:
  0053e	8b 45 f0	 mov	 eax, DWORD PTR $T193782[ebp]
  00541	50		 push	 eax
  00542	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00547	59		 pop	 ecx
  00548	c3		 ret	 0
$L194337:
  00549	8b 45 f0	 mov	 eax, DWORD PTR $T193787[ebp]
  0054c	50		 push	 eax
  0054d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00552	59		 pop	 ecx
  00553	c3		 ret	 0
$L194339:
  00554	8b 45 f0	 mov	 eax, DWORD PTR $T193792[ebp]
  00557	50		 push	 eax
  00558	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0055d	59		 pop	 ecx
  0055e	c3		 ret	 0
$L194341:
  0055f	8b 45 f0	 mov	 eax, DWORD PTR $T193797[ebp]
  00562	50		 push	 eax
  00563	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00568	59		 pop	 ecx
  00569	c3		 ret	 0
$L194343:
  0056a	8b 45 f0	 mov	 eax, DWORD PTR $T193802[ebp]
  0056d	50		 push	 eax
  0056e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00573	59		 pop	 ecx
  00574	c3		 ret	 0
$L194345:
  00575	8b 45 f0	 mov	 eax, DWORD PTR $T193807[ebp]
  00578	50		 push	 eax
  00579	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0057e	59		 pop	 ecx
  0057f	c3		 ret	 0
$L194347:
  00580	8b 45 f0	 mov	 eax, DWORD PTR $T193812[ebp]
  00583	50		 push	 eax
  00584	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00589	59		 pop	 ecx
  0058a	c3		 ret	 0
$L194349:
  0058b	8b 45 f0	 mov	 eax, DWORD PTR $T193817[ebp]
  0058e	50		 push	 eax
  0058f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00594	59		 pop	 ecx
  00595	c3		 ret	 0
$L194351:
  00596	8b 45 f0	 mov	 eax, DWORD PTR $T193822[ebp]
  00599	50		 push	 eax
  0059a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0059f	59		 pop	 ecx
  005a0	c3		 ret	 0
$L194353:
  005a1	8b 45 f0	 mov	 eax, DWORD PTR $T193827[ebp]
  005a4	50		 push	 eax
  005a5	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  005aa	59		 pop	 ecx
  005ab	c3		 ret	 0
$L194355:
  005ac	8b 45 f0	 mov	 eax, DWORD PTR $T193832[ebp]
  005af	50		 push	 eax
  005b0	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  005b5	59		 pop	 ecx
  005b6	c3		 ret	 0
$L194357:
  005b7	8b 45 f0	 mov	 eax, DWORD PTR $T193837[ebp]
  005ba	50		 push	 eax
  005bb	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  005c0	59		 pop	 ecx
  005c1	c3		 ret	 0
$L194359:
  005c2	8b 45 f0	 mov	 eax, DWORD PTR $T193842[ebp]
  005c5	50		 push	 eax
  005c6	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  005cb	59		 pop	 ecx
  005cc	c3		 ret	 0
$L194361:
  005cd	8b 45 f0	 mov	 eax, DWORD PTR $T193847[ebp]
  005d0	50		 push	 eax
  005d1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  005d6	59		 pop	 ecx
  005d7	c3		 ret	 0
$L194363:
  005d8	8b 45 f0	 mov	 eax, DWORD PTR $T193852[ebp]
  005db	50		 push	 eax
  005dc	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  005e1	59		 pop	 ecx
  005e2	c3		 ret	 0
$L194365:
  005e3	8b 45 f0	 mov	 eax, DWORD PTR $T193857[ebp]
  005e6	50		 push	 eax
  005e7	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  005ec	59		 pop	 ecx
  005ed	c3		 ret	 0
$L194367:
  005ee	8b 45 f0	 mov	 eax, DWORD PTR $T193862[ebp]
  005f1	50		 push	 eax
  005f2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  005f7	59		 pop	 ecx
  005f8	c3		 ret	 0
$L194369:
  005f9	8b 45 f0	 mov	 eax, DWORD PTR $T193867[ebp]
  005fc	50		 push	 eax
  005fd	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00602	59		 pop	 ecx
  00603	c3		 ret	 0
$L194371:
  00604	8b 45 f0	 mov	 eax, DWORD PTR $T193872[ebp]
  00607	50		 push	 eax
  00608	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0060d	59		 pop	 ecx
  0060e	c3		 ret	 0
$L194373:
  0060f	8b 45 f0	 mov	 eax, DWORD PTR $T193877[ebp]
  00612	50		 push	 eax
  00613	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00618	59		 pop	 ecx
  00619	c3		 ret	 0
$L194375:
  0061a	8b 45 f0	 mov	 eax, DWORD PTR $T193882[ebp]
  0061d	50		 push	 eax
  0061e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00623	59		 pop	 ecx
  00624	c3		 ret	 0
$L194377:
  00625	8b 45 f0	 mov	 eax, DWORD PTR $T193887[ebp]
  00628	50		 push	 eax
  00629	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0062e	59		 pop	 ecx
  0062f	c3		 ret	 0
$L194379:
  00630	8b 45 f0	 mov	 eax, DWORD PTR $T193892[ebp]
  00633	50		 push	 eax
  00634	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00639	59		 pop	 ecx
  0063a	c3		 ret	 0
$L194381:
  0063b	8b 45 f0	 mov	 eax, DWORD PTR $T193897[ebp]
  0063e	50		 push	 eax
  0063f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00644	59		 pop	 ecx
  00645	c3		 ret	 0
$L194383:
  00646	8b 45 f0	 mov	 eax, DWORD PTR $T193902[ebp]
  00649	50		 push	 eax
  0064a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0064f	59		 pop	 ecx
  00650	c3		 ret	 0
$L194385:
  00651	8b 45 f0	 mov	 eax, DWORD PTR $T193907[ebp]
  00654	50		 push	 eax
  00655	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0065a	59		 pop	 ecx
  0065b	c3		 ret	 0
$L194387:
  0065c	8b 45 f0	 mov	 eax, DWORD PTR $T193912[ebp]
  0065f	50		 push	 eax
  00660	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00665	59		 pop	 ecx
  00666	c3		 ret	 0
$L194389:
  00667	8b 45 f0	 mov	 eax, DWORD PTR $T193917[ebp]
  0066a	50		 push	 eax
  0066b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00670	59		 pop	 ecx
  00671	c3		 ret	 0
$L194391:
  00672	8b 45 f0	 mov	 eax, DWORD PTR $T193922[ebp]
  00675	50		 push	 eax
  00676	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0067b	59		 pop	 ecx
  0067c	c3		 ret	 0
$L194393:
  0067d	8b 45 f0	 mov	 eax, DWORD PTR $T193927[ebp]
  00680	50		 push	 eax
  00681	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00686	59		 pop	 ecx
  00687	c3		 ret	 0
$L194395:
  00688	8b 45 f0	 mov	 eax, DWORD PTR $T193932[ebp]
  0068b	50		 push	 eax
  0068c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00691	59		 pop	 ecx
  00692	c3		 ret	 0
$L194397:
  00693	8b 45 f0	 mov	 eax, DWORD PTR $T193937[ebp]
  00696	50		 push	 eax
  00697	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0069c	59		 pop	 ecx
  0069d	c3		 ret	 0
$L194399:
  0069e	8b 45 f0	 mov	 eax, DWORD PTR $T193942[ebp]
  006a1	50		 push	 eax
  006a2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  006a7	59		 pop	 ecx
  006a8	c3		 ret	 0
$L194401:
  006a9	8b 45 f0	 mov	 eax, DWORD PTR $T193947[ebp]
  006ac	50		 push	 eax
  006ad	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  006b2	59		 pop	 ecx
  006b3	c3		 ret	 0
$L194403:
  006b4	8b 45 f0	 mov	 eax, DWORD PTR $T193952[ebp]
  006b7	50		 push	 eax
  006b8	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  006bd	59		 pop	 ecx
  006be	c3		 ret	 0
$L194405:
  006bf	8b 45 f0	 mov	 eax, DWORD PTR $T193957[ebp]
  006c2	50		 push	 eax
  006c3	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  006c8	59		 pop	 ecx
  006c9	c3		 ret	 0
$L194407:
  006ca	8b 45 f0	 mov	 eax, DWORD PTR $T193962[ebp]
  006cd	50		 push	 eax
  006ce	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  006d3	59		 pop	 ecx
  006d4	c3		 ret	 0
$L194409:
  006d5	8b 45 f0	 mov	 eax, DWORD PTR $T193967[ebp]
  006d8	50		 push	 eax
  006d9	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  006de	59		 pop	 ecx
  006df	c3		 ret	 0
$L194411:
  006e0	8b 45 f0	 mov	 eax, DWORD PTR $T193972[ebp]
  006e3	50		 push	 eax
  006e4	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  006e9	59		 pop	 ecx
  006ea	c3		 ret	 0
$L194413:
  006eb	8b 45 f0	 mov	 eax, DWORD PTR $T193977[ebp]
  006ee	50		 push	 eax
  006ef	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  006f4	59		 pop	 ecx
  006f5	c3		 ret	 0
$L194415:
  006f6	8b 45 f0	 mov	 eax, DWORD PTR $T193982[ebp]
  006f9	50		 push	 eax
  006fa	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  006ff	59		 pop	 ecx
  00700	c3		 ret	 0
$L194417:
  00701	8b 45 f0	 mov	 eax, DWORD PTR $T193987[ebp]
  00704	50		 push	 eax
  00705	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0070a	59		 pop	 ecx
  0070b	c3		 ret	 0
$L194419:
  0070c	8b 45 f0	 mov	 eax, DWORD PTR $T193992[ebp]
  0070f	50		 push	 eax
  00710	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00715	59		 pop	 ecx
  00716	c3		 ret	 0
$L194421:
  00717	8b 45 f0	 mov	 eax, DWORD PTR $T193997[ebp]
  0071a	50		 push	 eax
  0071b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00720	59		 pop	 ecx
  00721	c3		 ret	 0
$L194423:
  00722	8b 45 f0	 mov	 eax, DWORD PTR $T194002[ebp]
  00725	50		 push	 eax
  00726	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0072b	59		 pop	 ecx
  0072c	c3		 ret	 0
$L194425:
  0072d	8b 45 f0	 mov	 eax, DWORD PTR $T194007[ebp]
  00730	50		 push	 eax
  00731	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00736	59		 pop	 ecx
  00737	c3		 ret	 0
$L194427:
  00738	8b 45 f0	 mov	 eax, DWORD PTR $T194012[ebp]
  0073b	50		 push	 eax
  0073c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00741	59		 pop	 ecx
  00742	c3		 ret	 0
$L194429:
  00743	8b 45 f0	 mov	 eax, DWORD PTR $T194017[ebp]
  00746	50		 push	 eax
  00747	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0074c	59		 pop	 ecx
  0074d	c3		 ret	 0
$L194431:
  0074e	8b 45 f0	 mov	 eax, DWORD PTR $T194022[ebp]
  00751	50		 push	 eax
  00752	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00757	59		 pop	 ecx
  00758	c3		 ret	 0
$L194433:
  00759	8b 45 f0	 mov	 eax, DWORD PTR $T194027[ebp]
  0075c	50		 push	 eax
  0075d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00762	59		 pop	 ecx
  00763	c3		 ret	 0
$L194435:
  00764	8b 45 f0	 mov	 eax, DWORD PTR $T194032[ebp]
  00767	50		 push	 eax
  00768	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0076d	59		 pop	 ecx
  0076e	c3		 ret	 0
$L194437:
  0076f	8b 45 f0	 mov	 eax, DWORD PTR $T194037[ebp]
  00772	50		 push	 eax
  00773	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00778	59		 pop	 ecx
  00779	c3		 ret	 0
$L194439:
  0077a	8b 45 f0	 mov	 eax, DWORD PTR $T194042[ebp]
  0077d	50		 push	 eax
  0077e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00783	59		 pop	 ecx
  00784	c3		 ret	 0
$L194441:
  00785	8b 45 f0	 mov	 eax, DWORD PTR $T194047[ebp]
  00788	50		 push	 eax
  00789	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0078e	59		 pop	 ecx
  0078f	c3		 ret	 0
$L194443:
  00790	8b 45 f0	 mov	 eax, DWORD PTR $T194052[ebp]
  00793	50		 push	 eax
  00794	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00799	59		 pop	 ecx
  0079a	c3		 ret	 0
$L194445:
  0079b	8b 45 f0	 mov	 eax, DWORD PTR $T194057[ebp]
  0079e	50		 push	 eax
  0079f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  007a4	59		 pop	 ecx
  007a5	c3		 ret	 0
$L194447:
  007a6	8b 45 f0	 mov	 eax, DWORD PTR $T194062[ebp]
  007a9	50		 push	 eax
  007aa	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  007af	59		 pop	 ecx
  007b0	c3		 ret	 0
$L194449:
  007b1	8b 45 f0	 mov	 eax, DWORD PTR $T194067[ebp]
  007b4	50		 push	 eax
  007b5	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  007ba	59		 pop	 ecx
  007bb	c3		 ret	 0
$L194451:
  007bc	8b 45 f0	 mov	 eax, DWORD PTR $T194072[ebp]
  007bf	50		 push	 eax
  007c0	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  007c5	59		 pop	 ecx
  007c6	c3		 ret	 0
$L194453:
  007c7	8b 45 f0	 mov	 eax, DWORD PTR $T194077[ebp]
  007ca	50		 push	 eax
  007cb	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  007d0	59		 pop	 ecx
  007d1	c3		 ret	 0
$L194455:
  007d2	8b 45 f0	 mov	 eax, DWORD PTR $T194082[ebp]
  007d5	50		 push	 eax
  007d6	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  007db	59		 pop	 ecx
  007dc	c3		 ret	 0
$L194457:
  007dd	8b 45 f0	 mov	 eax, DWORD PTR $T194087[ebp]
  007e0	50		 push	 eax
  007e1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  007e6	59		 pop	 ecx
  007e7	c3		 ret	 0
__ehhandler$?InitQueryTMapSvr@@YAHPAVCSqlDatabase@@@Z:
  007e8	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T194672
  007ed	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?InitQueryTMapSvr@@YAHPAVCSqlDatabase@@@Z ENDP		; InitQueryTMapSvr
END
