; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\TAICmdChgHost.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??0CTAICmdChgHost@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTAICmdChgHost@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTAICmdChgHost@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDelay@CTAICmdChgHost@@UAEKPAVCTMonster@@KKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanRun@CTAICmdChgHost@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ExecAI@CTAICmdChgHost@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@GIG@std@@YAXPAGIABGAAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTAICONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTAICONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@YAXPAPAUtagTAICONDITION@@0AAV?$allocator@PAUtagTAICONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMONITEM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMONITEM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMONITEM@@V?$allocator@PAUtagTMONITEM@@@std@@@std@@YAXPAPAUtagTMONITEM@@0AAV?$allocator@PAUtagTMONITEM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMAPMON@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMAPMON@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@YAXPAPAUtagTMAPMON@@0AAV?$allocator@PAUtagTMAPMON@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagPATHPOINT@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagPATHPOINT@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagPATHPOINT@@V?$allocator@PAUtagPATHPOINT@@@std@@@std@@YAXPAPAUtagPATHPOINT@@0AAV?$allocator@PAUtagPATHPOINT@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTCONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTCONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTCONDITION@@V?$allocator@PAUtagQUESTCONDITION@@@std@@@std@@YAXPAPAUtagQUESTCONDITION@@0AAV?$allocator@PAUtagQUESTCONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTREWARD@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTREWARD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTREWARD@@V?$allocator@PAUtagQUESTREWARD@@@std@@@std@@YAXPAPAUtagQUESTREWARD@@0AAV?$allocator@PAUtagQUESTREWARD@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTTERM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTTERM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@0AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTCASHITMSALE@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTCASHITMSALE@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagTCASHITMSALE@@IU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@IABU1@AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagMONREGEN@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagMONREGEN@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagMONREGEN@@IU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@IABU1@AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagLOTTERY@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagLOTTERY@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagLOTTERY@@IU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@IABU1@AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAGPAGV?$allocator@G@std@@@std@@YAPAGPAG00AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAGPAG@std@@YAPAGPAG00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@VCTPlayer@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTPlayer@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@0AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagTCASHITMSALE@@PAU1@@std@@YAPAUtagTCASHITMSALE@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@0AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagMONREGEN@@PAU1@@std@@YAPAUtagMONREGEN@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@0AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagLOTTERY@@PAU1@@std@@YAPAUtagLOTTERY@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAGIG@std@@YAXPAGIABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@GG@std@@YAPAGPAG00AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagTCASHITMSALE@@U1@@std@@YAXPAUtagTCASHITMSALE@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTCASHITMSALE@@@std@@YAXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagMONREGEN@@U1@@std@@YAXPAUtagMONREGEN@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagMONREGEN@@@std@@YAXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagLOTTERY@@U1@@std@@YAXPAUtagLOTTERY@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagLOTTERY@@@std@@YAXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CTAICmdChgHost@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?GetDelay@CTAICmdChgHost@@UAEKPAVCTMonster@@KKE@Z ; CTAICmdChgHost::GetDelay
PUBLIC	?CanRun@CTAICmdChgHost@@UAEEPAVCTMonster@@KKE@Z	; CTAICmdChgHost::CanRun
PUBLIC	?ExecAI@CTAICmdChgHost@@UAEEPAVCTMonster@@KKE@Z	; CTAICmdChgHost::ExecAI
PUBLIC	??0CTAICmdChgHost@@QAE@XZ			; CTAICmdChgHost::CTAICmdChgHost
PUBLIC	??_7CTAICmdChgHost@@6B@				; CTAICmdChgHost::`vftable'
PUBLIC	??_GCTAICmdChgHost@@UAEPAXI@Z			; CTAICmdChgHost::`scalar deleting destructor'
EXTRN	?CheckCondition@CTAICommand@@UAEEPAUtagTAICONDITION@@PAVCTMonster@@KKE@Z:NEAR ; CTAICommand::CheckCondition
EXTRN	??0CTAICommand@@QAE@XZ:NEAR			; CTAICommand::CTAICommand
EXTRN	??_ECTAICmdChgHost@@UAEPAXI@Z:NEAR		; CTAICmdChgHost::`vector deleting destructor'
;	COMDAT ??_7CTAICmdChgHost@@6B@
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\taicmdchghost.cpp
CONST	SEGMENT
??_7CTAICmdChgHost@@6B@ DD FLAT:?GetDelay@CTAICmdChgHost@@UAEKPAVCTMonster@@KKE@Z ; CTAICmdChgHost::`vftable'
	DD	FLAT:?CanRun@CTAICmdChgHost@@UAEEPAVCTMonster@@KKE@Z
	DD	FLAT:?ExecAI@CTAICmdChgHost@@UAEEPAVCTMonster@@KKE@Z
	DD	FLAT:?CheckCondition@CTAICommand@@UAEEPAUtagTAICONDITION@@PAVCTMonster@@KKE@Z
	DD	FLAT:??_ECTAICmdChgHost@@UAEPAXI@Z
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0CTAICmdChgHost@@QAE@XZ
_TEXT	SEGMENT
??0CTAICmdChgHost@@QAE@XZ PROC NEAR			; CTAICmdChgHost::CTAICmdChgHost, COMDAT
; _this$ = ecx

; 5    : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??0CTAICommand@@QAE@XZ	; CTAICommand::CTAICommand
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTAICmdChgHost@@6B@

; 6    : }

  0000e	8b c6		 mov	 eax, esi
  00010	5e		 pop	 esi
  00011	c3		 ret	 0
??0CTAICmdChgHost@@QAE@XZ ENDP				; CTAICmdChgHost::CTAICmdChgHost
_TEXT	ENDS
PUBLIC	??1CTAICmdChgHost@@UAE@XZ			; CTAICmdChgHost::~CTAICmdChgHost
EXTRN	??1CTAICommand@@UAE@XZ:NEAR			; CTAICommand::~CTAICommand
; Function compile flags: /Ogty
;	COMDAT ??1CTAICmdChgHost@@UAE@XZ
_TEXT	SEGMENT
??1CTAICmdChgHost@@UAE@XZ PROC NEAR			; CTAICmdChgHost::~CTAICmdChgHost, COMDAT
; _this$ = ecx

; 9    : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CTAICmdChgHost@@6B@

; 10   : }

  00006	e9 00 00 00 00	 jmp	 ??1CTAICommand@@UAE@XZ	; CTAICommand::~CTAICommand
??1CTAICmdChgHost@@UAE@XZ ENDP				; CTAICmdChgHost::~CTAICmdChgHost
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetDelay@CTAICmdChgHost@@UAEKPAVCTMonster@@KKE@Z
_TEXT	SEGMENT
_pMON$ = 8						; size = 4
_dwEventHost$ = 12					; size = 4
_dwRHId$ = 16						; size = 4
_bRHType$ = 20						; size = 1
?GetDelay@CTAICmdChgHost@@UAEKPAVCTMonster@@KKE@Z PROC NEAR ; CTAICmdChgHost::GetDelay, COMDAT
; _this$ = ecx

; 14   : 	return 0;

  00000	33 c0		 xor	 eax, eax

; 15   : }

  00002	c2 10 00	 ret	 16			; 00000010H
?GetDelay@CTAICmdChgHost@@UAEKPAVCTMonster@@KKE@Z ENDP	; CTAICmdChgHost::GetDelay
_TEXT	ENDS
EXTRN	?CanRun@CTAICommand@@UAEEPAVCTMonster@@KKE@Z:NEAR ; CTAICommand::CanRun
; Function compile flags: /Ogty
;	COMDAT ?CanRun@CTAICmdChgHost@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT
_pMON$ = 8						; size = 4
_dwEventHost$ = 12					; size = 4
_dwRHId$ = 16						; size = 4
_bRHType$ = 20						; size = 1
?CanRun@CTAICmdChgHost@@UAEEPAVCTMonster@@KKE@Z PROC NEAR ; CTAICmdChgHost::CanRun, COMDAT
; _this$ = ecx

; 19   : 	if( pMON->m_bStatus != OS_WAKEUP )

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _pMON$[esp-4]
  00004	80 b8 cc 00 00
	00 01		 cmp	 BYTE PTR [eax+204], 1
  0000b	74 05		 je	 SHORT $L152249

; 20   : 		return FALSE;

  0000d	32 c0		 xor	 al, al

; 23   : }

  0000f	c2 10 00	 ret	 16			; 00000010H
$L152249:

; 21   : 
; 22   : 	return CTAICommand::CanRun( pMON, dwEventHost, dwRHId, bRHType);

  00012	89 44 24 04	 mov	 DWORD PTR _pMON$[esp-4], eax
  00016	e9 00 00 00 00	 jmp	 ?CanRun@CTAICommand@@UAEEPAVCTMonster@@KKE@Z ; CTAICommand::CanRun
?CanRun@CTAICmdChgHost@@UAEEPAVCTMonster@@KKE@Z ENDP	; CTAICmdChgHost::CanRun
_TEXT	ENDS
EXTRN	?ExecAI@CTAICommand@@UAEEPAVCTMonster@@KKE@Z:NEAR ; CTAICommand::ExecAI
EXTRN	?NotifyHost@CTMonster@@QAEXPAVCTPlayer@@@Z:NEAR	; CTMonster::NotifyHost
EXTRN	?AddAggro@CTMonster@@QAEXKKEEK@Z:NEAR		; CTMonster::AddAggro
EXTRN	?LeaveAggro@CTMonster@@QAEEKKE@Z:NEAR		; CTMonster::LeaveAggro
EXTRN	?FindHost@CTMonster@@QAEPAVCTPlayer@@K@Z:NEAR	; CTMonster::FindHost
EXTRN	?SetEventToFollower@CTMonster@@QAEXXZ:NEAR	; CTMonster::SetEventToFollower
EXTRN	?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z:NEAR ; CTMonster::OnEvent
EXTRN	?SelectSkill@CTMonster@@QAEGPAVCTPlayer@@E@Z:NEAR ; CTMonster::SelectSkill
EXTRN	?ResetHost@CTMonster@@QAEXXZ:NEAR		; CTMonster::ResetHost
EXTRN	?GetCountry@CTObjBase@@QAEEXZ:NEAR		; CTObjBase::GetCountry
; Function compile flags: /Ogty
;	COMDAT ?ExecAI@CTAICmdChgHost@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMON$ = 8						; size = 4
_dwEventHost$ = 12					; size = 4
_dwRHId$ = 16						; size = 4
_bRHType$ = 20						; size = 1
?ExecAI@CTAICmdChgHost@@UAEEPAVCTMonster@@KKE@Z PROC NEAR ; CTAICmdChgHost::ExecAI, COMDAT
; _this$ = ecx

; 26   : {

  00000	51		 push	 ecx
  00001	53		 push	 ebx
  00002	55		 push	 ebp
  00003	56		 push	 esi

; 27   : 	CTPlayer *pOLD = pMON->FindHost(pMON->m_dwHostID);

  00004	8b 74 24 14	 mov	 esi, DWORD PTR _pMON$[esp+12]
  00008	8b 86 f8 00 00
	00		 mov	 eax, DWORD PTR [esi+248]
  0000e	57		 push	 edi
  0000f	89 4c 24 10	 mov	 DWORD PTR _this$[esp+20], ecx
  00013	50		 push	 eax
  00014	8b ce		 mov	 ecx, esi
  00016	e8 00 00 00 00	 call	 ?FindHost@CTMonster@@QAEPAVCTPlayer@@K@Z ; CTMonster::FindHost

; 28   : 	CTPlayer *pNEW = pMON->FindHost(dwEventHost);

  0001b	8b 6c 24 1c	 mov	 ebp, DWORD PTR _dwEventHost$[esp+16]
  0001f	55		 push	 ebp
  00020	8b ce		 mov	 ecx, esi
  00022	8b d8		 mov	 ebx, eax
  00024	e8 00 00 00 00	 call	 ?FindHost@CTMonster@@QAEPAVCTPlayer@@K@Z ; CTMonster::FindHost
  00029	8b f8		 mov	 edi, eax

; 29   : 
; 30   : 	if(!pNEW)

  0002b	85 ff		 test	 edi, edi
  0002d	75 41		 jne	 SHORT $L152259

; 31   : 	{
; 32   : 		pMON->m_dwHostKEY++;
; 33   : 		if(!pMON->LeaveAggro(dwEventHost, dwRHId, bRHType))

  0002f	8b 4c 24 24	 mov	 ecx, DWORD PTR _bRHType$[esp+16]
  00033	8b 86 f4 00 00
	00		 mov	 eax, DWORD PTR [esi+244]
  00039	8b 54 24 20	 mov	 edx, DWORD PTR _dwRHId$[esp+16]
  0003d	51		 push	 ecx
  0003e	52		 push	 edx
  0003f	40		 inc	 eax
  00040	55		 push	 ebp
  00041	8b ce		 mov	 ecx, esi
  00043	89 86 f4 00 00
	00		 mov	 DWORD PTR [esi+244], eax
  00049	e8 00 00 00 00	 call	 ?LeaveAggro@CTMonster@@QAEEKKE@Z ; CTMonster::LeaveAggro
  0004e	84 c0		 test	 al, al
  00050	75 14		 jne	 SHORT $L152260

; 34   : 		{
; 35   : 			pMON->ResetHost();

  00052	8b ce		 mov	 ecx, esi
  00054	e8 00 00 00 00	 call	 ?ResetHost@CTMonster@@QAEXXZ ; CTMonster::ResetHost

; 36   : 			pMON->OnEvent(AT_ENTER, 0,0,0,0);

  00059	57		 push	 edi
  0005a	57		 push	 edi
  0005b	57		 push	 edi
  0005c	57		 push	 edi
  0005d	6a 07		 push	 7
  0005f	8b ce		 mov	 ecx, esi
  00061	e8 00 00 00 00	 call	 ?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z ; CTMonster::OnEvent
$L152260:
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	5d		 pop	 ebp

; 37   : 		}
; 38   : 		return FALSE;

  00069	32 c0		 xor	 al, al
  0006b	5b		 pop	 ebx

; 59   : }

  0006c	59		 pop	 ecx
  0006d	c2 10 00	 ret	 16			; 00000010H
$L152259:

; 39   : 	}
; 40   : 
; 41   : 	if(pMON->m_bCountry == pNEW->GetCountry())

  00070	8d 8f 00 01 01
	00		 lea	 ecx, DWORD PTR [edi+65792]
  00076	e8 00 00 00 00	 call	 ?GetCountry@CTObjBase@@QAEEXZ ; CTObjBase::GetCountry
  0007b	38 86 9d 00 00
	00		 cmp	 BYTE PTR [esi+157], al

; 42   : 		return FALSE;

  00081	74 e3		 je	 SHORT $L152260

; 43   : 
; 44   : 	if(pNEW != pOLD )

  00083	3b fb		 cmp	 edi, ebx
  00085	74 25		 je	 SHORT $L152262

; 45   : 	{
; 46   : 		pMON->m_dwHostKEY++;

  00087	8b 86 f4 00 00
	00		 mov	 eax, DWORD PTR [esi+244]
  0008d	40		 inc	 eax

; 47   : 
; 48   : 		pMON->m_dwHostID = dwEventHost;
; 49   : 		pMON->NotifyHost(pOLD);

  0008e	53		 push	 ebx
  0008f	8b ce		 mov	 ecx, esi
  00091	89 86 f4 00 00
	00		 mov	 DWORD PTR [esi+244], eax
  00097	89 ae f8 00 00
	00		 mov	 DWORD PTR [esi+248], ebp
  0009d	e8 00 00 00 00	 call	 ?NotifyHost@CTMonster@@QAEXPAVCTPlayer@@@Z ; CTMonster::NotifyHost

; 50   : 		pMON->SelectSkill(pNEW, TRUE);

  000a2	6a 01		 push	 1
  000a4	57		 push	 edi
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?SelectSkill@CTMonster@@QAEGPAVCTPlayer@@E@Z ; CTMonster::SelectSkill
$L152262:

; 51   : 	}
; 52   : 
; 53   : 	pMON->m_dwTargetID = dwRHId;
; 54   : 	pMON->m_bTargetType = bRHType;

  000ac	8b 44 24 24	 mov	 eax, DWORD PTR _bRHType$[esp+16]
  000b0	8b 5c 24 20	 mov	 ebx, DWORD PTR _dwRHId$[esp+16]

; 55   : 	pMON->AddAggro(dwEventHost, dwRHId, bRHType, pNEW->m_bCountry, 1);

  000b4	33 c9		 xor	 ecx, ecx
  000b6	89 9e 38 01 00
	00		 mov	 DWORD PTR [esi+312], ebx
  000bc	88 86 34 01 00
	00		 mov	 BYTE PTR [esi+308], al
  000c2	8a 8f 9d 01 01
	00		 mov	 cl, BYTE PTR [edi+65949]
  000c8	6a 01		 push	 1
  000ca	51		 push	 ecx
  000cb	50		 push	 eax
  000cc	53		 push	 ebx
  000cd	55		 push	 ebp
  000ce	8b ce		 mov	 ecx, esi
  000d0	e8 00 00 00 00	 call	 ?AddAggro@CTMonster@@QAEXKKEEK@Z ; CTMonster::AddAggro

; 56   : 	pMON->SetEventToFollower();

  000d5	8b ce		 mov	 ecx, esi
  000d7	e8 00 00 00 00	 call	 ?SetEventToFollower@CTMonster@@QAEXXZ ; CTMonster::SetEventToFollower

; 57   : 
; 58   : 	return CTAICommand::ExecAI( pMON, dwEventHost, dwRHId, bRHType);

  000dc	8b 54 24 24	 mov	 edx, DWORD PTR _bRHType$[esp+16]
  000e0	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+20]
  000e4	52		 push	 edx
  000e5	53		 push	 ebx
  000e6	55		 push	 ebp
  000e7	56		 push	 esi
  000e8	e8 00 00 00 00	 call	 ?ExecAI@CTAICommand@@UAEEPAVCTMonster@@KKE@Z ; CTAICommand::ExecAI
  000ed	5f		 pop	 edi
  000ee	5e		 pop	 esi
  000ef	5d		 pop	 ebp
  000f0	5b		 pop	 ebx

; 59   : }

  000f1	59		 pop	 ecx
  000f2	c2 10 00	 ret	 16			; 00000010H
?ExecAI@CTAICmdChgHost@@UAEEPAVCTMonster@@KKE@Z ENDP	; CTAICmdChgHost::ExecAI
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
;	COMDAT ??_GCTAICmdChgHost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTAICmdChgHost@@UAEPAXI@Z PROC NEAR			; CTAICmdChgHost::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTAICmdChgHost@@UAE@XZ ; CTAICmdChgHost::~CTAICmdChgHost
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L152708
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L152708:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTAICmdChgHost@@UAEPAXI@Z ENDP			; CTAICmdChgHost::`scalar deleting destructor'
_TEXT	ENDS
END
