; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\TAICmdGohome.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??0CTAICmdGohome@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCTAICmdGohome@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTAICmdGohome@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDelay@CTAICmdGohome@@UAEKPAVCTMonster@@KKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanRun@CTAICmdGohome@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ExecAI@CTAICmdGohome@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAPAVCTSkill@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEAAPAVCTSkill@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEABQAVCTSkill@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@GIG@std@@YAXPAGIABGAAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTAICONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTAICONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTAICONDITION@@V?$allocator@PAUtagTAICONDITION@@@std@@@std@@YAXPAPAUtagTAICONDITION@@0AAV?$allocator@PAUtagTAICONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMONITEM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMONITEM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMONITEM@@V?$allocator@PAUtagTMONITEM@@@std@@@std@@YAXPAPAUtagTMONITEM@@0AAV?$allocator@PAUtagTMONITEM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagTMAPMON@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagTMAPMON@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagTMAPMON@@V?$allocator@PAUtagTMAPMON@@@std@@@std@@YAXPAPAUtagTMAPMON@@0AAV?$allocator@PAUtagTMAPMON@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagPATHPOINT@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagPATHPOINT@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagPATHPOINT@@V?$allocator@PAUtagPATHPOINT@@@std@@@std@@YAXPAPAUtagPATHPOINT@@0AAV?$allocator@PAUtagPATHPOINT@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTCONDITION@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTCONDITION@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTCONDITION@@V?$allocator@PAUtagQUESTCONDITION@@@std@@@std@@YAXPAPAUtagQUESTCONDITION@@0AAV?$allocator@PAUtagQUESTCONDITION@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTREWARD@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTREWARD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTREWARD@@V?$allocator@PAUtagQUESTREWARD@@@std@@@std@@YAXPAPAUtagQUESTREWARD@@0AAV?$allocator@PAUtagQUESTREWARD@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@UtagQUESTTERM@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAUtagQUESTTERM@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAUtagQUESTTERM@@V?$allocator@PAUtagQUESTTERM@@@std@@@std@@YAXPAPAUtagQUESTTERM@@0AAV?$allocator@PAUtagQUESTTERM@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTCASHITMSALE@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTCASHITMSALE@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagTCASHITMSALE@@IU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@IABU1@AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagMONREGEN@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagMONREGEN@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagMONREGEN@@IU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@IABU1@AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagLOTTERY@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagLOTTERY@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagLOTTERY@@IU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@IABU1@AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAGPAGV?$allocator@G@std@@@std@@YAPAGPAG00AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAGPAG@std@@YAPAGPAG00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@VCTPlayer@@@std@@YA?AU_Scalar_ptr_iterator_tag@0@PAPAVCTPlayer@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@PAVCTPlayer@@V?$allocator@PAVCTPlayer@@@std@@@std@@YAXPAPAVCTPlayer@@0AAV?$allocator@PAVCTPlayer@@@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@0AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagTCASHITMSALE@@PAU1@@std@@YAPAUtagTCASHITMSALE@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@0AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagMONREGEN@@PAU1@@std@@YAPAUtagMONREGEN@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@0AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagLOTTERY@@PAU1@@std@@YAPAUtagLOTTERY@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAGIG@std@@YAXPAGIABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@GG@std@@YAPAGPAG00AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagTCASHITMSALE@@U1@@std@@YAXPAUtagTCASHITMSALE@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTCASHITMSALE@@@std@@YAXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagMONREGEN@@U1@@std@@YAXPAUtagMONREGEN@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagMONREGEN@@@std@@YAXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagLOTTERY@@U1@@std@@YAXPAUtagLOTTERY@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagLOTTERY@@@std@@YAXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDistance@@YAMMMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _sqrtf
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CTAICmdGohome@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?GetDelay@CTAICmdGohome@@UAEKPAVCTMonster@@KKE@Z ; CTAICmdGohome::GetDelay
PUBLIC	?CanRun@CTAICmdGohome@@UAEEPAVCTMonster@@KKE@Z	; CTAICmdGohome::CanRun
PUBLIC	?ExecAI@CTAICmdGohome@@UAEEPAVCTMonster@@KKE@Z	; CTAICmdGohome::ExecAI
PUBLIC	??0CTAICmdGohome@@QAE@XZ			; CTAICmdGohome::CTAICmdGohome
PUBLIC	??_7CTAICmdGohome@@6B@				; CTAICmdGohome::`vftable'
PUBLIC	??_GCTAICmdGohome@@UAEPAXI@Z			; CTAICmdGohome::`scalar deleting destructor'
EXTRN	?CheckCondition@CTAICommand@@UAEEPAUtagTAICONDITION@@PAVCTMonster@@KKE@Z:NEAR ; CTAICommand::CheckCondition
EXTRN	??0CTAICommand@@QAE@XZ:NEAR			; CTAICommand::CTAICommand
EXTRN	??_ECTAICmdGohome@@UAEPAXI@Z:NEAR		; CTAICmdGohome::`vector deleting destructor'
;	COMDAT ??_7CTAICmdGohome@@6B@
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\taicmdgohome.cpp
CONST	SEGMENT
??_7CTAICmdGohome@@6B@ DD FLAT:?GetDelay@CTAICmdGohome@@UAEKPAVCTMonster@@KKE@Z ; CTAICmdGohome::`vftable'
	DD	FLAT:?CanRun@CTAICmdGohome@@UAEEPAVCTMonster@@KKE@Z
	DD	FLAT:?ExecAI@CTAICmdGohome@@UAEEPAVCTMonster@@KKE@Z
	DD	FLAT:?CheckCondition@CTAICommand@@UAEEPAUtagTAICONDITION@@PAVCTMonster@@KKE@Z
	DD	FLAT:??_ECTAICmdGohome@@UAEPAXI@Z
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0CTAICmdGohome@@QAE@XZ
_TEXT	SEGMENT
??0CTAICmdGohome@@QAE@XZ PROC NEAR			; CTAICmdGohome::CTAICmdGohome, COMDAT
; _this$ = ecx

; 4    : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??0CTAICommand@@QAE@XZ	; CTAICommand::CTAICommand
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTAICmdGohome@@6B@

; 5    : }

  0000e	8b c6		 mov	 eax, esi
  00010	5e		 pop	 esi
  00011	c3		 ret	 0
??0CTAICmdGohome@@QAE@XZ ENDP				; CTAICmdGohome::CTAICmdGohome
_TEXT	ENDS
PUBLIC	??1CTAICmdGohome@@UAE@XZ			; CTAICmdGohome::~CTAICmdGohome
EXTRN	??1CTAICommand@@UAE@XZ:NEAR			; CTAICommand::~CTAICommand
; Function compile flags: /Ogty
;	COMDAT ??1CTAICmdGohome@@UAE@XZ
_TEXT	SEGMENT
??1CTAICmdGohome@@UAE@XZ PROC NEAR			; CTAICmdGohome::~CTAICmdGohome, COMDAT
; _this$ = ecx

; 8    : {

  00000	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], OFFSET FLAT:??_7CTAICmdGohome@@6B@

; 9    : }

  00006	e9 00 00 00 00	 jmp	 ??1CTAICommand@@UAE@XZ	; CTAICommand::~CTAICommand
??1CTAICmdGohome@@UAE@XZ ENDP				; CTAICmdGohome::~CTAICmdGohome
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetDelay@CTAICmdGohome@@UAEKPAVCTMonster@@KKE@Z
_TEXT	SEGMENT
_pMON$ = 8						; size = 4
_dwEventHost$ = 12					; size = 4
_dwRHId$ = 16						; size = 4
_bRHType$ = 20						; size = 1
?GetDelay@CTAICmdGohome@@UAEKPAVCTMonster@@KKE@Z PROC NEAR ; CTAICmdGohome::GetDelay, COMDAT
; _this$ = ecx

; 13   : 	return 0;

  00000	33 c0		 xor	 eax, eax

; 14   : }

  00002	c2 10 00	 ret	 16			; 00000010H
?GetDelay@CTAICmdGohome@@UAEKPAVCTMonster@@KKE@Z ENDP	; CTAICmdGohome::GetDelay
_TEXT	ENDS
EXTRN	?CanRun@CTAICommand@@UAEEPAVCTMonster@@KKE@Z:NEAR ; CTAICommand::CanRun
; Function compile flags: /Ogty
;	COMDAT ?CanRun@CTAICmdGohome@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT
_pMON$ = 8						; size = 4
_dwEventHost$ = 12					; size = 4
_dwRHId$ = 16						; size = 4
_bRHType$ = 20						; size = 1
?CanRun@CTAICmdGohome@@UAEEPAVCTMonster@@KKE@Z PROC NEAR ; CTAICmdGohome::CanRun, COMDAT
; _this$ = ecx

; 18   : 	if( pMON->m_bStatus != OS_WAKEUP ||
; 19   : 		pMON->m_bMode != MT_GOHOME )

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _pMON$[esp-4]
  00004	80 b8 cc 00 00
	00 01		 cmp	 BYTE PTR [eax+204], 1
  0000b	75 0f		 jne	 SHORT $L152252
  0000d	80 78 76 02	 cmp	 BYTE PTR [eax+118], 2
  00011	75 09		 jne	 SHORT $L152252

; 21   : 
; 22   : 	return CTAICommand::CanRun( pMON, dwEventHost, dwRHId, bRHType);

  00013	89 44 24 04	 mov	 DWORD PTR _pMON$[esp-4], eax
  00017	e9 00 00 00 00	 jmp	 ?CanRun@CTAICommand@@UAEEPAVCTMonster@@KKE@Z ; CTAICommand::CanRun
$L152252:

; 20   : 		return FALSE;

  0001c	32 c0		 xor	 al, al

; 23   : }

  0001e	c2 10 00	 ret	 16			; 00000010H
?CanRun@CTAICmdGohome@@UAEEPAVCTMonster@@KKE@Z ENDP	; CTAICmdGohome::CanRun
_TEXT	ENDS
PUBLIC	?size@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEIXZ ; std::vector<CTSkill *,std::allocator<CTSkill *> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<CTSkill *,std::allocator<CTSkill *> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L152864
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L152864:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEIXZ ENDP ; std::vector<CTSkill *,std::allocator<CTSkill *> >::size
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAV012@H@Z ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEABQAVCTSkill@@XZ ; std::vector<CTSkill *,std::allocator<CTSkill *> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEABQAVCTSkill@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEABQAVCTSkill@@XZ PROC NEAR ; std::vector<CTSkill *,std::allocator<CTSkill *> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEABQAVCTSkill@@XZ ENDP ; std::vector<CTSkill *,std::allocator<CTSkill *> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z ; std::vector<CTSkill *,std::allocator<CTSkill *> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z PROC NEAR ; std::vector<CTSkill *,std::allocator<CTSkill *> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z ENDP ; std::vector<CTSkill *,std::allocator<CTSkill *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	_sqrtf
EXTRN	__fltused:NEAR
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\math.h
;	COMDAT _sqrtf
_TEXT	SEGMENT
__X$ = 8						; size = 4
_sqrtf	PROC NEAR					; COMDAT

; 470  :         {return ((float)sqrt((double)_X)); }

  00000	d9 44 24 04	 fld	 DWORD PTR __X$[esp-4]
  00004	d9 fa		 fsqrt
  00006	c3		 ret	 0
_sqrtf	ENDP
_TEXT	ENDS
PUBLIC	?GetDistance@@YAMMMMM@Z				; GetDistance
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\tmaptype.h
;	COMDAT ?GetDistance@@YAMMMMM@Z
_TEXT	SEGMENT
_fStartPosX$ = 8					; size = 4
_fStartPosZ$ = 12					; size = 4
_fEndPosX$ = 16						; size = 4
_fEndPosZ$ = 20						; size = 4
?GetDistance@@YAMMMMM@Z PROC NEAR			; GetDistance, COMDAT

; 101  : 	FLOAT fDistX = fStartPosX - fEndPosX;

  00000	d9 44 24 04	 fld	 DWORD PTR _fStartPosX$[esp-4]
  00004	d8 64 24 0c	 fsub	 DWORD PTR _fEndPosX$[esp-4]

; 102  : 	FLOAT fDistZ = fStartPosZ - fEndPosZ;

  00008	d9 44 24 08	 fld	 DWORD PTR _fStartPosZ$[esp-4]
  0000c	d8 64 24 10	 fsub	 DWORD PTR _fEndPosZ$[esp-4]

; 103  : 	return sqrtf(fDistX * fDistX + fDistZ * fDistZ);

  00010	d9 c0		 fld	 ST(0)
  00012	d8 c9		 fmul	 ST(0), ST(1)
  00014	d9 c2		 fld	 ST(2)
  00016	d8 cb		 fmul	 ST(0), ST(3)
  00018	de c1		 faddp	 ST(1), ST(0)
  0001a	d9 fa		 fsqrt
  0001c	dd da		 fstp	 ST(2)
  0001e	dd d8		 fstp	 ST(0)

; 104  : }

  00020	c3		 ret	 0
?GetDistance@@YAMMMMM@Z ENDP				; GetDistance
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
;	COMDAT ??_GCTAICmdGohome@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTAICmdGohome@@UAEPAXI@Z PROC NEAR			; CTAICmdGohome::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTAICmdGohome@@UAE@XZ ; CTAICmdGohome::~CTAICmdGohome
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L152888
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L152888:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTAICmdGohome@@UAEPAXI@Z ENDP			; CTAICmdGohome::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEAAPAVCTSkill@@XZ ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::operator*
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Diterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEAAPAVCTSkill@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEAAPAVCTSkill@@XZ PROC NEAR ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBEAAPAVCTSkill@@XZ ENDP ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBE?AV012@H@Z ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z PROC NEAR ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE@PAPAVCTSkill@@@Z ENDP ; std::vector<CTSkill *,std::allocator<CTSkill *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<CTSkill *,std::allocator<CTSkill *> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<CTSkill *,std::allocator<CTSkill *> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<CTSkill *,std::allocator<CTSkill *> >::begin
_TEXT	ENDS
PUBLIC	??A?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAPAVCTSkill@@I@Z ; std::vector<CTSkill *,std::allocator<CTSkill *> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAPAVCTSkill@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAPAVCTSkill@@I@Z PROC NEAR ; std::vector<CTSkill *,std::allocator<CTSkill *> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@PAVCTSkill@@V?$allocator@PAVCTSkill@@@std@@@std@@QAEAAPAVCTSkill@@I@Z ENDP ; std::vector<CTSkill *,std::allocator<CTSkill *> >::operator[]
_TEXT	ENDS
PUBLIC	__real@40400000
EXTRN	?ExecAI@CTAICommand@@UAEEPAVCTMonster@@KKE@Z:NEAR ; CTAICommand::ExecAI
EXTRN	?IsBlockType@CTSkillTemp@@QAEEXZ:NEAR		; CTSkillTemp::IsBlockType
EXTRN	?FindHost@CTMonster@@QAEPAVCTPlayer@@K@Z:NEAR	; CTMonster::FindHost
EXTRN	?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z:NEAR ; CTMonster::OnEvent
EXTRN	?SendCS_MONACTION_ACK@CTPlayer@@QAEXKEMMMKE@Z:NEAR ; CTPlayer::SendCS_MONACTION_ACK
EXTRN	?EraseMaintainSkill@CTObjBase@@QAEXPAVCTSkill@@K@Z:NEAR ; CTObjBase::EraseMaintainSkill
;	COMDAT __real@40400000
CONST	SEGMENT
__real@40400000 DD 040400000r			; 3
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tmapsvr\taicmdgohome.cpp
CONST	ENDS
;	COMDAT ?ExecAI@CTAICmdGohome@@UAEEPAVCTMonster@@KKE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pMON$ = 8						; size = 4
_dwEventHost$ = 12					; size = 4
_dwRHId$ = 16						; size = 4
_bRHType$ = 20						; size = 1
?ExecAI@CTAICmdGohome@@UAEEPAVCTMonster@@KKE@Z PROC NEAR ; CTAICmdGohome::ExecAI, COMDAT
; _this$ = ecx

; 26   : {

  00000	51		 push	 ecx
  00001	56		 push	 esi

; 27   : 	if( GetDistance(pMON->m_fStartX, pMON->m_fStartZ, pMON->m_fPosX, pMON->m_fPosZ) <= ZONE_HOMESIZE )

  00002	8b 74 24 0c	 mov	 esi, DWORD PTR _pMON$[esp+4]
  00006	d9 86 1c 01 00
	00		 fld	 DWORD PTR [esi+284]
  0000c	89 4c 24 04	 mov	 DWORD PTR _this$[esp+8], ecx
  00010	d8 66 7c	 fsub	 DWORD PTR [esi+124]
  00013	d9 86 24 01 00
	00		 fld	 DWORD PTR [esi+292]
  00019	d8 a6 84 00 00
	00		 fsub	 DWORD PTR [esi+132]
  0001f	d9 c0		 fld	 ST(0)
  00021	d8 c9		 fmul	 ST(0), ST(1)
  00023	d9 c2		 fld	 ST(2)
  00025	d8 cb		 fmul	 ST(0), ST(3)
  00027	de c1		 faddp	 ST(1), ST(0)
  00029	d9 fa		 fsqrt
  0002b	dd da		 fstp	 ST(2)
  0002d	dd d8		 fstp	 ST(0)
  0002f	d8 1d 00 00 00
	00		 fcomp	 DWORD PTR __real@40400000
  00035	df e0		 fnstsw	 ax
  00037	f6 c4 41	 test	 ah, 65			; 00000041H
  0003a	7a 29		 jp	 SHORT $L152260

; 28   : 	{
; 29   : 		pMON->OnEvent(AT_ATHOME, 0, pMON->m_dwHostID, pMON->m_dwTargetID, pMON->m_bTargetType);

  0003c	8b 8e 38 01 00
	00		 mov	 ecx, DWORD PTR [esi+312]
  00042	8b 96 f8 00 00
	00		 mov	 edx, DWORD PTR [esi+248]
  00048	33 c0		 xor	 eax, eax
  0004a	8a 86 34 01 00
	00		 mov	 al, BYTE PTR [esi+308]
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	52		 push	 edx
  00053	6a 00		 push	 0
  00055	6a 0b		 push	 11			; 0000000bH
  00057	8b ce		 mov	 ecx, esi
  00059	e8 00 00 00 00	 call	 ?OnEvent@CTMonster@@QAEXW4AI_TRIGGER@@KKKE@Z ; CTMonster::OnEvent

; 30   : 		return FALSE;

  0005e	32 c0		 xor	 al, al
  00060	5e		 pop	 esi

; 55   : }

  00061	59		 pop	 ecx
  00062	c2 10 00	 ret	 16			; 00000010H
$L152260:

; 31   : 	}
; 32   : 
; 33   : 	CTPlayer *pHOST = pMON->FindHost(pMON->m_dwHostID);

  00065	8b 86 f8 00 00
	00		 mov	 eax, DWORD PTR [esi+248]
  0006b	55		 push	 ebp
  0006c	57		 push	 edi
  0006d	50		 push	 eax
  0006e	8b ce		 mov	 ecx, esi
  00070	e8 00 00 00 00	 call	 ?FindHost@CTMonster@@QAEPAVCTPlayer@@K@Z ; CTMonster::FindHost
  00075	8b e8		 mov	 ebp, eax

; 34   : 
; 35   : 	for(DWORD i=0; i<pMON->m_vMaintainSkill.size();)

  00077	33 ff		 xor	 edi, edi
  00079	53		 push	 ebx
  0007a	8d 9b 00 00 00
	00		 npad	 6
$L152264:
  00080	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00083	85 c9		 test	 ecx, ecx
  00085	74 3c		 je	 SHORT $L153094
  00087	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  0008a	2b c1		 sub	 eax, ecx
  0008c	c1 f8 02	 sar	 eax, 2
  0008f	3b f8		 cmp	 edi, eax
  00091	73 30		 jae	 SHORT $L153094

; 41   : 	}

  00093	8b c1		 mov	 eax, ecx
  00095	8d 1c bd 00 00
	00 00		 lea	 ebx, DWORD PTR [edi*4]
  0009c	8b 0c 18	 mov	 ecx, DWORD PTR [eax+ebx]
  0009f	8b 49 54	 mov	 ecx, DWORD PTR [ecx+84]
  000a2	03 c3		 add	 eax, ebx
  000a4	e8 00 00 00 00	 call	 ?IsBlockType@CTSkillTemp@@QAEEXZ ; CTSkillTemp::IsBlockType
  000a9	84 c0		 test	 al, al
  000ab	74 13		 je	 SHORT $L152266
  000ad	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  000b0	8b 14 18	 mov	 edx, DWORD PTR [eax+ebx]
  000b3	03 c3		 add	 eax, ebx
  000b5	57		 push	 edi
  000b6	52		 push	 edx
  000b7	8b ce		 mov	 ecx, esi
  000b9	e8 00 00 00 00	 call	 ?EraseMaintainSkill@CTObjBase@@QAEXPAVCTSkill@@K@Z ; CTObjBase::EraseMaintainSkill
  000be	eb c0		 jmp	 SHORT $L152264
$L152266:

; 36   : 	{
; 37   : 		if(pMON->m_vMaintainSkill[i]->m_pTSKILL->IsBlockType())
; 38   : 			pMON->EraseMaintainSkill(pMON->m_vMaintainSkill[i], i);
; 39   : 		else
; 40   : 			i++;

  000c0	47		 inc	 edi

; 41   : 	}

  000c1	eb bd		 jmp	 SHORT $L152264
$L153094:

; 42   : 
; 43   : 	if(pHOST)

  000c3	85 ed		 test	 ebp, ebp
  000c5	5b		 pop	 ebx
  000c6	74 26		 je	 SHORT $L152268

; 44   : 	{
; 45   : 		pHOST->SendCS_MONACTION_ACK(
; 46   : 			pMON->m_dwID,
; 47   : 			TA_RUN,
; 48   : 			pMON->m_fStartX,
; 49   : 			pMON->m_fStartY,
; 50   : 			pMON->m_fStartZ);

  000c8	8b 86 24 01 00
	00		 mov	 eax, DWORD PTR [esi+292]
  000ce	8b 8e 20 01 00
	00		 mov	 ecx, DWORD PTR [esi+288]
  000d4	8b 96 1c 01 00
	00		 mov	 edx, DWORD PTR [esi+284]
  000da	6a 00		 push	 0
  000dc	6a 00		 push	 0
  000de	50		 push	 eax
  000df	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  000e2	51		 push	 ecx
  000e3	52		 push	 edx
  000e4	6a 04		 push	 4
  000e6	50		 push	 eax
  000e7	8b cd		 mov	 ecx, ebp
  000e9	e8 00 00 00 00	 call	 ?SendCS_MONACTION_ACK@CTPlayer@@QAEXKEMMMKE@Z ; CTPlayer::SendCS_MONACTION_ACK
$L152268:

; 51   : 	}
; 52   : 	pMON->m_dwHostKEY++;
; 53   : 
; 54   : 	return CTAICommand::ExecAI( pMON, dwEventHost, dwRHId, bRHType);

  000ee	8b 4c 24 20	 mov	 ecx, DWORD PTR _bRHType$[esp+12]
  000f2	8b 54 24 1c	 mov	 edx, DWORD PTR _dwRHId$[esp+12]
  000f6	8b ae f4 00 00
	00		 mov	 ebp, DWORD PTR [esi+244]
  000fc	8b 44 24 18	 mov	 eax, DWORD PTR _dwEventHost$[esp+12]
  00100	51		 push	 ecx
  00101	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+20]
  00105	52		 push	 edx
  00106	50		 push	 eax
  00107	45		 inc	 ebp
  00108	56		 push	 esi
  00109	89 ae f4 00 00
	00		 mov	 DWORD PTR [esi+244], ebp
  0010f	e8 00 00 00 00	 call	 ?ExecAI@CTAICommand@@UAEEPAVCTMonster@@KKE@Z ; CTAICommand::ExecAI
  00114	5f		 pop	 edi
  00115	5d		 pop	 ebp
  00116	5e		 pop	 esi

; 55   : }

  00117	59		 pop	 ecx
  00118	c2 10 00	 ret	 16			; 00000010H
?ExecAI@CTAICmdGohome@@UAEEPAVCTMonster@@KKE@Z ENDP	; CTAICmdGohome::ExecAI
_TEXT	ENDS
END
