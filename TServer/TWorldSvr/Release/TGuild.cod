; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\TGuild.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_1EO@JCFHIKME@?$AA?$HL?$AA2?$AAD?$AAD?$AA0?$AA7?$AA5?$AA6?$AA6?$AA?9?$AA9?$AA2?$AA4?$AA8?$AA?9?$AA4?$AA7?$AA9?$AA8?$AA?9@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CH@IKEJHDDN@?$HL2DD07566?99248?94798?9A96F?9259263C@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@OGFEPDED@LocalService?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02CCDHMLDD@?9?1?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@MIGBKCMN@UnregServer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09LJBJJPCG@RegServer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07LMLHFMEG@Service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07PNHNHBAB@Install?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09LAEJNBCE@UnInstall?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04FABLJDN@Name?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@DBFDLFJJ@?$CFs?5?9Name?5?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BP@GECJKCAK@Could?5not?5open?5Service?5Manager?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06HCEGMCNE@RPCSS?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@HDJFCBEP@Could?5not?5start?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08GOBPOGDO@?$CFY?9?$CFm?9?$CFd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@JMOCNDDL@Could?5not?5open?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@GKJBBOLK@Could?5not?5stop?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NMBIIKKI@Could?5not?5delete?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?GetAppId@CTWorldSvrModule@@SAPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAppIdT@CTWorldSvrModule@@SAPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateRegistryAppId@CTWorldSvrModule@@SGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterAppId@CTWorldSvrModule@@QAEJ_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Install@CTWorldSvrModule@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTGuild@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTGuild@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GtagTGUILDARTICLE@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GtagTGUILDMEMBER@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GtagTTACTICSMEMBER@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1tagTGUILDARTICLE@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1tagTGUILDMEMBER@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1tagTTACTICSMEMBER@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddMember@CTGuild@@QAEEPAUtagTGUILDMEMBER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DelMember@CTGuild@@QAEXPAUtagTGUILDMEMBER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Designate@CTGuild@@QAEPAUtagTCHARACTER@@KE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CreatePeerage@CTGuild@@QAEPAUtagTCHARACTER@@KE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindMember@CTGuild@@QAEPAUtagTGUILDMEMBER@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindMember@CTGuild@@QAEPAUtagTGUILDMEMBER@@V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindDesignate@CTGuild@@QAEPAUtagTGUILDMEMBER@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindChief@CTGuild@@QAEPAUtagTGUILDMEMBER@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindDuty@CTGuild@@QAEEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindPeer@CTGuild@@QAEEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMemberConnection@CTGuild@@QAEXKPAUtagTCHARACTER@@_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMemberLevel@CTGuild@@QAEXKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckPeerage@CTGuild@@QAEEEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMaxMemberCnt@CTGuild@@QAEEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetMemberSize@CTGuild@@QAEEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanAddMember@CTGuild@@QAEEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanAddTactics@CTGuild@@QAEEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateLevel@CTGuild@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GainEXP@CTGuild@@QAEEPAUtagTGUILDMEMBER@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GainMoney@CTGuild@@QAEEKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UseMoney@CTGuild@@QAEE_JE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UseMoney@CTGuild@@QAEEKKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Contribution@CTGuild@@QAEEKKKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetArticleSize@CTGuild@@QAEEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddArticle@CTGuild@@QAEXKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0tagTGUILDARTICLE@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddArticle@CTGuild@@QAEKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DelArticle@CTGuild@@QAEEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateArticle@CTGuild@@QAEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetFame@CTGuild@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCabinetSize@CTGuild@@QAEEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PutInItem@CTGuild@@QAEXKPAUtagTITEM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindCabinetItem@CTGuild@@QAEPAUtagTITEM@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?TakeOutItem@CTGuild@@QAEEKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindTactics@CTGuild@@QAEPAUtagTTACTICSMEMBER@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindTactics@CTGuild@@QAEPAUtagTTACTICSMEMBER@@V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetTacticsConnection@CTGuild@@QAEXKPAUtagTCHARACTER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GainPvPoint@CTGuild@@QAEXKEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UsePvPoint@CTGuild@@QAEXKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PointLog@CTGuild@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0tagTGUILDPOINTREWARD@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1tagTGUILDPOINTREWARD@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CalcWeekRecord@CTGuild@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CalcWeekRecord@CTGuild@@QAEXPAUtagTGUILDMEMBER@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanApplyWar@CTGuild@@QAEEG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddTactics@CTGuild@@QAEEPAUtagTTACTICSMEMBER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DelTactics@CTGuild@@QAEEPAUtagTTACTICSMEMBER@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCastleApplicantCount@CTGuild@@QAEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetCastleApplicantCount@CTGuild@@QAEXPAV?$map@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Tokenize@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBE?AV12@PBDAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAAXPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@0@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAUtagTENTRYRECORD@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTITEM@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$map@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$vector@KV?$allocator@K@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?pop_back@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE?AViterator@12@V312@ABUtagTGUILDPOINTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterAppId@?$CAtlServiceModuleT@VCTWorldSvrModule@@$0GE@@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsInstalled@?$CAtlServiceModuleT@VCTWorldSvrModule@@$0GE@@ATL@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Uninstall@?$CAtlServiceModuleT@VCTWorldSvrModule@@$0GE@@ATL@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlExeModuleT@VCTWorldSvrModule@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CAtlExeModuleT@VCTWorldSvrModule@@@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterServer@?$CAtlModuleT@VCTWorldSvrModule@@@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterServer@?$CAtlModuleT@VCTWorldSvrModule@@@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddCommonRGSReplacements@?$CAtlModuleT@VCTWorldSvrModule@@@ATL@@UAEJPAUIRegistrarBase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTITEM@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@QAE@ABKABQAUtagTGUILDARTICLE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAUtagTITEM@@@std@@QAE@ABKABQAUtagTITEM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@QAE@ABKABQAUtagTGUILDMEMBER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@QAE@ABKABQAUtagTTACTICSMEMBER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGG@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBGG@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@$$CBGG@std@@QAE@ABG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CAtlExeModuleT@VCTWorldSvrModule@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlModuleT@VCTWorldSvrModule@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Compare@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Mid@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBE?AV12@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FormatV@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEXPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringSpanIncluding@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringSpanExcluding@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@K@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@G@std@@QBE_NABG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTITEM@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTITEM@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@KV?$allocator@K@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@KV?$allocator@K@std@@@std@@IAE@V?$allocator@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?empty@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXPAUtagTGUILDPOINTREWARD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert_n@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXViterator@12@IABUtagTGUILDPOINTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAE@V?$allocator@UtagTGUILDPOINTREWARD@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UninitializeCom@?$CAtlExeModuleT@VCTWorldSvrModule@@@ATL@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTITEM@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEAAUtagTENTRYRECORD@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBGG@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@SAABGABU?$pair@$$CBGG@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBGG@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0tagTGUILDPOINTREWARD@@QAE@ABU0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@K@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@K@std@@QAEXPAKI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@K@std@@QAEPAKI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTITEM@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTITEM@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?capacity@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ufill@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEPAUtagTGUILDPOINTREWARD@@PAU3@IABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEXPAUtagTGUILDPOINTREWARD@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEPAUtagTGUILDPOINTREWARD@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Gconst_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEABUtagTENTRYRECORD@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBGG@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGG@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@K@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBGG@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTITEM@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGG@2@D@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTCASHITMSALE@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTCASHITMSALE@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagTCASHITMSALE@@IU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@IABU1@AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@GIG@std@@YAXPAGIABGAAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagMONREGEN@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagMONREGEN@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagMONREGEN@@IU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@IABU1@AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagLOTTERY@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagLOTTERY@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagLOTTERY@@IU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@IABU1@AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTENTRYRECORD@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTENTRYRECORD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@YAXPAUtagTENTRYRECORD@@0AAV?$allocator@UtagTENTRYRECORD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@0AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagTCASHITMSALE@@PAU1@@std@@YAPAUtagTCASHITMSALE@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAGPAGV?$allocator@G@std@@@std@@YAPAGPAG00AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAGPAG@std@@YAPAGPAG00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@0AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagMONREGEN@@PAU1@@std@@YAPAUtagMONREGEN@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@0AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagLOTTERY@@PAU1@@std@@YAPAUtagLOTTERY@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTNMTREWARD@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTNMTREWARD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@YAXPAUtagTNMTREWARD@@0AAV?$allocator@UtagTNMTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy@PAUtagTENTRYRECORD@@PAU1@@std@@YAPAUtagTENTRYRECORD@@PAU1@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@0AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@PAUtagTGUILDPOINTREWARD@@@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEPAUtagTGUILDPOINTREWARD@@PAU2@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill@PAUtagTGUILDPOINTREWARD@@U1@@std@@YAXPAUtagTGUILDPOINTREWARD@@0ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$copy_backward@PAUtagTGUILDPOINTREWARD@@PAU1@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@K@std@@YAPAKIPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_fill_n@PAUtagTGUILDPOINTREWARD@@IU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@IABU1@AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@UtagTGUILDPOINTREWARD@@@std@@YAPAUtagTGUILDPOINTREWARD@@IPAU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTITEM@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTITEM@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4tagTGUILDPOINTREWARD@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTENTRYRECORD@@@std@@QAEXPAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTNMTREWARD@@@std@@QAEXPAUtagTNMTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAGIG@std@@YAXPAGIABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@GG@std@@YAPAGPAG00AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_opt@PAUtagTENTRYRECORD@@PAU1@@std@@YAPAUtagTENTRYRECORD@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTGUILDPOINTREWARD@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTGUILDPOINTREWARD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@0AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagTGUILDPOINTREWARD@@PAU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagTGUILDPOINTREWARD@@PAU1@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagTGUILDPOINTREWARD@@IU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@IABU1@AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTENTRYRECORD@@@std@@YAXPAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagTCASHITMSALE@@U1@@std@@YAXPAUtagTCASHITMSALE@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTCASHITMSALE@@@std@@YAXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagMONREGEN@@U1@@std@@YAXPAUtagMONREGEN@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagMONREGEN@@@std@@YAXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagLOTTERY@@U1@@std@@YAXPAUtagLOTTERY@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagLOTTERY@@@std@@YAXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTNMTREWARD@@@std@@YAXPAUtagTNMTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEXPAUtagTGUILDPOINTREWARD@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEXPAUtagTGUILDPOINTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagTGUILDPOINTREWARD@@PAU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagTGUILDPOINTREWARD@@U1@@std@@YAXPAUtagTGUILDPOINTREWARD@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTGUILDPOINTREWARD@@@std@@YAXPAUtagTGUILDPOINTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GtagTGUILDPOINTREWARD@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_StdGlobalInterfaceTable
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetLockCount@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@?$ChTraitsCRT@D@ATL@@SAHPADPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFormattedLength@?$ChTraitsCRT@D@ATL@@SAHPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAtlModule@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Term@CAtlModule@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlCallTermFunc@ATL@@YGXPAU_ATL_MODULE70@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Term@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAGI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@IAEXPAUtagTENTRYRECORD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@YAXPAUtagTENTRYRECORD@@0AAV?$allocator@UtagTENTRYRECORD@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAtlException@ATL@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI1?AVCAtlException@ATL@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA1?AVCAtlException@ATL@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVCAtlException@ATL@@@84
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVCAtlException@ATL@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@CTime@ATL@@QBE?AV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@2@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTime@ATL@@QAE@_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CalcMoney@@YAX_JAAK11@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CalcMoney@@YA_JKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@UtagTENTRYRECORD@@@std@@QAEXPAUtagTENTRYRECORD@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlLoadString@ATL@@YAHIPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckImplicitLoad@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindStringResourceInstance@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WordCmpI@CAtlModule@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindOneOf@CAtlModule@ATL@@SAPBDPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStringValue@CRegKey@ATL@@QAEJPBD0K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteValue@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlHresultFromWin32@ATL@@YAJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_05PDIKPLII@AppID?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?UpdateRegistryFromResourceS@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegObject@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IRegistrarBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CRegObject@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@CRegObject@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CRegObject@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRegObject@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearReplacements@CRegObject@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@CComFakeCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearReplacements@CExpansionVector@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetKeyAt@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetValueAt@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@CComFakeCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRegObject@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CExpansionVector@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CExpansionVector@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegObject@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlHresultFromLastError@ATL@@YAJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EscapeSingleQuote@CAtlModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAHPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@CExpansionVector@ATL@@QAEHPBDPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEHABQADABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalSetAtIndex@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXHABQADABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?2PAD@?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?3PAD@?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAXPAXPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?2PAG@?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?3PAG@?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAXPAXPAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_1BG@JBACFMF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA_?$AAR?$AAa?$AAw?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1BC@KAILKFFG@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ResourceRegister@CRegObject@ATL@@QAGJPBGI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterFromResource@CRegObject@ATL@@IAEJPBGPBD1H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegParser@ATL@@QAE@PAVCRegObject@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterBuffer@CRegParser@ATL@@QAEJPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PreProcessBuffer@CRegParser@ATL@@QAEJPADPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CParseBuffer@CRegParser@ATL@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CParseBuffer@CRegParser@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StrChrA@CRegParser@ATL@@KAPADPADD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StrFromMap@CRegObject@ATL@@QAEPBGPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lookup@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEPAGABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindKey@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualKey@CExpansionVectorEqualHelper@ATL@@SA_NQAD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddString@CParseBuffer@CRegParser@ATL@@QAEHPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CParseBuffer@CRegParser@ATL@@QAEHPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddChar@CParseBuffer@CRegParser@ATL@@QAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CParseBuffer@CRegParser@ATL@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04OHBKMIBJ@HKCR?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04KIFLFONO@HKCU?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04CBBMIBLK@HKLM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03DLBIJLAB@HKU?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04OFOCGAOH@HKPD?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04POMNGLEL@HKDD?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04LEMDOLAJ@HKCC?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@JBJOLKMF@HKEY_CLASSES_ROOT?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@GMMMKLBI@HKEY_CURRENT_USER?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@GIIFIKDM@HKEY_LOCAL_MACHINE?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@OEMMANAM@HKEY_USERS?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@IDBEHNDO@HKEY_PERFORMANCE_DATA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@MJDLIIGK@HKEY_DYN_DATA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@NLNNHLLF@HKEY_CURRENT_CONFIG?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?map@?2??HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z@4QBUkeymap@23@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?NextToken@CRegParser@ATL@@IAEJPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndOfVar@CRegParser@ATL@@IAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsSpace@CRegParser@ATL@@IAEHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GenerateError@CRegParser@ATL@@IAEJI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterSubkeys@CRegParser@ATL@@IAEJPADPAUHKEY__@@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_06JBKGCNBB@Delete?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03LAIAPFCB@Val?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01CPLAODJH@S?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01PLPBNMEI@M?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01HMGJMAIH@B?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?$S4@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4IA
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ??0?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMultiStringValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDWORDValue@CRegKey@ATL@@QAEJPBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChToByte@CRegParser@ATL@@KAED@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPAEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SkipAssignment@CRegParser@ATL@@IAEJPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanForceRemoveKey@CRegParser@ATL@@IAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?rgszNeverDelete@CRegParser@ATL@@1QBQBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05GIBEAPNE@CLSID?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08PICKODJL@FileType?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09JKPGEJCH@Interface?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08PPIOJEA@Hardware?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04IHBFOLAC@Mime?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03DDIMFGBA@SAM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08LOPHEHKG@SECURITY?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06FDHFNJBJ@SYSTEM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08KEKAJNJI@Software?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CRegKey@ATL@@QAEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ResourceUnregister@CRegObject@ATL@@QAGJPBGI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_1M@PPPPCDEP@?$AAA?$AAP?$AAP?$AAI?$AAD?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?rgszNeverDelete@CRegParser@ATL@@1QBQBDB	; ATL::CRegParser::rgszNeverDelete
PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
PUBLIC	??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@	; `string'
PUBLIC	??_C@_08PICKODJL@FileType?$AA@			; `string'
PUBLIC	??_C@_09JKPGEJCH@Interface?$AA@			; `string'
PUBLIC	??_C@_08PPIOJEA@Hardware?$AA@			; `string'
PUBLIC	??_C@_04IHBFOLAC@Mime?$AA@			; `string'
PUBLIC	??_C@_03DDIMFGBA@SAM?$AA@			; `string'
PUBLIC	??_C@_08LOPHEHKG@SECURITY?$AA@			; `string'
PUBLIC	??_C@_06FDHFNJBJ@SYSTEM?$AA@			; `string'
PUBLIC	??_C@_08KEKAJNJI@Software?$AA@			; `string'
PUBLIC	??_C@_07KJLOKDKB@TypeLib?$AA@			; `string'
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	?m_libid@CAtlModule@ATL@@2U_GUID@@A		; ATL::CAtlModule::m_libid
PUBLIC	_CLSID_StdGlobalInterfaceTable
PUBLIC	??_C@_05GIBEAPNE@CLSID?$AA@			; `string'
PUBLIC	??_C@_05PDIKPLII@AppID?$AA@			; `string'
PUBLIC	??_C@_01CPLAODJH@S?$AA@				; `string'
PUBLIC	??_C@_01PLPBNMEI@M?$AA@				; `string'
PUBLIC	??_C@_01CKDDGHAB@D?$AA@				; `string'
PUBLIC	??_C@_01HMGJMAIH@B?$AA@				; `string'
PUBLIC	??_C@_03LAIAPFCB@Val?$AA@			; `string'
PUBLIC	??_C@_0M@DBGDLGLL@ForceRemove?$AA@		; `string'
PUBLIC	??_C@_08KAAPDIAN@NoRemove?$AA@			; `string'
PUBLIC	??_C@_06JBKGCNBB@Delete?$AA@			; `string'
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA	; ATL::_pPerfRegFunc
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZA			; ATL::_pPerfUnRegFunc
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CAtlModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CAtlModule::m_libid
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA DD 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZA DD 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
;	COMDAT _CLSID_StdGlobalInterfaceTable
CONST	SEGMENT
_CLSID_StdGlobalInterfaceTable DD 0323H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ??_C@_01CPLAODJH@S?$AA@
CONST	SEGMENT
??_C@_01CPLAODJH@S?$AA@ DB 'S', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szStringVal DD	FLAT:??_C@_01CPLAODJH@S?$AA@
CONST	ENDS
;	COMDAT ??_C@_01PLPBNMEI@M?$AA@
CONST	SEGMENT
??_C@_01PLPBNMEI@M?$AA@ DB 'M', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_multiszStringVal DD FLAT:??_C@_01PLPBNMEI@M?$AA@
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D?$AA@
CONST	SEGMENT
??_C@_01CKDDGHAB@D?$AA@ DB 'D', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szDwordVal DD	FLAT:??_C@_01CKDDGHAB@D?$AA@
CONST	ENDS
;	COMDAT ??_C@_01HMGJMAIH@B?$AA@
CONST	SEGMENT
??_C@_01HMGJMAIH@B?$AA@ DB 'B', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szBinaryVal DD	FLAT:??_C@_01HMGJMAIH@B?$AA@
CONST	ENDS
;	COMDAT ??_C@_03LAIAPFCB@Val?$AA@
CONST	SEGMENT
??_C@_03LAIAPFCB@Val?$AA@ DB 'Val', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szValToken DD	FLAT:??_C@_03LAIAPFCB@Val?$AA@
CONST	ENDS
;	COMDAT ??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	SEGMENT
??_C@_0M@DBGDLGLL@ForceRemove?$AA@ DB 'ForceRemove', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
_szForceRemove DD FLAT:??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	ENDS
;	COMDAT ??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	SEGMENT
??_C@_08KAAPDIAN@NoRemove?$AA@ DB 'NoRemove', 00H	; `string'
CONST	ENDS
CONST	SEGMENT
_szNoRemove DD	FLAT:??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	ENDS
;	COMDAT ??_C@_06JBKGCNBB@Delete?$AA@
CONST	SEGMENT
??_C@_06JBKGCNBB@Delete?$AA@ DB 'Delete', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
_szDelete DD	FLAT:??_C@_06JBKGCNBB@Delete?$AA@
CONST	ENDS
;	COMDAT ??_C@_05PDIKPLII@AppID?$AA@
CONST	SEGMENT
??_C@_05PDIKPLII@AppID?$AA@ DB 'AppID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05GIBEAPNE@CLSID?$AA@
CONST	SEGMENT
??_C@_05GIBEAPNE@CLSID?$AA@ DB 'CLSID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
CONST	SEGMENT
??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@ DB 'Component Categories', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PICKODJL@FileType?$AA@
CONST	SEGMENT
??_C@_08PICKODJL@FileType?$AA@ DB 'FileType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JKPGEJCH@Interface?$AA@
CONST	SEGMENT
??_C@_09JKPGEJCH@Interface?$AA@ DB 'Interface', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PPIOJEA@Hardware?$AA@
CONST	SEGMENT
??_C@_08PPIOJEA@Hardware?$AA@ DB 'Hardware', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04IHBFOLAC@Mime?$AA@
CONST	SEGMENT
??_C@_04IHBFOLAC@Mime?$AA@ DB 'Mime', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DDIMFGBA@SAM?$AA@
CONST	SEGMENT
??_C@_03DDIMFGBA@SAM?$AA@ DB 'SAM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08LOPHEHKG@SECURITY?$AA@
CONST	SEGMENT
??_C@_08LOPHEHKG@SECURITY?$AA@ DB 'SECURITY', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FDHFNJBJ@SYSTEM?$AA@
CONST	SEGMENT
??_C@_06FDHFNJBJ@SYSTEM?$AA@ DB 'SYSTEM', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KEKAJNJI@Software?$AA@
CONST	SEGMENT
??_C@_08KEKAJNJI@Software?$AA@ DB 'Software', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	SEGMENT
??_C@_07KJLOKDKB@TypeLib?$AA@ DB 'TypeLib', 00H		; `string'
CONST	ENDS
;	COMDAT ?rgszNeverDelete@CRegParser@ATL@@1QBQBDB
CONST	SEGMENT
?rgszNeverDelete@CRegParser@ATL@@1QBQBDB DD FLAT:??_C@_05PDIKPLII@AppID?$AA@ ; ATL::CRegParser::rgszNeverDelete
	DD	FLAT:??_C@_05GIBEAPNE@CLSID?$AA@
	DD	FLAT:??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
	DD	FLAT:??_C@_08PICKODJL@FileType?$AA@
	DD	FLAT:??_C@_09JKPGEJCH@Interface?$AA@
	DD	FLAT:??_C@_08PPIOJEA@Hardware?$AA@
	DD	FLAT:??_C@_04IHBFOLAC@Mime?$AA@
	DD	FLAT:??_C@_03DDIMFGBA@SAM?$AA@
	DD	FLAT:??_C@_08LOPHEHKG@SECURITY?$AA@
	DD	FLAT:??_C@_06FDHFNJBJ@SYSTEM?$AA@
	DD	FLAT:??_C@_08KEKAJNJI@Software?$AA@
	DD	FLAT:??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	ENDS
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp__InterlockedExchange@8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_szACP$ = -12						; size = 7
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

  00000	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00008	56		 push	 esi
  00009	89 44 24 0c	 mov	 DWORD PTR __$ArrayPad$[esp+16], eax

; 102  : 	UINT nACP = 0;

  0000d	33 f6		 xor	 esi, esi

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetThreadLocale@0

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

  00015	6a 07		 push	 7
  00017	8d 4c 24 08	 lea	 ecx, DWORD PTR _szACP$[esp+20]
  0001b	51		 push	 ecx
  0001c	68 04 10 00 00	 push	 4100			; 00001004H
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocaleInfoA@16
  00028	85 c0		 test	 eax, eax
  0002a	74 21		 je	 SHORT $L140400

; 111  : 	{
; 112  : 		char* pch = szACP;
; 113  : 		while (*pch != '\0')

  0002c	8a 44 24 04	 mov	 al, BYTE PTR _szACP$[esp+16]
  00030	84 c0		 test	 al, al
  00032	8d 4c 24 04	 lea	 ecx, DWORD PTR _szACP$[esp+16]
  00036	74 15		 je	 SHORT $L140400
$L58550:

; 114  : 		{
; 115  : 			nACP *= 10;
; 116  : 			nACP += *pch++ - '0';

  00038	0f be c0	 movsx	 eax, al
  0003b	8d 14 b6	 lea	 edx, DWORD PTR [esi+esi*4]
  0003e	41		 inc	 ecx
  0003f	8d 74 50 d0	 lea	 esi, DWORD PTR [eax+edx*2-48]
  00043	8a 01		 mov	 al, BYTE PTR [ecx]
  00045	84 c0		 test	 al, al
  00047	75 ef		 jne	 SHORT $L58550

; 117  : 		}
; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

  00049	85 f6		 test	 esi, esi
  0004b	75 14		 jne	 SHORT $L140401
$L140400:

; 121  : 		nACP = ::GetACP();

  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetACP@0
  00053	5e		 pop	 esi

; 122  : 
; 123  : 	return nACP;
; 124  : }

  00054	8b 4c 24 08	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+12]
  00058	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	c3		 ret	 0
$L140401:
  00061	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16]
  00065	8b c6		 mov	 eax, esi
  00067	5e		 pop	 esi
  00068	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00070	c3		 ret	 0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
_TEXT	ENDS
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 128  : 	return( CP_THREAD_ACP );

  00000	b8 03 00 00 00	 mov	 eax, 3

; 129  : }

  00005	c3		 ret	 0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
EXTRN	__imp__GetVersionExA@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_ver$ = -152						; size = 148
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

  00000	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	89 84 24 94 00
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+152], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );
; 139  : 	::GetVersionEx( &ver );

  00012	8d 04 24	 lea	 eax, DWORD PTR _ver$[esp+152]
  00015	50		 push	 eax
  00016	c7 44 24 04 94
	00 00 00	 mov	 DWORD PTR _ver$[esp+156], 148 ; 00000094H
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersionExA@4

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

  00024	83 7c 24 10 02	 cmp	 DWORD PTR _ver$[esp+168], 2
  00029	75 0c		 jne	 SHORT $L58560
  0002b	83 7c 24 04 05	 cmp	 DWORD PTR _ver$[esp+156], 5

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

  00030	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal
  00035	73 05		 jae	 SHORT $L58561
$L58560:

; 144  : 	}
; 145  : 	else
; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

  00037	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L58561:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

  0003c	50		 push	 eax
  0003d	68 00 00 00 00	 push	 OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedExchange@8

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

  00048	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP

; 152  : }

  0004e	8b 8c 24 94 00
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+152]
  00055	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005a	81 c4 98 00 00
	00		 add	 esp, 152		; 00000098H
  00060	c3		 ret	 0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
PUBLIC	?_AtlGetConversionACP@ATL@@YGIXZ		; ATL::_AtlGetConversionACP
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetConversionACP@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetConversionACP, COMDAT

; 158  : 	return( g_pfnGetThreadACP() );

  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
?_AtlGetConversionACP@ATL@@YGIXZ ENDP			; ATL::_AtlGetConversionACP
_TEXT	ENDS
PUBLIC	?GetMaxMemberCnt@CTGuild@@QAEEXZ		; CTGuild::GetMaxMemberCnt
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tguild.cpp
;	COMDAT ?GetMaxMemberCnt@CTGuild@@QAEEXZ
_TEXT	SEGMENT
?GetMaxMemberCnt@CTGuild@@QAEEXZ PROC NEAR		; CTGuild::GetMaxMemberCnt, COMDAT
; _this$ = ecx

; 260  : 	return m_pTLEVEL->m_bMaxCnt;

  00000	8b 81 c8 00 00
	00		 mov	 eax, DWORD PTR [ecx+200]
  00006	8a 40 08	 mov	 al, BYTE PTR [eax+8]

; 261  : }

  00009	c3		 ret	 0
?GetMaxMemberCnt@CTGuild@@QAEEXZ ENDP			; CTGuild::GetMaxMemberCnt
_TEXT	ENDS
PUBLIC	??0CAtlException@ATL@@QAE@J@Z			; ATL::CAtlException::CAtlException
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
;	COMDAT ??0CAtlException@ATL@@QAE@J@Z
_TEXT	SEGMENT
_hr$ = 8						; size = 4
??0CAtlException@ATL@@QAE@J@Z PROC NEAR			; ATL::CAtlException::CAtlException, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR _hr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 41   : 	}

  00008	c2 04 00	 ret	 4
??0CAtlException@ATL@@QAE@J@Z ENDP			; ATL::CAtlException::CAtlException
_TEXT	ENDS
PUBLIC	?AtlThrow@ATL@@YGXJ@Z				; ATL::AtlThrow
PUBLIC	__TI1?AVCAtlException@ATL@@
PUBLIC	__CTA1?AVCAtlException@ATL@@
PUBLIC	??_R0?AVCAtlException@ATL@@@8			; ATL::CAtlException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVCAtlException@ATL@@@84
EXTRN	__CxxThrowException@8:NEAR
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
;	COMDAT __TI1?AVCAtlException@ATL@@
xdata$x	SEGMENT
__TI1?AVCAtlException@ATL@@ DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1?AVCAtlException@ATL@@
xdata$x	ENDS
;	COMDAT __CTA1?AVCAtlException@ATL@@
xdata$x	SEGMENT
__CTA1?AVCAtlException@ATL@@ DD 01H
	DD	FLAT:__CT??_R0?AVCAtlException@ATL@@@84
xdata$x	ENDS
;	COMDAT __CT??_R0?AVCAtlException@ATL@@@84
xdata$x	SEGMENT
__CT??_R0?AVCAtlException@ATL@@@84 DD 00H
	DD	FLAT:??_R0?AVCAtlException@ATL@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0?AVCAtlException@ATL@@@8
_DATA	SEGMENT
??_R0?AVCAtlException@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CAtlException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAtlException@ATL@@', 00H
; Function compile flags: /Ogty
_DATA	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T140429 = 8						; size = 4
_hr$ = 8						; size = 4
?AtlThrow@ATL@@YGXJ@Z PROC NEAR				; ATL::AtlThrow, COMDAT

; 62   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );
; 63   : #ifdef _AFX
; 64   : 	if( hr == E_OUTOFMEMORY )
; 65   : 	{
; 66   : 		AfxThrowMemoryException();
; 67   : 	}
; 68   : 	else
; 69   : 	{
; 70   : 		AfxThrowOleException( hr );
; 71   : 	}
; 72   : #else
; 73   : 	throw CAtlException( hr );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _hr$[esp-4]
  00004	68 00 00 00 00	 push	 OFFSET FLAT:__TI1?AVCAtlException@ATL@@
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR $T140429[esp]
  0000d	51		 push	 ecx
  0000e	89 44 24 0c	 mov	 DWORD PTR $T140429[esp+4], eax
  00012	e8 00 00 00 00	 call	 __CxxThrowException@8
$L140436:
$L140435:
  00017	cc		 int	 3
?AtlThrow@ATL@@YGXJ@Z ENDP				; ATL::AtlThrow
_TEXT	ENDS
PUBLIC	?SetFame@CTGuild@@QAEXKK@Z			; CTGuild::SetFame
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tguild.cpp
;	COMDAT ?SetFame@CTGuild@@QAEXKK@Z
_TEXT	SEGMENT
_dwFame$ = 8						; size = 4
_dwFameColor$ = 12					; size = 4
?SetFame@CTGuild@@QAEXKK@Z PROC NEAR			; CTGuild::SetFame, COMDAT
; _this$ = ecx

; 488  : 	m_dwFame = dwFame;

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _dwFame$[esp-4]

; 489  : 	m_dwFameColor = dwFameColor;

  00004	8b 54 24 08	 mov	 edx, DWORD PTR _dwFameColor$[esp-4]
  00008	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0000b	89 51 18	 mov	 DWORD PTR [ecx+24], edx

; 490  : }

  0000e	c2 08 00	 ret	 8
?SetFame@CTGuild@@QAEXKK@Z ENDP				; CTGuild::SetFame
_TEXT	ENDS
PUBLIC	?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
EXTRN	__imp__LockResource@4:NEAR
EXTRN	__imp__LoadResource@8:NEAR
EXTRN	__imp__SizeofResource@8:NEAR
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_hResource$ = 12					; size = 4
_id$ = 16						; size = 4
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z PROC NEAR ; ATL::_AtlGetStringResourceImage, COMDAT

; 239  : {

  00000	53		 push	 ebx

; 240  : 	const ATLSTRINGRESOURCEIMAGE* pImage;
; 241  : 	const ATLSTRINGRESOURCEIMAGE* pImageEnd;
; 242  : 	ULONG nResourceSize;
; 243  : 	HGLOBAL hGlobal;
; 244  : 	UINT iIndex;
; 245  : 
; 246  : 	hGlobal = ::LoadResource( hInstance, hResource );

  00001	8b 5c 24 08	 mov	 ebx, DWORD PTR _hInstance$[esp]
  00005	57		 push	 edi
  00006	8b 7c 24 10	 mov	 edi, DWORD PTR _hResource$[esp+4]
  0000a	57		 push	 edi
  0000b	53		 push	 ebx
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadResource@8

; 247  : 	if( hGlobal == NULL )

  00012	85 c0		 test	 eax, eax
  00014	75 03		 jne	 SHORT $L59408
  00016	5f		 pop	 edi
  00017	5b		 pop	 ebx

; 272  : 	{
; 273  : 		return( NULL );
; 274  : 	}
; 275  : 
; 276  : 	return( pImage );
; 277  : }

  00018	c3		 ret	 0
$L59408:
  00019	56		 push	 esi

; 248  : 	{
; 249  : 		return( NULL );
; 250  : 	}
; 251  : 
; 252  : 	pImage = (const ATLSTRINGRESOURCEIMAGE*)::LockResource( hGlobal );

  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LockResource@4
  00021	8b f0		 mov	 esi, eax

; 253  : 	if( pImage == NULL )

  00023	85 f6		 test	 esi, esi
  00025	75 06		 jne	 SHORT $L59410
$L140445:
  00027	5e		 pop	 esi
  00028	5f		 pop	 edi

; 254  : 	{
; 255  : 		return( NULL );

  00029	33 c0		 xor	 eax, eax
  0002b	5b		 pop	 ebx

; 272  : 	{
; 273  : 		return( NULL );
; 274  : 	}
; 275  : 
; 276  : 	return( pImage );
; 277  : }

  0002c	c3		 ret	 0
$L59410:

; 256  : 	}
; 257  : 
; 258  : 	nResourceSize = ::SizeofResource( hInstance, hResource );

  0002d	57		 push	 edi
  0002e	53		 push	 ebx
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SizeofResource@8

; 259  : 	pImageEnd = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+nResourceSize);
; 260  : 	iIndex = id&0x000f;

  00035	8b 4c 24 18	 mov	 ecx, DWORD PTR _id$[esp+8]
  00039	03 c6		 add	 eax, esi
  0003b	83 e1 0f	 and	 ecx, 15			; 0000000fH

; 261  : 
; 262  : 	while( (iIndex > 0) && (pImage < pImageEnd) )

  0003e	76 0e		 jbe	 SHORT $L59414
$L59413:
  00040	3b f0		 cmp	 esi, eax
  00042	73 e3		 jae	 SHORT $L140445

; 263  : 	{
; 264  : 		pImage = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+(sizeof( ATLSTRINGRESOURCEIMAGE )+(pImage->nLength*sizeof( WCHAR ))));
; 265  : 		iIndex--;

  00044	49		 dec	 ecx
  00045	0f b7 16	 movzx	 edx, WORD PTR [esi]
  00048	8d 74 56 02	 lea	 esi, DWORD PTR [esi+edx*2+2]
  0004c	75 f2		 jne	 SHORT $L59413
$L59414:

; 266  : 	}
; 267  : 	if( pImage >= pImageEnd )

  0004e	3b f0		 cmp	 esi, eax

; 268  : 	{
; 269  : 		return( NULL );

  00050	73 d5		 jae	 SHORT $L140445

; 270  : 	}
; 271  : 	if( pImage->nLength == 0 )

  00052	66 8b 06	 mov	 ax, WORD PTR [esi]
  00055	66 f7 d8	 neg	 ax
  00058	1b c0		 sbb	 eax, eax
  0005a	23 c6		 and	 eax, esi
  0005c	5e		 pop	 esi
  0005d	5f		 pop	 edi
  0005e	5b		 pop	 ebx

; 272  : 	{
; 273  : 		return( NULL );
; 274  : 	}
; 275  : 
; 276  : 	return( pImage );
; 277  : }

  0005f	c3		 ret	 0
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ENDP ; ATL::_AtlGetStringResourceImage
_TEXT	ENDS
PUBLIC	?GainPvPoint@CTGuild@@QAEXKEE@Z			; CTGuild::GainPvPoint
EXTRN	?_AtlModule@@3VCTWorldSvrModule@@A:BYTE		; _AtlModule
EXTRN	?SendDM_GUILDPVPOINT_REQ@CTWorldSvrModule@@QAEXKKKK@Z:NEAR ; CTWorldSvrModule::SendDM_GUILDPVPOINT_REQ
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tguild.cpp
;	COMDAT ?GainPvPoint@CTGuild@@QAEXKEE@Z
_TEXT	SEGMENT
_dwPoint$ = 8						; size = 4
_bEvent$ = 12						; size = 1
_bType$ = 16						; size = 1
?GainPvPoint@CTGuild@@QAEXKEE@Z PROC NEAR		; CTGuild::GainPvPoint, COMDAT
; _this$ = ecx

; 562  : 	if(!dwPoint)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _dwPoint$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 30		 je	 SHORT $L135054

; 563  : 		return;
; 564  : 
; 565  : 	if(bType & PVP_TOTAL)

  00008	8a 54 24 0c	 mov	 dl, BYTE PTR _bType$[esp-4]
  0000c	f6 c2 01	 test	 dl, 1
  0000f	74 06		 je	 SHORT $L135056

; 566  : 	{
; 567  : 		m_dwPvPTotalPoint += dwPoint;

  00011	01 41 50	 add	 DWORD PTR [ecx+80], eax

; 568  : 		m_dwPvPMonthPoint += dwPoint;

  00014	01 41 54	 add	 DWORD PTR [ecx+84], eax
$L135056:

; 569  : 	}
; 570  : 
; 571  : 	if(bType & PVP_USEABLE)

  00017	f6 c2 02	 test	 dl, 2
  0001a	74 03		 je	 SHORT $L135057

; 572  : 		m_dwPvPUseablePoint += dwPoint;

  0001c	01 41 4c	 add	 DWORD PTR [ecx+76], eax
$L135057:

; 573  : 
; 574  : 	_AtlModule.SendDM_GUILDPVPOINT_REQ(
; 575  : 		m_dwID,
; 576  : 		m_dwPvPTotalPoint,
; 577  : 		m_dwPvPUseablePoint,
; 578  : 		m_dwPvPMonthPoint);

  0001f	8b 41 54	 mov	 eax, DWORD PTR [ecx+84]
  00022	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  00025	50		 push	 eax
  00026	8b 41 50	 mov	 eax, DWORD PTR [ecx+80]
  00029	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0002b	52		 push	 edx
  0002c	50		 push	 eax
  0002d	51		 push	 ecx
  0002e	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTWorldSvrModule@@A
  00033	e8 00 00 00 00	 call	 ?SendDM_GUILDPVPOINT_REQ@CTWorldSvrModule@@QAEXKKKK@Z ; CTWorldSvrModule::SendDM_GUILDPVPOINT_REQ
$L135054:

; 579  : }

  00038	c2 0c 00	 ret	 12			; 0000000cH
?GainPvPoint@CTGuild@@QAEXKEE@Z ENDP			; CTGuild::GainPvPoint
_TEXT	ENDS
PUBLIC	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ; ATL::AtlGetStringResourceImage
EXTRN	__imp__FindResourceA@12:NEAR
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_id$ = 12						; size = 4
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z PROC NEAR ; ATL::AtlGetStringResourceImage, COMDAT

; 280  : {

  00000	56		 push	 esi

; 281  : 	HRSRC hResource;
; 282  : 
; 283  : 	hResource = ::FindResource( hInstance, MAKEINTRESOURCE( ((id>>4)+1) ), RT_STRING );

  00001	8b 74 24 0c	 mov	 esi, DWORD PTR _id$[esp]
  00005	8b c6		 mov	 eax, esi
  00007	c1 e8 04	 shr	 eax, 4
  0000a	57		 push	 edi
  0000b	8b 7c 24 0c	 mov	 edi, DWORD PTR _hInstance$[esp+4]
  0000f	40		 inc	 eax
  00010	0f b7 c8	 movzx	 ecx, ax
  00013	6a 06		 push	 6
  00015	51		 push	 ecx
  00016	57		 push	 edi
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FindResourceA@12

; 284  : 	if( hResource == NULL )

  0001d	85 c0		 test	 eax, eax
  0001f	75 03		 jne	 SHORT $L59431
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi

; 290  : }

  00023	c3		 ret	 0
$L59431:

; 285  : 	{
; 286  : 		return( NULL );
; 287  : 	}
; 288  : 
; 289  : 	return _AtlGetStringResourceImage( hInstance, hResource, id );

  00024	56		 push	 esi
  00025	50		 push	 eax
  00026	57		 push	 edi
  00027	e8 00 00 00 00	 call	 ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi

; 290  : }

  00031	c3		 ret	 0
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ENDP ; ATL::AtlGetStringResourceImage
_TEXT	ENDS
PUBLIC	?UsePvPoint@CTGuild@@QAEXKE@Z			; CTGuild::UsePvPoint
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tguild.cpp
;	COMDAT ?UsePvPoint@CTGuild@@QAEXKE@Z
_TEXT	SEGMENT
_dwPoint$ = 8						; size = 4
_bType$ = 12						; size = 1
?UsePvPoint@CTGuild@@QAEXKE@Z PROC NEAR			; CTGuild::UsePvPoint, COMDAT
; _this$ = ecx

; 583  : 	if(!dwPoint)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _dwPoint$[esp-4]
  00004	85 d2		 test	 edx, edx
  00006	74 49		 je	 SHORT $L135062
  00008	53		 push	 ebx

; 584  : 		return;
; 585  : 
; 586  : 	if(bType & PVP_TOTAL)

  00009	8a 5c 24 0c	 mov	 bl, BYTE PTR _bType$[esp]
  0000d	f6 c3 01	 test	 bl, 1
  00010	74 10		 je	 SHORT $L135064

; 587  : 		m_dwPvPTotalPoint = m_dwPvPTotalPoint > dwPoint ? m_dwPvPTotalPoint-dwPoint : 0;

  00012	8b 41 50	 mov	 eax, DWORD PTR [ecx+80]
  00015	3b c2		 cmp	 eax, edx
  00017	76 04		 jbe	 SHORT $L140456
  00019	2b c2		 sub	 eax, edx
  0001b	eb 02		 jmp	 SHORT $L140457
$L140456:
  0001d	33 c0		 xor	 eax, eax
$L140457:
  0001f	89 41 50	 mov	 DWORD PTR [ecx+80], eax
$L135064:

; 588  : 
; 589  : 	if(bType & PVP_USEABLE)

  00022	f6 c3 02	 test	 bl, 2
  00025	5b		 pop	 ebx
  00026	74 10		 je	 SHORT $L135065

; 590  : 		m_dwPvPUseablePoint = m_dwPvPUseablePoint > dwPoint ? m_dwPvPUseablePoint-dwPoint : 0;

  00028	8b 41 4c	 mov	 eax, DWORD PTR [ecx+76]
  0002b	3b c2		 cmp	 eax, edx
  0002d	76 04		 jbe	 SHORT $L140458
  0002f	2b c2		 sub	 eax, edx
  00031	eb 02		 jmp	 SHORT $L140459
$L140458:
  00033	33 c0		 xor	 eax, eax
$L140459:
  00035	89 41 4c	 mov	 DWORD PTR [ecx+76], eax
$L135065:

; 591  : 
; 592  : 	_AtlModule.SendDM_GUILDPVPOINT_REQ(
; 593  : 		m_dwID,
; 594  : 		m_dwPvPTotalPoint,
; 595  : 		m_dwPvPUseablePoint,
; 596  : 		m_dwPvPMonthPoint);

  00038	8b 41 54	 mov	 eax, DWORD PTR [ecx+84]
  0003b	8b 51 4c	 mov	 edx, DWORD PTR [ecx+76]
  0003e	50		 push	 eax
  0003f	8b 41 50	 mov	 eax, DWORD PTR [ecx+80]
  00042	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00044	52		 push	 edx
  00045	50		 push	 eax
  00046	51		 push	 ecx
  00047	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTWorldSvrModule@@A
  0004c	e8 00 00 00 00	 call	 ?SendDM_GUILDPVPOINT_REQ@CTWorldSvrModule@@QAEXKKKK@Z ; CTWorldSvrModule::SendDM_GUILDPVPOINT_REQ
$L135062:

; 597  : }

  00051	c2 08 00	 ret	 8
?UsePvPoint@CTGuild@@QAEXKE@Z ENDP			; CTGuild::UsePvPoint
_TEXT	ENDS
PUBLIC	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@IG@Z ; ATL::AtlGetStringResourceImage
EXTRN	__imp__FindResourceExA@16:NEAR
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_id$ = 12						; size = 4
_wLanguage$ = 16					; size = 2
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@IG@Z PROC NEAR ; ATL::AtlGetStringResourceImage, COMDAT

; 294  : 	HRSRC hResource;
; 295  : 
; 296  : 	hResource = ::FindResourceEx( hInstance, RT_STRING, MAKEINTRESOURCE( ((id>>4)+1) ), wLanguage );

  00000	8b 44 24 0c	 mov	 eax, DWORD PTR _wLanguage$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR _id$[esp]
  00009	8b ce		 mov	 ecx, esi
  0000b	57		 push	 edi
  0000c	8b 7c 24 0c	 mov	 edi, DWORD PTR _hInstance$[esp+4]
  00010	c1 e9 04	 shr	 ecx, 4
  00013	41		 inc	 ecx
  00014	50		 push	 eax
  00015	0f b7 d1	 movzx	 edx, cx
  00018	52		 push	 edx
  00019	6a 06		 push	 6
  0001b	57		 push	 edi
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FindResourceExA@16

; 297  : 	if( hResource == NULL )

  00022	85 c0		 test	 eax, eax
  00024	75 03		 jne	 SHORT $L59445
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi

; 303  : }

  00028	c3		 ret	 0
$L59445:

; 298  : 	{
; 299  : 		return( NULL );
; 300  : 	}
; 301  : 
; 302  : 	return _AtlGetStringResourceImage( hInstance, hResource, id );

  00029	56		 push	 esi
  0002a	50		 push	 eax
  0002b	57		 push	 edi
  0002c	e8 00 00 00 00	 call	 ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi

; 303  : }

  00036	c3		 ret	 0
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@IG@Z ENDP ; ATL::AtlGetStringResourceImage
_TEXT	ENDS
PUBLIC	?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z ; ATL::AtlFindStringResourceInstance
EXTRN	?GetHInstanceAt@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@H@Z:NEAR ; ATL::CAtlBaseModule::GetHInstanceAt
EXTRN	?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A:BYTE	; ATL::_AtlBaseModule
; Function compile flags: /Ogty
;	COMDAT ?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT
_nID$ = 8						; size = 4
_wLanguage$ = 12					; size = 2
?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z PROC NEAR ; ATL::AtlFindStringResourceInstance, COMDAT

; 380  : {

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi
  00003	57		 push	 edi

; 381  : 	const ATLSTRINGRESOURCEIMAGE* p = NULL;

  00004	33 ff		 xor	 edi, edi

; 382  : 	HINSTANCE hInst = _AtlBaseModule.GetHInstanceAt(0);

  00006	57		 push	 edi
  00007	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
  0000c	e8 00 00 00 00	 call	 ?GetHInstanceAt@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@H@Z ; ATL::CAtlBaseModule::GetHInstanceAt
  00011	8b f0		 mov	 esi, eax

; 383  : 
; 384  : 	for (int i = 1; hInst != NULL && p == NULL; hInst = _AtlBaseModule.GetHInstanceAt(i++))

  00013	85 f6		 test	 esi, esi
  00015	bd 01 00 00 00	 mov	 ebp, 1
  0001a	74 47		 je	 SHORT $L59538
  0001c	8b 5c 24 14	 mov	 ebx, DWORD PTR _nID$[esp+12]
$L59536:
  00020	85 ff		 test	 edi, edi
  00022	75 3f		 jne	 SHORT $L59538

; 385  : 	{
; 386  : 		p = AtlGetStringResourceImage(hInst, nID, wLanguage);

  00024	8b 44 24 18	 mov	 eax, DWORD PTR _wLanguage$[esp+12]
  00028	8b cb		 mov	 ecx, ebx
  0002a	c1 e9 04	 shr	 ecx, 4
  0002d	41		 inc	 ecx
  0002e	50		 push	 eax
  0002f	0f b7 d1	 movzx	 edx, cx
  00032	52		 push	 edx
  00033	6a 06		 push	 6
  00035	56		 push	 esi
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FindResourceExA@16
  0003c	85 c0		 test	 eax, eax
  0003e	74 11		 je	 SHORT $L140474
$L140469:
  00040	53		 push	 ebx
  00041	50		 push	 eax
  00042	56		 push	 esi
  00043	e8 00 00 00 00	 call	 ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
  00048	8b f8		 mov	 edi, eax
  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 387  : 		if (p != NULL)

  0004d	85 ff		 test	 edi, edi
  0004f	75 19		 jne	 SHORT $L140472
$L140474:

; 383  : 
; 384  : 	for (int i = 1; hInst != NULL && p == NULL; hInst = _AtlBaseModule.GetHInstanceAt(i++))

  00051	55		 push	 ebp
  00052	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
  00057	e8 00 00 00 00	 call	 ?GetHInstanceAt@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@H@Z ; ATL::CAtlBaseModule::GetHInstanceAt
  0005c	8b f0		 mov	 esi, eax
  0005e	45		 inc	 ebp
  0005f	85 f6		 test	 esi, esi
  00061	75 bd		 jne	 SHORT $L59536
$L59538:
  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5d		 pop	 ebp

; 389  : 	}
; 390  : 
; 391  : 	return NULL;

  00066	33 c0		 xor	 eax, eax
  00068	5b		 pop	 ebx

; 392  : }

  00069	c3		 ret	 0
$L140472:
  0006a	5f		 pop	 edi

; 388  : 			return hInst;

  0006b	8b c6		 mov	 eax, esi
  0006d	5e		 pop	 esi
  0006e	5d		 pop	 ebp
  0006f	5b		 pop	 ebx

; 392  : }

  00070	c3		 ret	 0
?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z ENDP ; ATL::AtlFindStringResourceInstance
_TEXT	ENDS
PUBLIC	?size@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEIXZ ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	75 01		 jne	 SHORT $L140478

; 517  : 		}

  00007	c3		 ret	 0
$L140478:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00008	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000b	2b c8		 sub	 ecx, eax
  0000d	b8 e9 a2 8b 2e	 mov	 eax, 780903145		; 2e8ba2e9H
  00012	f7 e9		 imul	 ecx
  00014	c1 fa 03	 sar	 edx, 3
  00017	8b c2		 mov	 eax, edx
  00019	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001c	03 c2		 add	 eax, edx

; 517  : 		}

  0001e	c3		 ret	 0
?size@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L140495
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L140495:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 04	 sar	 eax, 4

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::size
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@QAE@ABKABQAUtagTGUILDARTICLE@@@Z ; std::pair<unsigned long const ,tagTGUILDARTICLE *>::pair<unsigned long const ,tagTGUILDARTICLE *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@QAE@ABKABQAUtagTGUILDARTICLE@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@QAE@ABKABQAUtagTGUILDARTICLE@@@Z PROC NEAR ; std::pair<unsigned long const ,tagTGUILDARTICLE *>::pair<unsigned long const ,tagTGUILDARTICLE *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@QAE@ABKABQAUtagTGUILDARTICLE@@@Z ENDP ; std::pair<unsigned long const ,tagTGUILDARTICLE *>::pair<unsigned long const ,tagTGUILDARTICLE *>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKPAUtagTITEM@@@std@@QAE@ABKABQAUtagTITEM@@@Z ; std::pair<unsigned long const ,tagTITEM *>::pair<unsigned long const ,tagTITEM *>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@$$CBKPAUtagTITEM@@@std@@QAE@ABKABQAUtagTITEM@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKPAUtagTITEM@@@std@@QAE@ABKABQAUtagTITEM@@@Z PROC NEAR ; std::pair<unsigned long const ,tagTITEM *>::pair<unsigned long const ,tagTITEM *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKPAUtagTITEM@@@std@@QAE@ABKABQAUtagTITEM@@@Z ENDP ; std::pair<unsigned long const ,tagTITEM *>::pair<unsigned long const ,tagTITEM *>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@QAE@ABKABQAUtagTGUILDMEMBER@@@Z ; std::pair<unsigned long const ,tagTGUILDMEMBER *>::pair<unsigned long const ,tagTGUILDMEMBER *>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@QAE@ABKABQAUtagTGUILDMEMBER@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@QAE@ABKABQAUtagTGUILDMEMBER@@@Z PROC NEAR ; std::pair<unsigned long const ,tagTGUILDMEMBER *>::pair<unsigned long const ,tagTGUILDMEMBER *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@QAE@ABKABQAUtagTGUILDMEMBER@@@Z ENDP ; std::pair<unsigned long const ,tagTGUILDMEMBER *>::pair<unsigned long const ,tagTGUILDMEMBER *>
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@QAE@ABKABQAUtagTTACTICSMEMBER@@@Z ; std::pair<unsigned long const ,tagTTACTICSMEMBER *>::pair<unsigned long const ,tagTTACTICSMEMBER *>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@QAE@ABKABQAUtagTTACTICSMEMBER@@@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@QAE@ABKABQAUtagTTACTICSMEMBER@@@Z PROC NEAR ; std::pair<unsigned long const ,tagTTACTICSMEMBER *>::pair<unsigned long const ,tagTTACTICSMEMBER *>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@QAE@ABKABQAUtagTTACTICSMEMBER@@@Z ENDP ; std::pair<unsigned long const ,tagTTACTICSMEMBER *>::pair<unsigned long const ,tagTTACTICSMEMBER *>
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0?$pair@$$CBGG@std@@QAE@ABG0@Z		; std::pair<unsigned short const ,unsigned short>::pair<unsigned short const ,unsigned short>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@$$CBGG@std@@QAE@ABG0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@$$CBGG@std@@QAE@ABG0@Z PROC NEAR		; std::pair<unsigned short const ,unsigned short>::pair<unsigned short const ,unsigned short>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00009	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000d	66 89 10	 mov	 WORD PTR [eax], dx
  00010	66 8b 11	 mov	 dx, WORD PTR [ecx]
  00013	66 89 50 02	 mov	 WORD PTR [eax+2], dx

; 35   : 		}

  00017	c2 08 00	 ret	 8
??0?$pair@$$CBGG@std@@QAE@ABG0@Z ENDP			; std::pair<unsigned short const ,unsigned short>::pair<unsigned short const ,unsigned short>
_TEXT	ENDS
PUBLIC	??R?$less@K@std@@QBE_NABK0@Z			; std::less<unsigned long>::operator()
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\functional
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@K@std@@QBE_NABK0@Z PROC NEAR			; std::less<unsigned long>::operator(), COMDAT
; _this$ = ecx

; 139  : 		return (_Left < _Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8b 54 24 08	 mov	 edx, DWORD PTR __Right$[esp-4]
  0000a	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0000c	1b c0		 sbb	 eax, eax
  0000e	f7 d8		 neg	 eax

; 140  : 		}

  00010	c2 08 00	 ret	 8
??R?$less@K@std@@QBE_NABK0@Z ENDP			; std::less<unsigned long>::operator()
_TEXT	ENDS
PUBLIC	??0?$allocator@K@std@@QAE@XZ			; std::allocator<unsigned long>::allocator<unsigned long>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@K@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@K@std@@QAE@XZ PROC NEAR			; std::allocator<unsigned long>::allocator<unsigned long>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@K@std@@QAE@XZ ENDP			; std::allocator<unsigned long>::allocator<unsigned long>
_TEXT	ENDS
PUBLIC	??R?$less@G@std@@QBE_NABG0@Z			; std::less<unsigned short>::operator()
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\functional
;	COMDAT ??R?$less@G@std@@QBE_NABG0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@G@std@@QBE_NABG0@Z PROC NEAR			; std::less<unsigned short>::operator(), COMDAT
; _this$ = ecx

; 139  : 		return (_Left < _Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	66 8b 08	 mov	 cx, WORD PTR [eax]
  00007	8b 54 24 08	 mov	 edx, DWORD PTR __Right$[esp-4]
  0000b	66 3b 0a	 cmp	 cx, WORD PTR [edx]
  0000e	1b c0		 sbb	 eax, eax
  00010	f7 d8		 neg	 eax

; 140  : 		}

  00012	c2 08 00	 ret	 8
??R?$less@G@std@@QBE_NABG0@Z ENDP			; std::less<unsigned short>::operator()
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTITEM@@@2@@Z ; std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTITEM@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTITEM@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTITEM@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,tagTITEM *> >::allocator<std::pair<unsigned long const ,tagTITEM *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagTITEM *> >::allocator<std::pair<unsigned long const ,tagTITEM *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,tagTITEM *> >::allocator<std::pair<unsigned long const ,tagTITEM *> >
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z ; std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z ; std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z ; std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@std@@QAE@XZ ; std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@std@@QAE@XZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@std@@QAE@XZ ENDP ; std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >
_TEXT	ENDS
PUBLIC	?empty@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBE_NXZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::empty
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?empty@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
?empty@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBE_NXZ PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::empty, COMDAT
; _this$ = ecx

; 526  : 		return (size() == 0);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 0c		 jne	 SHORT $L140671
  00007	33 c0		 xor	 eax, eax
  00009	33 c9		 xor	 ecx, ecx
  0000b	85 c0		 test	 eax, eax
  0000d	0f 94 c1	 sete	 cl
  00010	8a c1		 mov	 al, cl

; 527  : 		}

  00012	c3		 ret	 0

; 526  : 		return (size() == 0);

$L140671:
  00013	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00016	2b c2		 sub	 eax, edx
  00018	c1 f8 04	 sar	 eax, 4
  0001b	33 c9		 xor	 ecx, ecx
  0001d	85 c0		 test	 eax, eax
  0001f	0f 94 c1	 sete	 cl
  00022	8a c1		 mov	 al, cl

; 527  : 		}

  00024	c3		 ret	 0
?empty@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBE_NXZ ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::empty
_TEXT	ENDS
PUBLIC	??0?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAE@XZ ; std::allocator<tagTGUILDPOINTREWARD>::allocator<tagTGUILDPOINTREWARD>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAE@XZ PROC NEAR ; std::allocator<tagTGUILDPOINTREWARD>::allocator<tagTGUILDPOINTREWARD>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAE@XZ ENDP	; std::allocator<tagTGUILDPOINTREWARD>::allocator<tagTGUILDPOINTREWARD>
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator+=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Yiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	6b c9 2c	 imul	 ecx, 44			; 0000002cH
  0000b	03 d1		 add	 edx, ecx
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator,bool>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 11	 add	 eax, 17			; 00000011H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@SAABGABU?$pair@$$CBGG@2@@Z ; std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@SAABGABU?$pair@$$CBGG@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@SAABGABU?$pair@$$CBGG@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@SAABGABU?$pair@$$CBGG@2@@Z ENDP ; std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@1@AB_N@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator,bool>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@1@AB_N@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@1@AB_N@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator,bool>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8a 11		 mov	 dl, BYTE PTR [ecx]
  00010	88 50 04	 mov	 BYTE PTR [eax+4], dl

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@1@AB_N@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator,bool>::pair<std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator,bool>
_TEXT	ENDS
PUBLIC	?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z	; ATL::ChTraitsCRT<char>::StringCompare
EXTRN	__mbscmp:NEAR
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT
_pszA$ = 8						; size = 4
_pszB$ = 12						; size = 4
?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z PROC NEAR	; ATL::ChTraitsCRT<char>::StringCompare, COMDAT

; 336  : 		return _mbscmp( reinterpret_cast< const unsigned char* >( pszA ), reinterpret_cast< const unsigned char* >( pszB ) );

  00000	e9 00 00 00 00	 jmp	 __mbscmp
?StringCompare@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z ENDP	; ATL::ChTraitsCRT<char>::StringCompare
_TEXT	ENDS
PUBLIC	??0?$allocator@K@std@@QAE@ABV01@@Z		; std::allocator<unsigned long>::allocator<unsigned long>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@K@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@K@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<unsigned long>::allocator<unsigned long>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@K@std@@QAE@ABV01@@Z ENDP			; std::allocator<unsigned long>::allocator<unsigned long>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@K@std@@QAEXPAKI@Z	; std::allocator<unsigned long>::deallocate
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@K@std@@QAEXPAKI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@K@std@@QAEXPAKI@Z PROC NEAR	; std::allocator<unsigned long>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@K@std@@QAEXPAKI@Z ENDP		; std::allocator<unsigned long>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTITEM@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTITEM@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTITEM@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTITEM@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,tagTITEM *> >::allocator<std::pair<unsigned long const ,tagTITEM *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagTITEM *> >::allocator<std::pair<unsigned long const ,tagTITEM *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,tagTITEM *> >::allocator<std::pair<unsigned long const ,tagTITEM *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@std@@QAE@ABV01@@Z ; std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?capacity@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::capacity
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?capacity@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?capacity@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::capacity, COMDAT
; _this$ = ecx

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L140809
  00007	33 c0		 xor	 eax, eax

; 459  : 		}

  00009	c3		 ret	 0
$L140809:

; 458  : 		return (_Myfirst == 0 ? 0 : _Myend - _Myfirst);

  0000a	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 04	 sar	 eax, 4

; 459  : 		}

  00012	c3		 ret	 0
?capacity@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::capacity
_TEXT	ENDS
PUBLIC	??0?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAE@ABV01@@Z ; std::allocator<tagTGUILDPOINTREWARD>::allocator<tagTGUILDPOINTREWARD>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAE@ABV01@@Z PROC NEAR ; std::allocator<tagTGUILDPOINTREWARD>::allocator<tagTGUILDPOINTREWARD>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAE@ABV01@@Z ENDP ; std::allocator<tagTGUILDPOINTREWARD>::allocator<tagTGUILDPOINTREWARD>
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEXPAUtagTGUILDPOINTREWARD@@I@Z ; std::allocator<tagTGUILDPOINTREWARD>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEXPAUtagTGUILDPOINTREWARD@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEXPAUtagTGUILDPOINTREWARD@@I@Z PROC NEAR ; std::allocator<tagTGUILDPOINTREWARD>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEXPAUtagTGUILDPOINTREWARD@@I@Z ENDP ; std::allocator<tagTGUILDPOINTREWARD>::deallocate
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::operator+=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Yiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	c1 e1 04	 shl	 ecx, 4
  0000b	03 d1		 add	 edx, ecx
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Gconst_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEHABV012@@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::const_iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Gconst_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEHABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Gconst_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEHABV012@@Z PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::const_iterator::operator-, COMDAT
; _this$ = ecx

; 141  : 
; 142  : 
; 143  : 			return (_Myptr - _Right._Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	c1 f8 04	 sar	 eax, 4

; 144  : 			}

  0000b	c2 04 00	 ret	 4
??Gconst_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEHABV012@@Z ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::const_iterator::operator-
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEABUtagTENTRYRECORD@@XZ ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEABUtagTENTRYRECORD@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEABUtagTENTRYRECORD@@XZ PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEABUtagTENTRYRECORD@@XZ ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 10	 add	 eax, 16			; 00000010H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBGG@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBGG@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBGG@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBGG@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@1@0@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@1@0@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@1@0@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@1@0@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@1@0@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@1@0@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@1@0@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@1@0@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@1@0@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@1@0@Z ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator>
; Function compile flags: /Ogty
;	COMDAT ??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@1@0@Z
_TEXT	SEGMENT
__Val1$ = 8						; size = 4
__Val2$ = 12						; size = 4
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@1@0@Z PROC NEAR ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator>, COMDAT
; _this$ = ecx

; 34   : 		{	// construct from specified values

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Val1$[esp-4]
  00006	8b 11		 mov	 edx, DWORD PTR [ecx]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val2$[esp-4]
  0000c	89 10		 mov	 DWORD PTR [eax], edx
  0000e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 35   : 		}

  00013	c2 08 00	 ret	 8
??0?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@V123@@std@@QAE@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@1@0@Z ENDP ; std::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator>::pair<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator,std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@K@std@@QBEIXZ		; std::allocator<unsigned long>::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@K@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@K@std@@QBEIXZ PROC NEAR		; std::allocator<unsigned long>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@K@std@@QBEIXZ ENDP		; std::allocator<unsigned long>::max_size
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Max
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L138066
  0000e	8b ff		 npad	 2
$L138065:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L138065
$L138066:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L138070
  0000d	8d 49 00	 npad	 3
$L138069:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L138069
$L138070:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,tagTITEM *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagTITEM *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,tagTITEM *> >::max_size
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Max
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L138114
  0000e	8b ff		 npad	 2
$L138113:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L138113
$L138114:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L138118
  0000d	8d 49 00	 npad	 3
$L138117:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L138117
$L138118:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >::max_size
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Max
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L138162
  0000e	8b ff		 npad	 2
$L138161:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L138161
$L138162:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L138166
  0000d	8d 49 00	 npad	 3
$L138165:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L138165
$L138166:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >::max_size
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Max
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L138210
  0000e	8b ff		 npad	 2
$L138209:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L138209
$L138210:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L138214
  0000d	8d 49 00	 npad	 3
$L138213:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L138213
$L138214:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QBEIXZ ; std::allocator<tagTGUILDPOINTREWARD>::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QBEIXZ PROC NEAR ; std::allocator<tagTGUILDPOINTREWARD>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 0f	 mov	 eax, 268435455		; 0fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QBEIXZ ENDP ; std::allocator<tagTGUILDPOINTREWARD>::max_size
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L138262

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L138262:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L141109

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L141094
$L141093:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L141093
$L141094:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L141109:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L141112
  0003d	8d 49 00	 npad	 3
$L138268:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L138269

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L138268
$L138269:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L141112

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L141112:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L138276

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L141160

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L141148
  0001d	8d 49 00	 npad	 3
$L141147:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L141147
$L141148:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L141160:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L138280
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L138279:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L138280

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L138279
$L138280:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L138276:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L138283

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L138283:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L141218

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L141196
$L141195:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L141195
$L141196:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L141218:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L141221
  0003d	8d 49 00	 npad	 3
$L138289:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L138290

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L138289
$L138290:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L141221

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L141221:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L138297

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L141269

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L141250
  0001d	8d 49 00	 npad	 3
$L141249:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L141249
$L141250:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L141269:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L138301
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L138300:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L138301

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L138300
$L138301:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L138297:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L138304

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L138304:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L141327

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L141305
$L141304:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L141304
$L141305:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L141327:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L141330
  0003d	8d 49 00	 npad	 3
$L138310:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L138311

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L138310
$L138311:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L141330

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L141330:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L138318

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L141378

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L141366
  0001d	8d 49 00	 npad	 3
$L141365:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L141365
$L141366:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L141378:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L138322
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L138321:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L138322

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L138321
$L138322:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L138318:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L138325

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L138325:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L141436

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L141421
$L141420:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L141420
$L141421:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L141436:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L141439
  0003d	8d 49 00	 npad	 3
$L138331:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L138332

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L138331
$L138332:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L141439

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L141439:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L138339

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L141487

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L141475
  0001d	8d 49 00	 npad	 3
$L141474:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L141474
$L141475:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L141487:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L138343
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L138342:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L138343

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L138342
$L138343:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L138339:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@U?$pair@$$CBGG@std@@@std@@QBEIXZ ; std::allocator<std::pair<unsigned short const ,unsigned short> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@U?$pair@$$CBGG@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@U?$pair@$$CBGG@std@@@std@@QBEIXZ PROC NEAR ; std::allocator<std::pair<unsigned short const ,unsigned short> >::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@U?$pair@$$CBGG@std@@@std@@QBEIXZ ENDP ; std::allocator<std::pair<unsigned short const ,unsigned short> >::max_size
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTITEM@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTITEM@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTITEM@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTITEM@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00013	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00017	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0001c	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0001f	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00022	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00026	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00029	88 50 14	 mov	 BYTE PTR [eax+20], dl
  0002c	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 41   : 			}

  00030	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	??0_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGG@2@D@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node::_Node
; Function compile flags: /Ogty
;	COMDAT ??0_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGG@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
??0_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGG@2@D@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node::_Node, COMDAT
; _this$ = ecx

; 40   : 			{	// construct a node with value

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  00010	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00013	8b 54 24 10	 mov	 edx, DWORD PTR __Val$[esp-4]
  00017	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001a	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0001c	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00020	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  00023	88 50 10	 mov	 BYTE PTR [eax+16], dl
  00026	c6 40 11 00	 mov	 BYTE PTR [eax+17], 0

; 41   : 			}

  0002a	c2 14 00	 ret	 20			; 00000014H
??0_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU012@00ABU?$pair@$$CBGG@2@D@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node::_Node
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L138457
  0000e	8b ff		 npad	 2
$L138456:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L138456
$L138457:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Max
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0>::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ??0?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0>::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0>::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0>::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0>
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0>::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0>::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0>::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0>
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0>::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0>::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0>
_TEXT	ENDS
PUBLIC	??0?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ; std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0>::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0>
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 1
??0?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0>::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0>, COMDAT
; _this$ = ecx

; 38   : 		{	// construct with specified comparator

  00000	8b c1		 mov	 eax, ecx

; 39   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@QAE@U?$less@K@1@@Z ENDP ; std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0>::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAUtagTENTRYRECORD@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTENTRYRECORD@@0@Z ; std::_Ptr_cat<tagTENTRYRECORD *,tagTENTRYRECORD *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Ptr_cat@PAUtagTENTRYRECORD@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTENTRYRECORD@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUtagTENTRYRECORD@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTENTRYRECORD@@0@Z PROC NEAR ; std::_Ptr_cat<tagTENTRYRECORD *,tagTENTRYRECORD *>, COMDAT

; 211  : 	{	// return pointer category from arbitrary arguments

  00000	51		 push	 ecx

; 212  : 	_Nonscalar_ptr_iterator_tag _Cat;
; 213  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 214  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
??$_Ptr_cat@PAUtagTENTRYRECORD@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTENTRYRECORD@@0@Z ENDP ; std::_Ptr_cat<tagTENTRYRECORD *,tagTENTRYRECORD *>
_TEXT	ENDS
PUBLIC	??$_Allocate@K@std@@YAPAKIPAK@Z			; std::_Allocate<unsigned long>
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Allocate@K@std@@YAPAKIPAK@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@K@std@@YAPAKIPAK@Z PROC NEAR		; std::_Allocate<unsigned long>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 35   : 	}

  00014	c3		 ret	 0
??$_Allocate@K@std@@YAPAKIPAK@Z ENDP			; std::_Allocate<unsigned long>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Allocate@UtagTGUILDPOINTREWARD@@@std@@YAPAUtagTGUILDPOINTREWARD@@IPAU1@@Z ; std::_Allocate<tagTGUILDPOINTREWARD>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@UtagTGUILDPOINTREWARD@@@std@@YAPAUtagTGUILDPOINTREWARD@@IPAU1@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@UtagTGUILDPOINTREWARD@@@std@@YAPAUtagTGUILDPOINTREWARD@@IPAU1@@Z PROC NEAR ; std::_Allocate<tagTGUILDPOINTREWARD>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	c1 e0 04	 shl	 eax, 4
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000d	83 c4 04	 add	 esp, 4

; 35   : 	}

  00010	c3		 ret	 0
??$_Allocate@UtagTGUILDPOINTREWARD@@@std@@YAPAUtagTGUILDPOINTREWARD@@IPAU1@@Z ENDP ; std::_Allocate<tagTGUILDPOINTREWARD>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAUtagTITEM@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *><std::pair<unsigned long const ,tagTITEM *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTITEM@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAUtagTITEM@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *><std::pair<unsigned long const ,tagTITEM *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAUtagTITEM@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *><std::pair<unsigned long const ,tagTITEM *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *><std::pair<unsigned long const ,tagTGUILDMEMBER *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *><std::pair<unsigned long const ,tagTGUILDMEMBER *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *><std::pair<unsigned long const ,tagTGUILDMEMBER *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *><std::pair<unsigned long const ,tagTTACTICSMEMBER *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *><std::pair<unsigned long const ,tagTTACTICSMEMBER *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *><std::pair<unsigned long const ,tagTTACTICSMEMBER *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *><std::pair<unsigned long const ,tagTGUILDARTICLE *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *><std::pair<unsigned long const ,tagTGUILDARTICLE *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *><std::pair<unsigned long const ,tagTGUILDARTICLE *> >
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@IPAU120@@Z ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@IPAU120@@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@IPAU120@@Z PROC NEAR ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00007	c1 e0 02	 shl	 eax, 2
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 35   : 	}

  00013	c3		 ret	 0
??$_Allocate@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@YAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@0@IPAU120@@Z ENDP ; std::_Allocate<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAUtagTITEM@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node><std::pair<unsigned long const ,tagTITEM *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTITEM@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAUtagTITEM@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node><std::pair<unsigned long const ,tagTITEM *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAUtagTITEM@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node><std::pair<unsigned long const ,tagTITEM *> >
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node><std::pair<unsigned long const ,tagTGUILDMEMBER *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node><std::pair<unsigned long const ,tagTGUILDMEMBER *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node><std::pair<unsigned long const ,tagTGUILDMEMBER *> >
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node><std::pair<unsigned long const ,tagTTACTICSMEMBER *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node><std::pair<unsigned long const ,tagTTACTICSMEMBER *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node><std::pair<unsigned long const ,tagTTACTICSMEMBER *> >
_TEXT	ENDS
PUBLIC	??$?0U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node><std::pair<unsigned long const ,tagTGUILDARTICLE *> >
; Function compile flags: /Ogty
;	COMDAT ??$?0U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??$?0U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node><std::pair<unsigned long const ,tagTGUILDARTICLE *> >, COMDAT
; _this$ = ecx

; 120  : 		allocator(const allocator<_Other>&)

  00000	8b c1		 mov	 eax, ecx

; 121  : 		{	// construct from a related allocator (do nothing)
; 122  : 		}

  00002	c2 04 00	 ret	 4
??$?0U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAE@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node>::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node><std::pair<unsigned long const ,tagTGUILDARTICLE *> >
_TEXT	ENDS
PUBLIC	??$_Copy_opt@PAUtagTENTRYRECORD@@PAU1@@std@@YAPAUtagTENTRYRECORD@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_opt<tagTENTRYRECORD *,tagTENTRYRECORD *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Copy_opt@PAUtagTENTRYRECORD@@PAU1@@std@@YAPAUtagTENTRYRECORD@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_opt@PAUtagTENTRYRECORD@@PAU1@@std@@YAPAUtagTENTRYRECORD@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Copy_opt<tagTENTRYRECORD *,tagTENTRYRECORD *>, COMDAT

; 1021 : 	for (; _First != _Last; ++_Dest, ++_First)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 0c	 mov	 eax, DWORD PTR __Dest$[esp-4]
  00008	53		 push	 ebx
  00009	8b 5c 24 0c	 mov	 ebx, DWORD PTR __Last$[esp]
  0000d	3b d3		 cmp	 edx, ebx
  0000f	74 19		 je	 SHORT $L139273
  00011	56		 push	 esi
  00012	57		 push	 edi
$L139271:

; 1022 : 		*_Dest = *_First;

  00013	8b f2		 mov	 esi, edx
  00015	8b f8		 mov	 edi, eax
  00017	83 c2 2c	 add	 edx, 44			; 0000002cH
  0001a	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0001f	83 c0 2c	 add	 eax, 44			; 0000002cH
  00022	3b d3		 cmp	 edx, ebx
  00024	f3 a5		 rep movsd
  00026	75 eb		 jne	 SHORT $L139271
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
$L139273:
  0002a	5b		 pop	 ebx

; 1023 : 	return (_Dest);
; 1024 : 	}

  0002b	c3		 ret	 0
??$_Copy_opt@PAUtagTENTRYRECORD@@PAU1@@std@@YAPAUtagTENTRYRECORD@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_opt<tagTENTRYRECORD *,tagTENTRYRECORD *>
_TEXT	ENDS
PUBLIC	??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@@Z ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator>
; Function compile flags: /Ogty
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator>, COMDAT

; 202  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 203  : 	return (_Cat);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 204  : 	}

  00004	c3		 ret	 0
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@@Z ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator>
; Function compile flags: /Ogty
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator>, COMDAT

; 202  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 203  : 	return (_Cat);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 204  : 	}

  00004	c3		 ret	 0
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@@Z ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator>
; Function compile flags: /Ogty
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator>, COMDAT

; 202  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 203  : 	return (_Cat);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 204  : 	}

  00004	c3		 ret	 0
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@@Z ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator>
; Function compile flags: /Ogty
;	COMDAT ??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator>, COMDAT

; 202  : 	typename iterator_traits<_Iter>::iterator_category _Cat;
; 203  : 	return (_Cat);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]

; 204  : 	}

  00004	c3		 ret	 0
??$_Iter_cat@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@YA?AUbidirectional_iterator_tag@0@ABViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Iter_cat<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator>
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@PAUtagTGUILDPOINTREWARD@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTGUILDPOINTREWARD@@0@Z ; std::_Ptr_cat<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *>
; Function compile flags: /Ogty
;	COMDAT ??$_Ptr_cat@PAUtagTGUILDPOINTREWARD@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTGUILDPOINTREWARD@@0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@PAUtagTGUILDPOINTREWARD@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTGUILDPOINTREWARD@@0@Z PROC NEAR ; std::_Ptr_cat<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *>, COMDAT

; 211  : 	{	// return pointer category from arbitrary arguments

  00000	51		 push	 ecx

; 212  : 	_Nonscalar_ptr_iterator_tag _Cat;
; 213  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 214  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
??$_Ptr_cat@PAUtagTGUILDPOINTREWARD@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTGUILDPOINTREWARD@@0@Z ENDP ; std::_Ptr_cat<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >, COMDAT

; 234  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??$_Destroy@UtagTENTRYRECORD@@@std@@YAXPAUtagTENTRYRECORD@@@Z ; std::_Destroy<tagTENTRYRECORD>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@UtagTENTRYRECORD@@@std@@YAXPAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UtagTENTRYRECORD@@@std@@YAXPAUtagTENTRYRECORD@@@Z PROC NEAR ; std::_Destroy<tagTENTRYRECORD>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@UtagTENTRYRECORD@@@std@@YAXPAUtagTENTRYRECORD@@@Z ENDP ; std::_Destroy<tagTENTRYRECORD>
_TEXT	ENDS
PUBLIC	?data@CStringData@ATL@@QAEPAXXZ			; ATL::CStringData::data
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT
?data@CStringData@ATL@@QAEPAXXZ PROC NEAR		; ATL::CStringData::data, COMDAT
; _this$ = ecx

; 66   : 		return (this+1);

  00000	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]

; 67   : 	}

  00003	c3		 ret	 0
?data@CStringData@ATL@@QAEPAXXZ ENDP			; ATL::CStringData::data
_TEXT	ENDS
PUBLIC	?AddRef@CStringData@ATL@@QAEXXZ			; ATL::CStringData::AddRef
; Function compile flags: /Ogty
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
?AddRef@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::AddRef, COMDAT
; _this$ = ecx

; 71   : 		ATLASSERT(nRefs > 0);
; 72   : 		_InterlockedIncrement(&nRefs);

  00000	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00003	b8 01 00 00 00	 mov	 eax, 1
  00008	f0 0f c1 01	 lock	  xadd	 DWORD PTR [ecx], eax

; 73   : 	}

  0000c	c3		 ret	 0
?AddRef@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::AddRef
_TEXT	ENDS
PUBLIC	?IsLocked@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsLocked
; Function compile flags: /Ogty
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
?IsLocked@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsLocked, COMDAT
; _this$ = ecx

; 76   : 		return nRefs < 0;

  00000	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00003	33 c0		 xor	 eax, eax
  00005	85 d2		 test	 edx, edx
  00007	0f 9c c0	 setl	 al

; 77   : 	}

  0000a	c3		 ret	 0
?IsLocked@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsLocked
_TEXT	ENDS
PUBLIC	?IsShared@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsShared
; Function compile flags: /Ogty
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
?IsShared@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsShared, COMDAT
; _this$ = ecx

; 80   : 		return( nRefs > 1 ); 

  00000	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00003	33 c0		 xor	 eax, eax
  00005	83 fa 01	 cmp	 edx, 1
  00008	0f 9f c0	 setg	 al

; 81   : 	}

  0000b	c3		 ret	 0
?IsShared@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsShared
_TEXT	ENDS
PUBLIC	?Release@CStringData@ATL@@QAEXXZ		; ATL::CStringData::Release
; Function compile flags: /Ogty
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
?Release@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::Release, COMDAT
; _this$ = ecx

; 93   : 		ATLASSERT( nRefs != 0 );
; 94   : 
; 95   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

  00000	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  00003	83 ca ff	 or	 edx, -1
  00006	f0 0f c1 10	 lock	  xadd	 DWORD PTR [eax], edx
  0000a	4a		 dec	 edx
  0000b	85 d2		 test	 edx, edx
  0000d	7f 0a		 jg	 SHORT $L73499

; 96   : 		{
; 97   : 			pStringMgr->Free( this );

  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	8b 10		 mov	 edx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	8b c8		 mov	 ecx, eax
  00016	ff 52 04	 call	 DWORD PTR [edx+4]
$L73499:

; 98   : 		}
; 99   : 	}

  00019	c3		 ret	 0
?Release@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::Release
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__P$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC NEAR				; operator new, COMDAT

; 109  :         {return (_P); }

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __P$[esp-4]
  00004	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	??3@YAXPAX0@Z					; operator delete
; Function compile flags: /Ogty
;	COMDAT ??3@YAXPAX0@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??3@YAXPAX0@Z PROC NEAR					; operator delete, COMDAT

; 112  :         {return; }

  00000	c3		 ret	 0
??3@YAXPAX0@Z ENDP					; operator delete
_TEXT	ENDS
PUBLIC	??0CTime@ATL@@QAE@_J@Z				; ATL::CTime::CTime
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atltime.inl
;	COMDAT ??0CTime@ATL@@QAE@_J@Z
_TEXT	SEGMENT
_time$ = 8						; size = 8
??0CTime@ATL@@QAE@_J@Z PROC NEAR			; ATL::CTime::CTime, COMDAT
; _this$ = ecx

; 149  : {

  00000	8b 54 24 08	 mov	 edx, DWORD PTR _time$[esp]
  00004	8b c1		 mov	 eax, ecx
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR _time$[esp-4]
  0000a	89 08		 mov	 DWORD PTR [eax], ecx
  0000c	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 150  : }

  0000f	c2 08 00	 ret	 8
??0CTime@ATL@@QAE@_J@Z ENDP				; ATL::CTime::CTime
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC NEAR	; std::char_traits<char>::assign, COMDAT

; 331  : 		_Left = _Right;

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Right$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	8b 54 24 04	 mov	 edx, DWORD PTR __Left$[esp-4]
  0000a	88 0a		 mov	 BYTE PTR [edx], cl

; 332  : 		}

  0000c	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogty
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC NEAR		; std::char_traits<char>::length, COMDAT

; 352  : 		return (::strlen(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L141676:
  00007	8a 08		 mov	 cl, BYTE PTR [eax]
  00009	40		 inc	 eax
  0000a	84 c9		 test	 cl, cl
  0000c	75 f9		 jne	 SHORT $L141676
  0000e	2b c2		 sub	 eax, edx

; 353  : 		}

  00010	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
; Function compile flags: /Ogty
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::copy, COMDAT

; 358  : 		return ((_Elem *)::memcpy(_First1, _First2, _Count));

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR __First2$[esp]
  00009	57		 push	 edi
  0000a	8b 7c 24 0c	 mov	 edi, DWORD PTR __First1$[esp+4]
  0000e	8b c1		 mov	 eax, ecx
  00010	8b d7		 mov	 edx, edi
  00012	c1 e9 02	 shr	 ecx, 2
  00015	f3 a5		 rep movsd
  00017	8b c8		 mov	 ecx, eax
  00019	83 e1 03	 and	 ecx, 3
  0001c	f3 a4		 rep movsb
  0001e	5f		 pop	 edi
  0001f	8b c2		 mov	 eax, edx
  00021	5e		 pop	 esi

; 359  : 		}

  00022	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
EXTRN	_memmove:NEAR
; Function compile flags: /Ogty
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::move, COMDAT

; 370  : 		return ((_Elem *)::memmove(_First1, _First2, _Count));

  00000	e9 00 00 00 00	 jmp	 _memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z ; std::_Ptr_cat
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z PROC NEAR ; std::_Ptr_cat, COMDAT

; 371  : 	{	// return pointer category from pointer to unsigned long arguments

  00000	51		 push	 ecx

; 372  : 	_Scalar_ptr_iterator_tag _Cat;
; 373  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 374  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAK0@Z ENDP ; std::_Ptr_cat
_TEXT	ENDS
PUBLIC	?CalcMoney@@YAX_JAAK11@Z			; CalcMoney
EXTRN	__alldvrm:NEAR
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tprotocol\netcode.h
;	COMDAT ?CalcMoney@@YAX_JAAK11@Z
_TEXT	SEGMENT
tv69 = 8						; size = 8
tv68 = 8						; size = 8
tv66 = 8						; size = 8
_dlMoney$ = 8						; size = 8
_dwGold$ = 16						; size = 4
_dwSilver$ = 20						; size = 4
_dwCooper$ = 24						; size = 4
?CalcMoney@@YAX_JAAK11@Z PROC NEAR			; CalcMoney, COMDAT

; 124  : 	dwCooper = DWORD(dlMoney % MONEY_MULTIPLY);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _dlMoney$[esp]
  00004	8b 4c 24 04	 mov	 ecx, DWORD PTR _dlMoney$[esp-4]
  00008	53		 push	 ebx
  00009	56		 push	 esi
  0000a	6a 00		 push	 0
  0000c	68 e8 03 00 00	 push	 1000			; 000003e8H
  00011	50		 push	 eax
  00012	51		 push	 ecx
  00013	e8 00 00 00 00	 call	 __alldvrm
  00018	8b 74 24 1c	 mov	 esi, DWORD PTR _dwCooper$[esp+4]

; 125  : 	dwSilver = DWORD((dlMoney / MONEY_MULTIPLY) % MONEY_MULTIPLY);

  0001c	6a 00		 push	 0
  0001e	68 e8 03 00 00	 push	 1000			; 000003e8H
  00023	52		 push	 edx
  00024	50		 push	 eax
  00025	89 5c 24 20	 mov	 DWORD PTR tv66[esp+24], ebx
  00029	89 0e		 mov	 DWORD PTR [esi], ecx
  0002b	e8 00 00 00 00	 call	 __alldvrm
  00030	89 5c 24 10	 mov	 DWORD PTR tv68[esp+8], ebx
  00034	89 54 24 10	 mov	 DWORD PTR tv69[esp+8], edx
  00038	8b 54 24 18	 mov	 edx, DWORD PTR _dwSilver$[esp+4]
  0003c	89 0a		 mov	 DWORD PTR [edx], ecx

; 126  : 	dwGold = DWORD(dlMoney / MONEY_MULTIPLY / MONEY_MULTIPLY);

  0003e	8b 4c 24 14	 mov	 ecx, DWORD PTR _dwGold$[esp+4]
  00042	5e		 pop	 esi
  00043	89 01		 mov	 DWORD PTR [ecx], eax
  00045	5b		 pop	 ebx

; 127  : }

  00046	c3		 ret	 0
?CalcMoney@@YAX_JAAK11@Z ENDP				; CalcMoney
_TEXT	ENDS
PUBLIC	?CalcMoney@@YA_JKKK@Z				; CalcMoney
; Function compile flags: /Ogty
;	COMDAT ?CalcMoney@@YA_JKKK@Z
_TEXT	SEGMENT
_dwGold$ = 8						; size = 4
_dwSilver$ = 12						; size = 4
_dwCopper$ = 16						; size = 4
?CalcMoney@@YA_JKKK@Z PROC NEAR				; CalcMoney, COMDAT

; 131  : 	return dwCopper + dwSilver * MONEY_MULTIPLY + __int64(dwGold) * MONEY_MULTIPLY * MONEY_MULTIPLY; 

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _dwSilver$[esp-4]
  00004	8b 4c 24 0c	 mov	 ecx, DWORD PTR _dwCopper$[esp-4]
  00008	69 c0 e8 03 00
	00		 imul	 eax, 1000		; 000003e8H
  0000e	03 c8		 add	 ecx, eax
  00010	8b 44 24 04	 mov	 eax, DWORD PTR _dwGold$[esp-4]
  00014	ba 40 42 0f 00	 mov	 edx, 1000000		; 000f4240H
  00019	f7 e2		 mul	 edx
  0001b	56		 push	 esi
  0001c	33 f6		 xor	 esi, esi
  0001e	03 c8		 add	 ecx, eax
  00020	13 f2		 adc	 esi, edx
  00022	8b d6		 mov	 edx, esi
  00024	8b c1		 mov	 eax, ecx
  00026	5e		 pop	 esi

; 132  : }

  00027	c3		 ret	 0
?CalcMoney@@YA_JKKK@Z ENDP				; CalcMoney
_TEXT	ENDS
PUBLIC	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ		; ATL::CSimpleStringT<char,0>::operator char const *
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::operator char const *, COMDAT
; _this$ = ecx

; 379  : 		return( m_pszData );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 380  : 	}

  00002	c3		 ret	 0
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP		; ATL::CSimpleStringT<char,0>::operator char const *
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1109 : 		return (_Mysize);

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]

; 1110 : 		}

  00003	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?FindStringResourceInstance@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUHINSTANCE__@@I@Z ; ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> >::FindStringResourceInstance
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlstr.h
;	COMDAT ?FindStringResourceInstance@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_nID$ = 8						; size = 4
?FindStringResourceInstance@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUHINSTANCE__@@I@Z PROC NEAR ; ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> >::FindStringResourceInstance, COMDAT

; 949  : 		return( AtlFindStringResourceInstance( nID ) );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nID$[esp-4]
  00004	6a 00		 push	 0
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z ; ATL::AtlFindStringResourceInstance
  0000c	83 c4 08	 add	 esp, 8

; 950  : 	}

  0000f	c3		 ret	 0
?FindStringResourceInstance@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUHINSTANCE__@@I@Z ENDP ; ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> >::FindStringResourceInstance
_TEXT	ENDS
PUBLIC	?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ ; ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
EXTRN	?g_strmgr@ATL@@3VCAtlStringMgr@1@A:BYTE		; ATL::g_strmgr
; Function compile flags: /Ogty
;	COMDAT ?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT
?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ PROC NEAR ; ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> >::GetDefaultManager, COMDAT

; 954  : 		return( &g_strmgr );

  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr

; 955  : 	}

  00005	c3		 ret	 0
?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ ENDP ; ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L141709
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  00009	c3		 ret	 0
$L141709:

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ	; ATL::CSimpleStringT<char,0>::GetString
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetString, COMDAT
; _this$ = ecx

; 510  : 		return( m_pszData );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 511  : 	}

  00002	c3		 ret	 0
?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP	; ATL::CSimpleStringT<char,0>::GetString
_TEXT	ENDS
PUBLIC	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
; Function compile flags: /Ogty
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT
_pData$ = 8						; size = 4
?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Attach, COMDAT
; _this$ = ecx

; 712  : 		m_pszData = static_cast< PXSTR >( pData->data() );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _pData$[esp-4]
  00004	83 c0 10	 add	 eax, 16			; 00000010H
  00007	89 01		 mov	 DWORD PTR [ecx], eax

; 713  : 	}

  00009	c2 04 00	 ret	 4
?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ENDP ; ATL::CSimpleStringT<char,0>::Attach
_TEXT	ENDS
PUBLIC	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
; Function compile flags: /Ogty
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetData, COMDAT
; _this$ = ecx

; 731  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 732  : 	}

  00005	c3		 ret	 0
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ENDP ; ATL::CSimpleStringT<char,0>::GetData
_TEXT	ENDS
PUBLIC	?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z ; ATL::ChTraitsCRT<char>::GetBaseTypeLength
EXTRN	__imp__WideCharToMultiByte@32:NEAR
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z
_TEXT	SEGMENT
_pszSource$ = 8						; size = 4
_nLength$ = 12						; size = 4
?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z PROC NEAR ; ATL::ChTraitsCRT<char>::GetBaseTypeLength, COMDAT

; 437  : 		// Returns required buffer length in XCHARs
; 438  : 		return ::WideCharToMultiByte( _AtlGetConversionACP(), 0, pszSource, nLength, NULL, 0, NULL, NULL );

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _nLength$[esp-4]
  00004	8b 4c 24 04	 mov	 ecx, DWORD PTR _pszSource$[esp-4]
  00008	6a 00		 push	 0
  0000a	6a 00		 push	 0
  0000c	6a 00		 push	 0
  0000e	6a 00		 push	 0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	6a 00		 push	 0
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32

; 439  : 	}

  00021	c3		 ret	 0
?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z ENDP	; ATL::ChTraitsCRT<char>::GetBaseTypeLength
_TEXT	ENDS
PUBLIC	?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z ; ATL::ChTraitsCRT<char>::ConvertToBaseType
; Function compile flags: /Ogty
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z
_TEXT	SEGMENT
_pszDest$ = 8						; size = 4
_nDestLength$ = 12					; size = 4
_pszSrc$ = 16						; size = 4
_nSrcLength$ = 20					; size = 4
?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z PROC NEAR ; ATL::ChTraitsCRT<char>::ConvertToBaseType, COMDAT

; 452  : 		// nLen is in XCHARs
; 453  : 		::WideCharToMultiByte( _AtlGetConversionACP(), 0, pszSrc, nSrcLength, pszDest, nDestLength, NULL, NULL );

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _nDestLength$[esp-4]
  00004	8b 4c 24 04	 mov	 ecx, DWORD PTR _pszDest$[esp-4]
  00008	8b 54 24 10	 mov	 edx, DWORD PTR _nSrcLength$[esp-4]
  0000c	6a 00		 push	 0
  0000e	6a 00		 push	 0
  00010	50		 push	 eax
  00011	8b 44 24 18	 mov	 eax, DWORD PTR _pszSrc$[esp+8]
  00015	51		 push	 ecx
  00016	52		 push	 edx
  00017	50		 push	 eax
  00018	6a 00		 push	 0
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00020	50		 push	 eax
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32

; 454  : 	}

  00027	c3		 ret	 0
?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z ENDP ; ATL::ChTraitsCRT<char>::ConvertToBaseType
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L141741
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  00009	c3		 ret	 0
$L141741:

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC NEAR	; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@UtagTENTRYRECORD@@@std@@QAEXPAUtagTENTRYRECORD@@I@Z ; std::allocator<tagTENTRYRECORD>::deallocate
; Function compile flags: /Ogty
;	COMDAT ?deallocate@?$allocator@UtagTENTRYRECORD@@@std@@QAEXPAUtagTENTRYRECORD@@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@UtagTENTRYRECORD@@@std@@QAEXPAUtagTENTRYRECORD@@I@Z PROC NEAR ; std::allocator<tagTENTRYRECORD>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@UtagTENTRYRECORD@@@std@@QAEXPAUtagTENTRYRECORD@@I@Z ENDP ; std::allocator<tagTENTRYRECORD>::deallocate
_TEXT	ENDS
PUBLIC	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_pchSrc$ = 12						; size = 4
_nChars$ = 16						; size = 4
?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CopyChars, COMDAT

; 653  : 		memcpy( pchDest, pchSrc, nChars*sizeof( XCHAR ) );

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR _nChars$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR _pchSrc$[esp]
  00009	8b c1		 mov	 eax, ecx
  0000b	57		 push	 edi
  0000c	8b 7c 24 0c	 mov	 edi, DWORD PTR _pchDest$[esp+4]
  00010	c1 e9 02	 shr	 ecx, 2
  00013	f3 a5		 rep movsd
  00015	8b c8		 mov	 ecx, eax
  00017	83 e1 03	 and	 ecx, 3
  0001a	f3 a4		 rep movsb
  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi

; 654  : 	}

  0001e	c3		 ret	 0
?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ENDP ; ATL::CSimpleStringT<char,0>::CopyChars
_TEXT	ENDS
PUBLIC	?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped
; Function compile flags: /Ogty
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_pchSrc$ = 12						; size = 4
_nChars$ = 16						; size = 4
?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped, COMDAT

; 657  : 		memmove( pchDest, pchSrc, nChars*sizeof( XCHAR ) );

  00000	e9 00 00 00 00	 jmp	 _memmove
?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ENDP ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped
_TEXT	ENDS
PUBLIC	?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z ; ATL::CSimpleStringT<char,0>::StringLength
; Function compile flags: /Ogty
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::StringLength, COMDAT

; 678  : 		if( psz == NULL )

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _psz$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	75 01		 jne	 SHORT $L120135

; 683  : 	}

  00008	c3		 ret	 0
$L120135:

; 679  : 		{
; 680  : 			return( 0 );
; 681  : 		}
; 682  : 		return( int( strlen( psz ) ) );

  00009	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0000c	8d 64 24 00	 npad	 4
$L141758:
  00010	8a 08		 mov	 cl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 c9		 test	 cl, cl
  00015	75 f9		 jne	 SHORT $L141758
  00017	2b c2		 sub	 eax, edx

; 683  : 	}

  00019	c3		 ret	 0
?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z ENDP	; ATL::CSimpleStringT<char,0>::StringLength
_TEXT	ENDS
PUBLIC	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
; Function compile flags: /Ogty
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT
?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ PROC NEAR ; ATL::CSimpleStringT<char,0>::ThrowMemoryException, COMDAT

; 705  : 		AtlThrow( E_OUTOFMEMORY );

  00000	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  00005	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L141763:
$L141762:
  0000a	cc		 int	 3
?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ENDP ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
_TEXT	ENDS
PUBLIC	?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::Fork
; Function compile flags: /Ogty
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
tv181 = 8						; size = 4
_nLength$ = 8						; size = 4
?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::Fork, COMDAT
; _this$ = ecx

; 715  : 	{

  00000	51		 push	 ecx
  00001	53		 push	 ebx

; 716  : 		CStringData* pOldData = GetData();

  00002	8b 19		 mov	 ebx, DWORD PTR [ecx]
  00004	83 eb 10	 sub	 ebx, 16			; 00000010H
  00007	55		 push	 ebp

; 717  : 		int nOldLength = pOldData->nDataLength;

  00008	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  0000b	89 4c 24 08	 mov	 DWORD PTR _this$[esp+12], ecx

; 718  : 		CStringData* pNewData = pOldData->pStringMgr->Clone()->Allocate( nLength, sizeof( XCHAR ) );

  0000f	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00011	8b 01		 mov	 eax, DWORD PTR [ecx]
  00013	56		 push	 esi
  00014	ff 50 10	 call	 DWORD PTR [eax+16]
  00017	8b 74 24 14	 mov	 esi, DWORD PTR _nLength$[esp+12]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	6a 01		 push	 1
  0001f	56		 push	 esi
  00020	8b c8		 mov	 ecx, eax
  00022	ff 12		 call	 DWORD PTR [edx]

; 719  : 		if( pNewData == NULL )

  00024	85 c0		 test	 eax, eax
  00026	75 05		 jne	 SHORT $L120144

; 720  : 		{
; 721  : 			ThrowMemoryException();

  00028	e8 00 00 00 00	 call	 ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L141794:
$L120144:

; 722  : 		}
; 723  : 		int nCharsToCopy = ((nOldLength < nLength) ? nOldLength : nLength)+1;  // Copy '\0'

  0002d	3b ee		 cmp	 ebp, esi
  0002f	7d 02		 jge	 SHORT $L141768
  00031	8b f5		 mov	 esi, ebp
$L141768:
  00033	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]

; 724  : 		CopyChars( PXSTR( pNewData->data() ), PCXSTR( pOldData->data() ), nCharsToCopy );

  00036	8b d1		 mov	 edx, ecx
  00038	57		 push	 edi
  00039	c1 e9 02	 shr	 ecx, 2
  0003c	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  0003f	89 7c 24 18	 mov	 DWORD PTR tv181[esp+16], edi
  00043	8d 73 10	 lea	 esi, DWORD PTR [ebx+16]
  00046	f3 a5		 rep movsd
  00048	8b ca		 mov	 ecx, edx
  0004a	83 e1 03	 and	 ecx, 3
  0004d	f3 a4		 rep movsb

; 725  : 		pNewData->nDataLength = nOldLength;

  0004f	89 68 04	 mov	 DWORD PTR [eax+4], ebp

; 726  : 		pOldData->Release();

  00052	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  00055	83 c9 ff	 or	 ecx, -1
  00058	f0 0f c1 08	 lock	  xadd	 DWORD PTR [eax], ecx
  0005c	49		 dec	 ecx
  0005d	85 c9		 test	 ecx, ecx
  0005f	5f		 pop	 edi
  00060	7f 08		 jg	 SHORT $L141784
  00062	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00064	8b 11		 mov	 edx, DWORD PTR [ecx]
  00066	53		 push	 ebx
  00067	ff 52 04	 call	 DWORD PTR [edx+4]
$L141784:

; 727  : 		Attach( pNewData );

  0006a	8b 44 24 14	 mov	 eax, DWORD PTR tv181[esp+12]
  0006e	8b 4c 24 0c	 mov	 ecx, DWORD PTR _this$[esp+16]
  00072	5e		 pop	 esi
  00073	5d		 pop	 ebp
  00074	89 01		 mov	 DWORD PTR [ecx], eax
  00076	5b		 pop	 ebx

; 728  : 	}

  00077	59		 pop	 ecx
  00078	c2 04 00	 ret	 4
$L141793:
?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP		; ATL::CSimpleStringT<char,0>::Fork
_TEXT	ENDS
PUBLIC	?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::Reallocate
; Function compile flags: /Ogty
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_nLength$ = 8						; size = 4
?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Reallocate, COMDAT
; _this$ = ecx

; 776  : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi

; 777  : 		CStringData* pOldData = GetData();
; 778  : 		ATLASSERT( pOldData->nAllocLength < nLength );
; 779  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;
; 780  : 		CStringData* pNewData = pStringMgr->Reallocate( pOldData, nLength, sizeof( XCHAR ) );

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _nLength$[esp+4]
  00006	8b f1		 mov	 esi, ecx
  00008	8b 06		 mov	 eax, DWORD PTR [esi]
  0000a	8b 48 f0	 mov	 ecx, DWORD PTR [eax-16]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	83 e8 10	 sub	 eax, 16			; 00000010H
  00012	6a 01		 push	 1
  00014	57		 push	 edi
  00015	50		 push	 eax
  00016	ff 52 08	 call	 DWORD PTR [edx+8]

; 781  : 		if( pNewData == NULL )

  00019	85 c0		 test	 eax, eax
  0001b	75 05		 jne	 SHORT $L120153

; 782  : 		{
; 783  : 			ThrowMemoryException();

  0001d	e8 00 00 00 00	 call	 ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L141810:
$L120153:

; 784  : 		}
; 785  : 		Attach( pNewData );

  00022	83 c0 10	 add	 eax, 16			; 00000010H
  00025	5f		 pop	 edi
  00026	89 06		 mov	 DWORD PTR [esi], eax
  00028	5e		 pop	 esi

; 786  : 	}

  00029	c2 04 00	 ret	 4
$L141809:
?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::Reallocate
_TEXT	ENDS
PUBLIC	?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::SetLength
; Function compile flags: /Ogty
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_nLength$ = 8						; size = 4
?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::SetLength, COMDAT
; _this$ = ecx

; 790  : 		ATLASSERT( nLength >= 0 );
; 791  : 		ATLASSERT( nLength <= GetData()->nAllocLength );
; 792  : 
; 793  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nLength$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	7c 13		 jl	 SHORT $L120159
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	3b 42 f8	 cmp	 eax, DWORD PTR [edx-8]
  0000d	7f 0c		 jg	 SHORT $L120159

; 794  : 			AtlThrow(E_INVALIDARG);
; 795  : 			
; 796  : 		GetData()->nDataLength = nLength;

  0000f	89 42 f4	 mov	 DWORD PTR [edx-12], eax

; 797  : 		m_pszData[nLength] = 0;

  00012	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00014	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0

; 798  : 	}

  00018	c2 04 00	 ret	 4
$L120159:
  0001b	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00020	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L141821:
$L141820:
  00025	cc		 int	 3
?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::SetLength
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 1494 : 		{	// test if _Ptr points inside string

  00000	56		 push	 esi

; 1495 : 		if (_Ptr < _Myptr() || _Myptr() + _Mysize <= _Ptr)

  00001	8b 71 18	 mov	 esi, DWORD PTR [ecx+24]
  00004	83 fe 10	 cmp	 esi, 16			; 00000010H
  00007	57		 push	 edi
  00008	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0000b	72 04		 jb	 SHORT $L141830
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	eb 02		 jmp	 SHORT $L141831
$L141830:
  00011	8b d0		 mov	 edx, eax
$L141831:
  00013	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  00017	3b fa		 cmp	 edi, edx
  00019	72 17		 jb	 SHORT $L120182
  0001b	83 fe 10	 cmp	 esi, 16			; 00000010H
  0001e	72 02		 jb	 SHORT $L141838
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L141838:
  00022	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00025	03 c8		 add	 ecx, eax
  00027	3b cf		 cmp	 ecx, edi
  00029	76 07		 jbe	 SHORT $L120182
  0002b	5f		 pop	 edi

; 1497 : 		else
; 1498 : 			return (true);

  0002c	b0 01		 mov	 al, 1
  0002e	5e		 pop	 esi

; 1499 : 		}

  0002f	c2 04 00	 ret	 4
$L120182:
  00032	5f		 pop	 edi

; 1496 : 			return (false);	// don't ask

  00033	32 c0		 xor	 al, al
  00035	5e		 pop	 esi

; 1499 : 		}

  00036	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC NEAR			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC NEAR		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	83 c8 ff	 or	 eax, -1

; 159  : 		}

  00003	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC NEAR			; std::swap<char>, COMDAT

; 15   : 	_Ty _Tmp = _Left;

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	56		 push	 esi

; 16   : 	_Left = _Right, _Right = _Tmp;

  00007	8b 74 24 0c	 mov	 esi, DWORD PTR __Right$[esp]
  0000b	8a 16		 mov	 dl, BYTE PTR [esi]
  0000d	88 10		 mov	 BYTE PTR [eax], dl
  0000f	88 0e		 mov	 BYTE PTR [esi], cl
  00011	5e		 pop	 esi

; 17   : 	}

  00012	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC NEAR		; std::_Allocate<char>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 35   : 	}

  0000d	c3		 ret	 0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
PUBLIC	?GetMemberSize@CTGuild@@QAEEXZ			; CTGuild::GetMemberSize
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tguild.cpp
;	COMDAT ?GetMemberSize@CTGuild@@QAEEXZ
_TEXT	SEGMENT
?GetMemberSize@CTGuild@@QAEEXZ PROC NEAR		; CTGuild::GetMemberSize, COMDAT
; _this$ = ecx

; 265  : 	return (BYTE)m_mapTMember.size();

  00000	8a 41 78	 mov	 al, BYTE PTR [ecx+120]

; 266  : }

  00003	c3		 ret	 0
?GetMemberSize@CTGuild@@QAEEXZ ENDP			; CTGuild::GetMemberSize
_TEXT	ENDS
PUBLIC	?CanAddMember@CTGuild@@QAEEXZ			; CTGuild::CanAddMember
; Function compile flags: /Ogty
;	COMDAT ?CanAddMember@CTGuild@@QAEEXZ
_TEXT	SEGMENT
?CanAddMember@CTGuild@@QAEEXZ PROC NEAR			; CTGuild::CanAddMember, COMDAT
; _this$ = ecx

; 270  : 	if(GetMemberSize() >= m_pTLEVEL->m_bMaxCnt)

  00000	8b 81 c8 00 00
	00		 mov	 eax, DWORD PTR [ecx+200]
  00006	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  00009	8a 49 78	 mov	 cl, BYTE PTR [ecx+120]
  0000c	3a ca		 cmp	 cl, dl
  0000e	0f 92 c0	 setb	 al

; 271  : 		return FALSE;
; 272  : 
; 273  : 	return TRUE;
; 274  : }

  00011	c3		 ret	 0
?CanAddMember@CTGuild@@QAEEXZ ENDP			; CTGuild::CanAddMember
_TEXT	ENDS
PUBLIC	?CanAddTactics@CTGuild@@QAEEXZ			; CTGuild::CanAddTactics
; Function compile flags: /Ogty
;	COMDAT ?CanAddTactics@CTGuild@@QAEEXZ
_TEXT	SEGMENT
?CanAddTactics@CTGuild@@QAEEXZ PROC NEAR		; CTGuild::CanAddTactics, COMDAT
; _this$ = ecx

; 277  : 	if(m_mapTTactics.size() >= m_pTLEVEL->m_bTacticsCnt)

  00000	8b 81 c8 00 00
	00		 mov	 eax, DWORD PTR [ecx+200]
  00006	0f b6 50 0b	 movzx	 edx, BYTE PTR [eax+11]
  0000a	39 91 84 00 00
	00		 cmp	 DWORD PTR [ecx+132], edx
  00010	0f 92 c0	 setb	 al

; 278  : 		return FALSE;
; 279  : 
; 280  : 	return TRUE;
; 281  : }

  00013	c3		 ret	 0
?CanAddTactics@CTGuild@@QAEEXZ ENDP			; CTGuild::CanAddTactics
_TEXT	ENDS
PUBLIC	?UpdateLevel@CTGuild@@QAEXXZ			; CTGuild::UpdateLevel
EXTRN	?FindGuildLevel@CTWorldSvrModule@@QAEPAUtagTGUILDLEVEL@@E@Z:NEAR ; CTWorldSvrModule::FindGuildLevel
EXTRN	?SendDM_GUILDLEVEL_REQ@CTWorldSvrModule@@QAEXKE@Z:NEAR ; CTWorldSvrModule::SendDM_GUILDLEVEL_REQ
EXTRN	?SendDM_GUILDCABINETMAX_REQ@CTWorldSvrModule@@QAEXKE@Z:NEAR ; CTWorldSvrModule::SendDM_GUILDCABINETMAX_REQ
; Function compile flags: /Ogty
;	COMDAT ?UpdateLevel@CTGuild@@QAEXXZ
_TEXT	SEGMENT
_bPrevLevel$ = -5					; size = 1
_bLevel$134792 = -4					; size = 1
?UpdateLevel@CTGuild@@QAEXXZ PROC NEAR			; CTGuild::UpdateLevel, COMDAT
; _this$ = ecx

; 283  : {

  00000	83 ec 08	 sub	 esp, 8
  00003	53		 push	 ebx
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx

; 284  : 	BYTE bPrevLevel = m_bLevel;
; 285  : 	BYTE bMinCnt = m_pTLEVEL->m_bMinCnt;
; 286  : 	BYTE bMemberCnt = GetMemberSize();
; 287  : 
; 288  : 	if(bMinCnt > bMemberCnt)

  00007	8b 8e c8 00 00
	00		 mov	 ecx, DWORD PTR [esi+200]
  0000d	8a 46 10	 mov	 al, BYTE PTR [esi+16]
  00010	8a 5e 78	 mov	 bl, BYTE PTR [esi+120]
  00013	38 59 09	 cmp	 BYTE PTR [ecx+9], bl
  00016	88 44 24 0b	 mov	 BYTE PTR _bPrevLevel$[esp+16], al

; 289  : 		m_bLevel = (m_bLevel-1) ? m_bLevel-1 : 1;

  0001a	0f b6 c0	 movzx	 eax, al
  0001d	76 0a		 jbe	 SHORT $L134790
  0001f	48		 dec	 eax
  00020	75 41		 jne	 SHORT $L141883
  00022	b8 01 00 00 00	 mov	 eax, 1

; 290  : 	else

  00027	eb 3a		 jmp	 SHORT $L141883
$L134790:

; 291  : 	{
; 292  : 		BYTE bLevel = (m_bLevel+1) > MAX_GUILD_LEVEL ? MAX_GUILD_LEVEL : m_bLevel+1;

  00029	40		 inc	 eax
  0002a	83 f8 0a	 cmp	 eax, 10			; 0000000aH
  0002d	c6 44 24 0c 0a	 mov	 BYTE PTR _bLevel$134792[esp+16], 10 ; 0000000aH
  00032	7f 04		 jg	 SHORT $L141885
  00034	88 44 24 0c	 mov	 BYTE PTR _bLevel$134792[esp+16], al
$L141885:

; 293  : 		LPTGUILDLEVEL pNextLevel = _AtlModule.FindGuildLevel(bLevel);

  00038	8b 54 24 0c	 mov	 edx, DWORD PTR _bLevel$134792[esp+16]
  0003c	52		 push	 edx
  0003d	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTWorldSvrModule@@A
  00042	e8 00 00 00 00	 call	 ?FindGuildLevel@CTWorldSvrModule@@QAEPAUtagTGUILDLEVEL@@E@Z ; CTWorldSvrModule::FindGuildLevel

; 294  : 		if(pNextLevel)

  00047	85 c0		 test	 eax, eax
  00049	74 1b		 je	 SHORT $L141895

; 295  : 		{
; 296  : 			if(m_dwExp >= m_pTLEVEL->m_dwEXP &&
; 297  : 				bMemberCnt >= pNextLevel->m_bMinCnt)

  0004b	8b 8e c8 00 00
	00		 mov	 ecx, DWORD PTR [esi+200]
  00051	8b 56 20	 mov	 edx, DWORD PTR [esi+32]
  00054	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00057	72 0d		 jb	 SHORT $L141895
  00059	3a 58 09	 cmp	 bl, BYTE PTR [eax+9]
  0005c	72 08		 jb	 SHORT $L141895

; 298  : 				m_bLevel++;

  0005e	8a 46 10	 mov	 al, BYTE PTR [esi+16]
  00061	fe c0		 inc	 al
$L141883:
  00063	88 46 10	 mov	 BYTE PTR [esi+16], al
$L141895:

; 299  : 		}
; 300  : 	}
; 301  : 
; 302  : 	if(bPrevLevel != m_bLevel)

  00066	8a 4c 24 0b	 mov	 cl, BYTE PTR _bPrevLevel$[esp+16]

; 303  : 	{
; 304  : 		LPTGUILDLEVEL pLevel = _AtlModule.FindGuildLevel(m_bLevel);

  0006a	33 c0		 xor	 eax, eax
  0006c	8a 46 10	 mov	 al, BYTE PTR [esi+16]
  0006f	3a c8		 cmp	 cl, al
  00071	74 31		 je	 SHORT $L134801
  00073	50		 push	 eax
  00074	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTWorldSvrModule@@A
  00079	e8 00 00 00 00	 call	 ?FindGuildLevel@CTWorldSvrModule@@QAEPAUtagTGUILDLEVEL@@E@Z ; CTWorldSvrModule::FindGuildLevel

; 305  : 		if(pLevel)

  0007e	85 c0		 test	 eax, eax
  00080	74 1b		 je	 SHORT $L134800

; 306  : 		{
; 307  : 			m_pTLEVEL = pLevel;
; 308  : 			_AtlModule.SendDM_GUILDLEVEL_REQ(m_dwID, m_bLevel);

  00082	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00084	89 86 c8 00 00
	00		 mov	 DWORD PTR [esi+200], eax
  0008a	33 c0		 xor	 eax, eax
  0008c	8a 46 10	 mov	 al, BYTE PTR [esi+16]
  0008f	50		 push	 eax
  00090	51		 push	 ecx
  00091	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTWorldSvrModule@@A
  00096	e8 00 00 00 00	 call	 ?SendDM_GUILDLEVEL_REQ@CTWorldSvrModule@@QAEXKE@Z ; CTWorldSvrModule::SendDM_GUILDLEVEL_REQ

; 309  : 		}
; 310  : 		else

  0009b	eb 07		 jmp	 SHORT $L134801
$L134800:

; 311  : 			m_bLevel = bPrevLevel;

  0009d	8a 54 24 0b	 mov	 dl, BYTE PTR _bPrevLevel$[esp+16]
  000a1	88 56 10	 mov	 BYTE PTR [esi+16], dl
$L134801:

; 312  : 	}
; 313  : 
; 314  : 	if( m_bMaxCabinet < m_pTLEVEL->m_bCabinetCnt)

  000a4	8b 86 c8 00 00
	00		 mov	 eax, DWORD PTR [esi+200]
  000aa	0f b6 40 0a	 movzx	 eax, BYTE PTR [eax+10]
  000ae	38 46 60	 cmp	 BYTE PTR [esi+96], al
  000b1	73 11		 jae	 SHORT $L134802

; 315  : 	{
; 316  : 		m_bMaxCabinet = m_pTLEVEL->m_bCabinetCnt;
; 317  : 		_AtlModule.SendDM_GUILDCABINETMAX_REQ(m_dwID, m_bMaxCabinet);

  000b3	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000b5	50		 push	 eax
  000b6	51		 push	 ecx
  000b7	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTWorldSvrModule@@A
  000bc	88 46 60	 mov	 BYTE PTR [esi+96], al
  000bf	e8 00 00 00 00	 call	 ?SendDM_GUILDCABINETMAX_REQ@CTWorldSvrModule@@QAEXKE@Z ; CTWorldSvrModule::SendDM_GUILDCABINETMAX_REQ
$L134802:
  000c4	5e		 pop	 esi
  000c5	5b		 pop	 ebx

; 318  : 	}
; 319  : }

  000c6	83 c4 08	 add	 esp, 8
  000c9	c3		 ret	 0
?UpdateLevel@CTGuild@@QAEXXZ ENDP			; CTGuild::UpdateLevel
_TEXT	ENDS
PUBLIC	?GainEXP@CTGuild@@QAEEPAUtagTGUILDMEMBER@@K@Z	; CTGuild::GainEXP
EXTRN	?SendDM_GUILDCONTRIBUTION_REQ@CTWorldSvrModule@@QAEXKKKKKK@Z:NEAR ; CTWorldSvrModule::SendDM_GUILDCONTRIBUTION_REQ
; Function compile flags: /Ogty
;	COMDAT ?GainEXP@CTGuild@@QAEEPAUtagTGUILDMEMBER@@K@Z
_TEXT	SEGMENT
_pMember$ = 8						; size = 4
_dwExp$ = 12						; size = 4
?GainEXP@CTGuild@@QAEEPAUtagTGUILDMEMBER@@K@Z PROC NEAR	; CTGuild::GainEXP, COMDAT
; _this$ = ecx

; 322  : 	if(dwExp)

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _dwExp$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	56		 push	 esi
  00007	8b f1		 mov	 esi, ecx
  00009	74 33		 je	 SHORT $L141899

; 323  : 	{
; 324  : 		m_dwExp += dwExp;

  0000b	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]

; 325  : 
; 326  : 		_AtlModule.SendDM_GUILDCONTRIBUTION_REQ(m_dwID, pMember->m_dwID, m_dwExp, m_dwGold, m_dwSilver, m_dwCooper);

  0000e	8b 56 2c	 mov	 edx, DWORD PTR [esi+44]
  00011	03 c8		 add	 ecx, eax
  00013	8b c1		 mov	 eax, ecx
  00015	89 4e 20	 mov	 DWORD PTR [esi+32], ecx
  00018	8b 4e 30	 mov	 ecx, DWORD PTR [esi+48]
  0001b	51		 push	 ecx
  0001c	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  0001f	52		 push	 edx
  00020	8b 54 24 10	 mov	 edx, DWORD PTR _pMember$[esp+8]
  00024	51		 push	 ecx
  00025	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00027	50		 push	 eax
  00028	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0002b	50		 push	 eax
  0002c	51		 push	 ecx
  0002d	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTWorldSvrModule@@A
  00032	e8 00 00 00 00	 call	 ?SendDM_GUILDCONTRIBUTION_REQ@CTWorldSvrModule@@QAEXKKKKKK@Z ; CTWorldSvrModule::SendDM_GUILDCONTRIBUTION_REQ

; 327  : 
; 328  : 		UpdateLevel();

  00037	8b ce		 mov	 ecx, esi
  00039	e8 00 00 00 00	 call	 ?UpdateLevel@CTGuild@@QAEXXZ ; CTGuild::UpdateLevel
$L141899:

; 329  : 	}
; 330  : 
; 331  : 	return TRUE;

  0003e	b0 01		 mov	 al, 1
  00040	5e		 pop	 esi

; 332  : }

  00041	c2 08 00	 ret	 8
?GainEXP@CTGuild@@QAEEPAUtagTGUILDMEMBER@@K@Z ENDP	; CTGuild::GainEXP
_TEXT	ENDS
PUBLIC	?GainMoney@CTGuild@@QAEEKKK@Z			; CTGuild::GainMoney
; Function compile flags: /Ogty
;	COMDAT ?GainMoney@CTGuild@@QAEEKKK@Z
_TEXT	SEGMENT
tv143 = -8						; size = 8
tv137 = -8						; size = 8
tv89 = -8						; size = 8
_dwGold$ = 8						; size = 4
_dwSilver$ = 12						; size = 4
_dwCooper$ = 16						; size = 4
?GainMoney@CTGuild@@QAEEKKK@Z PROC NEAR			; CTGuild::GainMoney, COMDAT
; _this$ = ecx

; 335  : 	__int64 llMoney = CalcMoney(dwGold, dwSilver, dwCooper); 

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _dwGold$[esp-4]
  00004	83 ec 08	 sub	 esp, 8
  00007	53		 push	 ebx
  00008	8b 5c 24 14	 mov	 ebx, DWORD PTR _dwSilver$[esp+8]
  0000c	55		 push	 ebp
  0000d	69 db e8 03 00
	00		 imul	 ebx, 1000		; 000003e8H
  00013	8b 6c 24 1c	 mov	 ebp, DWORD PTR _dwCooper$[esp+12]
  00017	56		 push	 esi
  00018	8b f1		 mov	 esi, ecx
  0001a	b9 40 42 0f 00	 mov	 ecx, 1000000		; 000f4240H
  0001f	f7 e1		 mul	 ecx
  00021	03 dd		 add	 ebx, ebp
  00023	33 ed		 xor	 ebp, ebp
  00025	03 d8		 add	 ebx, eax
  00027	13 ea		 adc	 ebp, edx

; 336  : 	if(llMoney)

  00029	8b d3		 mov	 edx, ebx
  0002b	0b d5		 or	 edx, ebp
  0002d	74 6d		 je	 SHORT $L141912

; 337  : 	{
; 338  : 		__int64 llGMoney = llMoney + CalcMoney(m_dwGold, m_dwSilver, m_dwCooper);

  0002f	8b 4e 2c	 mov	 ecx, DWORD PTR [esi+44]
  00032	8b 56 30	 mov	 edx, DWORD PTR [esi+48]
  00035	69 c9 e8 03 00
	00		 imul	 ecx, 1000		; 000003e8H
  0003b	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  0003e	03 ca		 add	 ecx, edx
  00040	ba 40 42 0f 00	 mov	 edx, 1000000		; 000f4240H
  00045	f7 e2		 mul	 edx
  00047	57		 push	 edi
  00048	33 ff		 xor	 edi, edi
  0004a	03 c8		 add	 ecx, eax
  0004c	13 fa		 adc	 edi, edx

; 339  : 		CalcMoney(llGMoney, m_dwGold, m_dwSilver, m_dwCooper);

  0004e	6a 00		 push	 0
  00050	03 cb		 add	 ecx, ebx
  00052	68 e8 03 00 00	 push	 1000			; 000003e8H
  00057	13 fd		 adc	 edi, ebp
  00059	57		 push	 edi
  0005a	51		 push	 ecx
  0005b	e8 00 00 00 00	 call	 __alldvrm
  00060	6a 00		 push	 0
  00062	68 e8 03 00 00	 push	 1000			; 000003e8H
  00067	52		 push	 edx
  00068	8b f9		 mov	 edi, ecx
  0006a	50		 push	 eax
  0006b	89 5c 24 24	 mov	 DWORD PTR tv143[esp+44], ebx
  0006f	89 7e 30	 mov	 DWORD PTR [esi+48], edi
  00072	e8 00 00 00 00	 call	 __alldvrm

; 340  : 
; 341  : 		_AtlModule.SendDM_GUILDCONTRIBUTION_REQ(m_dwID, 0, m_dwExp, m_dwGold, m_dwSilver, m_dwCooper);

  00077	57		 push	 edi
  00078	51		 push	 ecx
  00079	50		 push	 eax
  0007a	89 46 28	 mov	 DWORD PTR [esi+40], eax
  0007d	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  00080	50		 push	 eax
  00081	89 4e 2c	 mov	 DWORD PTR [esi+44], ecx
  00084	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00086	6a 00		 push	 0
  00088	51		 push	 ecx
  00089	89 5c 24 2c	 mov	 DWORD PTR tv89[esp+52], ebx
  0008d	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTWorldSvrModule@@A
  00092	89 54 24 2c	 mov	 DWORD PTR tv137[esp+52], edx
  00096	e8 00 00 00 00	 call	 ?SendDM_GUILDCONTRIBUTION_REQ@CTWorldSvrModule@@QAEXKKKKKK@Z ; CTWorldSvrModule::SendDM_GUILDCONTRIBUTION_REQ
  0009b	5f		 pop	 edi
$L141912:
  0009c	5e		 pop	 esi
  0009d	5d		 pop	 ebp

; 342  : 	}
; 343  : 
; 344  : 	return TRUE;

  0009e	b0 01		 mov	 al, 1
  000a0	5b		 pop	 ebx

; 345  : }

  000a1	83 c4 08	 add	 esp, 8
  000a4	c2 0c 00	 ret	 12			; 0000000cH
?GainMoney@CTGuild@@QAEEKKK@Z ENDP			; CTGuild::GainMoney
_TEXT	ENDS
PUBLIC	?UseMoney@CTGuild@@QAEE_JE@Z			; CTGuild::UseMoney
; Function compile flags: /Ogty
;	COMDAT ?UseMoney@CTGuild@@QAEE_JE@Z
_TEXT	SEGMENT
_dlMoney$ = 8						; size = 8
_bUse$ = 16						; size = 1
?UseMoney@CTGuild@@QAEE_JE@Z PROC NEAR			; CTGuild::UseMoney, COMDAT
; _this$ = ecx

; 348  : {

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi
  00003	57		 push	 edi
  00004	8b f9		 mov	 edi, ecx

; 349  : 	__int64 dlMyMoney = CalcMoney(m_dwGold, m_dwSilver, m_dwCooper);

  00006	8b 77 2c	 mov	 esi, DWORD PTR [edi+44]
  00009	8b 47 28	 mov	 eax, DWORD PTR [edi+40]
  0000c	69 f6 e8 03 00
	00		 imul	 esi, 1000		; 000003e8H
  00012	8b 4f 30	 mov	 ecx, DWORD PTR [edi+48]
  00015	8d 5f 2c	 lea	 ebx, DWORD PTR [edi+44]
  00018	ba 40 42 0f 00	 mov	 edx, 1000000		; 000f4240H
  0001d	f7 e2		 mul	 edx
  0001f	8d 6f 30	 lea	 ebp, DWORD PTR [edi+48]
  00022	03 f1		 add	 esi, ecx
  00024	33 c9		 xor	 ecx, ecx
  00026	03 f0		 add	 esi, eax

; 350  : 
; 351  : 	if(dlMyMoney < dlMoney)

  00028	8b 44 24 18	 mov	 eax, DWORD PTR _dlMoney$[esp+16]
  0002c	13 ca		 adc	 ecx, edx
  0002e	3b c8		 cmp	 ecx, eax
  00030	8b 54 24 14	 mov	 edx, DWORD PTR _dlMoney$[esp+12]
  00034	7f 0f		 jg	 SHORT $L134824
  00036	7c 04		 jl	 SHORT $L141919
  00038	3b f2		 cmp	 esi, edx
  0003a	73 09		 jae	 SHORT $L134824
$L141919:
  0003c	5f		 pop	 edi
  0003d	5e		 pop	 esi
  0003e	5d		 pop	 ebp

; 352  : 		return FALSE;

  0003f	32 c0		 xor	 al, al
  00041	5b		 pop	 ebx

; 363  : }

  00042	c2 0c 00	 ret	 12			; 0000000cH
$L134824:

; 353  : 
; 354  : 	if(bUse && dlMoney)

  00045	80 7c 24 1c 00	 cmp	 BYTE PTR _bUse$[esp+12], 0
  0004a	74 38		 je	 SHORT $L134825
  0004c	0b d0		 or	 edx, eax
  0004e	74 34		 je	 SHORT $L134825

; 355  : 	{
; 356  : 		dlMyMoney -= dlMoney;
; 357  : 		CalcMoney(dlMyMoney, m_dwGold, m_dwSilver, m_dwCooper);

  00050	55		 push	 ebp
  00051	53		 push	 ebx
  00052	8d 57 28	 lea	 edx, DWORD PTR [edi+40]
  00055	52		 push	 edx
  00056	2b 74 24 20	 sub	 esi, DWORD PTR _dlMoney$[esp+24]
  0005a	1b c8		 sbb	 ecx, eax
  0005c	51		 push	 ecx
  0005d	56		 push	 esi
  0005e	e8 00 00 00 00	 call	 ?CalcMoney@@YAX_JAAK11@Z ; CalcMoney

; 358  : 
; 359  : 		_AtlModule.SendDM_GUILDCONTRIBUTION_REQ(m_dwID, 0, m_dwExp, m_dwGold, m_dwSilver, m_dwCooper);

  00063	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  00066	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00068	8b 57 28	 mov	 edx, DWORD PTR [edi+40]
  0006b	83 c4 14	 add	 esp, 20			; 00000014H
  0006e	50		 push	 eax
  0006f	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  00072	51		 push	 ecx
  00073	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00075	52		 push	 edx
  00076	50		 push	 eax
  00077	6a 00		 push	 0
  00079	51		 push	 ecx
  0007a	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTWorldSvrModule@@A
  0007f	e8 00 00 00 00	 call	 ?SendDM_GUILDCONTRIBUTION_REQ@CTWorldSvrModule@@QAEXKKKKKK@Z ; CTWorldSvrModule::SendDM_GUILDCONTRIBUTION_REQ
$L134825:
  00084	5f		 pop	 edi
  00085	5e		 pop	 esi
  00086	5d		 pop	 ebp

; 360  : 	}
; 361  : 
; 362  : 	return TRUE;

  00087	b0 01		 mov	 al, 1
  00089	5b		 pop	 ebx

; 363  : }

  0008a	c2 0c 00	 ret	 12			; 0000000cH
?UseMoney@CTGuild@@QAEE_JE@Z ENDP			; CTGuild::UseMoney
_TEXT	ENDS
PUBLIC	?UseMoney@CTGuild@@QAEEKKKE@Z			; CTGuild::UseMoney
; Function compile flags: /Ogty
;	COMDAT ?UseMoney@CTGuild@@QAEEKKKE@Z
_TEXT	SEGMENT
_dwGold$ = 8						; size = 4
_dwSilver$ = 12						; size = 4
_dwCooper$ = 16						; size = 4
_bUse$ = 20						; size = 1
?UseMoney@CTGuild@@QAEEKKKE@Z PROC NEAR			; CTGuild::UseMoney, COMDAT
; _this$ = ecx

; 367  : 	__int64 llMoney = CalcMoney(dwGold, dwSilver, dwCooper); 

  00000	8b 54 24 08	 mov	 edx, DWORD PTR _dwSilver$[esp-4]

; 368  : 	return UseMoney(llMoney, bUse);

  00004	8b 44 24 10	 mov	 eax, DWORD PTR _bUse$[esp-4]
  00008	69 d2 e8 03 00
	00		 imul	 edx, 1000		; 000003e8H
  0000e	56		 push	 esi
  0000f	57		 push	 edi
  00010	50		 push	 eax
  00011	03 54 24 18	 add	 edx, DWORD PTR _dwCooper$[esp+8]
  00015	8b 44 24 10	 mov	 eax, DWORD PTR _dwGold$[esp+8]
  00019	8b f2		 mov	 esi, edx
  0001b	ba 40 42 0f 00	 mov	 edx, 1000000		; 000f4240H
  00020	f7 e2		 mul	 edx
  00022	33 ff		 xor	 edi, edi
  00024	03 f0		 add	 esi, eax
  00026	13 fa		 adc	 edi, edx
  00028	57		 push	 edi
  00029	56		 push	 esi
  0002a	e8 00 00 00 00	 call	 ?UseMoney@CTGuild@@QAEE_JE@Z ; CTGuild::UseMoney
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi

; 369  : }

  00031	c2 10 00	 ret	 16			; 00000010H
?UseMoney@CTGuild@@QAEEKKKE@Z ENDP			; CTGuild::UseMoney
_TEXT	ENDS
PUBLIC	?GetArticleSize@CTGuild@@QAEEXZ			; CTGuild::GetArticleSize
; Function compile flags: /Ogty
;	COMDAT ?GetArticleSize@CTGuild@@QAEEXZ
_TEXT	SEGMENT
?GetArticleSize@CTGuild@@QAEEXZ PROC NEAR		; CTGuild::GetArticleSize, COMDAT
; _this$ = ecx

; 397  : 	BYTE bSize = BYTE(m_mapTArticle.size());
; 398  : 
; 399  : 	return bSize;

  00000	8a 81 94 00 00
	00		 mov	 al, BYTE PTR [ecx+148]

; 400  : }

  00006	c3		 ret	 0
?GetArticleSize@CTGuild@@QAEEXZ ENDP			; CTGuild::GetArticleSize
_TEXT	ENDS
PUBLIC	?GetCabinetSize@CTGuild@@QAEEXZ			; CTGuild::GetCabinetSize
; Function compile flags: /Ogty
;	COMDAT ?GetCabinetSize@CTGuild@@QAEEXZ
_TEXT	SEGMENT
?GetCabinetSize@CTGuild@@QAEEXZ PROC NEAR		; CTGuild::GetCabinetSize, COMDAT
; _this$ = ecx

; 493  : 	BYTE bSize = BYTE(m_mapTCabinet.size());
; 494  : 
; 495  : 	return bSize;

  00000	8a 41 6c	 mov	 al, BYTE PTR [ecx+108]

; 496  : }

  00003	c3		 ret	 0
?GetCabinetSize@CTGuild@@QAEEXZ ENDP			; CTGuild::GetCabinetSize
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator+
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Hiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Off$[esp-4]
  00004	8b 01		 mov	 eax, DWORD PTR [ecx]
  00006	6b d2 2c	 imul	 edx, 44			; 0000002cH
  00009	03 d0		 add	 edx, eax
  0000b	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000f	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  00011	c2 08 00	 ret	 8
??Hiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator+
_TEXT	ENDS
PUBLIC	?Compare@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBEHPBD@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::Compare
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?Compare@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBEHPBD@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
?Compare@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBEHPBD@Z PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::Compare, COMDAT
; _this$ = ecx

; 1088 : 		ATLASSERT( AtlIsValidString( psz ) );
; 1089 : 		return( StringTraits::StringCompare( GetString(), psz ) );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _psz$[esp-4]
  00004	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00006	50		 push	 eax
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 __mbscmp
  0000d	83 c4 08	 add	 esp, 8

; 1090 : 	}

  00010	c2 04 00	 ret	 4
?Compare@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBEHPBD@Z ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::Compare
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Key
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@KV?$allocator@K@std@@@std@@IAE@V?$allocator@K@1@@Z ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::_Vector_val<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0?$_Vector_val@KV?$allocator@K@std@@@std@@IAE@V?$allocator@K@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@KV?$allocator@K@std@@@std@@IAE@V?$allocator@K@1@@Z PROC NEAR ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::_Vector_val<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 21   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 22   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Vector_val@KV?$allocator@K@std@@@std@@IAE@V?$allocator@K@1@@Z ENDP ; std::_Vector_val<unsigned long,std::allocator<unsigned long> >::_Vector_val<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAE@V?$allocator@UtagTGUILDPOINTREWARD@@@1@@Z ; std::_Vector_val<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Vector_val<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Vector_val@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAE@V?$allocator@UtagTGUILDPOINTREWARD@@@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAE@V?$allocator@UtagTGUILDPOINTREWARD@@@1@@Z PROC NEAR ; std::_Vector_val<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Vector_val<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >, COMDAT
; _this$ = ecx

; 21   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 22   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Vector_val@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAE@V?$allocator@UtagTGUILDPOINTREWARD@@@1@@Z ENDP ; std::_Vector_val<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Vector_val<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTITEM@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTITEM@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTITEM@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTITEM@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Off$[esp-4]
  00004	8b 01		 mov	 eax, DWORD PTR [ecx]
  00006	c1 e2 04	 shl	 edx, 4
  00009	03 d0		 add	 edx, eax
  0000b	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000f	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  00011	c2 08 00	 ret	 8
??Hiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Giterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEHABVconst_iterator@12@@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Giterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEHABVconst_iterator@12@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??Giterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEHABVconst_iterator@12@@Z PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::operator-, COMDAT
; _this$ = ecx

; 279  : 			return ((const_iterator)*this - _Right);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	c1 f8 04	 sar	 eax, 4

; 280  : 			}

  0000b	c2 04 00	 ret	 4
??Giterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEHABVconst_iterator@12@@Z ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::operator-
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEAAUtagTENTRYRECORD@@XZ ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEAAUtagTENTRYRECORD@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEAAUtagTENTRYRECORD@@XZ PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEAAUtagTENTRYRECORD@@XZ ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Key
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@KAABGPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Root
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBGG@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBGG@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBGG@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBGG@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@K@std@@QAEPAKI@Z		; std::allocator<unsigned long>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@K@std@@QAEPAKI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@K@std@@QAEPAKI@Z PROC NEAR	; std::allocator<unsigned long>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c 85 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*4]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 138  : 		}

  00014	c2 04 00	 ret	 4
?allocate@?$allocator@K@std@@QAEPAKI@Z ENDP		; std::allocator<unsigned long>::allocate
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L137511
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L137510:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L137512

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L137513
$L137512:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L137513:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L137510
  00029	5b		 pop	 ebx
$L137511:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L137517

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L137517:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L137518

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L137518:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L137520

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L137520:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L137525

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L137525:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L137526

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L137526:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L137528

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L137528:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L137628
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L137627:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L137629

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L137630
$L137629:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L137630:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L137627
  00029	5b		 pop	 ebx
$L137628:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L137634

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L137634:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L137635

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L137635:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L137637

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L137637:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L137642

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L137642:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L137643

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L137643:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L137645

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L137645:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L137745
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L137744:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L137746

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L137747
$L137746:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L137747:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L137744
  00029	5b		 pop	 ebx
$L137745:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L137751

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L137751:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L137752

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L137752:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L137754

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L137754:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L137759

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L137759:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L137760

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L137760:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L137762

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L137762:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L137862
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L137861:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L137863

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L137864
$L137863:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L137864:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L137861
  00029	5b		 pop	 ebx
$L137862:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L137868

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L137868:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L137869

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L137869:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L137871

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L137871:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L137876

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L137876:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L137877

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L137877:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L137879

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L137879:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size, COMDAT
; _this$ = ecx

; 521  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 522  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::max_size
_TEXT	ENDS
PUBLIC	?max_size@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::max_size, COMDAT
; _this$ = ecx

; 521  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 0f	 mov	 eax, 268435455		; 0fffffffH

; 522  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEPAUtagTGUILDPOINTREWARD@@I@Z ; std::allocator<tagTGUILDPOINTREWARD>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEPAUtagTGUILDPOINTREWARD@@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEPAUtagTGUILDPOINTREWARD@@I@Z PROC NEAR ; std::allocator<tagTGUILDPOINTREWARD>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	c1 e0 04	 shl	 eax, 4
  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000d	83 c4 04	 add	 esp, 4

; 138  : 		}

  00010	c2 04 00	 ret	 4
?allocate@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEPAUtagTGUILDPOINTREWARD@@I@Z ENDP ; std::allocator<tagTGUILDPOINTREWARD>::allocate
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	?max_size@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::max_size, COMDAT
; _this$ = ecx

; 453  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 3f	 mov	 eax, 1073741823		; 3fffffffH

; 454  : 		}

  00005	c3		 ret	 0
?max_size@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::max_size
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lbound
; Function compile flags: /Ogty
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABG@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 11	 mov	 dl, BYTE PTR [ecx+17]
  00009	84 d2		 test	 dl, dl
  0000b	75 1f		 jne	 SHORT $L138006
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	66 8b 12	 mov	 dx, WORD PTR [edx]
  00014	53		 push	 ebx
$L138005:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00015	66 39 51 0c	 cmp	 WORD PTR [ecx+12], dx
  00019	73 05		 jae	 SHORT $L138007

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  0001b	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001e	eb 04		 jmp	 SHORT $L138008
$L138007:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  00020	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00022	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L138008:
  00024	8a 59 11	 mov	 bl, BYTE PTR [ecx+17]
  00027	84 db		 test	 bl, bl
  00029	74 ea		 je	 SHORT $L138005
  0002b	5b		 pop	 ebx
$L138006:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002c	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lrotate
; Function compile flags: /Ogty
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 11	 mov	 bl, BYTE PTR [esi+17]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L138014

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L138014:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L138015

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L138015:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L138017

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L138017:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 11	 mov	 bl, BYTE PTR [esi+17]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L138024

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L138024:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L138025

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L138025:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L138027

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L138027:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Ubound
; Function compile flags: /Ogty
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Ubound, COMDAT
; _this$ = ecx

; 1089 : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L138079
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L138078:

; 1093 : 			if (this->comp(_Keyval, _Key(_Pnode)))

  00014	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00017	73 06		 jae	 SHORT $L138080

; 1094 : 				{	// _Pnode greater than _Keyval, remember it
; 1095 : 				_Wherenode = _Pnode;

  00019	8b c1		 mov	 eax, ecx

; 1096 : 				_Pnode = _Left(_Pnode);	// descend left subtree

  0001b	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1097 : 				}
; 1098 : 			else

  0001d	eb 03		 jmp	 SHORT $L138081
$L138080:

; 1099 : 				_Pnode = _Right(_Pnode);	// descend right subtree

  0001f	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
$L138081:

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L138078
  00029	5b		 pop	 ebx
$L138079:

; 1100 : 
; 1101 : 		return (_Wherenode);	// return best remembered candidate
; 1102 : 		}

  0002a	c2 04 00	 ret	 4
?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Ubound
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Ubound
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Ubound, COMDAT
; _this$ = ecx

; 1089 : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L138127
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L138126:

; 1093 : 			if (this->comp(_Keyval, _Key(_Pnode)))

  00014	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00017	73 06		 jae	 SHORT $L138128

; 1094 : 				{	// _Pnode greater than _Keyval, remember it
; 1095 : 				_Wherenode = _Pnode;

  00019	8b c1		 mov	 eax, ecx

; 1096 : 				_Pnode = _Left(_Pnode);	// descend left subtree

  0001b	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1097 : 				}
; 1098 : 			else

  0001d	eb 03		 jmp	 SHORT $L138129
$L138128:

; 1099 : 				_Pnode = _Right(_Pnode);	// descend right subtree

  0001f	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
$L138129:

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L138126
  00029	5b		 pop	 ebx
$L138127:

; 1100 : 
; 1101 : 		return (_Wherenode);	// return best remembered candidate
; 1102 : 		}

  0002a	c2 04 00	 ret	 4
?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Ubound
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Ubound
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Ubound, COMDAT
; _this$ = ecx

; 1089 : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L138175
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L138174:

; 1093 : 			if (this->comp(_Keyval, _Key(_Pnode)))

  00014	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00017	73 06		 jae	 SHORT $L138176

; 1094 : 				{	// _Pnode greater than _Keyval, remember it
; 1095 : 				_Wherenode = _Pnode;

  00019	8b c1		 mov	 eax, ecx

; 1096 : 				_Pnode = _Left(_Pnode);	// descend left subtree

  0001b	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1097 : 				}
; 1098 : 			else

  0001d	eb 03		 jmp	 SHORT $L138177
$L138176:

; 1099 : 				_Pnode = _Right(_Pnode);	// descend right subtree

  0001f	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
$L138177:

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L138174
  00029	5b		 pop	 ebx
$L138175:

; 1100 : 
; 1101 : 		return (_Wherenode);	// return best remembered candidate
; 1102 : 		}

  0002a	c2 04 00	 ret	 4
?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Ubound
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Ubound
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Ubound, COMDAT
; _this$ = ecx

; 1089 : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L138223
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L138222:

; 1093 : 			if (this->comp(_Keyval, _Key(_Pnode)))

  00014	3b 51 0c	 cmp	 edx, DWORD PTR [ecx+12]
  00017	73 06		 jae	 SHORT $L138224

; 1094 : 				{	// _Pnode greater than _Keyval, remember it
; 1095 : 				_Wherenode = _Pnode;

  00019	8b c1		 mov	 eax, ecx

; 1096 : 				_Pnode = _Left(_Pnode);	// descend left subtree

  0001b	8b 09		 mov	 ecx, DWORD PTR [ecx]

; 1097 : 				}
; 1098 : 			else

  0001d	eb 03		 jmp	 SHORT $L138225
$L138224:

; 1099 : 				_Pnode = _Right(_Pnode);	// descend right subtree

  0001f	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
$L138225:

; 1090 : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 1091 : 
; 1092 : 		while (!_Isnil(_Pnode))

  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L138222
  00029	5b		 pop	 ebx
$L138223:

; 1100 : 
; 1101 : 		return (_Wherenode);	// return best remembered candidate
; 1102 : 		}

  0002a	c2 04 00	 ret	 4
?_Ubound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Ubound
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00007	c1 e0 03	 shl	 eax, 3
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>::allocate
; Function compile flags: /Ogty
;	COMDAT ?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00007	c1 e0 02	 shl	 eax, 2
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00010	83 c4 04	 add	 esp, 4

; 138  : 		}

  00013	c2 04 00	 ret	 4
?allocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@@std@@QAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Node>::allocate
_TEXT	ENDS
PUBLIC	?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Dec
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Dec, COMDAT
; _this$ = ecx

; 251  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00005	84 d2		 test	 dl, dl
  00007	74 06		 je	 SHORT $L138363

; 252  : 				_Ptr = _Right(_Ptr);	// end() ==> rightmost

  00009	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0000c	89 01		 mov	 DWORD PTR [ecx], eax

; 263  : 				}
; 264  : 			}

  0000e	c3		 ret	 0
$L138363:

; 253  : 			else if (!_Isnil(_Left(_Ptr)))

  0000f	8b 10		 mov	 edx, DWORD PTR [eax]
  00011	53		 push	 ebx
  00012	8a 5a 11	 mov	 bl, BYTE PTR [edx+17]
  00015	84 db		 test	 bl, bl
  00017	75 1a		 jne	 SHORT $L143477

; 254  : 				_Ptr = _Max(_Left(_Ptr));	// ==> largest of left subtree

  00019	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  0001c	8a 58 11	 mov	 bl, BYTE PTR [eax+17]
  0001f	84 db		 test	 bl, bl
  00021	75 0c		 jne	 SHORT $L143462
$L143461:
  00023	8b d0		 mov	 edx, eax
  00025	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00028	8a 58 11	 mov	 bl, BYTE PTR [eax+17]
  0002b	84 db		 test	 bl, bl
  0002d	74 f4		 je	 SHORT $L143461
$L143462:
  0002f	89 11		 mov	 DWORD PTR [ecx], edx
  00031	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  00032	c3		 ret	 0
$L143477:

; 255  : 			else
; 256  : 				{	// climb looking for left subtree
; 257  : 				_Nodeptr _Pnode;
; 258  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 259  : 					&& _Ptr == _Left(_Pnode))

  00033	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00036	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00039	84 d2		 test	 dl, dl
  0003b	75 1e		 jne	 SHORT $L143480
  0003d	8d 49 00	 npad	 3
$L138369:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 10		 cmp	 edx, DWORD PTR [eax]
  00044	75 0c		 jne	 SHORT $L138370

; 260  : 					_Ptr = _Pnode;	// ==> parent while left subtree

  00046	89 01		 mov	 DWORD PTR [ecx], eax
  00048	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004b	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  0004e	84 d2		 test	 dl, dl
  00050	74 ee		 je	 SHORT $L138369
$L138370:

; 261  : 				if (!_Isnil(_Pnode))

  00052	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00055	84 d2		 test	 dl, dl
  00057	75 02		 jne	 SHORT $L143480

; 262  : 					_Ptr = _Pnode;	// ==> parent if not head

  00059	89 01		 mov	 DWORD PTR [ecx], eax
$L143480:
  0005b	5b		 pop	 ebx

; 263  : 				}
; 264  : 			}

  0005c	c3		 ret	 0
?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Dec
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z PROC NEAR ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >, COMDAT
; _this$ = ecx

; 54   : 		{	// construct traits from _Parg and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 55   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z ENDP ; std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >
_TEXT	ENDS
PUBLIC	??$copy@PAUtagTENTRYRECORD@@PAU1@@std@@YAPAUtagTENTRYRECORD@@PAU1@00@Z ; std::copy<tagTENTRYRECORD *,tagTENTRYRECORD *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$copy@PAUtagTENTRYRECORD@@PAU1@@std@@YAPAUtagTENTRYRECORD@@PAU1@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$copy@PAUtagTENTRYRECORD@@PAU1@@std@@YAPAUtagTENTRYRECORD@@PAU1@00@Z PROC NEAR ; std::copy<tagTENTRYRECORD *,tagTENTRYRECORD *>, COMDAT

; 1040 : 	return (_Copy_opt(_First, _Last, _Dest, _Ptr_cat(_First, _Dest)));

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __First$[esp-4]
  00004	8b 44 24 0c	 mov	 eax, DWORD PTR __Dest$[esp-4]
  00008	53		 push	 ebx
  00009	8b 5c 24 0c	 mov	 ebx, DWORD PTR __Last$[esp]
  0000d	3b d3		 cmp	 edx, ebx
  0000f	74 19		 je	 SHORT $L143530
  00011	56		 push	 esi
  00012	57		 push	 edi
$L143528:
  00013	8b f2		 mov	 esi, edx
  00015	8b f8		 mov	 edi, eax
  00017	83 c2 2c	 add	 edx, 44			; 0000002cH
  0001a	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0001f	83 c0 2c	 add	 eax, 44			; 0000002cH
  00022	3b d3		 cmp	 edx, ebx
  00024	f3 a5		 rep movsd
  00026	75 eb		 jne	 SHORT $L143528
  00028	5f		 pop	 edi
  00029	5e		 pop	 esi
$L143530:
  0002a	5b		 pop	 ebx

; 1041 : 	}

  0002b	c3		 ret	 0
??$copy@PAUtagTENTRYRECORD@@PAU1@@std@@YAPAUtagTENTRYRECORD@@PAU1@00@Z ENDP ; std::copy<tagTENTRYRECORD *,tagTENTRYRECORD *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z PROC NEAR ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >, COMDAT

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 218  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@KV?$allocator@K@std@@@std@@YAXPAK0AAV?$allocator@K@0@@Z ENDP ; std::_Destroy_range<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L143552
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L143552:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L143561
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L143561:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L143570
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L143570:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z PROC NEAR ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L143579
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L143579:

; 43   : 	}

  00010	c3		 ret	 0
??$_Construct@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@PAU123@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@ABQAU120@@Z ENDP ; std::_Construct<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *,std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UtagTENTRYRECORD@@@std@@QAEXPAUtagTENTRYRECORD@@@Z ; std::allocator<tagTENTRYRECORD>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@UtagTENTRYRECORD@@@std@@QAEXPAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UtagTENTRYRECORD@@@std@@QAEXPAUtagTENTRYRECORD@@@Z PROC NEAR ; std::allocator<tagTENTRYRECORD>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@UtagTENTRYRECORD@@@std@@QAEXPAUtagTENTRYRECORD@@@Z ENDP ; std::allocator<tagTENTRYRECORD>::destroy
_TEXT	ENDS
PUBLIC	??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT
_pStringMgr$ = 8					; size = 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 210  : 	explicit CSimpleStringT( IAtlStringMgr* pStringMgr ) throw()

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 211  : 	{
; 212  : 		ATLASSERT( pStringMgr != NULL );
; 213  : 		CStringData* pData = pStringMgr->GetNilString();

  00003	8b 4c 24 08	 mov	 ecx, DWORD PTR _pStringMgr$[esp]
  00007	8b 01		 mov	 eax, DWORD PTR [ecx]
  00009	ff 50 0c	 call	 DWORD PTR [eax+12]

; 214  : 		Attach( pData );

  0000c	83 c0 10	 add	 eax, 16			; 00000010H
  0000f	89 06		 mov	 DWORD PTR [esi], eax

; 215  : 	}

  00011	8b c6		 mov	 eax, esi
  00013	5e		 pop	 esi
  00014	c2 04 00	 ret	 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ENDP ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
; Function compile flags: /Ogty
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ PROC NEAR		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 263  : 		CStringData* pData = GetData();

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 264  : 		pData->Release();

  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L143610
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L143610:

; 265  : 	}

  0001c	c3		 ret	 0
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ ENDP		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z PROC NEAR ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 34   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 35   : 		}

  00002	c2 04 00	 ret	 4
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ	; ATL::CSimpleStringT<char,0>::GetLength
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT
?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::GetLength, COMDAT
; _this$ = ecx

; 501  : 		return( GetData()->nDataLength );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 40 f4	 mov	 eax, DWORD PTR [eax-12]

; 502  : 	}

  00005	c3		 ret	 0
?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ENDP	; ATL::CSimpleStringT<char,0>::GetLength
_TEXT	ENDS
PUBLIC	?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength
; Function compile flags: /Ogty
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT
_nNewLength$ = 8					; size = 4
?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength, COMDAT
; _this$ = ecx

; 547  : 		ATLASSERT( nNewLength >= 0 );
; 548  : 		SetLength( nNewLength );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nNewLength$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	7c 13		 jl	 SHORT $L143640
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	3b 42 f8	 cmp	 eax, DWORD PTR [edx-8]
  0000d	7f 0c		 jg	 SHORT $L143640
  0000f	89 42 f4	 mov	 DWORD PTR [edx-12], eax
  00012	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00014	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0

; 549  : 	}

  00018	c2 04 00	 ret	 4
$L143640:
  0001b	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00020	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L143643:
$L143642:
  00025	cc		 int	 3
?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ENDP ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength
_TEXT	ENDS
PUBLIC	?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
; Function compile flags: /Ogty
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_nLength$ = 8						; size = 4
?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::PrepareWrite2, COMDAT
; _this$ = ecx

; 747  : 		CStringData* pOldData = GetData();

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 748  : 		if( pOldData->nDataLength > nLength )

  00002	8b 54 24 04	 mov	 edx, DWORD PTR _nLength$[esp-4]
  00006	83 e8 10	 sub	 eax, 16			; 00000010H
  00009	56		 push	 esi
  0000a	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  0000d	3b f2		 cmp	 esi, edx
  0000f	7e 02		 jle	 SHORT $L119029

; 749  : 		{
; 750  : 			nLength = pOldData->nDataLength;

  00011	8b d6		 mov	 edx, esi
$L119029:

; 751  : 		}
; 752  : 		if( pOldData->IsShared() )

  00013	83 78 0c 01	 cmp	 DWORD PTR [eax+12], 1
  00017	5e		 pop	 esi
  00018	7e 09		 jle	 SHORT $L119030

; 753  : 		{
; 754  : 			Fork( nLength );

  0001a	89 54 24 04	 mov	 DWORD PTR _nLength$[esp-4], edx
  0001e	e9 00 00 00 00	 jmp	 ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::Fork
$L119030:

; 755  : 		}
; 756  : 		else if( pOldData->nAllocLength < nLength )

  00023	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00026	3b c2		 cmp	 eax, edx
  00028	7d 1f		 jge	 SHORT $L119032

; 757  : 		{
; 758  : 			// Grow exponentially, until we hit 1K.
; 759  : 			int nNewLength = pOldData->nAllocLength;
; 760  : 			if( nNewLength > 1024 )

  0002a	3d 00 04 00 00	 cmp	 eax, 1024		; 00000400H
  0002f	7e 07		 jle	 SHORT $L119034

; 761  : 			{
; 762  : 				nNewLength += 1024;

  00031	05 00 04 00 00	 add	 eax, 1024		; 00000400H

; 763  : 			}
; 764  : 			else

  00036	eb 02		 jmp	 SHORT $L119035
$L119034:

; 765  : 			{
; 766  : 				nNewLength *= 2;

  00038	03 c0		 add	 eax, eax
$L119035:

; 767  : 			}
; 768  : 			if( nNewLength < nLength )

  0003a	3b c2		 cmp	 eax, edx
  0003c	7d 02		 jge	 SHORT $L119036

; 769  : 			{
; 770  : 				nNewLength = nLength;

  0003e	8b c2		 mov	 eax, edx
$L119036:

; 771  : 			}
; 772  : 			Reallocate( nNewLength );

  00040	89 44 24 04	 mov	 DWORD PTR _nLength$[esp-4], eax
  00044	e9 00 00 00 00	 jmp	 ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::Reallocate
$L119032:

; 773  : 		}
; 774  : 	}

  00049	c2 04 00	 ret	 4
?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::PrepareWrite2
_TEXT	ENDS
PUBLIC	?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
; Function compile flags: /Ogty
;	COMDAT ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT
_pData$ = 8						; size = 4
?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CloneData, COMDAT

; 801  : 	{

  00000	56		 push	 esi

; 802  : 		CStringData* pNewData = NULL;
; 803  : 
; 804  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

  00001	8b 74 24 08	 mov	 esi, DWORD PTR _pData$[esp]
  00005	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00007	8b 01		 mov	 eax, DWORD PTR [ecx]
  00009	ff 50 10	 call	 DWORD PTR [eax+16]

; 805  : 		if( !pData->IsLocked() && (pNewStringMgr == pData->pStringMgr) )

  0000c	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  0000f	85 d2		 test	 edx, edx
  00011	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00014	7c 11		 jl	 SHORT $L119040
  00016	3b 06		 cmp	 eax, DWORD PTR [esi]
  00018	75 0d		 jne	 SHORT $L119040

; 806  : 		{
; 807  : 			pNewData = pData;

  0001a	8b c6		 mov	 eax, esi

; 808  : 			pNewData->AddRef();

  0001c	ba 01 00 00 00	 mov	 edx, 1
  00021	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00025	5e		 pop	 esi

; 819  : 		}
; 820  : 
; 821  : 		return( pNewData );
; 822  : 	}

  00026	c3		 ret	 0
$L119040:

; 809  : 		}
; 810  : 		else
; 811  : 		{
; 812  : 			pNewData = pNewStringMgr->Allocate( pData->nDataLength, sizeof( XCHAR ) );

  00027	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0002a	8b 10		 mov	 edx, DWORD PTR [eax]
  0002c	6a 01		 push	 1
  0002e	51		 push	 ecx
  0002f	8b c8		 mov	 ecx, eax
  00031	ff 12		 call	 DWORD PTR [edx]

; 813  : 			if( pNewData == NULL )

  00033	85 c0		 test	 eax, eax
  00035	75 05		 jne	 SHORT $L119043

; 814  : 			{
; 815  : 				ThrowMemoryException();

  00037	e9 00 00 00 00	 jmp	 ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L119043:

; 816  : 			}
; 817  : 			pNewData->nDataLength = pData->nDataLength;

  0003c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0003f	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 818  : 			CopyChars( PXSTR( pNewData->data() ), PCXSTR( pData->data() ), pData->nDataLength+1 );  // Copy '\0'

  00042	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00045	41		 inc	 ecx
  00046	8b d1		 mov	 edx, ecx
  00048	57		 push	 edi
  00049	c1 e9 02	 shr	 ecx, 2
  0004c	83 c6 10	 add	 esi, 16			; 00000010H
  0004f	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  00052	f3 a5		 rep movsd
  00054	8b ca		 mov	 ecx, edx
  00056	83 e1 03	 and	 ecx, 3
  00059	f3 a4		 rep movsb
  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi

; 819  : 		}
; 820  : 
; 821  : 		return( pNewData );
; 822  : 	}

  0005d	c3		 ret	 0
?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ENDP ; ATL::CSimpleStringT<char,0>::CloneData
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	8b 44 24 04	 mov	 eax, DWORD PTR __Newsize$[esp-4]
  00008	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0000b	72 0a		 jb	 SHORT $L143682
  0000d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00010	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1476 : 		}

  00014	c2 04 00	 ret	 4

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

$L143682:
  00017	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 1476 : 		}

  0001c	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ	; ATL::CSimpleStringT<char,0>::Empty
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT
?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::Empty, COMDAT
; _this$ = ecx

; 421  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 422  : 		CStringData* pOldData = GetData();

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 423  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;
; 424  : 		if( pOldData->nDataLength == 0 )

  00005	8b 51 f4	 mov	 edx, DWORD PTR [ecx-12]
  00008	85 d2		 test	 edx, edx
  0000a	8d 41 f0	 lea	 eax, DWORD PTR [ecx-16]
  0000d	57		 push	 edi
  0000e	8b 38		 mov	 edi, DWORD PTR [eax]
  00010	74 4c		 je	 SHORT $L143720
  00012	53		 push	 ebx

; 425  : 		{
; 426  : 			return;
; 427  : 		}
; 428  : 
; 429  : 		if( pOldData->IsLocked() )

  00013	8b 58 0c	 mov	 ebx, DWORD PTR [eax+12]
  00016	8d 50 0c	 lea	 edx, DWORD PTR [eax+12]
  00019	85 db		 test	 ebx, ebx
  0001b	5b		 pop	 ebx
  0001c	7d 20		 jge	 SHORT $L120127

; 430  : 		{
; 431  : 			// Don't reallocate a locked buffer that's shrinking
; 432  : 			SetLength( 0 );

  0001e	8b 41 f8	 mov	 eax, DWORD PTR [ecx-8]
  00021	85 c0		 test	 eax, eax
  00023	7d 0a		 jge	 SHORT $L143709
  00025	68 57 00 07 80	 push	 -2147024809		; 80070057H
  0002a	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L143725:
$L143709:
  0002f	c7 41 f4 00 00
	00 00		 mov	 DWORD PTR [ecx-12], 0
  00036	8b 06		 mov	 eax, DWORD PTR [esi]
  00038	5f		 pop	 edi
  00039	c6 00 00	 mov	 BYTE PTR [eax], 0
  0003c	5e		 pop	 esi

; 439  : 		}
; 440  : 	}

  0003d	c3		 ret	 0
$L120127:

; 433  : 		}
; 434  : 		else
; 435  : 		{
; 436  : 			pOldData->Release();

  0003e	83 c9 ff	 or	 ecx, -1
  00041	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
  00045	49		 dec	 ecx
  00046	85 c9		 test	 ecx, ecx
  00048	7f 08		 jg	 SHORT $L143715
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004e	50		 push	 eax
  0004f	ff 52 04	 call	 DWORD PTR [edx+4]
$L143715:

; 437  : 			CStringData* pNewData = pStringMgr->GetNilString();

  00052	8b 07		 mov	 eax, DWORD PTR [edi]
  00054	8b cf		 mov	 ecx, edi
  00056	ff 50 0c	 call	 DWORD PTR [eax+12]

; 438  : 			Attach( pNewData );

  00059	83 c0 10	 add	 eax, 16			; 00000010H
  0005c	89 06		 mov	 DWORD PTR [esi], eax
$L143720:
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi

; 439  : 		}
; 440  : 	}

  00060	c3		 ret	 0
$L143724:
?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ ENDP		; ATL::CSimpleStringT<char,0>::Empty
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1114 : 		size_type _Num = _Mybase::_Alval.max_size();
; 1115 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH

; 1116 : 		}

  00005	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC NEAR	; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 138  : 		}

  0000d	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	??8ATL@@YA_NABV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@0@0@Z ; ATL::operator==
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??8ATL@@YA_NABV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@0@0@Z
_TEXT	SEGMENT
_str1$ = 8						; size = 4
_str2$ = 12						; size = 4
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@0@0@Z PROC NEAR ; ATL::operator==, COMDAT

; 2082 : 		return( str1.Compare( str2 ) == 0 );

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _str2$[esp-4]
  00004	8b 00		 mov	 eax, DWORD PTR [eax]
  00006	8b 4c 24 04	 mov	 ecx, DWORD PTR _str1$[esp-4]
  0000a	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0000c	50		 push	 eax
  0000d	51		 push	 ecx
  0000e	e8 00 00 00 00	 call	 __mbscmp
  00013	83 c4 08	 add	 esp, 8
  00016	f7 d8		 neg	 eax
  00018	1b c0		 sbb	 eax, eax
  0001a	40		 inc	 eax

; 2083 : 	}

  0001b	c3		 ret	 0
??8ATL@@YA_NABV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@0@0@Z ENDP ; ATL::operator==
_TEXT	ENDS
PUBLIC	?begin@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::begin
_TEXT	ENDS
PUBLIC	??A?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAUtagTENTRYRECORD@@I@Z ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAUtagTENTRYRECORD@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAUtagTENTRYRECORD@@I@Z PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pos$[esp-4]
  00004	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00007	6b c0 2c	 imul	 eax, 44			; 0000002cH
  0000a	03 c2		 add	 eax, edx

; 556  : 		}

  0000c	c2 04 00	 ret	 4
??A?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAUtagTENTRYRECORD@@I@Z ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::operator[]
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::begin
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTITEM@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTITEM@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTITEM@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTITEM@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::end
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBGG@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBGG@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBGG@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBGG@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L144099
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L144067:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L144069
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L144070
$L144069:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L144070:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L144067
  00029	5b		 pop	 ebx
$L144099:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L136854
$L136852:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L136852
$L136854:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L144189
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L144157:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L144159
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L144160
$L144159:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L144160:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L144157
  00029	5b		 pop	 ebx
$L144189:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L136953
$L136951:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L136951
$L136953:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L144279
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L144247:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L144249
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L144250
$L144249:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L144250:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L144247
  00029	5b		 pop	 ebx
$L144279:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L137051
$L137049:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L137049
$L137051:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L144369
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L144337:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L144339
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L144340
$L144339:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L144340:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L144337
  00029	5b		 pop	 ebx
$L144369:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Erase
; Function compile flags: /Ogty
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L137149
$L137147:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L137147
$L137149:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::begin
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::lower_bound
; Function compile flags: /Ogty
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00009	84 d2		 test	 dl, dl
  0000b	75 1f		 jne	 SHORT $L144528
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	66 8b 12	 mov	 dx, WORD PTR [edx]
  00014	53		 push	 ebx
$L144515:
  00015	66 39 50 0c	 cmp	 WORD PTR [eax+12], dx
  00019	73 05		 jae	 SHORT $L144517
  0001b	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001e	eb 04		 jmp	 SHORT $L144518
$L144517:
  00020	8b c8		 mov	 ecx, eax
  00022	8b 00		 mov	 eax, DWORD PTR [eax]
$L144518:
  00024	8a 58 11	 mov	 bl, BYTE PTR [eax+17]
  00027	84 db		 test	 bl, bl
  00029	74 ea		 je	 SHORT $L144515
  0002b	5b		 pop	 ebx
$L144528:
  0002c	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00030	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00032	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::upper_bound
; Function compile flags: /Ogty
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::upper_bound, COMDAT
; _this$ = ecx

; 820  : 		return (_TREE_ITERATOR(_Ubound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L144601
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L144588:
  00014	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00017	73 06		 jae	 SHORT $L144590
  00019	8b c8		 mov	 ecx, eax
  0001b	8b 00		 mov	 eax, DWORD PTR [eax]
  0001d	eb 03		 jmp	 SHORT $L144591
$L144590:
  0001f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L144591:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L144588
  00029	5b		 pop	 ebx
$L144601:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 821  : 		}

  00030	c2 08 00	 ret	 8
?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::upper_bound
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTITEM@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTITEM@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTITEM@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L144607
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L144607:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTITEM@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::upper_bound
; Function compile flags: /Ogty
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::upper_bound, COMDAT
; _this$ = ecx

; 820  : 		return (_TREE_ITERATOR(_Ubound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L144706
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L144693:
  00014	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00017	73 06		 jae	 SHORT $L144695
  00019	8b c8		 mov	 ecx, eax
  0001b	8b 00		 mov	 eax, DWORD PTR [eax]
  0001d	eb 03		 jmp	 SHORT $L144696
$L144695:
  0001f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L144696:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L144693
  00029	5b		 pop	 ebx
$L144706:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 821  : 		}

  00030	c2 08 00	 ret	 8
?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::upper_bound
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L144712
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L144712:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::upper_bound
; Function compile flags: /Ogty
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::upper_bound, COMDAT
; _this$ = ecx

; 820  : 		return (_TREE_ITERATOR(_Ubound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L144809
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L144796:
  00014	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00017	73 06		 jae	 SHORT $L144798
  00019	8b c8		 mov	 ecx, eax
  0001b	8b 00		 mov	 eax, DWORD PTR [eax]
  0001d	eb 03		 jmp	 SHORT $L144799
$L144798:
  0001f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L144799:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L144796
  00029	5b		 pop	 ebx
$L144809:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 821  : 		}

  00030	c2 08 00	 ret	 8
?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::upper_bound
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L144815
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L144815:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::upper_bound
; Function compile flags: /Ogty
;	COMDAT ?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::upper_bound, COMDAT
; _this$ = ecx

; 820  : 		return (_TREE_ITERATOR(_Ubound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L144912
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L144899:
  00014	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00017	73 06		 jae	 SHORT $L144901
  00019	8b c8		 mov	 ecx, eax
  0001b	8b 00		 mov	 eax, DWORD PTR [eax]
  0001d	eb 03		 jmp	 SHORT $L144902
$L144901:
  0001f	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L144902:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L144899
  00029	5b		 pop	 ebx
$L144912:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 821  : 		}

  00030	c2 08 00	 ret	 8
?upper_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::upper_bound
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 2e		 je	 SHORT $L144918
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0001f	8b 4c 24 10	 mov	 ecx, DWORD PTR __Val$[esp-4]
  00023	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00026	8b 11		 mov	 edx, DWORD PTR [ecx]
  00028	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  00032	89 48 10	 mov	 DWORD PTR [eax+16], ecx
  00035	88 50 14	 mov	 BYTE PTR [eax+20], dl
  00038	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0
$L144918:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  0003c	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);
; 788  : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@KV?$allocator@K@std@@@std@@IAEXPAK0@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGG@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Buynode
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGG@2@D@Z
_TEXT	SEGMENT
__Larg$ = 8						; size = 4
__Parg$ = 12						; size = 4
__Rarg$ = 16						; size = 4
__Val$ = 20						; size = 4
__Carg$ = 24						; size = 1
?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGG@2@D@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1131 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 14		 push	 20			; 00000014H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1132 : 		_TRY_BEGIN
; 1133 : 		new (_Wherenode) _Node(_Larg, _Parg, _Rarg, _Val, _Carg);

  0000a	85 c0		 test	 eax, eax
  0000c	74 28		 je	 SHORT $L144951
  0000e	8b 4c 24 04	 mov	 ecx, DWORD PTR __Larg$[esp-4]
  00012	8b 54 24 08	 mov	 edx, DWORD PTR __Parg$[esp-4]
  00016	89 08		 mov	 DWORD PTR [eax], ecx
  00018	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Rarg$[esp-4]
  0001c	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001f	8b 54 24 10	 mov	 edx, DWORD PTR __Val$[esp-4]
  00023	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  00026	8b 0a		 mov	 ecx, DWORD PTR [edx]
  00028	8a 54 24 14	 mov	 dl, BYTE PTR __Carg$[esp-4]
  0002c	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  0002f	88 50 10	 mov	 BYTE PTR [eax+16], dl
  00032	c6 40 11 00	 mov	 BYTE PTR [eax+17], 0
$L144951:

; 1134 : 		_CATCH_ALL
; 1135 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1136 : 		_RERAISE;
; 1137 : 		_CATCH_END
; 1138 : 		return (_Wherenode);
; 1139 : 		}

  00036	c2 14 00	 ret	 20			; 00000014H
?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGG@2@D@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator--
; Function compile flags: /Ogty
;	COMDAT ??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator--, COMDAT
; _this$ = ecx

; 227  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 228  : 			_Dec();

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Dec

; 229  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 230  : 			}

  0000b	c3		 ret	 0
??Fconst_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::operator--
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z PROC NEAR ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >, COMDAT
; _this$ = ecx

; 76   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 77   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_ptr@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z ENDP ; std::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Tree_ptr<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L145087
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L145087:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L145104
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L145104:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L145121
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L145121:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *>::construct
; Function compile flags: /Ogty
;	COMDAT ?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 08		 je	 SHORT $L145138
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
$L145138:

; 148  : 		}

  00010	c2 08 00	 ret	 8
?construct@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABQAU342@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Node *>::construct
_TEXT	ENDS
PUBLIC	??$_Destroy_range@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@YAXPAUtagTENTRYRECORD@@0AAV?$allocator@UtagTENTRYRECORD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy_range@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@YAXPAUtagTENTRYRECORD@@0AAV?$allocator@UtagTENTRYRECORD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@YAXPAUtagTENTRYRECORD@@0AAV?$allocator@UtagTENTRYRECORD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >, COMDAT

; 225  : 	for (; _First != _Last; ++_First)
; 226  : 		_Al.destroy(_First);
; 227  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@YAXPAUtagTENTRYRECORD@@0AAV?$allocator@UtagTENTRYRECORD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >
_TEXT	ENDS
PUBLIC	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC NEAR ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator,unsigned int>, COMDAT

; 470  : 	for (; _First != _Last; ++_First)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	74 17		 je	 SHORT $L139280
  0000d	56		 push	 esi
  0000e	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
$L145155:

; 471  : 		++_Off;

  00012	ff 06		 inc	 DWORD PTR [esi]
  00014	8d 4c 24 0c	 lea	 ecx, DWORD PTR __First$[esp+4]
  00018	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Inc
  0001d	39 7c 24 0c	 cmp	 DWORD PTR __First$[esp+4], edi
  00021	75 ef		 jne	 SHORT $L145155
  00023	5e		 pop	 esi
$L139280:
  00024	5f		 pop	 edi

; 472  : 	}

  00025	c3		 ret	 0
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC NEAR ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator,unsigned int>, COMDAT

; 470  : 	for (; _First != _Last; ++_First)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	74 17		 je	 SHORT $L139287
  0000d	56		 push	 esi
  0000e	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
$L145175:

; 471  : 		++_Off;

  00012	ff 06		 inc	 DWORD PTR [esi]
  00014	8d 4c 24 0c	 lea	 ecx, DWORD PTR __First$[esp+4]
  00018	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc
  0001d	39 7c 24 0c	 cmp	 DWORD PTR __First$[esp+4], edi
  00021	75 ef		 jne	 SHORT $L145175
  00023	5e		 pop	 esi
$L139287:
  00024	5f		 pop	 edi

; 472  : 	}

  00025	c3		 ret	 0
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC NEAR ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator,unsigned int>, COMDAT

; 470  : 	for (; _First != _Last; ++_First)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	74 17		 je	 SHORT $L139294
  0000d	56		 push	 esi
  0000e	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
$L145195:

; 471  : 		++_Off;

  00012	ff 06		 inc	 DWORD PTR [esi]
  00014	8d 4c 24 0c	 lea	 ecx, DWORD PTR __First$[esp+4]
  00018	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Inc
  0001d	39 7c 24 0c	 cmp	 DWORD PTR __First$[esp+4], edi
  00021	75 ef		 jne	 SHORT $L145195
  00023	5e		 pop	 esi
$L139294:
  00024	5f		 pop	 edi

; 472  : 	}

  00025	c3		 ret	 0
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
;	COMDAT ??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z PROC NEAR ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator,unsigned int>, COMDAT

; 470  : 	for (; _First != _Last; ++_First)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	74 17		 je	 SHORT $L139301
  0000d	56		 push	 esi
  0000e	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
$L145215:

; 471  : 		++_Off;

  00012	ff 06		 inc	 DWORD PTR [esi]
  00014	8d 4c 24 0c	 lea	 ecx, DWORD PTR __First$[esp+4]
  00018	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Inc
  0001d	39 7c 24 0c	 cmp	 DWORD PTR __First$[esp+4], edi
  00021	75 ef		 jne	 SHORT $L145215
  00023	5e		 pop	 esi
$L139301:
  00024	5f		 pop	 edi

; 472  : 	}

  00025	c3		 ret	 0
??$_Distance2@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@0AAIUbidirectional_iterator_tag@0@@Z ENDP ; std::_Distance2<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 796  : 	{

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  0000d	ff 50 0c	 call	 DWORD PTR [eax+12]
  00010	83 c0 10	 add	 eax, 16			; 00000010H
  00013	89 06		 mov	 DWORD PTR [esi], eax

; 797  : 	}

  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	c3		 ret	 0
??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 963  : 	}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H
  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L145265
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L145265:
  0001c	c3		 ret	 0
??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_strSrc$ = 8						; size = 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 218  : 	{
; 219  : 		CStringData* pSrcData = strSrc.GetData();

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _strSrc$[esp-4]
  00004	8b 00		 mov	 eax, DWORD PTR [eax]
  00006	56		 push	 esi
  00007	83 e8 10	 sub	 eax, 16			; 00000010H

; 220  : 		CStringData* pNewData = CloneData( pSrcData );

  0000a	50		 push	 eax
  0000b	8b f1		 mov	 esi, ecx
  0000d	e8 00 00 00 00	 call	 ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData

; 221  : 		Attach( pNewData );

  00012	83 c0 10	 add	 eax, 16			; 00000010H
  00015	89 06		 mov	 DWORD PTR [esi], eax
  00017	83 c4 04	 add	 esp, 4

; 222  : 	}

  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	c2 04 00	 ret	 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z ENDP	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite
; Function compile flags: /Ogty
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT
_nLength$ = 8						; size = 4
?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::PrepareWrite, COMDAT
; _this$ = ecx

; 734  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 735  : 		CStringData* pOldData = GetData();

  00003	8b 06		 mov	 eax, DWORD PTR [esi]

; 736  : 		int nShared = 1-pOldData->nRefs;  // nShared < 0 means true, >= 0 means false

  00005	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00008	83 e8 10	 sub	 eax, 16			; 00000010H
  0000b	b9 01 00 00 00	 mov	 ecx, 1
  00010	2b ca		 sub	 ecx, edx

; 737  : 		int nTooShort = pOldData->nAllocLength-nLength;  // nTooShort < 0 means true, >= 0 means false

  00012	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00015	8b 44 24 08	 mov	 eax, DWORD PTR _nLength$[esp]
  00019	2b d0		 sub	 edx, eax

; 738  : 		if( (nShared|nTooShort) < 0 )  // If either sign bit is set (i.e. either is less than zero), we need to copy data

  0001b	0b ca		 or	 ecx, edx
  0001d	7d 08		 jge	 SHORT $L145289

; 739  : 		{
; 740  : 			PrepareWrite2( nLength );

  0001f	50		 push	 eax
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
$L145289:

; 741  : 		}
; 742  : 
; 743  : 		return( m_pszData );

  00027	8b 06		 mov	 eax, DWORD PTR [esi]
  00029	5e		 pop	 esi

; 744  : 	}

  0002a	c2 04 00	 ret	 4
?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z ENDP ; ATL::CSimpleStringT<char,0>::PrepareWrite
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1510 : 		if (!_Built)

  00000	8a 44 24 04	 mov	 al, BYTE PTR __Built$[esp-4]
  00004	84 c0		 test	 al, al
  00006	53		 push	 ebx
  00007	55		 push	 ebp
  00008	8b 6c 24 10	 mov	 ebp, DWORD PTR __Newsize$[esp+4]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	74 2f		 je	 SHORT $L145297

; 1511 : 			;
; 1512 : 		else if (_BUF_SIZE <= _Myres)

  00010	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  00014	72 29		 jb	 SHORT $L145297

; 1513 : 			{	// copy any leftovers to small buffer and deallocate
; 1514 : 			_Elem *_Ptr = _Bx._Ptr;
; 1515 : 			if (0 < _Newsize)

  00016	85 ed		 test	 ebp, ebp
  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	57		 push	 edi
  0001c	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  0001f	76 14		 jbe	 SHORT $L145294
  00021	56		 push	 esi

; 1516 : 				_Traits::copy(_Bx._Buf, _Ptr, _Newsize);

  00022	8b cd		 mov	 ecx, ebp
  00024	8b d1		 mov	 edx, ecx
  00026	c1 e9 02	 shr	 ecx, 2
  00029	8b f0		 mov	 esi, eax
  0002b	f3 a5		 rep movsd
  0002d	8b ca		 mov	 ecx, edx
  0002f	83 e1 03	 and	 ecx, 3
  00032	f3 a4		 rep movsb
  00034	5e		 pop	 esi
$L145294:

; 1517 : 			_Mybase::_Alval.deallocate(_Ptr, _Myres + 1);

  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003b	83 c4 04	 add	 esp, 4
  0003e	5f		 pop	 edi
$L145297:

; 1518 : 			}
; 1519 : 		_Myres = _BUF_SIZE - 1;
; 1520 : 		_Eos(_Newsize);

  0003f	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00042	c7 43 18 0f 00
	00 00		 mov	 DWORD PTR [ebx+24], 15	; 0000000fH
  00049	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0004e	5d		 pop	 ebp
  0004f	5b		 pop	 ebx

; 1521 : 		}

  00050	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ; ATL::CSimpleStringT<char,0>::GetBuffer
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT
_nMinBufferLength$ = 8					; size = 4
?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::GetBuffer, COMDAT
; _this$ = ecx

; 489  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 490  : 		return( PrepareWrite( nMinBufferLength ) );

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00008	83 e8 10	 sub	 eax, 16			; 00000010H
  0000b	b9 01 00 00 00	 mov	 ecx, 1
  00010	2b ca		 sub	 ecx, edx
  00012	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00015	8b 44 24 08	 mov	 eax, DWORD PTR _nMinBufferLength$[esp]
  00019	2b d0		 sub	 edx, eax
  0001b	0b ca		 or	 ecx, edx
  0001d	7d 08		 jge	 SHORT $L145337
  0001f	50		 push	 eax
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
$L145337:
  00027	8b 06		 mov	 eax, DWORD PTR [esi]
  00029	5e		 pop	 esi

; 491  : 	}

  0002a	c2 04 00	 ret	 4
?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ENDP	; ATL::CSimpleStringT<char,0>::GetBuffer
_TEXT	ENDS
PUBLIC	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Function compile flags: /Ogty
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
_nLength$ = 12						; size = 4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::SetString, COMDAT
; _this$ = ecx

; 583  : 	{

  00000	53		 push	 ebx

; 584  : 		if( nLength == 0 )

  00001	8b 5c 24 0c	 mov	 ebx, DWORD PTR _nLength$[esp]
  00005	85 db		 test	 ebx, ebx
  00007	55		 push	 ebp
  00008	8b e9		 mov	 ebp, ecx
  0000a	75 0a		 jne	 SHORT $L119011

; 585  : 		{
; 586  : 			Empty();

  0000c	e8 00 00 00 00	 call	 ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ ; ATL::CSimpleStringT<char,0>::Empty
  00011	5d		 pop	 ebp
  00012	5b		 pop	 ebx

; 614  : 		}
; 615  : 	}

  00013	c2 08 00	 ret	 8
$L119011:

; 587  : 		}
; 588  : 		else
; 589  : 		{
; 590  : 			// It is possible that pszSrc points to a location inside of our 
; 591  : 			// buffer.  GetBuffer() might change m_pszData if (1) the buffer 
; 592  : 			// is shared or (2) the buffer is too small to hold the new 
; 593  : 			// string.  We detect this aliasing, and modify pszSrc to point
; 594  : 			// into the newly allocated buffer instead.
; 595  : 			
; 596  : 			if(pszSrc == NULL)

  00016	8b 54 24 0c	 mov	 edx, DWORD PTR _pszSrc$[esp+4]
  0001a	85 d2		 test	 edx, edx
  0001c	75 0a		 jne	 SHORT $L119013

; 612  : 			}
; 613  : 			ReleaseBufferSetLength( nLength );

$L145405:
  0001e	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00023	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L145413:
$L119013:

; 597  : 				AtlThrow(E_INVALIDARG);			
; 598  : 				
; 599  : 			UINT nOldLength = GetLength();

  00028	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  0002b	56		 push	 esi

; 600  : 			UINT_PTR nOffset = pszSrc-GetString();

  0002c	8b f2		 mov	 esi, edx
  0002e	2b f0		 sub	 esi, eax

; 601  : 			// If 0 <= nOffset <= nOldLength, then pszSrc points into our 
; 602  : 			// buffer
; 603  : 
; 604  : 			PXSTR pszBuffer = GetBuffer( nLength );

  00030	b9 01 00 00 00	 mov	 ecx, 1
  00035	2b 48 fc	 sub	 ecx, DWORD PTR [eax-4]
  00038	57		 push	 edi
  00039	8b 78 f4	 mov	 edi, DWORD PTR [eax-12]
  0003c	8b 40 f8	 mov	 eax, DWORD PTR [eax-8]
  0003f	2b c3		 sub	 eax, ebx
  00041	0b c8		 or	 ecx, eax
  00043	7d 0c		 jge	 SHORT $L145374
  00045	53		 push	 ebx
  00046	8b cd		 mov	 ecx, ebp
  00048	e8 00 00 00 00	 call	 ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
  0004d	8b 54 24 14	 mov	 edx, DWORD PTR _pszSrc$[esp+12]
$L145374:

; 605  : 			if( nOffset <= nOldLength )

  00051	3b f7		 cmp	 esi, edi
  00053	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  00056	77 10		 ja	 SHORT $L119018

; 606  : 			{
; 607  : 				CopyCharsOverlapped( pszBuffer, pszBuffer+nOffset, nLength );

  00058	53		 push	 ebx
  00059	8d 0c 30	 lea	 ecx, DWORD PTR [eax+esi]
  0005c	51		 push	 ecx
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 _memmove
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH

; 608  : 			}
; 609  : 			else

  00066	eb 14		 jmp	 SHORT $L145382
$L119018:

; 610  : 			{
; 611  : 				CopyChars( pszBuffer, pszSrc, nLength );

  00068	8b cb		 mov	 ecx, ebx
  0006a	8b f2		 mov	 esi, edx
  0006c	8b d1		 mov	 edx, ecx
  0006e	c1 e9 02	 shr	 ecx, 2
  00071	8b f8		 mov	 edi, eax
  00073	f3 a5		 rep movsd
  00075	8b ca		 mov	 ecx, edx
  00077	83 e1 03	 and	 ecx, 3
  0007a	f3 a4		 rep movsb
$L145382:

; 612  : 			}
; 613  : 			ReleaseBufferSetLength( nLength );

  0007c	85 db		 test	 ebx, ebx
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	7c 9c		 jl	 SHORT $L145405
  00082	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  00085	3b 58 f8	 cmp	 ebx, DWORD PTR [eax-8]
  00088	7f 94		 jg	 SHORT $L145405
  0008a	89 58 f4	 mov	 DWORD PTR [eax-12], ebx
  0008d	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  00090	5d		 pop	 ebp
  00091	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0
  00095	5b		 pop	 ebx

; 614  : 		}
; 615  : 	}

  00096	c2 08 00	 ret	 8
$L145412:
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ENDP	; ATL::CSimpleStringT<char,0>::SetString
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
EXTRN	?_Xran@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xran
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 792  : 		{	// erase elements [_Off, _Off + _Count)

  00000	55		 push	 ebp

; 793  : 		if (_Mysize < _Off)

  00001	8b 6c 24 08	 mov	 ebp, DWORD PTR __Off$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	39 6e 14	 cmp	 DWORD PTR [esi+20], ebp
  0000b	57		 push	 edi
  0000c	73 05		 jae	 SHORT $L119054

; 794  : 			_String_base::_Xran();	// _Off off end

  0000e	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L119054:

; 795  : 		if (_Mysize - _Off < _Count)

  00013	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00016	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  0001a	2b c5		 sub	 eax, ebp
  0001c	3b c7		 cmp	 eax, edi
  0001e	73 02		 jae	 SHORT $L119055

; 796  : 			_Count = _Mysize - _Off;	// trim _Count

  00020	8b f8		 mov	 edi, eax
$L119055:

; 797  : 		if (0 < _Count)

  00022	85 ff		 test	 edi, edi
  00024	76 47		 jbe	 SHORT $L145456

; 798  : 			{	// move elements down
; 799  : 			_Traits::move(_Myptr() + _Off, _Myptr() + _Off + _Count,
; 800  : 				_Mysize - _Off - _Count);

  00026	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00029	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0002c	53		 push	 ebx
  0002d	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00030	72 04		 jb	 SHORT $L145421
  00032	8b 13		 mov	 edx, DWORD PTR [ebx]
  00034	eb 02		 jmp	 SHORT $L145422
$L145421:
  00036	8b d3		 mov	 edx, ebx
$L145422:
  00038	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0003b	72 04		 jb	 SHORT $L145428
  0003d	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0003f	eb 02		 jmp	 SHORT $L145429
$L145428:
  00041	8b cb		 mov	 ecx, ebx
$L145429:
  00043	2b c7		 sub	 eax, edi

; 803  : 			}
; 804  : 		return (*this);

  00045	03 d5		 add	 edx, ebp
  00047	50		 push	 eax
  00048	03 d7		 add	 edx, edi
  0004a	52		 push	 edx
  0004b	03 cd		 add	 ecx, ebp
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 _memmove
  00053	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00056	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00059	2b c7		 sub	 eax, edi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00061	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00064	72 02		 jb	 SHORT $L145451

; 801  : 			size_type _Newsize = _Mysize - _Count;
; 802  : 			_Eos(_Newsize);

  00066	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$L145451:
  00068	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0
  0006c	5b		 pop	 ebx
$L145456:
  0006d	5f		 pop	 edi

; 803  : 			}
; 804  : 		return (*this);

  0006e	8b c6		 mov	 eax, esi
  00070	5e		 pop	 esi
  00071	5d		 pop	 ebp

; 805  : 		}

  00072	c2 08 00	 ret	 8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T145661 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
$T145663 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L145463
$T145664 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L145461
$T145662 DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:$T145663
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:$T145664
$T145655 DD	019930520H
	DD	04H
	DD	FLAT:$T145661
	DD	02H
	DD	FLAT:$T145662
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 1444 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1445 : 		size_type _Newres = _Newsize | _ALLOC_MASK;

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	8b d8		 mov	 ebx, eax
  00022	83 cb 0f	 or	 ebx, 15			; 0000000fH

; 1446 : 		if (max_size() < _Newres)

  00025	83 fb fe	 cmp	 ebx, -2			; fffffffeH
  00028	57		 push	 edi
  00029	8b f1		 mov	 esi, ecx
  0002b	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00031	76 04		 jbe	 SHORT $L120172

; 1447 : 			_Newres = _Newsize;	// undo roundup if too big

  00033	8b d8		 mov	 ebx, eax

; 1448 : 		else if (_Newres / 3 < _Myres / 2

  00035	eb 22		 jmp	 SHORT $L120174
$L120172:

; 1449 : 			&& _Myres <= max_size() - _Myres / 2)

  00037	8b 7e 18	 mov	 edi, DWORD PTR [esi+24]
  0003a	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  0003f	f7 e3		 mul	 ebx
  00041	8b cf		 mov	 ecx, edi
  00043	d1 e9		 shr	 ecx, 1
  00045	d1 ea		 shr	 edx, 1
  00047	3b d1		 cmp	 edx, ecx
  00049	73 0e		 jae	 SHORT $L120174
  0004b	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00050	2b c1		 sub	 eax, ecx
  00052	3b f8		 cmp	 edi, eax
  00054	77 03		 ja	 SHORT $L120174

; 1450 : 			_Newres = _Myres + _Myres / 2;	// grow exponentially if possible

  00056	8d 1c 39	 lea	 ebx, DWORD PTR [ecx+edi]
$L120174:

; 1451 : 		_Elem *_Ptr;
; 1452 : 
; 1453 : 		_TRY_BEGIN
; 1454 : 			_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00059	8d 4b 01	 lea	 ecx, DWORD PTR [ebx+1]
  0005c	51		 push	 ecx
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00064	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00069	8b d0		 mov	 edx, eax
  0006b	83 c4 04	 add	 esp, 4
  0006e	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
  00071	eb 29		 jmp	 SHORT $L120176
$L145461:

; 1455 : 		_CATCH_ALL
; 1456 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  00073	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00076	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax

; 1457 : 			_TRY_BEGIN
; 1458 : 				_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00079	40		 inc	 eax
  0007a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0007d	50		 push	 eax
  0007e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00082	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00087	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  0008a	83 c4 04	 add	 esp, 4

; 1462 : 			_CATCH_END
; 1463 : 		_CATCH_END

  0008d	b8 00 00 00 00	 mov	 eax, $L145656
  00092	c3		 ret	 0
$L145656:
  00093	8b 5d e8	 mov	 ebx, DWORD PTR __Newres$[ebp]
  00096	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  00099	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$L120176:

; 1464 : 
; 1465 : 		if (0 < _Oldlen)

  0009c	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  0009f	85 c9		 test	 ecx, ecx
  000a1	76 24		 jbe	 SHORT $L145581

; 1466 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

  000a3	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000a7	72 05		 jb	 SHORT $L145576
  000a9	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  000ac	eb 03		 jmp	 SHORT $L145577
$L145576:
  000ae	83 c6 04	 add	 esi, 4
$L145577:
  000b1	8b c1		 mov	 eax, ecx
  000b3	c1 e9 02	 shr	 ecx, 2
  000b6	8b fa		 mov	 edi, edx
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb
  000c1	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  000c4	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
$L145581:

; 1467 : 		_Tidy(true);

  000c7	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000cb	72 12		 jb	 SHORT $L145623
  000cd	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000d0	51		 push	 ecx
  000d1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000d6	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  000d9	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  000dc	83 c4 04	 add	 esp, 4
$L145623:

; 1468 : 		_Bx._Ptr = _Ptr;
; 1469 : 		_Myres = _Newres;
; 1470 : 		_Eos(_Oldlen);

  000df	83 fb 10	 cmp	 ebx, 16			; 00000010H
  000e2	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000e5	c6 00 00	 mov	 BYTE PTR [eax], 0
  000e8	89 10		 mov	 DWORD PTR [eax], edx
  000ea	89 5e 18	 mov	 DWORD PTR [esi+24], ebx
  000ed	89 4e 14	 mov	 DWORD PTR [esi+20], ecx
  000f0	72 02		 jb	 SHORT $L145649
  000f2	8b c2		 mov	 eax, edx
$L145649:

; 1471 : 		}

  000f4	5f		 pop	 edi
  000f5	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0
  000f9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000fc	5e		 pop	 esi
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00104	5b		 pop	 ebx
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c2 08 00	 ret	 8
$L145463:

; 1459 : 			_CATCH_ALL
; 1460 : 			_Tidy(true);	// failed again, discard storage and reraise

  0010b	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  0010e	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00112	72 0c		 jb	 SHORT $L145562
  00114	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00117	52		 push	 edx
  00118	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0011d	83 c4 04	 add	 esp, 4
$L145562:

; 1461 : 			_RERAISE;

  00120	6a 00		 push	 0
  00122	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00129	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00130	6a 00		 push	 0
  00132	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00136	e8 00 00 00 00	 call	 __CxxThrowException@8
$L145666:
$L145660:
  0013b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T145655
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	??$_Destroy_range@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@YAXPAUtagTENTRYRECORD@@0AAV?$allocator@UtagTENTRYRECORD@@@0@@Z ; std::_Destroy_range<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@YAXPAUtagTENTRYRECORD@@0AAV?$allocator@UtagTENTRYRECORD@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@YAXPAUtagTENTRYRECORD@@0AAV?$allocator@UtagTENTRYRECORD@@@0@@Z PROC NEAR ; std::_Destroy_range<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >, COMDAT

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 218  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@YAXPAUtagTENTRYRECORD@@0AAV?$allocator@UtagTENTRYRECORD@@@0@@Z ENDP ; std::_Destroy_range<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >
_TEXT	ENDS
PUBLIC	??1tagTGUILDARTICLE@@QAE@XZ			; tagTGUILDARTICLE::~tagTGUILDARTICLE
; Function compile flags: /Ogty
;	COMDAT ??1tagTGUILDARTICLE@@QAE@XZ
_TEXT	SEGMENT
??1tagTGUILDARTICLE@@QAE@XZ PROC NEAR			; tagTGUILDARTICLE::~tagTGUILDARTICLE, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  00006	e8 00 00 00 00	 call	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
  0000b	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  0000e	e8 00 00 00 00	 call	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
  00013	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00016	e8 00 00 00 00	 call	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
  0001b	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  0001e	5e		 pop	 esi
  0001f	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
??1tagTGUILDARTICLE@@QAE@XZ ENDP			; tagTGUILDARTICLE::~tagTGUILDARTICLE
_TEXT	ENDS
PUBLIC	??1tagTTACTICSMEMBER@@QAE@XZ			; tagTTACTICSMEMBER::~tagTTACTICSMEMBER
; Function compile flags: /Ogty
;	COMDAT ??1tagTTACTICSMEMBER@@QAE@XZ
_TEXT	SEGMENT
??1tagTTACTICSMEMBER@@QAE@XZ PROC NEAR			; tagTTACTICSMEMBER::~tagTTACTICSMEMBER, COMDAT
; _this$ = ecx
  00000	83 c1 08	 add	 ecx, 8
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
??1tagTTACTICSMEMBER@@QAE@XZ ENDP			; tagTTACTICSMEMBER::~tagTTACTICSMEMBER
_TEXT	ENDS
PUBLIC	??0tagTGUILDARTICLE@@QAE@XZ			; tagTGUILDARTICLE::tagTGUILDARTICLE
; Function compile flags: /Ogty
;	COMDAT ??0tagTGUILDARTICLE@@QAE@XZ
_TEXT	SEGMENT
??0tagTGUILDARTICLE@@QAE@XZ PROC NEAR			; tagTGUILDARTICLE::tagTGUILDARTICLE, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00006	e8 00 00 00 00	 call	 ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
  0000b	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0000e	e8 00 00 00 00	 call	 ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
  00013	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00016	e8 00 00 00 00	 call	 ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
  0001b	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  0001e	e8 00 00 00 00	 call	 ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
  00023	8b c6		 mov	 eax, esi
  00025	5e		 pop	 esi
  00026	c3		 ret	 0
??0tagTGUILDARTICLE@@QAE@XZ ENDP			; tagTGUILDARTICLE::tagTGUILDARTICLE
_TEXT	ENDS
PUBLIC	??0tagTGUILDPOINTREWARD@@QAE@XZ			; tagTGUILDPOINTREWARD::tagTGUILDPOINTREWARD
; Function compile flags: /Ogty
;	COMDAT ??0tagTGUILDPOINTREWARD@@QAE@XZ
_TEXT	SEGMENT
??0tagTGUILDPOINTREWARD@@QAE@XZ PROC NEAR		; tagTGUILDPOINTREWARD::tagTGUILDPOINTREWARD, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi
  0000b	c3		 ret	 0
??0tagTGUILDPOINTREWARD@@QAE@XZ ENDP			; tagTGUILDPOINTREWARD::tagTGUILDPOINTREWARD
_TEXT	ENDS
PUBLIC	??1tagTGUILDPOINTREWARD@@QAE@XZ			; tagTGUILDPOINTREWARD::~tagTGUILDPOINTREWARD
; Function compile flags: /Ogty
;	COMDAT ??1tagTGUILDPOINTREWARD@@QAE@XZ
_TEXT	SEGMENT
??1tagTGUILDPOINTREWARD@@QAE@XZ PROC NEAR		; tagTGUILDPOINTREWARD::~tagTGUILDPOINTREWARD, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
??1tagTGUILDPOINTREWARD@@QAE@XZ ENDP			; tagTGUILDPOINTREWARD::~tagTGUILDPOINTREWARD
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::clear
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T145734 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L145810
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L145809:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L145811
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L145812
$L145811:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L145812:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L145809
$L145810:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L145733
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L145733
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L145733:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T145734[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T145734[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::find
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T145934 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L146010
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L146009:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L146011
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L146012
$L146011:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L146012:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L146009
$L146010:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L145933
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L145933
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L145933:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T145934[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T145934[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::find
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T146134 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L146210
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L146209:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L146211
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L146212
$L146211:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L146212:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L146209
$L146210:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L146133
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L146133
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L146133:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T146134[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T146134[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::find
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::clear
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T146334 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L146411
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L146410:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L146412
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L146413
$L146412:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L146413:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L146410
$L146411:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L146333
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L146333
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L146333:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T146334[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T146334[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::find
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::find
; Function compile flags: /Ogty
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z
_TEXT	SEGMENT
$T146542 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 11	 mov	 bl, BYTE PTR [eax+17]
  0000b	84 db		 test	 bl, bl
  0000d	57		 push	 edi
  0000e	8b 7c 24 14	 mov	 edi, DWORD PTR __Keyval$[esp+8]
  00012	75 1b		 jne	 SHORT $L146638
  00014	56		 push	 esi
  00015	66 8b 37	 mov	 si, WORD PTR [edi]
$L146637:
  00018	66 39 70 0c	 cmp	 WORD PTR [eax+12], si
  0001c	73 05		 jae	 SHORT $L146639
  0001e	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00021	eb 04		 jmp	 SHORT $L146640
$L146639:
  00023	8b d0		 mov	 edx, eax
  00025	8b 00		 mov	 eax, DWORD PTR [eax]
$L146640:
  00027	8a 58 11	 mov	 bl, BYTE PTR [eax+17]
  0002a	84 db		 test	 bl, bl
  0002c	74 ea		 je	 SHORT $L146637
  0002e	5e		 pop	 esi
$L146638:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002f	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00032	3b d0		 cmp	 edx, eax
  00034	89 54 24 14	 mov	 DWORD PTR __Where$[esp+8], edx
  00038	74 1b		 je	 SHORT $L146541
  0003a	66 8b 0f	 mov	 cx, WORD PTR [edi]
  0003d	66 3b 4a 0c	 cmp	 cx, WORD PTR [edx+12]
  00041	72 12		 jb	 SHORT $L146541
  00043	8d 44 24 14	 lea	 eax, DWORD PTR __Where$[esp+8]
  00047	8b 10		 mov	 edx, DWORD PTR [eax]
  00049	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  0004d	5f		 pop	 edi
  0004e	89 10		 mov	 DWORD PTR [eax], edx
  00050	5b		 pop	 ebx

; 791  : 		}

  00051	59		 pop	 ecx
  00052	c2 08 00	 ret	 8
$L146541:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00055	89 44 24 08	 mov	 DWORD PTR $T146542[esp+12], eax
  00059	8d 44 24 08	 lea	 eax, DWORD PTR $T146542[esp+12]
  0005d	8b 10		 mov	 edx, DWORD PTR [eax]
  0005f	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00063	5f		 pop	 edi
  00064	89 10		 mov	 DWORD PTR [eax], edx
  00066	5b		 pop	 ebx

; 791  : 		}

  00067	59		 pop	 ecx
  00068	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::find
_TEXT	ENDS
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::equal_range
; Function compile flags: /Ogty
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::equal_range, COMDAT
; _this$ = ecx

; 830  : 		return (_Pairii(lower_bound(_Keyval), upper_bound(_Keyval)));

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00006	53		 push	 ebx
  00007	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000a	84 db		 test	 bl, bl
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 7c 24 14	 mov	 edi, DWORD PTR __Keyval$[esp+8]
  00012	75 17		 jne	 SHORT $L146799
  00014	8b 37		 mov	 esi, DWORD PTR [edi]
$L146798:
  00016	3b 70 0c	 cmp	 esi, DWORD PTR [eax+12]
  00019	73 06		 jae	 SHORT $L146800
  0001b	8b d0		 mov	 edx, eax
  0001d	8b 00		 mov	 eax, DWORD PTR [eax]
  0001f	eb 03		 jmp	 SHORT $L146801
$L146800:
  00021	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L146801:
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 eb		 je	 SHORT $L146798
$L146799:
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00031	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00034	84 db		 test	 bl, bl
  00036	75 1d		 jne	 SHORT $L146880
  00038	8b 37		 mov	 esi, DWORD PTR [edi]
  0003a	8d 9b 00 00 00
	00		 npad	 6
$L146879:
  00040	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  00043	73 05		 jae	 SHORT $L146881
  00045	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00048	eb 04		 jmp	 SHORT $L146882
$L146881:
  0004a	8b c8		 mov	 ecx, eax
  0004c	8b 00		 mov	 eax, DWORD PTR [eax]
$L146882:
  0004e	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00051	84 db		 test	 bl, bl
  00053	74 eb		 je	 SHORT $L146879
$L146880:
  00055	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	89 08		 mov	 DWORD PTR [eax], ecx
  0005d	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00060	5b		 pop	 ebx

; 831  : 		}

  00061	c2 08 00	 ret	 8
?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::equal_range
_TEXT	ENDS
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::equal_range
; Function compile flags: /Ogty
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::equal_range, COMDAT
; _this$ = ecx

; 830  : 		return (_Pairii(lower_bound(_Keyval), upper_bound(_Keyval)));

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00006	53		 push	 ebx
  00007	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000a	84 db		 test	 bl, bl
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 7c 24 14	 mov	 edi, DWORD PTR __Keyval$[esp+8]
  00012	75 17		 jne	 SHORT $L147011
  00014	8b 37		 mov	 esi, DWORD PTR [edi]
$L147010:
  00016	3b 70 0c	 cmp	 esi, DWORD PTR [eax+12]
  00019	73 06		 jae	 SHORT $L147012
  0001b	8b d0		 mov	 edx, eax
  0001d	8b 00		 mov	 eax, DWORD PTR [eax]
  0001f	eb 03		 jmp	 SHORT $L147013
$L147012:
  00021	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L147013:
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 eb		 je	 SHORT $L147010
$L147011:
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00031	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00034	84 db		 test	 bl, bl
  00036	75 1d		 jne	 SHORT $L147092
  00038	8b 37		 mov	 esi, DWORD PTR [edi]
  0003a	8d 9b 00 00 00
	00		 npad	 6
$L147091:
  00040	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  00043	73 05		 jae	 SHORT $L147093
  00045	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00048	eb 04		 jmp	 SHORT $L147094
$L147093:
  0004a	8b c8		 mov	 ecx, eax
  0004c	8b 00		 mov	 eax, DWORD PTR [eax]
$L147094:
  0004e	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00051	84 db		 test	 bl, bl
  00053	74 eb		 je	 SHORT $L147091
$L147092:
  00055	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	89 08		 mov	 DWORD PTR [eax], ecx
  0005d	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00060	5b		 pop	 ebx

; 831  : 		}

  00061	c2 08 00	 ret	 8
?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::equal_range
_TEXT	ENDS
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::equal_range
; Function compile flags: /Ogty
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::equal_range, COMDAT
; _this$ = ecx

; 830  : 		return (_Pairii(lower_bound(_Keyval), upper_bound(_Keyval)));

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00006	53		 push	 ebx
  00007	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000a	84 db		 test	 bl, bl
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 7c 24 14	 mov	 edi, DWORD PTR __Keyval$[esp+8]
  00012	75 17		 jne	 SHORT $L147223
  00014	8b 37		 mov	 esi, DWORD PTR [edi]
$L147222:
  00016	3b 70 0c	 cmp	 esi, DWORD PTR [eax+12]
  00019	73 06		 jae	 SHORT $L147224
  0001b	8b d0		 mov	 edx, eax
  0001d	8b 00		 mov	 eax, DWORD PTR [eax]
  0001f	eb 03		 jmp	 SHORT $L147225
$L147224:
  00021	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L147225:
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 eb		 je	 SHORT $L147222
$L147223:
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00031	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00034	84 db		 test	 bl, bl
  00036	75 1d		 jne	 SHORT $L147304
  00038	8b 37		 mov	 esi, DWORD PTR [edi]
  0003a	8d 9b 00 00 00
	00		 npad	 6
$L147303:
  00040	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  00043	73 05		 jae	 SHORT $L147305
  00045	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00048	eb 04		 jmp	 SHORT $L147306
$L147305:
  0004a	8b c8		 mov	 ecx, eax
  0004c	8b 00		 mov	 eax, DWORD PTR [eax]
$L147306:
  0004e	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00051	84 db		 test	 bl, bl
  00053	74 eb		 je	 SHORT $L147303
$L147304:
  00055	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	89 08		 mov	 DWORD PTR [eax], ecx
  0005d	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00060	5b		 pop	 ebx

; 831  : 		}

  00061	c2 08 00	 ret	 8
?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::equal_range
_TEXT	ENDS
PUBLIC	?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::equal_range
; Function compile flags: /Ogty
;	COMDAT ?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::equal_range, COMDAT
; _this$ = ecx

; 830  : 		return (_Pairii(lower_bound(_Keyval), upper_bound(_Keyval)));

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00006	53		 push	 ebx
  00007	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000a	84 db		 test	 bl, bl
  0000c	56		 push	 esi
  0000d	57		 push	 edi
  0000e	8b 7c 24 14	 mov	 edi, DWORD PTR __Keyval$[esp+8]
  00012	75 17		 jne	 SHORT $L147435
  00014	8b 37		 mov	 esi, DWORD PTR [edi]
$L147434:
  00016	3b 70 0c	 cmp	 esi, DWORD PTR [eax+12]
  00019	73 06		 jae	 SHORT $L147436
  0001b	8b d0		 mov	 edx, eax
  0001d	8b 00		 mov	 eax, DWORD PTR [eax]
  0001f	eb 03		 jmp	 SHORT $L147437
$L147436:
  00021	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L147437:
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 eb		 je	 SHORT $L147434
$L147435:
  0002b	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  0002e	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00031	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00034	84 db		 test	 bl, bl
  00036	75 1d		 jne	 SHORT $L147527
  00038	8b 37		 mov	 esi, DWORD PTR [edi]
  0003a	8d 9b 00 00 00
	00		 npad	 6
$L147526:
  00040	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  00043	73 05		 jae	 SHORT $L147528
  00045	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00048	eb 04		 jmp	 SHORT $L147529
$L147528:
  0004a	8b c8		 mov	 ecx, eax
  0004c	8b 00		 mov	 eax, DWORD PTR [eax]
$L147529:
  0004e	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00051	84 db		 test	 bl, bl
  00053	74 eb		 je	 SHORT $L147526
$L147527:
  00055	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00059	5f		 pop	 edi
  0005a	5e		 pop	 esi
  0005b	89 08		 mov	 DWORD PTR [eax], ecx
  0005d	89 50 04	 mov	 DWORD PTR [eax+4], edx
  00060	5b		 pop	 ebx

; 831  : 		}

  00061	c2 08 00	 ret	 8
?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::equal_range
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy, COMDAT
; _this$ = ecx

; 791  : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 792  : 		if (_Myfirst != 0)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L147553

; 793  : 			{	// something to free, destroy and deallocate it
; 794  : 			_Destroy(_Myfirst, _Mylast);
; 795  : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L147553:

; 796  : 			}
; 797  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 798  : 		}

  00029	c3		 ret	 0
?_Tidy@?$vector@KV?$allocator@K@std@@@std@@IAEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Tidy
_TEXT	ENDS
PUBLIC	??Fiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::operator--
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Fiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Fiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::operator--, COMDAT
; _this$ = ecx

; 339  : 			{	// predecrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 340  : 			--(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Dec

; 341  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 342  : 			}

  0000b	c3		 ret	 0
??Fiterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::iterator::operator--
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 1
??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z PROC NEAR ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >, COMDAT
; _this$ = ecx

; 95   : 		{	// construct base, and allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 96   : 		}

  00002	c2 08 00	 ret	 8
??0?$_Tree_val@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE@ABU?$less@K@1@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z ENDP ; std::_Tree_val<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Tree_val<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L147784
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L147784:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L147811
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L147811:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L147838
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L147838:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L147898
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L147898:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L147925
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L147925:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L147952
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L147952:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L148012
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L148012:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L148039
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L148039:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L148066
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L148066:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Buynode
; Function compile flags: /Ogty
;	COMDAT ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Buynode, COMDAT
; _this$ = ecx

; 1106 : 		_Nodeptr _Wherenode = this->_Alnod.allocate(1);

  00000	6a 18		 push	 24			; 00000018H
  00002	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00007	83 c4 04	 add	 esp, 4

; 1107 : 		int _Linkcnt = 0;
; 1108 : 
; 1109 : 		_TRY_BEGIN
; 1110 : 		this->_Alptr.construct(&_Left(_Wherenode), 0);

  0000a	85 c0		 test	 eax, eax
  0000c	74 06		 je	 SHORT $L148126
  0000e	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$L148126:

; 1111 : 		++_Linkcnt;
; 1112 : 		this->_Alptr.construct(&_Parent(_Wherenode), 0);

  00014	8d 48 04	 lea	 ecx, DWORD PTR [eax+4]
  00017	85 c9		 test	 ecx, ecx
  00019	74 06		 je	 SHORT $L148153
  0001b	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L148153:

; 1113 : 		++_Linkcnt;
; 1114 : 		this->_Alptr.construct(&_Right(_Wherenode), 0);

  00021	8d 48 08	 lea	 ecx, DWORD PTR [eax+8]
  00024	85 c9		 test	 ecx, ecx
  00026	74 06		 je	 SHORT $L148180
  00028	c7 01 00 00 00
	00		 mov	 DWORD PTR [ecx], 0
$L148180:

; 1115 : 		_CATCH_ALL
; 1116 : 		if (1 < _Linkcnt)
; 1117 : 			this->_Alptr.destroy(&_Parent(_Wherenode));
; 1118 : 		if (0 < _Linkcnt)
; 1119 : 			this->_Alptr.destroy(&_Left(_Wherenode));
; 1120 : 		this->_Alnod.deallocate(_Wherenode, 1);
; 1121 : 		_RERAISE;
; 1122 : 		_CATCH_END
; 1123 : 		_Color(_Wherenode) = _Black;

  0002e	c6 40 14 01	 mov	 BYTE PTR [eax+20], 1

; 1124 : 		_Isnil(_Wherenode) = false;

  00032	c6 40 15 00	 mov	 BYTE PTR [eax+21], 0

; 1125 : 		return (_Wherenode);
; 1126 : 		}

  00036	c3		 ret	 0
?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Buynode
_TEXT	ENDS
PUBLIC	??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT
$T148242 = 8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@0AAI@Z PROC NEAR ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator,unsigned int>, COMDAT

; 498  : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	89 44 24 08	 mov	 DWORD PTR $T148242[esp], eax
  0000f	74 21		 je	 SHORT $L148230
  00011	56		 push	 esi
  00012	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
  00016	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$L148232:
  00020	ff 06		 inc	 DWORD PTR [esi]
  00022	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T148242[esp+4]
  00026	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Inc
  0002b	39 7c 24 0c	 cmp	 DWORD PTR $T148242[esp+4], edi
  0002f	75 ef		 jne	 SHORT $L148232
  00031	5e		 pop	 esi
$L148230:
  00032	5f		 pop	 edi

; 499  : 	}

  00033	c3		 ret	 0
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT
$T148284 = 8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@0AAI@Z PROC NEAR ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator,unsigned int>, COMDAT

; 498  : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	89 44 24 08	 mov	 DWORD PTR $T148284[esp], eax
  0000f	74 21		 je	 SHORT $L148272
  00011	56		 push	 esi
  00012	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
  00016	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$L148274:
  00020	ff 06		 inc	 DWORD PTR [esi]
  00022	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T148284[esp+4]
  00026	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc
  0002b	39 7c 24 0c	 cmp	 DWORD PTR $T148284[esp+4], edi
  0002f	75 ef		 jne	 SHORT $L148274
  00031	5e		 pop	 esi
$L148272:
  00032	5f		 pop	 edi

; 499  : 	}

  00033	c3		 ret	 0
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT
$T148326 = 8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@0AAI@Z PROC NEAR ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator,unsigned int>, COMDAT

; 498  : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	89 44 24 08	 mov	 DWORD PTR $T148326[esp], eax
  0000f	74 21		 je	 SHORT $L148314
  00011	56		 push	 esi
  00012	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
  00016	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$L148316:
  00020	ff 06		 inc	 DWORD PTR [esi]
  00022	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T148326[esp+4]
  00026	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Inc
  0002b	39 7c 24 0c	 cmp	 DWORD PTR $T148326[esp+4], edi
  0002f	75 ef		 jne	 SHORT $L148316
  00031	5e		 pop	 esi
$L148314:
  00032	5f		 pop	 edi

; 499  : 	}

  00033	c3		 ret	 0
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator,unsigned int>
; Function compile flags: /Ogty
;	COMDAT ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@0AAI@Z
_TEXT	SEGMENT
$T148368 = 8						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Off$ = 16						; size = 4
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@0AAI@Z PROC NEAR ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator,unsigned int>, COMDAT

; 498  : 	_Distance2(_First, _Last, _Off, _Iter_cat(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	57		 push	 edi
  00005	8b 7c 24 0c	 mov	 edi, DWORD PTR __Last$[esp]
  00009	3b c7		 cmp	 eax, edi
  0000b	89 44 24 08	 mov	 DWORD PTR $T148368[esp], eax
  0000f	74 21		 je	 SHORT $L148356
  00011	56		 push	 esi
  00012	8b 74 24 14	 mov	 esi, DWORD PTR __Off$[esp+4]
  00016	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$L148358:
  00020	ff 06		 inc	 DWORD PTR [esi]
  00022	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T148368[esp+4]
  00026	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Inc
  0002b	39 7c 24 0c	 cmp	 DWORD PTR $T148368[esp+4], edi
  0002f	75 ef		 jne	 SHORT $L148358
  00031	5e		 pop	 esi
$L148356:
  00032	5f		 pop	 edi

; 499  : 	}

  00033	c3		 ret	 0
??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@0AAI@Z ENDP ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator,unsigned int>
_TEXT	ENDS
PUBLIC	??_GtagTGUILDPOINTREWARD@@QAEPAXI@Z		; tagTGUILDPOINTREWARD::`scalar deleting destructor'
; Function compile flags: /Ogty
;	COMDAT ??_GtagTGUILDPOINTREWARD@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GtagTGUILDPOINTREWARD@@QAEPAXI@Z PROC NEAR		; tagTGUILDPOINTREWARD::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1tagTGUILDPOINTREWARD@@QAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L148373
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L148373:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GtagTGUILDPOINTREWARD@@QAEPAXI@Z ENDP		; tagTGUILDPOINTREWARD::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_strSrc$ = 8						; size = 4
??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@ABV01@@Z PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 814  : 	{

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _strSrc$[esp-4]
  00004	8b 00		 mov	 eax, DWORD PTR [eax]
  00006	56		 push	 esi
  00007	83 e8 10	 sub	 eax, 16			; 00000010H
  0000a	50		 push	 eax
  0000b	8b f1		 mov	 esi, ecx
  0000d	e8 00 00 00 00	 call	 ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
  00012	83 c0 10	 add	 eax, 16			; 00000010H
  00015	89 06		 mov	 DWORD PTR [esi], eax
  00017	83 c4 04	 add	 esp, 4

; 815  : 	}

  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	c2 04 00	 ret	 4
??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@ABV01@@Z ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 456  : 		{	// destroy the string

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 457  : 		_Tidy(true);

  00003	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00007	72 0c		 jb	 SHORT $L148442
  00009	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	83 c4 04	 add	 esp, 4
$L148442:
  00015	33 c0		 xor	 eax, eax
  00017	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  0001e	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00021	88 46 04	 mov	 BYTE PTR [esi+4], al
  00024	5e		 pop	 esi

; 458  : 		}

  00025	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::LoadStringA
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_nID$ = 12						; size = 4
?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::LoadStringA, COMDAT
; _this$ = ecx

; 1981 : 	{

  00000	53		 push	 ebx
  00001	56		 push	 esi

; 1982 : 		const ATLSTRINGRESOURCEIMAGE* pImage = AtlGetStringResourceImage( hInstance, nID );

  00002	8b 74 24 10	 mov	 esi, DWORD PTR _nID$[esp+4]
  00006	8b c6		 mov	 eax, esi
  00008	c1 e8 04	 shr	 eax, 4
  0000b	57		 push	 edi
  0000c	8b 7c 24 10	 mov	 edi, DWORD PTR _hInstance$[esp+8]
  00010	40		 inc	 eax
  00011	8b d9		 mov	 ebx, ecx
  00013	0f b7 c8	 movzx	 ecx, ax
  00016	6a 06		 push	 6
  00018	51		 push	 ecx
  00019	57		 push	 edi
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FindResourceA@12
  00020	85 c0		 test	 eax, eax
  00022	74 11		 je	 SHORT $L148531
  00024	56		 push	 esi
  00025	50		 push	 eax
  00026	57		 push	 edi
  00027	e8 00 00 00 00	 call	 ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
  0002c	8b f8		 mov	 edi, eax
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1983 : 		if( pImage == NULL )

  00031	85 ff		 test	 edi, edi
  00033	75 08		 jne	 SHORT $L117649
$L148531:
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi

; 1984 : 		{
; 1985 : 			return( FALSE );

  00037	33 c0		 xor	 eax, eax
  00039	5b		 pop	 ebx

; 1994 : 	}

  0003a	c2 08 00	 ret	 8
$L117649:

; 1986 : 		}
; 1987 : 
; 1988 : 		int nLength = StringTraits::GetBaseTypeLength( pImage->achString, pImage->nLength );

  0003d	0f b7 07	 movzx	 eax, WORD PTR [edi]
  00040	55		 push	 ebp
  00041	6a 00		 push	 0
  00043	6a 00		 push	 0
  00045	6a 00		 push	 0
  00047	6a 00		 push	 0
  00049	50		 push	 eax
  0004a	8d 6f 02	 lea	 ebp, DWORD PTR [edi+2]
  0004d	55		 push	 ebp
  0004e	6a 00		 push	 0
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00056	50		 push	 eax
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32
  0005d	8b f0		 mov	 esi, eax

; 1989 : 		PXSTR pszBuffer = GetBuffer( nLength );

  0005f	8b 03		 mov	 eax, DWORD PTR [ebx]
  00061	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  00064	83 e8 10	 sub	 eax, 16			; 00000010H
  00067	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0006a	ba 01 00 00 00	 mov	 edx, 1
  0006f	2b d1		 sub	 edx, ecx
  00071	2b c6		 sub	 eax, esi
  00073	0b d0		 or	 edx, eax
  00075	7d 08		 jge	 SHORT $L148493
  00077	56		 push	 esi
  00078	8b cb		 mov	 ecx, ebx
  0007a	e8 00 00 00 00	 call	 ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
$L148493:
  0007f	8b 03		 mov	 eax, DWORD PTR [ebx]

; 1990 : 		StringTraits::ConvertToBaseType( pszBuffer, nLength, pImage->achString, pImage->nLength );

  00081	0f b7 0f	 movzx	 ecx, WORD PTR [edi]
  00084	6a 00		 push	 0
  00086	6a 00		 push	 0
  00088	56		 push	 esi
  00089	50		 push	 eax
  0008a	51		 push	 ecx
  0008b	55		 push	 ebp
  0008c	6a 00		 push	 0
  0008e	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00094	50		 push	 eax
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32

; 1991 : 		ReleaseBufferSetLength( nLength );

  0009b	85 f6		 test	 esi, esi
  0009d	5d		 pop	 ebp
  0009e	7c 1b		 jl	 SHORT $L148528
  000a0	8b 03		 mov	 eax, DWORD PTR [ebx]
  000a2	3b 70 f8	 cmp	 esi, DWORD PTR [eax-8]
  000a5	7f 14		 jg	 SHORT $L148528
  000a7	89 70 f4	 mov	 DWORD PTR [eax-12], esi
  000aa	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  000ac	5f		 pop	 edi
  000ad	c6 04 0e 00	 mov	 BYTE PTR [esi+ecx], 0
  000b1	5e		 pop	 esi

; 1992 : 
; 1993 : 		return( TRUE );

  000b2	b8 01 00 00 00	 mov	 eax, 1
  000b7	5b		 pop	 ebx

; 1994 : 	}

  000b8	c2 08 00	 ret	 8
$L148528:
  000bb	68 57 00 07 80	 push	 -2147024809		; 80070057H
  000c0	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L148533:
$L148532:
  000c5	cc		 int	 3
?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::LoadStringA
_TEXT	ENDS
PUBLIC	??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_strSrc$ = 8						; size = 4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::operator=, COMDAT
; _this$ = ecx

; 274  : 		CStringData* pSrcData = strSrc.GetData();

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _strSrc$[esp-4]
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	8b 08		 mov	 ecx, DWORD PTR [eax]

; 275  : 		CStringData* pOldData = GetData();

  0000a	8b 37		 mov	 esi, DWORD PTR [edi]
  0000c	8d 41 f0	 lea	 eax, DWORD PTR [ecx-16]
  0000f	83 ee 10	 sub	 esi, 16			; 00000010H

; 276  : 		if( pSrcData != pOldData)

  00012	3b c6		 cmp	 eax, esi
  00014	74 4d		 je	 SHORT $L148571

; 277  : 		{
; 278  : 			if( pOldData->IsLocked() || pSrcData->pStringMgr != pOldData->pStringMgr )

  00016	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  00019	85 d2		 test	 edx, edx
  0001b	53		 push	 ebx
  0001c	8d 5e 0c	 lea	 ebx, DWORD PTR [esi+12]
  0001f	55		 push	 ebp
  00020	7c 33		 jl	 SHORT $L117679
  00022	8b 10		 mov	 edx, DWORD PTR [eax]
  00024	3b 16		 cmp	 edx, DWORD PTR [esi]
  00026	75 2d		 jne	 SHORT $L117679

; 281  : 			}
; 282  : 			else
; 283  : 			{
; 284  : 				CStringData* pNewData = CloneData( pSrcData );

  00028	50		 push	 eax
  00029	e8 00 00 00 00	 call	 ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
  0002e	8b e8		 mov	 ebp, eax
  00030	83 c4 04	 add	 esp, 4

; 285  : 				pOldData->Release();

  00033	83 c8 ff	 or	 eax, -1
  00036	f0 0f c1 03	 lock	  xadd	 DWORD PTR [ebx], eax
  0003a	48		 dec	 eax
  0003b	85 c0		 test	 eax, eax
  0003d	7f 08		 jg	 SHORT $L148562
  0003f	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00041	8b 11		 mov	 edx, DWORD PTR [ecx]
  00043	56		 push	 esi
  00044	ff 52 04	 call	 DWORD PTR [edx+4]
$L148562:

; 286  : 				Attach( pNewData );

  00047	83 c5 10	 add	 ebp, 16			; 00000010H
  0004a	89 2f		 mov	 DWORD PTR [edi], ebp
  0004c	5d		 pop	 ebp
  0004d	5b		 pop	 ebx

; 287  : 			}
; 288  : 		}
; 289  : 
; 290  : 		return( *this );

  0004e	8b c7		 mov	 eax, edi
  00050	5f		 pop	 edi
  00051	5e		 pop	 esi

; 291  : 	}

  00052	c2 04 00	 ret	 4
$L117679:

; 279  : 			{
; 280  : 				SetString( strSrc.GetString(), strSrc.GetLength() );

  00055	8b 41 f4	 mov	 eax, DWORD PTR [ecx-12]
  00058	50		 push	 eax
  00059	51		 push	 ecx
  0005a	8b cf		 mov	 ecx, edi
  0005c	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
  00061	5d		 pop	 ebp
  00062	5b		 pop	 ebx
$L148571:

; 287  : 			}
; 288  : 		}
; 289  : 
; 290  : 		return( *this );

  00063	8b c7		 mov	 eax, edi
  00065	5f		 pop	 edi
  00066	5e		 pop	 esi

; 291  : 	}

  00067	c2 04 00	 ret	 4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ENDP	; ATL::CSimpleStringT<char,0>::operator=
_TEXT	ENDS
PUBLIC	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ; ATL::CSimpleStringT<char,0>::SetString
; Function compile flags: /Ogty
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::SetString, COMDAT
; _this$ = ecx

; 579  : 	{

  00000	56		 push	 esi

; 580  : 		SetString( pszSrc, StringLength( pszSrc ) );

  00001	8b 74 24 08	 mov	 esi, DWORD PTR _pszSrc$[esp]
  00005	85 f6		 test	 esi, esi
  00007	75 0d		 jne	 SHORT $L148581
  00009	33 c0		 xor	 eax, eax
  0000b	50		 push	 eax
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
  00012	5e		 pop	 esi

; 581  : 	}

  00013	c2 04 00	 ret	 4

; 580  : 		SetString( pszSrc, StringLength( pszSrc ) );

$L148581:
  00016	8b c6		 mov	 eax, esi
  00018	57		 push	 edi
  00019	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0001c	8d 64 24 00	 npad	 4
$L148583:
  00020	8a 10		 mov	 dl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 d2		 test	 dl, dl
  00025	75 f9		 jne	 SHORT $L148583
  00027	2b c7		 sub	 eax, edi
  00029	5f		 pop	 edi
  0002a	50		 push	 eax
  0002b	56		 push	 esi
  0002c	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
  00031	5e		 pop	 esi

; 581  : 	}

  00032	c2 04 00	 ret	 4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ENDP	; ATL::CSimpleStringT<char,0>::SetString
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
EXTRN	?_Xlen@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xlen
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 1480 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	56		 push	 esi

; 1481 : 		if (max_size() < _Newsize)

  00002	8b 74 24 0c	 mov	 esi, DWORD PTR __Newsize$[esp+4]
  00006	83 fe fe	 cmp	 esi, -2			; fffffffeH
  00009	8b e9		 mov	 ebp, ecx
  0000b	76 05		 jbe	 SHORT $L119063

; 1482 : 			_String_base::_Xlen();	// result too long

  0000d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L119063:

; 1483 : 		if (_Myres < _Newsize)

  00012	8b 45 18	 mov	 eax, DWORD PTR [ebp+24]
  00015	3b c6		 cmp	 eax, esi
  00017	73 19		 jae	 SHORT $L119064

; 1484 : 			_Copy(_Newsize, _Mysize);	// reallocate to grow

  00019	8b 45 14	 mov	 eax, DWORD PTR [ebp+20]
  0001c	50		 push	 eax
  0001d	56		 push	 esi
  0001e	8b cd		 mov	 ecx, ebp
  00020	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  00025	33 c0		 xor	 eax, eax
  00027	3b c6		 cmp	 eax, esi
  00029	1b c0		 sbb	 eax, eax
  0002b	5e		 pop	 esi
  0002c	f7 d8		 neg	 eax
  0002e	5d		 pop	 ebp

; 1491 : 		}

  0002f	c2 08 00	 ret	 8
$L119064:

; 1485 : 		else if (_Trim && _Newsize < _BUF_SIZE)

  00032	8a 4c 24 10	 mov	 cl, BYTE PTR __Trim$[esp+4]
  00036	84 c9		 test	 cl, cl
  00038	74 5c		 je	 SHORT $L119066
  0003a	83 fe 10	 cmp	 esi, 16			; 00000010H
  0003d	73 57		 jae	 SHORT $L119066
  0003f	53		 push	 ebx

; 1486 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1487 : 				_Newsize < _Mysize ? _Newsize : _Mysize);

  00040	8b 5d 14	 mov	 ebx, DWORD PTR [ebp+20]
  00043	3b f3		 cmp	 esi, ebx
  00045	73 02		 jae	 SHORT $L148588
  00047	8b de		 mov	 ebx, esi
$L148588:
  00049	83 f8 10	 cmp	 eax, 16			; 00000010H
  0004c	72 2b		 jb	 SHORT $L148649
  0004e	85 db		 test	 ebx, ebx
  00050	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00053	57		 push	 edi
  00054	8d 7d 04	 lea	 edi, DWORD PTR [ebp+4]
  00057	76 16		 jbe	 SHORT $L148647
  00059	8b cb		 mov	 ecx, ebx
  0005b	8b d1		 mov	 edx, ecx
  0005d	c1 e9 02	 shr	 ecx, 2
  00060	8b f0		 mov	 esi, eax
  00062	f3 a5		 rep movsd
  00064	8b ca		 mov	 ecx, edx
  00066	83 e1 03	 and	 ecx, 3
  00069	f3 a4		 rep movsb
  0006b	8b 74 24 14	 mov	 esi, DWORD PTR __Newsize$[esp+12]
$L148647:
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00075	83 c4 04	 add	 esp, 4
  00078	5f		 pop	 edi
$L148649:
  00079	89 5d 14	 mov	 DWORD PTR [ebp+20], ebx

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  0007c	33 c0		 xor	 eax, eax
  0007e	c7 45 18 0f 00
	00 00		 mov	 DWORD PTR [ebp+24], 15	; 0000000fH
  00085	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0008a	3b c6		 cmp	 eax, esi
  0008c	5b		 pop	 ebx
  0008d	1b c0		 sbb	 eax, eax
  0008f	5e		 pop	 esi
  00090	f7 d8		 neg	 eax
  00092	5d		 pop	 ebp

; 1491 : 		}

  00093	c2 08 00	 ret	 8
$L119066:

; 1488 : 		else if (_Newsize == 0)

  00096	85 f6		 test	 esi, esi
  00098	75 23		 jne	 SHORT $L148679

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

  0009a	83 f8 10	 cmp	 eax, 16			; 00000010H
  0009d	89 75 14	 mov	 DWORD PTR [ebp+20], esi
  000a0	72 14		 jb	 SHORT $L148675
  000a2	8b 6d 04	 mov	 ebp, DWORD PTR [ebp+4]

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000a5	33 c0		 xor	 eax, eax
  000a7	3b c6		 cmp	 eax, esi
  000a9	1b c0		 sbb	 eax, eax
  000ab	5e		 pop	 esi
  000ac	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
  000b0	f7 d8		 neg	 eax
  000b2	5d		 pop	 ebp

; 1491 : 		}

  000b3	c2 08 00	 ret	 8

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

$L148675:
  000b6	83 c5 04	 add	 ebp, 4
  000b9	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
$L148679:

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000bd	33 c0		 xor	 eax, eax
  000bf	3b c6		 cmp	 eax, esi
  000c1	1b c0		 sbb	 eax, eax
  000c3	5e		 pop	 esi
  000c4	f7 d8		 neg	 eax
  000c6	5d		 pop	 ebp

; 1491 : 		}

  000c7	c2 08 00	 ret	 8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@IAEXPAUtagTENTRYRECORD@@0@Z ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::_Destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Destroy@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@IAEXPAUtagTENTRYRECORD@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@IAEXPAUtagTENTRYRECORD@@0@Z PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);
; 788  : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@IAEXPAUtagTENTRYRECORD@@0@Z ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::_Destroy
_TEXT	ENDS
PUBLIC	??_GtagTGUILDARTICLE@@QAEPAXI@Z			; tagTGUILDARTICLE::`scalar deleting destructor'
; Function compile flags: /Ogty
;	COMDAT ??_GtagTGUILDARTICLE@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GtagTGUILDARTICLE@@QAEPAXI@Z PROC NEAR		; tagTGUILDARTICLE::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1tagTGUILDARTICLE@@QAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L148688
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L148688:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GtagTGUILDARTICLE@@QAEPAXI@Z ENDP			; tagTGUILDARTICLE::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??_GtagTTACTICSMEMBER@@QAEPAXI@Z		; tagTTACTICSMEMBER::`scalar deleting destructor'
; Function compile flags: /Ogty
;	COMDAT ??_GtagTTACTICSMEMBER@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GtagTTACTICSMEMBER@@QAEPAXI@Z PROC NEAR		; tagTTACTICSMEMBER::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1tagTTACTICSMEMBER@@QAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L148692
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L148692:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GtagTTACTICSMEMBER@@QAEPAXI@Z ENDP			; tagTTACTICSMEMBER::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?CreatePeerage@CTGuild@@QAEPAUtagTCHARACTER@@KE@Z ; CTGuild::CreatePeerage
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tguild.cpp
;	COMDAT ?CreatePeerage@CTGuild@@QAEPAUtagTCHARACTER@@KE@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_dwID$ = 8						; size = 4
_bPeer$ = 12						; size = 1
?CreatePeerage@CTGuild@@QAEPAUtagTCHARACTER@@KE@Z PROC NEAR ; CTGuild::CreatePeerage, COMDAT
; _this$ = ecx

; 111  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f1		 mov	 esi, ecx

; 112  : 	LPTCHARACTER pChar=NULL;
; 113  : 	MAPTGUILDMEMBER::iterator it = m_mapTMember.find(dwID);

  00005	8d 44 24 10	 lea	 eax, DWORD PTR _dwID$[esp+8]
  00009	50		 push	 eax
  0000a	8d 4c 24 0c	 lea	 ecx, DWORD PTR _it$[esp+16]
  0000e	51		 push	 ecx
  0000f	8d 4e 70	 lea	 ecx, DWORD PTR [esi+112]
  00012	33 ff		 xor	 edi, edi
  00014	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::find

; 114  : 	if(it!=m_mapTMember.end())

  00019	8b 44 24 08	 mov	 eax, DWORD PTR _it$[esp+12]
  0001d	3b 46 74	 cmp	 eax, DWORD PTR [esi+116]
  00020	74 16		 je	 SHORT $L148751

; 115  : 	{
; 116  : 		(*it).second->m_bPeer = bPeer;

  00022	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00025	8a 4c 24 14	 mov	 cl, BYTE PTR _bPeer$[esp+8]
  00029	88 4a 13	 mov	 BYTE PTR [edx+19], cl

; 117  : 		pChar = (*it).second->m_pChar;

  0002c	8b 50 10	 mov	 edx, DWORD PTR [eax+16]

; 118  : 	}
; 119  : 	return pChar;

  0002f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00032	5f		 pop	 edi
  00033	5e		 pop	 esi

; 120  : }

  00034	59		 pop	 ecx
  00035	c2 08 00	 ret	 8
$L148751:

; 118  : 	}
; 119  : 	return pChar;

  00038	8b c7		 mov	 eax, edi
  0003a	5f		 pop	 edi
  0003b	5e		 pop	 esi

; 120  : }

  0003c	59		 pop	 ecx
  0003d	c2 08 00	 ret	 8
?CreatePeerage@CTGuild@@QAEPAUtagTCHARACTER@@KE@Z ENDP	; CTGuild::CreatePeerage
_TEXT	ENDS
PUBLIC	?FindMember@CTGuild@@QAEPAUtagTGUILDMEMBER@@K@Z	; CTGuild::FindMember
; Function compile flags: /Ogty
;	COMDAT ?FindMember@CTGuild@@QAEPAUtagTGUILDMEMBER@@K@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_dwID$ = 8						; size = 4
?FindMember@CTGuild@@QAEPAUtagTGUILDMEMBER@@K@Z PROC NEAR ; CTGuild::FindMember, COMDAT
; _this$ = ecx

; 123  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 124  : 	MAPTGUILDMEMBER::iterator it = m_mapTMember.find(dwID);

  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _dwID$[esp+4]
  00008	50		 push	 eax
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _it$[esp+12]
  0000d	51		 push	 ecx
  0000e	8d 4e 70	 lea	 ecx, DWORD PTR [esi+112]
  00011	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::find

; 125  : 	if(it!=m_mapTMember.end())

  00016	8b 4e 74	 mov	 ecx, DWORD PTR [esi+116]
  00019	8b 44 24 04	 mov	 eax, DWORD PTR _it$[esp+8]
  0001d	3b c1		 cmp	 eax, ecx
  0001f	5e		 pop	 esi
  00020	74 07		 je	 SHORT $L134667

; 126  : 		return (*it).second;

  00022	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 129  : }

  00025	59		 pop	 ecx
  00026	c2 04 00	 ret	 4
$L134667:

; 127  : 
; 128  : 	return NULL;

  00029	33 c0		 xor	 eax, eax

; 129  : }

  0002b	59		 pop	 ecx
  0002c	c2 04 00	 ret	 4
?FindMember@CTGuild@@QAEPAUtagTGUILDMEMBER@@K@Z ENDP	; CTGuild::FindMember
_TEXT	ENDS
PUBLIC	?FindMember@CTGuild@@QAEPAUtagTGUILDMEMBER@@V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTGuild::FindMember
; Function compile flags: /Ogty
;	COMDAT ?FindMember@CTGuild@@QAEPAUtagTGUILDMEMBER@@V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_strName$ = 8						; size = 4
?FindMember@CTGuild@@QAEPAUtagTGUILDMEMBER@@V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTGuild::FindMember, COMDAT
; _this$ = ecx

; 132  : {

  00000	51		 push	 ecx
  00001	53		 push	 ebx
  00002	8b d9		 mov	 ebx, ecx

; 133  : 	MAPTGUILDMEMBER::iterator it;
; 134  : 	for(it=m_mapTMember.begin(); it!=m_mapTMember.end(); it++)

  00004	8b 43 74	 mov	 eax, DWORD PTR [ebx+116]
  00007	56		 push	 esi
  00008	8b 30		 mov	 esi, DWORD PTR [eax]
  0000a	3b f0		 cmp	 esi, eax
  0000c	57		 push	 edi
  0000d	8b 7c 24 14	 mov	 edi, DWORD PTR _strName$[esp+12]
  00011	89 74 24 0c	 mov	 DWORD PTR _it$[esp+16], esi
  00015	74 26		 je	 SHORT $L134678
$L148855:

; 135  : 	{
; 136  : 		if((*it).second->m_strName == strName)

  00017	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0001a	8b 40 0c	 mov	 eax, DWORD PTR [eax+12]
  0001d	57		 push	 edi
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 __mbscmp
  00024	83 c4 08	 add	 esp, 8
  00027	85 c0		 test	 eax, eax
  00029	74 35		 je	 SHORT $L148996
  0002b	8d 4c 24 0c	 lea	 ecx, DWORD PTR _it$[esp+16]
  0002f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc
  00034	8b 74 24 0c	 mov	 esi, DWORD PTR _it$[esp+16]
  00038	3b 73 74	 cmp	 esi, DWORD PTR [ebx+116]
  0003b	75 da		 jne	 SHORT $L148855
$L134678:

; 138  : 	}
; 139  : 
; 140  : 	return NULL;

  0003d	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  00040	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00043	83 ca ff	 or	 edx, -1
  00046	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0004a	4a		 dec	 edx
  0004b	85 d2		 test	 edx, edx
  0004d	7f 08		 jg	 SHORT $L148991
  0004f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00051	8b 11		 mov	 edx, DWORD PTR [ecx]
  00053	50		 push	 eax
  00054	ff 52 04	 call	 DWORD PTR [edx+4]
$L148991:
  00057	5f		 pop	 edi
  00058	5e		 pop	 esi
  00059	33 c0		 xor	 eax, eax
  0005b	5b		 pop	 ebx

; 141  : }

  0005c	59		 pop	 ecx
  0005d	c2 04 00	 ret	 4
$L148996:

; 137  : 			return (*it).second;

  00060	8b 76 10	 mov	 esi, DWORD PTR [esi+16]
  00063	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  00066	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00069	83 ca ff	 or	 edx, -1
  0006c	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00070	4a		 dec	 edx
  00071	85 d2		 test	 edx, edx
  00073	7f 08		 jg	 SHORT $L148964
  00075	8b 08		 mov	 ecx, DWORD PTR [eax]
  00077	8b 11		 mov	 edx, DWORD PTR [ecx]
  00079	50		 push	 eax
  0007a	ff 52 04	 call	 DWORD PTR [edx+4]
$L148964:
  0007d	5f		 pop	 edi
  0007e	8b c6		 mov	 eax, esi
  00080	5e		 pop	 esi
  00081	5b		 pop	 ebx

; 141  : }

  00082	59		 pop	 ecx
  00083	c2 04 00	 ret	 4
?FindMember@CTGuild@@QAEPAUtagTGUILDMEMBER@@V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTGuild::FindMember
_TEXT	ENDS
PUBLIC	?FindDesignate@CTGuild@@QAEPAUtagTGUILDMEMBER@@E@Z ; CTGuild::FindDesignate
; Function compile flags: /Ogty
;	COMDAT ?FindDesignate@CTGuild@@QAEPAUtagTGUILDMEMBER@@E@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_bDuty$ = 8						; size = 1
?FindDesignate@CTGuild@@QAEPAUtagTGUILDMEMBER@@E@Z PROC NEAR ; CTGuild::FindDesignate, COMDAT
; _this$ = ecx

; 144  : {

  00000	51		 push	 ecx
  00001	53		 push	 ebx
  00002	56		 push	 esi

; 145  : 	MAPTGUILDMEMBER::iterator it;
; 146  : 	for(it=m_mapTMember.begin(); it!=m_mapTMember.end(); it++)

  00003	8b 71 74	 mov	 esi, DWORD PTR [ecx+116]
  00006	8b 06		 mov	 eax, DWORD PTR [esi]
  00008	3b c6		 cmp	 eax, esi
  0000a	89 44 24 08	 mov	 DWORD PTR _it$[esp+12], eax
  0000e	74 1d		 je	 SHORT $L134692
  00010	8a 5c 24 10	 mov	 bl, BYTE PTR _bDuty$[esp+8]
$L149050:

; 147  : 	{
; 148  : 		if((*it).second->m_bDuty == bDuty)

  00014	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00017	38 59 12	 cmp	 BYTE PTR [ecx+18], bl
  0001a	74 19		 je	 SHORT $L149112
  0001c	8d 4c 24 08	 lea	 ecx, DWORD PTR _it$[esp+12]
  00020	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc
  00025	8b 44 24 08	 mov	 eax, DWORD PTR _it$[esp+12]
  00029	3b c6		 cmp	 eax, esi
  0002b	75 e7		 jne	 SHORT $L149050
$L134692:
  0002d	5e		 pop	 esi

; 150  : 	}
; 151  : 	return NULL;

  0002e	33 c0		 xor	 eax, eax
  00030	5b		 pop	 ebx

; 152  : }

  00031	59		 pop	 ecx
  00032	c2 04 00	 ret	 4
$L149112:

; 149  : 			return (*it).second;

  00035	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00038	5e		 pop	 esi
  00039	5b		 pop	 ebx

; 152  : }

  0003a	59		 pop	 ecx
  0003b	c2 04 00	 ret	 4
?FindDesignate@CTGuild@@QAEPAUtagTGUILDMEMBER@@E@Z ENDP	; CTGuild::FindDesignate
_TEXT	ENDS
PUBLIC	?FindChief@CTGuild@@QAEPAUtagTGUILDMEMBER@@XZ	; CTGuild::FindChief
; Function compile flags: /Ogty
;	COMDAT ?FindChief@CTGuild@@QAEPAUtagTGUILDMEMBER@@XZ
_TEXT	SEGMENT
_it$ = -4						; size = 4
?FindChief@CTGuild@@QAEPAUtagTGUILDMEMBER@@XZ PROC NEAR	; CTGuild::FindChief, COMDAT
; _this$ = ecx

; 155  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 156  : 	MAPTGUILDMEMBER::iterator it = m_mapTMember.find(m_dwChief);

  00004	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  00007	50		 push	 eax
  00008	8d 4c 24 08	 lea	 ecx, DWORD PTR _it$[esp+12]
  0000c	51		 push	 ecx
  0000d	8d 4e 70	 lea	 ecx, DWORD PTR [esi+112]
  00010	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::find

; 157  : 
; 158  : 	if( it != m_mapTMember.end() )

  00015	8b 4e 74	 mov	 ecx, DWORD PTR [esi+116]
  00018	8b 44 24 04	 mov	 eax, DWORD PTR _it$[esp+8]
  0001c	3b c1		 cmp	 eax, ecx
  0001e	5e		 pop	 esi
  0001f	74 05		 je	 SHORT $L134700

; 159  : 		return (*it).second;

  00021	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 162  : }

  00024	59		 pop	 ecx
  00025	c3		 ret	 0
$L134700:

; 160  : 
; 161  : 	return NULL;

  00026	33 c0		 xor	 eax, eax

; 162  : }

  00028	59		 pop	 ecx
  00029	c3		 ret	 0
?FindChief@CTGuild@@QAEPAUtagTGUILDMEMBER@@XZ ENDP	; CTGuild::FindChief
_TEXT	ENDS
PUBLIC	?FindDuty@CTGuild@@QAEEK@Z			; CTGuild::FindDuty
; Function compile flags: /Ogty
;	COMDAT ?FindDuty@CTGuild@@QAEEK@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_dwID$ = 8						; size = 4
?FindDuty@CTGuild@@QAEEK@Z PROC NEAR			; CTGuild::FindDuty, COMDAT
; _this$ = ecx

; 165  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 166  : 	MAPTGUILDMEMBER::iterator it = m_mapTMember.find(dwID);

  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _dwID$[esp+4]
  00008	50		 push	 eax
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _it$[esp+12]
  0000d	51		 push	 ecx
  0000e	8d 4e 70	 lea	 ecx, DWORD PTR [esi+112]
  00011	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::find

; 167  : 	if(it!=m_mapTMember.end())

  00016	8b 4e 74	 mov	 ecx, DWORD PTR [esi+116]
  00019	8b 44 24 04	 mov	 eax, DWORD PTR _it$[esp+8]
  0001d	3b c1		 cmp	 eax, ecx
  0001f	5e		 pop	 esi
  00020	74 0a		 je	 SHORT $L134708

; 168  : 		return (*it).second->m_bDuty;

  00022	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00025	8a 42 12	 mov	 al, BYTE PTR [edx+18]

; 171  : }

  00028	59		 pop	 ecx
  00029	c2 04 00	 ret	 4
$L134708:

; 169  : 
; 170  : 	return 0;

  0002c	32 c0		 xor	 al, al

; 171  : }

  0002e	59		 pop	 ecx
  0002f	c2 04 00	 ret	 4
?FindDuty@CTGuild@@QAEEK@Z ENDP				; CTGuild::FindDuty
_TEXT	ENDS
PUBLIC	?FindPeer@CTGuild@@QAEEK@Z			; CTGuild::FindPeer
; Function compile flags: /Ogty
;	COMDAT ?FindPeer@CTGuild@@QAEEK@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_dwID$ = 8						; size = 4
?FindPeer@CTGuild@@QAEEK@Z PROC NEAR			; CTGuild::FindPeer, COMDAT
; _this$ = ecx

; 174  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 175  : 	MAPTGUILDMEMBER::iterator it = m_mapTMember.find(dwID);

  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _dwID$[esp+4]
  00008	50		 push	 eax
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _it$[esp+12]
  0000d	51		 push	 ecx
  0000e	8d 4e 70	 lea	 ecx, DWORD PTR [esi+112]
  00011	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::find

; 176  : 
; 177  : 	if( it != m_mapTMember.end() )

  00016	8b 4e 74	 mov	 ecx, DWORD PTR [esi+116]
  00019	8b 44 24 04	 mov	 eax, DWORD PTR _it$[esp+8]
  0001d	3b c1		 cmp	 eax, ecx
  0001f	5e		 pop	 esi
  00020	74 0a		 je	 SHORT $L134716

; 178  : 		return (*it).second->m_bPeer;

  00022	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00025	8a 42 13	 mov	 al, BYTE PTR [edx+19]

; 181  : }

  00028	59		 pop	 ecx
  00029	c2 04 00	 ret	 4
$L134716:

; 179  : 
; 180  : 	return 0;

  0002c	32 c0		 xor	 al, al

; 181  : }

  0002e	59		 pop	 ecx
  0002f	c2 04 00	 ret	 4
?FindPeer@CTGuild@@QAEEK@Z ENDP				; CTGuild::FindPeer
_TEXT	ENDS
PUBLIC	?SetMemberConnection@CTGuild@@QAEXKPAUtagTCHARACTER@@_J@Z ; CTGuild::SetMemberConnection
; Function compile flags: /Ogty
;	COMDAT ?SetMemberConnection@CTGuild@@QAEXKPAUtagTCHARACTER@@_J@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_dwCharID$ = 8						; size = 4
_pChar$ = 12						; size = 4
_dlTime$ = 16						; size = 8
?SetMemberConnection@CTGuild@@QAEXKPAUtagTCHARACTER@@_J@Z PROC NEAR ; CTGuild::SetMemberConnection, COMDAT
; _this$ = ecx

; 184  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 185  : 	MAPTGUILDMEMBER::iterator it = m_mapTMember.find(dwCharID);

  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _dwCharID$[esp+4]
  00008	50		 push	 eax
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _it$[esp+12]
  0000d	51		 push	 ecx
  0000e	8d 4e 70	 lea	 ecx, DWORD PTR [esi+112]
  00011	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::find

; 186  : 	if( it != m_mapTMember.end() )

  00016	8b 4e 74	 mov	 ecx, DWORD PTR [esi+116]
  00019	8b 44 24 04	 mov	 eax, DWORD PTR _it$[esp+8]
  0001d	3b c1		 cmp	 eax, ecx
  0001f	5e		 pop	 esi
  00020	74 1b		 je	 SHORT $L134726

; 187  : 	{
; 188  : 		(*it).second->m_dlConnectedDate = dlTime;

  00022	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00025	8b 4c 24 10	 mov	 ecx, DWORD PTR _dlTime$[esp]
  00029	89 4a 60	 mov	 DWORD PTR [edx+96], ecx
  0002c	8b 4c 24 14	 mov	 ecx, DWORD PTR _dlTime$[esp+4]
  00030	89 4a 64	 mov	 DWORD PTR [edx+100], ecx

; 189  : 		(*it).second->m_pChar = pChar;

  00033	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00036	8b 44 24 0c	 mov	 eax, DWORD PTR _pChar$[esp]
  0003a	89 42 04	 mov	 DWORD PTR [edx+4], eax
$L134726:

; 190  : 	}
; 191  : }

  0003d	59		 pop	 ecx
  0003e	c2 10 00	 ret	 16			; 00000010H
?SetMemberConnection@CTGuild@@QAEXKPAUtagTCHARACTER@@_J@Z ENDP ; CTGuild::SetMemberConnection
_TEXT	ENDS
PUBLIC	?SetMemberLevel@CTGuild@@QAEXKE@Z		; CTGuild::SetMemberLevel
; Function compile flags: /Ogty
;	COMDAT ?SetMemberLevel@CTGuild@@QAEXKE@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_dwCharID$ = 8						; size = 4
_bLevel$ = 12						; size = 1
?SetMemberLevel@CTGuild@@QAEXKE@Z PROC NEAR		; CTGuild::SetMemberLevel, COMDAT
; _this$ = ecx

; 194  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 195  : 	MAPTGUILDMEMBER::iterator it = m_mapTMember.find(dwCharID);

  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _dwCharID$[esp+4]
  00008	50		 push	 eax
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _it$[esp+12]
  0000d	51		 push	 ecx
  0000e	8d 4e 70	 lea	 ecx, DWORD PTR [esi+112]
  00011	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::find

; 196  : 
; 197  : 	if( it != m_mapTMember.end() )

  00016	8b 4e 74	 mov	 ecx, DWORD PTR [esi+116]
  00019	8b 44 24 04	 mov	 eax, DWORD PTR _it$[esp+8]
  0001d	3b c1		 cmp	 eax, ecx
  0001f	5e		 pop	 esi
  00020	74 0a		 je	 SHORT $L134735

; 198  : 		(*it).second->m_bLevel = bLevel;

  00022	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00025	8a 44 24 0c	 mov	 al, BYTE PTR _bLevel$[esp]
  00029	88 42 10	 mov	 BYTE PTR [edx+16], al
$L134735:

; 199  : }

  0002c	59		 pop	 ecx
  0002d	c2 08 00	 ret	 8
?SetMemberLevel@CTGuild@@QAEXKE@Z ENDP			; CTGuild::SetMemberLevel
_TEXT	ENDS
PUBLIC	?CheckPeerage@CTGuild@@QAEEEE@Z			; CTGuild::CheckPeerage
; Function compile flags: /Ogty
;	COMDAT ?CheckPeerage@CTGuild@@QAEEEE@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_bDuty$ = 8						; size = 1
_bCnt$ = 12						; size = 1
_bPeer$ = 12						; size = 1
?CheckPeerage@CTGuild@@QAEEEE@Z PROC NEAR		; CTGuild::CheckPeerage, COMDAT
; _this$ = ecx

; 202  : {

  00000	51		 push	 ecx
  00001	53		 push	 ebx

; 203  : 	if(!bPeer)

  00002	8a 5c 24 10	 mov	 bl, BYTE PTR _bPeer$[esp+4]
  00006	84 db		 test	 bl, bl
  00008	57		 push	 edi
  00009	8b f9		 mov	 edi, ecx

; 204  : 		return TRUE;

  0000b	0f 84 c6 00 00
	00		 je	 $L134768

; 205  : 
; 206  : 	if(bPeer > MAX_GUILD_PEER_COUNT)

  00011	80 fb 05	 cmp	 bl, 5

; 207  : 		return FALSE;

  00014	0f 87 b5 00 00
	00		 ja	 $L149447
  0001a	56		 push	 esi

; 208  : 
; 209  : 	BYTE bCnt=0;
; 210  : 	MAPTGUILDMEMBER::iterator it;
; 211  : 	for(it=m_mapTMember.begin(); it!=m_mapTMember.end(); it++)

  0001b	8b 77 74	 mov	 esi, DWORD PTR [edi+116]
  0001e	8b 06		 mov	 eax, DWORD PTR [esi]
  00020	3b c6		 cmp	 eax, esi
  00022	c6 44 24 18 00	 mov	 BYTE PTR _bCnt$[esp+12], 0
  00027	89 44 24 0c	 mov	 DWORD PTR _it$[esp+16], eax
  0002b	74 20		 je	 SHORT $L134751
  0002d	8d 49 00	 npad	 3
$L149446:

; 212  : 	{
; 213  : 		if((*it).second->m_bPeer == bPeer)

  00030	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00033	38 58 13	 cmp	 BYTE PTR [eax+19], bl
  00036	75 04		 jne	 SHORT $L134750

; 214  : 			bCnt++;

  00038	fe 44 24 18	 inc	 BYTE PTR _bCnt$[esp+12]
$L134750:
  0003c	8d 4c 24 0c	 lea	 ecx, DWORD PTR _it$[esp+16]
  00040	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc
  00045	8b 44 24 0c	 mov	 eax, DWORD PTR _it$[esp+16]
  00049	3b c6		 cmp	 eax, esi
  0004b	75 e3		 jne	 SHORT $L149446
$L134751:

; 215  : 	}
; 216  : 
; 217  : 	if(bCnt >= m_pTLEVEL->m_bPeer[bPeer-1])

  0004d	8b 87 c8 00 00
	00		 mov	 eax, DWORD PTR [edi+200]
  00053	8a 54 24 18	 mov	 dl, BYTE PTR _bCnt$[esp+12]
  00057	0f b6 cb	 movzx	 ecx, bl
  0005a	3a 54 01 0f	 cmp	 dl, BYTE PTR [ecx+eax+15]
  0005e	5e		 pop	 esi

; 218  : 		return FALSE;

  0005f	73 6e		 jae	 SHORT $L149447

; 219  : 
; 220  : 	switch(m_pTLEVEL->m_bLevel)

  00061	0f b6 00	 movzx	 eax, BYTE PTR [eax]
  00064	83 c0 fd	 add	 eax, -3			; fffffffdH
  00067	83 f8 07	 cmp	 eax, 7
  0006a	77 6b		 ja	 SHORT $L134768
  0006c	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $L149448[eax*4]
$L134759:

; 221  : 	{
; 222  : 	case 1:
; 223  : 	case 2:
; 224  : 		break;
; 225  : 	case 3:
; 226  : 	case 4:
; 227  : 		if(bDuty != GUILD_DUTY_CHIEF &&
; 228  : 			bPeer == GUILD_PEER_BARON)

  00073	80 7c 24 10 02	 cmp	 BYTE PTR _bDuty$[esp+8], 2
  00078	74 5d		 je	 SHORT $L134768
  0007a	80 fb 01	 cmp	 bl, 1
  0007d	75 58		 jne	 SHORT $L134768
  0007f	5f		 pop	 edi

; 229  : 			return FALSE;

  00080	32 c0		 xor	 al, al
  00082	5b		 pop	 ebx

; 256  : }

  00083	59		 pop	 ecx
  00084	c2 08 00	 ret	 8
$L134761:

; 230  : 		break;
; 231  : 	case 5:
; 232  : 	case 6:
; 233  : 		if(bDuty != GUILD_DUTY_CHIEF &&
; 234  : 			bPeer == GUILD_PEER_VISCOUNT)

  00087	80 7c 24 10 02	 cmp	 BYTE PTR _bDuty$[esp+8], 2
  0008c	74 49		 je	 SHORT $L134768
  0008e	80 fb 02	 cmp	 bl, 2
  00091	75 44		 jne	 SHORT $L134768
  00093	5f		 pop	 edi

; 235  : 			return FALSE;

  00094	32 c0		 xor	 al, al
  00096	5b		 pop	 ebx

; 256  : }

  00097	59		 pop	 ecx
  00098	c2 08 00	 ret	 8
$L134763:

; 236  : 		break;
; 237  : 	case 7:
; 238  : 	case 8:
; 239  : 		if(bDuty != GUILD_DUTY_CHIEF &&
; 240  : 			bPeer == GUILD_PEER_COUNT)

  0009b	80 7c 24 10 02	 cmp	 BYTE PTR _bDuty$[esp+8], 2
  000a0	74 35		 je	 SHORT $L134768
  000a2	80 fb 03	 cmp	 bl, 3
  000a5	75 30		 jne	 SHORT $L134768
  000a7	5f		 pop	 edi

; 241  : 			return FALSE;

  000a8	32 c0		 xor	 al, al
  000aa	5b		 pop	 ebx

; 256  : }

  000ab	59		 pop	 ecx
  000ac	c2 08 00	 ret	 8
$L134765:

; 242  : 		break;
; 243  : 	case 9:
; 244  : 		if(bDuty != GUILD_DUTY_CHIEF &&
; 245  : 			bPeer == GUILD_PEER_MARQUIS)

  000af	80 7c 24 10 02	 cmp	 BYTE PTR _bDuty$[esp+8], 2
  000b4	74 21		 je	 SHORT $L134768
  000b6	80 fb 04	 cmp	 bl, 4
  000b9	75 1c		 jne	 SHORT $L134768
  000bb	5f		 pop	 edi

; 246  : 			return FALSE;

  000bc	32 c0		 xor	 al, al
  000be	5b		 pop	 ebx

; 256  : }

  000bf	59		 pop	 ecx
  000c0	c2 08 00	 ret	 8
$L134767:

; 247  : 		break;
; 248  : 	case 10:
; 249  : 		if(bDuty != GUILD_DUTY_CHIEF &&
; 250  : 			bPeer == GUILD_PEER_DUKE)

  000c3	80 7c 24 10 02	 cmp	 BYTE PTR _bDuty$[esp+8], 2
  000c8	74 0d		 je	 SHORT $L134768
  000ca	80 fb 05	 cmp	 bl, 5
  000cd	75 08		 jne	 SHORT $L134768
$L149447:
  000cf	5f		 pop	 edi

; 251  : 			return FALSE;

  000d0	32 c0		 xor	 al, al
  000d2	5b		 pop	 ebx

; 256  : }

  000d3	59		 pop	 ecx
  000d4	c2 08 00	 ret	 8
$L134768:
  000d7	5f		 pop	 edi

; 252  : 		break;
; 253  : 	}
; 254  : 
; 255  : 	return TRUE;

  000d8	b0 01		 mov	 al, 1
  000da	5b		 pop	 ebx

; 256  : }

  000db	59		 pop	 ecx
  000dc	c2 08 00	 ret	 8
  000df	90		 npad	 1
$L149448:
  000e0	00 00 00 00	 DD	 $L134759
  000e4	00 00 00 00	 DD	 $L134759
  000e8	00 00 00 00	 DD	 $L134761
  000ec	00 00 00 00	 DD	 $L134761
  000f0	00 00 00 00	 DD	 $L134763
  000f4	00 00 00 00	 DD	 $L134763
  000f8	00 00 00 00	 DD	 $L134765
  000fc	00 00 00 00	 DD	 $L134767
?CheckPeerage@CTGuild@@QAEEEE@Z ENDP			; CTGuild::CheckPeerage
_TEXT	ENDS
PUBLIC	?Contribution@CTGuild@@QAEEKKKKKK@Z		; CTGuild::Contribution
; Function compile flags: /Ogty
;	COMDAT ?Contribution@CTGuild@@QAEEKKKKKK@Z
_TEXT	SEGMENT
_it$149494 = -4						; size = 4
$T149514 = 8						; size = 4
_pMember$ = 8						; size = 4
_dwCharID$ = 8						; size = 4
_dwExp$ = 12						; size = 4
_dwGold$ = 16						; size = 4
_dwSilver$ = 20						; size = 4
_dwCooper$ = 24						; size = 4
_dwPvPoint$ = 28					; size = 4
?Contribution@CTGuild@@QAEEKKKKKK@Z PROC NEAR		; CTGuild::Contribution, COMDAT
; _this$ = ecx

; 372  : {

  00000	51		 push	 ecx

; 373  : 	LPTGUILDMEMBER pMember = FindMember(dwCharID);

  00001	8b 44 24 08	 mov	 eax, DWORD PTR _dwCharID$[esp]
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	8d 4c 24 0c	 lea	 ecx, DWORD PTR $T149514[esp+4]
  0000c	51		 push	 ecx
  0000d	8d 54 24 08	 lea	 edx, DWORD PTR _it$149494[esp+12]
  00011	52		 push	 edx
  00012	8d 4f 70	 lea	 ecx, DWORD PTR [edi+112]
  00015	89 44 24 14	 mov	 DWORD PTR $T149514[esp+12], eax
  00019	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::find
  0001e	8b 44 24 04	 mov	 eax, DWORD PTR _it$149494[esp+8]
  00022	3b 47 74	 cmp	 eax, DWORD PTR [edi+116]
  00025	74 0b		 je	 SHORT $L149525
  00027	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 374  : 	if(!pMember)

  0002a	85 c0		 test	 eax, eax
  0002c	89 44 24 0c	 mov	 DWORD PTR _pMember$[esp+4], eax
  00030	75 07		 jne	 SHORT $L134844
$L149525:

; 375  : 		return FALSE;

  00032	32 c0		 xor	 al, al
  00034	5f		 pop	 edi

; 394  : }

  00035	59		 pop	 ecx
  00036	c2 18 00	 ret	 24			; 00000018H
$L134844:
  00039	53		 push	 ebx

; 376  : 
; 377  : 	INT64 llMoney = CalcMoney(dwGold, dwSilver, dwCooper);

  0003a	8b 5c 24 1c	 mov	 ebx, DWORD PTR _dwSilver$[esp+8]
  0003e	8b c3		 mov	 eax, ebx
  00040	69 c0 e8 03 00
	00		 imul	 eax, 1000		; 000003e8H
  00046	55		 push	 ebp
  00047	8b 6c 24 24	 mov	 ebp, DWORD PTR _dwCooper$[esp+12]
  0004b	03 c5		 add	 eax, ebp
  0004d	56		 push	 esi
  0004e	8b f0		 mov	 esi, eax
  00050	8b 44 24 20	 mov	 eax, DWORD PTR _dwGold$[esp+16]
  00054	ba 40 42 0f 00	 mov	 edx, 1000000		; 000f4240H
  00059	f7 e2		 mul	 edx
  0005b	33 c9		 xor	 ecx, ecx
  0005d	03 f0		 add	 esi, eax
  0005f	13 ca		 adc	 ecx, edx

; 378  : 	if(llMoney)

  00061	8b c6		 mov	 eax, esi
  00063	0b c1		 or	 eax, ecx
  00065	74 38		 je	 SHORT $L134854

; 379  : 	{
; 380  : 		if(llMoney > MAX_GUILD_CONTRIBUTION || llMoney < MIN_GUILD_CONTRIBUTION )

  00067	85 c9		 test	 ecx, ecx
  00069	7f 2a		 jg	 SHORT $L134853
  0006b	7c 08		 jl	 SHORT $L149526
  0006d	81 fe 40 42 0f
	00		 cmp	 esi, 1000000		; 000f4240H
  00073	77 20		 ja	 SHORT $L134853
$L149526:
  00075	85 c9		 test	 ecx, ecx
  00077	7c 1c		 jl	 SHORT $L134853
  00079	7f 08		 jg	 SHORT $L149527
  0007b	81 fe e8 03 00
	00		 cmp	 esi, 1000		; 000003e8H
  00081	72 12		 jb	 SHORT $L134853
$L149527:

; 381  : 			return FALSE;
; 382  : 
; 383  : 		if(!GainMoney(dwGold, dwSilver, dwCooper))

  00083	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwGold$[esp+16]
  00087	55		 push	 ebp
  00088	53		 push	 ebx
  00089	51		 push	 ecx
  0008a	8b cf		 mov	 ecx, edi
  0008c	e8 00 00 00 00	 call	 ?GainMoney@CTGuild@@QAEEKKK@Z ; CTGuild::GainMoney
  00091	84 c0		 test	 al, al
  00093	75 0a		 jne	 SHORT $L134854
$L134853:
  00095	5e		 pop	 esi
  00096	5d		 pop	 ebp
  00097	5b		 pop	 ebx

; 384  : 			return FALSE;

  00098	32 c0		 xor	 al, al
  0009a	5f		 pop	 edi

; 394  : }

  0009b	59		 pop	 ecx
  0009c	c2 18 00	 ret	 24			; 00000018H
$L134854:

; 385  : 	}
; 386  : 
; 387  : 	if(!GainEXP(pMember, dwExp))

  0009f	8b 54 24 1c	 mov	 edx, DWORD PTR _dwExp$[esp+16]
  000a3	8b 44 24 18	 mov	 eax, DWORD PTR _pMember$[esp+16]
  000a7	52		 push	 edx
  000a8	50		 push	 eax
  000a9	8b cf		 mov	 ecx, edi
  000ab	e8 00 00 00 00	 call	 ?GainEXP@CTGuild@@QAEEPAUtagTGUILDMEMBER@@K@Z ; CTGuild::GainEXP
  000b0	84 c0		 test	 al, al

; 388  : 		return FALSE;

  000b2	74 e1		 je	 SHORT $L134853

; 389  : 
; 390  : 	if(dwPvPoint)

  000b4	8b 44 24 2c	 mov	 eax, DWORD PTR _dwPvPoint$[esp+16]
  000b8	85 c0		 test	 eax, eax
  000ba	74 20		 je	 SHORT $L149520

; 391  : 		GainPvPoint(dwPvPoint, PVPE_GUILD, PVP_USEABLE);

  000bc	8b 4f 4c	 mov	 ecx, DWORD PTR [edi+76]
  000bf	8b 57 50	 mov	 edx, DWORD PTR [edi+80]
  000c2	03 c8		 add	 ecx, eax
  000c4	8b c1		 mov	 eax, ecx
  000c6	89 4f 4c	 mov	 DWORD PTR [edi+76], ecx
  000c9	8b 4f 54	 mov	 ecx, DWORD PTR [edi+84]
  000cc	51		 push	 ecx
  000cd	50		 push	 eax
  000ce	8b 07		 mov	 eax, DWORD PTR [edi]
  000d0	52		 push	 edx
  000d1	50		 push	 eax
  000d2	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTWorldSvrModule@@A
  000d7	e8 00 00 00 00	 call	 ?SendDM_GUILDPVPOINT_REQ@CTWorldSvrModule@@QAEXKKKK@Z ; CTWorldSvrModule::SendDM_GUILDPVPOINT_REQ
$L149520:
  000dc	5e		 pop	 esi
  000dd	5d		 pop	 ebp
  000de	5b		 pop	 ebx

; 392  : 
; 393  : 	return TRUE;

  000df	b0 01		 mov	 al, 1
  000e1	5f		 pop	 edi

; 394  : }

  000e2	59		 pop	 ecx
  000e3	c2 18 00	 ret	 24			; 00000018H
?Contribution@CTGuild@@QAEEKKKKKK@Z ENDP		; CTGuild::Contribution
_TEXT	ENDS
PUBLIC	?FindCabinetItem@CTGuild@@QAEPAUtagTITEM@@K@Z	; CTGuild::FindCabinetItem
; Function compile flags: /Ogty
;	COMDAT ?FindCabinetItem@CTGuild@@QAEPAUtagTITEM@@K@Z
_TEXT	SEGMENT
_find$ = -4						; size = 4
_dwItemID$ = 8						; size = 4
?FindCabinetItem@CTGuild@@QAEPAUtagTITEM@@K@Z PROC NEAR	; CTGuild::FindCabinetItem, COMDAT
; _this$ = ecx

; 510  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f1		 mov	 esi, ecx

; 511  : 	LPTITEM pItem = NULL;
; 512  : 
; 513  : 	MAPTITEM::iterator find = m_mapTCabinet.find(dwItemID);

  00005	8d 44 24 10	 lea	 eax, DWORD PTR _dwItemID$[esp+8]
  00009	50		 push	 eax
  0000a	8d 4c 24 0c	 lea	 ecx, DWORD PTR _find$[esp+16]
  0000e	51		 push	 ecx
  0000f	8d 4e 64	 lea	 ecx, DWORD PTR [esi+100]
  00012	33 ff		 xor	 edi, edi
  00014	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::find

; 514  : 	if(find!=m_mapTCabinet.end())

  00019	8b 44 24 08	 mov	 eax, DWORD PTR _find$[esp+12]
  0001d	3b 46 68	 cmp	 eax, DWORD PTR [esi+104]
  00020	74 09		 je	 SHORT $L149574

; 515  : 		pItem = (*find).second;
; 516  : 
; 517  : 	return pItem;

  00022	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 518  : }

  00027	59		 pop	 ecx
  00028	c2 04 00	 ret	 4
$L149574:

; 515  : 		pItem = (*find).second;
; 516  : 
; 517  : 	return pItem;

  0002b	8b c7		 mov	 eax, edi
  0002d	5f		 pop	 edi
  0002e	5e		 pop	 esi

; 518  : }

  0002f	59		 pop	 ecx
  00030	c2 04 00	 ret	 4
?FindCabinetItem@CTGuild@@QAEPAUtagTITEM@@K@Z ENDP	; CTGuild::FindCabinetItem
_TEXT	ENDS
PUBLIC	?FindTactics@CTGuild@@QAEPAUtagTTACTICSMEMBER@@K@Z ; CTGuild::FindTactics
; Function compile flags: /Ogty
;	COMDAT ?FindTactics@CTGuild@@QAEPAUtagTTACTICSMEMBER@@K@Z
_TEXT	SEGMENT
_find$ = -4						; size = 4
_dwID$ = 8						; size = 4
?FindTactics@CTGuild@@QAEPAUtagTTACTICSMEMBER@@K@Z PROC NEAR ; CTGuild::FindTactics, COMDAT
; _this$ = ecx

; 538  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 539  : 	MAPTTACTICSMEMBER::iterator find = m_mapTTactics.find(dwID);

  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _dwID$[esp+4]
  00008	50		 push	 eax
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _find$[esp+12]
  0000d	51		 push	 ecx
  0000e	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
  00011	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::find

; 540  : 	if(find!=m_mapTTactics.end())

  00016	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  0001c	8b 44 24 04	 mov	 eax, DWORD PTR _find$[esp+8]
  00020	3b c1		 cmp	 eax, ecx
  00022	5e		 pop	 esi
  00023	74 07		 je	 SHORT $L135025

; 541  : 		return (*find).second;

  00025	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 544  : }

  00028	59		 pop	 ecx
  00029	c2 04 00	 ret	 4
$L135025:

; 542  : 
; 543  : 	return NULL;

  0002c	33 c0		 xor	 eax, eax

; 544  : }

  0002e	59		 pop	 ecx
  0002f	c2 04 00	 ret	 4
?FindTactics@CTGuild@@QAEPAUtagTTACTICSMEMBER@@K@Z ENDP	; CTGuild::FindTactics
_TEXT	ENDS
PUBLIC	?FindTactics@CTGuild@@QAEPAUtagTTACTICSMEMBER@@V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTGuild::FindTactics
; Function compile flags: /Ogty
;	COMDAT ?FindTactics@CTGuild@@QAEPAUtagTTACTICSMEMBER@@V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_strName$ = 8						; size = 4
?FindTactics@CTGuild@@QAEPAUtagTTACTICSMEMBER@@V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTGuild::FindTactics, COMDAT
; _this$ = ecx

; 546  : {

  00000	51		 push	 ecx
  00001	53		 push	 ebx
  00002	8b d9		 mov	 ebx, ecx

; 547  : 	MAPTTACTICSMEMBER::iterator it;
; 548  : 	for(it=m_mapTTactics.begin(); it!=m_mapTTactics.end(); it++)

  00004	8b 83 80 00 00
	00		 mov	 eax, DWORD PTR [ebx+128]
  0000a	56		 push	 esi
  0000b	8b 30		 mov	 esi, DWORD PTR [eax]
  0000d	3b f0		 cmp	 esi, eax
  0000f	57		 push	 edi
  00010	8b 7c 24 14	 mov	 edi, DWORD PTR _strName$[esp+12]
  00014	89 74 24 0c	 mov	 DWORD PTR _it$[esp+16], esi
  00018	74 2f		 je	 SHORT $L135036
  0001a	8d 9b 00 00 00
	00		 npad	 6
$L149678:

; 549  : 		if((*it).second->m_strName == strName)

  00020	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00023	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00026	57		 push	 edi
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 __mbscmp
  0002d	83 c4 08	 add	 esp, 8
  00030	85 c0		 test	 eax, eax
  00032	74 38		 je	 SHORT $L149819
  00034	8d 4c 24 0c	 lea	 ecx, DWORD PTR _it$[esp+16]
  00038	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Inc
  0003d	8b 74 24 0c	 mov	 esi, DWORD PTR _it$[esp+16]
  00041	3b b3 80 00 00
	00		 cmp	 esi, DWORD PTR [ebx+128]
  00047	75 d7		 jne	 SHORT $L149678
$L135036:

; 551  : 
; 552  : 	return NULL;

  00049	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0004c	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0004f	83 ca ff	 or	 edx, -1
  00052	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00056	4a		 dec	 edx
  00057	85 d2		 test	 edx, edx
  00059	7f 08		 jg	 SHORT $L149814
  0005b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0005d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0005f	50		 push	 eax
  00060	ff 52 04	 call	 DWORD PTR [edx+4]
$L149814:
  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	33 c0		 xor	 eax, eax
  00067	5b		 pop	 ebx

; 553  : }

  00068	59		 pop	 ecx
  00069	c2 04 00	 ret	 4
$L149819:

; 550  : 			return (*it).second;

  0006c	8b 76 10	 mov	 esi, DWORD PTR [esi+16]
  0006f	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  00072	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00075	83 ca ff	 or	 edx, -1
  00078	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0007c	4a		 dec	 edx
  0007d	85 d2		 test	 edx, edx
  0007f	7f 08		 jg	 SHORT $L149787
  00081	8b 08		 mov	 ecx, DWORD PTR [eax]
  00083	8b 11		 mov	 edx, DWORD PTR [ecx]
  00085	50		 push	 eax
  00086	ff 52 04	 call	 DWORD PTR [edx+4]
$L149787:
  00089	5f		 pop	 edi
  0008a	8b c6		 mov	 eax, esi
  0008c	5e		 pop	 esi
  0008d	5b		 pop	 ebx

; 553  : }

  0008e	59		 pop	 ecx
  0008f	c2 04 00	 ret	 4
?FindTactics@CTGuild@@QAEPAUtagTTACTICSMEMBER@@V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTGuild::FindTactics
_TEXT	ENDS
PUBLIC	?SetTacticsConnection@CTGuild@@QAEXKPAUtagTCHARACTER@@@Z ; CTGuild::SetTacticsConnection
; Function compile flags: /Ogty
;	COMDAT ?SetTacticsConnection@CTGuild@@QAEXKPAUtagTCHARACTER@@@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_dwCharID$ = 8						; size = 4
_pChar$ = 12						; size = 4
?SetTacticsConnection@CTGuild@@QAEXKPAUtagTCHARACTER@@@Z PROC NEAR ; CTGuild::SetTacticsConnection, COMDAT
; _this$ = ecx

; 555  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 556  : 	MAPTTACTICSMEMBER::iterator it = m_mapTTactics.find(dwCharID);

  00004	8d 44 24 0c	 lea	 eax, DWORD PTR _dwCharID$[esp+4]
  00008	50		 push	 eax
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR _it$[esp+12]
  0000d	51		 push	 ecx
  0000e	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
  00011	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::find

; 557  : 	if( it != m_mapTTactics.end() )

  00016	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  0001c	8b 44 24 04	 mov	 eax, DWORD PTR _it$[esp+8]
  00020	3b c1		 cmp	 eax, ecx
  00022	5e		 pop	 esi
  00023	74 09		 je	 SHORT $L135048

; 558  : 		(*it).second->m_pChar = pChar;

  00025	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00028	8b 44 24 0c	 mov	 eax, DWORD PTR _pChar$[esp]
  0002c	89 02		 mov	 DWORD PTR [edx], eax
$L135048:

; 559  : }

  0002e	59		 pop	 ecx
  0002f	c2 08 00	 ret	 8
?SetTacticsConnection@CTGuild@@QAEXKPAUtagTCHARACTER@@@Z ENDP ; CTGuild::SetTacticsConnection
_TEXT	ENDS
PUBLIC	?CanApplyWar@CTGuild@@QAEEG@Z			; CTGuild::CanApplyWar
; Function compile flags: /Ogty
;	COMDAT ?CanApplyWar@CTGuild@@QAEEG@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_wCastle$ = 8						; size = 2
?CanApplyWar@CTGuild@@QAEEG@Z PROC NEAR			; CTGuild::CanApplyWar, COMDAT
; _this$ = ecx

; 640  : {

  00000	51		 push	 ecx
  00001	53		 push	 ebx
  00002	55		 push	 ebp

; 641  : 	BYTE bCount = 0;
; 642  : 	MAPTGUILDMEMBER::iterator it;
; 643  : 	for(it=m_mapTMember.begin(); it!=m_mapTMember.end(); it++)

  00003	66 8b 6c 24 10	 mov	 bp, WORD PTR _wCastle$[esp+8]
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f9		 mov	 edi, ecx
  0000c	8b 77 74	 mov	 esi, DWORD PTR [edi+116]
  0000f	8b 06		 mov	 eax, DWORD PTR [esi]
  00011	32 db		 xor	 bl, bl
  00013	3b c6		 cmp	 eax, esi
  00015	89 44 24 10	 mov	 DWORD PTR _it$[esp+20], eax
  00019	74 21		 je	 SHORT $L135353
  0001b	eb 03 8d 49 00	 npad	 5
$L149924:

; 644  : 	{
; 645  : 		if((*it).second->m_wCastle == wCastle)

  00020	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00023	66 39 68 14	 cmp	 WORD PTR [eax+20], bp
  00027	75 02		 jne	 SHORT $L135352

; 646  : 			bCount++;

  00029	fe c3		 inc	 bl
$L135352:

; 641  : 	BYTE bCount = 0;
; 642  : 	MAPTGUILDMEMBER::iterator it;
; 643  : 	for(it=m_mapTMember.begin(); it!=m_mapTMember.end(); it++)

  0002b	8d 4c 24 10	 lea	 ecx, DWORD PTR _it$[esp+20]
  0002f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc
  00034	8b 44 24 10	 mov	 eax, DWORD PTR _it$[esp+20]
  00038	3b c6		 cmp	 eax, esi
  0003a	75 e4		 jne	 SHORT $L149924
$L135353:

; 647  : 	}
; 648  : 
; 649  : 	MAPTTACTICSMEMBER::iterator find;
; 650  : 	for(find=m_mapTTactics.begin(); find != m_mapTTactics.end(); find++)

  0003c	8b bf 80 00 00
	00		 mov	 edi, DWORD PTR [edi+128]
  00042	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00044	3b cf		 cmp	 ecx, edi
  00046	74 5f		 je	 SHORT $L135361
  00048	eb 06 8d 9b 00
	00 00 00	 npad	 8
$L150153:

; 651  : 	{
; 652  : 		if((*find).second->m_wCastle == wCastle)

  00050	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00053	66 39 6a 28	 cmp	 WORD PTR [edx+40], bp
  00057	75 02		 jne	 SHORT $L135360

; 653  : 			bCount++;

  00059	fe c3		 inc	 bl
$L135360:

; 647  : 	}
; 648  : 
; 649  : 	MAPTTACTICSMEMBER::iterator find;
; 650  : 	for(find=m_mapTTactics.begin(); find != m_mapTTactics.end(); find++)

  0005b	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  0005e	84 c0		 test	 al, al
  00060	75 41		 jne	 SHORT $L150163
  00062	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00065	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00068	84 d2		 test	 dl, dl
  0006a	75 18		 jne	 SHORT $L150235
  0006c	8b c8		 mov	 ecx, eax
  0006e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00070	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00073	84 d2		 test	 dl, dl
  00075	75 2c		 jne	 SHORT $L150163
$L150184:
  00077	8b c8		 mov	 ecx, eax
  00079	8b 01		 mov	 eax, DWORD PTR [ecx]
  0007b	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0007e	84 d2		 test	 dl, dl
  00080	74 f5		 je	 SHORT $L150184
  00082	eb 1f		 jmp	 SHORT $L150163
$L150235:
  00084	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00087	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0008a	84 d2		 test	 dl, dl
  0008c	75 13		 jne	 SHORT $L150166
  0008e	8b ff		 npad	 2
$L150165:
  00090	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00093	75 0c		 jne	 SHORT $L150166
  00095	8b c8		 mov	 ecx, eax
  00097	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0009a	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0009d	84 d2		 test	 dl, dl
  0009f	74 ef		 je	 SHORT $L150165
$L150166:
  000a1	8b c8		 mov	 ecx, eax
$L150163:
  000a3	3b cf		 cmp	 ecx, edi
  000a5	75 a9		 jne	 SHORT $L150153
$L135361:
  000a7	5f		 pop	 edi
  000a8	5e		 pop	 esi

; 654  : 	}
; 655  : 
; 656  : 	if(bCount >= 49)

  000a9	80 fb 31	 cmp	 bl, 49			; 00000031H
  000ac	5d		 pop	 ebp
  000ad	0f 92 c0	 setb	 al
  000b0	5b		 pop	 ebx

; 657  : 		return FALSE;
; 658  : 
; 659  : 	return TRUE;
; 660  : }

  000b1	59		 pop	 ecx
  000b2	c2 04 00	 ret	 4
?CanApplyWar@CTGuild@@QAEEG@Z ENDP			; CTGuild::CanApplyWar
_TEXT	ENDS
PUBLIC	?GetCastleApplicantCount@CTGuild@@QAEGG@Z	; CTGuild::GetCastleApplicantCount
; Function compile flags: /Ogty
;	COMDAT ?GetCastleApplicantCount@CTGuild@@QAEGG@Z
_TEXT	SEGMENT
_bCamp$ = -5						; size = 1
_it$ = -4						; size = 4
_wCastle$ = 8						; size = 2
?GetCastleApplicantCount@CTGuild@@QAEGG@Z PROC NEAR	; CTGuild::GetCastleApplicantCount, COMDAT
; _this$ = ecx

; 697  : {

  00000	83 ec 08	 sub	 esp, 8
  00003	53		 push	 ebx
  00004	55		 push	 ebp

; 698  : 	BYTE bCount = 0;
; 699  : 	BYTE bCamp = 0;
; 700  : 	MAPTGUILDMEMBER::iterator it;
; 701  : 	for(it=m_mapTMember.begin(); it!=m_mapTMember.end(); it++)

  00005	66 8b 6c 24 14	 mov	 bp, WORD PTR _wCastle$[esp+12]
  0000a	56		 push	 esi
  0000b	57		 push	 edi
  0000c	8b f9		 mov	 edi, ecx
  0000e	8b 77 74	 mov	 esi, DWORD PTR [edi+116]
  00011	8b 06		 mov	 eax, DWORD PTR [esi]
  00013	32 db		 xor	 bl, bl
  00015	3b c6		 cmp	 eax, esi
  00017	88 5c 24 13	 mov	 BYTE PTR _bCamp$[esp+24], bl
  0001b	89 44 24 14	 mov	 DWORD PTR _it$[esp+24], eax
  0001f	74 23		 je	 SHORT $L135419
$L150297:

; 702  : 	{
; 703  : 		if((*it).second->m_wCastle == wCastle)

  00021	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00024	66 39 68 14	 cmp	 WORD PTR [eax+20], bp
  00028	75 09		 jne	 SHORT $L135418

; 704  : 		{
; 705  : 			bCount++;
; 706  : 			bCamp = (*it).second->m_bCamp;

  0002a	8a 40 16	 mov	 al, BYTE PTR [eax+22]
  0002d	fe c3		 inc	 bl
  0002f	88 44 24 13	 mov	 BYTE PTR _bCamp$[esp+24], al
$L135418:
  00033	8d 4c 24 14	 lea	 ecx, DWORD PTR _it$[esp+24]
  00037	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc
  0003c	8b 44 24 14	 mov	 eax, DWORD PTR _it$[esp+24]
  00040	3b c6		 cmp	 eax, esi
  00042	75 dd		 jne	 SHORT $L150297
$L135419:

; 707  : 		}
; 708  : 	}
; 709  : 
; 710  : 	MAPTTACTICSMEMBER::iterator find;
; 711  : 	for(find=m_mapTTactics.begin(); find != m_mapTTactics.end(); find++)

  00044	8b bf 80 00 00
	00		 mov	 edi, DWORD PTR [edi+128]
  0004a	8b 0f		 mov	 ecx, DWORD PTR [edi]
  0004c	3b cf		 cmp	 ecx, edi
  0004e	74 5e		 je	 SHORT $L135427
$L150564:

; 712  : 	{
; 713  : 		if((*find).second->m_wCastle == wCastle)

  00050	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00053	66 39 68 28	 cmp	 WORD PTR [eax+40], bp
  00057	75 09		 jne	 SHORT $L135426

; 714  : 		{
; 715  : 			bCount++;
; 716  : 			bCamp = (*find).second->m_bCamp;

  00059	8a 50 2a	 mov	 dl, BYTE PTR [eax+42]
  0005c	fe c3		 inc	 bl
  0005e	88 54 24 13	 mov	 BYTE PTR _bCamp$[esp+24], dl
$L135426:
  00062	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  00065	84 c0		 test	 al, al
  00067	75 41		 jne	 SHORT $L150575
  00069	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0006c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006f	84 d2		 test	 dl, dl
  00071	75 1a		 jne	 SHORT $L150643
  00073	8b c8		 mov	 ecx, eax
  00075	8b 01		 mov	 eax, DWORD PTR [ecx]
  00077	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0007a	84 d2		 test	 dl, dl
  0007c	75 2c		 jne	 SHORT $L150575
  0007e	8b ff		 npad	 2

; 707  : 		}
; 708  : 	}
; 709  : 
; 710  : 	MAPTTACTICSMEMBER::iterator find;
; 711  : 	for(find=m_mapTTactics.begin(); find != m_mapTTactics.end(); find++)

$L150556:
  00080	8b c8		 mov	 ecx, eax
  00082	8b 01		 mov	 eax, DWORD PTR [ecx]
  00084	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00087	84 d2		 test	 dl, dl
  00089	74 f5		 je	 SHORT $L150556
  0008b	eb 1d		 jmp	 SHORT $L150575
$L150643:
  0008d	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00090	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00093	84 d2		 test	 dl, dl
  00095	75 11		 jne	 SHORT $L150578
$L150577:
  00097	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  0009a	75 0c		 jne	 SHORT $L150578
  0009c	8b c8		 mov	 ecx, eax
  0009e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  000a1	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  000a4	84 d2		 test	 dl, dl
  000a6	74 ef		 je	 SHORT $L150577
$L150578:
  000a8	8b c8		 mov	 ecx, eax
$L150575:
  000aa	3b cf		 cmp	 ecx, edi
  000ac	75 a2		 jne	 SHORT $L150564
$L135427:

; 717  : 		}
; 718  : 	}
; 719  : 
; 720  : 	return MAKEWORD(bCount, bCamp);

  000ae	33 c0		 xor	 eax, eax
  000b0	8a 64 24 13	 mov	 ah, BYTE PTR _bCamp$[esp+24]
  000b4	5f		 pop	 edi
  000b5	5e		 pop	 esi
  000b6	5d		 pop	 ebp
  000b7	8a c3		 mov	 al, bl
  000b9	5b		 pop	 ebx

; 721  : }

  000ba	83 c4 08	 add	 esp, 8
  000bd	c2 04 00	 ret	 4
?GetCastleApplicantCount@CTGuild@@QAEGG@Z ENDP		; CTGuild::GetCastleApplicantCount
_TEXT	ENDS
PUBLIC	?erase@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::erase
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?erase@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::erase, COMDAT
; _this$ = ecx

; 724  : 		copy(_ITER_BASE(_Where) + 1, _Mylast, _ITER_BASE(_Where));

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Where$[esp-4]
  00004	53		 push	 ebx
  00005	55		 push	 ebp
  00006	8b e9		 mov	 ebp, ecx
  00008	8b 5d 08	 mov	 ebx, DWORD PTR [ebp+8]
  0000b	83 c0 2c	 add	 eax, 44			; 0000002cH
  0000e	3b c3		 cmp	 eax, ebx
  00010	74 1c		 je	 SHORT $L150675
  00012	56		 push	 esi
  00013	8d 50 d4	 lea	 edx, DWORD PTR [eax-44]
  00016	57		 push	 edi
$L150673:
  00017	8b f0		 mov	 esi, eax
  00019	8b fa		 mov	 edi, edx
  0001b	83 c0 2c	 add	 eax, 44			; 0000002cH
  0001e	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  00023	83 c2 2c	 add	 edx, 44			; 0000002cH
  00026	3b c3		 cmp	 eax, ebx
  00028	f3 a5		 rep movsd
  0002a	75 eb		 jne	 SHORT $L150673
  0002c	5f		 pop	 edi
  0002d	5e		 pop	 esi
$L150675:

; 725  : 		_Destroy(_Mylast - 1, _Mylast);
; 726  : 		--_Mylast;

  0002e	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]

; 727  : 		return (_Where);

  00031	8b 4c 24 10	 mov	 ecx, DWORD PTR __Where$[esp+4]
  00035	83 c0 d4	 add	 eax, -44		; ffffffd4H
  00038	89 45 08	 mov	 DWORD PTR [ebp+8], eax
  0003b	8b 44 24 0c	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+4]
  0003f	5d		 pop	 ebp
  00040	89 08		 mov	 DWORD PTR [eax], ecx
  00042	5b		 pop	 ebx

; 728  : 		}

  00043	c2 08 00	 ret	 8
?erase@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::erase
_TEXT	ENDS
PUBLIC	??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
;	COMDAT ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ PROC NEAR	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 387  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 388  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L150694
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L150694:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 389  : 		}

  00029	c3		 ret	 0
??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	?clear@?$vector@KV?$allocator@K@std@@@std@@QAEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$vector@KV?$allocator@K@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@KV?$allocator@K@std@@@std@@QAEXXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::clear, COMDAT
; _this$ = ecx

; 743  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 744  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L150708
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L150708:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 745  : 		}

  00029	c3		 ret	 0
?clear@?$vector@KV?$allocator@K@std@@@std@@QAEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::clear
_TEXT	ENDS
PUBLIC	??0tagTGUILDPOINTREWARD@@QAE@ABU0@@Z		; tagTGUILDPOINTREWARD::tagTGUILDPOINTREWARD
; Function compile flags: /Ogty
;	COMDAT ??0tagTGUILDPOINTREWARD@@QAE@ABU0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0tagTGUILDPOINTREWARD@@QAE@ABU0@@Z PROC NEAR		; tagTGUILDPOINTREWARD::tagTGUILDPOINTREWARD, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR ___that$[esp+4]
  00006	8b 07		 mov	 eax, DWORD PTR [edi]
  00008	83 e8 10	 sub	 eax, 16			; 00000010H
  0000b	50		 push	 eax
  0000c	8b f1		 mov	 esi, ecx
  0000e	e8 00 00 00 00	 call	 ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
  00013	83 c0 10	 add	 eax, 16			; 00000010H
  00016	89 06		 mov	 DWORD PTR [esi], eax
  00018	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0001b	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0001e	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00021	83 c4 04	 add	 esp, 4
  00024	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00027	8b 57 0c	 mov	 edx, DWORD PTR [edi+12]
  0002a	5f		 pop	 edi
  0002b	89 56 0c	 mov	 DWORD PTR [esi+12], edx
  0002e	8b c6		 mov	 eax, esi
  00030	5e		 pop	 esi
  00031	c2 04 00	 ret	 4
??0tagTGUILDPOINTREWARD@@QAE@ABU0@@Z ENDP		; tagTGUILDPOINTREWARD::tagTGUILDPOINTREWARD
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Init
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Init
; Function compile flags: /Ogty
;	COMDAT ?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Init, COMDAT
; _this$ = ecx

; 901  : 		{	// create head/nil node and make tree empty

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 902  : 		_Myhead = _Buynode();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax

; 903  : 		_Isnil(_Myhead) = true;

  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1

; 904  : 		_Root() = _Myhead;

  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 905  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 906  : 		_Mysize = 0;

  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00027	5e		 pop	 esi

; 907  : 		}

  00028	c3		 ret	 0
?_Init@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Init
_TEXT	ENDS
PUBLIC	??$_Construct@UtagTGUILDPOINTREWARD@@U1@@std@@YAXPAUtagTGUILDPOINTREWARD@@ABU1@@Z ; std::_Construct<tagTGUILDPOINTREWARD,tagTGUILDPOINTREWARD>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T150941 DD	0ffffffffH
	DD	FLAT:$L150882
$T150939 DD	019930520H
	DD	01H
	DD	FLAT:$T150941
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	ENDS
;	COMDAT ??$_Construct@UtagTGUILDPOINTREWARD@@U1@@std@@YAXPAUtagTGUILDPOINTREWARD@@ABU1@@Z
_TEXT	SEGMENT
$T150879 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@UtagTGUILDPOINTREWARD@@U1@@std@@YAXPAUtagTGUILDPOINTREWARD@@ABU1@@Z PROC NEAR ; std::_Construct<tagTGUILDPOINTREWARD,tagTGUILDPOINTREWARD>, COMDAT

; 41   : 	{	// construct object at _Ptr with value _Val

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??$_Construct@UtagTGUILDPOINTREWARD@@U1@@std@@YAXPAUtagTGUILDPOINTREWARD@@ABU1@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00017	8b 74 24 18	 mov	 esi, DWORD PTR __Ptr$[esp+16]
  0001b	89 74 24 04	 mov	 DWORD PTR $T150879[esp+20], esi
  0001f	85 f6		 test	 esi, esi
  00021	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+28], 0
  00029	74 2b		 je	 SHORT $L150880
  0002b	57		 push	 edi
  0002c	8b 7c 24 20	 mov	 edi, DWORD PTR __Val$[esp+20]
  00030	8b 07		 mov	 eax, DWORD PTR [edi]
  00032	83 e8 10	 sub	 eax, 16			; 00000010H
  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
  0003b	83 c4 04	 add	 esp, 4
  0003e	83 c0 10	 add	 eax, 16			; 00000010H
  00041	89 06		 mov	 DWORD PTR [esi], eax
  00043	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00046	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00049	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  0004c	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  0004f	8b 57 0c	 mov	 edx, DWORD PTR [edi+12]
  00052	89 56 0c	 mov	 DWORD PTR [esi+12], edx
  00055	5f		 pop	 edi
$L150880:

; 43   : 	}

  00056	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0005a	5e		 pop	 esi
  0005b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00062	83 c4 10	 add	 esp, 16			; 00000010H
  00065	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L150882:
  00000	8b 45 04	 mov	 eax, DWORD PTR __Ptr$[ebp-4]
  00003	50		 push	 eax
  00004	8b 4d f0	 mov	 ecx, DWORD PTR $T150879[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$_Construct@UtagTGUILDPOINTREWARD@@U1@@std@@YAXPAUtagTGUILDPOINTREWARD@@ABU1@@Z:
  00011	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T150939
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??$_Construct@UtagTGUILDPOINTREWARD@@U1@@std@@YAXPAUtagTGUILDPOINTREWARD@@ABU1@@Z ENDP ; std::_Construct<tagTGUILDPOINTREWARD,tagTGUILDPOINTREWARD>
PUBLIC	??$_Destroy@UtagTGUILDPOINTREWARD@@@std@@YAXPAUtagTGUILDPOINTREWARD@@@Z ; std::_Destroy<tagTGUILDPOINTREWARD>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@UtagTGUILDPOINTREWARD@@@std@@YAXPAUtagTGUILDPOINTREWARD@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@UtagTGUILDPOINTREWARD@@@std@@YAXPAUtagTGUILDPOINTREWARD@@@Z PROC NEAR ; std::_Destroy<tagTGUILDPOINTREWARD>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00004	e9 00 00 00 00	 jmp	 ??1tagTGUILDPOINTREWARD@@QAE@XZ
??$_Destroy@UtagTGUILDPOINTREWARD@@@std@@YAXPAUtagTGUILDPOINTREWARD@@@Z ENDP ; std::_Destroy<tagTGUILDPOINTREWARD>
_TEXT	ENDS
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:NEAR		; std::logic_error::`vector deleting destructor'
EXTRN	??1exception@@UAE@XZ:NEAR			; exception::~exception
;	COMDAT ??_7logic_error@std@@6B@
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
CONST	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC NEAR			; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 23   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L151017
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L151017:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@logic_error@std@@UBEPBDXZ PROC NEAR		; std::logic_error::what, COMDAT
; _this$ = ecx

; 27   : 		return (_Str.c_str());

  00000	83 79 24 10	 cmp	 DWORD PTR [ecx+36], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L151045
  00006	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  00009	c3		 ret	 0

; 27   : 		return (_Str.c_str());

$L151045:
  0000a	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  0000d	c3		 ret	 0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC NEAR		; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L151052
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L151052:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::operator=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_strSrc$ = 8						; size = 4
??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@ABV01@@Z PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::operator=, COMDAT
; _this$ = ecx

; 968  : 		CThisSimpleString::operator=( strSrc );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _strSrc$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 969  : 
; 970  : 		return( *this );

  0000d	8b c6		 mov	 eax, esi
  0000f	5e		 pop	 esi

; 971  : 	}

  00010	c2 04 00	 ret	 4
??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@ABV01@@Z ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::operator=
_TEXT	ENDS
PUBLIC	?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHI@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::LoadStringA
; Function compile flags: /Ogty
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHI@Z
_TEXT	SEGMENT
_nID$ = 8						; size = 4
?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHI@Z PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::LoadStringA, COMDAT
; _this$ = ecx

; 1969 : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1970 : 		HINSTANCE hInst = StringTraits::FindStringResourceInstance( nID );

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _nID$[esp+4]
  00006	6a 00		 push	 0
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z ; ATL::AtlFindStringResourceInstance
  00010	83 c4 08	 add	 esp, 8

; 1971 : 		if( hInst == NULL )

  00013	85 c0		 test	 eax, eax
  00015	75 05		 jne	 SHORT $L116475
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi

; 1977 : 	}

  00019	c2 04 00	 ret	 4
$L116475:

; 1972 : 		{
; 1973 : 			return( FALSE );
; 1974 : 		}
; 1975 : 
; 1976 : 		return( LoadString( hInst, nID ) );		

  0001c	57		 push	 edi
  0001d	50		 push	 eax
  0001e	8b ce		 mov	 ecx, esi
  00020	e8 00 00 00 00	 call	 ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::LoadStringA
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 1977 : 	}

  00027	c2 04 00	 ret	 4
?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHI@Z ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::LoadStringA
_TEXT	ENDS
PUBLIC	?CheckImplicitLoad@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAE_NPBX@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CheckImplicitLoad
; Function compile flags: /Ogty
;	COMDAT ?CheckImplicitLoad@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT
_pv$ = 8						; size = 4
?CheckImplicitLoad@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAE_NPBX@Z PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CheckImplicitLoad, COMDAT
; _this$ = ecx

; 2229 : 	{

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 2230 : 		bool bRet = false;
; 2231 : 
; 2232 : 		if( (pv != NULL) && IS_INTRESOURCE( pv ) )

  00003	8b 4c 24 08	 mov	 ecx, DWORD PTR _pv$[esp]
  00007	32 c0		 xor	 al, al
  00009	85 c9		 test	 ecx, ecx
  0000b	74 27		 je	 SHORT $L117656
  0000d	f7 c1 00 00 ff
	ff		 test	 ecx, -65536		; ffff0000H
  00013	75 1f		 jne	 SHORT $L117656
  00015	56		 push	 esi

; 2233 : 		{
; 2234 : 			UINT nID = LOWORD( reinterpret_cast< DWORD_PTR >( pv ) );

  00016	0f b7 f1	 movzx	 esi, cx

; 2235 : 			if( !LoadString( nID ) )

  00019	6a 00		 push	 0
  0001b	56		 push	 esi
  0001c	e8 00 00 00 00	 call	 ?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z ; ATL::AtlFindStringResourceInstance
  00021	83 c4 08	 add	 esp, 8
  00024	85 c0		 test	 eax, eax
  00026	74 09		 je	 SHORT $L151072
  00028	56		 push	 esi
  00029	50		 push	 eax
  0002a	8b cf		 mov	 ecx, edi
  0002c	e8 00 00 00 00	 call	 ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::LoadStringA
$L151072:

; 2236 : 			{
; 2237 : 				ATLTRACE( atlTraceString, 2, _T( "Warning: implicit LoadString(%u) failed\n" ), nID );
; 2238 : 			}
; 2239 : 			bRet = true;

  00031	b0 01		 mov	 al, 1
  00033	5e		 pop	 esi
$L117656:
  00034	5f		 pop	 edi

; 2240 : 		}
; 2241 : 
; 2242 : 		return( bRet );
; 2243 : 	}

  00035	c2 04 00	 ret	 4
?CheckImplicitLoad@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAE_NPBX@Z ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CheckImplicitLoad
_TEXT	ENDS
PUBLIC	??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z	; ATL::CSimpleStringT<char,0>::operator=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::operator=, COMDAT
; _this$ = ecx

; 316  : 		SetString( pszSrc );

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _pszSrc$[esp-4]
  00004	85 d2		 test	 edx, edx
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx
  00009	75 0f		 jne	 SHORT $L151090
  0000b	33 c0		 xor	 eax, eax
  0000d	50		 push	 eax
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 317  : 
; 318  : 		return( *this );

  00014	8b c7		 mov	 eax, edi
  00016	5f		 pop	 edi

; 319  : 	}

  00017	c2 04 00	 ret	 4

; 316  : 		SetString( pszSrc );

$L151090:
  0001a	8b c2		 mov	 eax, edx
  0001c	56		 push	 esi
  0001d	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$L151092:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L151092
  00027	2b c6		 sub	 eax, esi
  00029	5e		 pop	 esi
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	8b cf		 mov	 ecx, edi
  0002e	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 317  : 
; 318  : 		return( *this );

  00033	8b c7		 mov	 eax, edi
  00035	5f		 pop	 edi

; 319  : 	}

  00036	c2 04 00	 ret	 4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z ENDP	; ATL::CSimpleStringT<char,0>::operator=
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 590  : 		{	// assign _Right [_Roff, _Roff + _Count)

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi

; 591  : 		if (_Right.size() < _Roff)

  00003	8b 74 24 14	 mov	 esi, DWORD PTR __Roff$[esp+8]
  00007	57		 push	 edi
  00008	8b 7c 24 14	 mov	 edi, DWORD PTR __Right$[esp+12]
  0000c	39 77 14	 cmp	 DWORD PTR [edi+20], esi
  0000f	8b d9		 mov	 ebx, ecx
  00011	73 05		 jae	 SHORT $L117696

; 592  : 			_String_base::_Xran();	// _Roff off end

  00013	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L117696:

; 593  : 		size_type _Num = _Right.size() - _Roff;

  00018	8b 6f 14	 mov	 ebp, DWORD PTR [edi+20]

; 594  : 		if (_Count < _Num)

  0001b	8b 44 24 1c	 mov	 eax, DWORD PTR __Count$[esp+12]
  0001f	2b ee		 sub	 ebp, esi
  00021	3b c5		 cmp	 eax, ebp
  00023	73 02		 jae	 SHORT $L117698

; 595  : 			_Num = _Count;	// trim _Num to size

  00025	8b e8		 mov	 ebp, eax
$L117698:

; 596  : 
; 597  : 		if (this == &_Right)

  00027	3b df		 cmp	 ebx, edi
  00029	75 1f		 jne	 SHORT $L117699

; 598  : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

  0002b	6a ff		 push	 -1
  0002d	03 ee		 add	 ebp, esi
  0002f	55		 push	 ebp
  00030	8b cb		 mov	 ecx, ebx
  00032	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00037	56		 push	 esi
  00038	6a 00		 push	 0
  0003a	8b cb		 mov	 ecx, ebx
  0003c	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00044	8b c3		 mov	 eax, ebx
  00046	5b		 pop	 ebx

; 605  : 		}

  00047	c2 0c 00	 ret	 12			; 0000000cH
$L117699:

; 599  : 		else if (_Grow(_Num))

  0004a	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  0004d	76 07		 jbe	 SHORT $L151201
  0004f	8b cb		 mov	 ecx, ebx
  00051	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L151201:
  00056	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00059	3b c5		 cmp	 eax, ebp
  0005b	73 21		 jae	 SHORT $L151202
  0005d	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00060	50		 push	 eax
  00061	55		 push	 ebp
  00062	8b cb		 mov	 ecx, ebx
  00064	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00069	85 ed		 test	 ebp, ebp
$L151289:
  0006b	76 6d		 jbe	 SHORT $L151288

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

  0006d	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00070	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00075	3b c8		 cmp	 ecx, eax
  00077	72 2f		 jb	 SHORT $L151254
  00079	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0007c	eb 2d		 jmp	 SHORT $L151255

; 599  : 		else if (_Grow(_Num))

$L151202:
  0007e	85 ed		 test	 ebp, ebp
  00080	75 e9		 jne	 SHORT $L151289
  00082	83 f8 10	 cmp	 eax, 16			; 00000010H
  00085	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00088	72 0f		 jb	 SHORT $L151245
  0008a	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	c6 00 00	 mov	 BYTE PTR [eax], 0
  00092	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00093	8b c3		 mov	 eax, ebx
  00095	5b		 pop	 ebx

; 605  : 		}

  00096	c2 0c 00	 ret	 12			; 0000000cH

; 599  : 		else if (_Grow(_Num))

$L151245:
  00099	5f		 pop	 edi
  0009a	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0009d	5e		 pop	 esi
  0009e	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a1	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000a2	8b c3		 mov	 eax, ebx
  000a4	5b		 pop	 ebx

; 605  : 		}

  000a5	c2 0c 00	 ret	 12			; 0000000cH

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

$L151254:
  000a8	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
$L151255:
  000ab	39 43 18	 cmp	 DWORD PTR [ebx+24], eax
  000ae	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000b1	72 04		 jb	 SHORT $L151261
  000b3	8b 38		 mov	 edi, DWORD PTR [eax]
  000b5	eb 02		 jmp	 SHORT $L151262
$L151261:
  000b7	8b f8		 mov	 edi, eax
$L151262:
  000b9	03 f2		 add	 esi, edx
  000bb	8b cd		 mov	 ecx, ebp
  000bd	8b d1		 mov	 edx, ecx
  000bf	c1 e9 02	 shr	 ecx, 2
  000c2	f3 a5		 rep movsd
  000c4	8b ca		 mov	 ecx, edx
  000c6	83 e1 03	 and	 ecx, 3
  000c9	f3 a4		 rep movsb

; 602  : 			_Eos(_Num);

  000cb	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000cf	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000d2	72 02		 jb	 SHORT $L151285
  000d4	8b 00		 mov	 eax, DWORD PTR [eax]
$L151285:
  000d6	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L151288:
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000dd	8b c3		 mov	 eax, ebx
  000df	5b		 pop	 ebx

; 605  : 		}

  000e0	c2 0c 00	 ret	 12			; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@IAEXXZ ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Tidy@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@IAEXXZ PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::_Tidy, COMDAT
; _this$ = ecx

; 791  : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 792  : 		if (_Myfirst != 0)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L151294

; 793  : 			{	// something to free, destroy and deallocate it
; 794  : 			_Destroy(_Myfirst, _Mylast);
; 795  : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L151294:

; 796  : 			}
; 797  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 798  : 		}

  00029	c3		 ret	 0
?_Tidy@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@IAEXXZ ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::_Tidy
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Num$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 608  : 		{	// assign [_Ptr, _Ptr + _Num)

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx

; 609  : 		if (_Inside(_Ptr))

  00003	8b 53 18	 mov	 edx, DWORD PTR [ebx+24]
  00006	83 fa 10	 cmp	 edx, 16			; 00000010H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	72 05		 jb	 SHORT $L151323
  0000d	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00010	eb 03		 jmp	 SHORT $L151324
$L151323:
  00012	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$L151324:
  00015	8b 74 24 10	 mov	 esi, DWORD PTR __Ptr$[esp+8]
  00019	3b f0		 cmp	 esi, eax
  0001b	72 34		 jb	 SHORT $L119050
  0001d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00020	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00023	72 04		 jb	 SHORT $L151327
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	eb 02		 jmp	 SHORT $L151328
$L151327:
  00029	8b c8		 mov	 ecx, eax
$L151328:
  0002b	8b 7b 14	 mov	 edi, DWORD PTR [ebx+20]
  0002e	03 f9		 add	 edi, ecx
  00030	3b fe		 cmp	 edi, esi
  00032	76 1d		 jbe	 SHORT $L119050

; 610  : 			return (assign(*this, _Ptr - _Myptr(), _Num));	// substring

  00034	83 fa 10	 cmp	 edx, 16			; 00000010H
  00037	72 02		 jb	 SHORT $L151336
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$L151336:
  0003b	8b 4c 24 14	 mov	 ecx, DWORD PTR __Num$[esp+8]
  0003f	51		 push	 ecx
  00040	2b f0		 sub	 esi, eax
  00042	56		 push	 esi
  00043	53		 push	 ebx
  00044	8b cb		 mov	 ecx, ebx
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx

; 618  : 		}

  0004e	c2 08 00	 ret	 8
$L119050:
  00051	55		 push	 ebp

; 611  : 
; 612  : 		if (_Grow(_Num))

  00052	8b 6c 24 18	 mov	 ebp, DWORD PTR __Num$[esp+12]
  00056	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  00059	76 07		 jbe	 SHORT $L151434
  0005b	8b cb		 mov	 ecx, ebx
  0005d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L151434:
  00062	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00065	3b c5		 cmp	 eax, ebp
  00067	73 1b		 jae	 SHORT $L151435
  00069	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  0006c	52		 push	 edx
  0006d	55		 push	 ebp
  0006e	8b cb		 mov	 ecx, ebx
  00070	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00075	85 ed		 test	 ebp, ebp
$L151515:
  00077	76 68		 jbe	 SHORT $L151512

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

  00079	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  0007d	72 2f		 jb	 SHORT $L151487
  0007f	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
  00082	eb 2d		 jmp	 SHORT $L151488

; 611  : 
; 612  : 		if (_Grow(_Num))

$L151435:
  00084	85 ed		 test	 ebp, ebp
  00086	75 ef		 jne	 SHORT $L151515
  00088	83 f8 10	 cmp	 eax, 16			; 00000010H
  0008b	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  0008e	72 0f		 jb	 SHORT $L151478
  00090	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00093	5d		 pop	 ebp
  00094	5f		 pop	 edi
  00095	c6 00 00	 mov	 BYTE PTR [eax], 0
  00098	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  00099	8b c3		 mov	 eax, ebx
  0009b	5b		 pop	 ebx

; 618  : 		}

  0009c	c2 08 00	 ret	 8

; 611  : 
; 612  : 		if (_Grow(_Num))

$L151478:
  0009f	5d		 pop	 ebp
  000a0	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000a3	5f		 pop	 edi
  000a4	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a7	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000a8	8b c3		 mov	 eax, ebx
  000aa	5b		 pop	 ebx

; 618  : 		}

  000ab	c2 08 00	 ret	 8

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

$L151487:
  000ae	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
$L151488:
  000b1	8b cd		 mov	 ecx, ebp
  000b3	8b c1		 mov	 eax, ecx
  000b5	c1 e9 02	 shr	 ecx, 2
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb

; 615  : 			_Eos(_Num);

  000c1	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000c5	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000c8	72 10		 jb	 SHORT $L151510
  000ca	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000cd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
  000d1	5d		 pop	 ebp
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000d4	8b c3		 mov	 eax, ebx
  000d6	5b		 pop	 ebx

; 618  : 		}

  000d7	c2 08 00	 ret	 8

; 615  : 			_Eos(_Num);

$L151510:
  000da	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000dd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L151512:
  000e1	5d		 pop	 ebp
  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000e4	8b c3		 mov	 eax, ebx
  000e6	5b		 pop	 ebx

; 618  : 		}

  000e7	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?Designate@CTGuild@@QAEPAUtagTCHARACTER@@KE@Z	; CTGuild::Designate
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tguild.cpp
;	COMDAT ?Designate@CTGuild@@QAEPAUtagTCHARACTER@@KE@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_dwID$ = 8						; size = 4
_bDuty$ = 12						; size = 1
?Designate@CTGuild@@QAEPAUtagTCHARACTER@@KE@Z PROC NEAR	; CTGuild::Designate, COMDAT
; _this$ = ecx

; 92   : {

  00000	51		 push	 ecx
  00001	53		 push	 ebx
  00002	56		 push	 esi
  00003	57		 push	 edi
  00004	8b f1		 mov	 esi, ecx

; 93   : 	LPTCHARACTER pChar = NULL;
; 94   : 	MAPTGUILDMEMBER::iterator it = m_mapTMember.find(dwID);

  00006	8d 44 24 14	 lea	 eax, DWORD PTR _dwID$[esp+12]
  0000a	50		 push	 eax
  0000b	8d 4c 24 10	 lea	 ecx, DWORD PTR _it$[esp+20]
  0000f	51		 push	 ecx
  00010	8d 4e 70	 lea	 ecx, DWORD PTR [esi+112]
  00013	33 db		 xor	 ebx, ebx
  00015	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::find

; 95   : 	if(it!=m_mapTMember.end())

  0001a	8b 7c 24 0c	 mov	 edi, DWORD PTR _it$[esp+16]
  0001e	3b 7e 74	 cmp	 edi, DWORD PTR [esi+116]
  00021	74 2e		 je	 SHORT $L151610

; 96   : 	{
; 97   : 		(*it).second->m_bDuty = bDuty;

  00023	8a 44 24 18	 mov	 al, BYTE PTR _bDuty$[esp+12]

; 98   : 		if(bDuty == GUILD_DUTY_CHIEF)

  00027	3c 02		 cmp	 al, 2
  00029	8b 57 10	 mov	 edx, DWORD PTR [edi+16]
  0002c	88 42 12	 mov	 BYTE PTR [edx+18], al
  0002f	75 16		 jne	 SHORT $L151576

; 99   : 		{
; 100  : 			m_dwChief = dwID;

  00031	8b 44 24 14	 mov	 eax, DWORD PTR _dwID$[esp+12]
  00035	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 101  : 			m_strChief = (*it).second->m_strName;

  00038	8b 4f 10	 mov	 ecx, DWORD PTR [edi+16]
  0003b	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0003e	51		 push	 ecx
  0003f	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00042	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=
$L151576:

; 102  : 		}
; 103  : 
; 104  : 		if((*it).second->m_pChar)

  00047	8b 57 10	 mov	 edx, DWORD PTR [edi+16]
  0004a	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  0004d	85 c0		 test	 eax, eax

; 105  : 			pChar = (*it).second->m_pChar;

  0004f	75 02		 jne	 SHORT $L134649
$L151610:

; 106  : 	}
; 107  : 	return pChar;

  00051	8b c3		 mov	 eax, ebx
$L134649:
  00053	5f		 pop	 edi
  00054	5e		 pop	 esi
  00055	5b		 pop	 ebx

; 108  : }

  00056	59		 pop	 ecx
  00057	c2 08 00	 ret	 8
?Designate@CTGuild@@QAEPAUtagTCHARACTER@@KE@Z ENDP	; CTGuild::Designate
_TEXT	ENDS
PUBLIC	?UpdateArticle@CTGuild@@QAEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ; CTGuild::UpdateArticle
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T151841 DD	0ffffffffH
	DD	FLAT:$L151617
	DD	00H
	DD	FLAT:$L151618
$T151839 DD	019930520H
	DD	02H
	DD	FLAT:$T151841
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tguild.cpp
xdata$x	ENDS
;	COMDAT ?UpdateArticle@CTGuild@@QAEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT
_find$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwID$ = 8						; size = 4
_strTitle$ = 12						; size = 4
_strArticle$ = 16					; size = 4
?UpdateArticle@CTGuild@@QAEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z PROC NEAR ; CTGuild::UpdateArticle, COMDAT
; _this$ = ecx

; 472  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?UpdateArticle@CTGuild@@QAEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b f9		 mov	 edi, ecx

; 473  : 	MAPTGUILDARTICLE::iterator find = m_mapTArticle.find(dwID);

  0001a	8d 44 24 1c	 lea	 eax, DWORD PTR _dwID$[esp+20]
  0001e	50		 push	 eax
  0001f	8d 4c 24 0c	 lea	 ecx, DWORD PTR _find$[esp+28]
  00023	51		 push	 ecx
  00024	8d 8f 8c 00 00
	00		 lea	 ecx, DWORD PTR [edi+140]
  0002a	c7 44 24 1c 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 1
  00032	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::find

; 474  : 	if(find != m_mapTArticle.end())

  00037	8b 87 90 00 00
	00		 mov	 eax, DWORD PTR [edi+144]
  0003d	8b 74 24 08	 mov	 esi, DWORD PTR _find$[esp+24]
  00041	3b f0		 cmp	 esi, eax
  00043	0f 84 a6 00 00
	00		 je	 $L134951

; 475  : 	{
; 476  : 		if(m_strArticleTitle == (*find).second->m_strTitle)

  00049	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0004c	8b 4f 48	 mov	 ecx, DWORD PTR [edi+72]
  0004f	83 c0 0c	 add	 eax, 12			; 0000000cH
  00052	8b 00		 mov	 eax, DWORD PTR [eax]
  00054	83 c7 48	 add	 edi, 72			; 00000048H
  00057	50		 push	 eax
  00058	51		 push	 ecx
  00059	e8 00 00 00 00	 call	 __mbscmp
  0005e	83 c4 08	 add	 esp, 8
  00061	85 c0		 test	 eax, eax
  00063	75 0c		 jne	 SHORT $L151690

; 477  : 			m_strArticleTitle = strTitle;

  00065	8d 54 24 20	 lea	 edx, DWORD PTR _strTitle$[esp+20]
  00069	52		 push	 edx
  0006a	8b cf		 mov	 ecx, edi
  0006c	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=
$L151690:

; 478  : 
; 479  : 		(*find).second->m_strTitle = strTitle;

  00071	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00074	8d 44 24 20	 lea	 eax, DWORD PTR _strTitle$[esp+20]
  00078	83 c1 0c	 add	 ecx, 12			; 0000000cH
  0007b	50		 push	 eax
  0007c	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 480  : 		(*find).second->m_strArticle = strArticle;

  00081	8b 4e 10	 mov	 ecx, DWORD PTR [esi+16]
  00084	8d 54 24 24	 lea	 edx, DWORD PTR _strArticle$[esp+20]
  00088	83 c1 10	 add	 ecx, 16			; 00000010H
  0008b	52		 push	 edx
  0008c	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 481  : 		return TRUE;

  00091	8b 44 24 20	 mov	 eax, DWORD PTR _strTitle$[esp+20]
  00095	83 c0 f0	 add	 eax, -16		; fffffff0H
  00098	c6 44 24 14 00	 mov	 BYTE PTR __$EHRec$[esp+32], 0
  0009d	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a0	83 ca ff	 or	 edx, -1
  000a3	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000a7	4a		 dec	 edx
  000a8	85 d2		 test	 edx, edx
  000aa	7f 08		 jg	 SHORT $L151753
  000ac	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ae	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b0	50		 push	 eax
  000b1	ff 52 04	 call	 DWORD PTR [edx+4]
$L151753:
  000b4	8b 44 24 24	 mov	 eax, DWORD PTR _strArticle$[esp+20]
  000b8	83 c0 f0	 add	 eax, -16		; fffffff0H
  000bb	c7 44 24 14 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+32], -1
  000c3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000c6	83 ca ff	 or	 edx, -1
  000c9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000cd	4a		 dec	 edx
  000ce	85 d2		 test	 edx, edx
  000d0	7f 08		 jg	 SHORT $L151780
  000d2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d6	50		 push	 eax
  000d7	ff 52 04	 call	 DWORD PTR [edx+4]
$L151780:
  000da	5f		 pop	 edi
  000db	b0 01		 mov	 al, 1
  000dd	5e		 pop	 esi

; 485  : }

  000de	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000e2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000e9	83 c4 10	 add	 esp, 16			; 00000010H
  000ec	c2 0c 00	 ret	 12			; 0000000cH
$L134951:

; 482  : 	}
; 483  : 
; 484  : 	return FALSE;

  000ef	8b 44 24 20	 mov	 eax, DWORD PTR _strTitle$[esp+20]
  000f3	83 c0 f0	 add	 eax, -16		; fffffff0H
  000f6	c6 44 24 14 00	 mov	 BYTE PTR __$EHRec$[esp+32], 0
  000fb	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000fe	83 ca ff	 or	 edx, -1
  00101	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00105	4a		 dec	 edx
  00106	85 d2		 test	 edx, edx
  00108	7f 08		 jg	 SHORT $L151807
  0010a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0010c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010e	50		 push	 eax
  0010f	ff 52 04	 call	 DWORD PTR [edx+4]
$L151807:
  00112	8b 44 24 24	 mov	 eax, DWORD PTR _strArticle$[esp+20]
  00116	83 c0 f0	 add	 eax, -16		; fffffff0H
  00119	c7 44 24 14 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+32], -1
  00121	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00124	83 ca ff	 or	 edx, -1
  00127	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0012b	4a		 dec	 edx
  0012c	85 d2		 test	 edx, edx
  0012e	7f 08		 jg	 SHORT $L151834
  00130	8b 08		 mov	 ecx, DWORD PTR [eax]
  00132	8b 11		 mov	 edx, DWORD PTR [ecx]
  00134	50		 push	 eax
  00135	ff 52 04	 call	 DWORD PTR [edx+4]
$L151834:

; 485  : }

  00138	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0013c	5f		 pop	 edi
  0013d	32 c0		 xor	 al, al
  0013f	5e		 pop	 esi
  00140	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00147	83 c4 10	 add	 esp, 16			; 00000010H
  0014a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L151617:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strArticle$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L151618:
  00008	8d 4d 08	 lea	 ecx, DWORD PTR _strTitle$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?UpdateArticle@CTGuild@@QAEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z:
  00010	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T151839
  00015	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?UpdateArticle@CTGuild@@QAEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ENDP ; CTGuild::UpdateArticle
PUBLIC	?CalcWeekRecord@CTGuild@@QAEXPAUtagTGUILDMEMBER@@K@Z ; CTGuild::CalcWeekRecord
; Function compile flags: /Ogty
;	COMDAT ?CalcWeekRecord@CTGuild@@QAEXPAUtagTGUILDMEMBER@@K@Z
_TEXT	SEGMENT
_w$135213 = 8						; size = 2
_pMember$ = 8						; size = 4
_dwDate$ = 12						; size = 4
?CalcWeekRecord@CTGuild@@QAEXPAUtagTGUILDMEMBER@@K@Z PROC NEAR ; CTGuild::CalcWeekRecord, COMDAT
; _this$ = ecx

; 619  : {

  00000	53		 push	 ebx

; 620  : 	memset(&(pMember->m_weekrecord), 0, sizeof(TENTRYRECORD));

  00001	8b 5c 24 08	 mov	 ebx, DWORD PTR _pMember$[esp]
  00005	55		 push	 ebp
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	33 c0		 xor	 eax, eax
  0000a	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0000f	8d 7b 30	 lea	 edi, DWORD PTR [ebx+48]
  00012	f3 ab		 rep stosd

; 621  : 
; 622  : 	for(WORD w=0; w<pMember->m_vRecord.size();)

  00014	89 44 24 14	 mov	 DWORD PTR _w$135213[esp+12], eax
$L135215:
  00018	8b 43 24	 mov	 eax, DWORD PTR [ebx+36]
  0001b	85 c0		 test	 eax, eax
  0001d	74 16		 je	 SHORT $L151855
$L151854:
  0001f	8b 4b 28	 mov	 ecx, DWORD PTR [ebx+40]
  00022	2b c8		 sub	 ecx, eax
  00024	b8 e9 a2 8b 2e	 mov	 eax, 780903145		; 2e8ba2e9H
  00029	f7 e9		 imul	 ecx
  0002b	c1 fa 03	 sar	 edx, 3
  0002e	8b c2		 mov	 eax, edx
  00030	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00033	03 c2		 add	 eax, edx
$L151855:
  00035	0f b7 4c 24 14	 movzx	 ecx, WORD PTR _w$135213[esp+12]
  0003a	3b c8		 cmp	 ecx, eax
  0003c	73 73		 jae	 SHORT $L135216

; 623  : 	{
; 624  : 		if(pMember->m_vRecord[w].m_dwDate + 7 <= dwDate)

  0003e	8b 43 24	 mov	 eax, DWORD PTR [ebx+36]
  00041	6b c9 2c	 imul	 ecx, 44			; 0000002cH
  00044	8b 14 08	 mov	 edx, DWORD PTR [eax+ecx]
  00047	8b 74 24 18	 mov	 esi, DWORD PTR _dwDate$[esp+12]
  0004b	03 c1		 add	 eax, ecx
  0004d	83 c2 07	 add	 edx, 7
  00050	3b d6		 cmp	 edx, esi
  00052	77 28		 ja	 SHORT $L135217

; 625  : 			pMember->m_vRecord.erase(pMember->m_vRecord.begin() + w);

  00054	8b 6b 28	 mov	 ebp, DWORD PTR [ebx+40]
  00057	83 c0 2c	 add	 eax, 44			; 0000002cH
  0005a	3b c5		 cmp	 eax, ebp
  0005c	74 18		 je	 SHORT $L151976
  0005e	8d 50 d4	 lea	 edx, DWORD PTR [eax-44]
$L152152:
  00061	8b f0		 mov	 esi, eax
  00063	8b fa		 mov	 edi, edx
  00065	83 c0 2c	 add	 eax, 44			; 0000002cH
  00068	b9 0b 00 00 00	 mov	 ecx, 11			; 0000000bH
  0006d	83 c2 2c	 add	 edx, 44			; 0000002cH
  00070	3b c5		 cmp	 eax, ebp
  00072	f3 a5		 rep movsd
  00074	75 eb		 jne	 SHORT $L152152
$L151976:
  00076	83 43 28 d4	 add	 DWORD PTR [ebx+40], -44	; ffffffd4H

; 626  : 		else

  0007a	eb 9c		 jmp	 SHORT $L135215
$L135217:

; 627  : 		{
; 628  : 			pMember->m_weekrecord.m_wKillCount += pMember->m_vRecord[w].m_wKillCount;

  0007c	66 8b 50 04	 mov	 dx, WORD PTR [eax+4]
  00080	66 01 53 34	 add	 WORD PTR [ebx+52], dx

; 629  : 			pMember->m_weekrecord.m_wDieCount += pMember->m_vRecord[w].m_wDieCount;

  00084	66 8b 40 06	 mov	 ax, WORD PTR [eax+6]
  00088	66 01 43 36	 add	 WORD PTR [ebx+54], ax
  0008c	8d 43 38	 lea	 eax, DWORD PTR [ebx+56]
  0008f	83 c1 08	 add	 ecx, 8
  00092	ba 08 00 00 00	 mov	 edx, 8
$L135339:

; 630  : 
; 631  : 			for(BYTE e=0; e<PVPE_COUNT; e++)
; 632  : 				pMember->m_weekrecord.m_aGainPoint[e] += pMember->m_vRecord[w].m_aGainPoint[e];

  00097	8b 73 24	 mov	 esi, DWORD PTR [ebx+36]
  0009a	8b 34 31	 mov	 esi, DWORD PTR [ecx+esi]
  0009d	01 30		 add	 DWORD PTR [eax], esi
  0009f	83 c1 04	 add	 ecx, 4
  000a2	83 c0 04	 add	 eax, 4
  000a5	4a		 dec	 edx
  000a6	75 ef		 jne	 SHORT $L135339

; 633  : 
; 634  : 			w++;

  000a8	ff 44 24 14	 inc	 DWORD PTR _w$135213[esp+12]

; 635  : 		}
; 636  : 	}

  000ac	e9 67 ff ff ff	 jmp	 $L135215
$L135216:
  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	5d		 pop	 ebp
  000b4	5b		 pop	 ebx

; 637  : }

  000b5	c2 08 00	 ret	 8
?CalcWeekRecord@CTGuild@@QAEXPAUtagTGUILDMEMBER@@K@Z ENDP ; CTGuild::CalcWeekRecord
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >
_TEXT	ENDS
PUBLIC	??0?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z
_TEXT	SEGMENT
__Parg$ = 8						; size = 4
__Al$ = 12						; size = 4
??0?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >, COMDAT
; _this$ = ecx

; 361  : 		{	// construct empty tree

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 362  : 		_Init();

  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 363  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c2 08 00	 ret	 8
??0?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@ABU?$less@K@1@ABV?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@1@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >
_TEXT	ENDS
PUBLIC	??4tagTGUILDPOINTREWARD@@QAEAAU0@ABU0@@Z	; tagTGUILDPOINTREWARD::operator=
; Function compile flags: /Ogty
;	COMDAT ??4tagTGUILDPOINTREWARD@@QAEAAU0@ABU0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??4tagTGUILDPOINTREWARD@@QAEAAU0@ABU0@@Z PROC NEAR	; tagTGUILDPOINTREWARD::operator=, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR ___that$[esp+4]
  00006	57		 push	 edi
  00007	8b f1		 mov	 esi, ecx
  00009	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=
  0000e	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00011	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00014	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00017	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  0001a	8b 57 0c	 mov	 edx, DWORD PTR [edi+12]
  0001d	5f		 pop	 edi
  0001e	89 56 0c	 mov	 DWORD PTR [esi+12], edx
  00021	8b c6		 mov	 eax, esi
  00023	5e		 pop	 esi
  00024	c2 04 00	 ret	 4
??4tagTGUILDPOINTREWARD@@QAEAAU0@ABU0@@Z ENDP		; tagTGUILDPOINTREWARD::operator=
_TEXT	ENDS
PUBLIC	??$_Copy_backward_opt@PAUtagTGUILDPOINTREWARD@@PAU1@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_backward_opt<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Copy_backward_opt@PAUtagTGUILDPOINTREWARD@@PAU1@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
_pNewData$152754 = 16					; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Copy_backward_opt@PAUtagTGUILDPOINTREWARD@@PAU1@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Copy_backward_opt<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *>, COMDAT

; 1049 : 	while (_First != _Last)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	53		 push	 ebx
  00005	8b 5c 24 0c	 mov	 ebx, DWORD PTR __Last$[esp]
  00009	3b c3		 cmp	 eax, ebx
  0000b	0f 84 8d 00 00
	00		 je	 $L152758
  00011	55		 push	 ebp
  00012	56		 push	 esi
  00013	57		 push	 edi
  00014	8b 7c 24 1c	 mov	 edi, DWORD PTR __Dest$[esp+12]
  00018	eb 06 8d 9b 00
	00 00 00	 npad	 8
$L139350:

; 1050 : 		*--_Dest = *--_Last;

  00020	8b 4b f0	 mov	 ecx, DWORD PTR [ebx-16]
  00023	8b 77 f0	 mov	 esi, DWORD PTR [edi-16]
  00026	83 eb 10	 sub	 ebx, 16			; 00000010H
  00029	83 ef 10	 sub	 edi, 16			; 00000010H
  0002c	8d 41 f0	 lea	 eax, DWORD PTR [ecx-16]
  0002f	83 ee 10	 sub	 esi, 16			; 00000010H
  00032	3b c6		 cmp	 eax, esi
  00034	74 49		 je	 SHORT $L152746
  00036	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  00039	85 d2		 test	 edx, edx
  0003b	8d 6e 0c	 lea	 ebp, DWORD PTR [esi+12]
  0003e	7c 33		 jl	 SHORT $L152752
  00040	8b 10		 mov	 edx, DWORD PTR [eax]
  00042	3b 16		 cmp	 edx, DWORD PTR [esi]
  00044	75 2d		 jne	 SHORT $L152752
  00046	50		 push	 eax
  00047	e8 00 00 00 00	 call	 ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
  0004c	89 44 24 20	 mov	 DWORD PTR _pNewData$152754[esp+16], eax
  00050	83 c4 04	 add	 esp, 4
  00053	83 c8 ff	 or	 eax, -1
  00056	f0 0f c1 45 00	 lock	  xadd	 DWORD PTR [ebp], eax
  0005b	48		 dec	 eax
  0005c	85 c0		 test	 eax, eax
  0005e	7f 08		 jg	 SHORT $L152742
  00060	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00062	8b 11		 mov	 edx, DWORD PTR [ecx]
  00064	56		 push	 esi
  00065	ff 52 04	 call	 DWORD PTR [edx+4]
$L152742:
  00068	8b 44 24 1c	 mov	 eax, DWORD PTR _pNewData$152754[esp+12]
  0006c	83 c0 10	 add	 eax, 16			; 00000010H
  0006f	89 07		 mov	 DWORD PTR [edi], eax
  00071	eb 0c		 jmp	 SHORT $L152746
$L152752:
  00073	8b 51 f4	 mov	 edx, DWORD PTR [ecx-12]
  00076	52		 push	 edx
  00077	51		 push	 ecx
  00078	8b cf		 mov	 ecx, edi
  0007a	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
$L152746:
  0007f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00082	89 47 04	 mov	 DWORD PTR [edi+4], eax
  00085	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00088	3b 5c 24 14	 cmp	 ebx, DWORD PTR __First$[esp+12]
  0008c	89 4f 08	 mov	 DWORD PTR [edi+8], ecx
  0008f	8b 53 0c	 mov	 edx, DWORD PTR [ebx+12]
  00092	89 57 0c	 mov	 DWORD PTR [edi+12], edx
  00095	75 89		 jne	 SHORT $L139350

; 1051 : 	return (_Dest);

  00097	8b c7		 mov	 eax, edi
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	5d		 pop	 ebp
  0009c	5b		 pop	 ebx

; 1052 : 	}

  0009d	c3		 ret	 0
$L152758:

; 1051 : 	return (_Dest);

  0009e	8b 44 24 10	 mov	 eax, DWORD PTR __Dest$[esp]
  000a2	5b		 pop	 ebx

; 1052 : 	}

  000a3	c3		 ret	 0
??$_Copy_backward_opt@PAUtagTGUILDPOINTREWARD@@PAU1@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Copy_backward_opt<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *>
_TEXT	ENDS
PUBLIC	?construct@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEXPAUtagTGUILDPOINTREWARD@@ABU3@@Z ; std::allocator<tagTGUILDPOINTREWARD>::construct
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEXPAUtagTGUILDPOINTREWARD@@ABU3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEXPAUtagTGUILDPOINTREWARD@@ABU3@@Z PROC NEAR ; std::allocator<tagTGUILDPOINTREWARD>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Val$[esp-4]
  00004	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00008	50		 push	 eax
  00009	51		 push	 ecx
  0000a	e8 00 00 00 00	 call	 ??$_Construct@UtagTGUILDPOINTREWARD@@U1@@std@@YAXPAUtagTGUILDPOINTREWARD@@ABU1@@Z ; std::_Construct<tagTGUILDPOINTREWARD,tagTGUILDPOINTREWARD>
  0000f	83 c4 08	 add	 esp, 8

; 148  : 		}

  00012	c2 08 00	 ret	 8
?construct@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEXPAUtagTGUILDPOINTREWARD@@ABU3@@Z ENDP ; std::allocator<tagTGUILDPOINTREWARD>::construct
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEXPAUtagTGUILDPOINTREWARD@@@Z ; std::allocator<tagTGUILDPOINTREWARD>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEXPAUtagTGUILDPOINTREWARD@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEXPAUtagTGUILDPOINTREWARD@@@Z PROC NEAR ; std::allocator<tagTGUILDPOINTREWARD>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00004	e8 00 00 00 00	 call	 ??1tagTGUILDPOINTREWARD@@QAE@XZ

; 153  : 		}

  00009	c2 04 00	 ret	 4
?destroy@?$allocator@UtagTGUILDPOINTREWARD@@@std@@QAEXPAUtagTGUILDPOINTREWARD@@@Z ENDP ; std::allocator<tagTGUILDPOINTREWARD>::destroy
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@PAUtagTGUILDPOINTREWARD@@PAU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *,std::allocator<tagTGUILDPOINTREWARD> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T153115 DD	0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:$L152786
	DD	0ffffffffH
	DD	00H
$T153117 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L152779
$T153116 DD	00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:$T153117
$T153108 DD	019930520H
	DD	03H
	DD	FLAT:$T153115
	DD	01H
	DD	FLAT:$T153116
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagTGUILDPOINTREWARD@@PAU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T152976 = -24						; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@PAUtagTGUILDPOINTREWARD@@PAU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_copy<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *,std::allocator<tagTGUILDPOINTREWARD> >, COMDAT

; 77   : 	{	// copy [_First, _Last) to raw _Dest, using _Al, arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninit_copy@PAUtagTGUILDPOINTREWARD@@PAU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	53		 push	 ebx

; 78   : 	_FwdIt _Next = _Dest;

  0001c	8b 5d 10	 mov	 ebx, DWORD PTR __Dest$[ebp]
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00024	89 5d ec	 mov	 DWORD PTR __Next$[ebp], ebx

; 79   : 
; 80   : 	_TRY_BEGIN

  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  0002e	8b ff		 npad	 2
$L139396:

; 81   : 	for (; _First != _Last; ++_Dest, ++_First)

  00030	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  00033	3b 7d 0c	 cmp	 edi, DWORD PTR __Last$[ebp]
  00036	0f 84 d0 00 00
	00		 je	 $L139398

; 82   : 		_Al.construct(_Dest, *_First);

  0003c	89 5d e8	 mov	 DWORD PTR $T152976[ebp], ebx
  0003f	85 db		 test	 ebx, ebx
  00041	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00045	74 75		 je	 SHORT $L152977
  00047	8b 37		 mov	 esi, DWORD PTR [edi]
  00049	8b 4e f0	 mov	 ecx, DWORD PTR [esi-16]
  0004c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0004e	83 ee 10	 sub	 esi, 16			; 00000010H
  00051	ff 50 10	 call	 DWORD PTR [eax+16]
  00054	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  00057	85 d2		 test	 edx, edx
  00059	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0005c	7c 11		 jl	 SHORT $L153001
  0005e	3b 06		 cmp	 eax, DWORD PTR [esi]
  00060	75 0d		 jne	 SHORT $L153001
  00062	8b c6		 mov	 eax, esi
  00064	ba 01 00 00 00	 mov	 edx, 1
  00069	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0006d	eb 36		 jmp	 SHORT $L152997
$L153001:
  0006f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00072	8b 10		 mov	 edx, DWORD PTR [eax]
  00074	6a 01		 push	 1
  00076	51		 push	 ecx
  00077	8b c8		 mov	 ecx, eax
  00079	ff 12		 call	 DWORD PTR [edx]
  0007b	85 c0		 test	 eax, eax
  0007d	75 05		 jne	 SHORT $L153003
  0007f	e9 00 00 00 00	 jmp	 ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L153003:
  00084	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00087	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0008a	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0008d	41		 inc	 ecx
  0008e	8b d1		 mov	 edx, ecx
  00090	c1 e9 02	 shr	 ecx, 2
  00093	83 c6 10	 add	 esi, 16			; 00000010H
  00096	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  00099	f3 a5		 rep movsd
  0009b	8b ca		 mov	 ecx, edx
  0009d	83 e1 03	 and	 ecx, 3
  000a0	f3 a4		 rep movsb
  000a2	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
$L152997:
  000a5	83 c0 10	 add	 eax, 16			; 00000010H
  000a8	89 03		 mov	 DWORD PTR [ebx], eax
  000aa	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000ad	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  000b0	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  000b3	89 4b 08	 mov	 DWORD PTR [ebx+8], ecx
  000b6	8b 57 0c	 mov	 edx, DWORD PTR [edi+12]
  000b9	89 53 0c	 mov	 DWORD PTR [ebx+12], edx
$L152977:
  000bc	83 c3 10	 add	 ebx, 16			; 00000010H
  000bf	83 c7 10	 add	 edi, 16			; 00000010H
  000c2	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  000c6	89 5d 10	 mov	 DWORD PTR __Dest$[ebp], ebx
  000c9	89 7d 08	 mov	 DWORD PTR __First$[ebp], edi
  000cc	e9 5f ff ff ff	 jmp	 $L139396
$L152779:

; 83   : 	_CATCH_ALL
; 84   : 	for (; _Next != _Dest; ++_Next)

  000d1	8b 75 ec	 mov	 esi, DWORD PTR __Next$[ebp]
  000d4	8b 7d 10	 mov	 edi, DWORD PTR __Dest$[ebp]
  000d7	3b f7		 cmp	 esi, edi
  000d9	74 28		 je	 SHORT $L139401
  000db	eb 03 8d 49 00	 npad	 5
$L139399:

; 85   : 		_Al.destroy(_Next);

  000e0	8b 06		 mov	 eax, DWORD PTR [esi]
  000e2	83 e8 10	 sub	 eax, 16			; 00000010H
  000e5	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000e8	83 ca ff	 or	 edx, -1
  000eb	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ef	4a		 dec	 edx
  000f0	85 d2		 test	 edx, edx
  000f2	7f 08		 jg	 SHORT $L153103
  000f4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f8	50		 push	 eax
  000f9	ff 52 04	 call	 DWORD PTR [edx+4]
$L153103:
  000fc	83 c6 10	 add	 esi, 16			; 00000010H
  000ff	3b f7		 cmp	 esi, edi
  00101	75 dd		 jne	 SHORT $L139399
$L139401:

; 86   : 	_RERAISE;

  00103	6a 00		 push	 0
  00105	6a 00		 push	 0
  00107	e8 00 00 00 00	 call	 __CxxThrowException@8
$L153118:
$L139398:

; 87   : 	_CATCH_END
; 88   : 	return (_Dest);
; 89   : 	}

  0010c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0010f	5f		 pop	 edi
  00110	5e		 pop	 esi
  00111	8b c3		 mov	 eax, ebx
  00113	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0011a	5b		 pop	 ebx
  0011b	8b e5		 mov	 esp, ebp
  0011d	5d		 pop	 ebp
  0011e	c3		 ret	 0
$L153114:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L152786:
  00000	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00003	50		 push	 eax
  00004	8b 4d e8	 mov	 ecx, DWORD PTR $T152976[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$_Uninit_copy@PAUtagTGUILDPOINTREWARD@@PAU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z:
  00011	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T153108
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??$_Uninit_copy@PAUtagTGUILDPOINTREWARD@@PAU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *,std::allocator<tagTGUILDPOINTREWARD> >
PUBLIC	??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::operator=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::operator=, COMDAT
; _this$ = ecx

; 983  : 		CThisSimpleString::operator=( pszSrc );

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _pszSrc$[esp-4]
  00004	85 d2		 test	 edx, edx
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx
  00009	75 0f		 jne	 SHORT $L153139
  0000b	33 c0		 xor	 eax, eax
  0000d	50		 push	 eax
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 984  : 
; 985  : 		return( *this );

  00014	8b c7		 mov	 eax, edi
  00016	5f		 pop	 edi

; 986  : 	}

  00017	c2 04 00	 ret	 4

; 983  : 		CThisSimpleString::operator=( pszSrc );

$L153139:
  0001a	8b c2		 mov	 eax, edx
  0001c	56		 push	 esi
  0001d	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$L153142:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L153142
  00027	2b c6		 sub	 eax, esi
  00029	5e		 pop	 esi
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	8b cf		 mov	 ecx, edi
  0002e	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 984  : 
; 985  : 		return( *this );

  00033	8b c7		 mov	 eax, edi
  00035	5f		 pop	 edi

; 986  : 	}

  00036	c2 04 00	 ret	 4
??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::operator=
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 323  : 		{	// construct by copying _Right

  00000	56		 push	 esi

; 324  : 		_Tidy();

  00001	33 c0		 xor	 eax, eax
  00003	8b f1		 mov	 esi, ecx

; 325  : 		assign(_Right, 0, npos);

  00005	6a ff		 push	 -1
  00007	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	50		 push	 eax
  00012	88 46 04	 mov	 BYTE PTR [esi+4], al
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Right$[esp+8]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 326  : 		}

  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??1?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@XZ ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::~vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??1?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::~vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >, COMDAT
; _this$ = ecx

; 387  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 388  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L153221
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L153221:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 389  : 		}

  00029	c3		 ret	 0
??1?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@XZ ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::~vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 621  : 		{	// assign [_Ptr, <null>)

  00000	56		 push	 esi

; 622  : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __Ptr$[esp]
  00005	8b c6		 mov	 eax, esi
  00007	57		 push	 edi
  00008	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000b	eb 03 8d 49 00	 npad	 5
$L153229:
  00010	8a 10		 mov	 dl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 d2		 test	 dl, dl
  00015	75 f9		 jne	 SHORT $L153229
  00017	2b c7		 sub	 eax, edi
  00019	50		 push	 eax
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi

; 623  : 		}

  00022	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 361  : 		_Tidy();
; 362  : 		assign(_Ptr);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Ptr$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b c2		 mov	 eax, edx
  00009	57		 push	 edi
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00018	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  0001c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0001f	90		 npad	 1
$L153304:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L153304
  00027	2b c7		 sub	 eax, edi
  00029	50		 push	 eax
  0002a	52		 push	 edx
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00032	5f		 pop	 edi

; 363  : 		}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??1tagTGUILDMEMBER@@QAE@XZ			; tagTGUILDMEMBER::~tagTGUILDMEMBER
; Function compile flags: /Ogty
;	COMDAT ??1tagTGUILDMEMBER@@QAE@XZ
_TEXT	SEGMENT
??1tagTGUILDMEMBER@@QAE@XZ PROC NEAR			; tagTGUILDMEMBER::~tagTGUILDMEMBER, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L153327
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L153327:
  00013	c7 46 24 00 00
	00 00		 mov	 DWORD PTR [esi+36], 0
  0001a	c7 46 28 00 00
	00 00		 mov	 DWORD PTR [esi+40], 0
  00021	c7 46 2c 00 00
	00 00		 mov	 DWORD PTR [esi+44], 0
  00028	8b 76 0c	 mov	 esi, DWORD PTR [esi+12]
  0002b	83 ee 10	 sub	 esi, 16			; 00000010H
  0002e	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00031	83 c9 ff	 or	 ecx, -1
  00034	f0 0f c1 08	 lock	  xadd	 DWORD PTR [eax], ecx
  00038	49		 dec	 ecx
  00039	85 c9		 test	 ecx, ecx
  0003b	7f 08		 jg	 SHORT $L153354
  0003d	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0003f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00041	56		 push	 esi
  00042	ff 52 04	 call	 DWORD PTR [edx+4]
$L153354:
  00045	5e		 pop	 esi
  00046	c3		 ret	 0
??1tagTGUILDMEMBER@@QAE@XZ ENDP				; tagTGUILDMEMBER::~tagTGUILDMEMBER
_TEXT	ENDS
PUBLIC	?CalcWeekRecord@CTGuild@@QAEXK@Z		; CTGuild::CalcWeekRecord
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tguild.cpp
;	COMDAT ?CalcWeekRecord@CTGuild@@QAEXK@Z
_TEXT	SEGMENT
_it$ = -4						; size = 4
_dwDate$ = 8						; size = 4
?CalcWeekRecord@CTGuild@@QAEXK@Z PROC NEAR		; CTGuild::CalcWeekRecord, COMDAT
; _this$ = ecx

; 612  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 613  : 	MAPTGUILDMEMBER::iterator it;
; 614  : 	for(it=m_mapTMember.begin(); it!=m_mapTMember.end(); it++)

  00004	8b 4e 74	 mov	 ecx, DWORD PTR [esi+116]
  00007	8b 01		 mov	 eax, DWORD PTR [ecx]
  00009	3b c1		 cmp	 eax, ecx
  0000b	89 44 24 04	 mov	 DWORD PTR _it$[esp+8], eax
  0000f	74 24		 je	 SHORT $L135206
  00011	57		 push	 edi
  00012	8b 7c 24 10	 mov	 edi, DWORD PTR _dwDate$[esp+8]
$L153409:

; 615  : 		CalcWeekRecord((*it).second, dwDate);

  00016	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00019	57		 push	 edi
  0001a	50		 push	 eax
  0001b	8b ce		 mov	 ecx, esi
  0001d	e8 00 00 00 00	 call	 ?CalcWeekRecord@CTGuild@@QAEXPAUtagTGUILDMEMBER@@K@Z ; CTGuild::CalcWeekRecord
  00022	8d 4c 24 08	 lea	 ecx, DWORD PTR _it$[esp+12]
  00026	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc
  0002b	8b 44 24 08	 mov	 eax, DWORD PTR _it$[esp+12]
  0002f	3b 46 74	 cmp	 eax, DWORD PTR [esi+116]
  00032	75 e2		 jne	 SHORT $L153409
  00034	5f		 pop	 edi
$L135206:
  00035	5e		 pop	 esi

; 616  : }

  00036	59		 pop	 ecx
  00037	c2 04 00	 ret	 4
?CalcWeekRecord@CTGuild@@QAEXK@Z ENDP			; CTGuild::CalcWeekRecord
_TEXT	ENDS
PUBLIC	??$fill@PAUtagTGUILDPOINTREWARD@@U1@@std@@YAXPAUtagTGUILDPOINTREWARD@@0ABU1@@Z ; std::fill<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$fill@PAUtagTGUILDPOINTREWARD@@U1@@std@@YAXPAUtagTGUILDPOINTREWARD@@0ABU1@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Val$ = 16						; size = 4
??$fill@PAUtagTGUILDPOINTREWARD@@U1@@std@@YAXPAUtagTGUILDPOINTREWARD@@0ABU1@@Z PROC NEAR ; std::fill<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD>, COMDAT

; 1134 : 	{	// copy _Val through [_First, _Last)

  00000	53		 push	 ebx

; 1135 : 	for (; _First != _Last; ++_First)

  00001	8b 5c 24 0c	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 0c	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	3b f3		 cmp	 esi, ebx
  0000c	74 27		 je	 SHORT $L138981
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Val$[esp+8]
$L138979:

; 1136 : 		*_First = _Val;

  00013	57		 push	 edi
  00014	8b ce		 mov	 ecx, esi
  00016	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=
  0001b	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0001e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00021	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00024	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00027	8b 57 0c	 mov	 edx, DWORD PTR [edi+12]
  0002a	89 56 0c	 mov	 DWORD PTR [esi+12], edx
  0002d	83 c6 10	 add	 esi, 16			; 00000010H
  00030	3b f3		 cmp	 esi, ebx
  00032	75 df		 jne	 SHORT $L138979
  00034	5f		 pop	 edi
$L138981:
  00035	5e		 pop	 esi
  00036	5b		 pop	 ebx

; 1137 : 	}

  00037	c3		 ret	 0
??$fill@PAUtagTGUILDPOINTREWARD@@U1@@std@@YAXPAUtagTGUILDPOINTREWARD@@0ABU1@@Z ENDP ; std::fill<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD>
_TEXT	ENDS
PUBLIC	??$copy_backward@PAUtagTGUILDPOINTREWARD@@PAU1@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00@Z ; std::copy_backward<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *>
; Function compile flags: /Ogty
;	COMDAT ??$copy_backward@PAUtagTGUILDPOINTREWARD@@PAU1@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00@Z
_TEXT	SEGMENT
__Cat$153476 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
??$copy_backward@PAUtagTGUILDPOINTREWARD@@PAU1@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00@Z PROC NEAR ; std::copy_backward<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *>, COMDAT

; 1067 : 	{	// copy [_First, _Last) backwards to [..., _Dest)

  00000	51		 push	 ecx

; 1068 : 	return (_Copy_backward_opt(_First, _Last, _Dest,
; 1069 : 		_Ptr_cat(_First, _Dest)));

  00001	8b 04 24	 mov	 eax, DWORD PTR __Cat$153476[esp+4]
  00004	8b 4c 24 10	 mov	 ecx, DWORD PTR __Dest$[esp]
  00008	8b 54 24 0c	 mov	 edx, DWORD PTR __Last$[esp]
  0000c	50		 push	 eax
  0000d	8b 44 24 0c	 mov	 eax, DWORD PTR __First$[esp+4]
  00011	51		 push	 ecx
  00012	52		 push	 edx
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Copy_backward_opt@PAUtagTGUILDPOINTREWARD@@PAU1@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_backward_opt<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *>

; 1070 : 	}

  00019	83 c4 14	 add	 esp, 20			; 00000014H
  0001c	c3		 ret	 0
??$copy_backward@PAUtagTGUILDPOINTREWARD@@PAU1@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00@Z ENDP ; std::copy_backward<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@0AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@0AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@0AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >, COMDAT

; 224  : 	{	// destroy [_First, _Last), arbitrary type

  00000	56		 push	 esi

; 225  : 	for (; _First != _Last; ++_First)

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __First$[esp]
  00005	57		 push	 edi
  00006	8b 7c 24 10	 mov	 edi, DWORD PTR __Last$[esp+4]
  0000a	3b f7		 cmp	 esi, edi
  0000c	74 10		 je	 SHORT $L139307
  0000e	8b ff		 npad	 2
$L139305:

; 226  : 		_Al.destroy(_First);

  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ??1tagTGUILDPOINTREWARD@@QAE@XZ
  00017	83 c6 10	 add	 esi, 16			; 00000010H
  0001a	3b f7		 cmp	 esi, edi
  0001c	75 f2		 jne	 SHORT $L139305
$L139307:
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 227  : 	}

  00020	c3		 ret	 0
??$_Destroy_range@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@0AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@PAUtagTGUILDPOINTREWARD@@PAU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@@Z ; std::_Uninitialized_copy<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *,std::allocator<tagTGUILDPOINTREWARD> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninitialized_copy@PAUtagTGUILDPOINTREWARD@@PAU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@@Z
_TEXT	SEGMENT
__Cat$153507 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAUtagTGUILDPOINTREWARD@@PAU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@@Z PROC NEAR ; std::_Uninitialized_copy<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *,std::allocator<tagTGUILDPOINTREWARD> >, COMDAT

; 126  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

  00000	51		 push	 ecx

; 127  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 128  : 		_Ptr_cat(_First, _Dest)));

  00001	8b 04 24	 mov	 eax, DWORD PTR __Cat$153507[esp+4]
  00004	8b 4c 24 14	 mov	 ecx, DWORD PTR __Al$[esp]
  00008	8b 54 24 10	 mov	 edx, DWORD PTR __Dest$[esp]
  0000c	50		 push	 eax
  0000d	8b 44 24 10	 mov	 eax, DWORD PTR __Last$[esp+4]
  00011	51		 push	 ecx
  00012	8b 4c 24 10	 mov	 ecx, DWORD PTR __First$[esp+8]
  00016	52		 push	 edx
  00017	50		 push	 eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAUtagTGUILDPOINTREWARD@@PAU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *,std::allocator<tagTGUILDPOINTREWARD> >

; 129  : 	}

  0001e	83 c4 18	 add	 esp, 24			; 00000018H
  00021	c3		 ret	 0
??$_Uninitialized_copy@PAUtagTGUILDPOINTREWARD@@PAU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@@Z ENDP ; std::_Uninitialized_copy<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *,std::allocator<tagTGUILDPOINTREWARD> >
_TEXT	ENDS
PUBLIC	??$_Uninit_fill_n@PAUtagTGUILDPOINTREWARD@@IU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@IABU1@AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<tagTGUILDPOINTREWARD *,unsigned int,tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T153849 DD	0ffffffffH
	DD	00H
	DD	00H
	DD	FLAT:$L153520
	DD	0ffffffffH
	DD	00H
$T153851 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L153513
$T153850 DD	00H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:$T153851
$T153842 DD	019930520H
	DD	03H
	DD	FLAT:$T153849
	DD	01H
	DD	FLAT:$T153850
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\memory
xdata$x	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagTGUILDPOINTREWARD@@IU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@IABU1@AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
$T153739 = -24						; size = 4
__Next$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_fill_n@PAUtagTGUILDPOINTREWARD@@IU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@IABU1@AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_fill_n<tagTGUILDPOINTREWARD *,unsigned int,tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >, COMDAT

; 207  : 	{	// copy _Count *_Val to raw _First, using _Al, arbitrary type

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninit_fill_n@PAUtagTGUILDPOINTREWARD@@IU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@IABU1@AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH
  0001b	53		 push	 ebx

; 208  : 	_FwdIt _Next = _First;

  0001c	8b 5d 08	 mov	 ebx, DWORD PTR __First$[ebp]
  0001f	56		 push	 esi
  00020	57		 push	 edi
  00021	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00024	89 5d ec	 mov	 DWORD PTR __Next$[ebp], ebx

; 209  : 
; 210  : 	_TRY_BEGIN

  00027	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  0002e	8b ff		 npad	 2
$L139356:

; 211  : 	for (; 0 < _Count; --_Count, ++_First)

  00030	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00033	85 c0		 test	 eax, eax
  00035	0f 86 d1 00 00
	00		 jbe	 $L139358

; 212  : 		_Al.construct(_First, _Val);

  0003b	89 5d e8	 mov	 DWORD PTR $T153739[ebp], ebx
  0003e	85 db		 test	 ebx, ebx
  00040	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  00044	74 78		 je	 SHORT $L153740
  00046	8b 7d 10	 mov	 edi, DWORD PTR __Val$[ebp]
  00049	8b 37		 mov	 esi, DWORD PTR [edi]
  0004b	8b 4e f0	 mov	 ecx, DWORD PTR [esi-16]
  0004e	8b 01		 mov	 eax, DWORD PTR [ecx]
  00050	83 ee 10	 sub	 esi, 16			; 00000010H
  00053	ff 50 10	 call	 DWORD PTR [eax+16]
  00056	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  00059	85 d2		 test	 edx, edx
  0005b	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0005e	7c 11		 jl	 SHORT $L153718
  00060	3b 06		 cmp	 eax, DWORD PTR [esi]
  00062	75 0d		 jne	 SHORT $L153718
  00064	8b c6		 mov	 eax, esi
  00066	ba 01 00 00 00	 mov	 edx, 1
  0006b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0006f	eb 36		 jmp	 SHORT $L153730
$L153718:
  00071	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00074	8b 10		 mov	 edx, DWORD PTR [eax]
  00076	6a 01		 push	 1
  00078	51		 push	 ecx
  00079	8b c8		 mov	 ecx, eax
  0007b	ff 12		 call	 DWORD PTR [edx]
  0007d	85 c0		 test	 eax, eax
  0007f	75 05		 jne	 SHORT $L153720
  00081	e9 00 00 00 00	 jmp	 ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L153720:
  00086	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00089	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0008c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0008f	41		 inc	 ecx
  00090	8b d1		 mov	 edx, ecx
  00092	c1 e9 02	 shr	 ecx, 2
  00095	83 c6 10	 add	 esi, 16			; 00000010H
  00098	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  0009b	f3 a5		 rep movsd
  0009d	8b ca		 mov	 ecx, edx
  0009f	83 e1 03	 and	 ecx, 3
  000a2	f3 a4		 rep movsb
  000a4	8b 7d 10	 mov	 edi, DWORD PTR __Val$[ebp]
$L153730:
  000a7	83 c0 10	 add	 eax, 16			; 00000010H
  000aa	89 03		 mov	 DWORD PTR [ebx], eax
  000ac	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000af	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  000b2	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  000b5	89 4b 08	 mov	 DWORD PTR [ebx+8], ecx
  000b8	8b 57 0c	 mov	 edx, DWORD PTR [edi+12]
  000bb	89 53 0c	 mov	 DWORD PTR [ebx+12], edx
$L153740:
  000be	8b 4d 0c	 mov	 ecx, DWORD PTR __Count$[ebp]
  000c1	49		 dec	 ecx
  000c2	83 c3 10	 add	 ebx, 16			; 00000010H
  000c5	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+12], 0
  000c9	89 4d 0c	 mov	 DWORD PTR __Count$[ebp], ecx
  000cc	89 5d 08	 mov	 DWORD PTR __First$[ebp], ebx
  000cf	e9 5c ff ff ff	 jmp	 $L139356
$L153513:

; 213  : 	_CATCH_ALL
; 214  : 	for (; _Next != _First; ++_Next)

  000d4	8b 75 ec	 mov	 esi, DWORD PTR __Next$[ebp]
  000d7	8b 7d 08	 mov	 edi, DWORD PTR __First$[ebp]
  000da	3b f7		 cmp	 esi, edi
  000dc	74 25		 je	 SHORT $L139361
  000de	8b ff		 npad	 2
$L139359:

; 215  : 		_Al.destroy(_Next);

  000e0	8b 06		 mov	 eax, DWORD PTR [esi]
  000e2	83 e8 10	 sub	 eax, 16			; 00000010H
  000e5	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000e8	83 ca ff	 or	 edx, -1
  000eb	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ef	4a		 dec	 edx
  000f0	85 d2		 test	 edx, edx
  000f2	7f 08		 jg	 SHORT $L153837
  000f4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f8	50		 push	 eax
  000f9	ff 52 04	 call	 DWORD PTR [edx+4]
$L153837:
  000fc	83 c6 10	 add	 esi, 16			; 00000010H
  000ff	3b f7		 cmp	 esi, edi
  00101	75 dd		 jne	 SHORT $L139359
$L139361:

; 216  : 	_RERAISE;

  00103	6a 00		 push	 0
  00105	6a 00		 push	 0
  00107	e8 00 00 00 00	 call	 __CxxThrowException@8
$L153852:
$L139358:

; 217  : 	_CATCH_END
; 218  : 	}

  0010c	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  0010f	5f		 pop	 edi
  00110	5e		 pop	 esi
  00111	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00118	5b		 pop	 ebx
  00119	8b e5		 mov	 esp, ebp
  0011b	5d		 pop	 ebp
  0011c	c3		 ret	 0
$L153848:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L153520:
  00000	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00003	50		 push	 eax
  00004	8b 4d e8	 mov	 ecx, DWORD PTR $T153739[ebp]
  00007	51		 push	 ecx
  00008	e8 00 00 00 00	 call	 ??3@YAXPAX0@Z		; operator delete
  0000d	83 c4 08	 add	 esp, 8
  00010	c3		 ret	 0
__ehhandler$??$_Uninit_fill_n@PAUtagTGUILDPOINTREWARD@@IU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@IABU1@AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z:
  00011	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T153842
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??$_Uninit_fill_n@PAUtagTGUILDPOINTREWARD@@IU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@IABU1@AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_fill_n<tagTGUILDPOINTREWARD *,unsigned int,tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
EXTRN	??0exception@@QAE@XZ:NEAR			; exception::exception
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T153956 DD	0ffffffffH
	DD	FLAT:$L153857
$T153954 DD	019930520H
	DD	01H
	DD	FLAT:$T153956
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 19   : 		{	// construct from message string

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	89 74 24 04	 mov	 DWORD PTR _this$[esp+20], esi
  0001d	e8 00 00 00 00	 call	 ??0exception@@QAE@XZ	; exception::exception
  00022	33 c0		 xor	 eax, eax
  00024	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00027	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  0002d	6a ff		 push	 -1
  0002f	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00032	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00039	50		 push	 eax
  0003a	89 44 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], eax
  0003e	88 41 04	 mov	 BYTE PTR [ecx+4], al
  00041	8b 44 24 20	 mov	 eax, DWORD PTR __Message$[esp+24]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 20   : 		}

  0004b	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0004f	8b c6		 mov	 eax, esi
  00051	5e		 pop	 esi
  00052	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L153857:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T153954
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_Glength_error@std@@UAEPAXI@Z			; std::length_error::`scalar deleting destructor'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:NEAR		; std::length_error::`vector deleting destructor'
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::length_error::length_error, COMDAT
; _this$ = ecx

; 95   : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@

; 96   : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
; Function compile flags: /Ogty
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC NEAR		; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1length_error@std@@UAE@XZ ; std::length_error::~length_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L153966
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L153966:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
??1length_error@std@@UAE@XZ PROC NEAR			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 99   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L154059
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L154059:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
_TEXT	ENDS
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_Gout_of_range@std@@UAEPAXI@Z			; std::out_of_range::`scalar deleting destructor'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:NEAR		; std::out_of_range::`vector deleting destructor'
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_Eout_of_range@std@@UAEPAXI@Z ; std::out_of_range::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 118  : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@

; 119  : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
; Function compile flags: /Ogty
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC NEAR		; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1out_of_range@std@@UAE@XZ ; std::out_of_range::~out_of_range
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L154080
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L154080:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
??1out_of_range@std@@UAE@XZ PROC NEAR			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx

; 122  : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L154173
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L154173:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
_TEXT	ENDS
PUBLIC	??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T154270 DD	0ffffffffH
	DD	FLAT:$L154190
$T154264 DD	019930520H
	DD	01H
	DD	FLAT:$T154270
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
xdata$x	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszSrc$ = 8						; size = 4
??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 830  : 	{

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  0001b	56		 push	 esi
  0001c	8b f1		 mov	 esi, ecx
  0001e	57		 push	 edi
  0001f	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  00024	89 74 24 08	 mov	 DWORD PTR _this$[esp+24], esi
  00028	ff 50 0c	 call	 DWORD PTR [eax+12]
  0002b	83 c0 10	 add	 eax, 16			; 00000010H
  0002e	89 06		 mov	 DWORD PTR [esi], eax

; 831  : 		if( !CheckImplicitLoad( pszSrc ) )

  00030	8b 54 24 1c	 mov	 edx, DWORD PTR _pszSrc$[esp+20]
  00034	85 d2		 test	 edx, edx
  00036	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  0003e	74 38		 je	 SHORT $L154266
  00040	f7 c2 00 00 ff
	ff		 test	 edx, -65536		; ffff0000H
  00046	75 34		 jne	 SHORT $L154259
  00048	0f b7 fa	 movzx	 edi, dx
  0004b	6a 00		 push	 0
  0004d	57		 push	 edi
  0004e	e8 00 00 00 00	 call	 ?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z ; ATL::AtlFindStringResourceInstance
  00053	83 c4 08	 add	 esp, 8
  00056	85 c0		 test	 eax, eax
  00058	74 39		 je	 SHORT $L154268
  0005a	57		 push	 edi
  0005b	50		 push	 eax
  0005c	8b ce		 mov	 ecx, esi
  0005e	e8 00 00 00 00	 call	 ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::LoadStringA
  00063	5f		 pop	 edi

; 835  : 		}
; 836  : 	}

  00064	8b c6		 mov	 eax, esi
  00066	5e		 pop	 esi
  00067	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00072	83 c4 10	 add	 esp, 16			; 00000010H
  00075	c2 04 00	 ret	 4
$L154266:

; 832  : 		{
; 833  : 			// nDestLength is in XCHARs
; 834  : 			*this = pszSrc;

  00078	33 c0		 xor	 eax, eax
  0007a	eb 0e		 jmp	 SHORT $L154258
$L154259:
  0007c	8b c2		 mov	 eax, edx
  0007e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
$L154267:
  00081	8a 08		 mov	 cl, BYTE PTR [eax]
  00083	40		 inc	 eax
  00084	84 c9		 test	 cl, cl
  00086	75 f9		 jne	 SHORT $L154267
  00088	2b c7		 sub	 eax, edi
$L154258:
  0008a	50		 push	 eax
  0008b	52		 push	 edx
  0008c	8b ce		 mov	 ecx, esi
  0008e	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
$L154268:

; 835  : 		}
; 836  : 	}

  00093	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00097	5f		 pop	 edi
  00098	8b c6		 mov	 eax, esi
  0009a	5e		 pop	 esi
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a2	83 c4 10	 add	 esp, 16			; 00000010H
  000a5	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L154190:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ ; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
__ehhandler$??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T154264
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
PUBLIC	??_GtagTGUILDMEMBER@@QAEPAXI@Z			; tagTGUILDMEMBER::`scalar deleting destructor'
; Function compile flags: /Ogty
;	COMDAT ??_GtagTGUILDMEMBER@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GtagTGUILDMEMBER@@QAEPAXI@Z PROC NEAR		; tagTGUILDMEMBER::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1tagTGUILDMEMBER@@QAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L154276
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L154276:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GtagTGUILDMEMBER@@QAEPAXI@Z ENDP			; tagTGUILDMEMBER::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTITEM@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Insert
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T154651 DD	0ffffffffH
	DD	FLAT:$L154282
$T154646 DD	019930520H
	DD	01H
	DD	FLAT:$T154651
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@ DB 'map/set<T> too l'
	DB	'ong', 00H					; `string'
CONST	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
; Function compile flags: /Ogty
_DATA	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTITEM@@@2@@Z
_TEXT	SEGMENT
$T154281 = -80						; size = 28
$T154280 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTITEM@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTITEM@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L136858

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T154281[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T154281[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T154281[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T154281[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T154281[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T154280[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T154280[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T154280[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L154652:
$L136858:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTITEM@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L136864

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L136869
$L136864:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L136866

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L136869

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L136869
$L136866:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L136869

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L136869:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L136873
  000e5	55		 push	 ebp
$L136872:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L136874

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L136875
$L154650:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L136880
$L136875:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L136877

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Lrotate
$L136877:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L136880
$L136874:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L154650

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L136881

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Rrotate
$L136881:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Lrotate
$L136880:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L136872
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L136873:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L154649:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L154282:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T154281[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTITEM@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T154646
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTITEM@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T154757 DD	0ffffffffH
	DD	FLAT:$L154658
$T154755 DD	019930520H
	DD	01H
	DD	FLAT:$T154757
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC NEAR		; std::logic_error::logic_error, COMDAT
; _this$ = ecx
  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV01@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b 7c 24 1c	 mov	 edi, DWORD PTR ___that$[esp+20]
  0001c	8b f1		 mov	 esi, ecx
  0001e	57		 push	 edi
  0001f	89 74 24 0c	 mov	 DWORD PTR _this$[esp+28], esi
  00023	e8 00 00 00 00	 call	 ??0exception@@QAE@ABV0@@Z ; exception::exception
  00028	33 c0		 xor	 eax, eax
  0002a	6a ff		 push	 -1
  0002c	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00035	50		 push	 eax
  00036	83 c7 0c	 add	 edi, 12			; 0000000cH
  00039	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00040	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00043	57		 push	 edi
  00044	89 44 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], eax
  00048	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0004b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00050	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00054	5f		 pop	 edi
  00055	8b c6		 mov	 eax, esi
  00057	5e		 pop	 esi
  00058	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005f	83 c4 10	 add	 esp, 16			; 00000010H
  00062	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L154658:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T154755
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
; Function compile flags: /Ogty
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC NEAR		; std::length_error::length_error, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
_TEXT	ENDS
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T155138 DD	0ffffffffH
	DD	FLAT:$L154769
$T155133 DD	019930520H
	DD	01H
	DD	FLAT:$T155138
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z
_TEXT	SEGMENT
$T154768 = -80						; size = 28
$T154767 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L136957

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T154768[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T154768[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T154768[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T154768[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T154768[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T154767[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T154767[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T154767[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L155139:
$L136957:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L136962

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L136967
$L136962:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L136964

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L136967

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L136967
$L136964:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L136967

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L136967:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L136971
  000e5	55		 push	 ebp
$L136970:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L136972

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L136973
$L155137:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L136978
$L136973:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L136975

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Lrotate
$L136975:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L136978
$L136972:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L155137

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L136979

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Rrotate
$L136979:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Lrotate
$L136978:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L136970
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L136971:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L155136:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L154769:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T154768[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155133
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Insert
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T155516 DD	0ffffffffH
	DD	FLAT:$L155147
$T155511 DD	019930520H
	DD	01H
	DD	FLAT:$T155516
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z
_TEXT	SEGMENT
$T155146 = -80						; size = 28
$T155145 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L137055

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T155146[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T155146[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T155146[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T155146[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T155146[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T155145[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T155145[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T155145[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L155517:
$L137055:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L137060

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L137065
$L137060:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L137062

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L137065

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L137065
$L137062:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L137065

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L137065:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L137069
  000e5	55		 push	 ebp
$L137068:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L137070

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L137071
$L155515:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L137076
$L137071:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L137073

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Lrotate
$L137073:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L137076
$L137070:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L155515

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L137077

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Rrotate
$L137077:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Lrotate
$L137076:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L137068
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L137069:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L155514:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L155147:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T155146[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155511
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Insert
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T155894 DD	0ffffffffH
	DD	FLAT:$L155525
$T155889 DD	019930520H
	DD	01H
	DD	FLAT:$T155894
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z
_TEXT	SEGMENT
$T155524 = -80						; size = 28
$T155523 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 1f		 cmp	 DWORD PTR [edi+8], 536870910 ; 1ffffffeH
  00023	72 4c		 jb	 SHORT $L137153

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T155524[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T155524[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T155524[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T155524[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T155524[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T155523[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T155523[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T155523[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L155895:
$L137153:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L137158

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L137163
$L137158:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L137160

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L137163

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L137163
$L137160:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L137163

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L137163:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L137167
  000e5	55		 push	 ebp
$L137166:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L137168

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0
  000f9	75 18		 jne	 SHORT $L137169
$L155893:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 14	 mov	 BYTE PTR [ecx+20], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 14 00	 mov	 BYTE PTR [ecx+20], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L137174
$L137169:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L137171

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Lrotate
$L137171:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L137174
$L137168:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 14 00	 cmp	 BYTE PTR [edx+20], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L155893

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L137175

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Rrotate
$L137175:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 14 00	 mov	 BYTE PTR [edx+20], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Lrotate
$L137174:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 14	 mov	 cl, BYTE PTR [edx+20]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L137166
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L137167:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L155892:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L155525:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T155524[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T155889
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Insert
PUBLIC	?_Insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBGG@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Insert
;	COMDAT xdata$x
xdata$x	SEGMENT
$T156272 DD	0ffffffffH
	DD	FLAT:$L155903
$T156267 DD	019930520H
	DD	01H
	DD	FLAT:$T156272
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?_Insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBGG@2@@Z
_TEXT	SEGMENT
$T155902 = -80						; size = 28
$T155901 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Addleft$ = 12						; size = 1
__Wherenode$ = 16					; size = 4
__Newnode$ = 20						; size = 4
__Val$ = 20						; size = 4
?_Insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBGG@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Insert, COMDAT
; _this$ = ecx

; 911  : 		{	// add node with value next to _Wherenode, to left if _Addnode

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBGG@2@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 912  : 		if (max_size() - 1 <= _Mysize)

  0001c	81 7f 08 fe ff
	ff 3f		 cmp	 DWORD PTR [edi+8], 1073741822 ; 3ffffffeH
  00023	72 4c		 jb	 SHORT $L137383

; 913  : 			_THROW(length_error, "map/set<T> too long");

  00025	6a 13		 push	 19			; 00000013H
  00027	33 f6		 xor	 esi, esi
  00029	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@JONHPENG@map?1set?$DMT?$DO?5too?5long?$AA@
  0002e	8d 4c 24 10	 lea	 ecx, DWORD PTR $T155902[esp+96]
  00032	c7 44 24 28 0f
	00 00 00	 mov	 DWORD PTR $T155902[esp+120], 15 ; 0000000fH
  0003a	89 74 24 24	 mov	 DWORD PTR $T155902[esp+116], esi
  0003e	c6 44 24 14 00	 mov	 BYTE PTR $T155902[esp+100], 0
  00043	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00048	8d 44 24 08	 lea	 eax, DWORD PTR $T155902[esp+88]
  0004c	50		 push	 eax
  0004d	8d 4c 24 28	 lea	 ecx, DWORD PTR $T155901[esp+92]
  00051	89 74 24 58	 mov	 DWORD PTR __$EHRec$[esp+100], esi
  00055	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005a	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  0005f	8d 4c 24 28	 lea	 ecx, DWORD PTR $T155901[esp+92]
  00063	51		 push	 ecx
  00064	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR $T155901[esp+96], OFFSET FLAT:??_7length_error@std@@6B@
  0006c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L156273:
$L137383:

; 914  : 		_Nodeptr _Newnode = _Buynode(_Myhead, _Wherenode, _Myhead,
; 915  : 			_Val, _Red);

  00071	8b 54 24 68	 mov	 edx, DWORD PTR __Val$[esp+84]
  00075	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00078	8b 74 24 64	 mov	 esi, DWORD PTR __Wherenode$[esp+84]
  0007c	53		 push	 ebx
  0007d	6a 00		 push	 0
  0007f	52		 push	 edx
  00080	50		 push	 eax
  00081	56		 push	 esi
  00082	50		 push	 eax
  00083	8b cf		 mov	 ecx, edi
  00085	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@PAU342@00ABU?$pair@$$CBGG@2@D@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Buynode

; 916  : 
; 917  : 		++_Mysize;

  0008a	8b 5f 08	 mov	 ebx, DWORD PTR [edi+8]
  0008d	8b c8		 mov	 ecx, eax

; 918  : 		if (_Wherenode == _Myhead)

  0008f	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00092	43		 inc	 ebx
  00093	3b f0		 cmp	 esi, eax
  00095	89 4c 24 6c	 mov	 DWORD PTR __Newnode$[esp+88], ecx
  00099	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0009c	75 10		 jne	 SHORT $L137388

; 919  : 			{	// first node in tree, just set head values
; 920  : 			_Root() = _Newnode;

  0009e	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 921  : 			_Lmost() = _Newnode, _Rmost() = _Newnode;

  000a1	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000a4	89 08		 mov	 DWORD PTR [eax], ecx
  000a6	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a9	89 4a 08	 mov	 DWORD PTR [edx+8], ecx

; 922  : 			}
; 923  : 		else if (_Addleft)

  000ac	eb 23		 jmp	 SHORT $L137393
$L137388:
  000ae	8a 44 24 64	 mov	 al, BYTE PTR __Addleft$[esp+88]
  000b2	84 c0		 test	 al, al
  000b4	74 0d		 je	 SHORT $L137390

; 924  : 			{	// add to left of _Wherenode
; 925  : 			_Left(_Wherenode) = _Newnode;

  000b6	89 0e		 mov	 DWORD PTR [esi], ecx

; 926  : 			if (_Wherenode == _Lmost())

  000b8	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bb	3b 30		 cmp	 esi, DWORD PTR [eax]
  000bd	75 12		 jne	 SHORT $L137393

; 927  : 				_Lmost() = _Newnode;

  000bf	89 08		 mov	 DWORD PTR [eax], ecx

; 928  : 			}
; 929  : 		else

  000c1	eb 0e		 jmp	 SHORT $L137393
$L137390:

; 930  : 			{	// add to right of _Wherenode
; 931  : 			_Right(_Wherenode) = _Newnode;

  000c3	89 4e 08	 mov	 DWORD PTR [esi+8], ecx

; 932  : 			if (_Wherenode == _Rmost())

  000c6	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000c9	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  000cc	75 03		 jne	 SHORT $L137393

; 933  : 				_Rmost() = _Newnode;

  000ce	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L137393:

; 934  : 			}
; 935  : 
; 936  : 		for (_Nodeptr _Pnode = _Newnode; _Color(_Parent(_Pnode)) == _Red; )

  000d1	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  000d4	80 7a 10 00	 cmp	 BYTE PTR [edx+16], 0
  000d8	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  000db	8b f1		 mov	 esi, ecx
  000dd	b3 01		 mov	 bl, 1
  000df	0f 85 a5 00 00
	00		 jne	 $L137397
  000e5	55		 push	 ebp
$L137396:

; 937  : 			if (_Parent(_Pnode) == _Left(_Parent(_Parent(_Pnode))))

  000e6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e8	8b 69 04	 mov	 ebp, DWORD PTR [ecx+4]
  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	3b ca		 cmp	 ecx, edx
  000f0	75 50		 jne	 SHORT $L137398

; 938  : 				{	// fixup red-red in left subtree
; 939  : 				_Wherenode = _Right(_Parent(_Parent(_Pnode)));

  000f2	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]

; 940  : 				if (_Color(_Wherenode) == _Red)

  000f5	80 7a 10 00	 cmp	 BYTE PTR [edx+16], 0
  000f9	75 18		 jne	 SHORT $L137399
$L156271:

; 941  : 					{	// parent has two red children, blacken both
; 942  : 					_Color(_Parent(_Pnode)) = _Black;

  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	88 59 10	 mov	 BYTE PTR [ecx+16], bl

; 943  : 					_Color(_Wherenode) = _Black;

  00100	88 5a 10	 mov	 BYTE PTR [edx+16], bl

; 944  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00103	8b 10		 mov	 edx, DWORD PTR [eax]
  00105	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00108	c6 41 10 00	 mov	 BYTE PTR [ecx+16], 0

; 945  : 					_Pnode = _Parent(_Parent(_Pnode));

  0010c	8b 10		 mov	 edx, DWORD PTR [eax]
  0010e	8b 72 04	 mov	 esi, DWORD PTR [edx+4]

; 946  : 					}
; 947  : 				else

  00111	eb 61		 jmp	 SHORT $L137404
$L137399:

; 948  : 					{	// parent has red and black children
; 949  : 					if (_Pnode == _Right(_Parent(_Pnode)))

  00113	3b 71 08	 cmp	 esi, DWORD PTR [ecx+8]
  00116	75 0a		 jne	 SHORT $L137401

; 950  : 						{	// rotate right child to left
; 951  : 						_Pnode = _Parent(_Pnode);

  00118	8b f1		 mov	 esi, ecx

; 952  : 						_Lrotate(_Pnode);

  0011a	56		 push	 esi
  0011b	8b cf		 mov	 ecx, edi
  0011d	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lrotate
$L137401:

; 953  : 						}
; 954  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	88 58 10	 mov	 BYTE PTR [eax+16], bl

; 955  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  00128	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0012b	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0012e	c6 42 10 00	 mov	 BYTE PTR [edx+16], 0

; 956  : 					_Rrotate(_Parent(_Parent(_Pnode)));

  00132	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00135	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00138	51		 push	 ecx
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Rrotate

; 957  : 					}
; 958  : 				}
; 959  : 			else

  00140	eb 32		 jmp	 SHORT $L137404
$L137398:

; 960  : 				{	// fixup red-red in right subtree
; 961  : 				_Wherenode = _Left(_Parent(_Parent(_Pnode)));
; 962  : 				if (_Color(_Wherenode) == _Red)

  00142	80 7a 10 00	 cmp	 BYTE PTR [edx+16], 0

; 963  : 					{	// parent has two red children, blacken both
; 964  : 					_Color(_Parent(_Pnode)) = _Black;
; 965  : 					_Color(_Wherenode) = _Black;
; 966  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;
; 967  : 					_Pnode = _Parent(_Parent(_Pnode));
; 968  : 					}
; 969  : 				else

  00146	74 b3		 je	 SHORT $L156271

; 970  : 					{	// parent has red and black children
; 971  : 					if (_Pnode == _Left(_Parent(_Pnode)))

  00148	3b 31		 cmp	 esi, DWORD PTR [ecx]
  0014a	75 0a		 jne	 SHORT $L137405

; 972  : 						{	// rotate left child to right
; 973  : 						_Pnode = _Parent(_Pnode);

  0014c	8b f1		 mov	 esi, ecx

; 974  : 						_Rrotate(_Pnode);

  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Rrotate
$L137405:

; 975  : 						}
; 976  : 					_Color(_Parent(_Pnode)) = _Black;	// propagate red up

  00156	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00159	88 58 10	 mov	 BYTE PTR [eax+16], bl

; 977  : 					_Color(_Parent(_Parent(_Pnode))) = _Red;

  0015c	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0015f	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00162	c6 42 10 00	 mov	 BYTE PTR [edx+16], 0

; 978  : 					_Lrotate(_Parent(_Parent(_Pnode)));

  00166	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00169	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0016c	51		 push	 ecx
  0016d	8b cf		 mov	 ecx, edi
  0016f	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Lrotate
$L137404:
  00174	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00177	8a 4a 10	 mov	 cl, BYTE PTR [edx+16]
  0017a	84 c9		 test	 cl, cl
  0017c	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  0017f	0f 84 61 ff ff
	ff		 je	 $L137396
  00185	8b 4c 24 70	 mov	 ecx, DWORD PTR __Newnode$[esp+92]
  00189	5d		 pop	 ebp
$L137397:

; 979  : 					}
; 980  : 				}
; 981  : 
; 982  : 		_Color(_Root()) = _Black;	// root is always black

  0018a	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0018d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]

; 983  : 		return (_TREE_ITERATOR(_Newnode));

  00190	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  00194	88 5a 10	 mov	 BYTE PTR [edx+16], bl
  00197	5b		 pop	 ebx
  00198	89 08		 mov	 DWORD PTR [eax], ecx

; 984  : 		}

  0019a	8b 4c 24 4c	 mov	 ecx, DWORD PTR __$EHRec$[esp+88]
  0019e	5f		 pop	 edi
  0019f	5e		 pop	 esi
  001a0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a7	83 c4 50	 add	 esp, 80			; 00000050H
  001aa	c2 10 00	 ret	 16			; 00000010H
$L156270:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L155903:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T155902[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBGG@2@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156267
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBGG@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Insert
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::erase
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T156770 DD	0ffffffffH
	DD	FLAT:$L156285
$T156762 DD	019930520H
	DD	01H
	DD	FLAT:$T156770
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
CONST	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
_DATA	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T156280 = -80						; size = 28
$T156279 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L137452

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T156280[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T156280[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T156280[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T156280[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T156280[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T156279[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T156279[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T156279[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L156771:
$L137452:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L137460

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L156765
$L137460:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L137462

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L156765
$L137462:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L137464
$L156765:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L137465

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L137465:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L137466

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L137469
$L137466:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L137468

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L137469
$L137468:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L137469:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L137470

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L156281
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L156282
$L156281:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L156282:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L137470:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L156598

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L156283
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L156598
$L156283:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L156598
$L137464:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L137473

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L137474
$L137473:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L137475

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L137475:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L137474:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L137476

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L137479
$L137476:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L137478

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L137479
$L137478:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L137479:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L156598:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L137480

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L137483
  0018e	8b ff		 npad	 2
$L137481:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L137483

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L137484

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L137485

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L137485:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L156768

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L137488
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L156769
$L137488:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L137490

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L137490:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L137483
$L137484:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L137492

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L137492:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L156768

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L137495
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L137495
$L156769:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L156768:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L137481

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L137483
$L137495:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L137497

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L137497:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Rrotate
$L137483:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L137480:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L137498

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L137498:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L156767:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156285:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T156280[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T156762
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC NEAR		; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T157272 DD	0ffffffffH
	DD	FLAT:$L156787
$T157264 DD	019930520H
	DD	01H
	DD	FLAT:$T157272
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T156782 = -80						; size = 28
$T156781 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L137569

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T156782[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T156782[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T156782[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T156782[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T156782[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T156781[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T156781[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T156781[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L157273:
$L137569:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L137577

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L157267
$L137577:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L137579

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L157267
$L137579:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L137581
$L157267:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L137582

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L137582:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L137583

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L137586
$L137583:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L137585

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L137586
$L137585:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L137586:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L137587

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L156783
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L156784
$L156783:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L156784:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L137587:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L157100

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L156785
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L157100
$L156785:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L157100
$L137581:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L137590

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L137591
$L137590:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L137592

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L137592:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L137591:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L137593

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L137596
$L137593:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L137595

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L137596
$L137595:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L137596:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L157100:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L137597

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L137600
  0018e	8b ff		 npad	 2
$L137598:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L137600

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L137601

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L137602

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L137602:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L157270

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L137605
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L157271
$L137605:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L137607

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L137607:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L137600
$L137601:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L137609

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L137609:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L157270

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L137612
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L137612
$L157271:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L157270:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L137598

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L137600
$L137612:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L137614

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L137614:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Rrotate
$L137600:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L137597:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L137615

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L137615:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L157269:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L156787:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T156782[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T157264
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T157770 DD	0ffffffffH
	DD	FLAT:$L157285
$T157762 DD	019930520H
	DD	01H
	DD	FLAT:$T157770
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T157280 = -80						; size = 28
$T157279 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L137686

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T157280[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T157280[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T157280[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T157280[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T157280[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T157279[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T157279[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T157279[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L157771:
$L137686:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L137694

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L157765
$L137694:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L137696

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L157765
$L137696:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L137698
$L157765:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L137699

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L137699:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L137700

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L137703
$L137700:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L137702

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L137703
$L137702:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L137703:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L137704

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L157281
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L157282
$L157281:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L157282:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L137704:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L157598

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L157283
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L157598
$L157283:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L157598
$L137698:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L137707

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L137708
$L137707:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L137709

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L137709:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L137708:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L137710

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L137713
$L137710:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L137712

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L137713
$L137712:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L137713:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L157598:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L137714

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L137717
  0018e	8b ff		 npad	 2
$L137715:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L137717

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L137718

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L137719

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L137719:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L157768

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L137722
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L157769
$L137722:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L137724

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L137724:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L137717
$L137718:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L137726

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L137726:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L157768

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L137729
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L137729
$L157769:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L157768:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L137715

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L137717
$L137729:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L137731

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L137731:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Rrotate
$L137717:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L137714:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L137732

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L137732:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L157767:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L157285:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T157280[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T157762
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::erase
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::erase
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T158268 DD	0ffffffffH
	DD	FLAT:$L157783
$T158260 DD	019930520H
	DD	01H
	DD	FLAT:$T158268
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T157778 = -80						; size = 28
$T157777 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L137803

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T157778[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T157778[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T157778[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T157778[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T157778[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T157777[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T157777[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T157777[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L158269:
$L137803:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L137811

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L158263
$L137811:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L137813

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L158263
$L137813:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L137815
$L158263:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L137816

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L137816:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L137817

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L137820
$L137817:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L137819

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L137820
$L137819:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L137820:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L137821

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L157779
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L157780
$L157779:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L157780:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L137821:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L158097

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L157781
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L158097
$L157781:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L158097
$L137815:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L137824

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L137825
$L137824:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L137826

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L137826:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L137825:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L137827

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L137830
$L137827:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L137829

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L137830
$L137829:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L137830:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L158097:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L137831

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L137834
  0018e	8b ff		 npad	 2
$L137832:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L137834

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L137835

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L137836

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L137836:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L158266

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L137839
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L158267
$L137839:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L137841

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L137841:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L137834
$L137835:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L137843

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L137843:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L158266

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L137846
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L137846
$L158267:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L158266:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L137832

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L137834
$L137846:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L137848

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L137848:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Rrotate
$L137834:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L137831:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L137849

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L137849:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L158265:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L157783:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T157778[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T158260
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::erase
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	SEGMENT
$T158391 DD	0ffffffffH
	DD	FLAT:$L158277
$T158388 DD	019930520H
	DD	01H
	DD	FLAT:$T158391
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
CONST	ENDS
;	COMDAT ?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T158276 = -80						; size = 28
$T158275 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen, COMDAT
; _this$ = ecx

; 883  : 		{	// report a length_error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 884  : 		_THROW(length_error, "vector<T> too long");

  00018	6a 12		 push	 18			; 00000012H
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T158276[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T158276[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T158276[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T158276[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T158276[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T158275[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T158275[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T158275[esp+88], OFFSET FLAT:??_7length_error@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L158392:
$L158390:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L158277:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T158276[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T158388
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
PUBLIC	?_Xlen@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IBEXXZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	SEGMENT
$T158514 DD	0ffffffffH
	DD	FLAT:$L158400
$T158511 DD	019930520H
	DD	01H
	DD	FLAT:$T158514
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	ENDS
;	COMDAT ?_Xlen@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T158399 = -80						; size = 28
$T158398 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IBEXXZ PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Xlen, COMDAT
; _this$ = ecx

; 883  : 		{	// report a length_error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xlen@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 884  : 		_THROW(length_error, "vector<T> too long");

  00018	6a 12		 push	 18			; 00000012H
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T158399[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T158399[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T158399[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T158399[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T158399[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T158398[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T158398[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T158398[esp+88], OFFSET FLAT:??_7length_error@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L158515:
$L158513:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L158400:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T158399[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xlen@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T158511
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xlen@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IBEXXZ ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Xlen
PUBLIC	??$_Destroy_range@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@0AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@@Z ; std::_Destroy_range<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@0AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@0AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@@Z PROC NEAR ; std::_Destroy_range<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >, COMDAT

; 216  : 	{	// destroy [_First, _Last)

  00000	56		 push	 esi

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __First$[esp]
  00005	57		 push	 edi
  00006	8b 7c 24 10	 mov	 edi, DWORD PTR __Last$[esp+4]
  0000a	3b f7		 cmp	 esi, edi
  0000c	74 10		 je	 SHORT $L158548
  0000e	8b ff		 npad	 2
$L158546:
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ??1tagTGUILDPOINTREWARD@@QAE@XZ
  00017	83 c6 10	 add	 esi, 16			; 00000010H
  0001a	3b f7		 cmp	 esi, edi
  0001c	75 f2		 jne	 SHORT $L158546
$L158548:
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 218  : 	}

  00020	c3		 ret	 0
??$_Destroy_range@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@0AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@@Z ENDP ; std::_Destroy_range<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >
_TEXT	ENDS
PUBLIC	??$_Ucopy@PAUtagTGUILDPOINTREWARD@@@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEPAUtagTGUILDPOINTREWARD@@PAU2@00@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Ucopy<tagTGUILDPOINTREWARD *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??$_Ucopy@PAUtagTGUILDPOINTREWARD@@@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEPAUtagTGUILDPOINTREWARD@@PAU2@00@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$158574 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Ucopy@PAUtagTGUILDPOINTREWARD@@@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEPAUtagTGUILDPOINTREWARD@@PAU2@00@Z PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Ucopy<tagTGUILDPOINTREWARD *>, COMDAT
; _this$ = ecx

; 802  : 		{	// copy initializing [_First, _Last), using allocator
; 803  : 		return (_Uninitialized_copy(_First, _Last,
; 804  : 			_Ptr, this->_Alval));

  00000	8b 44 24 0c	 mov	 eax, DWORD PTR __Cat$158574[esp-4]
  00004	8b 54 24 08	 mov	 edx, DWORD PTR __Last$[esp-4]
  00008	50		 push	 eax
  00009	8b 44 24 08	 mov	 eax, DWORD PTR __First$[esp]
  0000d	51		 push	 ecx
  0000e	8b 4c 24 14	 mov	 ecx, DWORD PTR __Ptr$[esp+4]
  00012	51		 push	 ecx
  00013	52		 push	 edx
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAUtagTGUILDPOINTREWARD@@PAU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *,std::allocator<tagTGUILDPOINTREWARD> >
  0001a	83 c4 14	 add	 esp, 20			; 00000014H

; 805  : 		}

  0001d	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@PAUtagTGUILDPOINTREWARD@@@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEPAUtagTGUILDPOINTREWARD@@PAU2@00@Z ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Ucopy<tagTGUILDPOINTREWARD *>
_TEXT	ENDS
PUBLIC	??$_Uninitialized_fill_n@PAUtagTGUILDPOINTREWARD@@IU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@IABU1@AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@@Z ; std::_Uninitialized_fill_n<tagTGUILDPOINTREWARD *,unsigned int,tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninitialized_fill_n@PAUtagTGUILDPOINTREWARD@@IU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@IABU1@AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@@Z
_TEXT	SEGMENT
__Cat$158584 = -4					; size = 1
__First$ = 8						; size = 4
__Count$ = 12						; size = 4
__Val$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_fill_n@PAUtagTGUILDPOINTREWARD@@IU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@IABU1@AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@@Z PROC NEAR ; std::_Uninitialized_fill_n<tagTGUILDPOINTREWARD *,unsigned int,tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >, COMDAT

; 255  : 	{	// copy _Count *_Val to raw _First, using _Al

  00000	51		 push	 ecx

; 256  : 	_Uninit_fill_n(_First, _Count, _Val, _Al,
; 257  : 		_Ptr_cat(_First, _First));

  00001	8b 04 24	 mov	 eax, DWORD PTR __Cat$158584[esp+4]
  00004	8b 4c 24 14	 mov	 ecx, DWORD PTR __Al$[esp]
  00008	8b 54 24 10	 mov	 edx, DWORD PTR __Val$[esp]
  0000c	50		 push	 eax
  0000d	8b 44 24 10	 mov	 eax, DWORD PTR __Count$[esp+4]
  00011	51		 push	 ecx
  00012	8b 4c 24 10	 mov	 ecx, DWORD PTR __First$[esp+8]
  00016	52		 push	 edx
  00017	50		 push	 eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ??$_Uninit_fill_n@PAUtagTGUILDPOINTREWARD@@IU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@IABU1@AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<tagTGUILDPOINTREWARD *,unsigned int,tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >

; 258  : 	}

  0001e	83 c4 18	 add	 esp, 24			; 00000018H
  00021	c3		 ret	 0
??$_Uninitialized_fill_n@PAUtagTGUILDPOINTREWARD@@IU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@IABU1@AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@@Z ENDP ; std::_Uninitialized_fill_n<tagTGUILDPOINTREWARD *,unsigned int,tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >
_TEXT	ENDS
PUBLIC	?Format@CTime@ATL@@QBE?AV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@2@PBD@Z ; ATL::CTime::Format
EXTRN	_strftime:NEAR
EXTRN	__localtime64:NEAR
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atltime.h
;	COMDAT ?Format@CTime@ATL@@QBE?AV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@2@PBD@Z
_TEXT	SEGMENT
$T158591 = -136						; size = 4
_szBuffer$ = -132					; size = 128
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
___$ReturnUdt$ = 8					; size = 4
_pFormat$ = 12						; size = 4
?Format@CTime@ATL@@QBE?AV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@2@PBD@Z PROC NEAR ; ATL::CTime::Format, COMDAT
; _this$ = ecx

; 343  : {

  00000	81 ec 88 00 00
	00		 sub	 esp, 136		; 00000088H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	56		 push	 esi

; 344  : 	if(pFormat == NULL)

  0000c	8b b4 24 94 00
	00 00		 mov	 esi, DWORD PTR _pFormat$[esp+136]
  00013	85 f6		 test	 esi, esi
  00015	89 84 24 88 00
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+140], eax
  0001c	c7 44 24 04 00
	00 00 00	 mov	 DWORD PTR $T158591[esp+140], 0
  00024	75 03		 jne	 SHORT $L77673

; 345  : 		return pFormat;

  00026	56		 push	 esi
  00027	eb 2f		 jmp	 SHORT $L158594
$L77673:

; 346  : 
; 347  : 	TCHAR szBuffer[maxTimeBufferSize];
; 348  : 
; 349  : 	struct tm* ptmTemp = _localtime64(&m_time);

  00029	51		 push	 ecx
  0002a	e8 00 00 00 00	 call	 __localtime64
  0002f	83 c4 04	 add	 esp, 4

; 350  : 	if (ptmTemp == NULL ||
; 351  : 		!_tcsftime(szBuffer, maxTimeBufferSize, pFormat, ptmTemp))

  00032	85 c0		 test	 eax, eax
  00034	74 18		 je	 SHORT $L77677
  00036	50		 push	 eax
  00037	56		 push	 esi
  00038	8d 44 24 10	 lea	 eax, DWORD PTR _szBuffer$[esp+148]
  0003c	68 80 00 00 00	 push	 128			; 00000080H
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 _strftime
  00047	83 c4 10	 add	 esp, 16			; 00000010H
  0004a	85 c0		 test	 eax, eax
  0004c	75 05		 jne	 SHORT $L77676
$L77677:

; 352  : 		szBuffer[0] = '\0';

  0004e	c6 44 24 08 00	 mov	 BYTE PTR _szBuffer$[esp+140], 0
$L77676:

; 353  : 	return szBuffer;

  00053	8d 4c 24 08	 lea	 ecx, DWORD PTR _szBuffer$[esp+140]
  00057	51		 push	 ecx
$L158594:
  00058	8b b4 24 94 00
	00 00		 mov	 esi, DWORD PTR ___$ReturnUdt$[esp+140]
  0005f	8b ce		 mov	 ecx, esi
  00061	e8 00 00 00 00	 call	 ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >

; 354  : }

  00066	8b 8c 24 88 00
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+140]
  0006d	8b c6		 mov	 eax, esi
  0006f	5e		 pop	 esi
  00070	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00075	81 c4 88 00 00
	00		 add	 esp, 136		; 00000088H
  0007b	c2 08 00	 ret	 8
?Format@CTime@ATL@@QBE?AV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@2@PBD@Z ENDP ; ATL::CTime::Format
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTITEM@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::insert
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTITEM@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T158606 = 12						; size = 4
$T158604 = 12						; size = 4
__Where$136163 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTITEM@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L136153
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L136152:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L158598
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L158599
$L158598:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L158599:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L136152
$L136153:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$136163[esp+12], edx
  00045	74 33		 je	 SHORT $L158698

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T158604[esp+12]
  00050	75 1f		 jne	 SHORT $L136168
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTITEM@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L136168:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$136163[esp+12]
$L158698:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L136173

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T158606[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTITEM@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L136173:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTITEM@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T158743 = 12						; size = 4
$T158741 = 12						; size = 4
__Where$136261 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L136251
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L136250:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L158735
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L158736
$L158735:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L158736:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L136250
$L136251:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$136261[esp+12], edx
  00045	74 33		 je	 SHORT $L158836

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T158741[esp+12]
  00050	75 1f		 jne	 SHORT $L136266
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L136266:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$136261[esp+12]
$L158836:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L136271

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T158743[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L136271:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T158880 = 12						; size = 4
$T158878 = 12						; size = 4
__Where$136359 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L136349
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L136348:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L158872
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L158873
$L158872:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L158873:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L136348
$L136349:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$136359[esp+12], edx
  00045	74 33		 je	 SHORT $L158973

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T158878[esp+12]
  00050	75 1f		 jne	 SHORT $L136364
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L136364:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$136359[esp+12]
$L158973:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L136369

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T158880[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L136369:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T159017 = 12						; size = 4
$T159015 = 12						; size = 4
__Where$136457 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 20		 jne	 SHORT $L136447
  0001d	8b 55 00	 mov	 edx, DWORD PTR [ebp]
$L136446:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00020	3b 50 0c	 cmp	 edx, DWORD PTR [eax+12]
  00023	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  00026	84 c9		 test	 cl, cl
  00028	8b f0		 mov	 esi, eax
  0002a	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0002e	74 04		 je	 SHORT $L159009
  00030	8b 00		 mov	 eax, DWORD PTR [eax]
  00032	eb 03		 jmp	 SHORT $L159010
$L159009:
  00034	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L159010:

; 478  : 		_Nodeptr _Trynode = _Root();
; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00037	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0003b	74 e3		 je	 SHORT $L136446
$L136447:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003d	84 c9		 test	 cl, cl
  0003f	8b d6		 mov	 edx, esi
  00041	89 54 24 18	 mov	 DWORD PTR __Where$136457[esp+12], edx
  00045	74 33		 je	 SHORT $L159110

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00047	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004a	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004c	8d 4c 24 18	 lea	 ecx, DWORD PTR $T159015[esp+12]
  00050	75 1f		 jne	 SHORT $L136462
  00052	55		 push	 ebp
  00053	56		 push	 esi
  00054	6a 01		 push	 1
  00056	51		 push	 ecx
  00057	8b cf		 mov	 ecx, edi
  00059	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Insert
  0005e	8b 10		 mov	 edx, DWORD PTR [eax]
  00060	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00064	5f		 pop	 edi
  00065	5e		 pop	 esi
  00066	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006a	89 10		 mov	 DWORD PTR [eax], edx
  0006c	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006d	59		 pop	 ecx
  0006e	c2 08 00	 ret	 8
$L136462:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00071	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Dec
  00076	8b 54 24 18	 mov	 edx, DWORD PTR __Where$136457[esp+12]
$L159110:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007a	8b 42 0c	 mov	 eax, DWORD PTR [edx+12]
  0007d	3b 45 00	 cmp	 eax, DWORD PTR [ebp]
  00080	73 26		 jae	 SHORT $L136467

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00082	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  00086	55		 push	 ebp
  00087	56		 push	 esi
  00088	51		 push	 ecx
  00089	8d 54 24 24	 lea	 edx, DWORD PTR $T159017[esp+24]
  0008d	52		 push	 edx
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Insert
  00095	8b 08		 mov	 ecx, DWORD PTR [eax]
  00097	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	89 08		 mov	 DWORD PTR [eax], ecx
  0009f	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a3	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a4	59		 pop	 ecx
  000a5	c2 08 00	 ret	 8
$L136467:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000a8	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b2	89 10		 mov	 DWORD PTR [eax], edx
  000b4	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b5	59		 pop	 ecx
  000b6	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::insert
_TEXT	ENDS
PUBLIC	?insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGG@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::insert
; Function compile flags: /Ogty
;	COMDAT ?insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGG@2@@Z
_TEXT	SEGMENT
__Addleft$ = -4						; size = 1
___$ReturnUdt$ = 8					; size = 4
$T159154 = 12						; size = 4
$T159152 = 12						; size = 4
__Where$136721 = 12					; size = 4
__Val$ = 12						; size = 4
?insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGG@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::insert, COMDAT
; _this$ = ecx

; 477  : 		{	// try to insert node with value _Val

  00000	51		 push	 ecx
  00001	55		 push	 ebp

; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00002	8b 6c 24 10	 mov	 ebp, DWORD PTR __Val$[esp+4]
  00006	56		 push	 esi
  00007	57		 push	 edi
  00008	8b f9		 mov	 edi, ecx
  0000a	8b 77 04	 mov	 esi, DWORD PTR [edi+4]
  0000d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00010	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00013	84 d2		 test	 dl, dl
  00015	b1 01		 mov	 cl, 1
  00017	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  0001b	75 22		 jne	 SHORT $L136711

; 478  : 		_Nodeptr _Trynode = _Root();

  0001d	66 8b 55 00	 mov	 dx, WORD PTR [ebp]
$L136710:

; 482  : 			{	// look for leaf to insert before (_Addleft) or after
; 483  : 			_Wherenode = _Trynode;
; 484  : 			_Addleft = this->comp(this->_Kfn(_Val), _Key(_Trynode));

  00021	66 3b 50 0c	 cmp	 dx, WORD PTR [eax+12]
  00025	8b f0		 mov	 esi, eax
  00027	0f 92 c1	 setb	 cl

; 485  : 			_Trynode = _Addleft ? _Left(_Trynode) : _Right(_Trynode);

  0002a	84 c9		 test	 cl, cl
  0002c	88 4c 24 0c	 mov	 BYTE PTR __Addleft$[esp+16], cl
  00030	74 04		 je	 SHORT $L159146
  00032	8b 00		 mov	 eax, DWORD PTR [eax]
  00034	eb 03		 jmp	 SHORT $L159147
$L159146:
  00036	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
$L159147:

; 479  : 		_Nodeptr _Wherenode = _Myhead;
; 480  : 		bool _Addleft = true;	// add to left of head if tree empty
; 481  : 		while (!_Isnil(_Trynode))

  00039	80 78 11 00	 cmp	 BYTE PTR [eax+17], 0
  0003d	74 e2		 je	 SHORT $L136710
$L136711:

; 486  : 			}
; 487  : 
; 488  : 		if (this->_Multi)
; 489  : 			return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));
; 490  : 		else
; 491  : 			{	// insert only if unique
; 492  : 			iterator _Where = _TREE_ITERATOR(_Wherenode);
; 493  : 			if (!_Addleft)

  0003f	84 c9		 test	 cl, cl
  00041	8b d6		 mov	 edx, esi
  00043	89 54 24 18	 mov	 DWORD PTR __Where$136721[esp+12], edx
  00047	74 33		 je	 SHORT $L159247

; 494  : 				;	// need to test if insert after is okay
; 495  : 			else if (_Where == begin())

  00049	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0004c	3b 30		 cmp	 esi, DWORD PTR [eax]

; 496  : 				return (_Pairib(_Insert(true, _Wherenode, _Val), true));

  0004e	8d 4c 24 18	 lea	 ecx, DWORD PTR $T159152[esp+12]
  00052	75 1f		 jne	 SHORT $L136726
  00054	55		 push	 ebp
  00055	56		 push	 esi
  00056	6a 01		 push	 1
  00058	51		 push	 ecx
  00059	8b cf		 mov	 ecx, edi
  0005b	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBGG@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Insert
  00060	8b 10		 mov	 edx, DWORD PTR [eax]
  00062	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  0006c	89 10		 mov	 DWORD PTR [eax], edx
  0006e	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  0006f	59		 pop	 ecx
  00070	c2 08 00	 ret	 8
$L136726:

; 497  : 			else
; 498  : 				--_Where;	// need to test if insert before is okay

  00073	e8 00 00 00 00	 call	 ?_Dec@const_iterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::const_iterator::_Dec
  00078	8b 54 24 18	 mov	 edx, DWORD PTR __Where$136721[esp+12]
$L159247:

; 499  : 
; 500  : 			if (this->comp(_Key(_Where._Mynode()), this->_Kfn(_Val)))

  0007c	66 8b 42 0c	 mov	 ax, WORD PTR [edx+12]
  00080	66 3b 45 00	 cmp	 ax, WORD PTR [ebp]
  00084	73 26		 jae	 SHORT $L136731

; 501  : 				return (_Pairib(_Insert(_Addleft, _Wherenode, _Val), true));

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Addleft$[esp+16]
  0008a	55		 push	 ebp
  0008b	56		 push	 esi
  0008c	51		 push	 ecx
  0008d	8d 54 24 24	 lea	 edx, DWORD PTR $T159154[esp+24]
  00091	52		 push	 edx
  00092	8b cf		 mov	 ecx, edi
  00094	e8 00 00 00 00	 call	 ?_Insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@IAE?AViterator@12@_NPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@2@ABU?$pair@$$CBGG@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::_Insert
  00099	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0009f	5f		 pop	 edi
  000a0	5e		 pop	 esi
  000a1	89 08		 mov	 DWORD PTR [eax], ecx
  000a3	c6 40 04 01	 mov	 BYTE PTR [eax+4], 1
  000a7	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000a8	59		 pop	 ecx
  000a9	c2 08 00	 ret	 8
$L136731:

; 502  : 			else
; 503  : 				return (_Pairib(_Where, false));

  000ac	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	c6 40 04 00	 mov	 BYTE PTR [eax+4], 0
  000b6	89 10		 mov	 DWORD PTR [eax], edx
  000b8	5d		 pop	 ebp

; 504  : 			}
; 505  : 		}

  000b9	59		 pop	 ecx
  000ba	c2 08 00	 ret	 8
?insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGG@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::insert
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T159286 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L159618
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L159618

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L159618:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L136836
$L136835:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L159589
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L159620
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L159589
  0006e	8b ff		 npad	 2
$L159610:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L159610
  0007b	eb 1d		 jmp	 SHORT $L159589
$L159620:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L159592
$L159591:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L159592
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L159591
$L159592:
  00098	8b f0		 mov	 esi, eax
$L159589:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T159286[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L136835
$L136836:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T159629 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T159629[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T159695 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L160027
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L160027

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L160027:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L136935
$L136934:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L159998
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L160029
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L159998
  0006e	8b ff		 npad	 2
$L160016:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L160016
  0007b	eb 1d		 jmp	 SHORT $L159998
$L160029:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L160004
$L160002:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L160004
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L160002
$L160004:
  00098	8b f0		 mov	 esi, eax
$L159998:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T159695[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L136934
$L136935:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T160038 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T160038[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T160104 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L160436
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L160436

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L160436:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L137033
$L137032:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L160406
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L160438
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L160406
  0006e	8b ff		 npad	 2
$L160427:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L160427
  0007b	eb 1d		 jmp	 SHORT $L160406
$L160438:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L160409
$L160408:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L160409
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L160408
$L160409:
  00098	8b f0		 mov	 esi, eax
$L160406:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T160104[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L137032
$L137033:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T160447 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T160447[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T160513 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L160845
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L160845

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L160845:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L137131
$L137130:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L160813
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L160847
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L160813
  0006e	8b ff		 npad	 2
$L160834:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L160834
  0007b	eb 1d		 jmp	 SHORT $L160813
$L160847:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L160816
$L160815:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L160816
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L160815
$L160816:
  00098	8b f0		 mov	 esi, eax
$L160813:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T160513[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L137130
$L137131:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T160856 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T160856[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@KV?$allocator@K@std@@@std@@IAE_NI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::_Buy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Buy@?$vector@KV?$allocator@K@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@KV?$allocator@K@std@@@std@@IAE_NI@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::_Buy, COMDAT
; _this$ = ecx

; 771  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;
; 772  : 		if (_Capacity == 0)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Capacity$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	33 c9		 xor	 ecx, ecx
  00009	3b c1		 cmp	 eax, ecx
  0000b	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  0000e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00011	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00014	75 06		 jne	 SHORT $L137193

; 773  : 			return (false);

  00016	32 c0		 xor	 al, al
  00018	5e		 pop	 esi

; 783  : 		}

  00019	c2 04 00	 ret	 4
$L137193:

; 774  : 		else if (max_size() < _Capacity)

  0001c	3d ff ff ff 3f	 cmp	 eax, 1073741823		; 3fffffffH
  00021	76 07		 jbe	 SHORT $L137195

; 775  : 			_Xlen();	// result too long

  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Xlen@?$vector@KV?$allocator@K@std@@@std@@IBEXXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::_Xlen
$L160944:
$L137195:
  0002a	57		 push	 edi

; 776  : 		else
; 777  : 			{	// nonempty array, allocate storage
; 778  : 			_Myfirst = this->_Alval.allocate(_Capacity);

  0002b	8d 3c 85 00 00
	00 00		 lea	 edi, DWORD PTR [eax*4]
  00032	57		 push	 edi
  00033	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 779  : 			_Mylast = _Myfirst;
; 780  : 			_Myend = _Myfirst + _Capacity;

  00038	03 f8		 add	 edi, eax
  0003a	83 c4 04	 add	 esp, 4
  0003d	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  00040	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00043	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00046	5f		 pop	 edi

; 781  : 			}
; 782  : 		return (true);

  00047	b0 01		 mov	 al, 1
  00049	5e		 pop	 esi

; 783  : 		}

  0004a	c2 04 00	 ret	 4
$L160943:
?_Buy@?$vector@KV?$allocator@K@std@@@std@@IAE_NI@Z ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::_Buy
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAE_NI@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Buy
; Function compile flags: /Ogty
;	COMDAT ?_Buy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAE_NI@Z PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Buy, COMDAT
; _this$ = ecx

; 771  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;
; 772  : 		if (_Capacity == 0)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Capacity$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	33 c9		 xor	 ecx, ecx
  00009	3b c1		 cmp	 eax, ecx
  0000b	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  0000e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00011	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00014	75 06		 jne	 SHORT $L137206

; 773  : 			return (false);

  00016	32 c0		 xor	 al, al
  00018	5e		 pop	 esi

; 783  : 		}

  00019	c2 04 00	 ret	 4
$L137206:

; 774  : 		else if (max_size() < _Capacity)

  0001c	3d ff ff ff 0f	 cmp	 eax, 268435455		; 0fffffffH
  00021	76 07		 jbe	 SHORT $L137208

; 775  : 			_Xlen();	// result too long

  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Xlen@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IBEXXZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Xlen
$L160973:
$L137208:

; 776  : 		else
; 777  : 			{	// nonempty array, allocate storage
; 778  : 			_Myfirst = this->_Alval.allocate(_Capacity);

  0002a	c1 e0 04	 shl	 eax, 4
  0002d	57		 push	 edi
  0002e	8b f8		 mov	 edi, eax
  00030	57		 push	 edi
  00031	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 779  : 			_Mylast = _Myfirst;
; 780  : 			_Myend = _Myfirst + _Capacity;

  00036	03 f8		 add	 edi, eax
  00038	83 c4 04	 add	 esp, 4
  0003b	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  0003e	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00041	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00044	5f		 pop	 edi

; 781  : 			}
; 782  : 		return (true);

  00045	b0 01		 mov	 al, 1
  00047	5e		 pop	 esi

; 783  : 		}

  00048	c2 04 00	 ret	 4
$L160972:
?_Buy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAE_NI@Z ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Buy
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXPAUtagTGUILDPOINTREWARD@@0@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Destroy
; Function compile flags: /Ogty
;	COMDAT ?_Destroy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXPAUtagTGUILDPOINTREWARD@@0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXPAUtagTGUILDPOINTREWARD@@0@Z PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Destroy, COMDAT
; _this$ = ecx

; 786  : 		{	// destroy [_First, _Last) using allocator

  00000	56		 push	 esi

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __First$[esp]
  00005	57		 push	 edi
  00006	8b 7c 24 10	 mov	 edi, DWORD PTR __Last$[esp+4]
  0000a	3b f7		 cmp	 esi, edi
  0000c	74 10		 je	 SHORT $L161024
  0000e	8b ff		 npad	 2
$L161022:
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ??1tagTGUILDPOINTREWARD@@QAE@XZ
  00017	83 c6 10	 add	 esi, 16			; 00000010H
  0001a	3b f7		 cmp	 esi, edi
  0001c	75 f2		 jne	 SHORT $L161022
$L161024:
  0001e	5f		 pop	 edi
  0001f	5e		 pop	 esi

; 788  : 		}

  00020	c2 08 00	 ret	 8
?_Destroy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXPAUtagTGUILDPOINTREWARD@@0@Z ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Destroy
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXXZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXXZ PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Tidy, COMDAT
; _this$ = ecx

; 791  : 		{	// free all storage

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx
  00003	56		 push	 esi

; 792  : 		if (_Myfirst != 0)

  00004	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  00007	85 f6		 test	 esi, esi
  00009	74 23		 je	 SHORT $L161125
  0000b	57		 push	 edi

; 793  : 			{	// something to free, destroy and deallocate it
; 794  : 			_Destroy(_Myfirst, _Mylast);

  0000c	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]
  0000f	3b f7		 cmp	 esi, edi
  00011	74 0e		 je	 SHORT $L161110
$L161108:
  00013	8b ce		 mov	 ecx, esi
  00015	e8 00 00 00 00	 call	 ??1tagTGUILDPOINTREWARD@@QAE@XZ
  0001a	83 c6 10	 add	 esi, 16			; 00000010H
  0001d	3b f7		 cmp	 esi, edi
  0001f	75 f2		 jne	 SHORT $L161108
$L161110:

; 795  : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  00021	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002a	83 c4 04	 add	 esp, 4
  0002d	5f		 pop	 edi
$L161125:
  0002e	5e		 pop	 esi

; 796  : 			}
; 797  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  0002f	c7 43 04 00 00
	00 00		 mov	 DWORD PTR [ebx+4], 0
  00036	c7 43 08 00 00
	00 00		 mov	 DWORD PTR [ebx+8], 0
  0003d	c7 43 0c 00 00
	00 00		 mov	 DWORD PTR [ebx+12], 0
  00044	5b		 pop	 ebx

; 798  : 		}

  00045	c3		 ret	 0
?_Tidy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXXZ ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Ufill@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEPAUtagTGUILDPOINTREWARD@@PAU3@IABU3@@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Ufill
; Function compile flags: /Ogty
;	COMDAT ?_Ufill@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEPAUtagTGUILDPOINTREWARD@@PAU3@IABU3@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
__Cat$161142 = 16					; size = 1
__Val$ = 16						; size = 4
?_Ufill@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEPAUtagTGUILDPOINTREWARD@@PAU3@IABU3@@Z PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Ufill, COMDAT
; _this$ = ecx

; 878  : 		_Uninitialized_fill_n(_Ptr, _Count, _Val, this->_Alval);

  00000	8b 44 24 0c	 mov	 eax, DWORD PTR __Cat$161142[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR __Count$[esp]
  00009	57		 push	 edi
  0000a	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  0000e	50		 push	 eax
  0000f	51		 push	 ecx
  00010	8b 4c 24 1c	 mov	 ecx, DWORD PTR __Val$[esp+12]
  00014	51		 push	 ecx
  00015	56		 push	 esi
  00016	57		 push	 edi
  00017	e8 00 00 00 00	 call	 ??$_Uninit_fill_n@PAUtagTGUILDPOINTREWARD@@IU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@IABU1@AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<tagTGUILDPOINTREWARD *,unsigned int,tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >

; 879  : 		return (_Ptr + _Count);

  0001c	8b c6		 mov	 eax, esi
  0001e	83 c4 14	 add	 esp, 20			; 00000014H
  00021	c1 e0 04	 shl	 eax, 4
  00024	03 c7		 add	 eax, edi
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi

; 880  : 		}

  00028	c2 0c 00	 ret	 12			; 0000000cH
?_Ufill@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEPAUtagTGUILDPOINTREWARD@@PAU3@IABU3@@Z ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Ufill
_TEXT	ENDS
PUBLIC	?AddMember@CTGuild@@QAEEPAUtagTGUILDMEMBER@@@Z	; CTGuild::AddMember
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tguild.cpp
;	COMDAT ?AddMember@CTGuild@@QAEEPAUtagTGUILDMEMBER@@@Z
_TEXT	SEGMENT
$T161150 = -16						; size = 8
$T161151 = -8						; size = 8
_it$ = 8						; size = 4
_pMember$ = 8						; size = 4
?AddMember@CTGuild@@QAEEPAUtagTGUILDMEMBER@@@Z PROC NEAR ; CTGuild::AddMember, COMDAT
; _this$ = ecx

; 68   : {

  00000	83 ec 10	 sub	 esp, 16			; 00000010H
  00003	53		 push	 ebx
  00004	55		 push	 ebp
  00005	56		 push	 esi
  00006	57		 push	 edi

; 69   : 	MAPTGUILDMEMBER::iterator it = m_mapTMember.find(pMember->m_dwID);

  00007	8b 7c 24 24	 mov	 edi, DWORD PTR _pMember$[esp+28]
  0000b	8b f1		 mov	 esi, ecx
  0000d	8d 5f 08	 lea	 ebx, DWORD PTR [edi+8]
  00010	53		 push	 ebx
  00011	8d 44 24 28	 lea	 eax, DWORD PTR _it$[esp+32]
  00015	8d 6e 70	 lea	 ebp, DWORD PTR [esi+112]
  00018	50		 push	 eax
  00019	8b cd		 mov	 ecx, ebp
  0001b	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::find

; 70   : 	if(it==m_mapTMember.end())

  00020	8b 4c 24 24	 mov	 ecx, DWORD PTR _it$[esp+28]
  00024	3b 4e 74	 cmp	 ecx, DWORD PTR [esi+116]
  00027	75 32		 jne	 SHORT $L134608

; 71   : 	{
; 72   : 		pMember->m_dwGuildID = m_dwID;

  00029	8b 16		 mov	 edx, DWORD PTR [esi]
  0002b	89 17		 mov	 DWORD PTR [edi], edx

; 73   : 		m_mapTMember.insert(MAPTGUILDMEMBER::value_type(pMember->m_dwID, pMember));

  0002d	8b 03		 mov	 eax, DWORD PTR [ebx]
  0002f	8d 4c 24 10	 lea	 ecx, DWORD PTR $T161150[esp+32]
  00033	51		 push	 ecx
  00034	8d 54 24 1c	 lea	 edx, DWORD PTR $T161151[esp+36]
  00038	52		 push	 edx
  00039	8b cd		 mov	 ecx, ebp
  0003b	89 44 24 18	 mov	 DWORD PTR $T161150[esp+40], eax
  0003f	89 7c 24 1c	 mov	 DWORD PTR $T161150[esp+44], edi
  00043	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::insert

; 74   : 
; 75   : 		UpdateLevel();

  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?UpdateLevel@CTGuild@@QAEXXZ ; CTGuild::UpdateLevel
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi
  00051	5d		 pop	 ebp

; 76   : 
; 77   : 		return GUILD_SUCCESS;

  00052	32 c0		 xor	 al, al
  00054	5b		 pop	 ebx

; 81   : }

  00055	83 c4 10	 add	 esp, 16			; 00000010H
  00058	c2 04 00	 ret	 4
$L134608:
  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi
  0005d	5d		 pop	 ebp

; 78   : 	}
; 79   : 	else
; 80   : 		return GUILD_ALREADYMEMBER;

  0005e	b0 06		 mov	 al, 6
  00060	5b		 pop	 ebx

; 81   : }

  00061	83 c4 10	 add	 esp, 16			; 00000010H
  00064	c2 04 00	 ret	 4
?AddMember@CTGuild@@QAEEPAUtagTGUILDMEMBER@@@Z ENDP	; CTGuild::AddMember
_TEXT	ENDS
PUBLIC	??_C@_08GOBPOGDO@?$CFY?9?$CFm?9?$CFd?$AA@	; `string'
PUBLIC	?AddArticle@CTGuild@@QAEXKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z ; CTGuild::AddArticle
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T161503 DD	0ffffffffH
	DD	FLAT:$L161184
	DD	00H
	DD	FLAT:$L161185
	DD	01H
	DD	FLAT:$L161186
	DD	02H
	DD	FLAT:$L161187
$T161501 DD	019930520H
	DD	04H
	DD	FLAT:$T161503
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_08GOBPOGDO@?$CFY?9?$CFm?9?$CFd?$AA@
CONST	SEGMENT
??_C@_08GOBPOGDO@?$CFY?9?$CFm?9?$CFd?$AA@ DB '%Y-%m-%d', 00H ; `string'
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tguild.cpp
CONST	ENDS
;	COMDAT ?AddArticle@CTGuild@@QAEXKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z
_TEXT	SEGMENT
_time$ = -36						; size = 8
$T161182 = -28						; size = 8
$T161183 = -20						; size = 8
__$EHRec$ = -12						; size = 12
_dwID$ = 8						; size = 4
$T161181 = 12						; size = 4
_bDuty$ = 12						; size = 1
_strWritter$ = 16					; size = 4
_strTitle$ = 20						; size = 4
_strArticle$ = 24					; size = 4
_dwTime$ = 28						; size = 4
?AddArticle@CTGuild@@QAEXKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z PROC NEAR ; CTGuild::AddArticle, COMDAT
; _this$ = ecx

; 402  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?AddArticle@CTGuild@@QAEXKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 18	 sub	 esp, 24			; 00000018H
  00018	55		 push	 ebp
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8b e9		 mov	 ebp, ecx

; 403  : 	if(dwID >= m_dwArticleIndex)

  0001d	8b 44 24 34	 mov	 eax, DWORD PTR _dwID$[esp+44]
  00021	3b 85 88 00 00
	00		 cmp	 eax, DWORD PTR [ebp+136]
  00027	c7 44 24 2c 02
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+56], 2
  0002f	72 06		 jb	 SHORT $L134870

; 404  : 		m_dwArticleIndex = dwID;

  00031	89 85 88 00 00
	00		 mov	 DWORD PTR [ebp+136], eax
$L134870:

; 405  : 
; 406  : 	LPTGUILDARTICLE pArticle = new TGUILDARTICLE();

  00037	6a 18		 push	 24			; 00000018H
  00039	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003e	8b f0		 mov	 esi, eax
  00040	83 c4 04	 add	 esp, 4
  00043	85 f6		 test	 esi, esi
  00045	74 50		 je	 SHORT $L161179
  00047	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  0004c	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  00051	ff 50 0c	 call	 DWORD PTR [eax+12]
  00054	83 c0 10	 add	 eax, 16			; 00000010H
  00057	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0005a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  00060	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  00065	ff 52 0c	 call	 DWORD PTR [edx+12]
  00068	83 c0 10	 add	 eax, 16			; 00000010H
  0006b	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  0006e	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  00073	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  00078	ff 50 0c	 call	 DWORD PTR [eax+12]
  0007b	83 c0 10	 add	 eax, 16			; 00000010H
  0007e	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00081	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  00087	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  0008c	ff 52 0c	 call	 DWORD PTR [edx+12]
  0008f	83 c0 10	 add	 eax, 16			; 00000010H
  00092	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00095	eb 02		 jmp	 SHORT $L161180
$L161179:
  00097	33 f6		 xor	 esi, esi
$L161180:

; 407  : 	pArticle->m_dwID = m_dwArticleIndex;

  00099	8b 85 88 00 00
	00		 mov	 eax, DWORD PTR [ebp+136]

; 408  : 	pArticle->m_bDuty = bDuty;

  0009f	8a 4c 24 38	 mov	 cl, BYTE PTR _bDuty$[esp+44]

; 409  : 	pArticle->m_strWritter = strWritter;

  000a3	8d 54 24 3c	 lea	 edx, DWORD PTR _strWritter$[esp+44]
  000a7	88 4e 04	 mov	 BYTE PTR [esi+4], cl
  000aa	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  000ad	52		 push	 edx
  000ae	89 06		 mov	 DWORD PTR [esi], eax
  000b0	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 410  : 	pArticle->m_strTitle = strTitle;

  000b5	8d 44 24 40	 lea	 eax, DWORD PTR _strTitle$[esp+44]
  000b9	8d 7e 0c	 lea	 edi, DWORD PTR [esi+12]
  000bc	50		 push	 eax
  000bd	8b cf		 mov	 ecx, edi
  000bf	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 411  : 	pArticle->m_strArticle = strArticle;

  000c4	8d 54 24 44	 lea	 edx, DWORD PTR _strArticle$[esp+44]
  000c8	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  000cb	52		 push	 edx
  000cc	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 412  : 	CTime time(dwTime);

  000d1	8b 44 24 48	 mov	 eax, DWORD PTR _dwTime$[esp+44]

; 413  : 	pArticle->m_strDate = time.Format(_T("%Y-%m-%d"));

  000d5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08GOBPOGDO@?$CFY?9?$CFm?9?$CFd?$AA@
  000da	8d 4c 24 3c	 lea	 ecx, DWORD PTR $T161181[esp+48]
  000de	51		 push	 ecx
  000df	8d 4c 24 14	 lea	 ecx, DWORD PTR _time$[esp+56]
  000e3	89 44 24 14	 mov	 DWORD PTR _time$[esp+56], eax
  000e7	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR _time$[esp+60], 0
  000ef	e8 00 00 00 00	 call	 ?Format@CTime@ATL@@QBE?AV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@2@PBD@Z ; ATL::CTime::Format
  000f4	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  000f7	50		 push	 eax
  000f8	c6 44 24 30 03	 mov	 BYTE PTR __$EHRec$[esp+60], 3
  000fd	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=
  00102	8b 44 24 38	 mov	 eax, DWORD PTR $T161181[esp+44]
  00106	83 c0 f0	 add	 eax, -16		; fffffff0H
  00109	c6 44 24 2c 02	 mov	 BYTE PTR __$EHRec$[esp+56], 2
  0010e	8d 50 0c	 lea	 edx, DWORD PTR [eax+12]
  00111	83 c9 ff	 or	 ecx, -1
  00114	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
  00118	49		 dec	 ecx
  00119	85 c9		 test	 ecx, ecx
  0011b	7f 08		 jg	 SHORT $L161406
  0011d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00121	50		 push	 eax
  00122	ff 52 04	 call	 DWORD PTR [edx+4]
$L161406:

; 414  : 
; 415  : 	m_strArticleTitle = pArticle->m_strTitle;

  00125	8d 4d 48	 lea	 ecx, DWORD PTR [ebp+72]
  00128	57		 push	 edi
  00129	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 416  : 
; 417  : 	m_mapTArticle.insert(MAPTGUILDARTICLE::value_type(pArticle->m_dwID, pArticle));

  0012e	8b 06		 mov	 eax, DWORD PTR [esi]
  00130	8d 4c 24 14	 lea	 ecx, DWORD PTR $T161182[esp+48]
  00134	51		 push	 ecx
  00135	8d 54 24 20	 lea	 edx, DWORD PTR $T161183[esp+52]
  00139	52		 push	 edx
  0013a	8d 8d 8c 00 00
	00		 lea	 ecx, DWORD PTR [ebp+140]
  00140	89 44 24 1c	 mov	 DWORD PTR $T161182[esp+56], eax
  00144	89 74 24 20	 mov	 DWORD PTR $T161182[esp+60], esi
  00148	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::insert

; 418  : }

  0014d	8b 44 24 3c	 mov	 eax, DWORD PTR _strWritter$[esp+44]
  00151	83 c0 f0	 add	 eax, -16		; fffffff0H
  00154	c6 44 24 2c 01	 mov	 BYTE PTR __$EHRec$[esp+56], 1
  00159	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0015c	83 ca ff	 or	 edx, -1
  0015f	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00163	4a		 dec	 edx
  00164	85 d2		 test	 edx, edx
  00166	5f		 pop	 edi
  00167	5e		 pop	 esi
  00168	5d		 pop	 ebp
  00169	7f 08		 jg	 SHORT $L161442
  0016b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0016f	50		 push	 eax
  00170	ff 52 04	 call	 DWORD PTR [edx+4]
$L161442:
  00173	8b 44 24 34	 mov	 eax, DWORD PTR _strTitle$[esp+32]
  00177	83 c0 f0	 add	 eax, -16		; fffffff0H
  0017a	c6 44 24 20 00	 mov	 BYTE PTR __$EHRec$[esp+44], 0
  0017f	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00182	83 ca ff	 or	 edx, -1
  00185	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00189	4a		 dec	 edx
  0018a	85 d2		 test	 edx, edx
  0018c	7f 08		 jg	 SHORT $L161469
  0018e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00190	8b 11		 mov	 edx, DWORD PTR [ecx]
  00192	50		 push	 eax
  00193	ff 52 04	 call	 DWORD PTR [edx+4]
$L161469:
  00196	8b 44 24 38	 mov	 eax, DWORD PTR _strArticle$[esp+32]
  0019a	83 c0 f0	 add	 eax, -16		; fffffff0H
  0019d	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  001a5	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  001a8	83 ca ff	 or	 edx, -1
  001ab	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  001af	4a		 dec	 edx
  001b0	85 d2		 test	 edx, edx
  001b2	7f 08		 jg	 SHORT $L161496
  001b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  001b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  001b8	50		 push	 eax
  001b9	ff 52 04	 call	 DWORD PTR [edx+4]
$L161496:
  001bc	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  001c0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001c7	83 c4 24	 add	 esp, 36			; 00000024H
  001ca	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161184:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strArticle$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L161185:
  00008	8d 4d 10	 lea	 ecx, DWORD PTR _strTitle$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L161186:
  00010	8d 4d 0c	 lea	 ecx, DWORD PTR _strWritter$[ebp-4]
  00013	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L161187:
  00018	8d 4d 08	 lea	 ecx, DWORD PTR $T161181[ebp-4]
  0001b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?AddArticle@CTGuild@@QAEXKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z:
  00020	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161501
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AddArticle@CTGuild@@QAEXKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z ENDP ; CTGuild::AddArticle
PUBLIC	?AddArticle@CTGuild@@QAEKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z ; CTGuild::AddArticle
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T161921 DD	0ffffffffH
	DD	FLAT:$L161517
	DD	00H
	DD	FLAT:$L161518
	DD	01H
	DD	FLAT:$L161519
	DD	02H
	DD	FLAT:$L161520
$T161919 DD	019930520H
	DD	04H
	DD	FLAT:$T161921
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tguild.cpp
xdata$x	ENDS
;	COMDAT ?AddArticle@CTGuild@@QAEKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z
_TEXT	SEGMENT
_time$ = -36						; size = 8
$T161514 = -28						; size = 8
$T161515 = -20						; size = 8
__$EHRec$ = -12						; size = 12
$T161513 = 8						; size = 4
_bDuty$ = 8						; size = 1
_strWritter$ = 12					; size = 4
_strTitle$ = 16						; size = 4
_strArticle$ = 20					; size = 4
_dwTime$ = 24						; size = 4
?AddArticle@CTGuild@@QAEKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z PROC NEAR ; CTGuild::AddArticle, COMDAT
; _this$ = ecx

; 420  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?AddArticle@CTGuild@@QAEKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 18	 sub	 esp, 24			; 00000018H
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx

; 421  : 	if( BYTE(m_mapTArticle.size()) >= MAX_GUILD_ARTICLE_COUNT )

  0001b	80 bf 94 00 00
	00 64		 cmp	 BYTE PTR [edi+148], 100	; 00000064H
  00022	c7 44 24 24 02
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+48], 2
  0002a	0f 82 80 00 00
	00		 jb	 $L134910

; 422  : 		return 0;

  00030	8b 44 24 30	 mov	 eax, DWORD PTR _strWritter$[esp+36]
  00034	83 c0 f0	 add	 eax, -16		; fffffff0H
  00037	c6 44 24 24 01	 mov	 BYTE PTR __$EHRec$[esp+48], 1
  0003c	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0003f	83 ca ff	 or	 edx, -1
  00042	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00046	4a		 dec	 edx
  00047	85 d2		 test	 edx, edx
  00049	7f 08		 jg	 SHORT $L161549
  0004b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004f	50		 push	 eax
  00050	ff 52 04	 call	 DWORD PTR [edx+4]
$L161549:
  00053	8b 44 24 34	 mov	 eax, DWORD PTR _strTitle$[esp+36]
  00057	83 c0 f0	 add	 eax, -16		; fffffff0H
  0005a	c6 44 24 24 00	 mov	 BYTE PTR __$EHRec$[esp+48], 0
  0005f	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00062	83 ca ff	 or	 edx, -1
  00065	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00069	4a		 dec	 edx
  0006a	85 d2		 test	 edx, edx
  0006c	7f 08		 jg	 SHORT $L161576
  0006e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00070	8b 11		 mov	 edx, DWORD PTR [ecx]
  00072	50		 push	 eax
  00073	ff 52 04	 call	 DWORD PTR [edx+4]
$L161576:
  00076	8b 44 24 38	 mov	 eax, DWORD PTR _strArticle$[esp+36]
  0007a	83 c0 f0	 add	 eax, -16		; fffffff0H
  0007d	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00085	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00088	83 ca ff	 or	 edx, -1
  0008b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0008f	4a		 dec	 edx
  00090	85 d2		 test	 edx, edx
  00092	7f 08		 jg	 SHORT $L161602
  00094	8b 08		 mov	 ecx, DWORD PTR [eax]
  00096	8b 11		 mov	 edx, DWORD PTR [ecx]
  00098	50		 push	 eax
  00099	ff 52 04	 call	 DWORD PTR [edx+4]
$L161602:
  0009c	33 c0		 xor	 eax, eax
  0009e	5f		 pop	 edi

; 440  : }

  0009f	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  000a3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000aa	83 c4 24	 add	 esp, 36			; 00000024H
  000ad	c2 14 00	 ret	 20			; 00000014H
$L134910:
  000b0	55		 push	 ebp
  000b1	56		 push	 esi

; 423  : 
; 424  : 	m_dwArticleIndex++;

  000b2	8b b7 88 00 00
	00		 mov	 esi, DWORD PTR [edi+136]
  000b8	46		 inc	 esi

; 425  : 
; 426  : 	LPTGUILDARTICLE pArticle = new TGUILDARTICLE();

  000b9	6a 18		 push	 24			; 00000018H
  000bb	89 b7 88 00 00
	00		 mov	 DWORD PTR [edi+136], esi
  000c1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000c6	8b f0		 mov	 esi, eax
  000c8	83 c4 04	 add	 esp, 4
  000cb	85 f6		 test	 esi, esi
  000cd	74 50		 je	 SHORT $L161511
  000cf	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  000d4	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  000d9	ff 50 0c	 call	 DWORD PTR [eax+12]
  000dc	83 c0 10	 add	 eax, 16			; 00000010H
  000df	89 46 08	 mov	 DWORD PTR [esi+8], eax
  000e2	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  000e8	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  000ed	ff 52 0c	 call	 DWORD PTR [edx+12]
  000f0	83 c0 10	 add	 eax, 16			; 00000010H
  000f3	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  000f6	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  000fb	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  00100	ff 50 0c	 call	 DWORD PTR [eax+12]
  00103	83 c0 10	 add	 eax, 16			; 00000010H
  00106	89 46 10	 mov	 DWORD PTR [esi+16], eax
  00109	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  0010f	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  00114	ff 52 0c	 call	 DWORD PTR [edx+12]
  00117	83 c0 10	 add	 eax, 16			; 00000010H
  0011a	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0011d	eb 02		 jmp	 SHORT $L161512
$L161511:
  0011f	33 f6		 xor	 esi, esi
$L161512:

; 427  : 	pArticle->m_dwID = m_dwArticleIndex;

  00121	8b 87 88 00 00
	00		 mov	 eax, DWORD PTR [edi+136]

; 428  : 	pArticle->m_bDuty = bDuty;

  00127	8a 4c 24 34	 mov	 cl, BYTE PTR _bDuty$[esp+44]

; 429  : 	pArticle->m_strWritter = strWritter;

  0012b	8d 54 24 38	 lea	 edx, DWORD PTR _strWritter$[esp+44]
  0012f	88 4e 04	 mov	 BYTE PTR [esi+4], cl
  00132	8d 4e 08	 lea	 ecx, DWORD PTR [esi+8]
  00135	52		 push	 edx
  00136	89 06		 mov	 DWORD PTR [esi], eax
  00138	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 430  : 	pArticle->m_strTitle = strTitle;

  0013d	8d 44 24 3c	 lea	 eax, DWORD PTR _strTitle$[esp+44]
  00141	8d 6e 0c	 lea	 ebp, DWORD PTR [esi+12]
  00144	50		 push	 eax
  00145	8b cd		 mov	 ecx, ebp
  00147	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 431  : 	pArticle->m_strArticle = strArticle;

  0014c	8d 54 24 40	 lea	 edx, DWORD PTR _strArticle$[esp+44]
  00150	8d 4e 10	 lea	 ecx, DWORD PTR [esi+16]
  00153	52		 push	 edx
  00154	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 432  : 	CTime time(dwTime);

  00159	8b 44 24 44	 mov	 eax, DWORD PTR _dwTime$[esp+44]

; 433  : 	pArticle->m_strDate = time.Format(_T("%Y-%m-%d"));

  0015d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_08GOBPOGDO@?$CFY?9?$CFm?9?$CFd?$AA@
  00162	8d 4c 24 38	 lea	 ecx, DWORD PTR $T161513[esp+48]
  00166	51		 push	 ecx
  00167	8d 4c 24 14	 lea	 ecx, DWORD PTR _time$[esp+56]
  0016b	89 44 24 14	 mov	 DWORD PTR _time$[esp+56], eax
  0016f	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR _time$[esp+60], 0
  00177	e8 00 00 00 00	 call	 ?Format@CTime@ATL@@QBE?AV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@2@PBD@Z ; ATL::CTime::Format
  0017c	8d 4e 14	 lea	 ecx, DWORD PTR [esi+20]
  0017f	50		 push	 eax
  00180	c6 44 24 30 03	 mov	 BYTE PTR __$EHRec$[esp+60], 3
  00185	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=
  0018a	8b 44 24 34	 mov	 eax, DWORD PTR $T161513[esp+44]
  0018e	83 c0 f0	 add	 eax, -16		; fffffff0H
  00191	c6 44 24 2c 02	 mov	 BYTE PTR __$EHRec$[esp+56], 2
  00196	8d 50 0c	 lea	 edx, DWORD PTR [eax+12]
  00199	83 c9 ff	 or	 ecx, -1
  0019c	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
  001a0	49		 dec	 ecx
  001a1	85 c9		 test	 ecx, ecx
  001a3	7f 08		 jg	 SHORT $L161824
  001a5	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a7	8b 11		 mov	 edx, DWORD PTR [ecx]
  001a9	50		 push	 eax
  001aa	ff 52 04	 call	 DWORD PTR [edx+4]
$L161824:

; 434  : 
; 435  : 	m_strArticleTitle = pArticle->m_strTitle;

  001ad	8d 4f 48	 lea	 ecx, DWORD PTR [edi+72]
  001b0	55		 push	 ebp
  001b1	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 436  : 
; 437  : 	m_mapTArticle.insert(MAPTGUILDARTICLE::value_type(pArticle->m_dwID, pArticle));

  001b6	8b 06		 mov	 eax, DWORD PTR [esi]
  001b8	8d 4c 24 14	 lea	 ecx, DWORD PTR $T161514[esp+48]
  001bc	51		 push	 ecx
  001bd	8d 54 24 20	 lea	 edx, DWORD PTR $T161515[esp+52]
  001c1	52		 push	 edx
  001c2	8d 8f 8c 00 00
	00		 lea	 ecx, DWORD PTR [edi+140]
  001c8	89 44 24 1c	 mov	 DWORD PTR $T161514[esp+56], eax
  001cc	89 74 24 20	 mov	 DWORD PTR $T161514[esp+60], esi
  001d0	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::insert

; 438  : 
; 439  : 	return m_dwArticleIndex;

  001d5	8b 44 24 38	 mov	 eax, DWORD PTR _strWritter$[esp+44]
  001d9	8b bf 88 00 00
	00		 mov	 edi, DWORD PTR [edi+136]
  001df	83 c0 f0	 add	 eax, -16		; fffffff0H
  001e2	c6 44 24 2c 01	 mov	 BYTE PTR __$EHRec$[esp+56], 1
  001e7	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  001ea	83 ca ff	 or	 edx, -1
  001ed	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  001f1	4a		 dec	 edx
  001f2	85 d2		 test	 edx, edx
  001f4	5e		 pop	 esi
  001f5	5d		 pop	 ebp
  001f6	7f 08		 jg	 SHORT $L161860
  001f8	8b 08		 mov	 ecx, DWORD PTR [eax]
  001fa	8b 11		 mov	 edx, DWORD PTR [ecx]
  001fc	50		 push	 eax
  001fd	ff 52 04	 call	 DWORD PTR [edx+4]
$L161860:
  00200	8b 44 24 34	 mov	 eax, DWORD PTR _strTitle$[esp+36]
  00204	83 c0 f0	 add	 eax, -16		; fffffff0H
  00207	c6 44 24 24 00	 mov	 BYTE PTR __$EHRec$[esp+48], 0
  0020c	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0020f	83 ca ff	 or	 edx, -1
  00212	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00216	4a		 dec	 edx
  00217	85 d2		 test	 edx, edx
  00219	7f 08		 jg	 SHORT $L161887
  0021b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0021d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0021f	50		 push	 eax
  00220	ff 52 04	 call	 DWORD PTR [edx+4]
$L161887:
  00223	8b 44 24 38	 mov	 eax, DWORD PTR _strArticle$[esp+36]
  00227	83 c0 f0	 add	 eax, -16		; fffffff0H
  0022a	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00232	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00235	83 ca ff	 or	 edx, -1
  00238	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0023c	4a		 dec	 edx
  0023d	85 d2		 test	 edx, edx
  0023f	7f 08		 jg	 SHORT $L161914
  00241	8b 08		 mov	 ecx, DWORD PTR [eax]
  00243	8b 11		 mov	 edx, DWORD PTR [ecx]
  00245	50		 push	 eax
  00246	ff 52 04	 call	 DWORD PTR [edx+4]
$L161914:

; 440  : }

  00249	8b 4c 24 1c	 mov	 ecx, DWORD PTR __$EHRec$[esp+40]
  0024d	8b c7		 mov	 eax, edi
  0024f	5f		 pop	 edi
  00250	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00257	83 c4 24	 add	 esp, 36			; 00000024H
  0025a	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L161517:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strArticle$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L161518:
  00008	8d 4d 0c	 lea	 ecx, DWORD PTR _strTitle$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L161519:
  00010	8d 4d 08	 lea	 ecx, DWORD PTR _strWritter$[ebp-4]
  00013	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L161520:
  00018	8d 4d 04	 lea	 ecx, DWORD PTR $T161513[ebp-4]
  0001b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?AddArticle@CTGuild@@QAEKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z:
  00020	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T161919
  00025	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?AddArticle@CTGuild@@QAEKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z ENDP ; CTGuild::AddArticle
PUBLIC	?PutInItem@CTGuild@@QAEXKPAUtagTITEM@@@Z	; CTGuild::PutInItem
; Function compile flags: /Ogty
;	COMDAT ?PutInItem@CTGuild@@QAEXKPAUtagTITEM@@@Z
_TEXT	SEGMENT
$T161929 = -16						; size = 8
_find$ = -16						; size = 4
$T161930 = -8						; size = 8
_dwItemID$ = 8						; size = 4
_pItem$ = 12						; size = 4
?PutInItem@CTGuild@@QAEXKPAUtagTITEM@@@Z PROC NEAR	; CTGuild::PutInItem, COMDAT
; _this$ = ecx

; 498  : {

  00000	83 ec 10	 sub	 esp, 16			; 00000010H
  00003	56		 push	 esi
  00004	57		 push	 edi
  00005	8b f1		 mov	 esi, ecx

; 499  : 	MAPTITEM::iterator find = m_mapTCabinet.find(dwItemID);

  00007	8d 44 24 1c	 lea	 eax, DWORD PTR _dwItemID$[esp+20]
  0000b	50		 push	 eax
  0000c	8d 4c 24 0c	 lea	 ecx, DWORD PTR _find$[esp+28]
  00010	8d 7e 64	 lea	 edi, DWORD PTR [esi+100]
  00013	51		 push	 ecx
  00014	8b cf		 mov	 ecx, edi
  00016	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::find

; 500  : 	if(find!=m_mapTCabinet.end())

  0001b	8b 44 24 08	 mov	 eax, DWORD PTR _find$[esp+24]
  0001f	3b 46 68	 cmp	 eax, DWORD PTR [esi+104]
  00022	74 25		 je	 SHORT $L134972

; 501  : 	{
; 502  : 		(*find).second->m_bCount += pItem->m_bCount;

  00024	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00027	8b 4c 24 20	 mov	 ecx, DWORD PTR _pItem$[esp+20]
  0002b	8a 51 13	 mov	 dl, BYTE PTR [ecx+19]
  0002e	53		 push	 ebx
  0002f	8a 58 13	 mov	 bl, BYTE PTR [eax+19]
  00032	02 da		 add	 bl, dl

; 503  : 		delete pItem;

  00034	51		 push	 ecx
  00035	88 58 13	 mov	 BYTE PTR [eax+19], bl
  00038	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003d	83 c4 04	 add	 esp, 4
  00040	5b		 pop	 ebx
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi

; 508  : }

  00043	83 c4 10	 add	 esp, 16			; 00000010H
  00046	c2 08 00	 ret	 8
$L134972:

; 504  : 		pItem = NULL;
; 505  : 	}
; 506  : 	else
; 507  : 		m_mapTCabinet.insert(MAPTITEM::value_type(pItem->m_dwItemID, pItem));

  00049	8b 44 24 20	 mov	 eax, DWORD PTR _pItem$[esp+20]
  0004d	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00050	8d 54 24 08	 lea	 edx, DWORD PTR $T161929[esp+24]
  00054	89 44 24 0c	 mov	 DWORD PTR $T161929[esp+28], eax
  00058	52		 push	 edx
  00059	8d 44 24 14	 lea	 eax, DWORD PTR $T161930[esp+28]
  0005d	89 4c 24 0c	 mov	 DWORD PTR $T161929[esp+28], ecx
  00061	50		 push	 eax
  00062	8b cf		 mov	 ecx, edi
  00064	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTITEM@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::insert
  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi

; 508  : }

  0006b	83 c4 10	 add	 esp, 16			; 00000010H
  0006e	c2 08 00	 ret	 8
?PutInItem@CTGuild@@QAEXKPAUtagTITEM@@@Z ENDP		; CTGuild::PutInItem
_TEXT	ENDS
PUBLIC	?AddTactics@CTGuild@@QAEEPAUtagTTACTICSMEMBER@@@Z ; CTGuild::AddTactics
EXTRN	?OnEventExpired@CTWorldSvrModule@@QAEXEE_JKK@Z:NEAR ; CTWorldSvrModule::OnEventExpired
; Function compile flags: /Ogty
;	COMDAT ?AddTactics@CTGuild@@QAEEPAUtagTTACTICSMEMBER@@@Z
_TEXT	SEGMENT
$T161978 = -16						; size = 8
$T161979 = -8						; size = 8
_find$ = 8						; size = 4
_pMember$ = 8						; size = 4
?AddTactics@CTGuild@@QAEEPAUtagTTACTICSMEMBER@@@Z PROC NEAR ; CTGuild::AddTactics, COMDAT
; _this$ = ecx

; 663  : {

  00000	83 ec 10	 sub	 esp, 16			; 00000010H
  00003	53		 push	 ebx
  00004	55		 push	 ebp
  00005	56		 push	 esi

; 664  : 	MAPTTACTICSMEMBER::iterator find = m_mapTTactics.find(pMember->m_dwID);

  00006	8b 74 24 20	 mov	 esi, DWORD PTR _pMember$[esp+24]
  0000a	57		 push	 edi
  0000b	8b d9		 mov	 ebx, ecx
  0000d	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  00010	57		 push	 edi
  00011	8d 44 24 28	 lea	 eax, DWORD PTR _find$[esp+32]
  00015	8d 6b 7c	 lea	 ebp, DWORD PTR [ebx+124]
  00018	50		 push	 eax
  00019	8b cd		 mov	 ecx, ebp
  0001b	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::find

; 665  : 	if(find == m_mapTTactics.end())

  00020	8b 4c 24 24	 mov	 ecx, DWORD PTR _find$[esp+28]
  00024	3b 8b 80 00 00
	00		 cmp	 ecx, DWORD PTR [ebx+128]
  0002a	75 43		 jne	 SHORT $L135371

; 666  : 	{
; 667  : 		_AtlModule.OnEventExpired(TRUE, EXPIRED_GT, pMember->m_dlEndTime, m_dwID, pMember->m_dwID);

  0002c	8b 17		 mov	 edx, DWORD PTR [edi]
  0002e	8b 03		 mov	 eax, DWORD PTR [ebx]
  00030	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00033	52		 push	 edx
  00034	8b 56 20	 mov	 edx, DWORD PTR [esi+32]
  00037	50		 push	 eax
  00038	51		 push	 ecx
  00039	52		 push	 edx
  0003a	6a 03		 push	 3
  0003c	6a 01		 push	 1
  0003e	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTWorldSvrModule@@A
  00043	e8 00 00 00 00	 call	 ?OnEventExpired@CTWorldSvrModule@@QAEXEE_JKK@Z ; CTWorldSvrModule::OnEventExpired

; 668  : 		m_mapTTactics.insert(MAPTTACTICSMEMBER::value_type(pMember->m_dwID, pMember));

  00048	8b 07		 mov	 eax, DWORD PTR [edi]
  0004a	8d 4c 24 10	 lea	 ecx, DWORD PTR $T161978[esp+32]
  0004e	51		 push	 ecx
  0004f	8d 54 24 1c	 lea	 edx, DWORD PTR $T161979[esp+36]
  00053	52		 push	 edx
  00054	8b cd		 mov	 ecx, ebp
  00056	89 44 24 18	 mov	 DWORD PTR $T161978[esp+40], eax
  0005a	89 74 24 1c	 mov	 DWORD PTR $T161978[esp+44], esi
  0005e	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::insert
  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5d		 pop	 ebp

; 672  : 
; 673  : 	return TRUE;

  00066	b0 01		 mov	 al, 1
  00068	5b		 pop	 ebx

; 674  : }

  00069	83 c4 10	 add	 esp, 16			; 00000010H
  0006c	c2 04 00	 ret	 4
$L135371:
  0006f	5f		 pop	 edi
  00070	5e		 pop	 esi
  00071	5d		 pop	 ebp

; 669  : 	}
; 670  : 	else
; 671  : 		return FALSE;

  00072	32 c0		 xor	 al, al
  00074	5b		 pop	 ebx

; 674  : }

  00075	83 c4 10	 add	 esp, 16			; 00000010H
  00078	c2 04 00	 ret	 4
?AddTactics@CTGuild@@QAEEPAUtagTTACTICSMEMBER@@@Z ENDP	; CTGuild::AddTactics
_TEXT	ENDS
PUBLIC	?GetCastleApplicantCount@CTGuild@@QAEXPAV?$map@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@@std@@@Z ; CTGuild::GetCastleApplicantCount
; Function compile flags: /Ogty
;	COMDAT ?GetCastleApplicantCount@CTGuild@@QAEXPAV?$map@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -28						; size = 4
$T162010 = -24						; size = 4
$T162017 = -20						; size = 4
_itM$ = -20						; size = 4
_wCastle$135446 = -16					; size = 2
_itC$136066 = -16					; size = 4
$T162012 = -16						; size = 8
_wCastle$136064 = -8					; size = 2
$T162019 = -8						; size = 8
_itC$136005 = -8					; size = 4
_mapCastle$ = 8						; size = 4
?GetCastleApplicantCount@CTGuild@@QAEXPAV?$map@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@@std@@@Z PROC NEAR ; CTGuild::GetCastleApplicantCount, COMDAT
; _this$ = ecx

; 724  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00009	89 0c 24	 mov	 DWORD PTR _this$[esp+28], ecx

; 725  : 	MAPTGUILDMEMBER::iterator itM;
; 726  : 	for(itM=m_mapTMember.begin(); itM!=m_mapTMember.end(); itM++)

  0000c	8b 49 74	 mov	 ecx, DWORD PTR [ecx+116]
  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	3b c1		 cmp	 eax, ecx
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	89 44 24 14	 mov	 DWORD PTR _itM$[esp+40], eax
  0001a	74 72		 je	 SHORT $L135445
  0001c	8d 64 24 00	 npad	 4
$L162071:

; 727  : 	{
; 728  : 		WORD wCastle = (*itM).second->m_wCastle;

  00020	8b 70 10	 mov	 esi, DWORD PTR [eax+16]
  00023	33 ff		 xor	 edi, edi
  00025	66 8b 7e 14	 mov	 di, WORD PTR [esi+20]

; 729  : 		if(wCastle)

  00029	66 85 ff	 test	 di, di
  0002c	89 7c 24 18	 mov	 DWORD PTR _wCastle$135446[esp+40], edi
  00030	74 46		 je	 SHORT $L135444

; 730  : 		{
; 731  : 			MAPWORD::iterator itC = mapCastle->find(wCastle);

  00032	8b 5d 08	 mov	 ebx, DWORD PTR _mapCastle$[ebp]
  00035	8d 44 24 18	 lea	 eax, DWORD PTR _wCastle$135446[esp+40]
  00039	50		 push	 eax
  0003a	8d 4c 24 24	 lea	 ecx, DWORD PTR _itC$136005[esp+44]
  0003e	51		 push	 ecx
  0003f	8b cb		 mov	 ecx, ebx
  00041	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::find

; 732  : 			if(itC == mapCastle->end())

  00046	8b 44 24 20	 mov	 eax, DWORD PTR _itC$136005[esp+40]
  0004a	3b 43 04	 cmp	 eax, DWORD PTR [ebx+4]
  0004d	75 25		 jne	 SHORT $L136008

; 733  : 				mapCastle->insert(MAPWORD::value_type(wCastle, MAKEWORD(1, (*itM).second->m_bCamp)));

  0004f	33 d2		 xor	 edx, edx
  00051	8a 76 16	 mov	 dh, BYTE PTR [esi+22]
  00054	8d 44 24 10	 lea	 eax, DWORD PTR $T162010[esp+40]
  00058	50		 push	 eax
  00059	8d 4c 24 1c	 lea	 ecx, DWORD PTR $T162012[esp+44]
  0005d	51		 push	 ecx
  0005e	8b cb		 mov	 ecx, ebx
  00060	66 89 7c 24 18	 mov	 WORD PTR $T162010[esp+48], di
  00065	83 ca 01	 or	 edx, 1
  00068	66 89 54 24 1a	 mov	 WORD PTR $T162010[esp+50], dx
  0006d	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGG@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::insert

; 734  : 			else

  00072	eb 04		 jmp	 SHORT $L135444
$L136008:

; 735  : 				(*itC).second += 1;

  00074	66 ff 40 0e	 inc	 WORD PTR [eax+14]
$L135444:

; 725  : 	MAPTGUILDMEMBER::iterator itM;
; 726  : 	for(itM=m_mapTMember.begin(); itM!=m_mapTMember.end(); itM++)

  00078	8d 4c 24 14	 lea	 ecx, DWORD PTR _itM$[esp+40]
  0007c	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc
  00081	8b 54 24 0c	 mov	 edx, DWORD PTR _this$[esp+40]
  00085	8b 44 24 14	 mov	 eax, DWORD PTR _itM$[esp+40]
  00089	3b 42 74	 cmp	 eax, DWORD PTR [edx+116]
  0008c	75 92		 jne	 SHORT $L162071
$L135445:

; 736  : 		}
; 737  : 	}
; 738  : 
; 739  : 	MAPTTACTICSMEMBER::iterator itT;
; 740  : 	for(itT=m_mapTTactics.begin(); itT != m_mapTTactics.end(); itT++)

  0008e	8b 44 24 0c	 mov	 eax, DWORD PTR _this$[esp+40]
  00092	8b 80 80 00 00
	00		 mov	 eax, DWORD PTR [eax+128]
  00098	8b 30		 mov	 esi, DWORD PTR [eax]
  0009a	3b f0		 cmp	 esi, eax
  0009c	0f 84 b1 00 00
	00		 je	 $L136063
$L162353:

; 741  : 	{
; 742  : 		WORD wCastle = (*itT).second->m_wCastle;

  000a2	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  000a5	33 db		 xor	 ebx, ebx
  000a7	66 8b 5f 28	 mov	 bx, WORD PTR [edi+40]

; 743  : 		if(wCastle)

  000ab	66 85 db	 test	 bx, bx
  000ae	89 5c 24 20	 mov	 DWORD PTR _wCastle$136064[esp+40], ebx
  000b2	74 45		 je	 SHORT $L136062

; 744  : 		{
; 745  : 			MAPWORD::iterator itC = mapCastle->find(wCastle);

  000b4	8d 4c 24 20	 lea	 ecx, DWORD PTR _wCastle$136064[esp+40]
  000b8	51		 push	 ecx
  000b9	8b 4d 08	 mov	 ecx, DWORD PTR _mapCastle$[ebp]
  000bc	8d 54 24 1c	 lea	 edx, DWORD PTR _itC$136066[esp+44]
  000c0	52		 push	 edx
  000c1	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@ABG@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::find

; 746  : 			if(itC == mapCastle->end())

  000c6	8b 4d 08	 mov	 ecx, DWORD PTR _mapCastle$[ebp]
  000c9	8b 44 24 18	 mov	 eax, DWORD PTR _itC$136066[esp+40]
  000cd	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  000d0	75 23		 jne	 SHORT $L136069

; 747  : 				mapCastle->insert(MAPWORD::value_type(wCastle, MAKEWORD(1, (*itT).second->m_bCamp)));

  000d2	33 c0		 xor	 eax, eax
  000d4	8a 67 2a	 mov	 ah, BYTE PTR [edi+42]
  000d7	8d 54 24 14	 lea	 edx, DWORD PTR $T162017[esp+40]
  000db	52		 push	 edx
  000dc	66 89 5c 24 18	 mov	 WORD PTR $T162017[esp+44], bx
  000e1	83 c8 01	 or	 eax, 1
  000e4	66 89 44 24 1a	 mov	 WORD PTR $T162017[esp+46], ax
  000e9	8d 44 24 24	 lea	 eax, DWORD PTR $T162019[esp+44]
  000ed	50		 push	 eax
  000ee	e8 00 00 00 00	 call	 ?insert@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@$0A@@std@@@std@@_N@2@ABU?$pair@$$CBGG@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,unsigned short,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,unsigned short> >,0> >::insert

; 748  : 			else

  000f3	eb 04		 jmp	 SHORT $L136062
$L136069:

; 749  : 				(*itC).second += 1;

  000f5	66 ff 40 0e	 inc	 WORD PTR [eax+14]
$L136062:

; 736  : 		}
; 737  : 	}
; 738  : 
; 739  : 	MAPTTACTICSMEMBER::iterator itT;
; 740  : 	for(itT=m_mapTTactics.begin(); itT != m_mapTTactics.end(); itT++)

  000f9	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  000fc	84 c0		 test	 al, al
  000fe	75 43		 jne	 SHORT $L162362
  00100	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00103	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00106	84 c9		 test	 cl, cl
  00108	75 18		 jne	 SHORT $L162486
  0010a	8b f0		 mov	 esi, eax
  0010c	8b 06		 mov	 eax, DWORD PTR [esi]
  0010e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00111	84 c9		 test	 cl, cl
  00113	75 2e		 jne	 SHORT $L162362
$L162383:
  00115	8b f0		 mov	 esi, eax
  00117	8b 06		 mov	 eax, DWORD PTR [esi]
  00119	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0011c	84 c9		 test	 cl, cl
  0011e	74 f5		 je	 SHORT $L162383
  00120	eb 21		 jmp	 SHORT $L162362
$L162486:
  00122	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00125	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00128	84 c9		 test	 cl, cl
  0012a	75 15		 jne	 SHORT $L162365
  0012c	8d 64 24 00	 npad	 4
$L162364:
  00130	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00133	75 0c		 jne	 SHORT $L162365
  00135	8b f0		 mov	 esi, eax
  00137	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0013a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0013d	84 c9		 test	 cl, cl
  0013f	74 ef		 je	 SHORT $L162364
$L162365:
  00141	8b f0		 mov	 esi, eax
$L162362:
  00143	8b 4c 24 0c	 mov	 ecx, DWORD PTR _this$[esp+40]
  00147	3b b1 80 00 00
	00		 cmp	 esi, DWORD PTR [ecx+128]
  0014d	0f 85 4f ff ff
	ff		 jne	 $L162353
$L136063:

; 750  : 		}
; 751  : 	}
; 752  : }

  00153	5f		 pop	 edi
  00154	5e		 pop	 esi
  00155	5b		 pop	 ebx
  00156	8b e5		 mov	 esp, ebp
  00158	5d		 pop	 ebp
  00159	c2 04 00	 ret	 4
?GetCastleApplicantCount@CTGuild@@QAEXPAV?$map@GGU?$less@G@std@@V?$allocator@U?$pair@$$CBGG@std@@@2@@std@@@Z ENDP ; CTGuild::GetCastleApplicantCount
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T162560 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T162560[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT
$T162588 = -8						; size = 4
__Where$ = -8						; size = 8
__Num$ = 8						; size = 4
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::erase, COMDAT
; _this$ = ecx

; 765  : 		{	// erase and count all that match _Keyval

  00000	83 ec 08	 sub	 esp, 8

; 766  : 		_Pairii _Where = equal_range(_Keyval);

  00003	8b 44 24 0c	 mov	 eax, DWORD PTR __Keyval$[esp+4]
  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	8d 4c 24 10	 lea	 ecx, DWORD PTR __Where$[esp+24]
  00011	51		 push	 ecx
  00012	8b ce		 mov	 ecx, esi
  00014	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::equal_range

; 767  : 		size_type _Num = 0;
; 768  : 		_Distance(_Where.first, _Where.second, _Num);

  00019	8b 7c 24 10	 mov	 edi, DWORD PTR __Where$[esp+24]
  0001d	8b 5c 24 0c	 mov	 ebx, DWORD PTR __Where$[esp+20]
  00021	8d 54 24 18	 lea	 edx, DWORD PTR __Num$[esp+16]
  00025	52		 push	 edx
  00026	57		 push	 edi
  00027	53		 push	 ebx
  00028	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR __Num$[esp+28], 0
  00030	e8 00 00 00 00	 call	 ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator,unsigned int>
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH

; 769  : 		erase(_Where.first, _Where.second);

  00038	57		 push	 edi
  00039	53		 push	 ebx
  0003a	8d 44 24 14	 lea	 eax, DWORD PTR $T162588[esp+28]
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::erase

; 770  : 		return (_Num);

  00046	8b 44 24 18	 mov	 eax, DWORD PTR __Num$[esp+16]
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx

; 771  : 		}

  0004d	83 c4 08	 add	 esp, 8
  00050	c2 04 00	 ret	 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::erase
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T162659 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T162659[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT
$T162687 = -8						; size = 4
__Where$ = -8						; size = 8
__Num$ = 8						; size = 4
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::erase, COMDAT
; _this$ = ecx

; 765  : 		{	// erase and count all that match _Keyval

  00000	83 ec 08	 sub	 esp, 8

; 766  : 		_Pairii _Where = equal_range(_Keyval);

  00003	8b 44 24 0c	 mov	 eax, DWORD PTR __Keyval$[esp+4]
  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	8d 4c 24 10	 lea	 ecx, DWORD PTR __Where$[esp+24]
  00011	51		 push	 ecx
  00012	8b ce		 mov	 ecx, esi
  00014	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::equal_range

; 767  : 		size_type _Num = 0;
; 768  : 		_Distance(_Where.first, _Where.second, _Num);

  00019	8b 7c 24 10	 mov	 edi, DWORD PTR __Where$[esp+24]
  0001d	8b 5c 24 0c	 mov	 ebx, DWORD PTR __Where$[esp+20]
  00021	8d 54 24 18	 lea	 edx, DWORD PTR __Num$[esp+16]
  00025	52		 push	 edx
  00026	57		 push	 edi
  00027	53		 push	 ebx
  00028	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR __Num$[esp+28], 0
  00030	e8 00 00 00 00	 call	 ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator,unsigned int>
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH

; 769  : 		erase(_Where.first, _Where.second);

  00038	57		 push	 edi
  00039	53		 push	 ebx
  0003a	8d 44 24 14	 lea	 eax, DWORD PTR $T162687[esp+28]
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::erase

; 770  : 		return (_Num);

  00046	8b 44 24 18	 mov	 eax, DWORD PTR __Num$[esp+16]
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx

; 771  : 		}

  0004d	83 c4 08	 add	 esp, 8
  00050	c2 04 00	 ret	 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::erase
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T162758 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T162758[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT
$T162786 = -8						; size = 4
__Where$ = -8						; size = 8
__Num$ = 8						; size = 4
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::erase, COMDAT
; _this$ = ecx

; 765  : 		{	// erase and count all that match _Keyval

  00000	83 ec 08	 sub	 esp, 8

; 766  : 		_Pairii _Where = equal_range(_Keyval);

  00003	8b 44 24 0c	 mov	 eax, DWORD PTR __Keyval$[esp+4]
  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	8d 4c 24 10	 lea	 ecx, DWORD PTR __Where$[esp+24]
  00011	51		 push	 ecx
  00012	8b ce		 mov	 ecx, esi
  00014	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::equal_range

; 767  : 		size_type _Num = 0;
; 768  : 		_Distance(_Where.first, _Where.second, _Num);

  00019	8b 7c 24 10	 mov	 edi, DWORD PTR __Where$[esp+24]
  0001d	8b 5c 24 0c	 mov	 ebx, DWORD PTR __Where$[esp+20]
  00021	8d 54 24 18	 lea	 edx, DWORD PTR __Num$[esp+16]
  00025	52		 push	 edx
  00026	57		 push	 edi
  00027	53		 push	 ebx
  00028	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR __Num$[esp+28], 0
  00030	e8 00 00 00 00	 call	 ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator,unsigned int>
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH

; 769  : 		erase(_Where.first, _Where.second);

  00038	57		 push	 edi
  00039	53		 push	 ebx
  0003a	8d 44 24 14	 lea	 eax, DWORD PTR $T162786[esp+28]
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::erase

; 770  : 		return (_Num);

  00046	8b 44 24 18	 mov	 eax, DWORD PTR __Num$[esp+16]
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx

; 771  : 		}

  0004d	83 c4 08	 add	 esp, 8
  00050	c2 04 00	 ret	 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::erase
_TEXT	ENDS
PUBLIC	??1?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >
; Function compile flags: /Ogty
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T162875 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T162875[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::~_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::erase
; Function compile flags: /Ogty
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z
_TEXT	SEGMENT
$T162885 = -8						; size = 4
__Where$ = -8						; size = 8
__Num$ = 8						; size = 4
__Keyval$ = 8						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::erase, COMDAT
; _this$ = ecx

; 765  : 		{	// erase and count all that match _Keyval

  00000	83 ec 08	 sub	 esp, 8

; 766  : 		_Pairii _Where = equal_range(_Keyval);

  00003	8b 44 24 0c	 mov	 eax, DWORD PTR __Keyval$[esp+4]
  00007	53		 push	 ebx
  00008	56		 push	 esi
  00009	57		 push	 edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	50		 push	 eax
  0000d	8d 4c 24 10	 lea	 ecx, DWORD PTR __Where$[esp+24]
  00011	51		 push	 ecx
  00012	8b ce		 mov	 ecx, esi
  00014	e8 00 00 00 00	 call	 ?equal_range@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AU?$pair@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@V123@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::equal_range

; 767  : 		size_type _Num = 0;
; 768  : 		_Distance(_Where.first, _Where.second, _Num);

  00019	8b 7c 24 10	 mov	 edi, DWORD PTR __Where$[esp+24]
  0001d	8b 5c 24 0c	 mov	 ebx, DWORD PTR __Where$[esp+20]
  00021	8d 54 24 18	 lea	 edx, DWORD PTR __Num$[esp+16]
  00025	52		 push	 edx
  00026	57		 push	 edi
  00027	53		 push	 ebx
  00028	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR __Num$[esp+28], 0
  00030	e8 00 00 00 00	 call	 ??$_Distance@Viterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@I@std@@YAXViterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@0@0AAI@Z ; std::_Distance<std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator,unsigned int>
  00035	83 c4 0c	 add	 esp, 12			; 0000000cH

; 769  : 		erase(_Where.first, _Where.second);

  00038	57		 push	 edi
  00039	53		 push	 ebx
  0003a	8d 44 24 14	 lea	 eax, DWORD PTR $T162885[esp+28]
  0003e	50		 push	 eax
  0003f	8b ce		 mov	 ecx, esi
  00041	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::erase

; 770  : 		return (_Num);

  00046	8b 44 24 18	 mov	 eax, DWORD PTR __Num$[esp+16]
  0004a	5f		 pop	 edi
  0004b	5e		 pop	 esi
  0004c	5b		 pop	 ebx

; 771  : 		}

  0004d	83 c4 08	 add	 esp, 8
  00050	c2 04 00	 ret	 4
?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::erase
_TEXT	ENDS
PUBLIC	??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ PROC NEAR	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >, COMDAT
; _this$ = ecx

; 299  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx

; 300  : 		_Buy(0);

  00002	33 c9		 xor	 ecx, ecx
  00004	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00007	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0000a	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 301  : 		}

  0000d	c3		 ret	 0
??0?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::vector<unsigned long,std::allocator<unsigned long> >
_TEXT	ENDS
PUBLIC	??0?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@XZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >
; Function compile flags: /Ogty
;	COMDAT ??0?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >, COMDAT
; _this$ = ecx

; 299  : 		{	// construct empty vector

  00000	8b c1		 mov	 eax, ecx

; 300  : 		_Buy(0);

  00002	33 c9		 xor	 ecx, ecx
  00004	89 48 04	 mov	 DWORD PTR [eax+4], ecx
  00007	89 48 08	 mov	 DWORD PTR [eax+8], ecx
  0000a	89 48 0c	 mov	 DWORD PTR [eax+12], ecx

; 301  : 		}

  0000d	c3		 ret	 0
??0?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@XZ ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >
_TEXT	ENDS
PUBLIC	??1?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@XZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::~vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >
; Function compile flags: /Ogty
;	COMDAT ??1?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@XZ PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::~vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >, COMDAT
; _this$ = ecx

; 388  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXXZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Tidy
??1?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@XZ ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::~vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >
_TEXT	ENDS
PUBLIC	?pop_back@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEXXZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::pop_back
; Function compile flags: /Ogty
;	COMDAT ?pop_back@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?pop_back@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEXXZ PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::pop_back, COMDAT
; _this$ = ecx

; 587  : 		{	// erase element at end

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx

; 588  : 		if (!empty())

  00003	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00006	85 c9		 test	 ecx, ecx
  00008	74 2b		 je	 SHORT $L136551
  0000a	57		 push	 edi
  0000b	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]
  0000e	8b c7		 mov	 eax, edi
  00010	2b c1		 sub	 eax, ecx
  00012	c1 f8 04	 sar	 eax, 4
  00015	85 c0		 test	 eax, eax
  00017	74 1b		 je	 SHORT $L163108
  00019	56		 push	 esi

; 589  : 			{	// erase last element
; 590  : 			_Destroy(_Mylast - 1, _Mylast);

  0001a	8d 77 f0	 lea	 esi, DWORD PTR [edi-16]
  0001d	3b f7		 cmp	 esi, edi
  0001f	74 0e		 je	 SHORT $L163093
$L163091:
  00021	8b ce		 mov	 ecx, esi
  00023	e8 00 00 00 00	 call	 ??1tagTGUILDPOINTREWARD@@QAE@XZ
  00028	83 c6 10	 add	 esi, 16			; 00000010H
  0002b	3b f7		 cmp	 esi, edi
  0002d	75 f2		 jne	 SHORT $L163091
$L163093:

; 591  : 			--_Mylast;

  0002f	83 43 08 f0	 add	 DWORD PTR [ebx+8], -16	; fffffff0H
  00033	5e		 pop	 esi
$L163108:
  00034	5f		 pop	 edi
$L136551:
  00035	5b		 pop	 ebx

; 592  : 			}
; 593  : 		}

  00036	c3		 ret	 0
?pop_back@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEXXZ ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::pop_back
_TEXT	ENDS
PUBLIC	?clear@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEXXZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::clear
; Function compile flags: /Ogty
;	COMDAT ?clear@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEXXZ PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::clear, COMDAT
; _this$ = ecx

; 744  : 		_Tidy();

  00000	e9 00 00 00 00	 jmp	 ?_Tidy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXXZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Tidy
?clear@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEXXZ ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::clear
_TEXT	ENDS
PUBLIC	?_Insert_n@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXViterator@12@IABUtagTGUILDPOINTREWARD@@@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Insert_n
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T163440 DD	0ffffffffH
	DD	FLAT:$L163121
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
	DD	00H
$T163442 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L163118
$T163443 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L163120
$T163441 DD	01H
	DD	01H
	DD	02H
	DD	01H
	DD	FLAT:$T163442
	DD	03H
	DD	03H
	DD	04H
	DD	01H
	DD	FLAT:$T163443
$T163437 DD	019930520H
	DD	05H
	DD	FLAT:$T163440
	DD	02H
	DD	FLAT:$T163441
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	ENDS
;	COMDAT ?_Insert_n@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXViterator@12@IABUtagTGUILDPOINTREWARD@@@Z
_TEXT	SEGMENT
__Tmp$ = -40						; size = 16
tv471 = -24						; size = 4
__Newvec$137232 = -24					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Cat$163391 = 8					; size = 1
__Cat$163378 = 8					; size = 1
__Cat$163354 = 8					; size = 1
__Cat$163315 = 8					; size = 1
__Cat$163291 = 8					; size = 1
__Cat$163269 = 8					; size = 1
__Where$ = 8						; size = 4
__Ptr$137233 = 12					; size = 4
__Count$ = 12						; size = 4
tv487 = 16						; size = 4
tv486 = 16						; size = 4
__Val$ = 16						; size = 4
?_Insert_n@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXViterator@12@IABUtagTGUILDPOINTREWARD@@@Z PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Insert_n, COMDAT
; _this$ = ecx

; 809  : 		{	// insert _Count * _Val at _Where

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Insert_n@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXViterator@12@IABUtagTGUILDPOINTREWARD@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0001b	53		 push	 ebx
  0001c	56		 push	 esi
  0001d	57		 push	 edi

; 810  : 		_Ty _Tmp = _Val;	// in case _Val is in sequence

  0001e	8b 7d 10	 mov	 edi, DWORD PTR __Val$[ebp]
  00021	8b 07		 mov	 eax, DWORD PTR [edi]
  00023	83 e8 10	 sub	 eax, 16			; 00000010H
  00026	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  00029	8b f1		 mov	 esi, ecx
  0002b	50		 push	 eax
  0002c	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  0002f	e8 00 00 00 00	 call	 ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
  00034	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00037	8b 57 0c	 mov	 edx, DWORD PTR [edi+12]
  0003a	83 c0 10	 add	 eax, 16			; 00000010H
  0003d	89 45 d8	 mov	 DWORD PTR __Tmp$[ebp], eax
  00040	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00043	83 c4 04	 add	 esp, 4
  00046	89 45 dc	 mov	 DWORD PTR __Tmp$[ebp+4], eax
  00049	89 4d e0	 mov	 DWORD PTR __Tmp$[ebp+8], ecx
  0004c	89 55 e4	 mov	 DWORD PTR __Tmp$[ebp+12], edx

; 811  : 		size_type _Capacity = capacity();

  0004f	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00052	33 d2		 xor	 edx, edx
  00054	3b ca		 cmp	 ecx, edx
  00056	89 55 fc	 mov	 DWORD PTR __$EHRec$[ebp+12], edx
  00059	75 04		 jne	 SHORT $L163178
  0005b	33 c0		 xor	 eax, eax
  0005d	eb 08		 jmp	 SHORT $L163179
$L163178:
  0005f	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00062	2b c1		 sub	 eax, ecx
  00064	c1 f8 04	 sar	 eax, 4
$L163179:

; 812  : 
; 813  : 		if (_Count == 0)

  00067	8b 7d 0c	 mov	 edi, DWORD PTR __Count$[ebp]
  0006a	3b fa		 cmp	 edi, edx
  0006c	0f 84 1d 02 00
	00		 je	 $L137252

; 814  : 			;
; 815  : 		else if (max_size() - size() < _Count)

  00072	3b ca		 cmp	 ecx, edx
  00074	74 08		 je	 SHORT $L163203
  00076	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00079	2b d1		 sub	 edx, ecx
  0007b	c1 fa 04	 sar	 edx, 4
$L163203:
  0007e	bb ff ff ff 0f	 mov	 ebx, 268435455		; 0fffffffH
  00083	2b da		 sub	 ebx, edx
  00085	3b df		 cmp	 ebx, edi
  00087	73 07		 jae	 SHORT $L137228

; 816  : 			_Xlen();	// result too long

  00089	8b ce		 mov	 ecx, esi
  0008b	e8 00 00 00 00	 call	 ?_Xlen@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IBEXXZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Xlen
$L163444:
$L137228:

; 817  : 		else if (_Capacity < size() + _Count)

  00090	85 c9		 test	 ecx, ecx
  00092	75 04		 jne	 SHORT $L163209
  00094	33 d2		 xor	 edx, edx
  00096	eb 08		 jmp	 SHORT $L163210
$L163209:
  00098	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0009b	2b d1		 sub	 edx, ecx
  0009d	c1 fa 04	 sar	 edx, 4
$L163210:
  000a0	03 d7		 add	 edx, edi
  000a2	3b c2		 cmp	 eax, edx
  000a4	0f 83 0f 01 00
	00		 jae	 $L137230

; 818  : 			{	// not enough room, reallocate
; 819  : 			_Capacity = max_size() - _Capacity / 2 < _Capacity
; 820  : 				? 0 : _Capacity + _Capacity / 2;	// try to grow by 50%

  000aa	8b d0		 mov	 edx, eax
  000ac	d1 ea		 shr	 edx, 1
  000ae	bb ff ff ff 0f	 mov	 ebx, 268435455		; 0fffffffH
  000b3	2b da		 sub	 ebx, edx
  000b5	3b d8		 cmp	 ebx, eax
  000b7	73 04		 jae	 SHORT $L163115
  000b9	33 c0		 xor	 eax, eax
  000bb	eb 02		 jmp	 SHORT $L163116
$L163115:
  000bd	03 c2		 add	 eax, edx
$L163116:

; 821  : 			if (_Capacity < size() + _Count)

  000bf	85 c9		 test	 ecx, ecx
  000c1	75 04		 jne	 SHORT $L163232
  000c3	33 d2		 xor	 edx, edx
  000c5	eb 08		 jmp	 SHORT $L163233
$L163232:
  000c7	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  000ca	2b d1		 sub	 edx, ecx
  000cc	c1 fa 04	 sar	 edx, 4
$L163233:
  000cf	03 d7		 add	 edx, edi
  000d1	3b c2		 cmp	 eax, edx
  000d3	73 12		 jae	 SHORT $L137231

; 822  : 				_Capacity = size() + _Count;

  000d5	85 c9		 test	 ecx, ecx
  000d7	75 04		 jne	 SHORT $L163239
  000d9	33 c0		 xor	 eax, eax
  000db	eb 08		 jmp	 SHORT $L163240
$L163239:
  000dd	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000e0	2b c1		 sub	 eax, ecx
  000e2	c1 f8 04	 sar	 eax, 4
$L163240:
  000e5	03 c7		 add	 eax, edi
$L137231:

; 823  : 			pointer _Newvec = this->_Alval.allocate(_Capacity);

  000e7	c1 e0 04	 shl	 eax, 4
  000ea	50		 push	 eax
  000eb	89 45 10	 mov	 DWORD PTR tv486[ebp], eax
  000ee	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 824  : 			pointer _Ptr = _Newvec;
; 825  : 
; 826  : 			_TRY_BEGIN
; 827  : 			_Ptr = _Ucopy(_Myfirst, _ITER_BASE(_Where),
; 828  : 				_Newvec);	// copy prefix

  000f3	8b 4d 08	 mov	 ecx, DWORD PTR __Cat$163269[ebp]
  000f6	8b 55 08	 mov	 edx, DWORD PTR __Where$[ebp]
  000f9	51		 push	 ecx
  000fa	8b d8		 mov	 ebx, eax
  000fc	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000ff	56		 push	 esi
  00100	53		 push	 ebx
  00101	52		 push	 edx
  00102	50		 push	 eax
  00103	89 5d e8	 mov	 DWORD PTR __Newvec$137232[ebp], ebx
  00106	89 5d 0c	 mov	 DWORD PTR __Ptr$137233[ebp], ebx
  00109	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+12], 1
  0010d	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAUtagTGUILDPOINTREWARD@@PAU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *,std::allocator<tagTGUILDPOINTREWARD> >

; 829  : 			_Ptr = _Ufill(_Ptr, _Count, _Tmp);	// add new stuff

  00112	8b 4d 08	 mov	 ecx, DWORD PTR __Cat$163291[ebp]
  00115	83 c4 18	 add	 esp, 24			; 00000018H
  00118	51		 push	 ecx
  00119	56		 push	 esi
  0011a	8d 55 d8	 lea	 edx, DWORD PTR __Tmp$[ebp]
  0011d	52		 push	 edx
  0011e	57		 push	 edi
  0011f	50		 push	 eax
  00120	89 45 0c	 mov	 DWORD PTR __Ptr$137233[ebp], eax
  00123	e8 00 00 00 00	 call	 ??$_Uninit_fill_n@PAUtagTGUILDPOINTREWARD@@IU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAXPAUtagTGUILDPOINTREWARD@@IABU1@AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_fill_n<tagTGUILDPOINTREWARD *,unsigned int,tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >

; 830  : 			_Ucopy(_ITER_BASE(_Where), _Mylast, _Ptr);	// copy suffix

  00128	8b 55 08	 mov	 edx, DWORD PTR __Cat$163315[ebp]
  0012b	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$137233[ebp]
  0012e	83 c4 14	 add	 esp, 20			; 00000014H
  00131	52		 push	 edx
  00132	8b c7		 mov	 eax, edi
  00134	c1 e0 04	 shl	 eax, 4
  00137	03 c8		 add	 ecx, eax
  00139	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0013c	56		 push	 esi
  0013d	51		 push	 ecx
  0013e	50		 push	 eax
  0013f	8b 45 08	 mov	 eax, DWORD PTR __Where$[ebp]
  00142	50		 push	 eax
  00143	89 4d 0c	 mov	 DWORD PTR __Ptr$137233[ebp], ecx
  00146	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAUtagTGUILDPOINTREWARD@@PAU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *,std::allocator<tagTGUILDPOINTREWARD> >

; 835  : 			_CATCH_END
; 836  : 
; 837  : 			_Count += size();

  0014b	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0014e	83 c4 14	 add	 esp, 20			; 00000014H
  00151	85 c9		 test	 ecx, ecx
  00153	75 04		 jne	 SHORT $L163327
  00155	33 c0		 xor	 eax, eax
  00157	eb 08		 jmp	 SHORT $L163328
$L163327:
  00159	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0015c	2b c1		 sub	 eax, ecx
  0015e	c1 f8 04	 sar	 eax, 4
$L163328:
  00161	03 f8		 add	 edi, eax

; 838  : 			if (_Myfirst != 0)

  00163	85 c9		 test	 ecx, ecx
  00165	74 18		 je	 SHORT $L163331

; 839  : 				{	// destroy and deallocate old array
; 840  : 				_Destroy(_Myfirst, _Mylast);

  00167	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  0016a	52		 push	 edx
  0016b	51		 push	 ecx
  0016c	8b ce		 mov	 ecx, esi
  0016e	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXPAUtagTGUILDPOINTREWARD@@0@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Destroy

; 841  : 				this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  00173	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00176	50		 push	 eax
  00177	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0017c	83 c4 04	 add	 esp, 4
$L163331:

; 842  : 				}
; 843  : 			_Myend = _Newvec + _Capacity;

  0017f	8b 45 10	 mov	 eax, DWORD PTR tv486[ebp]
  00182	03 c3		 add	 eax, ebx

; 844  : 			_Mylast = _Newvec + _Count;

  00184	c1 e7 04	 shl	 edi, 4
  00187	03 fb		 add	 edi, ebx
  00189	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  0018c	89 7e 08	 mov	 DWORD PTR [esi+8], edi

; 845  : 			_Myfirst = _Newvec;

  0018f	89 5e 04	 mov	 DWORD PTR [esi+4], ebx

; 846  : 			}
; 847  : 		else if ((size_type)(_Mylast - _ITER_BASE(_Where)) < _Count)

  00192	e9 f8 00 00 00	 jmp	 $L137252
$L163118:

; 831  : 			_CATCH_ALL
; 832  : 			_Destroy(_Newvec, _Ptr);

  00197	8b 4d 0c	 mov	 ecx, DWORD PTR __Ptr$137233[ebp]
  0019a	8b 75 e8	 mov	 esi, DWORD PTR __Newvec$137232[ebp]
  0019d	51		 push	 ecx
  0019e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001a1	56		 push	 esi
  001a2	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXPAUtagTGUILDPOINTREWARD@@0@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Destroy

; 833  : 			this->_Alval.deallocate(_Newvec, _Capacity);

  001a7	56		 push	 esi
  001a8	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001ad	83 c4 04	 add	 esp, 4

; 834  : 			_RERAISE;

  001b0	6a 00		 push	 0
  001b2	6a 00		 push	 0
  001b4	e8 00 00 00 00	 call	 __CxxThrowException@8
$L163445:
$L137230:

; 846  : 			}
; 847  : 		else if ((size_type)(_Mylast - _ITER_BASE(_Where)) < _Count)

  001b9	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  001bc	8b 5d 08	 mov	 ebx, DWORD PTR __Where$[ebp]
  001bf	8b d0		 mov	 edx, eax
  001c1	2b d3		 sub	 edx, ebx
  001c3	c1 fa 04	 sar	 edx, 4
  001c6	3b d7		 cmp	 edx, edi
  001c8	89 45 e8	 mov	 DWORD PTR tv471[ebp], eax
  001cb	0f 83 80 00 00
	00		 jae	 $L137243

; 848  : 			{	// new stuff spills off end
; 849  : 			_Ucopy(_ITER_BASE(_Where), _Mylast,
; 850  : 				_ITER_BASE(_Where) + _Count);	// copy suffix

  001d1	8b 55 08	 mov	 edx, DWORD PTR __Cat$163354[ebp]
  001d4	52		 push	 edx
  001d5	8b cf		 mov	 ecx, edi
  001d7	c1 e1 04	 shl	 ecx, 4
  001da	89 4d 10	 mov	 DWORD PTR tv487[ebp], ecx
  001dd	56		 push	 esi
  001de	03 cb		 add	 ecx, ebx
  001e0	51		 push	 ecx
  001e1	50		 push	 eax
  001e2	53		 push	 ebx
  001e3	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAUtagTGUILDPOINTREWARD@@PAU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *,std::allocator<tagTGUILDPOINTREWARD> >

; 851  : 
; 852  : 			_TRY_BEGIN
; 853  : 			_Ufill(_Mylast, _Count - (_Mylast - _ITER_BASE(_Where)),
; 854  : 				_Tmp);	// insert new stuff off end

  001e8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  001eb	8b d0		 mov	 edx, eax
  001ed	83 c4 14	 add	 esp, 20			; 00000014H
  001f0	2b d3		 sub	 edx, ebx
  001f2	8d 4d d8	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  001f5	51		 push	 ecx
  001f6	c1 fa 04	 sar	 edx, 4
  001f9	2b fa		 sub	 edi, edx
  001fb	57		 push	 edi
  001fc	50		 push	 eax
  001fd	8b ce		 mov	 ecx, esi
  001ff	c6 45 fc 03	 mov	 BYTE PTR __$EHRec$[ebp+12], 3
  00203	e8 00 00 00 00	 call	 ?_Ufill@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEPAUtagTGUILDPOINTREWARD@@PAU3@IABU3@@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Ufill

; 858  : 			_CATCH_END
; 859  : 
; 860  : 			_Mylast += _Count;

  00208	8b 7e 08	 mov	 edi, DWORD PTR [esi+8]
  0020b	8b 45 10	 mov	 eax, DWORD PTR tv487[ebp]
  0020e	03 f8		 add	 edi, eax
  00210	89 7e 08	 mov	 DWORD PTR [esi+8], edi

; 861  : 			fill(_ITER_BASE(_Where), _Mylast - _Count,
; 862  : 				_Tmp);	// insert up to old end

  00213	8d 4d d8	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00216	8b f7		 mov	 esi, edi
  00218	51		 push	 ecx
  00219	2b f0		 sub	 esi, eax
  0021b	56		 push	 esi
  0021c	53		 push	 ebx
  0021d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00224	e8 00 00 00 00	 call	 ??$fill@PAUtagTGUILDPOINTREWARD@@U1@@std@@YAXPAUtagTGUILDPOINTREWARD@@0ABU1@@Z ; std::fill<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD>
  00229	83 c4 0c	 add	 esp, 12			; 0000000cH

; 863  : 			}
; 864  : 		else

  0022c	eb 61		 jmp	 SHORT $L137252
$L163120:

; 855  : 			_CATCH_ALL
; 856  : 			_Destroy(_ITER_BASE(_Where) + _Count, _Mylast + _Count);

  0022e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00231	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  00234	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00237	c1 e0 04	 shl	 eax, 4
  0023a	03 d0		 add	 edx, eax
  0023c	52		 push	 edx
  0023d	8b 55 08	 mov	 edx, DWORD PTR __Where$[ebp]
  00240	03 c2		 add	 eax, edx
  00242	50		 push	 eax
  00243	e8 00 00 00 00	 call	 ?_Destroy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXPAUtagTGUILDPOINTREWARD@@0@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Destroy

; 857  : 			_RERAISE;

  00248	6a 00		 push	 0
  0024a	6a 00		 push	 0
  0024c	e8 00 00 00 00	 call	 __CxxThrowException@8
$L163446:
$L137243:

; 865  : 			{	// new stuff can all be assigned
; 866  : 			pointer _Oldend = _Mylast;
; 867  : 			_Mylast = _Ucopy(_Oldend - _Count, _Oldend,
; 868  : 				_Mylast);	// copy suffix

  00251	c1 e7 04	 shl	 edi, 4
  00254	8b cf		 mov	 ecx, edi
  00256	8b f8		 mov	 edi, eax
  00258	2b f9		 sub	 edi, ecx
  0025a	89 4d 10	 mov	 DWORD PTR tv487[ebp], ecx
  0025d	8b 4d 08	 mov	 ecx, DWORD PTR __Cat$163378[ebp]
  00260	51		 push	 ecx
  00261	56		 push	 esi
  00262	50		 push	 eax
  00263	50		 push	 eax
  00264	57		 push	 edi
  00265	e8 00 00 00 00	 call	 ??$_Uninit_copy@PAUtagTGUILDPOINTREWARD@@PAU1@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00AAV?$allocator@UtagTGUILDPOINTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *,std::allocator<tagTGUILDPOINTREWARD> >

; 869  : 			copy_backward(_ITER_BASE(_Where), _Oldend - _Count,
; 870  : 				_Oldend);	// copy hole

  0026a	8b 55 08	 mov	 edx, DWORD PTR __Cat$163391[ebp]
  0026d	52		 push	 edx
  0026e	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00271	8b 45 e8	 mov	 eax, DWORD PTR tv471[ebp]
  00274	50		 push	 eax
  00275	57		 push	 edi
  00276	53		 push	 ebx
  00277	e8 00 00 00 00	 call	 ??$_Copy_backward_opt@PAUtagTGUILDPOINTREWARD@@PAU1@@std@@YAPAUtagTGUILDPOINTREWARD@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Copy_backward_opt<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD *>

; 871  : 			fill(_ITER_BASE(_Where), _ITER_BASE(_Where) + _Count,
; 872  : 				_Tmp);	// insert into hole

  0027c	8b 55 10	 mov	 edx, DWORD PTR tv487[ebp]
  0027f	8d 4d d8	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00282	51		 push	 ecx
  00283	03 d3		 add	 edx, ebx
  00285	52		 push	 edx
  00286	53		 push	 ebx
  00287	e8 00 00 00 00	 call	 ??$fill@PAUtagTGUILDPOINTREWARD@@U1@@std@@YAXPAUtagTGUILDPOINTREWARD@@0ABU1@@Z ; std::fill<tagTGUILDPOINTREWARD *,tagTGUILDPOINTREWARD>
  0028c	83 c4 30	 add	 esp, 48			; 00000030H
$L137252:

; 873  : 			}
; 874  : 		}

  0028f	8b 45 d8	 mov	 eax, DWORD PTR __Tmp$[ebp]
  00292	83 c0 f0	 add	 eax, -16		; fffffff0H
  00295	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0029c	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0029f	83 ca ff	 or	 edx, -1
  002a2	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  002a6	4a		 dec	 edx
  002a7	85 d2		 test	 edx, edx
  002a9	7f 08		 jg	 SHORT $L163432
  002ab	8b 08		 mov	 ecx, DWORD PTR [eax]
  002ad	8b 11		 mov	 edx, DWORD PTR [ecx]
  002af	50		 push	 eax
  002b0	ff 52 04	 call	 DWORD PTR [edx+4]
$L163432:
  002b3	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  002b6	5f		 pop	 edi
  002b7	5e		 pop	 esi
  002b8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002bf	5b		 pop	 ebx
  002c0	8b e5		 mov	 esp, ebp
  002c2	5d		 pop	 ebp
  002c3	c2 0c 00	 ret	 12			; 0000000cH
$L163439:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163121:
  00000	8d 4d d8	 lea	 ecx, DWORD PTR __Tmp$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1tagTGUILDPOINTREWARD@@QAE@XZ
__ehhandler$?_Insert_n@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXViterator@12@IABUtagTGUILDPOINTREWARD@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T163437
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Insert_n@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXViterator@12@IABUtagTGUILDPOINTREWARD@@@Z ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Insert_n
PUBLIC	??1?$map@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> > >::~map<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T163549 = -4						; size = 4
??1?$map@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> > >::~map<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T163549[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> > >::~map<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> > >
_TEXT	ENDS
PUBLIC	??1?$map@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> > >::~map<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T163678 = -4						; size = 4
??1?$map@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> > >::~map<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T163678[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> > >::~map<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> > >
_TEXT	ENDS
PUBLIC	??1?$map@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> > >::~map<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T163807 = -4						; size = 4
??1?$map@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> > >::~map<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T163807[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> > >::~map<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> > >
_TEXT	ENDS
PUBLIC	??1?$map@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> > >::~map<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T163929 = -4						; size = 4
??1?$map@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> > >::~map<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T163929[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> > >::~map<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> > >
_TEXT	ENDS
PUBLIC	??1CTGuild@@QAE@XZ				; CTGuild::~CTGuild
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T166609 DD	0ffffffffH
	DD	FLAT:$L163989
	DD	00H
	DD	FLAT:$L163990
	DD	01H
	DD	FLAT:$L163991
	DD	02H
	DD	FLAT:$L163992
	DD	03H
	DD	FLAT:$L163993
	DD	04H
	DD	FLAT:$L163994
	DD	05H
	DD	FLAT:$L163995
	DD	06H
	DD	FLAT:$L163996
	DD	07H
	DD	FLAT:$L163997
	DD	08H
	DD	FLAT:$L163998
$T166578 DD	019930520H
	DD	0aH
	DD	FLAT:$T166609
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tguild.cpp
xdata$x	ENDS
;	COMDAT ??1CTGuild@@QAE@XZ
_TEXT	SEGMENT
_this$ = -24						; size = 4
$T165667 = -20						; size = 4
$T165479 = -20						; size = 4
_itARTICLE$ = -20					; size = 4
$T166468 = -16						; size = 4
$T166309 = -16						; size = 4
$T166149 = -16						; size = 4
$T166005 = -16						; size = 4
$T165732 = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1CTGuild@@QAE@XZ PROC NEAR				; CTGuild::~CTGuild, COMDAT
; _this$ = ecx

; 43   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??1CTGuild@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	8b d9		 mov	 ebx, ecx
  0001d	57		 push	 edi
  0001e	89 5c 24 10	 mov	 DWORD PTR _this$[esp+40], ebx

; 44   : 	MAPTGUILDARTICLE::iterator itARTICLE;
; 45   : 	MAPTITEM::iterator itITEM;
; 46   : 	MAPTTACTICSMEMBER::iterator itTACTICS;
; 47   : 	MAPTGUILDMEMBER::iterator itMEMBER;
; 48   : 
; 49   : 	for(itARTICLE=m_mapTArticle.begin(); itARTICLE!=m_mapTArticle.end(); itARTICLE++)

  00022	8b 83 90 00 00
	00		 mov	 eax, DWORD PTR [ebx+144]
  00028	8b 08		 mov	 ecx, DWORD PTR [eax]
  0002a	3b c8		 cmp	 ecx, eax
  0002c	c7 44 24 24 09
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+48], 9
  00034	89 4c 24 14	 mov	 DWORD PTR _itARTICLE$[esp+40], ecx
  00038	0f 84 a9 00 00
	00		 je	 $L166607
  0003e	8b ff		 npad	 2
$L164074:

; 50   : 		delete (*itARTICLE).second;

  00040	8b 71 10	 mov	 esi, DWORD PTR [ecx+16]
  00043	33 ed		 xor	 ebp, ebp
  00045	3b f5		 cmp	 esi, ebp
  00047	0f 84 7d 00 00
	00		 je	 $L134483
  0004d	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00050	83 e8 10	 sub	 eax, 16			; 00000010H
  00053	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00056	83 ca ff	 or	 edx, -1
  00059	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0005d	4a		 dec	 edx
  0005e	85 d2		 test	 edx, edx
  00060	7f 08		 jg	 SHORT $L164275
  00062	8b 08		 mov	 ecx, DWORD PTR [eax]
  00064	8b 11		 mov	 edx, DWORD PTR [ecx]
  00066	50		 push	 eax
  00067	ff 52 04	 call	 DWORD PTR [edx+4]
$L164275:
  0006a	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0006d	83 e8 10	 sub	 eax, 16			; 00000010H
  00070	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00073	83 ca ff	 or	 edx, -1
  00076	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0007a	4a		 dec	 edx
  0007b	85 d2		 test	 edx, edx
  0007d	7f 08		 jg	 SHORT $L164285
  0007f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00081	8b 11		 mov	 edx, DWORD PTR [ecx]
  00083	50		 push	 eax
  00084	ff 52 04	 call	 DWORD PTR [edx+4]
$L164285:
  00087	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  0008a	83 e8 10	 sub	 eax, 16			; 00000010H
  0008d	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00090	83 ca ff	 or	 edx, -1
  00093	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00097	4a		 dec	 edx
  00098	85 d2		 test	 edx, edx
  0009a	7f 08		 jg	 SHORT $L164295
  0009c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009e	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a0	50		 push	 eax
  000a1	ff 52 04	 call	 DWORD PTR [edx+4]
$L164295:
  000a4	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000a7	83 e8 10	 sub	 eax, 16			; 00000010H
  000aa	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000ad	83 ca ff	 or	 edx, -1
  000b0	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000b4	4a		 dec	 edx
  000b5	85 d2		 test	 edx, edx
  000b7	7f 08		 jg	 SHORT $L164305
  000b9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bb	8b 11		 mov	 edx, DWORD PTR [ecx]
  000bd	50		 push	 eax
  000be	ff 52 04	 call	 DWORD PTR [edx+4]
$L164305:
  000c1	56		 push	 esi
  000c2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000c7	83 c4 04	 add	 esp, 4
$L134483:
  000ca	8d 4c 24 14	 lea	 ecx, DWORD PTR _itARTICLE$[esp+40]
  000ce	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Inc
  000d3	8b 83 90 00 00
	00		 mov	 eax, DWORD PTR [ebx+144]
  000d9	8b 4c 24 14	 mov	 ecx, DWORD PTR _itARTICLE$[esp+40]
  000dd	3b c8		 cmp	 ecx, eax
  000df	0f 85 5b ff ff
	ff		 jne	 $L164074

; 44   : 	MAPTGUILDARTICLE::iterator itARTICLE;
; 45   : 	MAPTITEM::iterator itITEM;
; 46   : 	MAPTTACTICSMEMBER::iterator itTACTICS;
; 47   : 	MAPTGUILDMEMBER::iterator itMEMBER;
; 48   : 
; 49   : 	for(itARTICLE=m_mapTArticle.begin(); itARTICLE!=m_mapTArticle.end(); itARTICLE++)

  000e5	eb 02		 jmp	 SHORT $L134484
$L166607:
  000e7	33 ed		 xor	 ebp, ebp
$L134484:

; 51   : 
; 52   : 	for(itITEM=m_mapTCabinet.begin(); itITEM!=m_mapTCabinet.end(); itITEM++)

  000e9	8b 43 68	 mov	 eax, DWORD PTR [ebx+104]
  000ec	8b 30		 mov	 esi, DWORD PTR [eax]
  000ee	3b f0		 cmp	 esi, eax
  000f0	74 5d		 je	 SHORT $L134510
$L164492:

; 53   : 		delete (*itITEM).second;

  000f2	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000fb	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  000fe	83 c4 04	 add	 esp, 4
  00101	84 c0		 test	 al, al
  00103	75 45		 jne	 SHORT $L164502
  00105	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00108	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0010b	84 c9		 test	 cl, cl
  0010d	75 1e		 jne	 SHORT $L166582
  0010f	8b f0		 mov	 esi, eax
  00111	8b 06		 mov	 eax, DWORD PTR [esi]
  00113	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00116	84 c9		 test	 cl, cl
  00118	75 30		 jne	 SHORT $L164502
  0011a	8d 9b 00 00 00
	00		 npad	 6

; 51   : 
; 52   : 	for(itITEM=m_mapTCabinet.begin(); itITEM!=m_mapTCabinet.end(); itITEM++)

$L164523:
  00120	8b f0		 mov	 esi, eax
  00122	8b 06		 mov	 eax, DWORD PTR [esi]
  00124	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00127	84 c9		 test	 cl, cl
  00129	74 f5		 je	 SHORT $L164523
  0012b	eb 1d		 jmp	 SHORT $L164502
$L166582:
  0012d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00130	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00133	84 c9		 test	 cl, cl
  00135	75 11		 jne	 SHORT $L164505
$L164504:
  00137	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0013a	75 0c		 jne	 SHORT $L164505
  0013c	8b f0		 mov	 esi, eax
  0013e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00141	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00144	84 c9		 test	 cl, cl
  00146	74 ef		 je	 SHORT $L164504
$L164505:
  00148	8b f0		 mov	 esi, eax
$L164502:
  0014a	3b 73 68	 cmp	 esi, DWORD PTR [ebx+104]
  0014d	75 a3		 jne	 SHORT $L164492
$L134510:

; 54   : 
; 55   : 	for(itMEMBER=m_mapTMember.begin(); itMEMBER!=m_mapTMember.end(); itMEMBER++)

  0014f	8b 43 74	 mov	 eax, DWORD PTR [ebx+116]
  00152	8b 38		 mov	 edi, DWORD PTR [eax]
  00154	3b f8		 cmp	 edi, eax
  00156	0f 84 a0 00 00
	00		 je	 $L134535
  0015c	8d 64 24 00	 npad	 4
$L164751:

; 56   : 		delete (*itMEMBER).second;

  00160	8b 77 10	 mov	 esi, DWORD PTR [edi+16]
  00163	3b f5		 cmp	 esi, ebp
  00165	74 3f		 je	 SHORT $L134534
  00167	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  0016a	3b c5		 cmp	 eax, ebp
  0016c	74 09		 je	 SHORT $L164917
  0016e	50		 push	 eax
  0016f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00174	83 c4 04	 add	 esp, 4
$L164917:
  00177	89 6e 24	 mov	 DWORD PTR [esi+36], ebp
  0017a	89 6e 28	 mov	 DWORD PTR [esi+40], ebp
  0017d	89 6e 2c	 mov	 DWORD PTR [esi+44], ebp
  00180	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00183	83 e8 10	 sub	 eax, 16			; 00000010H
  00186	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00189	83 ca ff	 or	 edx, -1
  0018c	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00190	4a		 dec	 edx
  00191	85 d2		 test	 edx, edx
  00193	7f 08		 jg	 SHORT $L164905
  00195	8b 08		 mov	 ecx, DWORD PTR [eax]
  00197	8b 11		 mov	 edx, DWORD PTR [ecx]
  00199	50		 push	 eax
  0019a	ff 52 04	 call	 DWORD PTR [edx+4]
$L164905:
  0019d	56		 push	 esi
  0019e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001a3	83 c4 04	 add	 esp, 4
$L134534:
  001a6	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  001a9	84 c0		 test	 al, al
  001ab	75 46		 jne	 SHORT $L164762
  001ad	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  001b0	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001b3	84 c9		 test	 cl, cl
  001b5	75 18		 jne	 SHORT $L166585
  001b7	8b f8		 mov	 edi, eax
  001b9	8b 07		 mov	 eax, DWORD PTR [edi]
  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl
  001c0	75 31		 jne	 SHORT $L164762

; 54   : 
; 55   : 	for(itMEMBER=m_mapTMember.begin(); itMEMBER!=m_mapTMember.end(); itMEMBER++)

$L164783:
  001c2	8b f8		 mov	 edi, eax
  001c4	8b 07		 mov	 eax, DWORD PTR [edi]
  001c6	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001c9	84 c9		 test	 cl, cl
  001cb	74 f5		 je	 SHORT $L164783
  001cd	eb 24		 jmp	 SHORT $L164762
$L166585:
  001cf	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  001d2	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001d5	84 c9		 test	 cl, cl
  001d7	75 18		 jne	 SHORT $L164765
  001d9	8d a4 24 00 00
	00 00		 npad	 7
$L164764:
  001e0	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  001e3	75 0c		 jne	 SHORT $L164765
  001e5	8b f8		 mov	 edi, eax
  001e7	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001ea	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001ed	84 c9		 test	 cl, cl
  001ef	74 ef		 je	 SHORT $L164764
$L164765:
  001f1	8b f8		 mov	 edi, eax
$L164762:
  001f3	3b 7b 74	 cmp	 edi, DWORD PTR [ebx+116]
  001f6	0f 85 64 ff ff
	ff		 jne	 $L164751
$L134535:

; 57   : 	
; 58   : 	for(itTACTICS=m_mapTTactics.begin(); itTACTICS!=m_mapTTactics.end(); itTACTICS++)

  001fc	8b 83 80 00 00
	00		 mov	 eax, DWORD PTR [ebx+128]
  00202	8b 30		 mov	 esi, DWORD PTR [eax]
  00204	3b f0		 cmp	 esi, eax
  00206	74 7b		 je	 SHORT $L134561
$L165140:

; 59   : 		delete (*itTACTICS).second;

  00208	8b 7e 10	 mov	 edi, DWORD PTR [esi+16]
  0020b	3b fd		 cmp	 edi, ebp
  0020d	74 26		 je	 SHORT $L134560
  0020f	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00212	83 e8 10	 sub	 eax, 16			; 00000010H
  00215	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00218	83 ca ff	 or	 edx, -1
  0021b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0021f	4a		 dec	 edx
  00220	85 d2		 test	 edx, edx
  00222	7f 08		 jg	 SHORT $L165230
  00224	8b 08		 mov	 ecx, DWORD PTR [eax]
  00226	8b 11		 mov	 edx, DWORD PTR [ecx]
  00228	50		 push	 eax
  00229	ff 52 04	 call	 DWORD PTR [edx+4]
$L165230:
  0022c	57		 push	 edi
  0022d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00232	83 c4 04	 add	 esp, 4
$L134560:
  00235	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00238	84 c0		 test	 al, al
  0023a	75 3f		 jne	 SHORT $L165110
  0023c	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0023f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00242	84 c9		 test	 cl, cl
  00244	75 18		 jne	 SHORT $L166588
  00246	8b f0		 mov	 esi, eax
  00248	8b 06		 mov	 eax, DWORD PTR [esi]
  0024a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0024d	84 c9		 test	 cl, cl
  0024f	75 2a		 jne	 SHORT $L165110

; 57   : 	
; 58   : 	for(itTACTICS=m_mapTTactics.begin(); itTACTICS!=m_mapTTactics.end(); itTACTICS++)

$L165131:
  00251	8b f0		 mov	 esi, eax
  00253	8b 06		 mov	 eax, DWORD PTR [esi]
  00255	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00258	84 c9		 test	 cl, cl
  0025a	74 f5		 je	 SHORT $L165131
  0025c	eb 1d		 jmp	 SHORT $L165110
$L166588:
  0025e	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00261	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00264	84 c9		 test	 cl, cl
  00266	75 11		 jne	 SHORT $L165113
$L165112:
  00268	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0026b	75 0c		 jne	 SHORT $L165113
  0026d	8b f0		 mov	 esi, eax
  0026f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00272	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00275	84 c9		 test	 cl, cl
  00277	74 ef		 je	 SHORT $L165112
$L165113:
  00279	8b f0		 mov	 esi, eax
$L165110:
  0027b	3b b3 80 00 00
	00		 cmp	 esi, DWORD PTR [ebx+128]
  00281	75 85		 jne	 SHORT $L165140
$L134561:

; 60   : 	
; 61   : 	m_mapTArticle.end();
; 62   : 	m_mapTCabinet.clear();

  00283	8b 43 68	 mov	 eax, DWORD PTR [ebx+104]
  00286	8b 78 04	 mov	 edi, DWORD PTR [eax+4]
  00289	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0028c	84 c0		 test	 al, al
  0028e	8d 6b 64	 lea	 ebp, DWORD PTR [ebx+100]
  00291	8b f7		 mov	 esi, edi
  00293	75 1f		 jne	 SHORT $L165334
$L165332:
  00295	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00298	51		 push	 ecx
  00299	8b cd		 mov	 ecx, ebp
  0029b	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Erase
  002a0	8b 36		 mov	 esi, DWORD PTR [esi]
  002a2	57		 push	 edi
  002a3	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002a8	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  002ab	83 c4 04	 add	 esp, 4
  002ae	84 c0		 test	 al, al
  002b0	8b fe		 mov	 edi, esi
  002b2	74 e1		 je	 SHORT $L165332
$L165334:
  002b4	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  002b7	89 40 04	 mov	 DWORD PTR [eax+4], eax
  002ba	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  002bd	c7 45 08 00 00
	00 00		 mov	 DWORD PTR [ebp+8], 0
  002c4	89 00		 mov	 DWORD PTR [eax], eax
  002c6	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  002c9	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 63   : 	m_mapTMember.clear();

  002cc	8b 53 74	 mov	 edx, DWORD PTR [ebx+116]
  002cf	8d 73 70	 lea	 esi, DWORD PTR [ebx+112]
  002d2	8b 5a 04	 mov	 ebx, DWORD PTR [edx+4]
  002d5	8a 43 15	 mov	 al, BYTE PTR [ebx+21]
  002d8	84 c0		 test	 al, al
  002da	8b fb		 mov	 edi, ebx
  002dc	75 21		 jne	 SHORT $L165429
  002de	8b ff		 npad	 2
$L165427:
  002e0	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  002e3	50		 push	 eax
  002e4	8b ce		 mov	 ecx, esi
  002e6	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Erase
  002eb	8b 3f		 mov	 edi, DWORD PTR [edi]
  002ed	53		 push	 ebx
  002ee	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002f3	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  002f6	83 c4 04	 add	 esp, 4
  002f9	84 c0		 test	 al, al
  002fb	8b df		 mov	 ebx, edi
  002fd	74 e1		 je	 SHORT $L165427
$L165429:
  002ff	8b 46 04	 mov	 eax, DWORD PTR [esi+4]

; 64   : 	m_mapTTactics.clear();

  00302	8b 7c 24 10	 mov	 edi, DWORD PTR _this$[esp+40]
  00306	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00309	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0030c	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00313	89 00		 mov	 DWORD PTR [eax], eax
  00315	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00318	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0031b	8b 8f 80 00 00
	00		 mov	 ecx, DWORD PTR [edi+128]
  00321	8b 59 04	 mov	 ebx, DWORD PTR [ecx+4]
  00324	8a 43 15	 mov	 al, BYTE PTR [ebx+21]
  00327	83 c7 7c	 add	 edi, 124		; 0000007cH
  0032a	84 c0		 test	 al, al
  0032c	89 5c 24 14	 mov	 DWORD PTR $T165479[esp+40], ebx
  00330	75 25		 jne	 SHORT $L165524
$L165522:
  00332	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00335	52		 push	 edx
  00336	8b cf		 mov	 ecx, edi
  00338	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Erase
  0033d	8b 44 24 14	 mov	 eax, DWORD PTR $T165479[esp+40]
  00341	8b 1b		 mov	 ebx, DWORD PTR [ebx]
  00343	50		 push	 eax
  00344	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00349	8a 43 15	 mov	 al, BYTE PTR [ebx+21]
  0034c	83 c4 04	 add	 esp, 4
  0034f	84 c0		 test	 al, al
  00351	89 5c 24 14	 mov	 DWORD PTR $T165479[esp+40], ebx
  00355	74 db		 je	 SHORT $L165522
$L165524:
  00357	8b 47 04	 mov	 eax, DWORD PTR [edi+4]

; 65   : }

  0035a	8b 5c 24 10	 mov	 ebx, DWORD PTR _this$[esp+40]
  0035e	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00361	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00364	33 c9		 xor	 ecx, ecx
  00366	89 4f 08	 mov	 DWORD PTR [edi+8], ecx
  00369	89 00		 mov	 DWORD PTR [eax], eax
  0036b	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0036e	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00371	8b 83 bc 00 00
	00		 mov	 eax, DWORD PTR [ebx+188]
  00377	3b c1		 cmp	 eax, ecx
  00379	c6 44 24 24 08	 mov	 BYTE PTR __$EHRec$[esp+48], 8
  0037e	74 52		 je	 SHORT $L165813
  00380	8b 8b c0 00 00
	00		 mov	 ecx, DWORD PTR [ebx+192]
  00386	3b c1		 cmp	 eax, ecx
  00388	89 4c 24 18	 mov	 DWORD PTR $T165732[esp+40], ecx
  0038c	89 44 24 14	 mov	 DWORD PTR $T165667[esp+40], eax
  00390	74 2f		 je	 SHORT $L165791
$L165789:
  00392	8b 00		 mov	 eax, DWORD PTR [eax]
  00394	83 e8 10	 sub	 eax, 16			; 00000010H
  00397	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0039a	83 ca ff	 or	 edx, -1
  0039d	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  003a1	4a		 dec	 edx
  003a2	85 d2		 test	 edx, edx
  003a4	7f 08		 jg	 SHORT $L165808
  003a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  003a8	8b 11		 mov	 edx, DWORD PTR [ecx]
  003aa	50		 push	 eax
  003ab	ff 52 04	 call	 DWORD PTR [edx+4]
$L165808:
  003ae	8b 44 24 14	 mov	 eax, DWORD PTR $T165667[esp+40]
  003b2	8b 4c 24 18	 mov	 ecx, DWORD PTR $T165732[esp+40]
  003b6	83 c0 10	 add	 eax, 16			; 00000010H
  003b9	3b c1		 cmp	 eax, ecx
  003bb	89 44 24 14	 mov	 DWORD PTR $T165667[esp+40], eax
  003bf	75 d1		 jne	 SHORT $L165789
$L165791:
  003c1	8b 83 bc 00 00
	00		 mov	 eax, DWORD PTR [ebx+188]
  003c7	50		 push	 eax
  003c8	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003cd	83 c4 04	 add	 esp, 4
  003d0	33 c9		 xor	 ecx, ecx
$L165813:
  003d2	89 8b bc 00 00
	00		 mov	 DWORD PTR [ebx+188], ecx
  003d8	89 8b c0 00 00
	00		 mov	 DWORD PTR [ebx+192], ecx
  003de	89 8b c4 00 00
	00		 mov	 DWORD PTR [ebx+196], ecx
  003e4	8b 83 ac 00 00
	00		 mov	 eax, DWORD PTR [ebx+172]
  003ea	3b c1		 cmp	 eax, ecx
  003ec	74 0b		 je	 SHORT $L165831
  003ee	50		 push	 eax
  003ef	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003f4	83 c4 04	 add	 esp, 4
  003f7	33 c9		 xor	 ecx, ecx
$L165831:
  003f9	89 8b ac 00 00
	00		 mov	 DWORD PTR [ebx+172], ecx
  003ff	89 8b b0 00 00
	00		 mov	 DWORD PTR [ebx+176], ecx
  00405	89 8b b4 00 00
	00		 mov	 DWORD PTR [ebx+180], ecx
  0040b	8b 9b 9c 00 00
	00		 mov	 ebx, DWORD PTR [ebx+156]
  00411	3b d9		 cmp	 ebx, ecx
  00413	74 09		 je	 SHORT $L165851
  00415	53		 push	 ebx
  00416	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0041b	83 c4 04	 add	 esp, 4
$L165851:
  0041e	8b 5c 24 10	 mov	 ebx, DWORD PTR _this$[esp+40]
  00422	33 c0		 xor	 eax, eax
  00424	89 83 9c 00 00
	00		 mov	 DWORD PTR [ebx+156], eax
  0042a	89 83 a0 00 00
	00		 mov	 DWORD PTR [ebx+160], eax
  00430	89 83 a4 00 00
	00		 mov	 DWORD PTR [ebx+164], eax
  00436	8b 83 90 00 00
	00		 mov	 eax, DWORD PTR [ebx+144]
  0043c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0043e	81 c3 8c 00 00
	00		 add	 ebx, 140		; 0000008cH
  00444	50		 push	 eax
  00445	51		 push	 ecx
  00446	8d 44 24 20	 lea	 eax, DWORD PTR $T166005[esp+48]
  0044a	50		 push	 eax
  0044b	8b cb		 mov	 ecx, ebx
  0044d	c6 44 24 30 05	 mov	 BYTE PTR __$EHRec$[esp+60], 5
  00452	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::erase
  00457	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0045a	50		 push	 eax
  0045b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00460	33 c0		 xor	 eax, eax
  00462	83 c4 04	 add	 esp, 4
  00465	89 43 04	 mov	 DWORD PTR [ebx+4], eax
  00468	89 43 08	 mov	 DWORD PTR [ebx+8], eax
  0046b	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0046e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00470	50		 push	 eax
  00471	51		 push	 ecx
  00472	8d 4c 24 20	 lea	 ecx, DWORD PTR $T166149[esp+48]
  00476	51		 push	 ecx
  00477	8b cf		 mov	 ecx, edi
  00479	c6 44 24 30 04	 mov	 BYTE PTR __$EHRec$[esp+60], 4
  0047e	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::erase
  00483	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00486	50		 push	 eax
  00487	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0048c	33 db		 xor	 ebx, ebx
  0048e	83 c4 04	 add	 esp, 4
  00491	89 5f 04	 mov	 DWORD PTR [edi+4], ebx
  00494	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  00497	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0049a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0049c	50		 push	 eax
  0049d	51		 push	 ecx
  0049e	8d 54 24 20	 lea	 edx, DWORD PTR $T166309[esp+48]
  004a2	52		 push	 edx
  004a3	8b ce		 mov	 ecx, esi
  004a5	c6 44 24 30 03	 mov	 BYTE PTR __$EHRec$[esp+60], 3
  004aa	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::erase
  004af	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  004b2	50		 push	 eax
  004b3	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004b8	83 c4 04	 add	 esp, 4
  004bb	89 5e 04	 mov	 DWORD PTR [esi+4], ebx
  004be	89 5e 08	 mov	 DWORD PTR [esi+8], ebx
  004c1	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  004c4	8b 08		 mov	 ecx, DWORD PTR [eax]
  004c6	50		 push	 eax
  004c7	51		 push	 ecx
  004c8	8d 44 24 20	 lea	 eax, DWORD PTR $T166468[esp+48]
  004cc	50		 push	 eax
  004cd	8b cd		 mov	 ecx, ebp
  004cf	c6 44 24 30 02	 mov	 BYTE PTR __$EHRec$[esp+60], 2
  004d4	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::erase
  004d9	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  004dc	50		 push	 eax
  004dd	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004e2	8b 4c 24 14	 mov	 ecx, DWORD PTR _this$[esp+44]
  004e6	89 5d 04	 mov	 DWORD PTR [ebp+4], ebx
  004e9	89 5d 08	 mov	 DWORD PTR [ebp+8], ebx
  004ec	8b 41 48	 mov	 eax, DWORD PTR [ecx+72]
  004ef	83 e8 10	 sub	 eax, 16			; 00000010H
  004f2	83 c4 04	 add	 esp, 4
  004f5	c6 44 24 24 01	 mov	 BYTE PTR __$EHRec$[esp+48], 1
  004fa	8d 50 0c	 lea	 edx, DWORD PTR [eax+12]
  004fd	83 c9 ff	 or	 ecx, -1
  00500	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
  00504	49		 dec	 ecx
  00505	85 c9		 test	 ecx, ecx
  00507	7f 08		 jg	 SHORT $L166519
  00509	8b 08		 mov	 ecx, DWORD PTR [eax]
  0050b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0050d	50		 push	 eax
  0050e	ff 52 04	 call	 DWORD PTR [edx+4]
$L166519:
  00511	8b 74 24 10	 mov	 esi, DWORD PTR _this$[esp+40]
  00515	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00518	83 e8 10	 sub	 eax, 16			; 00000010H
  0051b	c6 44 24 24 00	 mov	 BYTE PTR __$EHRec$[esp+48], 0
  00520	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00523	83 ca ff	 or	 edx, -1
  00526	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0052a	4a		 dec	 edx
  0052b	85 d2		 test	 edx, edx
  0052d	7f 08		 jg	 SHORT $L166546
  0052f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00531	8b 11		 mov	 edx, DWORD PTR [ecx]
  00533	50		 push	 eax
  00534	ff 52 04	 call	 DWORD PTR [edx+4]
$L166546:
  00537	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0053a	83 e8 10	 sub	 eax, 16			; 00000010H
  0053d	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00545	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00548	83 ca ff	 or	 edx, -1
  0054b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0054f	4a		 dec	 edx
  00550	85 d2		 test	 edx, edx
  00552	5f		 pop	 edi
  00553	5e		 pop	 esi
  00554	5d		 pop	 ebp
  00555	5b		 pop	 ebx
  00556	7f 08		 jg	 SHORT $L166573
  00558	8b 08		 mov	 ecx, DWORD PTR [eax]
  0055a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0055c	50		 push	 eax
  0055d	ff 52 04	 call	 DWORD PTR [edx+4]
$L166573:
  00560	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00564	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0056b	83 c4 18	 add	 esp, 24			; 00000018H
  0056e	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L163989:
  00000	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L163990:
  0000b	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00011	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L163991:
  00016	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 48	 add	 ecx, 72			; 00000048H
  0001c	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L163992:
  00021	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 64	 add	 ecx, 100		; 00000064H
  00027	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@@std@@QAE@XZ
$L163993:
  0002c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 70	 add	 ecx, 112		; 00000070H
  00032	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@@std@@QAE@XZ
$L163994:
  00037	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0003d	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@@std@@QAE@XZ
$L163995:
  00042	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  0004b	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@@std@@QAE@XZ
$L163996:
  00050	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	81 c1 98 00 00
	00		 add	 ecx, 152		; 00000098H
  00059	e9 00 00 00 00	 jmp	 ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
$L163997:
  0005e	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	81 c1 a8 00 00
	00		 add	 ecx, 168		; 000000a8H
  00067	e9 00 00 00 00	 jmp	 ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
$L163998:
  0006c	8b 4d e8	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  00075	e9 00 00 00 00	 jmp	 ??1?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@XZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::~vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >
__ehhandler$??1CTGuild@@QAE@XZ:
  0007a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T166578
  0007f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??1CTGuild@@QAE@XZ ENDP					; CTGuild::~CTGuild
PUBLIC	?DelMember@CTGuild@@QAEXPAUtagTGUILDMEMBER@@@Z	; CTGuild::DelMember
; Function compile flags: /Ogty
;	COMDAT ?DelMember@CTGuild@@QAEXPAUtagTGUILDMEMBER@@@Z
_TEXT	SEGMENT
_pMember$ = 8						; size = 4
?DelMember@CTGuild@@QAEXPAUtagTGUILDMEMBER@@@Z PROC NEAR ; CTGuild::DelMember, COMDAT
; _this$ = ecx

; 84   : {

  00000	56		 push	 esi

; 85   : 	m_mapTMember.erase(pMember->m_dwID);

  00001	8b 74 24 08	 mov	 esi, DWORD PTR _pMember$[esp]
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	8d 46 08	 lea	 eax, DWORD PTR [esi+8]
  0000b	50		 push	 eax
  0000c	8d 4f 70	 lea	 ecx, DWORD PTR [edi+112]
  0000f	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::erase

; 86   : 	delete pMember;

  00014	85 f6		 test	 esi, esi
  00016	74 10		 je	 SHORT $L166617
  00018	8b ce		 mov	 ecx, esi
  0001a	e8 00 00 00 00	 call	 ??1tagTGUILDMEMBER@@QAE@XZ
  0001f	56		 push	 esi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	83 c4 04	 add	 esp, 4
$L166617:

; 87   : 
; 88   : 	UpdateLevel();

  00028	8b cf		 mov	 ecx, edi
  0002a	e8 00 00 00 00	 call	 ?UpdateLevel@CTGuild@@QAEXXZ ; CTGuild::UpdateLevel
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi

; 89   : }

  00031	c2 04 00	 ret	 4
?DelMember@CTGuild@@QAEXPAUtagTGUILDMEMBER@@@Z ENDP	; CTGuild::DelMember
_TEXT	ENDS
PUBLIC	?DelArticle@CTGuild@@QAEEK@Z			; CTGuild::DelArticle
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T167112 DD	0ffffffffH
	DD	FLAT:$L166635
$T167108 DD	019930520H
	DD	01H
	DD	FLAT:$T167112
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tguild.cpp
xdata$x	ENDS
;	COMDAT ?DelArticle@CTGuild@@QAEEK@Z
_TEXT	SEGMENT
_strTitle$134928 = -16					; size = 4
_find$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_it$134933 = 8						; size = 4
_dwID$ = 8						; size = 4
?DelArticle@CTGuild@@QAEEK@Z PROC NEAR			; CTGuild::DelArticle, COMDAT
; _this$ = ecx

; 442  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?DelArticle@CTGuild@@QAEEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b d9		 mov	 ebx, ecx

; 443  : 	MAPTGUILDARTICLE::iterator find = m_mapTArticle.find(dwID);

  0001b	8d 44 24 20	 lea	 eax, DWORD PTR _dwID$[esp+24]
  0001f	50		 push	 eax
  00020	8d 4c 24 10	 lea	 ecx, DWORD PTR _find$[esp+32]
  00024	8d bb 8c 00 00
	00		 lea	 edi, DWORD PTR [ebx+140]
  0002a	51		 push	 ecx
  0002b	8b cf		 mov	 ecx, edi
  0002d	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::find

; 444  : 	if(find != m_mapTArticle.end())

  00032	8b 83 90 00 00
	00		 mov	 eax, DWORD PTR [ebx+144]
  00038	8b 74 24 0c	 mov	 esi, DWORD PTR _find$[esp+28]
  0003c	3b f0		 cmp	 esi, eax
  0003e	0f 84 42 01 00
	00		 je	 $L134927

; 445  : 	{
; 446  : 		CString strTitle = (*find).second->m_strTitle;

  00044	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00047	83 c0 0c	 add	 eax, 12			; 0000000cH
  0004a	8b 00		 mov	 eax, DWORD PTR [eax]
  0004c	83 e8 10	 sub	 eax, 16			; 00000010H
  0004f	55		 push	 ebp
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
  00056	8d 68 10	 lea	 ebp, DWORD PTR [eax+16]
  00059	83 c4 04	 add	 esp, 4
  0005c	89 6c 24 10	 mov	 DWORD PTR _strTitle$134928[esp+32], ebp

; 447  : 
; 448  : 		delete (*find).second;

  00060	8b 76 10	 mov	 esi, DWORD PTR [esi+16]
  00063	85 f6		 test	 esi, esi
  00065	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  0006d	74 7d		 je	 SHORT $L166629
  0006f	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00072	83 e8 10	 sub	 eax, 16			; 00000010H
  00075	8d 50 0c	 lea	 edx, DWORD PTR [eax+12]
  00078	83 c9 ff	 or	 ecx, -1
  0007b	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
  0007f	49		 dec	 ecx
  00080	85 c9		 test	 ecx, ecx
  00082	7f 08		 jg	 SHORT $L166890
  00084	8b 08		 mov	 ecx, DWORD PTR [eax]
  00086	8b 11		 mov	 edx, DWORD PTR [ecx]
  00088	50		 push	 eax
  00089	ff 52 04	 call	 DWORD PTR [edx+4]
$L166890:
  0008c	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  0008f	83 e8 10	 sub	 eax, 16			; 00000010H
  00092	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00095	83 ca ff	 or	 edx, -1
  00098	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0009c	4a		 dec	 edx
  0009d	85 d2		 test	 edx, edx
  0009f	7f 08		 jg	 SHORT $L166900
  000a1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a5	50		 push	 eax
  000a6	ff 52 04	 call	 DWORD PTR [edx+4]
$L166900:
  000a9	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  000ac	83 e8 10	 sub	 eax, 16			; 00000010H
  000af	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000b2	83 ca ff	 or	 edx, -1
  000b5	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000b9	4a		 dec	 edx
  000ba	85 d2		 test	 edx, edx
  000bc	7f 08		 jg	 SHORT $L166910
  000be	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c0	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c2	50		 push	 eax
  000c3	ff 52 04	 call	 DWORD PTR [edx+4]
$L166910:
  000c6	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000c9	83 e8 10	 sub	 eax, 16			; 00000010H
  000cc	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000cf	83 ca ff	 or	 edx, -1
  000d2	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d6	4a		 dec	 edx
  000d7	85 d2		 test	 edx, edx
  000d9	7f 08		 jg	 SHORT $L166920
  000db	8b 08		 mov	 ecx, DWORD PTR [eax]
  000dd	8b 11		 mov	 edx, DWORD PTR [ecx]
  000df	50		 push	 eax
  000e0	ff 52 04	 call	 DWORD PTR [edx+4]
$L166920:
  000e3	56		 push	 esi
  000e4	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000e9	83 c4 04	 add	 esp, 4
$L166629:

; 449  : 		m_mapTArticle.erase(dwID);

  000ec	8d 44 24 24	 lea	 eax, DWORD PTR _dwID$[esp+28]
  000f0	50		 push	 eax
  000f1	8b cf		 mov	 ecx, edi
  000f3	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::erase

; 450  : 
; 451  : 		if(m_strArticleTitle == strTitle)

  000f8	8b 43 48	 mov	 eax, DWORD PTR [ebx+72]
  000fb	8d 7b 48	 lea	 edi, DWORD PTR [ebx+72]
  000fe	55		 push	 ebp
  000ff	50		 push	 eax
  00100	e8 00 00 00 00	 call	 __mbscmp
  00105	83 c4 08	 add	 esp, 8
  00108	85 c0		 test	 eax, eax
  0010a	75 41		 jne	 SHORT $L134939

; 452  : 		{
; 453  : 			DWORD dwMax = 0;
; 454  : 
; 455  : 			MAPTGUILDARTICLE::iterator it;
; 456  : 			for(it=m_mapTArticle.begin(); it!=m_mapTArticle.end(); it++)

  0010c	8b 8b 90 00 00
	00		 mov	 ecx, DWORD PTR [ebx+144]
  00112	8b 01		 mov	 eax, DWORD PTR [ecx]
  00114	33 f6		 xor	 esi, esi
  00116	3b c1		 cmp	 eax, ecx
  00118	89 44 24 24	 mov	 DWORD PTR _it$134933[esp+28], eax
  0011c	74 2f		 je	 SHORT $L134939
  0011e	8b ff		 npad	 2
$L167004:

; 457  : 			{
; 458  : 				if(dwMax < (*it).second->m_dwID)

  00120	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00123	3b 31		 cmp	 esi, DWORD PTR [ecx]
  00125	73 0f		 jae	 SHORT $L134938

; 459  : 				{
; 460  : 					dwMax = (*it).second->m_dwID;

  00127	8b c1		 mov	 eax, ecx
  00129	8b 30		 mov	 esi, DWORD PTR [eax]

; 461  : 					m_strArticleTitle = (*it).second->m_strTitle;

  0012b	83 c0 0c	 add	 eax, 12			; 0000000cH
  0012e	50		 push	 eax
  0012f	8b cf		 mov	 ecx, edi
  00131	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=
$L134938:
  00136	8d 4c 24 24	 lea	 ecx, DWORD PTR _it$134933[esp+28]
  0013a	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Inc
  0013f	8b 8b 90 00 00
	00		 mov	 ecx, DWORD PTR [ebx+144]
  00145	8b 44 24 24	 mov	 eax, DWORD PTR _it$134933[esp+28]
  00149	3b c1		 cmp	 eax, ecx
  0014b	75 d3		 jne	 SHORT $L167004
$L134939:

; 462  : 				}
; 463  : 			}
; 464  : 		}
; 465  : 
; 466  : 		return TRUE;

  0014d	8d 45 f0	 lea	 eax, DWORD PTR [ebp-16]
  00150	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  00158	8d 50 0c	 lea	 edx, DWORD PTR [eax+12]
  0015b	83 c9 ff	 or	 ecx, -1
  0015e	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
  00162	49		 dec	 ecx
  00163	85 c9		 test	 ecx, ecx
  00165	5d		 pop	 ebp
  00166	7f 08		 jg	 SHORT $L167103
  00168	8b 08		 mov	 ecx, DWORD PTR [eax]
  0016a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0016c	50		 push	 eax
  0016d	ff 52 04	 call	 DWORD PTR [edx+4]
$L167103:
  00170	5f		 pop	 edi
  00171	5e		 pop	 esi
  00172	b0 01		 mov	 al, 1
  00174	5b		 pop	 ebx

; 467  : 	}
; 468  : 
; 469  : 	return FALSE;
; 470  : }

  00175	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00179	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00180	83 c4 10	 add	 esp, 16			; 00000010H
  00183	c2 04 00	 ret	 4
$L134927:
  00186	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  0018a	5f		 pop	 edi
  0018b	5e		 pop	 esi
  0018c	32 c0		 xor	 al, al
  0018e	5b		 pop	 ebx
  0018f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00196	83 c4 10	 add	 esp, 16			; 00000010H
  00199	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L166635:
  00000	8d 4d f0	 lea	 ecx, DWORD PTR _strTitle$134928[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?DelArticle@CTGuild@@QAEEK@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T167108
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?DelArticle@CTGuild@@QAEEK@Z ENDP			; CTGuild::DelArticle
PUBLIC	?TakeOutItem@CTGuild@@QAEEKE@Z			; CTGuild::TakeOutItem
; Function compile flags: /Ogty
;	COMDAT ?TakeOutItem@CTGuild@@QAEEKE@Z
_TEXT	SEGMENT
_find$ = -4						; size = 4
_dwItemID$ = 8						; size = 4
_bCount$ = 12						; size = 1
?TakeOutItem@CTGuild@@QAEEKE@Z PROC NEAR		; CTGuild::TakeOutItem, COMDAT
; _this$ = ecx

; 520  : {

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	57		 push	 edi
  00003	8b f1		 mov	 esi, ecx

; 521  : 	MAPTITEM::iterator find = m_mapTCabinet.find(dwItemID);

  00005	8d 44 24 10	 lea	 eax, DWORD PTR _dwItemID$[esp+8]
  00009	50		 push	 eax
  0000a	8d 4c 24 0c	 lea	 ecx, DWORD PTR _find$[esp+16]
  0000e	8d 7e 64	 lea	 edi, DWORD PTR [esi+100]
  00011	51		 push	 ecx
  00012	8b cf		 mov	 ecx, edi
  00014	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::find

; 522  : 	if(find==m_mapTCabinet.end())

  00019	8b 44 24 08	 mov	 eax, DWORD PTR _find$[esp+12]
  0001d	3b 46 68	 cmp	 eax, DWORD PTR [esi+104]
  00020	75 08		 jne	 SHORT $L135014
  00022	5f		 pop	 edi

; 523  : 		return FALSE;

  00023	32 c0		 xor	 al, al
  00025	5e		 pop	 esi

; 535  : }

  00026	59		 pop	 ecx
  00027	c2 08 00	 ret	 8
$L135014:

; 524  : 
; 525  : 	LPTITEM pItem = (*find).second;

  0002a	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 526  : 
; 527  : 	pItem->m_bCount -= bCount;

  0002d	8a 48 13	 mov	 cl, BYTE PTR [eax+19]
  00030	8a 54 24 14	 mov	 dl, BYTE PTR _bCount$[esp+8]
  00034	2a ca		 sub	 cl, dl
  00036	88 48 13	 mov	 BYTE PTR [eax+19], cl

; 528  : 	if(!pItem->m_bCount)

  00039	75 15		 jne	 SHORT $L135016

; 529  : 	{
; 530  : 		delete pItem;

  0003b	50		 push	 eax
  0003c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00041	83 c4 04	 add	 esp, 4

; 531  : 		m_mapTCabinet.erase(dwItemID);

  00044	8d 44 24 10	 lea	 eax, DWORD PTR _dwItemID$[esp+8]
  00048	50		 push	 eax
  00049	8b cf		 mov	 ecx, edi
  0004b	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::erase
$L135016:
  00050	5f		 pop	 edi

; 532  : 	}
; 533  : 
; 534  : 	return TRUE;

  00051	b0 01		 mov	 al, 1
  00053	5e		 pop	 esi

; 535  : }

  00054	59		 pop	 ecx
  00055	c2 08 00	 ret	 8
?TakeOutItem@CTGuild@@QAEEKE@Z ENDP			; CTGuild::TakeOutItem
_TEXT	ENDS
PUBLIC	?DelTactics@CTGuild@@QAEEPAUtagTTACTICSMEMBER@@E@Z ; CTGuild::DelTactics
; Function compile flags: /Ogty
;	COMDAT ?DelTactics@CTGuild@@QAEEPAUtagTTACTICSMEMBER@@E@Z
_TEXT	SEGMENT
tv133 = -8						; size = 8
tv128 = -8						; size = 8
tv84 = -8						; size = 8
_pMember$ = 8						; size = 4
_bKick$ = 12						; size = 1
?DelTactics@CTGuild@@QAEEPAUtagTTACTICSMEMBER@@E@Z PROC NEAR ; CTGuild::DelTactics, COMDAT
; _this$ = ecx

; 677  : {

  00000	83 ec 08	 sub	 esp, 8
  00003	53		 push	 ebx

; 678  : 	if(bKick < 3)

  00004	8a 5c 24 14	 mov	 bl, BYTE PTR _bKick$[esp+8]
  00008	80 fb 03	 cmp	 bl, 3
  0000b	56		 push	 esi
  0000c	57		 push	 edi
  0000d	8b 7c 24 18	 mov	 edi, DWORD PTR _pMember$[esp+16]
  00011	8b f1		 mov	 esi, ecx
  00013	73 1d		 jae	 SHORT $L167177

; 679  : 		_AtlModule.OnEventExpired(FALSE, EXPIRED_GT, pMember->m_dlEndTime, m_dwID, pMember->m_dwID);

  00015	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00018	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0001a	8b 57 24	 mov	 edx, DWORD PTR [edi+36]
  0001d	50		 push	 eax
  0001e	8b 47 20	 mov	 eax, DWORD PTR [edi+32]
  00021	51		 push	 ecx
  00022	52		 push	 edx
  00023	50		 push	 eax
  00024	6a 03		 push	 3
  00026	6a 00		 push	 0
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTWorldSvrModule@@A
  0002d	e8 00 00 00 00	 call	 ?OnEventExpired@CTWorldSvrModule@@QAEXEE_JKK@Z ; CTWorldSvrModule::OnEventExpired
$L167177:

; 680  : 
; 681  : 	if(!bKick)

  00032	84 db		 test	 bl, bl
  00034	75 63		 jne	 SHORT $L135401

; 682  : 	{
; 683  : 		GainPvPoint(pMember->m_dwRewardPoint, 0, PVP_USEABLE);

  00036	8b 47 10	 mov	 eax, DWORD PTR [edi+16]
  00039	85 c0		 test	 eax, eax
  0003b	74 20		 je	 SHORT $L167163
  0003d	8b 5e 4c	 mov	 ebx, DWORD PTR [esi+76]
  00040	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  00043	8b 56 50	 mov	 edx, DWORD PTR [esi+80]
  00046	03 d8		 add	 ebx, eax
  00048	51		 push	 ecx
  00049	8b c3		 mov	 eax, ebx
  0004b	50		 push	 eax
  0004c	8b 06		 mov	 eax, DWORD PTR [esi]
  0004e	52		 push	 edx
  0004f	50		 push	 eax
  00050	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlModule@@3VCTWorldSvrModule@@A
  00055	89 5e 4c	 mov	 DWORD PTR [esi+76], ebx
  00058	e8 00 00 00 00	 call	 ?SendDM_GUILDPVPOINT_REQ@CTWorldSvrModule@@QAEXKKKK@Z ; CTWorldSvrModule::SendDM_GUILDPVPOINT_REQ
$L167163:

; 684  : 
; 685  : 		DWORD dwGold, dwSilver, dwCooper;
; 686  : 		CalcMoney(pMember->m_dlRewardMoney, dwGold, dwSilver, dwCooper);

  0005d	8b 4f 34	 mov	 ecx, DWORD PTR [edi+52]
  00060	8b 47 30	 mov	 eax, DWORD PTR [edi+48]
  00063	55		 push	 ebp
  00064	6a 00		 push	 0
  00066	68 e8 03 00 00	 push	 1000			; 000003e8H
  0006b	51		 push	 ecx
  0006c	50		 push	 eax
  0006d	e8 00 00 00 00	 call	 __alldvrm
  00072	6a 00		 push	 0
  00074	68 e8 03 00 00	 push	 1000			; 000003e8H
  00079	52		 push	 edx
  0007a	50		 push	 eax
  0007b	8b e9		 mov	 ebp, ecx
  0007d	89 5c 24 24	 mov	 DWORD PTR tv128[esp+44], ebx
  00081	e8 00 00 00 00	 call	 __alldvrm

; 687  : 		GainMoney(dwGold, dwSilver, dwCooper);

  00086	55		 push	 ebp
  00087	51		 push	 ecx
  00088	89 5c 24 1c	 mov	 DWORD PTR tv84[esp+36], ebx
  0008c	50		 push	 eax
  0008d	8b ce		 mov	 ecx, esi
  0008f	89 54 24 20	 mov	 DWORD PTR tv133[esp+40], edx
  00093	e8 00 00 00 00	 call	 ?GainMoney@CTGuild@@QAEEKKK@Z ; CTGuild::GainMoney
  00098	5d		 pop	 ebp
$L135401:

; 688  : 	}
; 689  : 
; 690  : 	m_mapTTactics.erase(pMember->m_dwID);

  00099	8d 4f 04	 lea	 ecx, DWORD PTR [edi+4]
  0009c	51		 push	 ecx
  0009d	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
  000a0	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEIABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::erase

; 691  : 	delete pMember;

  000a5	85 ff		 test	 edi, edi
  000a7	74 10		 je	 SHORT $L167176
  000a9	8b cf		 mov	 ecx, edi
  000ab	e8 00 00 00 00	 call	 ??1tagTTACTICSMEMBER@@QAE@XZ
  000b0	57		 push	 edi
  000b1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000b6	83 c4 04	 add	 esp, 4
$L167176:
  000b9	5f		 pop	 edi
  000ba	5e		 pop	 esi

; 692  : 
; 693  : 	return GUILD_SUCCESS;

  000bb	32 c0		 xor	 al, al
  000bd	5b		 pop	 ebx

; 694  : }

  000be	83 c4 08	 add	 esp, 8
  000c1	c2 08 00	 ret	 8
?DelTactics@CTGuild@@QAEEPAUtagTTACTICSMEMBER@@E@Z ENDP	; CTGuild::DelTactics
_TEXT	ENDS
PUBLIC	??0?$map@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> > >::map<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> > >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ??0?$map@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> > >::map<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> > >::map<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> > >
_TEXT	ENDS
PUBLIC	??0?$map@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> > >::map<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> > >
; Function compile flags: /Ogty
;	COMDAT ??0?$map@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> > >::map<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> > >::map<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> > >
_TEXT	ENDS
PUBLIC	??0?$map@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> > >::map<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> > >
; Function compile flags: /Ogty
;	COMDAT ??0?$map@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> > >::map<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> > >::map<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> > >
_TEXT	ENDS
PUBLIC	??0?$map@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> > >::map<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> > >
; Function compile flags: /Ogty
;	COMDAT ??0?$map@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
??0?$map@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> > >::map<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> > >, COMDAT
; _this$ = ecx

; 102  : 		{	// construct empty map from defaults

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Buynode
  00008	89 46 04	 mov	 DWORD PTR [esi+4], eax
  0000b	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0000f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00012	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00015	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00018	89 00		 mov	 DWORD PTR [eax], eax
  0001a	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001d	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00020	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0

; 103  : 		}

  00027	8b c6		 mov	 eax, esi
  00029	5e		 pop	 esi
  0002a	c3		 ret	 0
??0?$map@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> > >::map<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> > >
_TEXT	ENDS
PUBLIC	?insert@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE?AViterator@12@V312@ABUtagTGUILDPOINTREWARD@@@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::insert
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?insert@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE?AViterator@12@V312@ABUtagTGUILDPOINTREWARD@@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Val$ = 16						; size = 4
?insert@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE?AViterator@12@V312@ABUtagTGUILDPOINTREWARD@@@Z PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::insert, COMDAT
; _this$ = ecx

; 621  : 		size_type _Off = size() == 0 ? 0 : _Where - begin();

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Where$[esp-4]
  00004	56		 push	 esi
  00005	57		 push	 edi
  00006	8b f9		 mov	 edi, ecx
  00008	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0000b	85 c9		 test	 ecx, ecx
  0000d	74 0c		 je	 SHORT $L167903
  0000f	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00012	2b c1		 sub	 eax, ecx
  00014	c1 f8 04	 sar	 eax, 4
  00017	85 c0		 test	 eax, eax
  00019	75 04		 jne	 SHORT $L167842
$L167903:
  0001b	33 f6		 xor	 esi, esi
  0001d	eb 07		 jmp	 SHORT $L167843
$L167842:
  0001f	8b f2		 mov	 esi, edx
  00021	2b f1		 sub	 esi, ecx
  00023	c1 fe 04	 sar	 esi, 4
$L167843:

; 622  : 		_Insert_n(_Where, (size_type)1, _Val);

  00026	8b 44 24 14	 mov	 eax, DWORD PTR __Val$[esp+4]
  0002a	50		 push	 eax
  0002b	6a 01		 push	 1
  0002d	52		 push	 edx
  0002e	8b cf		 mov	 ecx, edi
  00030	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXViterator@12@IABUtagTGUILDPOINTREWARD@@@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Insert_n

; 623  : 		return (begin() + _Off);

  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	c1 e6 04	 shl	 esi, 4
  0003b	03 f0		 add	 esi, eax
  0003d	8b 44 24 0c	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+4]
  00041	5f		 pop	 edi
  00042	89 30		 mov	 DWORD PTR [eax], esi
  00044	5e		 pop	 esi

; 624  : 		}

  00045	c2 0c 00	 ret	 12			; 0000000cH
?insert@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE?AViterator@12@V312@ABUtagTGUILDPOINTREWARD@@@Z ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::insert
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??0CTGuild@@QAE@XZ				; CTGuild::CTGuild
;	COMDAT xdata$x
xdata$x	SEGMENT
$T169398 DD	0ffffffffH
	DD	FLAT:$L167907
	DD	00H
	DD	FLAT:$L167908
	DD	01H
	DD	FLAT:$L167909
	DD	02H
	DD	FLAT:$L167910
	DD	03H
	DD	FLAT:$L167911
	DD	04H
	DD	FLAT:$L167912
	DD	05H
	DD	FLAT:$L167913
	DD	06H
	DD	FLAT:$L167914
	DD	07H
	DD	FLAT:$L167915
	DD	08H
	DD	FLAT:$L167916
$T169396 DD	019930520H
	DD	0aH
	DD	FLAT:$T169398
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tguild.cpp
CONST	ENDS
;	COMDAT ??0CTGuild@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0CTGuild@@QAE@XZ PROC NEAR				; CTGuild::CTGuild, COMDAT
; _this$ = ecx

; 6    : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTGuild@@QAE@XZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  0001b	53		 push	 ebx
  0001c	55		 push	 ebp
  0001d	56		 push	 esi
  0001e	8b f1		 mov	 esi, ecx
  00020	57		 push	 edi
  00021	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  00026	89 74 24 10	 mov	 DWORD PTR _this$[esp+32], esi
  0002a	ff 50 0c	 call	 DWORD PTR [eax+12]
  0002d	83 c0 10	 add	 eax, 16			; 00000010H
  00030	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00033	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  00039	33 db		 xor	 ebx, ebx
  0003b	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  00040	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00044	ff 52 0c	 call	 DWORD PTR [edx+12]
  00047	83 c0 10	 add	 eax, 16			; 00000010H
  0004a	89 46 0c	 mov	 DWORD PTR [esi+12], eax
  0004d	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  00052	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  00057	c6 44 24 1c 01	 mov	 BYTE PTR __$EHRec$[esp+40], 1
  0005c	ff 50 0c	 call	 DWORD PTR [eax+12]
  0005f	83 c0 10	 add	 eax, 16			; 00000010H
  00062	89 46 48	 mov	 DWORD PTR [esi+72], eax
  00065	8d 7e 64	 lea	 edi, DWORD PTR [esi+100]
  00068	8b cf		 mov	 ecx, edi
  0006a	c6 44 24 1c 02	 mov	 BYTE PTR __$EHRec$[esp+40], 2
  0006f	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Buynode
  00074	89 47 04	 mov	 DWORD PTR [edi+4], eax
  00077	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0007b	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0007e	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00081	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00084	89 00		 mov	 DWORD PTR [eax], eax
  00086	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00089	89 40 08	 mov	 DWORD PTR [eax+8], eax
  0008c	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0008f	8d 6e 70	 lea	 ebp, DWORD PTR [esi+112]
  00092	8b cd		 mov	 ecx, ebp
  00094	c6 44 24 1c 03	 mov	 BYTE PTR __$EHRec$[esp+40], 3
  00099	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Buynode
  0009e	89 45 04	 mov	 DWORD PTR [ebp+4], eax
  000a1	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  000a5	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000a8	89 40 04	 mov	 DWORD PTR [eax+4], eax
  000ab	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000ae	89 00		 mov	 DWORD PTR [eax], eax
  000b0	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000b3	89 40 08	 mov	 DWORD PTR [eax+8], eax
  000b6	89 5d 08	 mov	 DWORD PTR [ebp+8], ebx
  000b9	8d 4e 7c	 lea	 ecx, DWORD PTR [esi+124]
  000bc	c6 44 24 1c 04	 mov	 BYTE PTR __$EHRec$[esp+40], 4
  000c1	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Buynode
  000c6	89 86 80 00 00
	00		 mov	 DWORD PTR [esi+128], eax
  000cc	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  000d0	8b 86 80 00 00
	00		 mov	 eax, DWORD PTR [esi+128]
  000d6	89 40 04	 mov	 DWORD PTR [eax+4], eax
  000d9	8b 86 80 00 00
	00		 mov	 eax, DWORD PTR [esi+128]
  000df	89 00		 mov	 DWORD PTR [eax], eax
  000e1	8b 86 80 00 00
	00		 mov	 eax, DWORD PTR [esi+128]
  000e7	89 40 08	 mov	 DWORD PTR [eax+8], eax
  000ea	89 9e 84 00 00
	00		 mov	 DWORD PTR [esi+132], ebx
  000f0	8d 8e 8c 00 00
	00		 lea	 ecx, DWORD PTR [esi+140]
  000f6	c6 44 24 1c 05	 mov	 BYTE PTR __$EHRec$[esp+40], 5
  000fb	e8 00 00 00 00	 call	 ?_Buynode@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Buynode
  00100	89 86 90 00 00
	00		 mov	 DWORD PTR [esi+144], eax
  00106	c6 40 15 01	 mov	 BYTE PTR [eax+21], 1
  0010a	8b 86 90 00 00
	00		 mov	 eax, DWORD PTR [esi+144]
  00110	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00113	8b 86 90 00 00
	00		 mov	 eax, DWORD PTR [esi+144]
  00119	89 00		 mov	 DWORD PTR [eax], eax
  0011b	8b 86 90 00 00
	00		 mov	 eax, DWORD PTR [esi+144]
  00121	89 40 08	 mov	 DWORD PTR [eax+8], eax
  00124	89 9e 94 00 00
	00		 mov	 DWORD PTR [esi+148], ebx
  0012a	89 9e 9c 00 00
	00		 mov	 DWORD PTR [esi+156], ebx
  00130	89 9e a0 00 00
	00		 mov	 DWORD PTR [esi+160], ebx
  00136	89 9e a4 00 00
	00		 mov	 DWORD PTR [esi+164], ebx
  0013c	89 9e ac 00 00
	00		 mov	 DWORD PTR [esi+172], ebx
  00142	89 9e b0 00 00
	00		 mov	 DWORD PTR [esi+176], ebx
  00148	89 9e b4 00 00
	00		 mov	 DWORD PTR [esi+180], ebx
  0014e	89 9e bc 00 00
	00		 mov	 DWORD PTR [esi+188], ebx
  00154	89 9e c0 00 00
	00		 mov	 DWORD PTR [esi+192], ebx
  0015a	89 9e c4 00 00
	00		 mov	 DWORD PTR [esi+196], ebx

; 7    : 	m_bLevel = 0;
; 8    : 	m_dwFame = 0;
; 9    : 	m_dwFameColor = 0;
; 10   : 	m_dwGI = 0;
; 11   : 	m_dwExp = 0;
; 12   : 	m_bGPoint = 0;
; 13   : 	m_bStatus = 0;
; 14   : 	m_dwGold = 0;
; 15   : 	m_dwSilver = 0;
; 16   : 	m_dwCooper = 0;
; 17   : 	m_bDisorg = 0;
; 18   : 	m_dwTime = 0;
; 19   : 	m_bCountry = TCONTRY_N;
; 20   : 	m_dwArticleIndex = 0;
; 21   : 	m_timeEstablish = 0;
; 22   : 	m_strArticleTitle = NAME_NULL;

  00160	53		 push	 ebx
  00161	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00166	8d 4e 48	 lea	 ecx, DWORD PTR [esi+72]
  00169	c6 44 24 24 09	 mov	 BYTE PTR __$EHRec$[esp+48], 9
  0016e	88 5e 10	 mov	 BYTE PTR [esi+16], bl
  00171	89 5e 14	 mov	 DWORD PTR [esi+20], ebx
  00174	89 5e 18	 mov	 DWORD PTR [esi+24], ebx
  00177	89 5e 1c	 mov	 DWORD PTR [esi+28], ebx
  0017a	89 5e 20	 mov	 DWORD PTR [esi+32], ebx
  0017d	88 5e 24	 mov	 BYTE PTR [esi+36], bl
  00180	88 5e 25	 mov	 BYTE PTR [esi+37], bl
  00183	89 5e 28	 mov	 DWORD PTR [esi+40], ebx
  00186	89 5e 2c	 mov	 DWORD PTR [esi+44], ebx
  00189	89 5e 30	 mov	 DWORD PTR [esi+48], ebx
  0018c	88 5e 34	 mov	 BYTE PTR [esi+52], bl
  0018f	89 5e 38	 mov	 DWORD PTR [esi+56], ebx
  00192	c6 46 3c 03	 mov	 BYTE PTR [esi+60], 3
  00196	89 9e 88 00 00
	00		 mov	 DWORD PTR [esi+136], ebx
  0019c	89 5e 40	 mov	 DWORD PTR [esi+64], ebx
  0019f	89 5e 44	 mov	 DWORD PTR [esi+68], ebx
  001a2	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 23   : 	m_dwPvPUseablePoint = 0;

  001a7	89 5e 4c	 mov	 DWORD PTR [esi+76], ebx

; 24   : 	m_dwPvPTotalPoint = 0;

  001aa	89 5e 50	 mov	 DWORD PTR [esi+80], ebx

; 25   : 	m_dwPvPMonthPoint = 0;

  001ad	89 5e 54	 mov	 DWORD PTR [esi+84], ebx

; 26   : 	m_dwRankTotal = 0;

  001b0	89 5e 58	 mov	 DWORD PTR [esi+88], ebx

; 27   : 	m_dwRankMonth = 0;

  001b3	89 5e 5c	 mov	 DWORD PTR [esi+92], ebx

; 28   : 
; 29   : 	m_bMaxCabinet = 0;

  001b6	88 5e 60	 mov	 BYTE PTR [esi+96], bl

; 30   : 
; 31   : 	m_pTLEVEL = NULL;

  001b9	89 9e c8 00 00
	00		 mov	 DWORD PTR [esi+200], ebx

; 32   : 
; 33   : 	m_mapTMember.clear();

  001bf	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  001c2	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  001c5	52		 push	 edx
  001c6	8b cd		 mov	 ecx, ebp
  001c8	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Erase
  001cd	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  001d0	89 40 04	 mov	 DWORD PTR [eax+4], eax
  001d3	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  001d6	89 5d 08	 mov	 DWORD PTR [ebp+8], ebx
  001d9	89 00		 mov	 DWORD PTR [eax], eax
  001db	8b 6d 04	 mov	 ebp, DWORD PTR [ebp+4]
  001de	89 6d 08	 mov	 DWORD PTR [ebp+8], ebp

; 34   : 	m_mapTTactics.clear();

  001e1	8b 86 80 00 00
	00		 mov	 eax, DWORD PTR [esi+128]
  001e7	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001ea	8d 6e 7c	 lea	 ebp, DWORD PTR [esi+124]
  001ed	51		 push	 ecx
  001ee	8b cd		 mov	 ecx, ebp
  001f0	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Erase
  001f5	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  001f8	89 40 04	 mov	 DWORD PTR [eax+4], eax
  001fb	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  001fe	89 5d 08	 mov	 DWORD PTR [ebp+8], ebx
  00201	89 00		 mov	 DWORD PTR [eax], eax
  00203	8b 6d 04	 mov	 ebp, DWORD PTR [ebp+4]
  00206	89 6d 08	 mov	 DWORD PTR [ebp+8], ebp

; 35   : 	m_mapTArticle.clear();

  00209	8b 96 90 00 00
	00		 mov	 edx, DWORD PTR [esi+144]
  0020f	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00212	8d ae 8c 00 00
	00		 lea	 ebp, DWORD PTR [esi+140]
  00218	50		 push	 eax
  00219	8b cd		 mov	 ecx, ebp
  0021b	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Erase
  00220	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00223	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00226	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00229	89 5d 08	 mov	 DWORD PTR [ebp+8], ebx
  0022c	89 00		 mov	 DWORD PTR [eax], eax
  0022e	8b 6d 04	 mov	 ebp, DWORD PTR [ebp+4]
  00231	89 6d 08	 mov	 DWORD PTR [ebp+8], ebp

; 36   : 	m_mapTCabinet.clear();

  00234	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00237	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0023a	52		 push	 edx
  0023b	8b cf		 mov	 ecx, edi
  0023d	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Erase
  00242	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00245	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00248	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0024b	89 5f 08	 mov	 DWORD PTR [edi+8], ebx
  0024e	89 00		 mov	 DWORD PTR [eax], eax
  00250	8b 7f 04	 mov	 edi, DWORD PTR [edi+4]
  00253	89 7f 08	 mov	 DWORD PTR [edi+8], edi

; 37   : 	m_vAllience.clear();

  00256	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]
  0025c	3b c3		 cmp	 eax, ebx
  0025e	74 09		 je	 SHORT $L169367
  00260	50		 push	 eax
  00261	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00266	83 c4 04	 add	 esp, 4
$L169367:
  00269	89 9e 9c 00 00
	00		 mov	 DWORD PTR [esi+156], ebx
  0026f	89 9e a0 00 00
	00		 mov	 DWORD PTR [esi+160], ebx
  00275	89 9e a4 00 00
	00		 mov	 DWORD PTR [esi+164], ebx

; 38   : 	m_vEnemy.clear();

  0027b	8b 86 ac 00 00
	00		 mov	 eax, DWORD PTR [esi+172]
  00281	3b c3		 cmp	 eax, ebx
  00283	74 09		 je	 SHORT $L169387
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0028b	83 c4 04	 add	 esp, 4
$L169387:

; 39   : 	m_vPointReward.clear();

  0028e	8d 8e b8 00 00
	00		 lea	 ecx, DWORD PTR [esi+184]
  00294	89 9e ac 00 00
	00		 mov	 DWORD PTR [esi+172], ebx
  0029a	89 9e b0 00 00
	00		 mov	 DWORD PTR [esi+176], ebx
  002a0	89 9e b4 00 00
	00		 mov	 DWORD PTR [esi+180], ebx
  002a6	e8 00 00 00 00	 call	 ?_Tidy@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXXZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Tidy

; 40   : }

  002ab	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  002af	5f		 pop	 edi
  002b0	8b c6		 mov	 eax, esi
  002b2	5e		 pop	 esi
  002b3	5d		 pop	 ebp
  002b4	5b		 pop	 ebx
  002b5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002bc	83 c4 10	 add	 esp, 16			; 00000010H
  002bf	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L167907:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L167908:
  0000b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00011	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L167909:
  00016	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	83 c1 48	 add	 ecx, 72			; 00000048H
  0001c	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L167910:
  00021	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00024	83 c1 64	 add	 ecx, 100		; 00000064H
  00027	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@@std@@QAE@XZ
$L167911:
  0002c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002f	83 c1 70	 add	 ecx, 112		; 00000070H
  00032	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@@std@@QAE@XZ
$L167912:
  00037	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0003a	83 c1 7c	 add	 ecx, 124		; 0000007cH
  0003d	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@@std@@QAE@XZ
$L167913:
  00042	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	81 c1 8c 00 00
	00		 add	 ecx, 140		; 0000008cH
  0004b	e9 00 00 00 00	 jmp	 ??1?$map@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@@std@@QAE@XZ
$L167914:
  00050	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00053	81 c1 98 00 00
	00		 add	 ecx, 152		; 00000098H
  00059	e9 00 00 00 00	 jmp	 ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
$L167915:
  0005e	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	81 c1 a8 00 00
	00		 add	 ecx, 168		; 000000a8H
  00067	e9 00 00 00 00	 jmp	 ??1?$vector@KV?$allocator@K@std@@@std@@QAE@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::~vector<unsigned long,std::allocator<unsigned long> >
$L167916:
  0006c	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	81 c1 b8 00 00
	00		 add	 ecx, 184		; 000000b8H
  00075	e9 00 00 00 00	 jmp	 ??1?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@XZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::~vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >
__ehhandler$??0CTGuild@@QAE@XZ:
  0007a	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T169396
  0007f	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTGuild@@QAE@XZ ENDP					; CTGuild::CTGuild
PUBLIC	?PointLog@CTGuild@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z ; CTGuild::PointLog
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T169648 DD	0ffffffffH
	DD	FLAT:$L169406
	DD	00H
	DD	FLAT:$L169407
$T169646 DD	019930520H
	DD	02H
	DD	FLAT:$T169648
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tguild.cpp
xdata$x	ENDS
;	COMDAT ?PointLog@CTGuild@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z
_TEXT	SEGMENT
_log$ = -28						; size = 16
__$EHRec$ = -12						; size = 12
_dwPoint$ = 8						; size = 4
_strTarget$ = 12					; size = 4
_dlDate$ = 16						; size = 8
?PointLog@CTGuild@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z PROC NEAR ; CTGuild::PointLog, COMDAT
; _this$ = ecx

; 600  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?PointLog@CTGuild@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 10	 sub	 esp, 16			; 00000010H
  00018	56		 push	 esi
  00019	8b f1		 mov	 esi, ecx

; 601  : 	TGUILDPOINTREWARD log;

  0001b	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  00020	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  00025	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  0002d	ff 50 0c	 call	 DWORD PTR [eax+12]
  00030	83 c0 10	 add	 eax, 16			; 00000010H
  00033	89 44 24 04	 mov	 DWORD PTR _log$[esp+32], eax

; 602  : 	log.m_strName = strTarget;

  00037	8d 4c 24 28	 lea	 ecx, DWORD PTR _strTarget$[esp+28]
  0003b	51		 push	 ecx
  0003c	8d 4c 24 08	 lea	 ecx, DWORD PTR _log$[esp+36]
  00040	c6 44 24 20 01	 mov	 BYTE PTR __$EHRec$[esp+44], 1
  00045	e8 00 00 00 00	 call	 ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z ; ATL::CSimpleStringT<char,0>::operator=

; 603  : 	log.m_dwPoint = dwPoint;

  0004a	8b 54 24 24	 mov	 edx, DWORD PTR _dwPoint$[esp+28]

; 604  : 	log.m_dlDate = dlDate;

  0004e	8b 44 24 2c	 mov	 eax, DWORD PTR _dlDate$[esp+28]
  00052	8b 4c 24 30	 mov	 ecx, DWORD PTR _dlDate$[esp+32]
  00056	89 54 24 08	 mov	 DWORD PTR _log$[esp+36], edx

; 605  : 
; 606  : 	m_vPointReward.insert(m_vPointReward.begin(), log);

  0005a	8d 54 24 04	 lea	 edx, DWORD PTR _log$[esp+32]
  0005e	52		 push	 edx
  0005f	89 44 24 10	 mov	 DWORD PTR _log$[esp+44], eax
  00063	8b 86 bc 00 00
	00		 mov	 eax, DWORD PTR [esi+188]
  00069	6a 01		 push	 1
  0006b	89 4c 24 18	 mov	 DWORD PTR _log$[esp+52], ecx
  0006f	81 c6 b8 00 00
	00		 add	 esi, 184		; 000000b8H
  00075	50		 push	 eax
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?_Insert_n@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@IAEXViterator@12@IABUtagTGUILDPOINTREWARD@@@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::_Insert_n

; 607  : 	if(m_vPointReward.size() > 50)

  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	85 c0		 test	 eax, eax
  00082	74 14		 je	 SHORT $L135191
  00084	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00087	2b c8		 sub	 ecx, eax
  00089	c1 f9 04	 sar	 ecx, 4
  0008c	83 f9 32	 cmp	 ecx, 50			; 00000032H
  0008f	76 07		 jbe	 SHORT $L135191

; 608  : 		m_vPointReward.pop_back();

  00091	8b ce		 mov	 ecx, esi
  00093	e8 00 00 00 00	 call	 ?pop_back@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEXXZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::pop_back
$L135191:

; 609  : }

  00098	8b 44 24 04	 mov	 eax, DWORD PTR _log$[esp+32]
  0009c	83 c0 f0	 add	 eax, -16		; fffffff0H
  0009f	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000a4	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a7	83 ca ff	 or	 edx, -1
  000aa	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ae	4a		 dec	 edx
  000af	85 d2		 test	 edx, edx
  000b1	5e		 pop	 esi
  000b2	7f 08		 jg	 SHORT $L169614
  000b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b8	50		 push	 eax
  000b9	ff 52 04	 call	 DWORD PTR [edx+4]
$L169614:
  000bc	8b 44 24 24	 mov	 eax, DWORD PTR _strTarget$[esp+24]
  000c0	83 c0 f0	 add	 eax, -16		; fffffff0H
  000c3	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000cb	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000ce	83 ca ff	 or	 edx, -1
  000d1	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d5	4a		 dec	 edx
  000d6	85 d2		 test	 edx, edx
  000d8	7f 08		 jg	 SHORT $L169641
  000da	8b 08		 mov	 ecx, DWORD PTR [eax]
  000dc	8b 11		 mov	 edx, DWORD PTR [ecx]
  000de	50		 push	 eax
  000df	ff 52 04	 call	 DWORD PTR [edx+4]
$L169641:
  000e2	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  000e6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ed	83 c4 1c	 add	 esp, 28			; 0000001cH
  000f0	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L169406:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L169407:
  00008	8d 4d e4	 lea	 ecx, DWORD PTR _log$[ebp]
  0000b	e9 00 00 00 00	 jmp	 ??1tagTGUILDPOINTREWARD@@QAE@XZ
__ehhandler$?PointLog@CTGuild@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z:
  00010	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T169646
  00015	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?PointLog@CTGuild@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z ENDP ; CTGuild::PointLog
END
