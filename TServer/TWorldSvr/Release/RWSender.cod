; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\RWSender.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?SendRW_RELAYSVR_ACK@CTServer@@QAEXEPAV?$vector@KV?$allocator@K@std@@@std@@PAV?$map@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@@3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendRW_ENTERCHAR_ACK@CTServer@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEKKEGKGKKKGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendRW_PARTYADD_ACK@CTServer@@QAEXKGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendRW_PARTYDEL_ACK@CTServer@@QAEXKGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendRW_PARTYCHGCHIEF_ACK@CTServer@@QAEXGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendRW_GUILDADD_ACK@CTServer@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendRW_GUILDDEL_ACK@CTServer@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendRW_GUILDCHGMASTER_ACK@CTServer@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendRW_CORPSJOIN_ACK@CTServer@@QAEXGGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendRW_CHANGENAME_ACK@CTServer@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendRW_TACTICSADD_ACK@CTServer@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendRW_TACTICSDEL_ACK@CTServer@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendRW_CHATBAN_ACK@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTCASHITMSALE@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTCASHITMSALE@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagTCASHITMSALE@@IU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@IABU1@AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@GIG@std@@YAXPAGIABGAAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagMONREGEN@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagMONREGEN@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagMONREGEN@@IU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@IABU1@AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagLOTTERY@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagLOTTERY@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagLOTTERY@@IU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@IABU1@AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTENTRYRECORD@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTENTRYRECORD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@YAXPAUtagTENTRYRECORD@@0AAV?$allocator@UtagTENTRYRECORD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@0AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagTCASHITMSALE@@PAU1@@std@@YAPAUtagTCASHITMSALE@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAGPAGV?$allocator@G@std@@@std@@YAPAGPAG00AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAGPAG@std@@YAPAGPAG00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@0AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagMONREGEN@@PAU1@@std@@YAPAUtagMONREGEN@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@0AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagLOTTERY@@PAU1@@std@@YAPAUtagLOTTERY@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTNMTREWARD@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTNMTREWARD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@YAXPAUtagTNMTREWARD@@0AAV?$allocator@UtagTNMTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTENTRYRECORD@@@std@@QAEXPAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTNMTREWARD@@@std@@QAEXPAUtagTNMTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAGIG@std@@YAXPAGIABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@GG@std@@YAPAGPAG00AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTENTRYRECORD@@@std@@YAXPAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagTCASHITMSALE@@U1@@std@@YAXPAUtagTCASHITMSALE@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTCASHITMSALE@@@std@@YAXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagMONREGEN@@U1@@std@@YAXPAUtagMONREGEN@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagMONREGEN@@@std@@YAXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagLOTTERY@@U1@@std@@YAXPAUtagLOTTERY@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagLOTTERY@@@std@@YAXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTNMTREWARD@@@std@@YAXPAUtagTNMTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAGI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?SendRW_PARTYADD_ACK@CTServer@@QAEXKGK@Z	; CTServer::SendRW_PARTYADD_ACK
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
EXTRN	??0CPacket@@QAE@XZ:NEAR				; CPacket::CPacket
EXTRN	?SetID@CPacket@@QAEAAV1@G@Z:NEAR		; CPacket::SetID
EXTRN	??6CPacket@@QAEAAV0@K@Z:NEAR			; CPacket::operator<<
EXTRN	??6CPacket@@QAEAAV0@G@Z:NEAR			; CPacket::operator<<
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\rwsender.cpp
xdata$x	SEGMENT
$T123821 DD	0ffffffffH
	DD	FLAT:$L123812
$T123816 DD	019930520H
	DD	01H
	DD	FLAT:$T123821
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendRW_PARTYADD_ACK@CTServer@@QAEXKGK@Z
_TEXT	SEGMENT
$T123809 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_wPartyID$ = 12						; size = 2
_dwChiefID$ = 16					; size = 4
?SendRW_PARTYADD_ACK@CTServer@@QAEXKGK@Z PROC NEAR	; CTServer::SendRW_PARTYADD_ACK, COMDAT
; _this$ = ecx

; 76   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendRW_PARTYADD_ACK@CTServer@@QAEXKGK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 77   : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T123809[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L123811
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L123811:

; 78   : 
; 79   : 	pMSG->SetID(RW_PARTYADD_ACK)
; 80   : 		<< dwCharID
; 81   : 		<< wPartyID
; 82   : 		<< dwChiefID;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwChiefID$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _wPartyID$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 05 80 00 00	 push	 32773			; 00008005H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 83   : 
; 84   : 	Say(pMSG);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 85   : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L123812:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T123809[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendRW_PARTYADD_ACK@CTServer@@QAEXKGK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T123816
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendRW_PARTYADD_ACK@CTServer@@QAEXKGK@Z ENDP		; CTServer::SendRW_PARTYADD_ACK
PUBLIC	?SendRW_PARTYDEL_ACK@CTServer@@QAEXKGK@Z	; CTServer::SendRW_PARTYDEL_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T123836 DD	0ffffffffH
	DD	FLAT:$L123832
$T123834 DD	019930520H
	DD	01H
	DD	FLAT:$T123836
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendRW_PARTYDEL_ACK@CTServer@@QAEXKGK@Z
_TEXT	SEGMENT
$T123829 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_wPartyID$ = 12						; size = 2
_dwChiefID$ = 16					; size = 4
?SendRW_PARTYDEL_ACK@CTServer@@QAEXKGK@Z PROC NEAR	; CTServer::SendRW_PARTYDEL_ACK, COMDAT
; _this$ = ecx

; 89   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendRW_PARTYDEL_ACK@CTServer@@QAEXKGK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 90   : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T123829[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L123831
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L123831:

; 91   : 
; 92   : 	pMSG->SetID(RW_PARTYDEL_ACK)
; 93   : 		<< dwCharID
; 94   : 		<< wPartyID
; 95   : 		<< dwChiefID;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwChiefID$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _wPartyID$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 06 80 00 00	 push	 32774			; 00008006H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 96   : 
; 97   : 	Say(pMSG);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 98   : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L123832:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T123829[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendRW_PARTYDEL_ACK@CTServer@@QAEXKGK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T123834
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendRW_PARTYDEL_ACK@CTServer@@QAEXKGK@Z ENDP		; CTServer::SendRW_PARTYDEL_ACK
PUBLIC	?SendRW_PARTYCHGCHIEF_ACK@CTServer@@QAEXGK@Z	; CTServer::SendRW_PARTYCHGCHIEF_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T123850 DD	0ffffffffH
	DD	FLAT:$L123846
$T123848 DD	019930520H
	DD	01H
	DD	FLAT:$T123850
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendRW_PARTYCHGCHIEF_ACK@CTServer@@QAEXGK@Z
_TEXT	SEGMENT
$T123843 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wPartyID$ = 8						; size = 2
_dwChiefID$ = 12					; size = 4
?SendRW_PARTYCHGCHIEF_ACK@CTServer@@QAEXGK@Z PROC NEAR	; CTServer::SendRW_PARTYCHGCHIEF_ACK, COMDAT
; _this$ = ecx

; 101  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendRW_PARTYCHGCHIEF_ACK@CTServer@@QAEXGK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 102  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T123843[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L123845
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L123845:

; 103  : 
; 104  : 	pMSG->SetID(RW_PARTYCHGCHIEF_ACK)
; 105  : 		<< wPartyID
; 106  : 		<< dwChiefID;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwChiefID$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _wPartyID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 07 80 00 00	 push	 32775			; 00008007H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 107  : 
; 108  : 	Say(pMSG);

  00067	8b 17		 mov	 edx, DWORD PTR [edi]
  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	ff 12		 call	 DWORD PTR [edx]

; 109  : }

  0006e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L123846:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T123843[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendRW_PARTYCHGCHIEF_ACK@CTServer@@QAEXGK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T123848
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendRW_PARTYCHGCHIEF_ACK@CTServer@@QAEXGK@Z ENDP	; CTServer::SendRW_PARTYCHGCHIEF_ACK
PUBLIC	?SendRW_GUILDADD_ACK@CTServer@@QAEXKKK@Z	; CTServer::SendRW_GUILDADD_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T123864 DD	0ffffffffH
	DD	FLAT:$L123860
$T123862 DD	019930520H
	DD	01H
	DD	FLAT:$T123864
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendRW_GUILDADD_ACK@CTServer@@QAEXKKK@Z
_TEXT	SEGMENT
$T123857 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwGuildID$ = 12					; size = 4
_dwMasterID$ = 16					; size = 4
?SendRW_GUILDADD_ACK@CTServer@@QAEXKKK@Z PROC NEAR	; CTServer::SendRW_GUILDADD_ACK, COMDAT
; _this$ = ecx

; 113  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendRW_GUILDADD_ACK@CTServer@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 114  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T123857[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L123859
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L123859:

; 115  : 
; 116  : 	pMSG->SetID(RW_GUILDADD_ACK)
; 117  : 		<< dwCharID
; 118  : 		<< dwGuildID
; 119  : 		<< dwMasterID;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwMasterID$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwGuildID$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 08 80 00 00	 push	 32776			; 00008008H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 120  : 
; 121  : 	Say(pMSG);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 122  : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L123860:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T123857[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendRW_GUILDADD_ACK@CTServer@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T123862
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendRW_GUILDADD_ACK@CTServer@@QAEXKKK@Z ENDP		; CTServer::SendRW_GUILDADD_ACK
PUBLIC	?SendRW_GUILDDEL_ACK@CTServer@@QAEXKK@Z		; CTServer::SendRW_GUILDDEL_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T123878 DD	0ffffffffH
	DD	FLAT:$L123874
$T123876 DD	019930520H
	DD	01H
	DD	FLAT:$T123878
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendRW_GUILDDEL_ACK@CTServer@@QAEXKK@Z
_TEXT	SEGMENT
$T123871 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwGuildID$ = 12					; size = 4
?SendRW_GUILDDEL_ACK@CTServer@@QAEXKK@Z PROC NEAR	; CTServer::SendRW_GUILDDEL_ACK, COMDAT
; _this$ = ecx

; 125  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendRW_GUILDDEL_ACK@CTServer@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 126  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T123871[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L123873
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L123873:

; 127  : 
; 128  : 	pMSG->SetID(RW_GUILDDEL_ACK)
; 129  : 		<< dwCharID
; 130  : 		<< dwGuildID;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwGuildID$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 09 80 00 00	 push	 32777			; 00008009H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 131  : 
; 132  : 	Say(pMSG);

  00067	8b 17		 mov	 edx, DWORD PTR [edi]
  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	ff 12		 call	 DWORD PTR [edx]

; 133  : }

  0006e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L123874:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T123871[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendRW_GUILDDEL_ACK@CTServer@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T123876
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendRW_GUILDDEL_ACK@CTServer@@QAEXKK@Z ENDP		; CTServer::SendRW_GUILDDEL_ACK
PUBLIC	?SendRW_GUILDCHGMASTER_ACK@CTServer@@QAEXKK@Z	; CTServer::SendRW_GUILDCHGMASTER_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T123892 DD	0ffffffffH
	DD	FLAT:$L123888
$T123890 DD	019930520H
	DD	01H
	DD	FLAT:$T123892
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendRW_GUILDCHGMASTER_ACK@CTServer@@QAEXKK@Z
_TEXT	SEGMENT
$T123885 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwGuildID$ = 8						; size = 4
_dwMasterID$ = 12					; size = 4
?SendRW_GUILDCHGMASTER_ACK@CTServer@@QAEXKK@Z PROC NEAR	; CTServer::SendRW_GUILDCHGMASTER_ACK, COMDAT
; _this$ = ecx

; 136  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendRW_GUILDCHGMASTER_ACK@CTServer@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 137  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T123885[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L123887
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L123887:

; 138  : 
; 139  : 	pMSG->SetID(RW_GUILDCHGMASTER_ACK)
; 140  : 		<< dwGuildID
; 141  : 		<< dwMasterID;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwMasterID$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwGuildID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 0a 80 00 00	 push	 32778			; 0000800aH
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 142  : 
; 143  : 	Say(pMSG);

  00067	8b 17		 mov	 edx, DWORD PTR [edi]
  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	ff 12		 call	 DWORD PTR [edx]

; 144  : }

  0006e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L123888:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T123885[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendRW_GUILDCHGMASTER_ACK@CTServer@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T123890
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendRW_GUILDCHGMASTER_ACK@CTServer@@QAEXKK@Z ENDP	; CTServer::SendRW_GUILDCHGMASTER_ACK
PUBLIC	?SendRW_CORPSJOIN_ACK@CTServer@@QAEXGGG@Z	; CTServer::SendRW_CORPSJOIN_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T123906 DD	0ffffffffH
	DD	FLAT:$L123902
$T123904 DD	019930520H
	DD	01H
	DD	FLAT:$T123906
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendRW_CORPSJOIN_ACK@CTServer@@QAEXGGG@Z
_TEXT	SEGMENT
$T123899 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wPartyID$ = 8						; size = 2
_wCorpsID$ = 12						; size = 2
_wCommander$ = 16					; size = 2
?SendRW_CORPSJOIN_ACK@CTServer@@QAEXGGG@Z PROC NEAR	; CTServer::SendRW_CORPSJOIN_ACK, COMDAT
; _this$ = ecx

; 148  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendRW_CORPSJOIN_ACK@CTServer@@QAEXGGG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 149  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T123899[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L123901
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L123901:

; 150  : 
; 151  : 	pMSG->SetID(RW_CORPSJOIN_ACK)
; 152  : 		<< wPartyID
; 153  : 		<< wCorpsID
; 154  : 		<< wCommander;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _wCommander$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _wCorpsID$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _wPartyID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 0b 80 00 00	 push	 32779			; 0000800bH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 155  : 
; 156  : 	Say(pMSG);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 157  : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L123902:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T123899[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendRW_CORPSJOIN_ACK@CTServer@@QAEXGGG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T123904
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendRW_CORPSJOIN_ACK@CTServer@@QAEXGGG@Z ENDP		; CTServer::SendRW_CORPSJOIN_ACK
PUBLIC	?SendRW_TACTICSADD_ACK@CTServer@@QAEXKKK@Z	; CTServer::SendRW_TACTICSADD_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T123920 DD	0ffffffffH
	DD	FLAT:$L123916
$T123918 DD	019930520H
	DD	01H
	DD	FLAT:$T123920
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendRW_TACTICSADD_ACK@CTServer@@QAEXKKK@Z
_TEXT	SEGMENT
$T123913 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwGuildID$ = 12					; size = 4
_dwGuildMaster$ = 16					; size = 4
?SendRW_TACTICSADD_ACK@CTServer@@QAEXKKK@Z PROC NEAR	; CTServer::SendRW_TACTICSADD_ACK, COMDAT
; _this$ = ecx

; 176  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendRW_TACTICSADD_ACK@CTServer@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 177  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T123913[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L123915
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L123915:

; 178  : 
; 179  : 	pMSG->SetID(RW_TACTICSADD_ACK)
; 180  : 		<< dwCharID
; 181  : 		<< dwGuildID
; 182  : 		<< dwGuildMaster;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwGuildMaster$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwGuildID$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 0e 80 00 00	 push	 32782			; 0000800eH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 183  : 
; 184  : 	Say(pMSG);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 185  : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L123916:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T123913[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendRW_TACTICSADD_ACK@CTServer@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T123918
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendRW_TACTICSADD_ACK@CTServer@@QAEXKKK@Z ENDP		; CTServer::SendRW_TACTICSADD_ACK
PUBLIC	?SendRW_TACTICSDEL_ACK@CTServer@@QAEXKK@Z	; CTServer::SendRW_TACTICSDEL_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T123934 DD	0ffffffffH
	DD	FLAT:$L123930
$T123932 DD	019930520H
	DD	01H
	DD	FLAT:$T123934
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendRW_TACTICSDEL_ACK@CTServer@@QAEXKK@Z
_TEXT	SEGMENT
$T123927 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwGuildID$ = 12					; size = 4
?SendRW_TACTICSDEL_ACK@CTServer@@QAEXKK@Z PROC NEAR	; CTServer::SendRW_TACTICSDEL_ACK, COMDAT
; _this$ = ecx

; 188  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendRW_TACTICSDEL_ACK@CTServer@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 189  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T123927[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L123929
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L123929:

; 190  : 
; 191  : 	pMSG->SetID(RW_TACTICSDEL_ACK)
; 192  : 		<< dwCharID
; 193  : 		<< dwGuildID;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwGuildID$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 0f 80 00 00	 push	 32783			; 0000800fH
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 194  : 
; 195  : 	Say(pMSG);

  00067	8b 17		 mov	 edx, DWORD PTR [edi]
  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	ff 12		 call	 DWORD PTR [edx]

; 196  : }

  0006e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L123930:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T123927[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendRW_TACTICSDEL_ACK@CTServer@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T123932
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendRW_TACTICSDEL_ACK@CTServer@@QAEXKK@Z ENDP		; CTServer::SendRW_TACTICSDEL_ACK
PUBLIC	?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L123940
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L123940:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::size
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L123338
  0000d	8d 49 00	 npad	 3
$L123337:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L123337
$L123338:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Min
_TEXT	ENDS
PUBLIC	?Release@CStringData@ATL@@QAEXXZ		; ATL::CStringData::Release
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
?Release@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::Release, COMDAT
; _this$ = ecx

; 93   : 		ATLASSERT( nRefs != 0 );
; 94   : 
; 95   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

  00000	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  00003	83 ca ff	 or	 edx, -1
  00006	f0 0f c1 10	 lock	  xadd	 DWORD PTR [eax], edx
  0000a	4a		 dec	 edx
  0000b	85 d2		 test	 edx, edx
  0000d	7f 0a		 jg	 SHORT $L73499

; 96   : 		{
; 97   : 			pStringMgr->Free( this );

  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	8b 10		 mov	 edx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	8b c8		 mov	 ecx, eax
  00016	ff 52 04	 call	 DWORD PTR [edx+4]
$L73499:

; 98   : 		}
; 99   : 	}

  00019	c3		 ret	 0
?Release@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::Release
_TEXT	ENDS
PUBLIC	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ		; ATL::CSimpleStringT<char,0>::operator char const *
; Function compile flags: /Ogty
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::operator char const *, COMDAT
; _this$ = ecx

; 379  : 		return( m_pszData );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 380  : 	}

  00002	c3		 ret	 0
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP		; ATL::CSimpleStringT<char,0>::operator char const *
_TEXT	ENDS
PUBLIC	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
; Function compile flags: /Ogty
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetData, COMDAT
; _this$ = ecx

; 731  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 732  : 	}

  00005	c3		 ret	 0
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ENDP ; ATL::CSimpleStringT<char,0>::GetData
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator*
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ
_TEXT	SEGMENT
??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L123322

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L124098

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L124086
  0001d	8d 49 00	 npad	 3
$L124085:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L124085
$L124086:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L124098:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L123326
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L123325:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L123326

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L123325
$L123326:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L123322:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ PROC NEAR		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 263  : 		CStringData* pData = GetData();

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 264  : 		pData->Release();

  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L124111
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L124111:

; 265  : 	}

  0001c	c3		 ret	 0
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ ENDP		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::end
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 963  : 	}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H
  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L124187
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L124187:
  0001c	c3		 ret	 0
??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	?SendRW_ENTERCHAR_ACK@CTServer@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEKKEGKGKKKGG@Z ; CTServer::SendRW_ENTERCHAR_ACK
EXTRN	??6CPacket@@QAEAAV0@PBD@Z:NEAR			; CPacket::operator<<
EXTRN	??6CPacket@@QAEAAV0@E@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T124232 DD	0ffffffffH
	DD	FLAT:$L124197
	DD	00H
	DD	FLAT:$L124198
$T124230 DD	019930520H
	DD	02H
	DD	FLAT:$T124232
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\rwsender.cpp
xdata$x	ENDS
;	COMDAT ?SendRW_ENTERCHAR_ACK@CTServer@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEKKEGKGKKKGG@Z
_TEXT	SEGMENT
$T124194 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_strName$ = 12						; size = 4
_bResult$ = 16						; size = 1
_bCountry$ = 20						; size = 1
_bAidCountry$ = 24					; size = 1
_dwGuildID$ = 28					; size = 4
_dwGuildChief$ = 32					; size = 4
_bDuty$ = 36						; size = 1
_wPartyID$ = 40						; size = 2
_dwPartyChiefID$ = 44					; size = 4
_wCorpsID$ = 48						; size = 2
_dwGeneralID$ = 52					; size = 4
_dwTacticsID$ = 56					; size = 4
_dwTacticsChief$ = 60					; size = 4
_wMapID$ = 64						; size = 2
_wUnitID$ = 68						; size = 2
?SendRW_ENTERCHAR_ACK@CTServer@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEKKEGKGKKKGG@Z PROC NEAR ; CTServer::SendRW_ENTERCHAR_ACK, COMDAT
; _this$ = ecx

; 49   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendRW_ENTERCHAR_ACK@CTServer@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEKKEGKGKKKGG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 50   : 	CPacket *pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T124194[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L124195
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L124196
$L124195:
  00043	33 f6		 xor	 esi, esi
$L124196:

; 51   : 
; 52   : 	pMSG->SetID(RW_ENTERCHAR_ACK)
; 53   : 		<< dwCharID
; 54   : 		<< strName
; 55   : 		<< bResult
; 56   : 		<< bCountry
; 57   : 		<< bAidCountry
; 58   : 		<< dwGuildID
; 59   : 		<< dwGuildChief
; 60   : 		<< bDuty
; 61   : 		<< wPartyID
; 62   : 		<< dwPartyChiefID
; 63   : 		<< wCorpsID
; 64   : 		<< dwGeneralID
; 65   : 		<< dwTacticsID
; 66   : 		<< dwTacticsChief
; 67   : 		<< wMapID
; 68   : 		<< wUnitID;

  00045	8b 44 24 5c	 mov	 eax, DWORD PTR _wUnitID$[esp+24]
  00049	8b 4c 24 58	 mov	 ecx, DWORD PTR _wMapID$[esp+24]
  0004d	8b 54 24 54	 mov	 edx, DWORD PTR _dwTacticsChief$[esp+24]
  00051	50		 push	 eax
  00052	8b 44 24 54	 mov	 eax, DWORD PTR _dwTacticsID$[esp+28]
  00056	51		 push	 ecx
  00057	8b 4c 24 54	 mov	 ecx, DWORD PTR _dwGeneralID$[esp+32]
  0005b	52		 push	 edx
  0005c	8b 54 24 54	 mov	 edx, DWORD PTR _wCorpsID$[esp+36]
  00060	50		 push	 eax
  00061	8b 44 24 54	 mov	 eax, DWORD PTR _dwPartyChiefID$[esp+40]
  00065	51		 push	 ecx
  00066	8b 4c 24 54	 mov	 ecx, DWORD PTR _wPartyID$[esp+44]
  0006a	52		 push	 edx
  0006b	8b 54 24 54	 mov	 edx, DWORD PTR _bDuty$[esp+48]
  0006f	50		 push	 eax
  00070	8b 44 24 54	 mov	 eax, DWORD PTR _dwGuildChief$[esp+52]
  00074	51		 push	 ecx
  00075	8b 4c 24 54	 mov	 ecx, DWORD PTR _dwGuildID$[esp+56]
  00079	52		 push	 edx
  0007a	8b 54 24 54	 mov	 edx, DWORD PTR _bAidCountry$[esp+60]
  0007e	50		 push	 eax
  0007f	8b 44 24 54	 mov	 eax, DWORD PTR _bCountry$[esp+64]
  00083	51		 push	 ecx
  00084	8b 4c 24 54	 mov	 ecx, DWORD PTR _bResult$[esp+68]
  00088	52		 push	 edx
  00089	8b 54 24 50	 mov	 edx, DWORD PTR _dwCharID$[esp+72]
  0008d	50		 push	 eax
  0008e	51		 push	 ecx
  0008f	88 5c 24 50	 mov	 BYTE PTR __$EHRec$[esp+92], bl
  00093	8b 5c 24 5c	 mov	 ebx, DWORD PTR _strName$[esp+80]
  00097	53		 push	 ebx
  00098	52		 push	 edx
  00099	68 04 80 00 00	 push	 32772			; 00008004H
  0009e	8b ce		 mov	 ecx, esi
  000a0	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  000a5	8b c8		 mov	 ecx, eax
  000a7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ac	8b c8		 mov	 ecx, eax
  000ae	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000b3	8b c8		 mov	 ecx, eax
  000b5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ba	8b c8		 mov	 ecx, eax
  000bc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c1	8b c8		 mov	 ecx, eax
  000c3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c8	8b c8		 mov	 ecx, eax
  000ca	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000cf	8b c8		 mov	 ecx, eax
  000d1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000d6	8b c8		 mov	 ecx, eax
  000d8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000dd	8b c8		 mov	 ecx, eax
  000df	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000e4	8b c8		 mov	 ecx, eax
  000e6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000eb	8b c8		 mov	 ecx, eax
  000ed	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000f2	8b c8		 mov	 ecx, eax
  000f4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000f9	8b c8		 mov	 ecx, eax
  000fb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00100	8b c8		 mov	 ecx, eax
  00102	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00107	8b c8		 mov	 ecx, eax
  00109	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0010e	8b c8		 mov	 ecx, eax
  00110	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 69   : 
; 70   : 	Say(pMSG);

  00115	8b 07		 mov	 eax, DWORD PTR [edi]
  00117	56		 push	 esi
  00118	8b cf		 mov	 ecx, edi
  0011a	ff 10		 call	 DWORD PTR [eax]

; 71   : }

  0011c	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0011f	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00127	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0012a	83 ca ff	 or	 edx, -1
  0012d	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00131	4a		 dec	 edx
  00132	5f		 pop	 edi
  00133	5e		 pop	 esi
  00134	5b		 pop	 ebx
  00135	85 d2		 test	 edx, edx
  00137	7f 08		 jg	 SHORT $L124225
  00139	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0013d	50		 push	 eax
  0013e	ff 52 04	 call	 DWORD PTR [edx+4]
$L124225:
  00141	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00145	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0014c	83 c4 10	 add	 esp, 16			; 00000010H
  0014f	c2 40 00	 ret	 64			; 00000040H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L124197:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L124198:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T124194[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendRW_ENTERCHAR_ACK@CTServer@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEKKEGKGKKKGG@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T124230
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendRW_ENTERCHAR_ACK@CTServer@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEKKEGKGKKKGG@Z ENDP ; CTServer::SendRW_ENTERCHAR_ACK
PUBLIC	?SendRW_CHANGENAME_ACK@CTServer@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTServer::SendRW_CHANGENAME_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T124277 DD	0ffffffffH
	DD	FLAT:$L124242
	DD	00H
	DD	FLAT:$L124243
$T124275 DD	019930520H
	DD	02H
	DD	FLAT:$T124277
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\rwsender.cpp
xdata$x	ENDS
;	COMDAT ?SendRW_CHANGENAME_ACK@CTServer@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T124239 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_bType$ = 12						; size = 1
_bValue$ = 16						; size = 1
_strName$ = 20						; size = 4
?SendRW_CHANGENAME_ACK@CTServer@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTServer::SendRW_CHANGENAME_ACK, COMDAT
; _this$ = ecx

; 162  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendRW_CHANGENAME_ACK@CTServer@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 163  : 	CPacket *pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T124239[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L124240
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L124241
$L124240:
  00043	33 f6		 xor	 esi, esi
$L124241:

; 164  : 
; 165  : 	pMSG->SetID(RW_CHANGENAME_ACK)
; 166  : 		<< dwCharID
; 167  : 		<< bType
; 168  : 		<< bValue
; 169  : 		<< strName;

  00045	8b 44 24 28	 mov	 eax, DWORD PTR _bValue$[esp+24]
  00049	8b 4c 24 24	 mov	 ecx, DWORD PTR _bType$[esp+24]
  0004d	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  00051	88 5c 24 18	 mov	 BYTE PTR __$EHRec$[esp+36], bl
  00055	8b 5c 24 2c	 mov	 ebx, DWORD PTR _strName$[esp+24]
  00059	53		 push	 ebx
  0005a	50		 push	 eax
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	68 0d 80 00 00	 push	 32781			; 0000800dH
  00062	8b ce		 mov	 ecx, esi
  00064	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00069	8b c8		 mov	 ecx, eax
  0006b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00070	8b c8		 mov	 ecx, eax
  00072	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 170  : 
; 171  : 	Say(pMSG);

  00085	8b 07		 mov	 eax, DWORD PTR [edi]
  00087	56		 push	 esi
  00088	8b cf		 mov	 ecx, edi
  0008a	ff 10		 call	 DWORD PTR [eax]

; 172  : }

  0008c	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0008f	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00097	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0009a	83 ca ff	 or	 edx, -1
  0009d	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000a1	4a		 dec	 edx
  000a2	85 d2		 test	 edx, edx
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	7f 08		 jg	 SHORT $L124270
  000a9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ab	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ad	50		 push	 eax
  000ae	ff 52 04	 call	 DWORD PTR [edx+4]
$L124270:
  000b1	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000b5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000bc	83 c4 10	 add	 esp, 16			; 00000010H
  000bf	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L124242:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L124243:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T124239[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendRW_CHANGENAME_ACK@CTServer@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T124275
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendRW_CHANGENAME_ACK@CTServer@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTServer::SendRW_CHANGENAME_ACK
PUBLIC	?SendRW_CHATBAN_ACK@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z ; CTServer::SendRW_CHATBAN_ACK
EXTRN	??6CPacket@@QAEAAV0@_J@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T124322 DD	0ffffffffH
	DD	FLAT:$L124287
	DD	00H
	DD	FLAT:$L124288
$T124320 DD	019930520H
	DD	02H
	DD	FLAT:$T124322
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\rwsender.cpp
xdata$x	ENDS
;	COMDAT ?SendRW_CHATBAN_ACK@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z
_TEXT	SEGMENT
$T124284 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strName$ = 8						; size = 4
_nChatBanTime$ = 12					; size = 8
?SendRW_CHATBAN_ACK@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z PROC NEAR ; CTServer::SendRW_CHATBAN_ACK, COMDAT
; _this$ = ecx

; 200  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendRW_CHATBAN_ACK@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 201  : 	CPacket *pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T124284[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L124285
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L124286
$L124285:
  00043	33 f6		 xor	 esi, esi
$L124286:

; 202  : 	pMSG->SetID(RW_CHATBAN_ACK)
; 203  : 		<< strName
; 204  : 		<< nChatBanTime;

  00045	8b 44 24 28	 mov	 eax, DWORD PTR _nChatBanTime$[esp+28]
  00049	8b 4c 24 24	 mov	 ecx, DWORD PTR _nChatBanTime$[esp+24]
  0004d	50		 push	 eax
  0004e	51		 push	 ecx
  0004f	88 5c 24 20	 mov	 BYTE PTR __$EHRec$[esp+44], bl
  00053	8b 5c 24 28	 mov	 ebx, DWORD PTR _strName$[esp+32]
  00057	53		 push	 ebx
  00058	68 10 80 00 00	 push	 32784			; 00008010H
  0005d	8b ce		 mov	 ecx, esi
  0005f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00064	8b c8		 mov	 ecx, eax
  00066	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0006b	8b c8		 mov	 ecx, eax
  0006d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 205  : 	
; 206  : 	Say(pMSG);

  00072	8b 17		 mov	 edx, DWORD PTR [edi]
  00074	56		 push	 esi
  00075	8b cf		 mov	 ecx, edi
  00077	ff 12		 call	 DWORD PTR [edx]

; 207  : }

  00079	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0007c	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00084	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00087	83 ca ff	 or	 edx, -1
  0008a	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0008e	4a		 dec	 edx
  0008f	85 d2		 test	 edx, edx
  00091	5f		 pop	 edi
  00092	5e		 pop	 esi
  00093	5b		 pop	 ebx
  00094	7f 08		 jg	 SHORT $L124315
  00096	8b 08		 mov	 ecx, DWORD PTR [eax]
  00098	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009a	50		 push	 eax
  0009b	ff 52 04	 call	 DWORD PTR [edx+4]
$L124315:
  0009e	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000a2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a9	83 c4 10	 add	 esp, 16			; 00000010H
  000ac	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L124287:
  00000	8d 4d 04	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L124288:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T124284[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendRW_CHATBAN_ACK@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T124320
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendRW_CHATBAN_ACK@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z ENDP ; CTServer::SendRW_CHATBAN_ACK
PUBLIC	??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::operator[]
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::operator[]
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?SendRW_RELAYSVR_ACK@CTServer@@QAEXEPAV?$vector@KV?$allocator@K@std@@@std@@PAV?$map@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@@3@@Z ; CTServer::SendRW_RELAYSVR_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T124760 DD	0ffffffffH
	DD	FLAT:$L124390
$T124751 DD	019930520H
	DD	01H
	DD	FLAT:$T124760
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\rwsender.cpp
xdata$x	ENDS
;	COMDAT ?SendRW_RELAYSVR_ACK@CTServer@@QAEXEPAV?$vector@KV?$allocator@K@std@@@std@@PAV?$map@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@@3@@Z
_TEXT	SEGMENT
$T124384 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bNation$ = 8						; size = 1
_vTOPERATOR$ = 12					; size = 4
_mapTSVRMSG$ = 16					; size = 4
?SendRW_RELAYSVR_ACK@CTServer@@QAEXEPAV?$vector@KV?$allocator@K@std@@@std@@PAV?$map@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@@3@@Z PROC NEAR ; CTServer::SendRW_RELAYSVR_ACK, COMDAT
; _this$ = ecx

; 6    : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendRW_RELAYSVR_ACK@CTServer@@QAEXEPAV?$vector@KV?$allocator@K@std@@@std@@PAV?$map@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@@3@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi

; 7    : 	CPacket *pMSG = new CPacket();

  0001a	6a 1c		 push	 28			; 0000001cH
  0001c	8b e9		 mov	 ebp, ecx
  0001e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00023	83 c4 04	 add	 esp, 4
  00026	89 44 24 10	 mov	 DWORD PTR $T124384[esp+32], eax
  0002a	33 f6		 xor	 esi, esi
  0002c	3b c6		 cmp	 eax, esi
  0002e	89 74 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], esi
  00032	74 0b		 je	 SHORT $L124385
  00034	8b c8		 mov	 ecx, eax
  00036	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003b	8b d8		 mov	 ebx, eax
  0003d	eb 02		 jmp	 SHORT $L124386
$L124385:
  0003f	33 db		 xor	 ebx, ebx
$L124386:

; 8    : 
; 9    : 	pMSG->SetID(RW_RELAYSVR_ACK)
; 10   : 		<< bNation
; 11   : 		<< WORD(vTOPERATOR->size());

  00041	8b 7c 24 28	 mov	 edi, DWORD PTR _vTOPERATOR$[esp+28]
  00045	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00048	3b ce		 cmp	 ecx, esi
  0004a	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  00052	75 04		 jne	 SHORT $L124396
  00054	33 c0		 xor	 eax, eax
  00056	eb 08		 jmp	 SHORT $L124397
$L124396:
  00058	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0005b	2b c1		 sub	 eax, ecx
  0005d	c1 f8 02	 sar	 eax, 2
$L124397:
  00060	50		 push	 eax
  00061	8b 44 24 28	 mov	 eax, DWORD PTR _bNation$[esp+32]
  00065	50		 push	 eax
  00066	68 02 80 00 00	 push	 32770			; 00008002H
  0006b	8b cb		 mov	 ecx, ebx
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
$L122383:

; 12   : 
; 13   : 	for(WORD i=0; i<vTOPERATOR->size(); i++)

  00080	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00083	85 c9		 test	 ecx, ecx
  00085	75 04		 jne	 SHORT $L124403
  00087	33 c0		 xor	 eax, eax
  00089	eb 08		 jmp	 SHORT $L124404
$L124403:
  0008b	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0008e	2b c1		 sub	 eax, ecx
  00090	c1 f8 02	 sar	 eax, 2
$L124404:
  00093	0f b7 d6	 movzx	 edx, si
  00096	3b d0		 cmp	 edx, eax
  00098	73 0e		 jae	 SHORT $L122385

; 14   : 	{
; 15   : 		(*pMSG)
; 16   : 			<< (*vTOPERATOR)[i];

  0009a	8b 0c 91	 mov	 ecx, DWORD PTR [ecx+edx*4]
  0009d	51		 push	 ecx
  0009e	8b cb		 mov	 ecx, ebx
  000a0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a5	46		 inc	 esi
  000a6	eb d8		 jmp	 SHORT $L122383
$L122385:

; 17   : 	}
; 18   : 
; 19   : 	(*pMSG)
; 20   : 		<< WORD(mapTSVRMSG->size());

  000a8	8b 7c 24 2c	 mov	 edi, DWORD PTR _mapTSVRMSG$[esp+28]
  000ac	33 d2		 xor	 edx, edx
  000ae	66 8b 57 08	 mov	 dx, WORD PTR [edi+8]
  000b2	8b cb		 mov	 ecx, ebx
  000b4	52		 push	 edx
  000b5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 21   : 
; 22   : 	MAPTSTRING::iterator it;
; 23   : 	for(it=mapTSVRMSG->begin(); it != mapTSVRMSG->end(); it++)

  000ba	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  000bd	8b 30		 mov	 esi, DWORD PTR [eax]
  000bf	3b f0		 cmp	 esi, eax
  000c1	74 65		 je	 SHORT $L122949
$L124652:

; 24   : 	{
; 25   : 		(*pMSG)
; 26   : 			<< (*it).first
; 27   : 			<< (*it).second;

  000c3	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000c6	50		 push	 eax
  000c7	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  000ca	50		 push	 eax
  000cb	8b cb		 mov	 ecx, ebx
  000cd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000d2	8b c8		 mov	 ecx, eax
  000d4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000d9	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  000dc	84 c0		 test	 al, al
  000de	75 43		 jne	 SHORT $L124663
  000e0	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  000e3	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  000e6	84 c9		 test	 cl, cl
  000e8	75 18		 jne	 SHORT $L124755
  000ea	8b f0		 mov	 esi, eax
  000ec	8b 06		 mov	 eax, DWORD PTR [esi]
  000ee	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  000f1	84 c9		 test	 cl, cl
  000f3	75 2e		 jne	 SHORT $L124663

; 21   : 
; 22   : 	MAPTSTRING::iterator it;
; 23   : 	for(it=mapTSVRMSG->begin(); it != mapTSVRMSG->end(); it++)

$L124677:
  000f5	8b f0		 mov	 esi, eax
  000f7	8b 06		 mov	 eax, DWORD PTR [esi]
  000f9	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  000fc	84 c9		 test	 cl, cl
  000fe	74 f5		 je	 SHORT $L124677
  00100	eb 21		 jmp	 SHORT $L124663
$L124755:
  00102	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00105	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00108	84 c9		 test	 cl, cl
  0010a	75 15		 jne	 SHORT $L124666
  0010c	8d 64 24 00	 npad	 4
$L124665:
  00110	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  00113	75 0c		 jne	 SHORT $L124666
  00115	8b f0		 mov	 esi, eax
  00117	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0011a	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0011d	84 c9		 test	 cl, cl
  0011f	74 ef		 je	 SHORT $L124665
$L124666:
  00121	8b f0		 mov	 esi, eax
$L124663:
  00123	3b 77 04	 cmp	 esi, DWORD PTR [edi+4]
  00126	75 9b		 jne	 SHORT $L124652
$L122949:

; 28   : 	}
; 29   : 
; 30   : 	Say(pMSG);

  00128	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  0012b	53		 push	 ebx
  0012c	8b cd		 mov	 ecx, ebp
  0012e	ff 12		 call	 DWORD PTR [edx]

; 31   : }

  00130	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  00134	5f		 pop	 edi
  00135	5e		 pop	 esi
  00136	5d		 pop	 ebp
  00137	5b		 pop	 ebx
  00138	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0013f	83 c4 10	 add	 esp, 16			; 00000010H
  00142	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L124390:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T124384[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendRW_RELAYSVR_ACK@CTServer@@QAEXEPAV?$vector@KV?$allocator@K@std@@@std@@PAV?$map@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@@3@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T124751
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendRW_RELAYSVR_ACK@CTServer@@QAEXEPAV?$vector@KV?$allocator@K@std@@@std@@PAV?$map@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@@3@@Z ENDP ; CTServer::SendRW_RELAYSVR_ACK
END
