; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\SSSender.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?RelayCorpsMsg@CTServer@@QAEXKKPAVCPacket@@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCT_SERVICEMONITOR_REQ@CTServer@@QAEXKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCT_USERMOVE_ACK@CTServer@@QAEXKKEGMMMG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCT_CASHITEMSALE_ACK@CTServer@@QAEXKG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCT_RPSGAMEDATA_ACK@CTServer@@QAEXEEPAV?$map@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0tagTRPSGAME@@QAE@ABU0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1tagTRPSGAME@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_HELPMESSAGE_REQ@CTServer@@QAEXE_J0V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_USERPOSITION_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_ENTERSVR_REQ@CTServer@@QAEXEKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_ENTERSVR_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_RELEASEMAIN_REQ@CTServer@@QAEXKKEGMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MAPSVRLIST_REQ@CTServer@@QAEXKKEGMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_INVALIDCHAR_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHARDATA_REQ@CTServer@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_ENTERCHAR_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GMMMKKK0EEGEK0GEKGEEEEEK_JKK0EPAVCPacket@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CONRESULT_REQ@CTServer@@QAEXKKEV?$map@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CLOSECHAR_REQ@CTServer@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHECKMAIN_REQ@CTServer@@QAEXKKEGMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_DELCHAR_REQ@CTServer@@QAEXKKEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHARINFO_REQ@CTServer@@QAEXKKPAVCTGuild@@0PAVCTParty@@EEGE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CONLIST_REQ@CTServer@@QAEXKKEGMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TELEPORT_REQ@CTServer@@QAEXKKEGMMME@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_ROUTE_REQ@CTServer@@QAEXKKEGMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_ENTERSOLOMAP_REQ@CTServer@@QAEXKKGEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHGPARTYTYPE_REQ@CTServer@@QAEXKKEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PARTYADD_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PARTYJOIN_REQ@CTServer@@QAEXKKGKGPAUtagTCHARACTER@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PARTYDEL_REQ@CTServer@@QAEXKKKKGGE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PARTYMANSTAT_REQ@CTServer@@QAEXKKKEEKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_LEVELUP_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_EVENTMSGLOTTERY_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAV?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDESTABLISH_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDDISORGANIZATION_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDINVITE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDJOIN_REQ@CTServer@@QAEXKKEKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDLEAVE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDDUTY_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDPEER_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDMEMBERLIST_REQ@CTServer@@QAEXKKEPAVCTGuild@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDINFO_REQ@CTServer@@QAEXKKEPAUtagTGUILDMEMBER@@PAVCTGuild@@EE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDCABINETLIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDCONTRIBUTION_REQ@CTServer@@QAEXKKEKKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDARTICLELIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDARTICLEADD_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDARTICLEDEL_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDARTICLEUPDATE_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDFAME_REQ@CTServer@@QAEXKKEKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDWANTEDADD_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDWANTEDDEL_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDWANTEDLIST_REQ@CTServer@@QAEXKKEPAUtagTGUILDWANTEDAPP@@PAV?$map@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDVOLUNTEERING_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDVOLUNTEERINGDEL_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDVOLUNTEERLIST_REQ@CTServer@@QAEXKKPAV?$map@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDVOLUNTEERREPLY_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSWANTEDADD_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSWANTEDDEL_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSWANTEDLIST_REQ@CTServer@@QAEXKKEPAUtagTGUILDTACTICSWANTEDAPP@@PAV?$map@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSVOLUNTEERING_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSVOLUNTEERINGDEL_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSVOLUNTEERLIST_REQ@CTServer@@QAEXKKPAV?$map@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSREPLY_REQ@CTServer@@QAEXKKEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0KKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSKICKOUT_REQ@CTServer@@QAEXKKEKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSINVITE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSANSWER_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0KKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDTACTICSLIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHAT_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TAKEMONMONEY_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MONSTERDIE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_ADDITEM_REQ@CTServer@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PARTYORDERTAKEITEM_REQ@CTServer@@QAEXKKEEGKGPAUtagTITEM@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FRIENDLIST_REQ@CTServer@@QAEXPAUtagTCHARACTER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FRIENDADD_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FRIENDASK_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FRIENDERASE_REQ@CTServer@@QAEXKKEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHGPARTYCHIEF_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PARTYATTR_REQ@CTServer@@QAEXKKGEKG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHGSQUADCHIEF_REQ@CTServer@@QAEXKKGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_ADDITEMRESULT_REQ@CTServer@@QAEXKKEGKEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHARSTATINFO_REQ@CTServer@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHARSTATINFOANS_REQ@CTServer@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_LOCALENABLE_REQ@CTServer@@QAEXEKKEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHGCORPSCOMMANDER_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CORPSREPLY_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_ADDSQUAD_REQ@CTServer@@QAEXKKPAVCTParty@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_DELSQUAD_REQ@CTServer@@QAEXKKG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CORPSASK_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CORPSJOIN_REQ@CTServer@@QAEXKKGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_ADDCORPSUNIT_REQ@CTServer@@QAEXKKGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@MKKKGGGGGGEEEEEEEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_DELCORPSUNIT_REQ@CTServer@@QAEXKKGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CORPSCMD_REQ@CTServer@@QAEXKKGKGEKEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_REPORTENEMYLIST_REQ@CTServer@@QAEXKKGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PARTYMOVE_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TMSRECV_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TMSINVITEASK_REQ@CTServer@@QAEXKKKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TMSINVITE_REQ@CTServer@@QAEXKKKPAUtagTMS@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TMSOUT_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_POSTRECV_REQ@CTServer@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_LOCALOCCUPY_REQ@CTServer@@QAEXEGEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CASTLEOCCUPY_REQ@CTServer@@QAEXEGKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MISSIONOCCUPY_REQ@CTServer@@QAEXEGE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CASTLEENABLE_REQ@CTServer@@QAEXEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CASTLEAPPLY_REQ@CTServer@@QAEXKKEGKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CASTLEJOIN_REQ@CTServer@@QAEXKKKG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MONTEMPT_REQ@CTServer@@QAEXKKG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GETBLOOD_REQ@CTServer@@QAEXKKKEEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FRIENDGROUPMAKE_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FRIENDGROUPDELETE_REQ@CTServer@@QAEXKKEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FRIENDGROUPCHANGE_REQ@CTServer@@QAEXKKEEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FRIENDGROUPNAME_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FRIENDCONNECTION_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_DEALITEMERROR_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MAGICMIRROR_REQ@CTServer@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CREATERECALLMON_REQ@CTServer@@QAEXKKKGKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEEEEEEKKKKEEMMMGV?$vector@GV?$allocator@G@std@@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_RECALLMONDEL_REQ@CTServer@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FRIENDREGION_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_STARTTELEPORT_REQ@CTServer@@QAEXKKEGMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PETRIDING_REQ@CTServer@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_EVENTQUARTER_REQ@CTServer@@QAEXEEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_HELMETHIDE_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PARTYMEMBERRECALL_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEGMMM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_PARTYMEMBERRECALLANS_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_SOULMATE_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_SOULMATESEARCH_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_SOULMATEREG_REQ@CTServer@@QAEXKKEEEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_SOULMATEEND_REQ@CTServer@@QAEXKKEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CASTLEWARINFO_REQ@CTServer@@QAEXPAUtagCASTLEWARINFO@@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EK1@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_ENDWAR_REQ@CTServer@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHATBAN_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_JEKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHARMSG_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_RECALLMONDATA_REQ@CTServer@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CHANGECHARBASE_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_HEROSELECT_REQ@CTServer@@QAEXGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_RELAYCONNECT_REQ@CTServer@@QAEXKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCT_CHATBAN_ACK@CTServer@@QAEXEKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_ITEMSTATE_REQ@CTServer@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCT_ITEMSTATE_ACK@CTServer@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCT_CASTLEGUILDCHG_ACK@CTServer@@QAEXKEGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GAINPVPPOINT_REQ@CTServer@@QAEXKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDPOINTLOG_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDPOINTREWARD_REQ@CTServer@@QAEXEKKKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_GUILDPVPRECORD_REQ@CTServer@@QAEXKKPAVCTGuild@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MONSTERBUY_REQ@CTServer@@QAEXEKKKGGK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CASTLEGUILDCHG_REQ@CTServer@@QAEXGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_EVENTUPDATE_REQ@CTServer@@QAEXEGPAUtagEVENTINFO@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_EVENTMSG_REQ@CTServer@@QAEXEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CASHSHOPSTOP_REQ@CTServer@@QAEXEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CASHITEMSALE_REQ@CTServer@@QAEXKGPAV?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_WORLDPOSTSEND_REQ@CTServer@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00GEG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_WORLDPOSTSEND_REQ@CTServer@@QAEXEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_CASTLEAPPLICANTCOUNT_REQ@CTServer@@QAEXGKEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MONTHRANKLIST_REQ@CTServer@@QAEXQAY0CB@UtagMONTHRANKER@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MONTHRANKRESET_REQ@CTServer@@QAEXQAUtagMONTHRANKER@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FAMERANKUPDATE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MONTHRANKUPDATE_REQ@CTServer@@QAEXEEEEQAY0CB@UtagMONTHRANKER@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_WARLORDSAY_REQ@CTServer@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_FIRSTGRADEGROUP_REQ@CTServer@@QAEXQAY0BB@UtagMONTHRANKER@@E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TERMINATE_REQ@CTServer@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TOURNAMENTENABLE_REQ@CTServer@@QAEXEEK_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TOURNAMENT_REQ@CTServer@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TOURNAMENT_REQ@CTServer@@QAEXKKGE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TOURNAMENTINFO_REQ@CTServer@@QAEXEPAV?$map@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@@std@@EEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TOURNAMENTMATCH_REQ@CTServer@@QAEXPAV?$map@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TOURNAMENTRESULT_REQ@CTServer@@QAEXGEEKKKKAAV?$vector@KV?$allocator@K@std@@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_TOURNAMENTBATPOINT_REQ@CTServer@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_MISSIONENABLE_REQ@CTServer@@QAEXEKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_RPSGAME_REQ@CTServer@@QAEXKKEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_RPSGAMECHANGE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendMW_APEXDATA_REQ@CTServer@@QAEXKKPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?back@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAUtagTENTRYRECORD@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?at@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAUtagTCASHITMSALE@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAEAAPAUtagTCHARACTER@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAEAAUtagTNMTREWARD@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$vector@_JV?$allocator@_J@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@_JV?$allocator@_J@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEAAUtagTGUILDPOINTREWARD@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTNMTPLAYER@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKK@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBEUtagCASTLETOP3@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGUtagTRPSGAME@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAEAAULOTPACKET@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTITEM@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKUtagTGUILDWANTED@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAEAAUtagTGUILDTACTICSWANTED@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTCHARACTER@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@_JV?$allocator@_J@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$vector@_JV?$allocator@_J@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@_JV?$allocator@_J@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Buy@?$vector@_JV?$allocator@_J@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@_JV?$allocator@_J@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_Vector_val@_JV?$allocator@_J@std@@@std@@IAE@V?$allocator@_J@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@_J@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTNMTPLAYER@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKK@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEUtagCASTLETOP3@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGUtagTRPSGAME@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTITEM@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKUtagTGUILDWANTED@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTCHARACTER@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEAAUtagTENTRYRECORD@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Giterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBEAAPAUtagTCHARACTER@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBEAAUtagTNMTREWARD@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEAAUtagTGUILDPOINTREWARD@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBEAAULOTPACKET@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBEAAUtagTGUILDTACTICSWANTED@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTCHARACTER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTSOULMATE@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTNMTPLAYER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$vector@_JV?$allocator@_J@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@_JV?$allocator@_J@std@@@std@@IAEXPA_J0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xlen@?$vector@_JV?$allocator@_J@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@_J@std@@QAEXPA_JI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@_J@std@@QAEPA_JI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTITEM@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEUtagCASTLETOP3@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGUtagTRPSGAME@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKUtagTGUILDWANTED@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Ziterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEABUtagTENTRYRECORD@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAE@PAPAUtagTCHARACTER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBEABQAUtagTCHARACTER@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAE@PAUtagTNMTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBEABUtagTNMTREWARD@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QAE@PA_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEABUtagTGUILDPOINTREWARD@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAE@PAULOTPACKET@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBEABULOTPACKET@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAE@PAUtagTGUILDTACTICSWANTED@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBEABUtagTGUILDTACTICSWANTED@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@_J@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEUtagCASTLETOP3@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAE@PAPAUtagTCHARACTER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAE@PAUtagTNMTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAE@PAULOTPACKET@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAE@PAUtagTGUILDTACTICSWANTED@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTCASHITMSALE@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTCASHITMSALE@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagTCASHITMSALE@@IU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@IABU1@AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@GIG@std@@YAXPAGIABGAAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagMONREGEN@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagMONREGEN@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagMONREGEN@@IU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@IABU1@AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagLOTTERY@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagLOTTERY@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagLOTTERY@@IU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@IABU1@AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTENTRYRECORD@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTENTRYRECORD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@YAXPAUtagTENTRYRECORD@@0AAV?$allocator@UtagTENTRYRECORD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@0AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagTCASHITMSALE@@PAU1@@std@@YAPAUtagTCASHITMSALE@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAGPAGV?$allocator@G@std@@@std@@YAPAGPAG00AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAGPAG@std@@YAPAGPAG00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@0AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagMONREGEN@@PAU1@@std@@YAPAUtagMONREGEN@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@0AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagLOTTERY@@PAU1@@std@@YAPAUtagLOTTERY@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTNMTREWARD@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTNMTREWARD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@YAXPAUtagTNMTREWARD@@0AAV?$allocator@UtagTNMTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ucopy@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@@?$vector@_JV?$allocator@_J@std@@@std@@IAEPA_JVconst_iterator@01@0PA_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@_JV?$allocator@_J@std@@@std@@YAXPA_J0AAV?$allocator@_J@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@_J@std@@YAPA_JIPA_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTENTRYRECORD@@@std@@QAEXPAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTNMTREWARD@@@std@@QAEXPAUtagTNMTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAGIG@std@@YAXPAGIABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@GG@std@@YAPAGPAG00AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@PA_JV?$allocator@_J@3@@std@@YAPA_JVconst_iterator@?$vector@_JV?$allocator@_J@std@@@0@0PA_JAAV?$allocator@_J@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@_JV?$allocator@_J@std@@@std@@YAXPA_J0AAV?$allocator@_J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTENTRYRECORD@@@std@@YAXPAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagTCASHITMSALE@@U1@@std@@YAXPAUtagTCASHITMSALE@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTCASHITMSALE@@@std@@YAXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagMONREGEN@@U1@@std@@YAXPAUtagMONREGEN@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagMONREGEN@@@std@@YAXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagLOTTERY@@U1@@std@@YAXPAUtagLOTTERY@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagLOTTERY@@@std@@YAXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTNMTREWARD@@@std@@YAXPAUtagTNMTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@PA_J@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAVconst_iterator@?$vector@_JV?$allocator@_J@std@@@0@AAPA_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@PA_JV?$allocator@_J@3@@std@@YAPA_JVconst_iterator@?$vector@_JV?$allocator@_J@std@@@0@0PA_JAAV?$allocator@_J@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@_J@std@@QAEXPA_JAB_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@_J@std@@QAEXPA_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QBEAB_JXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@_J_J@std@@YAXPA_JAB_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@_J@std@@YAXPA_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PA_J0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTSOULMATE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAGI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEAAUtagTCASHITMSALE@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEABUtagTCASHITMSALE@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WrapPacketIn@tagMONTHRANKER@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WrapPacketIn@tagEVENTINFO@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAUtagTCASHITMSALE@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAEAAUtagMONREGEN@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBEAAUtagMONREGEN@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBEABUtagMONREGEN@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAE@PAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAE@PAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAEAAUtagLOTTERY@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBEAAUtagLOTTERY@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBEABUtagLOTTERY@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAE@PAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAE@PAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@GV?$allocator@G@std@@@std@@QBEAAGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@GV?$allocator@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@GV?$allocator@G@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@GV?$allocator@G@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTFRIEND@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTFRIEND@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTFRIEND@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTSOULMATE@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTSOULMATE@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckImplicitLoad@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindStringResourceInstance@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAtlException@ATL@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI1?AVCAtlException@ATL@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA1?AVCAtlException@ATL@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVCAtlException@ATL@@@84
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVCAtlException@ATL@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagTCHARCON@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagTCHARCON@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagTCHARCON@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$map@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
PUBLIC	?RelayCorpsMsg@CTServer@@QAEXKKPAVCPacket@@G@Z	; CTServer::RelayCorpsMsg
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	??0CPacket@@QAE@XZ:NEAR				; CPacket::CPacket
EXTRN	?Rewind@CPacket@@QAEXH@Z:NEAR			; CPacket::Rewind
EXTRN	?SetID@CPacket@@QAEAAV1@G@Z:NEAR		; CPacket::SetID
EXTRN	??6CPacket@@QAEAAV0@K@Z:NEAR			; CPacket::operator<<
EXTRN	?Copy@CPacket@@QAEXPAV1@@Z:NEAR			; CPacket::Copy
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	SEGMENT
$T131769 DD	0ffffffffH
	DD	FLAT:$L131760
$T131764 DD	019930520H
	DD	01H
	DD	FLAT:$T131769
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?RelayCorpsMsg@CTServer@@QAEXKKPAVCPacket@@G@Z
_TEXT	SEGMENT
$T131757 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_pPacket$ = 16						; size = 4
_wMsgID$ = 20						; size = 2
?RelayCorpsMsg@CTServer@@QAEXKKPAVCPacket@@G@Z PROC NEAR ; CTServer::RelayCorpsMsg, COMDAT
; _this$ = ecx

; 7    : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?RelayCorpsMsg@CTServer@@QAEXKKPAVCPacket@@G@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 8    : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T131757[esp+24], eax
  00028	85 c0		 test	 eax, eax
  0002a	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00032	74 0b		 je	 SHORT $L131758
  00034	8b c8		 mov	 ecx, eax
  00036	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003b	8b f0		 mov	 esi, eax
  0003d	eb 02		 jmp	 SHORT $L131759
$L131758:
  0003f	33 f6		 xor	 esi, esi
$L131759:

; 9    : 	pMSG->Copy(pPacket);

  00041	8b 44 24 24	 mov	 eax, DWORD PTR _pPacket$[esp+20]
  00045	50		 push	 eax
  00046	8b ce		 mov	 ecx, esi
  00048	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00050	e8 00 00 00 00	 call	 ?Copy@CPacket@@QAEXPAV1@@Z ; CPacket::Copy

; 10   : 	pMSG->SetID(wMsgID);

  00055	8b 4c 24 28	 mov	 ecx, DWORD PTR _wMsgID$[esp+20]
  00059	51		 push	 ecx
  0005a	8b ce		 mov	 ecx, esi
  0005c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 11   : 	pMSG->Rewind(FALSE);

  00061	6a 00		 push	 0
  00063	8b ce		 mov	 ecx, esi
  00065	e8 00 00 00 00	 call	 ?Rewind@CPacket@@QAEXH@Z ; CPacket::Rewind

; 12   : 
; 13   : 	(*pMSG)
; 14   : 		<< dwCharID
; 15   : 		<< dwKey;

  0006a	8b 54 24 20	 mov	 edx, DWORD PTR _dwKey$[esp+20]
  0006e	8b 44 24 1c	 mov	 eax, DWORD PTR _dwCharID$[esp+20]
  00072	52		 push	 edx
  00073	50		 push	 eax
  00074	8b ce		 mov	 ecx, esi
  00076	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 16   : 
; 17   : 	Say(pMSG);

  00082	8b 17		 mov	 edx, DWORD PTR [edi]
  00084	56		 push	 esi
  00085	8b cf		 mov	 ecx, edi
  00087	ff 12		 call	 DWORD PTR [edx]

; 18   : }

  00089	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00096	83 c4 10	 add	 esp, 16			; 00000010H
  00099	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131760:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T131757[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?RelayCorpsMsg@CTServer@@QAEXKKPAVCPacket@@G@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131764
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?RelayCorpsMsg@CTServer@@QAEXKKPAVCPacket@@G@Z ENDP	; CTServer::RelayCorpsMsg
PUBLIC	?SendCT_SERVICEMONITOR_REQ@CTServer@@QAEXKKKK@Z	; CTServer::SendCT_SERVICEMONITOR_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T131784 DD	0ffffffffH
	DD	FLAT:$L131780
$T131782 DD	019930520H
	DD	01H
	DD	FLAT:$T131784
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendCT_SERVICEMONITOR_REQ@CTServer@@QAEXKKKK@Z
_TEXT	SEGMENT
$T131777 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwTick$ = 8						; size = 4
_dwSession$ = 12					; size = 4
_dwUser$ = 16						; size = 4
_dwActiveUser$ = 20					; size = 4
?SendCT_SERVICEMONITOR_REQ@CTServer@@QAEXKKKK@Z PROC NEAR ; CTServer::SendCT_SERVICEMONITOR_REQ, COMDAT
; _this$ = ecx

; 24   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCT_SERVICEMONITOR_REQ@CTServer@@QAEXKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 25   : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T131777[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L131779
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L131779:

; 26   : 
; 27   : 	pMSG->SetID(CT_SERVICEMONITOR_REQ)
; 28   : 		<< dwTick
; 29   : 		<< dwSession
; 30   : 		<< dwUser
; 31   : 		<< dwActiveUser;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _dwActiveUser$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwUser$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwSession$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwTick$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 1d 60 00 00	 push	 24605			; 0000601dH
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 32   : 
; 33   : 	Say(pMSG);

  0007f	8b 17		 mov	 edx, DWORD PTR [edi]
  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	ff 12		 call	 DWORD PTR [edx]

; 34   : }

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00093	83 c4 10	 add	 esp, 16			; 00000010H
  00096	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131780:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T131777[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendCT_SERVICEMONITOR_REQ@CTServer@@QAEXKKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131782
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCT_SERVICEMONITOR_REQ@CTServer@@QAEXKKKK@Z ENDP	; CTServer::SendCT_SERVICEMONITOR_REQ
PUBLIC	?SendCT_USERMOVE_ACK@CTServer@@QAEXKKEGMMMG@Z	; CTServer::SendCT_USERMOVE_ACK
EXTRN	__fltused:NEAR
EXTRN	??6CPacket@@QAEAAV0@G@Z:NEAR			; CPacket::operator<<
EXTRN	??6CPacket@@QAEAAV0@E@Z:NEAR			; CPacket::operator<<
EXTRN	??6CPacket@@QAEAAV0@M@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
xdata$x	SEGMENT
$T131799 DD	0ffffffffH
	DD	FLAT:$L131794
$T131796 DD	019930520H
	DD	01H
	DD	FLAT:$T131799
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendCT_USERMOVE_ACK@CTServer@@QAEXKKEGMMMG@Z
_TEXT	SEGMENT
$T131791 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bChannel$ = 16						; size = 1
_wMapID$ = 20						; size = 2
_fPosX$ = 24						; size = 4
_fPosY$ = 28						; size = 4
_fPosZ$ = 32						; size = 4
_wPartyID$ = 36						; size = 2
?SendCT_USERMOVE_ACK@CTServer@@QAEXKKEGMMMG@Z PROC NEAR	; CTServer::SendCT_USERMOVE_ACK, COMDAT
; _this$ = ecx

; 44   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCT_USERMOVE_ACK@CTServer@@QAEXKKEGMMMG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 45   : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T131791[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L131793
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L131793:

; 46   : 
; 47   : 	pMSG->SetID(CT_USERMOVE_ACK)
; 48   : 		<< dwCharID
; 49   : 		<< dwKEY
; 50   : 		<< bChannel
; 51   : 		<< wMapID
; 52   : 		<< fPosX
; 53   : 		<< fPosY
; 54   : 		<< fPosZ
; 55   : 		<< wPartyID;

  0003b	8b 44 24 38	 mov	 eax, DWORD PTR _wPartyID$[esp+20]
  0003f	8b 4c 24 34	 mov	 ecx, DWORD PTR _fPosZ$[esp+20]
  00043	8b 54 24 30	 mov	 edx, DWORD PTR _fPosY$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 30	 mov	 eax, DWORD PTR _fPosX$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 30	 mov	 ecx, DWORD PTR _wMapID$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 30	 mov	 edx, DWORD PTR _bChannel$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 30	 mov	 eax, DWORD PTR _dwKEY$[esp+36]
  0005b	51		 push	 ecx
  0005c	8b 4c 24 30	 mov	 ecx, DWORD PTR _dwCharID$[esp+40]
  00060	52		 push	 edx
  00061	50		 push	 eax
  00062	51		 push	 ecx
  00063	68 2e 60 00 00	 push	 24622			; 0000602eH
  00068	8b ce		 mov	 ecx, esi
  0006a	c7 44 24 38 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+68], -1
  00072	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000a1	8b c8		 mov	 ecx, eax
  000a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000a8	8b c8		 mov	 ecx, eax
  000aa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 56   : 
; 57   : 	Say(pMSG);

  000af	8b 17		 mov	 edx, DWORD PTR [edi]
  000b1	56		 push	 esi
  000b2	8b cf		 mov	 ecx, edi
  000b4	ff 12		 call	 DWORD PTR [edx]

; 58   : }

  000b6	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	83 c4 10	 add	 esp, 16			; 00000010H
  000c6	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131794:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T131791[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendCT_USERMOVE_ACK@CTServer@@QAEXKKEGMMMG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131796
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCT_USERMOVE_ACK@CTServer@@QAEXKKEGMMMG@Z ENDP	; CTServer::SendCT_USERMOVE_ACK
PUBLIC	?SendCT_CASHITEMSALE_ACK@CTServer@@QAEXKG@Z	; CTServer::SendCT_CASHITEMSALE_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T131813 DD	0ffffffffH
	DD	FLAT:$L131809
$T131811 DD	019930520H
	DD	01H
	DD	FLAT:$T131813
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendCT_CASHITEMSALE_ACK@CTServer@@QAEXKG@Z
_TEXT	SEGMENT
$T131806 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwIndex$ = 8						; size = 4
_wValue$ = 12						; size = 2
?SendCT_CASHITEMSALE_ACK@CTServer@@QAEXKG@Z PROC NEAR	; CTServer::SendCT_CASHITEMSALE_ACK, COMDAT
; _this$ = ecx

; 63   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCT_CASHITEMSALE_ACK@CTServer@@QAEXKG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 64   : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T131806[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L131808
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L131808:

; 65   : 	pMSG->SetID(CT_CASHITEMSALE_ACK)
; 66   : 		<< dwIndex
; 67   : 		<< wValue;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _wValue$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwIndex$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 6a 60 00 00	 push	 24682			; 0000606aH
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 68   : 
; 69   : 	Say(pMSG);

  00067	8b 17		 mov	 edx, DWORD PTR [edi]
  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	ff 12		 call	 DWORD PTR [edx]

; 70   : }

  0006e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131809:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T131806[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendCT_CASHITEMSALE_ACK@CTServer@@QAEXKG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131811
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCT_CASHITEMSALE_ACK@CTServer@@QAEXKG@Z ENDP	; CTServer::SendCT_CASHITEMSALE_ACK
PUBLIC	?SendMW_ENTERSVR_REQ@CTServer@@QAEXEKK@Z	; CTServer::SendMW_ENTERSVR_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T131827 DD	0ffffffffH
	DD	FLAT:$L131823
$T131825 DD	019930520H
	DD	01H
	DD	FLAT:$T131827
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_ENTERSVR_REQ@CTServer@@QAEXEKK@Z
_TEXT	SEGMENT
$T131820 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bDBLoad$ = 8						; size = 1
_dwCharID$ = 12						; size = 4
_dwKEY$ = 16						; size = 4
?SendMW_ENTERSVR_REQ@CTServer@@QAEXEKK@Z PROC NEAR	; CTServer::SendMW_ENTERSVR_REQ, COMDAT
; _this$ = ecx

; 130  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_ENTERSVR_REQ@CTServer@@QAEXEKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 131  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T131820[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L131822
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L131822:

; 132  : 
; 133  : 	pMSG->SetID(MW_ENTERSVR_REQ)
; 134  : 		<< bDBLoad
; 135  : 		<< dwCharID
; 136  : 		<< dwKEY;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _bDBLoad$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 07 20 00 00	 push	 8199			; 00002007H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 137  : 
; 138  : 	Say(pMSG);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 139  : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131823:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T131820[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_ENTERSVR_REQ@CTServer@@QAEXEKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131825
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_ENTERSVR_REQ@CTServer@@QAEXEKK@Z ENDP		; CTServer::SendMW_ENTERSVR_REQ
PUBLIC	?SendMW_ENTERSVR_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z ; CTServer::SendMW_ENTERSVR_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T131841 DD	0ffffffffH
	DD	FLAT:$L131837
$T131839 DD	019930520H
	DD	01H
	DD	FLAT:$T131841
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_ENTERSVR_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z
_TEXT	SEGMENT
$T131834 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pBUF$ = 8						; size = 4
?SendMW_ENTERSVR_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z PROC NEAR ; CTServer::SendMW_ENTERSVR_REQ, COMDAT
; _this$ = ecx

; 142  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_ENTERSVR_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 143  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T131834[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L131836
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L131836:

; 144  : 
; 145  : 	pMSG->Copy(&pBUF->m_packet);

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _pBUF$[esp+20]
  0003f	83 c0 04	 add	 eax, 4
  00042	50		 push	 eax
  00043	8b ce		 mov	 ecx, esi
  00045	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0004d	e8 00 00 00 00	 call	 ?Copy@CPacket@@QAEXPAV1@@Z ; CPacket::Copy

; 146  : 	pMSG->SetID(MW_ENTERSVR_REQ);

  00052	68 07 20 00 00	 push	 8199			; 00002007H
  00057	8b ce		 mov	 ecx, esi
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 147  : 
; 148  : 	Say(pMSG);

  0005e	8b 17		 mov	 edx, DWORD PTR [edi]
  00060	56		 push	 esi
  00061	8b cf		 mov	 ecx, edi
  00063	ff 12		 call	 DWORD PTR [edx]

; 149  : }

  00065	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00072	83 c4 10	 add	 esp, 16			; 00000010H
  00075	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131837:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T131834[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_ENTERSVR_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131839
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_ENTERSVR_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z ENDP ; CTServer::SendMW_ENTERSVR_REQ
PUBLIC	?SendMW_RELEASEMAIN_REQ@CTServer@@QAEXKKEGMMM@Z	; CTServer::SendMW_RELEASEMAIN_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T131855 DD	0ffffffffH
	DD	FLAT:$L131851
$T131853 DD	019930520H
	DD	01H
	DD	FLAT:$T131855
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_RELEASEMAIN_REQ@CTServer@@QAEXKKEGMMM@Z
_TEXT	SEGMENT
$T131848 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bChannel$ = 16						; size = 1
_wMapID$ = 20						; size = 2
_fPosX$ = 24						; size = 4
_fPosY$ = 28						; size = 4
_fPosZ$ = 32						; size = 4
?SendMW_RELEASEMAIN_REQ@CTServer@@QAEXKKEGMMM@Z PROC NEAR ; CTServer::SendMW_RELEASEMAIN_REQ, COMDAT
; _this$ = ecx

; 158  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_RELEASEMAIN_REQ@CTServer@@QAEXKKEGMMM@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 159  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T131848[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L131850
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L131850:

; 160  : 
; 161  : 	pMSG->SetID(MW_RELEASEMAIN_REQ)
; 162  : 		<< dwCharID
; 163  : 		<< dwKEY
; 164  : 		<< bChannel
; 165  : 		<< wMapID
; 166  : 		<< fPosX
; 167  : 		<< fPosY
; 168  : 		<< fPosZ;

  0003b	8b 44 24 34	 mov	 eax, DWORD PTR _fPosZ$[esp+20]
  0003f	8b 4c 24 30	 mov	 ecx, DWORD PTR _fPosY$[esp+20]
  00043	8b 54 24 2c	 mov	 edx, DWORD PTR _fPosX$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 2c	 mov	 eax, DWORD PTR _wMapID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 2c	 mov	 ecx, DWORD PTR _bChannel$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 2c	 mov	 edx, DWORD PTR _dwKEY$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 2c	 mov	 eax, DWORD PTR _dwCharID$[esp+36]
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	50		 push	 eax
  0005e	68 16 20 00 00	 push	 8214			; 00002016H
  00063	8b ce		 mov	 ecx, esi
  00065	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+64], -1
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<

; 169  : 
; 170  : 	Say(pMSG);

  000a3	8b 17		 mov	 edx, DWORD PTR [edi]
  000a5	56		 push	 esi
  000a6	8b cf		 mov	 ecx, edi
  000a8	ff 12		 call	 DWORD PTR [edx]

; 171  : }

  000aa	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b7	83 c4 10	 add	 esp, 16			; 00000010H
  000ba	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131851:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T131848[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_RELEASEMAIN_REQ@CTServer@@QAEXKKEGMMM@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131853
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_RELEASEMAIN_REQ@CTServer@@QAEXKKEGMMM@Z ENDP	; CTServer::SendMW_RELEASEMAIN_REQ
PUBLIC	?SendMW_MAPSVRLIST_REQ@CTServer@@QAEXKKEGMMM@Z	; CTServer::SendMW_MAPSVRLIST_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T131869 DD	0ffffffffH
	DD	FLAT:$L131865
$T131867 DD	019930520H
	DD	01H
	DD	FLAT:$T131869
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_MAPSVRLIST_REQ@CTServer@@QAEXKKEGMMM@Z
_TEXT	SEGMENT
$T131862 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bChannel$ = 16						; size = 1
_wMapID$ = 20						; size = 2
_fPosX$ = 24						; size = 4
_fPosY$ = 28						; size = 4
_fPosZ$ = 32						; size = 4
?SendMW_MAPSVRLIST_REQ@CTServer@@QAEXKKEGMMM@Z PROC NEAR ; CTServer::SendMW_MAPSVRLIST_REQ, COMDAT
; _this$ = ecx

; 180  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MAPSVRLIST_REQ@CTServer@@QAEXKKEGMMM@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 181  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T131862[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L131864
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L131864:

; 182  : 
; 183  : 	pMSG->SetID(MW_MAPSVRLIST_REQ)
; 184  : 		<< dwCharID
; 185  : 		<< dwKEY
; 186  : 		<< bChannel
; 187  : 		<< wMapID
; 188  : 		<< fPosX
; 189  : 		<< fPosY
; 190  : 		<< fPosZ;

  0003b	8b 44 24 34	 mov	 eax, DWORD PTR _fPosZ$[esp+20]
  0003f	8b 4c 24 30	 mov	 ecx, DWORD PTR _fPosY$[esp+20]
  00043	8b 54 24 2c	 mov	 edx, DWORD PTR _fPosX$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 2c	 mov	 eax, DWORD PTR _wMapID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 2c	 mov	 ecx, DWORD PTR _bChannel$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 2c	 mov	 edx, DWORD PTR _dwKEY$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 2c	 mov	 eax, DWORD PTR _dwCharID$[esp+36]
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	50		 push	 eax
  0005e	68 12 20 00 00	 push	 8210			; 00002012H
  00063	8b ce		 mov	 ecx, esi
  00065	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+64], -1
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<

; 191  : 
; 192  : 	Say(pMSG);

  000a3	8b 17		 mov	 edx, DWORD PTR [edi]
  000a5	56		 push	 esi
  000a6	8b cf		 mov	 ecx, edi
  000a8	ff 12		 call	 DWORD PTR [edx]

; 193  : }

  000aa	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b7	83 c4 10	 add	 esp, 16			; 00000010H
  000ba	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131865:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T131862[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MAPSVRLIST_REQ@CTServer@@QAEXKKEGMMM@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131867
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MAPSVRLIST_REQ@CTServer@@QAEXKKEGMMM@Z ENDP	; CTServer::SendMW_MAPSVRLIST_REQ
PUBLIC	?SendMW_INVALIDCHAR_REQ@CTServer@@QAEXKKE@Z	; CTServer::SendMW_INVALIDCHAR_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T131883 DD	0ffffffffH
	DD	FLAT:$L131879
$T131881 DD	019930520H
	DD	01H
	DD	FLAT:$T131883
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_INVALIDCHAR_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT
$T131876 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bReleaseMain$ = 16					; size = 1
?SendMW_INVALIDCHAR_REQ@CTServer@@QAEXKKE@Z PROC NEAR	; CTServer::SendMW_INVALIDCHAR_REQ, COMDAT
; _this$ = ecx

; 198  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_INVALIDCHAR_REQ@CTServer@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 199  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T131876[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L131878
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L131878:

; 200  : 
; 201  : 	pMSG->SetID(MW_INVALIDCHAR_REQ)
; 202  : 		<< dwCharID
; 203  : 		<< dwKEY
; 204  : 		<< bReleaseMain;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bReleaseMain$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKEY$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 09 20 00 00	 push	 8201			; 00002009H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 205  : 
; 206  : 	Say(pMSG);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 207  : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131879:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T131876[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_INVALIDCHAR_REQ@CTServer@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131881
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_INVALIDCHAR_REQ@CTServer@@QAEXKKE@Z ENDP	; CTServer::SendMW_INVALIDCHAR_REQ
PUBLIC	?SendMW_CHARDATA_REQ@CTServer@@QAEXKK@Z		; CTServer::SendMW_CHARDATA_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T131897 DD	0ffffffffH
	DD	FLAT:$L131893
$T131895 DD	019930520H
	DD	01H
	DD	FLAT:$T131897
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CHARDATA_REQ@CTServer@@QAEXKK@Z
_TEXT	SEGMENT
$T131890 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendMW_CHARDATA_REQ@CTServer@@QAEXKK@Z PROC NEAR	; CTServer::SendMW_CHARDATA_REQ, COMDAT
; _this$ = ecx

; 211  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHARDATA_REQ@CTServer@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 212  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T131890[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L131892
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L131892:

; 213  : 
; 214  : 	pMSG->SetID(MW_CHARDATA_REQ)
; 215  : 		<< dwCharID
; 216  : 		<< dwKEY;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 03 20 00 00	 push	 8195			; 00002003H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 217  : 
; 218  : 	Say(pMSG);

  00067	8b 17		 mov	 edx, DWORD PTR [edi]
  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	ff 12		 call	 DWORD PTR [edx]

; 219  : }

  0006e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131893:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T131890[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CHARDATA_REQ@CTServer@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131895
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHARDATA_REQ@CTServer@@QAEXKK@Z ENDP		; CTServer::SendMW_CHARDATA_REQ
PUBLIC	?SendMW_CLOSECHAR_REQ@CTServer@@QAEXKK@Z	; CTServer::SendMW_CLOSECHAR_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T131911 DD	0ffffffffH
	DD	FLAT:$L131907
$T131909 DD	019930520H
	DD	01H
	DD	FLAT:$T131911
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CLOSECHAR_REQ@CTServer@@QAEXKK@Z
_TEXT	SEGMENT
$T131904 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendMW_CLOSECHAR_REQ@CTServer@@QAEXKK@Z PROC NEAR	; CTServer::SendMW_CLOSECHAR_REQ, COMDAT
; _this$ = ecx

; 425  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CLOSECHAR_REQ@CTServer@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 426  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T131904[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L131906
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L131906:

; 427  : 
; 428  : 	pMSG->SetID(MW_CLOSECHAR_REQ)
; 429  : 		<< dwCharID
; 430  : 		<< dwKEY;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 0b 20 00 00	 push	 8203			; 0000200bH
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 431  : 
; 432  : 	Say(pMSG);

  00067	8b 17		 mov	 edx, DWORD PTR [edi]
  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	ff 12		 call	 DWORD PTR [edx]

; 433  : }

  0006e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131907:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T131904[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CLOSECHAR_REQ@CTServer@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131909
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CLOSECHAR_REQ@CTServer@@QAEXKK@Z ENDP		; CTServer::SendMW_CLOSECHAR_REQ
PUBLIC	?SendMW_CHECKMAIN_REQ@CTServer@@QAEXKKEGMMM@Z	; CTServer::SendMW_CHECKMAIN_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T131925 DD	0ffffffffH
	DD	FLAT:$L131921
$T131923 DD	019930520H
	DD	01H
	DD	FLAT:$T131925
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CHECKMAIN_REQ@CTServer@@QAEXKKEGMMM@Z
_TEXT	SEGMENT
$T131918 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bChannel$ = 16						; size = 1
_wMapID$ = 20						; size = 2
_fPosX$ = 24						; size = 4
_fPosY$ = 28						; size = 4
_fPosZ$ = 32						; size = 4
?SendMW_CHECKMAIN_REQ@CTServer@@QAEXKKEGMMM@Z PROC NEAR	; CTServer::SendMW_CHECKMAIN_REQ, COMDAT
; _this$ = ecx

; 442  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHECKMAIN_REQ@CTServer@@QAEXKKEGMMM@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 443  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T131918[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L131920
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L131920:

; 444  : 
; 445  : 	pMSG->SetID(MW_CHECKMAIN_REQ)
; 446  : 		<< dwCharID
; 447  : 		<< dwKEY
; 448  : 		<< bChannel
; 449  : 		<< wMapID
; 450  : 		<< fPosX
; 451  : 		<< fPosY
; 452  : 		<< fPosZ;

  0003b	8b 44 24 34	 mov	 eax, DWORD PTR _fPosZ$[esp+20]
  0003f	8b 4c 24 30	 mov	 ecx, DWORD PTR _fPosY$[esp+20]
  00043	8b 54 24 2c	 mov	 edx, DWORD PTR _fPosX$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 2c	 mov	 eax, DWORD PTR _wMapID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 2c	 mov	 ecx, DWORD PTR _bChannel$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 2c	 mov	 edx, DWORD PTR _dwKEY$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 2c	 mov	 eax, DWORD PTR _dwCharID$[esp+36]
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	50		 push	 eax
  0005e	68 c4 20 00 00	 push	 8388			; 000020c4H
  00063	8b ce		 mov	 ecx, esi
  00065	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+64], -1
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<

; 453  : 
; 454  : 	Say(pMSG);

  000a3	8b 17		 mov	 edx, DWORD PTR [edi]
  000a5	56		 push	 esi
  000a6	8b cf		 mov	 ecx, edi
  000a8	ff 12		 call	 DWORD PTR [edx]

; 455  : }

  000aa	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b7	83 c4 10	 add	 esp, 16			; 00000010H
  000ba	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131921:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T131918[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CHECKMAIN_REQ@CTServer@@QAEXKKEGMMM@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131923
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHECKMAIN_REQ@CTServer@@QAEXKKEGMMM@Z ENDP	; CTServer::SendMW_CHECKMAIN_REQ
PUBLIC	?SendMW_DELCHAR_REQ@CTServer@@QAEXKKEE@Z	; CTServer::SendMW_DELCHAR_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T131939 DD	0ffffffffH
	DD	FLAT:$L131935
$T131937 DD	019930520H
	DD	01H
	DD	FLAT:$T131939
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_DELCHAR_REQ@CTServer@@QAEXKKEE@Z
_TEXT	SEGMENT
$T131932 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bLogout$ = 16						; size = 1
_bSave$ = 20						; size = 1
?SendMW_DELCHAR_REQ@CTServer@@QAEXKKEE@Z PROC NEAR	; CTServer::SendMW_DELCHAR_REQ, COMDAT
; _this$ = ecx

; 461  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_DELCHAR_REQ@CTServer@@QAEXKKEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 462  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T131932[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L131934
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L131934:

; 463  : 
; 464  : 	pMSG->SetID(MW_DELCHAR_REQ)
; 465  : 		<< dwCharID
; 466  : 		<< dwKEY
; 467  : 		<< bLogout
; 468  : 		<< bSave;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _bSave$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _bLogout$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKEY$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 0d 20 00 00	 push	 8205			; 0000200dH
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 469  : 
; 470  : 	Say(pMSG);

  0007f	8b 17		 mov	 edx, DWORD PTR [edi]
  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	ff 12		 call	 DWORD PTR [edx]

; 471  : }

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00093	83 c4 10	 add	 esp, 16			; 00000010H
  00096	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131935:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T131932[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_DELCHAR_REQ@CTServer@@QAEXKKEE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131937
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_DELCHAR_REQ@CTServer@@QAEXKKEE@Z ENDP		; CTServer::SendMW_DELCHAR_REQ
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp__InterlockedExchange@8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_szACP$ = -12						; size = 7
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

  00000	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00008	56		 push	 esi
  00009	89 44 24 0c	 mov	 DWORD PTR __$ArrayPad$[esp+16], eax

; 102  : 	UINT nACP = 0;

  0000d	33 f6		 xor	 esi, esi

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetThreadLocale@0

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

  00015	6a 07		 push	 7
  00017	8d 4c 24 08	 lea	 ecx, DWORD PTR _szACP$[esp+20]
  0001b	51		 push	 ecx
  0001c	68 04 10 00 00	 push	 4100			; 00001004H
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocaleInfoA@16
  00028	85 c0		 test	 eax, eax
  0002a	74 21		 je	 SHORT $L131952

; 111  : 	{
; 112  : 		char* pch = szACP;
; 113  : 		while (*pch != '\0')

  0002c	8a 44 24 04	 mov	 al, BYTE PTR _szACP$[esp+16]
  00030	84 c0		 test	 al, al
  00032	8d 4c 24 04	 lea	 ecx, DWORD PTR _szACP$[esp+16]
  00036	74 15		 je	 SHORT $L131952
$L58550:

; 114  : 		{
; 115  : 			nACP *= 10;
; 116  : 			nACP += *pch++ - '0';

  00038	0f be c0	 movsx	 eax, al
  0003b	8d 14 b6	 lea	 edx, DWORD PTR [esi+esi*4]
  0003e	41		 inc	 ecx
  0003f	8d 74 50 d0	 lea	 esi, DWORD PTR [eax+edx*2-48]
  00043	8a 01		 mov	 al, BYTE PTR [ecx]
  00045	84 c0		 test	 al, al
  00047	75 ef		 jne	 SHORT $L58550

; 117  : 		}
; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

  00049	85 f6		 test	 esi, esi
  0004b	75 14		 jne	 SHORT $L131953
$L131952:

; 121  : 		nACP = ::GetACP();

  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetACP@0
  00053	5e		 pop	 esi

; 122  : 
; 123  : 	return nACP;
; 124  : }

  00054	8b 4c 24 08	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+12]
  00058	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	c3		 ret	 0
$L131953:
  00061	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16]
  00065	8b c6		 mov	 eax, esi
  00067	5e		 pop	 esi
  00068	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00070	c3		 ret	 0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
_TEXT	ENDS
PUBLIC	?SendMW_CONLIST_REQ@CTServer@@QAEXKKEGMMM@Z	; CTServer::SendMW_CONLIST_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	SEGMENT
$T131968 DD	0ffffffffH
	DD	FLAT:$L131964
$T131966 DD	019930520H
	DD	01H
	DD	FLAT:$T131968
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CONLIST_REQ@CTServer@@QAEXKKEGMMM@Z
_TEXT	SEGMENT
$T131961 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bChannel$ = 16						; size = 1
_wMapID$ = 20						; size = 2
_fPosX$ = 24						; size = 4
_fPosY$ = 28						; size = 4
_fPosZ$ = 32						; size = 4
?SendMW_CONLIST_REQ@CTServer@@QAEXKKEGMMM@Z PROC NEAR	; CTServer::SendMW_CONLIST_REQ, COMDAT
; _this$ = ecx

; 538  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CONLIST_REQ@CTServer@@QAEXKKEGMMM@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 539  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T131961[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L131963
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L131963:

; 540  : 
; 541  : 	pMSG->SetID(MW_CONLIST_REQ)
; 542  : 		<< dwCharID
; 543  : 		<< dwKEY
; 544  : 		<< bChannel
; 545  : 		<< wMapID
; 546  : 		<< fPosX
; 547  : 		<< fPosY
; 548  : 		<< fPosZ;

  0003b	8b 44 24 34	 mov	 eax, DWORD PTR _fPosZ$[esp+20]
  0003f	8b 4c 24 30	 mov	 ecx, DWORD PTR _fPosY$[esp+20]
  00043	8b 54 24 2c	 mov	 edx, DWORD PTR _fPosX$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 2c	 mov	 eax, DWORD PTR _wMapID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 2c	 mov	 ecx, DWORD PTR _bChannel$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 2c	 mov	 edx, DWORD PTR _dwKEY$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 2c	 mov	 eax, DWORD PTR _dwCharID$[esp+36]
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	50		 push	 eax
  0005e	68 bf 20 00 00	 push	 8383			; 000020bfH
  00063	8b ce		 mov	 ecx, esi
  00065	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+64], -1
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<

; 549  : 
; 550  : 	Say(pMSG);

  000a3	8b 17		 mov	 edx, DWORD PTR [edi]
  000a5	56		 push	 esi
  000a6	8b cf		 mov	 ecx, edi
  000a8	ff 12		 call	 DWORD PTR [edx]

; 551  : }

  000aa	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b7	83 c4 10	 add	 esp, 16			; 00000010H
  000ba	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131964:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T131961[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CONLIST_REQ@CTServer@@QAEXKKEGMMM@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131966
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CONLIST_REQ@CTServer@@QAEXKKEGMMM@Z ENDP	; CTServer::SendMW_CONLIST_REQ
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 128  : 	return( CP_THREAD_ACP );

  00000	b8 03 00 00 00	 mov	 eax, 3

; 129  : }

  00005	c3		 ret	 0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
EXTRN	__imp__GetVersionExA@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_ver$ = -152						; size = 148
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

  00000	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	89 84 24 94 00
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+152], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );
; 139  : 	::GetVersionEx( &ver );

  00012	8d 04 24	 lea	 eax, DWORD PTR _ver$[esp+152]
  00015	50		 push	 eax
  00016	c7 44 24 04 94
	00 00 00	 mov	 DWORD PTR _ver$[esp+156], 148 ; 00000094H
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersionExA@4

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

  00024	83 7c 24 10 02	 cmp	 DWORD PTR _ver$[esp+168], 2
  00029	75 0c		 jne	 SHORT $L58560
  0002b	83 7c 24 04 05	 cmp	 DWORD PTR _ver$[esp+156], 5

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

  00030	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal
  00035	73 05		 jae	 SHORT $L58561
$L58560:

; 144  : 	}
; 145  : 	else
; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

  00037	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L58561:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

  0003c	50		 push	 eax
  0003d	68 00 00 00 00	 push	 OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedExchange@8

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

  00048	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP

; 152  : }

  0004e	8b 8c 24 94 00
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+152]
  00055	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005a	81 c4 98 00 00
	00		 add	 esp, 152		; 00000098H
  00060	c3		 ret	 0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
PUBLIC	?SendMW_TELEPORT_REQ@CTServer@@QAEXKKEGMMME@Z	; CTServer::SendMW_TELEPORT_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	SEGMENT
$T131993 DD	0ffffffffH
	DD	FLAT:$L131989
$T131991 DD	019930520H
	DD	01H
	DD	FLAT:$T131993
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_TELEPORT_REQ@CTServer@@QAEXKKEGMMME@Z
_TEXT	SEGMENT
$T131986 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bChannel$ = 16						; size = 1
_wMapID$ = 20						; size = 2
_fPosX$ = 24						; size = 4
_fPosY$ = 28						; size = 4
_fPosZ$ = 32						; size = 4
_bResult$ = 36						; size = 1
?SendMW_TELEPORT_REQ@CTServer@@QAEXKKEGMMME@Z PROC NEAR	; CTServer::SendMW_TELEPORT_REQ, COMDAT
; _this$ = ecx

; 561  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TELEPORT_REQ@CTServer@@QAEXKKEGMMME@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 562  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T131986[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L131988
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L131988:

; 563  : 
; 564  : 	pMSG->SetID(MW_TELEPORT_REQ)
; 565  : 		<< dwCharID
; 566  : 		<< dwKEY
; 567  : 		<< bChannel
; 568  : 		<< wMapID
; 569  : 		<< fPosX
; 570  : 		<< fPosY
; 571  : 		<< fPosZ
; 572  : 		<< bResult;

  0003b	8b 44 24 38	 mov	 eax, DWORD PTR _bResult$[esp+20]
  0003f	8b 4c 24 34	 mov	 ecx, DWORD PTR _fPosZ$[esp+20]
  00043	8b 54 24 30	 mov	 edx, DWORD PTR _fPosY$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 30	 mov	 eax, DWORD PTR _fPosX$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 30	 mov	 ecx, DWORD PTR _wMapID$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 30	 mov	 edx, DWORD PTR _bChannel$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 30	 mov	 eax, DWORD PTR _dwKEY$[esp+36]
  0005b	51		 push	 ecx
  0005c	8b 4c 24 30	 mov	 ecx, DWORD PTR _dwCharID$[esp+40]
  00060	52		 push	 edx
  00061	50		 push	 eax
  00062	51		 push	 ecx
  00063	68 bd 20 00 00	 push	 8381			; 000020bdH
  00068	8b ce		 mov	 ecx, esi
  0006a	c7 44 24 38 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+68], -1
  00072	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000a1	8b c8		 mov	 ecx, eax
  000a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000a8	8b c8		 mov	 ecx, eax
  000aa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 573  : 
; 574  : 	Say(pMSG);

  000af	8b 17		 mov	 edx, DWORD PTR [edi]
  000b1	56		 push	 esi
  000b2	8b cf		 mov	 ecx, edi
  000b4	ff 12		 call	 DWORD PTR [edx]

; 575  : }

  000b6	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	83 c4 10	 add	 esp, 16			; 00000010H
  000c6	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131989:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T131986[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_TELEPORT_REQ@CTServer@@QAEXKKEGMMME@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131991
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TELEPORT_REQ@CTServer@@QAEXKKEGMMME@Z ENDP	; CTServer::SendMW_TELEPORT_REQ
PUBLIC	?_AtlGetConversionACP@ATL@@YGIXZ		; ATL::_AtlGetConversionACP
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetConversionACP@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetConversionACP, COMDAT

; 158  : 	return( g_pfnGetThreadACP() );

  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
?_AtlGetConversionACP@ATL@@YGIXZ ENDP			; ATL::_AtlGetConversionACP
_TEXT	ENDS
PUBLIC	?SendMW_ROUTE_REQ@CTServer@@QAEXKKEGMMM@Z	; CTServer::SendMW_ROUTE_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	SEGMENT
$T132011 DD	0ffffffffH
	DD	FLAT:$L132007
$T132009 DD	019930520H
	DD	01H
	DD	FLAT:$T132011
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_ROUTE_REQ@CTServer@@QAEXKKEGMMM@Z
_TEXT	SEGMENT
$T132004 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bChannel$ = 16						; size = 1
_wMapID$ = 20						; size = 2
_fPosX$ = 24						; size = 4
_fPosY$ = 28						; size = 4
_fPosZ$ = 32						; size = 4
?SendMW_ROUTE_REQ@CTServer@@QAEXKKEGMMM@Z PROC NEAR	; CTServer::SendMW_ROUTE_REQ, COMDAT
; _this$ = ecx

; 584  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_ROUTE_REQ@CTServer@@QAEXKKEGMMM@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 585  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132004[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132006
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132006:

; 586  : 
; 587  : 	pMSG->SetID(MW_ROUTE_REQ)
; 588  : 		<< dwCharID
; 589  : 		<< dwKEY
; 590  : 		<< bChannel
; 591  : 		<< wMapID
; 592  : 		<< fPosX
; 593  : 		<< fPosY
; 594  : 		<< fPosZ;

  0003b	8b 44 24 34	 mov	 eax, DWORD PTR _fPosZ$[esp+20]
  0003f	8b 4c 24 30	 mov	 ecx, DWORD PTR _fPosY$[esp+20]
  00043	8b 54 24 2c	 mov	 edx, DWORD PTR _fPosX$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 2c	 mov	 eax, DWORD PTR _wMapID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 2c	 mov	 ecx, DWORD PTR _bChannel$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 2c	 mov	 edx, DWORD PTR _dwKEY$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 2c	 mov	 eax, DWORD PTR _dwCharID$[esp+36]
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	50		 push	 eax
  0005e	68 0f 20 00 00	 push	 8207			; 0000200fH
  00063	8b ce		 mov	 ecx, esi
  00065	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+64], -1
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<

; 595  : 
; 596  : 	Say(pMSG);

  000a3	8b 17		 mov	 edx, DWORD PTR [edi]
  000a5	56		 push	 esi
  000a6	8b cf		 mov	 ecx, edi
  000a8	ff 12		 call	 DWORD PTR [edx]

; 597  : }

  000aa	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b7	83 c4 10	 add	 esp, 16			; 00000010H
  000ba	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132007:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132004[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_ROUTE_REQ@CTServer@@QAEXKKEGMMM@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132009
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_ROUTE_REQ@CTServer@@QAEXKKEGMMM@Z ENDP		; CTServer::SendMW_ROUTE_REQ
PUBLIC	?SendMW_ENTERSOLOMAP_REQ@CTServer@@QAEXKKGEK@Z	; CTServer::SendMW_ENTERSOLOMAP_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132025 DD	0ffffffffH
	DD	FLAT:$L132021
$T132023 DD	019930520H
	DD	01H
	DD	FLAT:$T132025
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_ENTERSOLOMAP_REQ@CTServer@@QAEXKKGEK@Z
_TEXT	SEGMENT
$T132018 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_wPartyID$ = 16						; size = 2
_bPartyType$ = 20					; size = 1
_dwChiefID$ = 24					; size = 4
?SendMW_ENTERSOLOMAP_REQ@CTServer@@QAEXKKGEK@Z PROC NEAR ; CTServer::SendMW_ENTERSOLOMAP_REQ, COMDAT
; _this$ = ecx

; 604  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_ENTERSOLOMAP_REQ@CTServer@@QAEXKKGEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 605  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132018[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132020
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132020:

; 606  : 
; 607  : 	pMSG->SetID(MW_ENTERSOLOMAP_REQ)
; 608  : 		<< dwCharID
; 609  : 		<< dwKEY
; 610  : 		<< wPartyID
; 611  : 		<< bPartyType
; 612  : 		<< dwChiefID;

  0003b	8b 44 24 2c	 mov	 eax, DWORD PTR _dwChiefID$[esp+20]
  0003f	8b 4c 24 28	 mov	 ecx, DWORD PTR _bPartyType$[esp+20]
  00043	8b 54 24 24	 mov	 edx, DWORD PTR _wPartyID$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 24	 mov	 eax, DWORD PTR _dwKEY$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwCharID$[esp+28]
  00051	52		 push	 edx
  00052	50		 push	 eax
  00053	51		 push	 ecx
  00054	68 c1 20 00 00	 push	 8385			; 000020c1H
  00059	8b ce		 mov	 ecx, esi
  0005b	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00063	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 613  : 
; 614  : 	Say(pMSG);

  0008b	8b 17		 mov	 edx, DWORD PTR [edi]
  0008d	56		 push	 esi
  0008e	8b cf		 mov	 ecx, edi
  00090	ff 12		 call	 DWORD PTR [edx]

; 615  : }

  00092	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009f	83 c4 10	 add	 esp, 16			; 00000010H
  000a2	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132021:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132018[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_ENTERSOLOMAP_REQ@CTServer@@QAEXKKGEK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132023
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_ENTERSOLOMAP_REQ@CTServer@@QAEXKKGEK@Z ENDP	; CTServer::SendMW_ENTERSOLOMAP_REQ
PUBLIC	?SendMW_CHGPARTYTYPE_REQ@CTServer@@QAEXKKEE@Z	; CTServer::SendMW_CHGPARTYTYPE_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132039 DD	0ffffffffH
	DD	FLAT:$L132035
$T132037 DD	019930520H
	DD	01H
	DD	FLAT:$T132039
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CHGPARTYTYPE_REQ@CTServer@@QAEXKKEE@Z
_TEXT	SEGMENT
$T132032 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bRet$ = 16						; size = 1
_bPartyType$ = 20					; size = 1
?SendMW_CHGPARTYTYPE_REQ@CTServer@@QAEXKKEE@Z PROC NEAR	; CTServer::SendMW_CHGPARTYTYPE_REQ, COMDAT
; _this$ = ecx

; 621  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHGPARTYTYPE_REQ@CTServer@@QAEXKKEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 622  : 	CPacket * pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132032[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132034
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132034:

; 623  : 
; 624  : 	pMSG->SetID(MW_CHGPARTYTYPE_REQ)
; 625  : 		<< dwCharID
; 626  : 		<< dwKEY
; 627  : 		<< bRet
; 628  : 		<< bPartyType;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _bPartyType$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _bRet$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKEY$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 ca 20 00 00	 push	 8394			; 000020caH
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 629  : 
; 630  : 	Say(pMSG);

  0007f	8b 17		 mov	 edx, DWORD PTR [edi]
  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	ff 12		 call	 DWORD PTR [edx]

; 631  : }

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00093	83 c4 10	 add	 esp, 16			; 00000010H
  00096	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132035:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132032[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CHGPARTYTYPE_REQ@CTServer@@QAEXKKEE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132037
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHGPARTYTYPE_REQ@CTServer@@QAEXKKEE@Z ENDP	; CTServer::SendMW_CHGPARTYTYPE_REQ
PUBLIC	?SendMW_PARTYDEL_REQ@CTServer@@QAEXKKKKGGE@Z	; CTServer::SendMW_PARTYDEL_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132053 DD	0ffffffffH
	DD	FLAT:$L132049
$T132051 DD	019930520H
	DD	01H
	DD	FLAT:$T132053
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_PARTYDEL_REQ@CTServer@@QAEXKKKKGGE@Z
_TEXT	SEGMENT
$T132046 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwTargetID$ = 16					; size = 4
_dwChief$ = 20						; size = 4
_wCommander$ = 24					; size = 2
_wPartyID$ = 28						; size = 2
_bKick$ = 32						; size = 1
?SendMW_PARTYDEL_REQ@CTServer@@QAEXKKKKGGE@Z PROC NEAR	; CTServer::SendMW_PARTYDEL_REQ, COMDAT
; _this$ = ecx

; 695  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PARTYDEL_REQ@CTServer@@QAEXKKKKGGE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 696  : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132046[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132048
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132048:

; 697  : 
; 698  : 	pMsg->SetID(MW_PARTYDEL_REQ)
; 699  : 		<< dwID
; 700  : 		<< dwKey
; 701  : 		<< dwTargetID
; 702  : 		<< dwChief
; 703  : 		<< wCommander
; 704  : 		<< wPartyID
; 705  : 		<< bKick;

  0003b	8b 44 24 34	 mov	 eax, DWORD PTR _bKick$[esp+20]
  0003f	8b 4c 24 30	 mov	 ecx, DWORD PTR _wPartyID$[esp+20]
  00043	8b 54 24 2c	 mov	 edx, DWORD PTR _wCommander$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 2c	 mov	 eax, DWORD PTR _dwChief$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwTargetID$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 2c	 mov	 edx, DWORD PTR _dwKey$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 2c	 mov	 eax, DWORD PTR _dwID$[esp+36]
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	50		 push	 eax
  0005e	68 22 20 00 00	 push	 8226			; 00002022H
  00063	8b ce		 mov	 ecx, esi
  00065	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+64], -1
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 706  : 
; 707  : 	Say(pMsg);

  000a3	8b 17		 mov	 edx, DWORD PTR [edi]
  000a5	56		 push	 esi
  000a6	8b cf		 mov	 ecx, edi
  000a8	ff 12		 call	 DWORD PTR [edx]

; 708  : }

  000aa	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b7	83 c4 10	 add	 esp, 16			; 00000010H
  000ba	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132049:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132046[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_PARTYDEL_REQ@CTServer@@QAEXKKKKGGE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132051
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PARTYDEL_REQ@CTServer@@QAEXKKKKGGE@Z ENDP	; CTServer::SendMW_PARTYDEL_REQ
PUBLIC	?SendMW_PARTYMANSTAT_REQ@CTServer@@QAEXKKKEEKKKK@Z ; CTServer::SendMW_PARTYMANSTAT_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132067 DD	0ffffffffH
	DD	FLAT:$L132063
$T132065 DD	019930520H
	DD	01H
	DD	FLAT:$T132067
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_PARTYMANSTAT_REQ@CTServer@@QAEXKKKEEKKKK@Z
_TEXT	SEGMENT
$T132060 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwID$ = 16						; size = 4
_bType$ = 20						; size = 1
_bLevel$ = 24						; size = 1
_dwMaxHP$ = 28						; size = 4
_dwCurHP$ = 32						; size = 4
_dwMaxMP$ = 36						; size = 4
_dwCurMP$ = 40						; size = 4
?SendMW_PARTYMANSTAT_REQ@CTServer@@QAEXKKKEEKKKK@Z PROC NEAR ; CTServer::SendMW_PARTYMANSTAT_REQ, COMDAT
; _this$ = ecx

; 718  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PARTYMANSTAT_REQ@CTServer@@QAEXKKKEEKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 719  : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132060[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132062
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132062:

; 720  : 
; 721  : 	pMsg->SetID(MW_PARTYMANSTAT_REQ)
; 722  : 		<< dwCharID
; 723  : 		<< dwKey
; 724  : 		<< dwID
; 725  : 		<< bType
; 726  : 		<< bLevel
; 727  : 		<< dwMaxHP
; 728  : 		<< dwCurHP
; 729  : 		<< dwMaxMP
; 730  : 		<< dwCurMP;

  0003b	8b 44 24 3c	 mov	 eax, DWORD PTR _dwCurMP$[esp+20]
  0003f	8b 4c 24 38	 mov	 ecx, DWORD PTR _dwMaxMP$[esp+20]
  00043	8b 54 24 34	 mov	 edx, DWORD PTR _dwCurHP$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 34	 mov	 eax, DWORD PTR _dwMaxHP$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 34	 mov	 ecx, DWORD PTR _bLevel$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 34	 mov	 edx, DWORD PTR _bType$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 34	 mov	 eax, DWORD PTR _dwID$[esp+36]
  0005b	51		 push	 ecx
  0005c	8b 4c 24 34	 mov	 ecx, DWORD PTR _dwKey$[esp+40]
  00060	52		 push	 edx
  00061	8b 54 24 34	 mov	 edx, DWORD PTR _dwCharID$[esp+44]
  00065	50		 push	 eax
  00066	51		 push	 ecx
  00067	52		 push	 edx
  00068	68 24 20 00 00	 push	 8228			; 00002024H
  0006d	8b ce		 mov	 ecx, esi
  0006f	c7 44 24 3c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+72], -1
  00077	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007c	8b c8		 mov	 ecx, eax
  0007e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00098	8b c8		 mov	 ecx, eax
  0009a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0009f	8b c8		 mov	 ecx, eax
  000a1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a6	8b c8		 mov	 ecx, eax
  000a8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ad	8b c8		 mov	 ecx, eax
  000af	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b4	8b c8		 mov	 ecx, eax
  000b6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 731  : 
; 732  : 	Say(pMsg);

  000bb	8b 07		 mov	 eax, DWORD PTR [edi]
  000bd	56		 push	 esi
  000be	8b cf		 mov	 ecx, edi
  000c0	ff 10		 call	 DWORD PTR [eax]

; 733  : }

  000c2	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000c6	5f		 pop	 edi
  000c7	5e		 pop	 esi
  000c8	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000cf	83 c4 10	 add	 esp, 16			; 00000010H
  000d2	c2 24 00	 ret	 36			; 00000024H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132063:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132060[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_PARTYMANSTAT_REQ@CTServer@@QAEXKKKEEKKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132065
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PARTYMANSTAT_REQ@CTServer@@QAEXKKKEEKKKK@Z ENDP	; CTServer::SendMW_PARTYMANSTAT_REQ
PUBLIC	?SendMW_LEVELUP_REQ@CTServer@@QAEXKKE@Z		; CTServer::SendMW_LEVELUP_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132081 DD	0ffffffffH
	DD	FLAT:$L132077
$T132079 DD	019930520H
	DD	01H
	DD	FLAT:$T132081
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_LEVELUP_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT
$T132074 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bLevel$ = 16						; size = 1
?SendMW_LEVELUP_REQ@CTServer@@QAEXKKE@Z PROC NEAR	; CTServer::SendMW_LEVELUP_REQ, COMDAT
; _this$ = ecx

; 737  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_LEVELUP_REQ@CTServer@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 738  : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132074[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132076
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132076:

; 739  : 
; 740  : 	pMsg->SetID(MW_LEVELUP_REQ)
; 741  : 		<< dwCharID
; 742  : 		<< dwKey
; 743  : 		<< bLevel;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bLevel$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 26 20 00 00	 push	 8230			; 00002026H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 744  : 
; 745  : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 746  : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132077:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132074[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_LEVELUP_REQ@CTServer@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132079
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_LEVELUP_REQ@CTServer@@QAEXKKE@Z ENDP		; CTServer::SendMW_LEVELUP_REQ
PUBLIC	?SendMW_GUILDDISORGANIZATION_REQ@CTServer@@QAEXKKE@Z ; CTServer::SendMW_GUILDDISORGANIZATION_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132095 DD	0ffffffffH
	DD	FLAT:$L132091
$T132093 DD	019930520H
	DD	01H
	DD	FLAT:$T132095
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDDISORGANIZATION_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT
$T132088 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bDisorg$ = 16						; size = 1
?SendMW_GUILDDISORGANIZATION_REQ@CTServer@@QAEXKKE@Z PROC NEAR ; CTServer::SendMW_GUILDDISORGANIZATION_REQ, COMDAT
; _this$ = ecx

; 805  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDDISORGANIZATION_REQ@CTServer@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 806  : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132088[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132090
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132090:

; 807  : 
; 808  : 	pMsg->SetID(MW_GUILDDISORGANIZATION_REQ)
; 809  : 		<< dwCharID
; 810  : 		<< dwKey
; 811  : 		<< bDisorg;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bDisorg$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 2c 20 00 00	 push	 8236			; 0000202cH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 812  : 
; 813  : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 814  : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132091:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132088[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDDISORGANIZATION_REQ@CTServer@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132093
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDDISORGANIZATION_REQ@CTServer@@QAEXKKE@Z ENDP ; CTServer::SendMW_GUILDDISORGANIZATION_REQ
PUBLIC	??0CAtlException@ATL@@QAE@J@Z			; ATL::CAtlException::CAtlException
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
;	COMDAT ??0CAtlException@ATL@@QAE@J@Z
_TEXT	SEGMENT
_hr$ = 8						; size = 4
??0CAtlException@ATL@@QAE@J@Z PROC NEAR			; ATL::CAtlException::CAtlException, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR _hr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 41   : 	}

  00008	c2 04 00	 ret	 4
??0CAtlException@ATL@@QAE@J@Z ENDP			; ATL::CAtlException::CAtlException
_TEXT	ENDS
PUBLIC	?AtlThrow@ATL@@YGXJ@Z				; ATL::AtlThrow
PUBLIC	__TI1?AVCAtlException@ATL@@
PUBLIC	__CTA1?AVCAtlException@ATL@@
PUBLIC	??_R0?AVCAtlException@ATL@@@8			; ATL::CAtlException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVCAtlException@ATL@@@84
EXTRN	__CxxThrowException@8:NEAR
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
;	COMDAT __TI1?AVCAtlException@ATL@@
xdata$x	SEGMENT
__TI1?AVCAtlException@ATL@@ DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1?AVCAtlException@ATL@@
xdata$x	ENDS
;	COMDAT __CTA1?AVCAtlException@ATL@@
xdata$x	SEGMENT
__CTA1?AVCAtlException@ATL@@ DD 01H
	DD	FLAT:__CT??_R0?AVCAtlException@ATL@@@84
xdata$x	ENDS
;	COMDAT __CT??_R0?AVCAtlException@ATL@@@84
xdata$x	SEGMENT
__CT??_R0?AVCAtlException@ATL@@@84 DD 00H
	DD	FLAT:??_R0?AVCAtlException@ATL@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0?AVCAtlException@ATL@@@8
_DATA	SEGMENT
??_R0?AVCAtlException@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CAtlException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAtlException@ATL@@', 00H
; Function compile flags: /Ogty
_DATA	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T132104 = 8						; size = 4
_hr$ = 8						; size = 4
?AtlThrow@ATL@@YGXJ@Z PROC NEAR				; ATL::AtlThrow, COMDAT

; 62   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );
; 63   : #ifdef _AFX
; 64   : 	if( hr == E_OUTOFMEMORY )
; 65   : 	{
; 66   : 		AfxThrowMemoryException();
; 67   : 	}
; 68   : 	else
; 69   : 	{
; 70   : 		AfxThrowOleException( hr );
; 71   : 	}
; 72   : #else
; 73   : 	throw CAtlException( hr );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _hr$[esp-4]
  00004	68 00 00 00 00	 push	 OFFSET FLAT:__TI1?AVCAtlException@ATL@@
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR $T132104[esp]
  0000d	51		 push	 ecx
  0000e	89 44 24 0c	 mov	 DWORD PTR $T132104[esp+4], eax
  00012	e8 00 00 00 00	 call	 __CxxThrowException@8
$L132111:
$L132110:
  00017	cc		 int	 3
?AtlThrow@ATL@@YGXJ@Z ENDP				; ATL::AtlThrow
_TEXT	ENDS
PUBLIC	?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
EXTRN	__imp__LockResource@4:NEAR
EXTRN	__imp__LoadResource@8:NEAR
EXTRN	__imp__SizeofResource@8:NEAR
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_hResource$ = 12					; size = 4
_id$ = 16						; size = 4
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z PROC NEAR ; ATL::_AtlGetStringResourceImage, COMDAT

; 239  : {

  00000	53		 push	 ebx

; 240  : 	const ATLSTRINGRESOURCEIMAGE* pImage;
; 241  : 	const ATLSTRINGRESOURCEIMAGE* pImageEnd;
; 242  : 	ULONG nResourceSize;
; 243  : 	HGLOBAL hGlobal;
; 244  : 	UINT iIndex;
; 245  : 
; 246  : 	hGlobal = ::LoadResource( hInstance, hResource );

  00001	8b 5c 24 08	 mov	 ebx, DWORD PTR _hInstance$[esp]
  00005	57		 push	 edi
  00006	8b 7c 24 10	 mov	 edi, DWORD PTR _hResource$[esp+4]
  0000a	57		 push	 edi
  0000b	53		 push	 ebx
  0000c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadResource@8

; 247  : 	if( hGlobal == NULL )

  00012	85 c0		 test	 eax, eax
  00014	75 03		 jne	 SHORT $L59408
  00016	5f		 pop	 edi
  00017	5b		 pop	 ebx

; 272  : 	{
; 273  : 		return( NULL );
; 274  : 	}
; 275  : 
; 276  : 	return( pImage );
; 277  : }

  00018	c3		 ret	 0
$L59408:
  00019	56		 push	 esi

; 248  : 	{
; 249  : 		return( NULL );
; 250  : 	}
; 251  : 
; 252  : 	pImage = (const ATLSTRINGRESOURCEIMAGE*)::LockResource( hGlobal );

  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LockResource@4
  00021	8b f0		 mov	 esi, eax

; 253  : 	if( pImage == NULL )

  00023	85 f6		 test	 esi, esi
  00025	75 06		 jne	 SHORT $L59410
$L132117:
  00027	5e		 pop	 esi
  00028	5f		 pop	 edi

; 254  : 	{
; 255  : 		return( NULL );

  00029	33 c0		 xor	 eax, eax
  0002b	5b		 pop	 ebx

; 272  : 	{
; 273  : 		return( NULL );
; 274  : 	}
; 275  : 
; 276  : 	return( pImage );
; 277  : }

  0002c	c3		 ret	 0
$L59410:

; 256  : 	}
; 257  : 
; 258  : 	nResourceSize = ::SizeofResource( hInstance, hResource );

  0002d	57		 push	 edi
  0002e	53		 push	 ebx
  0002f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__SizeofResource@8

; 259  : 	pImageEnd = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+nResourceSize);
; 260  : 	iIndex = id&0x000f;

  00035	8b 4c 24 18	 mov	 ecx, DWORD PTR _id$[esp+8]
  00039	03 c6		 add	 eax, esi
  0003b	83 e1 0f	 and	 ecx, 15			; 0000000fH

; 261  : 
; 262  : 	while( (iIndex > 0) && (pImage < pImageEnd) )

  0003e	76 0e		 jbe	 SHORT $L59414
$L59413:
  00040	3b f0		 cmp	 esi, eax
  00042	73 e3		 jae	 SHORT $L132117

; 263  : 	{
; 264  : 		pImage = (const ATLSTRINGRESOURCEIMAGE*)(LPBYTE( pImage )+(sizeof( ATLSTRINGRESOURCEIMAGE )+(pImage->nLength*sizeof( WCHAR ))));
; 265  : 		iIndex--;

  00044	49		 dec	 ecx
  00045	0f b7 16	 movzx	 edx, WORD PTR [esi]
  00048	8d 74 56 02	 lea	 esi, DWORD PTR [esi+edx*2+2]
  0004c	75 f2		 jne	 SHORT $L59413
$L59414:

; 266  : 	}
; 267  : 	if( pImage >= pImageEnd )

  0004e	3b f0		 cmp	 esi, eax

; 268  : 	{
; 269  : 		return( NULL );

  00050	73 d5		 jae	 SHORT $L132117

; 270  : 	}
; 271  : 	if( pImage->nLength == 0 )

  00052	66 8b 06	 mov	 ax, WORD PTR [esi]
  00055	66 f7 d8	 neg	 ax
  00058	1b c0		 sbb	 eax, eax
  0005a	23 c6		 and	 eax, esi
  0005c	5e		 pop	 esi
  0005d	5f		 pop	 edi
  0005e	5b		 pop	 ebx

; 272  : 	{
; 273  : 		return( NULL );
; 274  : 	}
; 275  : 
; 276  : 	return( pImage );
; 277  : }

  0005f	c3		 ret	 0
?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ENDP ; ATL::_AtlGetStringResourceImage
_TEXT	ENDS
PUBLIC	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ; ATL::AtlGetStringResourceImage
EXTRN	__imp__FindResourceA@12:NEAR
; Function compile flags: /Ogty
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_id$ = 12						; size = 4
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z PROC NEAR ; ATL::AtlGetStringResourceImage, COMDAT

; 280  : {

  00000	56		 push	 esi

; 281  : 	HRSRC hResource;
; 282  : 
; 283  : 	hResource = ::FindResource( hInstance, MAKEINTRESOURCE( ((id>>4)+1) ), RT_STRING );

  00001	8b 74 24 0c	 mov	 esi, DWORD PTR _id$[esp]
  00005	8b c6		 mov	 eax, esi
  00007	c1 e8 04	 shr	 eax, 4
  0000a	57		 push	 edi
  0000b	8b 7c 24 0c	 mov	 edi, DWORD PTR _hInstance$[esp+4]
  0000f	40		 inc	 eax
  00010	0f b7 c8	 movzx	 ecx, ax
  00013	6a 06		 push	 6
  00015	51		 push	 ecx
  00016	57		 push	 edi
  00017	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FindResourceA@12

; 284  : 	if( hResource == NULL )

  0001d	85 c0		 test	 eax, eax
  0001f	75 03		 jne	 SHORT $L59431
  00021	5f		 pop	 edi
  00022	5e		 pop	 esi

; 290  : }

  00023	c3		 ret	 0
$L59431:

; 285  : 	{
; 286  : 		return( NULL );
; 287  : 	}
; 288  : 
; 289  : 	return _AtlGetStringResourceImage( hInstance, hResource, id );

  00024	56		 push	 esi
  00025	50		 push	 eax
  00026	57		 push	 edi
  00027	e8 00 00 00 00	 call	 ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
  0002c	83 c4 0c	 add	 esp, 12			; 0000000cH
  0002f	5f		 pop	 edi
  00030	5e		 pop	 esi

; 290  : }

  00031	c3		 ret	 0
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z ENDP ; ATL::AtlGetStringResourceImage
_TEXT	ENDS
PUBLIC	?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@IG@Z ; ATL::AtlGetStringResourceImage
EXTRN	__imp__FindResourceExA@16:NEAR
; Function compile flags: /Ogty
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_id$ = 12						; size = 4
_wLanguage$ = 16					; size = 2
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@IG@Z PROC NEAR ; ATL::AtlGetStringResourceImage, COMDAT

; 294  : 	HRSRC hResource;
; 295  : 
; 296  : 	hResource = ::FindResourceEx( hInstance, RT_STRING, MAKEINTRESOURCE( ((id>>4)+1) ), wLanguage );

  00000	8b 44 24 0c	 mov	 eax, DWORD PTR _wLanguage$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR _id$[esp]
  00009	8b ce		 mov	 ecx, esi
  0000b	57		 push	 edi
  0000c	8b 7c 24 0c	 mov	 edi, DWORD PTR _hInstance$[esp+4]
  00010	c1 e9 04	 shr	 ecx, 4
  00013	41		 inc	 ecx
  00014	50		 push	 eax
  00015	0f b7 d1	 movzx	 edx, cx
  00018	52		 push	 edx
  00019	6a 06		 push	 6
  0001b	57		 push	 edi
  0001c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FindResourceExA@16

; 297  : 	if( hResource == NULL )

  00022	85 c0		 test	 eax, eax
  00024	75 03		 jne	 SHORT $L59445
  00026	5f		 pop	 edi
  00027	5e		 pop	 esi

; 303  : }

  00028	c3		 ret	 0
$L59445:

; 298  : 	{
; 299  : 		return( NULL );
; 300  : 	}
; 301  : 
; 302  : 	return _AtlGetStringResourceImage( hInstance, hResource, id );

  00029	56		 push	 esi
  0002a	50		 push	 eax
  0002b	57		 push	 edi
  0002c	e8 00 00 00 00	 call	 ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
  00031	83 c4 0c	 add	 esp, 12			; 0000000cH
  00034	5f		 pop	 edi
  00035	5e		 pop	 esi

; 303  : }

  00036	c3		 ret	 0
?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@IG@Z ENDP ; ATL::AtlGetStringResourceImage
_TEXT	ENDS
PUBLIC	?SendMW_GUILDCONTRIBUTION_REQ@CTServer@@QAEXKKEKKKKK@Z ; CTServer::SendMW_GUILDCONTRIBUTION_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	SEGMENT
$T132136 DD	0ffffffffH
	DD	FLAT:$L132132
$T132134 DD	019930520H
	DD	01H
	DD	FLAT:$T132136
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDCONTRIBUTION_REQ@CTServer@@QAEXKKEKKKKK@Z
_TEXT	SEGMENT
$T132129 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bResult$ = 16						; size = 1
_dwExp$ = 20						; size = 4
_dwGold$ = 24						; size = 4
_dwSilver$ = 28						; size = 4
_dwCooper$ = 32						; size = 4
_dwPvPoint$ = 36					; size = 4
?SendMW_GUILDCONTRIBUTION_REQ@CTServer@@QAEXKKEKKKKK@Z PROC NEAR ; CTServer::SendMW_GUILDCONTRIBUTION_REQ, COMDAT
; _this$ = ecx

; 1051 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDCONTRIBUTION_REQ@CTServer@@QAEXKKEKKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1052 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132129[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132131
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132131:

; 1053 : 
; 1054 : 	pMsg->SetID(MW_GUILDCONTRIBUTION_REQ)
; 1055 : 		<< dwCharID
; 1056 : 		<< dwKEY
; 1057 : 		<< bResult
; 1058 : 		<< dwExp
; 1059 : 		<< dwGold
; 1060 : 		<< dwSilver
; 1061 : 		<< dwCooper
; 1062 : 		<< dwPvPoint;

  0003b	8b 44 24 38	 mov	 eax, DWORD PTR _dwPvPoint$[esp+20]
  0003f	8b 4c 24 34	 mov	 ecx, DWORD PTR _dwCooper$[esp+20]
  00043	8b 54 24 30	 mov	 edx, DWORD PTR _dwSilver$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 30	 mov	 eax, DWORD PTR _dwGold$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 30	 mov	 ecx, DWORD PTR _dwExp$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 30	 mov	 edx, DWORD PTR _bResult$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 30	 mov	 eax, DWORD PTR _dwKEY$[esp+36]
  0005b	51		 push	 ecx
  0005c	8b 4c 24 30	 mov	 ecx, DWORD PTR _dwCharID$[esp+40]
  00060	52		 push	 edx
  00061	50		 push	 eax
  00062	51		 push	 ecx
  00063	68 d6 20 00 00	 push	 8406			; 000020d6H
  00068	8b ce		 mov	 ecx, esi
  0006a	c7 44 24 38 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+68], -1
  00072	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a1	8b c8		 mov	 ecx, eax
  000a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a8	8b c8		 mov	 ecx, eax
  000aa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1063 : 
; 1064 : 	Say(pMsg);

  000af	8b 17		 mov	 edx, DWORD PTR [edi]
  000b1	56		 push	 esi
  000b2	8b cf		 mov	 ecx, edi
  000b4	ff 12		 call	 DWORD PTR [edx]

; 1065 : }

  000b6	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	83 c4 10	 add	 esp, 16			; 00000010H
  000c6	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132132:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132129[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDCONTRIBUTION_REQ@CTServer@@QAEXKKEKKKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132134
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDCONTRIBUTION_REQ@CTServer@@QAEXKKEKKKKK@Z ENDP ; CTServer::SendMW_GUILDCONTRIBUTION_REQ
PUBLIC	?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z ; ATL::AtlFindStringResourceInstance
EXTRN	?GetHInstanceAt@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@H@Z:NEAR ; ATL::CAtlBaseModule::GetHInstanceAt
EXTRN	?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A:BYTE	; ATL::_AtlBaseModule
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlcore.h
;	COMDAT ?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT
_nID$ = 8						; size = 4
_wLanguage$ = 12					; size = 2
?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z PROC NEAR ; ATL::AtlFindStringResourceInstance, COMDAT

; 380  : {

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi
  00003	57		 push	 edi

; 381  : 	const ATLSTRINGRESOURCEIMAGE* p = NULL;

  00004	33 ff		 xor	 edi, edi

; 382  : 	HINSTANCE hInst = _AtlBaseModule.GetHInstanceAt(0);

  00006	57		 push	 edi
  00007	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
  0000c	e8 00 00 00 00	 call	 ?GetHInstanceAt@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@H@Z ; ATL::CAtlBaseModule::GetHInstanceAt
  00011	8b f0		 mov	 esi, eax

; 383  : 
; 384  : 	for (int i = 1; hInst != NULL && p == NULL; hInst = _AtlBaseModule.GetHInstanceAt(i++))

  00013	85 f6		 test	 esi, esi
  00015	bd 01 00 00 00	 mov	 ebp, 1
  0001a	74 47		 je	 SHORT $L59538
  0001c	8b 5c 24 14	 mov	 ebx, DWORD PTR _nID$[esp+12]
$L59536:
  00020	85 ff		 test	 edi, edi
  00022	75 3f		 jne	 SHORT $L59538

; 385  : 	{
; 386  : 		p = AtlGetStringResourceImage(hInst, nID, wLanguage);

  00024	8b 44 24 18	 mov	 eax, DWORD PTR _wLanguage$[esp+12]
  00028	8b cb		 mov	 ecx, ebx
  0002a	c1 e9 04	 shr	 ecx, 4
  0002d	41		 inc	 ecx
  0002e	50		 push	 eax
  0002f	0f b7 d1	 movzx	 edx, cx
  00032	52		 push	 edx
  00033	6a 06		 push	 6
  00035	56		 push	 esi
  00036	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FindResourceExA@16
  0003c	85 c0		 test	 eax, eax
  0003e	74 11		 je	 SHORT $L132150
$L132146:
  00040	53		 push	 ebx
  00041	50		 push	 eax
  00042	56		 push	 esi
  00043	e8 00 00 00 00	 call	 ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
  00048	8b f8		 mov	 edi, eax
  0004a	83 c4 0c	 add	 esp, 12			; 0000000cH

; 387  : 		if (p != NULL)

  0004d	85 ff		 test	 edi, edi
  0004f	75 19		 jne	 SHORT $L132148
$L132150:

; 383  : 
; 384  : 	for (int i = 1; hInst != NULL && p == NULL; hInst = _AtlBaseModule.GetHInstanceAt(i++))

  00051	55		 push	 ebp
  00052	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?_AtlBaseModule@ATL@@3VCAtlBaseModule@1@A
  00057	e8 00 00 00 00	 call	 ?GetHInstanceAt@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@H@Z ; ATL::CAtlBaseModule::GetHInstanceAt
  0005c	8b f0		 mov	 esi, eax
  0005e	45		 inc	 ebp
  0005f	85 f6		 test	 esi, esi
  00061	75 bd		 jne	 SHORT $L59536
$L59538:
  00063	5f		 pop	 edi
  00064	5e		 pop	 esi
  00065	5d		 pop	 ebp

; 389  : 	}
; 390  : 
; 391  : 	return NULL;

  00066	33 c0		 xor	 eax, eax
  00068	5b		 pop	 ebx

; 392  : }

  00069	c3		 ret	 0
$L132148:
  0006a	5f		 pop	 edi

; 388  : 			return hInst;

  0006b	8b c6		 mov	 eax, esi
  0006d	5e		 pop	 esi
  0006e	5d		 pop	 ebp
  0006f	5b		 pop	 ebx

; 392  : }

  00070	c3		 ret	 0
?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z ENDP ; ATL::AtlFindStringResourceInstance
_TEXT	ENDS
PUBLIC	?SendMW_GUILDARTICLEADD_REQ@CTServer@@QAEXKKE@Z	; CTServer::SendMW_GUILDARTICLEADD_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	SEGMENT
$T132162 DD	0ffffffffH
	DD	FLAT:$L132158
$T132160 DD	019930520H
	DD	01H
	DD	FLAT:$T132162
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDARTICLEADD_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT
$T132155 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bResult$ = 16						; size = 1
?SendMW_GUILDARTICLEADD_REQ@CTServer@@QAEXKKE@Z PROC NEAR ; CTServer::SendMW_GUILDARTICLEADD_REQ, COMDAT
; _this$ = ecx

; 1094 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDARTICLEADD_REQ@CTServer@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1095 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132155[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132157
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132157:

; 1096 : 
; 1097 : 	pMsg->SetID(MW_GUILDARTICLEADD_REQ)
; 1098 : 		<< dwCharID
; 1099 : 		<< dwKEY
; 1100 : 		<< bResult;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bResult$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKEY$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 da 20 00 00	 push	 8410			; 000020daH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1101 : 
; 1102 : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 1103 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132158:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132155[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDARTICLEADD_REQ@CTServer@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132160
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDARTICLEADD_REQ@CTServer@@QAEXKKE@Z ENDP	; CTServer::SendMW_GUILDARTICLEADD_REQ
PUBLIC	?SendMW_GUILDARTICLEDEL_REQ@CTServer@@QAEXKKE@Z	; CTServer::SendMW_GUILDARTICLEDEL_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132176 DD	0ffffffffH
	DD	FLAT:$L132172
$T132174 DD	019930520H
	DD	01H
	DD	FLAT:$T132176
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDARTICLEDEL_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT
$T132169 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bResult$ = 16						; size = 1
?SendMW_GUILDARTICLEDEL_REQ@CTServer@@QAEXKKE@Z PROC NEAR ; CTServer::SendMW_GUILDARTICLEDEL_REQ, COMDAT
; _this$ = ecx

; 1107 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDARTICLEDEL_REQ@CTServer@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1108 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132169[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132171
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132171:

; 1109 : 
; 1110 : 	pMsg->SetID(MW_GUILDARTICLEDEL_REQ)
; 1111 : 		<< dwCharID
; 1112 : 		<< dwKEY
; 1113 : 		<< bResult;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bResult$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKEY$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 dc 20 00 00	 push	 8412			; 000020dcH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1114 : 
; 1115 : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 1116 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132172:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132169[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDARTICLEDEL_REQ@CTServer@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132174
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDARTICLEDEL_REQ@CTServer@@QAEXKKE@Z ENDP	; CTServer::SendMW_GUILDARTICLEDEL_REQ
PUBLIC	?SendMW_GUILDARTICLEUPDATE_REQ@CTServer@@QAEXKKE@Z ; CTServer::SendMW_GUILDARTICLEUPDATE_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132190 DD	0ffffffffH
	DD	FLAT:$L132186
$T132188 DD	019930520H
	DD	01H
	DD	FLAT:$T132190
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDARTICLEUPDATE_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT
$T132183 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bResult$ = 16						; size = 1
?SendMW_GUILDARTICLEUPDATE_REQ@CTServer@@QAEXKKE@Z PROC NEAR ; CTServer::SendMW_GUILDARTICLEUPDATE_REQ, COMDAT
; _this$ = ecx

; 1120 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDARTICLEUPDATE_REQ@CTServer@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1121 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132183[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132185
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132185:

; 1122 : 
; 1123 : 	pMsg->SetID(MW_GUILDARTICLEUPDATE_REQ)
; 1124 : 		<< dwCharID
; 1125 : 		<< dwKEY
; 1126 : 		<< bResult;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bResult$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKEY$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 e0 20 00 00	 push	 8416			; 000020e0H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1127 : 
; 1128 : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 1129 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132186:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132183[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDARTICLEUPDATE_REQ@CTServer@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132188
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDARTICLEUPDATE_REQ@CTServer@@QAEXKKE@Z ENDP	; CTServer::SendMW_GUILDARTICLEUPDATE_REQ
PUBLIC	?SendMW_GUILDFAME_REQ@CTServer@@QAEXKKEKKK@Z	; CTServer::SendMW_GUILDFAME_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132204 DD	0ffffffffH
	DD	FLAT:$L132200
$T132202 DD	019930520H
	DD	01H
	DD	FLAT:$T132204
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDFAME_REQ@CTServer@@QAEXKKEKKK@Z
_TEXT	SEGMENT
$T132197 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bResult$ = 16						; size = 1
_dwID$ = 20						; size = 4
_dwFame$ = 24						; size = 4
_dwFameColor$ = 28					; size = 4
?SendMW_GUILDFAME_REQ@CTServer@@QAEXKKEKKK@Z PROC NEAR	; CTServer::SendMW_GUILDFAME_REQ, COMDAT
; _this$ = ecx

; 1136 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDFAME_REQ@CTServer@@QAEXKKEKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1137 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132197[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132199
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132199:

; 1138 : 
; 1139 : 	pMsg->SetID(MW_GUILDFAME_REQ)
; 1140 : 		<< dwCharID
; 1141 : 		<< dwKEY
; 1142 : 		<< bResult
; 1143 : 		<< dwID
; 1144 : 		<< dwFame
; 1145 : 		<< dwFameColor;

  0003b	8b 44 24 30	 mov	 eax, DWORD PTR _dwFameColor$[esp+20]
  0003f	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwFame$[esp+20]
  00043	8b 54 24 28	 mov	 edx, DWORD PTR _dwID$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 28	 mov	 eax, DWORD PTR _bResult$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwKEY$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 28	 mov	 edx, DWORD PTR _dwCharID$[esp+32]
  00056	50		 push	 eax
  00057	51		 push	 ecx
  00058	52		 push	 edx
  00059	68 de 20 00 00	 push	 8414			; 000020deH
  0005e	8b ce		 mov	 ecx, esi
  00060	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  00068	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006d	8b c8		 mov	 ecx, eax
  0006f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00074	8b c8		 mov	 ecx, eax
  00076	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1146 : 
; 1147 : 	Say(pMsg);

  00097	8b 07		 mov	 eax, DWORD PTR [edi]
  00099	56		 push	 esi
  0009a	8b cf		 mov	 ecx, edi
  0009c	ff 10		 call	 DWORD PTR [eax]

; 1148 : }

  0009e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000a2	5f		 pop	 edi
  000a3	5e		 pop	 esi
  000a4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ab	83 c4 10	 add	 esp, 16			; 00000010H
  000ae	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132200:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132197[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDFAME_REQ@CTServer@@QAEXKKEKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132202
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDFAME_REQ@CTServer@@QAEXKKEKKK@Z ENDP	; CTServer::SendMW_GUILDFAME_REQ
PUBLIC	?SendMW_GUILDWANTEDADD_REQ@CTServer@@QAEXKKE@Z	; CTServer::SendMW_GUILDWANTEDADD_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132218 DD	0ffffffffH
	DD	FLAT:$L132214
$T132216 DD	019930520H
	DD	01H
	DD	FLAT:$T132218
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDWANTEDADD_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT
$T132211 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bResult$ = 16						; size = 1
?SendMW_GUILDWANTEDADD_REQ@CTServer@@QAEXKKE@Z PROC NEAR ; CTServer::SendMW_GUILDWANTEDADD_REQ, COMDAT
; _this$ = ecx

; 1153 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDWANTEDADD_REQ@CTServer@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1154 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132211[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132213
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132213:

; 1155 : 
; 1156 : 	pMsg->SetID(MW_GUILDWANTEDADD_REQ)
; 1157 : 		<< dwCharID
; 1158 : 		<< dwKey
; 1159 : 		<< bResult;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bResult$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 e2 20 00 00	 push	 8418			; 000020e2H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1160 : 
; 1161 : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 1162 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132214:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132211[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDWANTEDADD_REQ@CTServer@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132216
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDWANTEDADD_REQ@CTServer@@QAEXKKE@Z ENDP	; CTServer::SendMW_GUILDWANTEDADD_REQ
PUBLIC	?SendMW_GUILDWANTEDDEL_REQ@CTServer@@QAEXKKE@Z	; CTServer::SendMW_GUILDWANTEDDEL_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132232 DD	0ffffffffH
	DD	FLAT:$L132228
$T132230 DD	019930520H
	DD	01H
	DD	FLAT:$T132232
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDWANTEDDEL_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT
$T132225 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bResult$ = 16						; size = 1
?SendMW_GUILDWANTEDDEL_REQ@CTServer@@QAEXKKE@Z PROC NEAR ; CTServer::SendMW_GUILDWANTEDDEL_REQ, COMDAT
; _this$ = ecx

; 1166 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDWANTEDDEL_REQ@CTServer@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1167 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132225[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132227
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132227:

; 1168 : 
; 1169 : 	pMsg->SetID(MW_GUILDWANTEDDEL_REQ)
; 1170 : 		<< dwCharID
; 1171 : 		<< dwKey
; 1172 : 		<< bResult;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bResult$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 e4 20 00 00	 push	 8420			; 000020e4H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1173 : 
; 1174 : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 1175 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132228:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132225[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDWANTEDDEL_REQ@CTServer@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132230
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDWANTEDDEL_REQ@CTServer@@QAEXKKE@Z ENDP	; CTServer::SendMW_GUILDWANTEDDEL_REQ
PUBLIC	?SendMW_GUILDVOLUNTEERING_REQ@CTServer@@QAEXKKE@Z ; CTServer::SendMW_GUILDVOLUNTEERING_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132246 DD	0ffffffffH
	DD	FLAT:$L132242
$T132244 DD	019930520H
	DD	01H
	DD	FLAT:$T132246
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDVOLUNTEERING_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT
$T132239 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bResult$ = 16						; size = 1
?SendMW_GUILDVOLUNTEERING_REQ@CTServer@@QAEXKKE@Z PROC NEAR ; CTServer::SendMW_GUILDVOLUNTEERING_REQ, COMDAT
; _this$ = ecx

; 1220 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDVOLUNTEERING_REQ@CTServer@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1221 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132239[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132241
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132241:

; 1222 : 
; 1223 : 	pMsg->SetID(MW_GUILDVOLUNTEERING_REQ)
; 1224 : 		<< dwCharID
; 1225 : 		<< dwKey
; 1226 : 		<< bResult;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bResult$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 e8 20 00 00	 push	 8424			; 000020e8H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1227 : 
; 1228 : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 1229 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132242:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132239[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDVOLUNTEERING_REQ@CTServer@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132244
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDVOLUNTEERING_REQ@CTServer@@QAEXKKE@Z ENDP	; CTServer::SendMW_GUILDVOLUNTEERING_REQ
PUBLIC	?SendMW_GUILDVOLUNTEERINGDEL_REQ@CTServer@@QAEXKKE@Z ; CTServer::SendMW_GUILDVOLUNTEERINGDEL_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132260 DD	0ffffffffH
	DD	FLAT:$L132256
$T132258 DD	019930520H
	DD	01H
	DD	FLAT:$T132260
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDVOLUNTEERINGDEL_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT
$T132253 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bResult$ = 16						; size = 1
?SendMW_GUILDVOLUNTEERINGDEL_REQ@CTServer@@QAEXKKE@Z PROC NEAR ; CTServer::SendMW_GUILDVOLUNTEERINGDEL_REQ, COMDAT
; _this$ = ecx

; 1233 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDVOLUNTEERINGDEL_REQ@CTServer@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1234 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132253[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132255
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132255:

; 1235 : 
; 1236 : 	pMsg->SetID(MW_GUILDVOLUNTEERINGDEL_REQ)
; 1237 : 		<< dwCharID
; 1238 : 		<< dwKey
; 1239 : 		<< bResult;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bResult$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 ea 20 00 00	 push	 8426			; 000020eaH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1240 : 
; 1241 : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 1242 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132256:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132253[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDVOLUNTEERINGDEL_REQ@CTServer@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132258
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDVOLUNTEERINGDEL_REQ@CTServer@@QAEXKKE@Z ENDP ; CTServer::SendMW_GUILDVOLUNTEERINGDEL_REQ
PUBLIC	?SendMW_GUILDVOLUNTEERREPLY_REQ@CTServer@@QAEXKKE@Z ; CTServer::SendMW_GUILDVOLUNTEERREPLY_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132274 DD	0ffffffffH
	DD	FLAT:$L132270
$T132272 DD	019930520H
	DD	01H
	DD	FLAT:$T132274
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDVOLUNTEERREPLY_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT
$T132267 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bResult$ = 16						; size = 1
?SendMW_GUILDVOLUNTEERREPLY_REQ@CTServer@@QAEXKKE@Z PROC NEAR ; CTServer::SendMW_GUILDVOLUNTEERREPLY_REQ, COMDAT
; _this$ = ecx

; 1275 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDVOLUNTEERREPLY_REQ@CTServer@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1276 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132267[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132269
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132269:

; 1277 : 
; 1278 : 	pMsg->SetID(MW_GUILDVOLUNTEERREPLY_REQ)
; 1279 : 		<< dwCharID
; 1280 : 		<< dwKey
; 1281 : 		<< bResult;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bResult$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 ee 20 00 00	 push	 8430			; 000020eeH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1282 : 
; 1283 : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 1284 : 
; 1285 : 
; 1286 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132270:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132267[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDVOLUNTEERREPLY_REQ@CTServer@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132272
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDVOLUNTEERREPLY_REQ@CTServer@@QAEXKKE@Z ENDP ; CTServer::SendMW_GUILDVOLUNTEERREPLY_REQ
PUBLIC	?SendMW_GUILDTACTICSWANTEDADD_REQ@CTServer@@QAEXKKE@Z ; CTServer::SendMW_GUILDTACTICSWANTEDADD_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132288 DD	0ffffffffH
	DD	FLAT:$L132284
$T132286 DD	019930520H
	DD	01H
	DD	FLAT:$T132288
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSWANTEDADD_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT
$T132281 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bResult$ = 16						; size = 1
?SendMW_GUILDTACTICSWANTEDADD_REQ@CTServer@@QAEXKKE@Z PROC NEAR ; CTServer::SendMW_GUILDTACTICSWANTEDADD_REQ, COMDAT
; _this$ = ecx

; 1290 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSWANTEDADD_REQ@CTServer@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1291 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132281[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132283
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132283:

; 1292 : 
; 1293 : 	pMsg->SetID(MW_GUILDTACTICSWANTEDADD_REQ)
; 1294 : 		<< dwCharID
; 1295 : 		<< dwKey
; 1296 : 		<< bResult;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bResult$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 f0 20 00 00	 push	 8432			; 000020f0H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1297 : 
; 1298 : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 1299 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132284:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132281[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSWANTEDADD_REQ@CTServer@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132286
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSWANTEDADD_REQ@CTServer@@QAEXKKE@Z ENDP ; CTServer::SendMW_GUILDTACTICSWANTEDADD_REQ
PUBLIC	?SendMW_GUILDTACTICSWANTEDDEL_REQ@CTServer@@QAEXKKE@Z ; CTServer::SendMW_GUILDTACTICSWANTEDDEL_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132302 DD	0ffffffffH
	DD	FLAT:$L132298
$T132300 DD	019930520H
	DD	01H
	DD	FLAT:$T132302
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSWANTEDDEL_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT
$T132295 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bResult$ = 16						; size = 1
?SendMW_GUILDTACTICSWANTEDDEL_REQ@CTServer@@QAEXKKE@Z PROC NEAR ; CTServer::SendMW_GUILDTACTICSWANTEDDEL_REQ, COMDAT
; _this$ = ecx

; 1303 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSWANTEDDEL_REQ@CTServer@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1304 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132295[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132297
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132297:

; 1305 : 
; 1306 : 	pMsg->SetID(MW_GUILDTACTICSWANTEDDEL_REQ)
; 1307 : 		<< dwCharID
; 1308 : 		<< dwKey
; 1309 : 		<< bResult;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bResult$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 f2 20 00 00	 push	 8434			; 000020f2H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1310 : 
; 1311 : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 1312 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132298:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132295[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSWANTEDDEL_REQ@CTServer@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132300
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSWANTEDDEL_REQ@CTServer@@QAEXKKE@Z ENDP ; CTServer::SendMW_GUILDTACTICSWANTEDDEL_REQ
PUBLIC	?SendMW_GUILDTACTICSVOLUNTEERING_REQ@CTServer@@QAEXKKE@Z ; CTServer::SendMW_GUILDTACTICSVOLUNTEERING_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132316 DD	0ffffffffH
	DD	FLAT:$L132312
$T132314 DD	019930520H
	DD	01H
	DD	FLAT:$T132316
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSVOLUNTEERING_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT
$T132309 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bResult$ = 16						; size = 1
?SendMW_GUILDTACTICSVOLUNTEERING_REQ@CTServer@@QAEXKKE@Z PROC NEAR ; CTServer::SendMW_GUILDTACTICSVOLUNTEERING_REQ, COMDAT
; _this$ = ecx

; 1367 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSVOLUNTEERING_REQ@CTServer@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1368 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132309[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132311
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132311:

; 1369 : 
; 1370 : 	pMsg->SetID(MW_GUILDTACTICSVOLUNTEERING_REQ)
; 1371 : 		<< dwCharID
; 1372 : 		<< dwKey
; 1373 : 		<< bResult;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bResult$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 f6 20 00 00	 push	 8438			; 000020f6H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1374 : 
; 1375 : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 1376 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132312:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132309[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSVOLUNTEERING_REQ@CTServer@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132314
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSVOLUNTEERING_REQ@CTServer@@QAEXKKE@Z ENDP ; CTServer::SendMW_GUILDTACTICSVOLUNTEERING_REQ
PUBLIC	?SendMW_GUILDTACTICSVOLUNTEERINGDEL_REQ@CTServer@@QAEXKKE@Z ; CTServer::SendMW_GUILDTACTICSVOLUNTEERINGDEL_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132330 DD	0ffffffffH
	DD	FLAT:$L132326
$T132328 DD	019930520H
	DD	01H
	DD	FLAT:$T132330
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSVOLUNTEERINGDEL_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT
$T132323 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bResult$ = 16						; size = 1
?SendMW_GUILDTACTICSVOLUNTEERINGDEL_REQ@CTServer@@QAEXKKE@Z PROC NEAR ; CTServer::SendMW_GUILDTACTICSVOLUNTEERINGDEL_REQ, COMDAT
; _this$ = ecx

; 1380 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSVOLUNTEERINGDEL_REQ@CTServer@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1381 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132323[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132325
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132325:

; 1382 : 
; 1383 : 	pMsg->SetID(MW_GUILDTACTICSVOLUNTEERINGDEL_REQ)
; 1384 : 		<< dwCharID
; 1385 : 		<< dwKey
; 1386 : 		<< bResult;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bResult$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 f8 20 00 00	 push	 8440			; 000020f8H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1387 : 
; 1388 : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 1389 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132326:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132323[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSVOLUNTEERINGDEL_REQ@CTServer@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132328
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSVOLUNTEERINGDEL_REQ@CTServer@@QAEXKKE@Z ENDP ; CTServer::SendMW_GUILDTACTICSVOLUNTEERINGDEL_REQ
PUBLIC	?SendMW_GUILDTACTICSKICKOUT_REQ@CTServer@@QAEXKKEKE@Z ; CTServer::SendMW_GUILDTACTICSKICKOUT_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132344 DD	0ffffffffH
	DD	FLAT:$L132340
$T132342 DD	019930520H
	DD	01H
	DD	FLAT:$T132344
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSKICKOUT_REQ@CTServer@@QAEXKKEKE@Z
_TEXT	SEGMENT
$T132337 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bResult$ = 16						; size = 1
_dwTarget$ = 20						; size = 4
_bKick$ = 24						; size = 1
?SendMW_GUILDTACTICSKICKOUT_REQ@CTServer@@QAEXKKEKE@Z PROC NEAR ; CTServer::SendMW_GUILDTACTICSKICKOUT_REQ, COMDAT
; _this$ = ecx

; 1451 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSKICKOUT_REQ@CTServer@@QAEXKKEKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1452 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132337[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132339
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132339:

; 1453 : 
; 1454 : 	pMsg->SetID(MW_GUILDTACTICSKICKOUT_REQ)
; 1455 : 		<< dwCharID
; 1456 : 		<< dwKey
; 1457 : 		<< bResult
; 1458 : 		<< dwTarget
; 1459 : 		<< bKick;

  0003b	8b 44 24 2c	 mov	 eax, DWORD PTR _bKick$[esp+20]
  0003f	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwTarget$[esp+20]
  00043	8b 54 24 24	 mov	 edx, DWORD PTR _bResult$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 24	 mov	 eax, DWORD PTR _dwKey$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwCharID$[esp+28]
  00051	52		 push	 edx
  00052	50		 push	 eax
  00053	51		 push	 ecx
  00054	68 fe 20 00 00	 push	 8446			; 000020feH
  00059	8b ce		 mov	 ecx, esi
  0005b	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00063	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1460 : 
; 1461 : 	Say(pMsg);

  0008b	8b 17		 mov	 edx, DWORD PTR [edi]
  0008d	56		 push	 esi
  0008e	8b cf		 mov	 ecx, edi
  00090	ff 12		 call	 DWORD PTR [edx]

; 1462 : }

  00092	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009f	83 c4 10	 add	 esp, 16			; 00000010H
  000a2	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132340:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132337[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSKICKOUT_REQ@CTServer@@QAEXKKEKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132342
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSKICKOUT_REQ@CTServer@@QAEXKKEKE@Z ENDP ; CTServer::SendMW_GUILDTACTICSKICKOUT_REQ
PUBLIC	?SendMW_TAKEMONMONEY_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z ; CTServer::SendMW_TAKEMONMONEY_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132358 DD	0ffffffffH
	DD	FLAT:$L132354
$T132356 DD	019930520H
	DD	01H
	DD	FLAT:$T132358
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_TAKEMONMONEY_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z
_TEXT	SEGMENT
$T132351 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pBUF$ = 8						; size = 4
?SendMW_TAKEMONMONEY_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z PROC NEAR ; CTServer::SendMW_TAKEMONMONEY_REQ, COMDAT
; _this$ = ecx

; 1578 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TAKEMONMONEY_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1579 : 	CPacket *pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132351[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132353
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132353:

; 1580 : 
; 1581 : 	pMsg->Copy(&(pBUF->m_packet));

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _pBUF$[esp+20]
  0003f	83 c0 04	 add	 eax, 4
  00042	50		 push	 eax
  00043	8b ce		 mov	 ecx, esi
  00045	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0004d	e8 00 00 00 00	 call	 ?Copy@CPacket@@QAEXPAV1@@Z ; CPacket::Copy

; 1582 : 	pMsg->SetID(MW_TAKEMONMONEY_REQ);

  00052	68 44 20 00 00	 push	 8260			; 00002044H
  00057	8b ce		 mov	 ecx, esi
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 1583 : 
; 1584 : 	Say(pMsg);

  0005e	8b 17		 mov	 edx, DWORD PTR [edi]
  00060	56		 push	 esi
  00061	8b cf		 mov	 ecx, edi
  00063	ff 12		 call	 DWORD PTR [edx]

; 1585 : }

  00065	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00072	83 c4 10	 add	 esp, 16			; 00000010H
  00075	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132354:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132351[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_TAKEMONMONEY_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132356
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TAKEMONMONEY_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z ENDP ; CTServer::SendMW_TAKEMONMONEY_REQ
PUBLIC	?SendMW_MONSTERDIE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z ; CTServer::SendMW_MONSTERDIE_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132372 DD	0ffffffffH
	DD	FLAT:$L132368
$T132370 DD	019930520H
	DD	01H
	DD	FLAT:$T132372
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_MONSTERDIE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z
_TEXT	SEGMENT
$T132365 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pBUF$ = 8						; size = 4
?SendMW_MONSTERDIE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z PROC NEAR ; CTServer::SendMW_MONSTERDIE_REQ, COMDAT
; _this$ = ecx

; 1588 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MONSTERDIE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1589 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132365[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132367
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132367:

; 1590 : 
; 1591 : 	pMsg->Copy(&(pBUF->m_packet));

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _pBUF$[esp+20]
  0003f	83 c0 04	 add	 eax, 4
  00042	50		 push	 eax
  00043	8b ce		 mov	 ecx, esi
  00045	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0004d	e8 00 00 00 00	 call	 ?Copy@CPacket@@QAEXPAV1@@Z ; CPacket::Copy

; 1592 : 	pMsg->SetID(MW_MONSTERDIE_REQ);

  00052	68 42 20 00 00	 push	 8258			; 00002042H
  00057	8b ce		 mov	 ecx, esi
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 1593 : 
; 1594 : 	Say(pMsg);

  0005e	8b 17		 mov	 edx, DWORD PTR [edi]
  00060	56		 push	 esi
  00061	8b cf		 mov	 ecx, edi
  00063	ff 12		 call	 DWORD PTR [edx]

; 1595 : }

  00065	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00072	83 c4 10	 add	 esp, 16			; 00000010H
  00075	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132368:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132365[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MONSTERDIE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132370
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MONSTERDIE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z ENDP ; CTServer::SendMW_MONSTERDIE_REQ
PUBLIC	?SendMW_ADDITEM_REQ@CTServer@@QAEXPAVCPacket@@@Z ; CTServer::SendMW_ADDITEM_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132386 DD	0ffffffffH
	DD	FLAT:$L132382
$T132384 DD	019930520H
	DD	01H
	DD	FLAT:$T132386
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_ADDITEM_REQ@CTServer@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT
$T132379 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pPacket$ = 8						; size = 4
?SendMW_ADDITEM_REQ@CTServer@@QAEXPAVCPacket@@@Z PROC NEAR ; CTServer::SendMW_ADDITEM_REQ, COMDAT
; _this$ = ecx

; 1597 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_ADDITEM_REQ@CTServer@@QAEXPAVCPacket@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1598 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132379[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132381
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132381:

; 1599 : 
; 1600 : 	pMsg->Copy(pPacket);

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _pPacket$[esp+20]
  0003f	50		 push	 eax
  00040	8b ce		 mov	 ecx, esi
  00042	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0004a	e8 00 00 00 00	 call	 ?Copy@CPacket@@QAEXPAV1@@Z ; CPacket::Copy

; 1601 : 	pMsg->SetID(MW_ADDITEM_REQ);

  0004f	68 46 20 00 00	 push	 8262			; 00002046H
  00054	8b ce		 mov	 ecx, esi
  00056	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 1602 : 
; 1603 : 	Say(pMsg);

  0005b	8b 17		 mov	 edx, DWORD PTR [edi]
  0005d	56		 push	 esi
  0005e	8b cf		 mov	 ecx, edi
  00060	ff 12		 call	 DWORD PTR [edx]

; 1604 : }

  00062	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0006f	83 c4 10	 add	 esp, 16			; 00000010H
  00072	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132382:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132379[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_ADDITEM_REQ@CTServer@@QAEXPAVCPacket@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132384
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_ADDITEM_REQ@CTServer@@QAEXPAVCPacket@@@Z ENDP	; CTServer::SendMW_ADDITEM_REQ
PUBLIC	?SendMW_PARTYORDERTAKEITEM_REQ@CTServer@@QAEXKKEEGKGPAUtagTITEM@@@Z ; CTServer::SendMW_PARTYORDERTAKEITEM_REQ
EXTRN	?WrapItem@CTServer@@QAEXPAVCPacket@@PAUtagTITEM@@@Z:NEAR ; CTServer::WrapItem
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132400 DD	0ffffffffH
	DD	FLAT:$L132396
$T132398 DD	019930520H
	DD	01H
	DD	FLAT:$T132400
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_PARTYORDERTAKEITEM_REQ@CTServer@@QAEXKKEEGKGPAUtagTITEM@@@Z
_TEXT	SEGMENT
$T132393 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bServerID$ = 16					; size = 1
_bChannel$ = 20						; size = 1
_wMapID$ = 24						; size = 2
_dwMonID$ = 28						; size = 4
_wTempMonID$ = 32					; size = 2
_pITEM$ = 36						; size = 4
?SendMW_PARTYORDERTAKEITEM_REQ@CTServer@@QAEXKKEEGKGPAUtagTITEM@@@Z PROC NEAR ; CTServer::SendMW_PARTYORDERTAKEITEM_REQ, COMDAT
; _this$ = ecx

; 1613 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PARTYORDERTAKEITEM_REQ@CTServer@@QAEXKKEEGKGPAUtagTITEM@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1614 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132393[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132395
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132395:

; 1615 : 
; 1616 : 	pMsg->SetID(MW_PARTYORDERTAKEITEM_REQ)
; 1617 : 		<< dwCharID
; 1618 : 		<< dwKEY
; 1619 : 		<< bServerID
; 1620 : 		<< bChannel
; 1621 : 		<< wMapID
; 1622 : 		<< dwMonID
; 1623 : 		<< wTempMonID;  

  0003b	8b 44 24 34	 mov	 eax, DWORD PTR _wTempMonID$[esp+20]
  0003f	8b 4c 24 30	 mov	 ecx, DWORD PTR _dwMonID$[esp+20]
  00043	8b 54 24 2c	 mov	 edx, DWORD PTR _wMapID$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 2c	 mov	 eax, DWORD PTR _bChannel$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 2c	 mov	 ecx, DWORD PTR _bServerID$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 2c	 mov	 edx, DWORD PTR _dwKEY$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 2c	 mov	 eax, DWORD PTR _dwCharID$[esp+36]
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	50		 push	 eax
  0005e	68 48 20 00 00	 push	 8264			; 00002048H
  00063	8b ce		 mov	 ecx, esi
  00065	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+64], -1
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1624 : 
; 1625 : 
; 1626 : 	WrapItem(pMsg, pITEM);

  000a3	8b 4c 24 38	 mov	 ecx, DWORD PTR _pITEM$[esp+20]
  000a7	51		 push	 ecx
  000a8	56		 push	 esi
  000a9	8b cf		 mov	 ecx, edi
  000ab	e8 00 00 00 00	 call	 ?WrapItem@CTServer@@QAEXPAVCPacket@@PAUtagTITEM@@@Z ; CTServer::WrapItem

; 1627 : 
; 1628 : 	Say(pMsg);

  000b0	8b 17		 mov	 edx, DWORD PTR [edi]
  000b2	56		 push	 esi
  000b3	8b cf		 mov	 ecx, edi
  000b5	ff 12		 call	 DWORD PTR [edx]

; 1629 : }

  000b7	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000bb	5f		 pop	 edi
  000bc	5e		 pop	 esi
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c4	83 c4 10	 add	 esp, 16			; 00000010H
  000c7	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132396:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132393[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_PARTYORDERTAKEITEM_REQ@CTServer@@QAEXKKEEGKGPAUtagTITEM@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132398
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PARTYORDERTAKEITEM_REQ@CTServer@@QAEXKKEEGKGPAUtagTITEM@@@Z ENDP ; CTServer::SendMW_PARTYORDERTAKEITEM_REQ
PUBLIC	?SendMW_FRIENDERASE_REQ@CTServer@@QAEXKKEK@Z	; CTServer::SendMW_FRIENDERASE_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132414 DD	0ffffffffH
	DD	FLAT:$L132410
$T132412 DD	019930520H
	DD	01H
	DD	FLAT:$T132414
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_FRIENDERASE_REQ@CTServer@@QAEXKKEK@Z
_TEXT	SEGMENT
$T132407 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bRet$ = 16						; size = 1
_dwTarget$ = 20						; size = 4
?SendMW_FRIENDERASE_REQ@CTServer@@QAEXKKEK@Z PROC NEAR	; CTServer::SendMW_FRIENDERASE_REQ, COMDAT
; _this$ = ecx

; 1741 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FRIENDERASE_REQ@CTServer@@QAEXKKEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1742 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132407[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132409
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132409:

; 1743 : 	pMsg->SetID(MW_FRIENDERASE_REQ)
; 1744 : 		<< dwCharID
; 1745 : 		<< dwKey
; 1746 : 		<< bRet
; 1747 : 		<< dwTarget;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _dwTarget$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _bRet$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKey$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 54 20 00 00	 push	 8276			; 00002054H
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1748 : 
; 1749 : 	Say(pMsg);

  0007f	8b 17		 mov	 edx, DWORD PTR [edi]
  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	ff 12		 call	 DWORD PTR [edx]

; 1750 : }

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00093	83 c4 10	 add	 esp, 16			; 00000010H
  00096	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132410:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132407[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_FRIENDERASE_REQ@CTServer@@QAEXKKEK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132412
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FRIENDERASE_REQ@CTServer@@QAEXKKEK@Z ENDP	; CTServer::SendMW_FRIENDERASE_REQ
PUBLIC	?SendMW_CHGPARTYCHIEF_REQ@CTServer@@QAEXKKE@Z	; CTServer::SendMW_CHGPARTYCHIEF_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132428 DD	0ffffffffH
	DD	FLAT:$L132424
$T132426 DD	019930520H
	DD	01H
	DD	FLAT:$T132428
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CHGPARTYCHIEF_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT
$T132421 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bRET$ = 16						; size = 1
?SendMW_CHGPARTYCHIEF_REQ@CTServer@@QAEXKKE@Z PROC NEAR	; CTServer::SendMW_CHGPARTYCHIEF_REQ, COMDAT
; _this$ = ecx

; 1754 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHGPARTYCHIEF_REQ@CTServer@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1755 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132421[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132423
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132423:

; 1756 : 	pMsg->SetID(MW_CHGPARTYCHIEF_REQ)
; 1757 : 		<< dwCharID
; 1758 : 		<< dwKey
; 1759 : 		<< bRET;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bRET$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 a2 20 00 00	 push	 8354			; 000020a2H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1760 : 
; 1761 : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 1762 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132424:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132421[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CHGPARTYCHIEF_REQ@CTServer@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132426
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHGPARTYCHIEF_REQ@CTServer@@QAEXKKE@Z ENDP	; CTServer::SendMW_CHGPARTYCHIEF_REQ
PUBLIC	?SendMW_PARTYATTR_REQ@CTServer@@QAEXKKGEKG@Z	; CTServer::SendMW_PARTYATTR_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132442 DD	0ffffffffH
	DD	FLAT:$L132438
$T132440 DD	019930520H
	DD	01H
	DD	FLAT:$T132442
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_PARTYATTR_REQ@CTServer@@QAEXKKGEKG@Z
_TEXT	SEGMENT
$T132435 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wPartyID$ = 16						; size = 2
_bPartyType$ = 20					; size = 1
_dwPartyChiefID$ = 24					; size = 4
_wCommander$ = 28					; size = 2
?SendMW_PARTYATTR_REQ@CTServer@@QAEXKKGEKG@Z PROC NEAR	; CTServer::SendMW_PARTYATTR_REQ, COMDAT
; _this$ = ecx

; 1769 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PARTYATTR_REQ@CTServer@@QAEXKKGEKG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1770 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132435[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132437
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132437:

; 1771 : 	pMsg->SetID(MW_PARTYATTR_REQ)
; 1772 : 		<< dwCharID
; 1773 : 		<< dwKey
; 1774 : 		<< wPartyID
; 1775 : 		<< bPartyType
; 1776 : 		<< dwPartyChiefID
; 1777 : 		<< wCommander;

  0003b	8b 44 24 30	 mov	 eax, DWORD PTR _wCommander$[esp+20]
  0003f	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwPartyChiefID$[esp+20]
  00043	8b 54 24 28	 mov	 edx, DWORD PTR _bPartyType$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 28	 mov	 eax, DWORD PTR _wPartyID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwKey$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 28	 mov	 edx, DWORD PTR _dwCharID$[esp+32]
  00056	50		 push	 eax
  00057	51		 push	 ecx
  00058	52		 push	 edx
  00059	68 4a 20 00 00	 push	 8266			; 0000204aH
  0005e	8b ce		 mov	 ecx, esi
  00060	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  00068	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006d	8b c8		 mov	 ecx, eax
  0006f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00074	8b c8		 mov	 ecx, eax
  00076	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1778 : 
; 1779 : 	Say(pMsg);

  00097	8b 07		 mov	 eax, DWORD PTR [edi]
  00099	56		 push	 esi
  0009a	8b cf		 mov	 ecx, edi
  0009c	ff 10		 call	 DWORD PTR [eax]

; 1780 : }

  0009e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000a2	5f		 pop	 edi
  000a3	5e		 pop	 esi
  000a4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ab	83 c4 10	 add	 esp, 16			; 00000010H
  000ae	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132438:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132435[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_PARTYATTR_REQ@CTServer@@QAEXKKGEKG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132440
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PARTYATTR_REQ@CTServer@@QAEXKKGEKG@Z ENDP	; CTServer::SendMW_PARTYATTR_REQ
PUBLIC	?SendMW_CHGSQUADCHIEF_REQ@CTServer@@QAEXKKGK@Z	; CTServer::SendMW_CHGSQUADCHIEF_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132456 DD	0ffffffffH
	DD	FLAT:$L132452
$T132454 DD	019930520H
	DD	01H
	DD	FLAT:$T132456
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CHGSQUADCHIEF_REQ@CTServer@@QAEXKKGK@Z
_TEXT	SEGMENT
$T132449 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wSquadID$ = 16						; size = 2
_dwChiefID$ = 20					; size = 4
?SendMW_CHGSQUADCHIEF_REQ@CTServer@@QAEXKKGK@Z PROC NEAR ; CTServer::SendMW_CHGSQUADCHIEF_REQ, COMDAT
; _this$ = ecx

; 1785 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHGSQUADCHIEF_REQ@CTServer@@QAEXKKGK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1786 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132449[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132451
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132451:

; 1787 : 	pMsg->SetID(MW_CHGSQUADCHIEF_REQ)
; 1788 : 		<< dwCharID
; 1789 : 		<< dwKey
; 1790 : 		<< wSquadID
; 1791 : 		<< dwChiefID;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _dwChiefID$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _wSquadID$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKey$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 a6 20 00 00	 push	 8358			; 000020a6H
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1792 : 
; 1793 : 	Say(pMsg);

  0007f	8b 17		 mov	 edx, DWORD PTR [edi]
  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	ff 12		 call	 DWORD PTR [edx]

; 1794 : }

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00093	83 c4 10	 add	 esp, 16			; 00000010H
  00096	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132452:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132449[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CHGSQUADCHIEF_REQ@CTServer@@QAEXKKGK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132454
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHGSQUADCHIEF_REQ@CTServer@@QAEXKKGK@Z ENDP	; CTServer::SendMW_CHGSQUADCHIEF_REQ
PUBLIC	?SendMW_ADDITEMRESULT_REQ@CTServer@@QAEXKKEGKEE@Z ; CTServer::SendMW_ADDITEMRESULT_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132470 DD	0ffffffffH
	DD	FLAT:$L132466
$T132468 DD	019930520H
	DD	01H
	DD	FLAT:$T132470
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_ADDITEMRESULT_REQ@CTServer@@QAEXKKEGKEE@Z
_TEXT	SEGMENT
$T132463 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bChannel$ = 16						; size = 1
_wMapID$ = 20						; size = 2
_dwMonID$ = 24						; size = 4
_bItemID$ = 28						; size = 1
_bResult$ = 32						; size = 1
?SendMW_ADDITEMRESULT_REQ@CTServer@@QAEXKKEGKEE@Z PROC NEAR ; CTServer::SendMW_ADDITEMRESULT_REQ, COMDAT
; _this$ = ecx

; 1803 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_ADDITEMRESULT_REQ@CTServer@@QAEXKKEGKEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1804 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132463[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132465
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132465:

; 1805 : 	pMsg->SetID(MW_ADDITEMRESULT_REQ)
; 1806 : 		<< dwCharID
; 1807 : 		<< dwKey
; 1808 : 		<< bChannel
; 1809 : 		<< wMapID
; 1810 : 		<< dwMonID
; 1811 : 		<< bItemID
; 1812 : 		<< bResult;

  0003b	8b 44 24 34	 mov	 eax, DWORD PTR _bResult$[esp+20]
  0003f	8b 4c 24 30	 mov	 ecx, DWORD PTR _bItemID$[esp+20]
  00043	8b 54 24 2c	 mov	 edx, DWORD PTR _dwMonID$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 2c	 mov	 eax, DWORD PTR _wMapID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 2c	 mov	 ecx, DWORD PTR _bChannel$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 2c	 mov	 edx, DWORD PTR _dwKey$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 2c	 mov	 eax, DWORD PTR _dwCharID$[esp+36]
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	50		 push	 eax
  0005e	68 61 20 00 00	 push	 8289			; 00002061H
  00063	8b ce		 mov	 ecx, esi
  00065	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+64], -1
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1813 : 
; 1814 : 	Say(pMsg);

  000a3	8b 17		 mov	 edx, DWORD PTR [edi]
  000a5	56		 push	 esi
  000a6	8b cf		 mov	 ecx, edi
  000a8	ff 12		 call	 DWORD PTR [edx]

; 1815 : }

  000aa	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b7	83 c4 10	 add	 esp, 16			; 00000010H
  000ba	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132466:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132463[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_ADDITEMRESULT_REQ@CTServer@@QAEXKKEGKEE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132468
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_ADDITEMRESULT_REQ@CTServer@@QAEXKKEGKEE@Z ENDP	; CTServer::SendMW_ADDITEMRESULT_REQ
PUBLIC	?SendMW_CHARSTATINFO_REQ@CTServer@@QAEXPAVCPacket@@@Z ; CTServer::SendMW_CHARSTATINFO_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132484 DD	0ffffffffH
	DD	FLAT:$L132480
$T132482 DD	019930520H
	DD	01H
	DD	FLAT:$T132484
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CHARSTATINFO_REQ@CTServer@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT
$T132477 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pPacket$ = 8						; size = 4
?SendMW_CHARSTATINFO_REQ@CTServer@@QAEXPAVCPacket@@@Z PROC NEAR ; CTServer::SendMW_CHARSTATINFO_REQ, COMDAT
; _this$ = ecx

; 1817 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHARSTATINFO_REQ@CTServer@@QAEXPAVCPacket@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1818 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132477[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132479
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132479:

; 1819 : 	pMsg->Copy(pPacket);

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _pPacket$[esp+20]
  0003f	50		 push	 eax
  00040	8b ce		 mov	 ecx, esi
  00042	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0004a	e8 00 00 00 00	 call	 ?Copy@CPacket@@QAEXPAV1@@Z ; CPacket::Copy

; 1820 : 	pMsg->SetID(MW_CHARSTATINFO_REQ);

  0004f	68 63 20 00 00	 push	 8291			; 00002063H
  00054	8b ce		 mov	 ecx, esi
  00056	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 1821 : 
; 1822 : 	Say(pMsg);

  0005b	8b 17		 mov	 edx, DWORD PTR [edi]
  0005d	56		 push	 esi
  0005e	8b cf		 mov	 ecx, edi
  00060	ff 12		 call	 DWORD PTR [edx]

; 1823 : }

  00062	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0006f	83 c4 10	 add	 esp, 16			; 00000010H
  00072	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132480:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132477[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CHARSTATINFO_REQ@CTServer@@QAEXPAVCPacket@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132482
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHARSTATINFO_REQ@CTServer@@QAEXPAVCPacket@@@Z ENDP ; CTServer::SendMW_CHARSTATINFO_REQ
PUBLIC	?SendMW_CHARSTATINFOANS_REQ@CTServer@@QAEXKK@Z	; CTServer::SendMW_CHARSTATINFOANS_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132498 DD	0ffffffffH
	DD	FLAT:$L132494
$T132496 DD	019930520H
	DD	01H
	DD	FLAT:$T132498
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CHARSTATINFOANS_REQ@CTServer@@QAEXKK@Z
_TEXT	SEGMENT
$T132491 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwReqCharID$ = 8					; size = 4
_dwCharID$ = 12						; size = 4
?SendMW_CHARSTATINFOANS_REQ@CTServer@@QAEXKK@Z PROC NEAR ; CTServer::SendMW_CHARSTATINFOANS_REQ, COMDAT
; _this$ = ecx

; 1825 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHARSTATINFOANS_REQ@CTServer@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1826 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132491[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132493
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132493:

; 1827 : 	pMsg->SetID(MW_CHARSTATINFOANS_REQ)
; 1828 : 		<< dwReqCharID
; 1829 : 		<< dwCharID;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwReqCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 65 20 00 00	 push	 8293			; 00002065H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1830 : 
; 1831 : 	Say(pMsg);

  00067	8b 17		 mov	 edx, DWORD PTR [edi]
  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	ff 12		 call	 DWORD PTR [edx]

; 1832 : }

  0006e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132494:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132491[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CHARSTATINFOANS_REQ@CTServer@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132496
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHARSTATINFOANS_REQ@CTServer@@QAEXKK@Z ENDP	; CTServer::SendMW_CHARSTATINFOANS_REQ
PUBLIC	?SendMW_LOCALENABLE_REQ@CTServer@@QAEXEKKEK@Z	; CTServer::SendMW_LOCALENABLE_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132512 DD	0ffffffffH
	DD	FLAT:$L132508
$T132510 DD	019930520H
	DD	01H
	DD	FLAT:$T132512
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_LOCALENABLE_REQ@CTServer@@QAEXEKKEK@Z
_TEXT	SEGMENT
$T132505 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bStatus$ = 8						; size = 1
_dwSecond$ = 12						; size = 4
_dwLocalStart$ = 16					; size = 4
_bCastleDay$ = 20					; size = 1
_dwCastleStart$ = 24					; size = 4
?SendMW_LOCALENABLE_REQ@CTServer@@QAEXEKKEK@Z PROC NEAR	; CTServer::SendMW_LOCALENABLE_REQ, COMDAT
; _this$ = ecx

; 1838 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_LOCALENABLE_REQ@CTServer@@QAEXEKKEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1839 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132505[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132507
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132507:

; 1840 : 	pMsg->SetID(MW_LOCALENABLE_REQ)
; 1841 : 		<< bStatus
; 1842 : 		<< dwSecond
; 1843 : 		<< dwLocalStart
; 1844 : 		<< bCastleDay
; 1845 : 		<< dwCastleStart;

  0003b	8b 44 24 2c	 mov	 eax, DWORD PTR _dwCastleStart$[esp+20]
  0003f	8b 4c 24 28	 mov	 ecx, DWORD PTR _bCastleDay$[esp+20]
  00043	8b 54 24 24	 mov	 edx, DWORD PTR _dwLocalStart$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 24	 mov	 eax, DWORD PTR _dwSecond$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 24	 mov	 ecx, DWORD PTR _bStatus$[esp+28]
  00051	52		 push	 edx
  00052	50		 push	 eax
  00053	51		 push	 ecx
  00054	68 67 20 00 00	 push	 8295			; 00002067H
  00059	8b ce		 mov	 ecx, esi
  0005b	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00063	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1846 : 
; 1847 : 	Say(pMsg);

  0008b	8b 17		 mov	 edx, DWORD PTR [edi]
  0008d	56		 push	 esi
  0008e	8b cf		 mov	 ecx, edi
  00090	ff 12		 call	 DWORD PTR [edx]

; 1848 : }

  00092	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009f	83 c4 10	 add	 esp, 16			; 00000010H
  000a2	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132508:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132505[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_LOCALENABLE_REQ@CTServer@@QAEXEKKEK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132510
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_LOCALENABLE_REQ@CTServer@@QAEXEKKEK@Z ENDP	; CTServer::SendMW_LOCALENABLE_REQ
PUBLIC	?SendMW_CHGCORPSCOMMANDER_REQ@CTServer@@QAEXKKE@Z ; CTServer::SendMW_CHGCORPSCOMMANDER_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132526 DD	0ffffffffH
	DD	FLAT:$L132522
$T132524 DD	019930520H
	DD	01H
	DD	FLAT:$T132526
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CHGCORPSCOMMANDER_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT
$T132519 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bRET$ = 16						; size = 1
?SendMW_CHGCORPSCOMMANDER_REQ@CTServer@@QAEXKKE@Z PROC NEAR ; CTServer::SendMW_CHGCORPSCOMMANDER_REQ, COMDAT
; _this$ = ecx

; 1852 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHGCORPSCOMMANDER_REQ@CTServer@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1853 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132519[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132521
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132521:

; 1854 : 	pMsg->SetID(MW_CHGCORPSCOMMANDER_REQ)
; 1855 : 		<< dwCharID
; 1856 : 		<< dwKey
; 1857 : 		<< bRET;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bRET$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 a4 20 00 00	 push	 8356			; 000020a4H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1858 : 
; 1859 : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 1860 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132522:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132519[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CHGCORPSCOMMANDER_REQ@CTServer@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132524
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHGCORPSCOMMANDER_REQ@CTServer@@QAEXKKE@Z ENDP	; CTServer::SendMW_CHGCORPSCOMMANDER_REQ
PUBLIC	?SendMW_DELSQUAD_REQ@CTServer@@QAEXKKG@Z	; CTServer::SendMW_DELSQUAD_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132540 DD	0ffffffffH
	DD	FLAT:$L132536
$T132538 DD	019930520H
	DD	01H
	DD	FLAT:$T132540
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_DELSQUAD_REQ@CTServer@@QAEXKKG@Z
_TEXT	SEGMENT
$T132533 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wSquad$ = 16						; size = 2
?SendMW_DELSQUAD_REQ@CTServer@@QAEXKKG@Z PROC NEAR	; CTServer::SendMW_DELSQUAD_REQ, COMDAT
; _this$ = ecx

; 1918 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_DELSQUAD_REQ@CTServer@@QAEXKKG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1919 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132533[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132535
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132535:

; 1920 : 	pMsg->SetID(MW_DELSQUAD_REQ)
; 1921 : 		<< dwCharID
; 1922 : 		<< dwKey
; 1923 : 		<< wSquad;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _wSquad$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 71 20 00 00	 push	 8305			; 00002071H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1924 : 
; 1925 : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 1926 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132536:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132533[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_DELSQUAD_REQ@CTServer@@QAEXKKG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132538
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_DELSQUAD_REQ@CTServer@@QAEXKKG@Z ENDP		; CTServer::SendMW_DELSQUAD_REQ
PUBLIC	?SendMW_CORPSJOIN_REQ@CTServer@@QAEXKKGG@Z	; CTServer::SendMW_CORPSJOIN_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132554 DD	0ffffffffH
	DD	FLAT:$L132550
$T132552 DD	019930520H
	DD	01H
	DD	FLAT:$T132554
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CORPSJOIN_REQ@CTServer@@QAEXKKGG@Z
_TEXT	SEGMENT
$T132547 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wID$ = 16						; size = 2
_wCommander$ = 20					; size = 2
?SendMW_CORPSJOIN_REQ@CTServer@@QAEXKKGG@Z PROC NEAR	; CTServer::SendMW_CORPSJOIN_REQ, COMDAT
; _this$ = ecx

; 1946 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CORPSJOIN_REQ@CTServer@@QAEXKKGG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 1947 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132547[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132549
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132549:

; 1948 : 	pMsg->SetID(MW_CORPSJOIN_REQ)
; 1949 : 		<< dwCharID
; 1950 : 		<< dwKey
; 1951 : 		<< wID
; 1952 : 		<< wCommander;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _wCommander$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _wID$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKey$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 6f 20 00 00	 push	 8303			; 0000206fH
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 1953 : 
; 1954 : 	Say(pMsg);

  0007f	8b 17		 mov	 edx, DWORD PTR [edi]
  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	ff 12		 call	 DWORD PTR [edx]

; 1955 : }

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00093	83 c4 10	 add	 esp, 16			; 00000010H
  00096	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132550:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132547[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CORPSJOIN_REQ@CTServer@@QAEXKKGG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132552
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CORPSJOIN_REQ@CTServer@@QAEXKKGG@Z ENDP		; CTServer::SendMW_CORPSJOIN_REQ
PUBLIC	?SendMW_DELCORPSUNIT_REQ@CTServer@@QAEXKKGK@Z	; CTServer::SendMW_DELCORPSUNIT_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132568 DD	0ffffffffH
	DD	FLAT:$L132564
$T132566 DD	019930520H
	DD	01H
	DD	FLAT:$T132568
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_DELCORPSUNIT_REQ@CTServer@@QAEXKKGK@Z
_TEXT	SEGMENT
$T132561 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wSquad$ = 16						; size = 2
_dwTarget$ = 20						; size = 4
?SendMW_DELCORPSUNIT_REQ@CTServer@@QAEXKKGK@Z PROC NEAR	; CTServer::SendMW_DELCORPSUNIT_REQ, COMDAT
; _this$ = ecx

; 2014 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_DELCORPSUNIT_REQ@CTServer@@QAEXKKGK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2015 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132561[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132563
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132563:

; 2016 : 	pMsg->SetID(MW_DELCORPSUNIT_REQ)
; 2017 : 		<< dwCharID
; 2018 : 		<< dwKey
; 2019 : 		<< wSquad
; 2020 : 		<< dwTarget;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _dwTarget$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _wSquad$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKey$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 73 20 00 00	 push	 8307			; 00002073H
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2021 : 
; 2022 : 	Say(pMsg);

  0007f	8b 17		 mov	 edx, DWORD PTR [edi]
  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	ff 12		 call	 DWORD PTR [edx]

; 2023 : }

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00093	83 c4 10	 add	 esp, 16			; 00000010H
  00096	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132564:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132561[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_DELCORPSUNIT_REQ@CTServer@@QAEXKKGK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132566
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_DELCORPSUNIT_REQ@CTServer@@QAEXKKGK@Z ENDP	; CTServer::SendMW_DELCORPSUNIT_REQ
PUBLIC	?SendMW_CORPSCMD_REQ@CTServer@@QAEXKKGKGEKEGG@Z	; CTServer::SendMW_CORPSCMD_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132582 DD	0ffffffffH
	DD	FLAT:$L132578
$T132580 DD	019930520H
	DD	01H
	DD	FLAT:$T132582
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CORPSCMD_REQ@CTServer@@QAEXKKGKGEKEGG@Z
_TEXT	SEGMENT
$T132575 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwMemberID$ = 8					; size = 4
_dwKey$ = 12						; size = 4
_wSquadID$ = 16						; size = 2
_dwCharID$ = 20						; size = 4
_wMapID$ = 24						; size = 2
_bCMD$ = 28						; size = 1
_dwTargetID$ = 32					; size = 4
_bTargetType$ = 36					; size = 1
_wPosX$ = 40						; size = 2
_wPosZ$ = 44						; size = 2
?SendMW_CORPSCMD_REQ@CTServer@@QAEXKKGKGEKEGG@Z PROC NEAR ; CTServer::SendMW_CORPSCMD_REQ, COMDAT
; _this$ = ecx

; 2035 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CORPSCMD_REQ@CTServer@@QAEXKKGKGEKEGG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2036 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132575[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132577
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132577:

; 2037 : 	pMsg->SetID(MW_CORPSCMD_REQ)
; 2038 : 		<< dwMemberID
; 2039 : 		<< dwKey
; 2040 : 		<< wSquadID
; 2041 : 		<< dwCharID
; 2042 : 		<< wMapID
; 2043 : 		<< bCMD
; 2044 : 		<< dwTargetID
; 2045 : 		<< bTargetType
; 2046 : 		<< wPosX
; 2047 : 		<< wPosZ;

  0003b	8b 44 24 40	 mov	 eax, DWORD PTR _wPosZ$[esp+20]
  0003f	8b 4c 24 3c	 mov	 ecx, DWORD PTR _wPosX$[esp+20]
  00043	8b 54 24 38	 mov	 edx, DWORD PTR _bTargetType$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 38	 mov	 eax, DWORD PTR _dwTargetID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 38	 mov	 ecx, DWORD PTR _bCMD$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 38	 mov	 edx, DWORD PTR _wMapID$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 38	 mov	 eax, DWORD PTR _dwCharID$[esp+36]
  0005b	51		 push	 ecx
  0005c	8b 4c 24 38	 mov	 ecx, DWORD PTR _wSquadID$[esp+40]
  00060	52		 push	 edx
  00061	8b 54 24 38	 mov	 edx, DWORD PTR _dwKey$[esp+44]
  00065	50		 push	 eax
  00066	8b 44 24 38	 mov	 eax, DWORD PTR _dwMemberID$[esp+48]
  0006a	51		 push	 ecx
  0006b	52		 push	 edx
  0006c	50		 push	 eax
  0006d	68 75 20 00 00	 push	 8309			; 00002075H
  00072	8b ce		 mov	 ecx, esi
  00074	c7 44 24 40 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+76], -1
  0007c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000a4	8b c8		 mov	 ecx, eax
  000a6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ab	8b c8		 mov	 ecx, eax
  000ad	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b2	8b c8		 mov	 ecx, eax
  000b4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000b9	8b c8		 mov	 ecx, eax
  000bb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000c0	8b c8		 mov	 ecx, eax
  000c2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 2048 : 
; 2049 : 	Say(pMsg);

  000c7	8b 17		 mov	 edx, DWORD PTR [edi]
  000c9	56		 push	 esi
  000ca	8b cf		 mov	 ecx, edi
  000cc	ff 12		 call	 DWORD PTR [edx]

; 2050 : }

  000ce	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi
  000d4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000db	83 c4 10	 add	 esp, 16			; 00000010H
  000de	c2 28 00	 ret	 40			; 00000028H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132578:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132575[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CORPSCMD_REQ@CTServer@@QAEXKKGKGEKEGG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132580
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CORPSCMD_REQ@CTServer@@QAEXKKGKGEKEGG@Z ENDP	; CTServer::SendMW_CORPSCMD_REQ
PUBLIC	?SendMW_REPORTENEMYLIST_REQ@CTServer@@QAEXKKGK@Z ; CTServer::SendMW_REPORTENEMYLIST_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132596 DD	0ffffffffH
	DD	FLAT:$L132592
$T132594 DD	019930520H
	DD	01H
	DD	FLAT:$T132596
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_REPORTENEMYLIST_REQ@CTServer@@QAEXKKGK@Z
_TEXT	SEGMENT
$T132589 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wSquadID$ = 16						; size = 2
_dwChar$ = 20						; size = 4
?SendMW_REPORTENEMYLIST_REQ@CTServer@@QAEXKKGK@Z PROC NEAR ; CTServer::SendMW_REPORTENEMYLIST_REQ, COMDAT
; _this$ = ecx

; 2056 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_REPORTENEMYLIST_REQ@CTServer@@QAEXKKGK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2057 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132589[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132591
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132591:

; 2058 : 	pMsg->SetID(MW_REPORTENEMYLIST_REQ)
; 2059 : 		<< dwCharID
; 2060 : 		<< dwKey
; 2061 : 		<< wSquadID
; 2062 : 		<< dwChar;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _dwChar$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _wSquadID$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKey$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 a5 20 00 00	 push	 8357			; 000020a5H
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2063 : 
; 2064 : 	Say(pMsg);

  0007f	8b 17		 mov	 edx, DWORD PTR [edi]
  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	ff 12		 call	 DWORD PTR [edx]

; 2065 : }

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00093	83 c4 10	 add	 esp, 16			; 00000010H
  00096	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132592:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132589[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_REPORTENEMYLIST_REQ@CTServer@@QAEXKKGK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132594
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_REPORTENEMYLIST_REQ@CTServer@@QAEXKKGK@Z ENDP	; CTServer::SendMW_REPORTENEMYLIST_REQ
PUBLIC	?SendMW_PARTYMOVE_REQ@CTServer@@QAEXKKE@Z	; CTServer::SendMW_PARTYMOVE_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132610 DD	0ffffffffH
	DD	FLAT:$L132606
$T132608 DD	019930520H
	DD	01H
	DD	FLAT:$T132610
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_PARTYMOVE_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT
$T132603 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bResult$ = 16						; size = 1
?SendMW_PARTYMOVE_REQ@CTServer@@QAEXKKE@Z PROC NEAR	; CTServer::SendMW_PARTYMOVE_REQ, COMDAT
; _this$ = ecx

; 2070 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PARTYMOVE_REQ@CTServer@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2071 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132603[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132605
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132605:

; 2072 : 	pMsg->SetID(MW_PARTYMOVE_REQ)
; 2073 : 		<< dwCharID
; 2074 : 		<< dwKey
; 2075 : 		<< bResult;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bResult$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 9f 20 00 00	 push	 8351			; 0000209fH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2076 : 
; 2077 : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 2078 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132606:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132603[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_PARTYMOVE_REQ@CTServer@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132608
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PARTYMOVE_REQ@CTServer@@QAEXKKE@Z ENDP		; CTServer::SendMW_PARTYMOVE_REQ
PUBLIC	?SendMW_POSTRECV_REQ@CTServer@@QAEXPAVCPacket@@@Z ; CTServer::SendMW_POSTRECV_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132624 DD	0ffffffffH
	DD	FLAT:$L132620
$T132622 DD	019930520H
	DD	01H
	DD	FLAT:$T132624
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_POSTRECV_REQ@CTServer@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT
$T132617 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pPacket$ = 8						; size = 4
?SendMW_POSTRECV_REQ@CTServer@@QAEXPAVCPacket@@@Z PROC NEAR ; CTServer::SendMW_POSTRECV_REQ, COMDAT
; _this$ = ecx

; 2158 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_POSTRECV_REQ@CTServer@@QAEXPAVCPacket@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2159 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132617[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132619
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132619:

; 2160 : 	pMsg->Copy(pPacket);

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _pPacket$[esp+20]
  0003f	50		 push	 eax
  00040	8b ce		 mov	 ecx, esi
  00042	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0004a	e8 00 00 00 00	 call	 ?Copy@CPacket@@QAEXPAV1@@Z ; CPacket::Copy

; 2161 : 	pMsg->SetID(MW_POSTRECV_REQ);

  0004f	68 7c 20 00 00	 push	 8316			; 0000207cH
  00054	8b ce		 mov	 ecx, esi
  00056	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 2162 : 	Say(pMsg);

  0005b	8b 17		 mov	 edx, DWORD PTR [edi]
  0005d	56		 push	 esi
  0005e	8b cf		 mov	 ecx, edi
  00060	ff 12		 call	 DWORD PTR [edx]

; 2163 : }

  00062	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0006f	83 c4 10	 add	 esp, 16			; 00000010H
  00072	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132620:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132617[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_POSTRECV_REQ@CTServer@@QAEXPAVCPacket@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132622
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_POSTRECV_REQ@CTServer@@QAEXPAVCPacket@@@Z ENDP	; CTServer::SendMW_POSTRECV_REQ
PUBLIC	?SendMW_MISSIONOCCUPY_REQ@CTServer@@QAEXEGE@Z	; CTServer::SendMW_MISSIONOCCUPY_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132638 DD	0ffffffffH
	DD	FLAT:$L132634
$T132636 DD	019930520H
	DD	01H
	DD	FLAT:$T132638
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_MISSIONOCCUPY_REQ@CTServer@@QAEXEGE@Z
_TEXT	SEGMENT
$T132631 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bType$ = 8						; size = 1
_wLocalID$ = 12						; size = 2
_bCountry$ = 16						; size = 1
?SendMW_MISSIONOCCUPY_REQ@CTServer@@QAEXEGE@Z PROC NEAR	; CTServer::SendMW_MISSIONOCCUPY_REQ, COMDAT
; _this$ = ecx

; 2200 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MISSIONOCCUPY_REQ@CTServer@@QAEXEGE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2201 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132631[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132633
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132633:

; 2202 : 	pMsg->SetID(MW_MISSIONOCCUPY_REQ)
; 2203 : 		<< bType
; 2204 : 		<< wLocalID
; 2205 : 		<< bCountry;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bCountry$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _wLocalID$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _bType$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 66 21 00 00	 push	 8550			; 00002166H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2206 : 
; 2207 : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 2208 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132634:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132631[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MISSIONOCCUPY_REQ@CTServer@@QAEXEGE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132636
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MISSIONOCCUPY_REQ@CTServer@@QAEXEGE@Z ENDP	; CTServer::SendMW_MISSIONOCCUPY_REQ
PUBLIC	?SendMW_CASTLEENABLE_REQ@CTServer@@QAEXEK@Z	; CTServer::SendMW_CASTLEENABLE_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132652 DD	0ffffffffH
	DD	FLAT:$L132648
$T132650 DD	019930520H
	DD	01H
	DD	FLAT:$T132652
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CASTLEENABLE_REQ@CTServer@@QAEXEK@Z
_TEXT	SEGMENT
$T132645 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bStatus$ = 8						; size = 1
_dwSecond$ = 12						; size = 4
?SendMW_CASTLEENABLE_REQ@CTServer@@QAEXEK@Z PROC NEAR	; CTServer::SendMW_CASTLEENABLE_REQ, COMDAT
; _this$ = ecx

; 2210 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CASTLEENABLE_REQ@CTServer@@QAEXEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2211 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132645[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132647
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132647:

; 2212 : 	pMsg->SetID(MW_CASTLEENABLE_REQ)
; 2213 : 		<< bStatus
; 2214 : 		<< dwSecond;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwSecond$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _bStatus$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 7e 20 00 00	 push	 8318			; 0000207eH
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2215 : 
; 2216 : 	Say(pMsg);

  00067	8b 17		 mov	 edx, DWORD PTR [edi]
  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	ff 12		 call	 DWORD PTR [edx]

; 2217 : }

  0006e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132648:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132645[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CASTLEENABLE_REQ@CTServer@@QAEXEK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132650
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CASTLEENABLE_REQ@CTServer@@QAEXEK@Z ENDP	; CTServer::SendMW_CASTLEENABLE_REQ
PUBLIC	?SendMW_CASTLEAPPLY_REQ@CTServer@@QAEXKKEGKE@Z	; CTServer::SendMW_CASTLEAPPLY_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132666 DD	0ffffffffH
	DD	FLAT:$L132662
$T132664 DD	019930520H
	DD	01H
	DD	FLAT:$T132666
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CASTLEAPPLY_REQ@CTServer@@QAEXKKEGKE@Z
_TEXT	SEGMENT
$T132659 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bResult$ = 16						; size = 1
_wCastle$ = 20						; size = 2
_dwTarget$ = 24						; size = 4
_bCamp$ = 28						; size = 1
?SendMW_CASTLEAPPLY_REQ@CTServer@@QAEXKKEGKE@Z PROC NEAR ; CTServer::SendMW_CASTLEAPPLY_REQ, COMDAT
; _this$ = ecx

; 2224 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CASTLEAPPLY_REQ@CTServer@@QAEXKKEGKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2225 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132659[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132661
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132661:

; 2226 : 	pMsg->SetID(MW_CASTLEAPPLY_REQ)
; 2227 : 		<< dwCharID
; 2228 : 		<< dwKey
; 2229 : 		<< bResult
; 2230 : 		<< wCastle
; 2231 : 		<< dwTarget
; 2232 : 		<< bCamp;

  0003b	8b 44 24 30	 mov	 eax, DWORD PTR _bCamp$[esp+20]
  0003f	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwTarget$[esp+20]
  00043	8b 54 24 28	 mov	 edx, DWORD PTR _wCastle$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 28	 mov	 eax, DWORD PTR _bResult$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwKey$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 28	 mov	 edx, DWORD PTR _dwCharID$[esp+32]
  00056	50		 push	 eax
  00057	51		 push	 ecx
  00058	52		 push	 edx
  00059	68 80 20 00 00	 push	 8320			; 00002080H
  0005e	8b ce		 mov	 ecx, esi
  00060	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  00068	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006d	8b c8		 mov	 ecx, eax
  0006f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00074	8b c8		 mov	 ecx, eax
  00076	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2233 : 
; 2234 : 	Say(pMsg);

  00097	8b 07		 mov	 eax, DWORD PTR [edi]
  00099	56		 push	 esi
  0009a	8b cf		 mov	 ecx, edi
  0009c	ff 10		 call	 DWORD PTR [eax]

; 2235 : }

  0009e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000a2	5f		 pop	 edi
  000a3	5e		 pop	 esi
  000a4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ab	83 c4 10	 add	 esp, 16			; 00000010H
  000ae	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132662:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132659[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CASTLEAPPLY_REQ@CTServer@@QAEXKKEGKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132664
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CASTLEAPPLY_REQ@CTServer@@QAEXKKEGKE@Z ENDP	; CTServer::SendMW_CASTLEAPPLY_REQ
PUBLIC	?SendMW_CASTLEJOIN_REQ@CTServer@@QAEXKKKG@Z	; CTServer::SendMW_CASTLEJOIN_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132680 DD	0ffffffffH
	DD	FLAT:$L132676
$T132678 DD	019930520H
	DD	01H
	DD	FLAT:$T132680
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CASTLEJOIN_REQ@CTServer@@QAEXKKKG@Z
_TEXT	SEGMENT
$T132673 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwCastleGuild$ = 16					; size = 4
_wMapID$ = 20						; size = 2
?SendMW_CASTLEJOIN_REQ@CTServer@@QAEXKKKG@Z PROC NEAR	; CTServer::SendMW_CASTLEJOIN_REQ, COMDAT
; _this$ = ecx

; 2240 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CASTLEJOIN_REQ@CTServer@@QAEXKKKG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2241 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132673[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132675
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132675:

; 2242 : 	pMsg->SetID(MW_CASTLEJOIN_REQ)
; 2243 : 		<< dwCharID
; 2244 : 		<< dwKey
; 2245 : 		<< dwCastleGuild
; 2246 : 		<< wMapID;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _wMapID$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwCastleGuild$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKey$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 82 20 00 00	 push	 8322			; 00002082H
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 2247 : 
; 2248 : 	Say(pMsg);

  0007f	8b 17		 mov	 edx, DWORD PTR [edi]
  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	ff 12		 call	 DWORD PTR [edx]

; 2249 : }

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00093	83 c4 10	 add	 esp, 16			; 00000010H
  00096	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132676:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132673[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CASTLEJOIN_REQ@CTServer@@QAEXKKKG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132678
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CASTLEJOIN_REQ@CTServer@@QAEXKKKG@Z ENDP	; CTServer::SendMW_CASTLEJOIN_REQ
PUBLIC	?SendMW_MONTEMPT_REQ@CTServer@@QAEXKKG@Z	; CTServer::SendMW_MONTEMPT_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132694 DD	0ffffffffH
	DD	FLAT:$L132690
$T132692 DD	019930520H
	DD	01H
	DD	FLAT:$T132694
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_MONTEMPT_REQ@CTServer@@QAEXKKG@Z
_TEXT	SEGMENT
$T132687 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wMonID$ = 16						; size = 2
?SendMW_MONTEMPT_REQ@CTServer@@QAEXKKG@Z PROC NEAR	; CTServer::SendMW_MONTEMPT_REQ, COMDAT
; _this$ = ecx

; 2253 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MONTEMPT_REQ@CTServer@@QAEXKKG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2254 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132687[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132689
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132689:

; 2255 : 	pMsg->SetID(MW_MONTEMPT_REQ)
; 2256 : 		<< dwCharID
; 2257 : 		<< dwKey
; 2258 : 		<< wMonID;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _wMonID$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 87 20 00 00	 push	 8327			; 00002087H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 2259 : 
; 2260 : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 2261 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132690:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132687[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MONTEMPT_REQ@CTServer@@QAEXKKG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132692
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MONTEMPT_REQ@CTServer@@QAEXKKG@Z ENDP		; CTServer::SendMW_MONTEMPT_REQ
PUBLIC	?SendMW_GETBLOOD_REQ@CTServer@@QAEXKKKEEK@Z	; CTServer::SendMW_GETBLOOD_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132708 DD	0ffffffffH
	DD	FLAT:$L132704
$T132706 DD	019930520H
	DD	01H
	DD	FLAT:$T132708
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_GETBLOOD_REQ@CTServer@@QAEXKKKEEK@Z
_TEXT	SEGMENT
$T132701 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwAtkID$ = 16						; size = 4
_bAtkType$ = 20						; size = 1
_bBloodType$ = 24					; size = 1
_dwBlood$ = 28						; size = 4
?SendMW_GETBLOOD_REQ@CTServer@@QAEXKKKEEK@Z PROC NEAR	; CTServer::SendMW_GETBLOOD_REQ, COMDAT
; _this$ = ecx

; 2268 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GETBLOOD_REQ@CTServer@@QAEXKKKEEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2269 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132701[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132703
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132703:

; 2270 : 	pMsg->SetID(MW_GETBLOOD_REQ)
; 2271 : 		<< dwCharID
; 2272 : 		<< dwKey
; 2273 : 		<< dwAtkID
; 2274 : 		<< bAtkType
; 2275 : 		<< bBloodType
; 2276 : 		<< dwBlood;

  0003b	8b 44 24 30	 mov	 eax, DWORD PTR _dwBlood$[esp+20]
  0003f	8b 4c 24 2c	 mov	 ecx, DWORD PTR _bBloodType$[esp+20]
  00043	8b 54 24 28	 mov	 edx, DWORD PTR _bAtkType$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 28	 mov	 eax, DWORD PTR _dwAtkID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwKey$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 28	 mov	 edx, DWORD PTR _dwCharID$[esp+32]
  00056	50		 push	 eax
  00057	51		 push	 ecx
  00058	52		 push	 edx
  00059	68 89 20 00 00	 push	 8329			; 00002089H
  0005e	8b ce		 mov	 ecx, esi
  00060	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  00068	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006d	8b c8		 mov	 ecx, eax
  0006f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00074	8b c8		 mov	 ecx, eax
  00076	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2277 : 
; 2278 : 	Say(pMsg);

  00097	8b 07		 mov	 eax, DWORD PTR [edi]
  00099	56		 push	 esi
  0009a	8b cf		 mov	 ecx, edi
  0009c	ff 10		 call	 DWORD PTR [eax]

; 2279 : }

  0009e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000a2	5f		 pop	 edi
  000a3	5e		 pop	 esi
  000a4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ab	83 c4 10	 add	 esp, 16			; 00000010H
  000ae	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132704:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132701[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GETBLOOD_REQ@CTServer@@QAEXKKKEEK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132706
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GETBLOOD_REQ@CTServer@@QAEXKKKEEK@Z ENDP	; CTServer::SendMW_GETBLOOD_REQ
PUBLIC	?SendMW_FRIENDGROUPDELETE_REQ@CTServer@@QAEXKKEE@Z ; CTServer::SendMW_FRIENDGROUPDELETE_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132722 DD	0ffffffffH
	DD	FLAT:$L132718
$T132720 DD	019930520H
	DD	01H
	DD	FLAT:$T132722
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_FRIENDGROUPDELETE_REQ@CTServer@@QAEXKKEE@Z
_TEXT	SEGMENT
$T132715 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bRet$ = 16						; size = 1
_bGroup$ = 20						; size = 1
?SendMW_FRIENDGROUPDELETE_REQ@CTServer@@QAEXKKEE@Z PROC NEAR ; CTServer::SendMW_FRIENDGROUPDELETE_REQ, COMDAT
; _this$ = ecx

; 2301 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FRIENDGROUPDELETE_REQ@CTServer@@QAEXKKEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2302 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132715[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132717
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132717:

; 2303 : 	pMsg->SetID(MW_FRIENDGROUPDELETE_REQ)
; 2304 : 		<< dwCharID
; 2305 : 		<< dwKey
; 2306 : 		<< bRet
; 2307 : 		<< bGroup;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _bGroup$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _bRet$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKey$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 5b 20 00 00	 push	 8283			; 0000205bH
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2308 : 
; 2309 : 	Say(pMsg);

  0007f	8b 17		 mov	 edx, DWORD PTR [edi]
  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	ff 12		 call	 DWORD PTR [edx]

; 2310 : }

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00093	83 c4 10	 add	 esp, 16			; 00000010H
  00096	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132718:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132715[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_FRIENDGROUPDELETE_REQ@CTServer@@QAEXKKEE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132720
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FRIENDGROUPDELETE_REQ@CTServer@@QAEXKKEE@Z ENDP	; CTServer::SendMW_FRIENDGROUPDELETE_REQ
PUBLIC	?SendMW_FRIENDGROUPCHANGE_REQ@CTServer@@QAEXKKEEK@Z ; CTServer::SendMW_FRIENDGROUPCHANGE_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132736 DD	0ffffffffH
	DD	FLAT:$L132732
$T132734 DD	019930520H
	DD	01H
	DD	FLAT:$T132736
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_FRIENDGROUPCHANGE_REQ@CTServer@@QAEXKKEEK@Z
_TEXT	SEGMENT
$T132729 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bRet$ = 16						; size = 1
_bGroup$ = 20						; size = 1
_dwFriend$ = 24						; size = 4
?SendMW_FRIENDGROUPCHANGE_REQ@CTServer@@QAEXKKEEK@Z PROC NEAR ; CTServer::SendMW_FRIENDGROUPCHANGE_REQ, COMDAT
; _this$ = ecx

; 2316 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FRIENDGROUPCHANGE_REQ@CTServer@@QAEXKKEEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2317 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132729[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132731
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132731:

; 2318 : 	pMsg->SetID(MW_FRIENDGROUPCHANGE_REQ)
; 2319 : 		<< dwCharID
; 2320 : 		<< dwKey
; 2321 : 		<< bRet
; 2322 : 		<< bGroup
; 2323 : 		<< dwFriend;

  0003b	8b 44 24 2c	 mov	 eax, DWORD PTR _dwFriend$[esp+20]
  0003f	8b 4c 24 28	 mov	 ecx, DWORD PTR _bGroup$[esp+20]
  00043	8b 54 24 24	 mov	 edx, DWORD PTR _bRet$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 24	 mov	 eax, DWORD PTR _dwKey$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwCharID$[esp+28]
  00051	52		 push	 edx
  00052	50		 push	 eax
  00053	51		 push	 ecx
  00054	68 5d 20 00 00	 push	 8285			; 0000205dH
  00059	8b ce		 mov	 ecx, esi
  0005b	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00063	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2324 : 
; 2325 : 	Say(pMsg);

  0008b	8b 17		 mov	 edx, DWORD PTR [edi]
  0008d	56		 push	 esi
  0008e	8b cf		 mov	 ecx, edi
  00090	ff 12		 call	 DWORD PTR [edx]

; 2326 : }

  00092	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009f	83 c4 10	 add	 esp, 16			; 00000010H
  000a2	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132732:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132729[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_FRIENDGROUPCHANGE_REQ@CTServer@@QAEXKKEEK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132734
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FRIENDGROUPCHANGE_REQ@CTServer@@QAEXKKEEK@Z ENDP ; CTServer::SendMW_FRIENDGROUPCHANGE_REQ
PUBLIC	?SendMW_MAGICMIRROR_REQ@CTServer@@QAEXPAVCPacket@@@Z ; CTServer::SendMW_MAGICMIRROR_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132750 DD	0ffffffffH
	DD	FLAT:$L132746
$T132748 DD	019930520H
	DD	01H
	DD	FLAT:$T132750
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_MAGICMIRROR_REQ@CTServer@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT
$T132743 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pPacket$ = 8						; size = 4
?SendMW_MAGICMIRROR_REQ@CTServer@@QAEXPAVCPacket@@@Z PROC NEAR ; CTServer::SendMW_MAGICMIRROR_REQ, COMDAT
; _this$ = ecx

; 2372 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MAGICMIRROR_REQ@CTServer@@QAEXPAVCPacket@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2373 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132743[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132745
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132745:

; 2374 : 	pMsg->Copy(pPacket);

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _pPacket$[esp+20]
  0003f	50		 push	 eax
  00040	8b ce		 mov	 ecx, esi
  00042	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0004a	e8 00 00 00 00	 call	 ?Copy@CPacket@@QAEXPAV1@@Z ; CPacket::Copy

; 2375 : 	pMsg->SetID(MW_MAGICMIRROR_REQ);

  0004f	68 b5 20 00 00	 push	 8373			; 000020b5H
  00054	8b ce		 mov	 ecx, esi
  00056	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 2376 : 
; 2377 : 	Say(pMsg);

  0005b	8b 17		 mov	 edx, DWORD PTR [edi]
  0005d	56		 push	 esi
  0005e	8b cf		 mov	 ecx, edi
  00060	ff 12		 call	 DWORD PTR [edx]

; 2378 : }

  00062	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0006f	83 c4 10	 add	 esp, 16			; 00000010H
  00072	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132746:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132743[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MAGICMIRROR_REQ@CTServer@@QAEXPAVCPacket@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132748
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MAGICMIRROR_REQ@CTServer@@QAEXPAVCPacket@@@Z ENDP ; CTServer::SendMW_MAGICMIRROR_REQ
PUBLIC	?SendMW_RECALLMONDEL_REQ@CTServer@@QAEXKKK@Z	; CTServer::SendMW_RECALLMONDEL_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132764 DD	0ffffffffH
	DD	FLAT:$L132760
$T132762 DD	019930520H
	DD	01H
	DD	FLAT:$T132764
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_RECALLMONDEL_REQ@CTServer@@QAEXKKK@Z
_TEXT	SEGMENT
$T132757 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwMonID$ = 16						; size = 4
?SendMW_RECALLMONDEL_REQ@CTServer@@QAEXKKK@Z PROC NEAR	; CTServer::SendMW_RECALLMONDEL_REQ, COMDAT
; _this$ = ecx

; 2447 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_RECALLMONDEL_REQ@CTServer@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2448 : 	CPacket * pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132757[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132759
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132759:

; 2449 : 	pMSG->SetID(MW_RECALLMONDEL_REQ)
; 2450 : 		<< dwCharID
; 2451 : 		<< dwKey
; 2452 : 		<< dwMonID;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwMonID$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 ba 20 00 00	 push	 8378			; 000020baH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2453 : 
; 2454 : 	Say(pMSG);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 2455 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132760:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132757[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_RECALLMONDEL_REQ@CTServer@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132762
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_RECALLMONDEL_REQ@CTServer@@QAEXKKK@Z ENDP	; CTServer::SendMW_RECALLMONDEL_REQ
PUBLIC	?SendMW_STARTTELEPORT_REQ@CTServer@@QAEXKKEGMMM@Z ; CTServer::SendMW_STARTTELEPORT_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132778 DD	0ffffffffH
	DD	FLAT:$L132774
$T132776 DD	019930520H
	DD	01H
	DD	FLAT:$T132778
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_STARTTELEPORT_REQ@CTServer@@QAEXKKEGMMM@Z
_TEXT	SEGMENT
$T132771 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bChannel$ = 16						; size = 1
_wMapID$ = 20						; size = 2
_fPosX$ = 24						; size = 4
_fPosY$ = 28						; size = 4
_fPosZ$ = 32						; size = 4
?SendMW_STARTTELEPORT_REQ@CTServer@@QAEXKKEGMMM@Z PROC NEAR ; CTServer::SendMW_STARTTELEPORT_REQ, COMDAT
; _this$ = ecx

; 2479 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_STARTTELEPORT_REQ@CTServer@@QAEXKKEGMMM@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2480 : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132771[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132773
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132773:

; 2481 : 
; 2482 : 	pMSG->SetID(MW_STARTTELEPORT_REQ)
; 2483 : 		<< dwCharID
; 2484 : 		<< dwKEY
; 2485 : 		<< bChannel
; 2486 : 		<< wMapID
; 2487 :         << fPosX
; 2488 :         << fPosY
; 2489 :         << fPosZ;

  0003b	8b 44 24 34	 mov	 eax, DWORD PTR _fPosZ$[esp+20]
  0003f	8b 4c 24 30	 mov	 ecx, DWORD PTR _fPosY$[esp+20]
  00043	8b 54 24 2c	 mov	 edx, DWORD PTR _fPosX$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 2c	 mov	 eax, DWORD PTR _wMapID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 2c	 mov	 ecx, DWORD PTR _bChannel$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 2c	 mov	 edx, DWORD PTR _dwKEY$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 2c	 mov	 eax, DWORD PTR _dwCharID$[esp+36]
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	50		 push	 eax
  0005e	68 c8 20 00 00	 push	 8392			; 000020c8H
  00063	8b ce		 mov	 ecx, esi
  00065	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+64], -1
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<

; 2490 : 
; 2491 : 	Say(pMSG);

  000a3	8b 17		 mov	 edx, DWORD PTR [edi]
  000a5	56		 push	 esi
  000a6	8b cf		 mov	 ecx, edi
  000a8	ff 12		 call	 DWORD PTR [edx]

; 2492 : }

  000aa	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b7	83 c4 10	 add	 esp, 16			; 00000010H
  000ba	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132774:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132771[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_STARTTELEPORT_REQ@CTServer@@QAEXKKEGMMM@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132776
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_STARTTELEPORT_REQ@CTServer@@QAEXKKEGMMM@Z ENDP	; CTServer::SendMW_STARTTELEPORT_REQ
PUBLIC	?SendMW_PETRIDING_REQ@CTServer@@QAEXKKK@Z	; CTServer::SendMW_PETRIDING_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132792 DD	0ffffffffH
	DD	FLAT:$L132788
$T132790 DD	019930520H
	DD	01H
	DD	FLAT:$T132792
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_PETRIDING_REQ@CTServer@@QAEXKKK@Z
_TEXT	SEGMENT
$T132785 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwRiding$ = 16						; size = 4
?SendMW_PETRIDING_REQ@CTServer@@QAEXKKK@Z PROC NEAR	; CTServer::SendMW_PETRIDING_REQ, COMDAT
; _this$ = ecx

; 2497 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PETRIDING_REQ@CTServer@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2498 : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132785[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132787
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132787:

; 2499 : 
; 2500 : 	pMSG->SetID(MW_PETRIDING_REQ)
; 2501 : 		<< dwCharID
; 2502 : 		<< dwKEY
; 2503 : 		<< dwRiding;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwRiding$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKEY$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 ce 20 00 00	 push	 8398			; 000020ceH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2504 : 
; 2505 : 	Say(pMSG);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 2506 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132788:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132785[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_PETRIDING_REQ@CTServer@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132790
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PETRIDING_REQ@CTServer@@QAEXKKK@Z ENDP		; CTServer::SendMW_PETRIDING_REQ
PUBLIC	?SendMW_HELMETHIDE_REQ@CTServer@@QAEXKKE@Z	; CTServer::SendMW_HELMETHIDE_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132806 DD	0ffffffffH
	DD	FLAT:$L132802
$T132804 DD	019930520H
	DD	01H
	DD	FLAT:$T132806
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_HELMETHIDE_REQ@CTServer@@QAEXKKE@Z
_TEXT	SEGMENT
$T132799 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bHide$ = 16						; size = 1
?SendMW_HELMETHIDE_REQ@CTServer@@QAEXKKE@Z PROC NEAR	; CTServer::SendMW_HELMETHIDE_REQ, COMDAT
; _this$ = ecx

; 2529 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_HELMETHIDE_REQ@CTServer@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2530 : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132799[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132801
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132801:

; 2531 : 
; 2532 : 	pMSG->SetID(MW_HELMETHIDE_REQ)
; 2533 : 		<< dwCharID
; 2534 : 		<< dwKEY
; 2535 : 		<< bHide;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _bHide$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKEY$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 01 21 00 00	 push	 8449			; 00002101H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2536 : 
; 2537 : 	Say(pMSG);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 2538 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132802:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132799[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_HELMETHIDE_REQ@CTServer@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132804
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_HELMETHIDE_REQ@CTServer@@QAEXKKE@Z ENDP		; CTServer::SendMW_HELMETHIDE_REQ
PUBLIC	?SendMW_SOULMATEEND_REQ@CTServer@@QAEXKKEK@Z	; CTServer::SendMW_SOULMATEEND_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132820 DD	0ffffffffH
	DD	FLAT:$L132816
$T132818 DD	019930520H
	DD	01H
	DD	FLAT:$T132820
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_SOULMATEEND_REQ@CTServer@@QAEXKKEK@Z
_TEXT	SEGMENT
$T132813 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bResult$ = 16						; size = 1
_dwTime$ = 20						; size = 4
?SendMW_SOULMATEEND_REQ@CTServer@@QAEXKKEK@Z PROC NEAR	; CTServer::SendMW_SOULMATEEND_REQ, COMDAT
; _this$ = ecx

; 2664 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_SOULMATEEND_REQ@CTServer@@QAEXKKEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2665 : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132813[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132815
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132815:

; 2666 : 
; 2667 : 	pMSG->SetID(MW_SOULMATEEND_REQ)
; 2668 : 		<< dwCharID
; 2669 : 		<< dwKEY
; 2670 : 		<< bResult
; 2671 : 		<< dwTime;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _dwTime$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _bResult$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKEY$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 0b 21 00 00	 push	 8459			; 0000210bH
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2672 : 
; 2673 : 	Say(pMSG);

  0007f	8b 17		 mov	 edx, DWORD PTR [edi]
  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	ff 12		 call	 DWORD PTR [edx]

; 2674 : }

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00093	83 c4 10	 add	 esp, 16			; 00000010H
  00096	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132816:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132813[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_SOULMATEEND_REQ@CTServer@@QAEXKKEK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132818
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_SOULMATEEND_REQ@CTServer@@QAEXKKEK@Z ENDP	; CTServer::SendMW_SOULMATEEND_REQ
PUBLIC	?SendMW_ENDWAR_REQ@CTServer@@QAEXG@Z		; CTServer::SendMW_ENDWAR_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132834 DD	0ffffffffH
	DD	FLAT:$L132830
$T132832 DD	019930520H
	DD	01H
	DD	FLAT:$T132834
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_ENDWAR_REQ@CTServer@@QAEXG@Z
_TEXT	SEGMENT
$T132827 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wCastle$ = 8						; size = 2
?SendMW_ENDWAR_REQ@CTServer@@QAEXG@Z PROC NEAR		; CTServer::SendMW_ENDWAR_REQ, COMDAT
; _this$ = ecx

; 2726 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_ENDWAR_REQ@CTServer@@QAEXG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2727 : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132827[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132829
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132829:

; 2728 : 
; 2729 : 	pMSG->SetID(MW_ENDWAR_REQ)
; 2730 : 		<< wCastle;

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _wCastle$[esp+20]
  0003f	50		 push	 eax
  00040	68 11 21 00 00	 push	 8465			; 00002111H
  00045	8b ce		 mov	 ecx, esi
  00047	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  0004f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00054	8b c8		 mov	 ecx, eax
  00056	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 2731 : 
; 2732 : 	Say(pMSG);

  0005b	8b 17		 mov	 edx, DWORD PTR [edi]
  0005d	56		 push	 esi
  0005e	8b cf		 mov	 ecx, edi
  00060	ff 12		 call	 DWORD PTR [edx]

; 2733 : }

  00062	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0006f	83 c4 10	 add	 esp, 16			; 00000010H
  00072	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132830:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132827[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_ENDWAR_REQ@CTServer@@QAEXG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132832
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_ENDWAR_REQ@CTServer@@QAEXG@Z ENDP		; CTServer::SendMW_ENDWAR_REQ
PUBLIC	?SendMW_RECALLMONDATA_REQ@CTServer@@QAEXPAVCPacket@@@Z ; CTServer::SendMW_RECALLMONDATA_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132848 DD	0ffffffffH
	DD	FLAT:$L132844
$T132846 DD	019930520H
	DD	01H
	DD	FLAT:$T132848
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_RECALLMONDATA_REQ@CTServer@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT
$T132841 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pPacket$ = 8						; size = 4
?SendMW_RECALLMONDATA_REQ@CTServer@@QAEXPAVCPacket@@@Z PROC NEAR ; CTServer::SendMW_RECALLMONDATA_REQ, COMDAT
; _this$ = ecx

; 2761 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_RECALLMONDATA_REQ@CTServer@@QAEXPAVCPacket@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2762 : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132841[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132843
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132843:

; 2763 : 	pMSG->Copy(pPacket);

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _pPacket$[esp+20]
  0003f	50		 push	 eax
  00040	8b ce		 mov	 ecx, esi
  00042	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0004a	e8 00 00 00 00	 call	 ?Copy@CPacket@@QAEXPAV1@@Z ; CPacket::Copy

; 2764 : 	pMSG->SetID(MW_RECALLMONDATA_REQ);

  0004f	68 17 21 00 00	 push	 8471			; 00002117H
  00054	8b ce		 mov	 ecx, esi
  00056	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 2765 : 	Say(pMSG);

  0005b	8b 17		 mov	 edx, DWORD PTR [edi]
  0005d	56		 push	 esi
  0005e	8b cf		 mov	 ecx, edi
  00060	ff 12		 call	 DWORD PTR [edx]

; 2766 : }

  00062	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0006f	83 c4 10	 add	 esp, 16			; 00000010H
  00072	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132844:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132841[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_RECALLMONDATA_REQ@CTServer@@QAEXPAVCPacket@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132846
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_RECALLMONDATA_REQ@CTServer@@QAEXPAVCPacket@@@Z ENDP ; CTServer::SendMW_RECALLMONDATA_REQ
PUBLIC	?SendMW_RELAYCONNECT_REQ@CTServer@@QAEXKE@Z	; CTServer::SendMW_RELAYCONNECT_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132862 DD	0ffffffffH
	DD	FLAT:$L132858
$T132860 DD	019930520H
	DD	01H
	DD	FLAT:$T132862
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_RELAYCONNECT_REQ@CTServer@@QAEXKE@Z
_TEXT	SEGMENT
$T132855 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_bRelayOn$ = 12						; size = 1
?SendMW_RELAYCONNECT_REQ@CTServer@@QAEXKE@Z PROC NEAR	; CTServer::SendMW_RELAYCONNECT_REQ, COMDAT
; _this$ = ecx

; 2802 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_RELAYCONNECT_REQ@CTServer@@QAEXKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2803 : 	CPacket* pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132855[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132857
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132857:

; 2804 : 	pMSG->SetID(MW_RELAYCONNECT_REQ)
; 2805 : 		<< dwCharID
; 2806 : 		<< bRelayOn;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _bRelayOn$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 1d 21 00 00	 push	 8477			; 0000211dH
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2807 : 
; 2808 : 	Say(pMSG);

  00067	8b 17		 mov	 edx, DWORD PTR [edi]
  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	ff 12		 call	 DWORD PTR [edx]

; 2809 : }

  0006e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132858:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132855[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_RELAYCONNECT_REQ@CTServer@@QAEXKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132860
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_RELAYCONNECT_REQ@CTServer@@QAEXKE@Z ENDP	; CTServer::SendMW_RELAYCONNECT_REQ
PUBLIC	?SendCT_CHATBAN_ACK@CTServer@@QAEXEKK@Z		; CTServer::SendCT_CHATBAN_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132876 DD	0ffffffffH
	DD	FLAT:$L132872
$T132874 DD	019930520H
	DD	01H
	DD	FLAT:$T132876
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendCT_CHATBAN_ACK@CTServer@@QAEXEKK@Z
_TEXT	SEGMENT
$T132869 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bRet$ = 8						; size = 1
_dwBanSeq$ = 12						; size = 4
_dwManagerID$ = 16					; size = 4
?SendCT_CHATBAN_ACK@CTServer@@QAEXEKK@Z PROC NEAR	; CTServer::SendCT_CHATBAN_ACK, COMDAT
; _this$ = ecx

; 2812 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCT_CHATBAN_ACK@CTServer@@QAEXEKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2813 : 	CPacket* pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132869[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132871
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132871:

; 2814 : 	pMSG->SetID(CT_CHATBAN_ACK)
; 2815 : 		<< bRet
; 2816 : 		<< dwBanSeq
; 2817 : 		<< dwManagerID;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwManagerID$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwBanSeq$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _bRet$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 4d 60 00 00	 push	 24653			; 0000604dH
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2818 : 
; 2819 : 	Say(pMSG);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 2820 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132872:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132869[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendCT_CHATBAN_ACK@CTServer@@QAEXEKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132874
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCT_CHATBAN_ACK@CTServer@@QAEXEKK@Z ENDP		; CTServer::SendCT_CHATBAN_ACK
PUBLIC	?SendMW_ITEMSTATE_REQ@CTServer@@QAEXPAVCPacket@@@Z ; CTServer::SendMW_ITEMSTATE_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132890 DD	0ffffffffH
	DD	FLAT:$L132886
$T132888 DD	019930520H
	DD	01H
	DD	FLAT:$T132890
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_ITEMSTATE_REQ@CTServer@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT
$T132883 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pPacket$ = 8						; size = 4
?SendMW_ITEMSTATE_REQ@CTServer@@QAEXPAVCPacket@@@Z PROC NEAR ; CTServer::SendMW_ITEMSTATE_REQ, COMDAT
; _this$ = ecx

; 2823 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_ITEMSTATE_REQ@CTServer@@QAEXPAVCPacket@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2824 : 	CPacket* pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132883[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132885
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132885:

; 2825 : 	pMSG->Copy(pPacket);

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _pPacket$[esp+20]
  0003f	50		 push	 eax
  00040	8b ce		 mov	 ecx, esi
  00042	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0004a	e8 00 00 00 00	 call	 ?Copy@CPacket@@QAEXPAV1@@Z ; CPacket::Copy

; 2826 : 	pMSG->SetID(MW_ITEMSTATE_REQ);

  0004f	68 1f 21 00 00	 push	 8479			; 0000211fH
  00054	8b ce		 mov	 ecx, esi
  00056	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 2827 : 
; 2828 : 	Say(pMSG);

  0005b	8b 17		 mov	 edx, DWORD PTR [edi]
  0005d	56		 push	 esi
  0005e	8b cf		 mov	 ecx, edi
  00060	ff 12		 call	 DWORD PTR [edx]

; 2829 : }

  00062	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0006f	83 c4 10	 add	 esp, 16			; 00000010H
  00072	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132886:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132883[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_ITEMSTATE_REQ@CTServer@@QAEXPAVCPacket@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132888
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_ITEMSTATE_REQ@CTServer@@QAEXPAVCPacket@@@Z ENDP	; CTServer::SendMW_ITEMSTATE_REQ
PUBLIC	?SendCT_ITEMSTATE_ACK@CTServer@@QAEXPAVCPacket@@@Z ; CTServer::SendCT_ITEMSTATE_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132904 DD	0ffffffffH
	DD	FLAT:$L132900
$T132902 DD	019930520H
	DD	01H
	DD	FLAT:$T132904
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendCT_ITEMSTATE_ACK@CTServer@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT
$T132897 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pPacket$ = 8						; size = 4
?SendCT_ITEMSTATE_ACK@CTServer@@QAEXPAVCPacket@@@Z PROC NEAR ; CTServer::SendCT_ITEMSTATE_ACK, COMDAT
; _this$ = ecx

; 2832 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCT_ITEMSTATE_ACK@CTServer@@QAEXPAVCPacket@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2833 : 	CPacket* pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132897[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132899
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132899:

; 2834 : 	pMSG->Copy(pPacket);

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _pPacket$[esp+20]
  0003f	50		 push	 eax
  00040	8b ce		 mov	 ecx, esi
  00042	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0004a	e8 00 00 00 00	 call	 ?Copy@CPacket@@QAEXPAV1@@Z ; CPacket::Copy

; 2835 : 	pMSG->SetID(CT_ITEMSTATE_ACK);

  0004f	68 53 60 00 00	 push	 24659			; 00006053H
  00054	8b ce		 mov	 ecx, esi
  00056	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 2836 : 
; 2837 : 	Say(pMSG);

  0005b	8b 17		 mov	 edx, DWORD PTR [edi]
  0005d	56		 push	 esi
  0005e	8b cf		 mov	 ecx, edi
  00060	ff 12		 call	 DWORD PTR [edx]

; 2838 : }

  00062	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0006f	83 c4 10	 add	 esp, 16			; 00000010H
  00072	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132900:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132897[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendCT_ITEMSTATE_ACK@CTServer@@QAEXPAVCPacket@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132902
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCT_ITEMSTATE_ACK@CTServer@@QAEXPAVCPacket@@@Z ENDP	; CTServer::SendCT_ITEMSTATE_ACK
PUBLIC	?SendMW_MONSTERBUY_REQ@CTServer@@QAEXEKKKGGK@Z	; CTServer::SendMW_MONSTERBUY_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132918 DD	0ffffffffH
	DD	FLAT:$L132914
$T132916 DD	019930520H
	DD	01H
	DD	FLAT:$T132918
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_MONSTERBUY_REQ@CTServer@@QAEXEKKKGGK@Z
_TEXT	SEGMENT
$T132911 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bRet$ = 8						; size = 1
_dwCharID$ = 12						; size = 4
_dwKey$ = 16						; size = 4
_dwGuildID$ = 20					; size = 4
_wNpcID$ = 24						; size = 2
_wID$ = 28						; size = 2
_dwPrice$ = 32						; size = 4
?SendMW_MONSTERBUY_REQ@CTServer@@QAEXEKKKGGK@Z PROC NEAR ; CTServer::SendMW_MONSTERBUY_REQ, COMDAT
; _this$ = ecx

; 2976 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MONSTERBUY_REQ@CTServer@@QAEXEKKKGGK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 2977 : 	CPacket* pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132911[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132913
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132913:

; 2978 : 	pMSG->SetID(MW_MONSTERBUY_REQ)
; 2979 : 		<< bRet
; 2980 : 		<< dwCharID
; 2981 : 		<< dwKey
; 2982 : 		<< dwGuildID
; 2983 : 		<< wNpcID
; 2984 : 		<< wID
; 2985 : 		<< dwPrice;

  0003b	8b 44 24 34	 mov	 eax, DWORD PTR _dwPrice$[esp+20]
  0003f	8b 4c 24 30	 mov	 ecx, DWORD PTR _wID$[esp+20]
  00043	8b 54 24 2c	 mov	 edx, DWORD PTR _wNpcID$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 2c	 mov	 eax, DWORD PTR _dwGuildID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwKey$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 2c	 mov	 edx, DWORD PTR _dwCharID$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 2c	 mov	 eax, DWORD PTR _bRet$[esp+36]
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	50		 push	 eax
  0005e	68 2a 21 00 00	 push	 8490			; 0000212aH
  00063	8b ce		 mov	 ecx, esi
  00065	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+64], -1
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0009c	8b c8		 mov	 ecx, eax
  0009e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2986 : 
; 2987 : 	Say(pMSG);

  000a3	8b 17		 mov	 edx, DWORD PTR [edi]
  000a5	56		 push	 esi
  000a6	8b cf		 mov	 ecx, edi
  000a8	ff 12		 call	 DWORD PTR [edx]

; 2988 : }

  000aa	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b7	83 c4 10	 add	 esp, 16			; 00000010H
  000ba	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132914:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132911[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MONSTERBUY_REQ@CTServer@@QAEXEKKKGGK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132916
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MONSTERBUY_REQ@CTServer@@QAEXEKKKGGK@Z ENDP	; CTServer::SendMW_MONSTERBUY_REQ
PUBLIC	?SendMW_CASHSHOPSTOP_REQ@CTServer@@QAEXEE@Z	; CTServer::SendMW_CASHSHOPSTOP_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132932 DD	0ffffffffH
	DD	FLAT:$L132928
$T132930 DD	019930520H
	DD	01H
	DD	FLAT:$T132932
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CASHSHOPSTOP_REQ@CTServer@@QAEXEE@Z
_TEXT	SEGMENT
$T132925 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bType$ = 8						; size = 1
_bSendPlayer$ = 12					; size = 1
?SendMW_CASHSHOPSTOP_REQ@CTServer@@QAEXEE@Z PROC NEAR	; CTServer::SendMW_CASHSHOPSTOP_REQ, COMDAT
; _this$ = ecx

; 3034 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CASHSHOPSTOP_REQ@CTServer@@QAEXEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3035 : 	CPacket* pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132925[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132927
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132927:

; 3036 : 	pMSG->SetID(MW_CASHSHOPSTOP_REQ)
; 3037 : 		<< bType
; 3038 : 		<< bSendPlayer;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _bSendPlayer$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _bType$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 32 21 00 00	 push	 8498			; 00002132H
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3039 : 
; 3040 : 	Say(pMSG);

  00067	8b 17		 mov	 edx, DWORD PTR [edi]
  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	ff 12		 call	 DWORD PTR [edx]

; 3041 : }

  0006e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132928:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132925[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CASHSHOPSTOP_REQ@CTServer@@QAEXEE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132930
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CASHSHOPSTOP_REQ@CTServer@@QAEXEE@Z ENDP	; CTServer::SendMW_CASHSHOPSTOP_REQ
PUBLIC	?SendMW_CASTLEAPPLICANTCOUNT_REQ@CTServer@@QAEXGKEE@Z ; CTServer::SendMW_CASTLEAPPLICANTCOUNT_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132946 DD	0ffffffffH
	DD	FLAT:$L132942
$T132944 DD	019930520H
	DD	01H
	DD	FLAT:$T132946
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_CASTLEAPPLICANTCOUNT_REQ@CTServer@@QAEXGKEE@Z
_TEXT	SEGMENT
$T132939 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wCastle$ = 8						; size = 2
_dwGuildID$ = 12					; size = 4
_bCamp$ = 16						; size = 1
_bCount$ = 20						; size = 1
?SendMW_CASTLEAPPLICANTCOUNT_REQ@CTServer@@QAEXGKEE@Z PROC NEAR ; CTServer::SendMW_CASTLEAPPLICANTCOUNT_REQ, COMDAT
; _this$ = ecx

; 3105 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CASTLEAPPLICANTCOUNT_REQ@CTServer@@QAEXGKEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3106 : 	CPacket* pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132939[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132941
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132941:

; 3107 : 	pMSG->SetID(MW_CASTLEAPPLICANTCOUNT_REQ)
; 3108 : 		<< wCastle
; 3109 : 		<< dwGuildID
; 3110 : 		<< bCamp
; 3111 : 		<< bCount;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _bCount$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _bCamp$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwGuildID$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _wCastle$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 3c 21 00 00	 push	 8508			; 0000213cH
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3112 : 
; 3113 : 	Say(pMSG);

  0007f	8b 17		 mov	 edx, DWORD PTR [edi]
  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	ff 12		 call	 DWORD PTR [edx]

; 3114 : }

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00093	83 c4 10	 add	 esp, 16			; 00000010H
  00096	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132942:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132939[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CASTLEAPPLICANTCOUNT_REQ@CTServer@@QAEXGKEE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132944
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CASTLEAPPLICANTCOUNT_REQ@CTServer@@QAEXGKEE@Z ENDP ; CTServer::SendMW_CASTLEAPPLICANTCOUNT_REQ
PUBLIC	?SendMW_FAMERANKUPDATE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z ; CTServer::SendMW_FAMERANKUPDATE_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132960 DD	0ffffffffH
	DD	FLAT:$L132956
$T132958 DD	019930520H
	DD	01H
	DD	FLAT:$T132960
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_FAMERANKUPDATE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z
_TEXT	SEGMENT
$T132953 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pBUF$ = 8						; size = 4
?SendMW_FAMERANKUPDATE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z PROC NEAR ; CTServer::SendMW_FAMERANKUPDATE_REQ, COMDAT
; _this$ = ecx

; 3145 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FAMERANKUPDATE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3146 : 	CPacket *pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132953[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132955
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132955:

; 3147 : 
; 3148 : 	pMsg->Copy(&(pBUF->m_packet));

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _pBUF$[esp+20]
  0003f	83 c0 04	 add	 eax, 4
  00042	50		 push	 eax
  00043	8b ce		 mov	 ecx, esi
  00045	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0004d	e8 00 00 00 00	 call	 ?Copy@CPacket@@QAEXPAV1@@Z ; CPacket::Copy

; 3149 : 	pMsg->SetID(MW_FAMERANKUPDATE_REQ);

  00052	68 69 21 00 00	 push	 8553			; 00002169H
  00057	8b ce		 mov	 ecx, esi
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 3150 : 
; 3151 : 	Say(pMsg);

  0005e	8b 17		 mov	 edx, DWORD PTR [edi]
  00060	56		 push	 esi
  00061	8b cf		 mov	 ecx, edi
  00063	ff 12		 call	 DWORD PTR [edx]

; 3152 : }

  00065	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00072	83 c4 10	 add	 esp, 16			; 00000010H
  00075	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132956:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132953[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_FAMERANKUPDATE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132958
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FAMERANKUPDATE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z ENDP ; CTServer::SendMW_FAMERANKUPDATE_REQ
PUBLIC	?SendMW_TERMINATE_REQ@CTServer@@QAEXK@Z		; CTServer::SendMW_TERMINATE_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132974 DD	0ffffffffH
	DD	FLAT:$L132970
$T132972 DD	019930520H
	DD	01H
	DD	FLAT:$T132974
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_TERMINATE_REQ@CTServer@@QAEXK@Z
_TEXT	SEGMENT
$T132967 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwKey$ = 8						; size = 4
?SendMW_TERMINATE_REQ@CTServer@@QAEXK@Z PROC NEAR	; CTServer::SendMW_TERMINATE_REQ, COMDAT
; _this$ = ecx

; 3210 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TERMINATE_REQ@CTServer@@QAEXK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3211 : 	CPacket* pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132967[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132969
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132969:

; 3212 : 	pMSG->SetID(MW_TERMINATE_REQ)
; 3213 : 		<< dwKey;

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _dwKey$[esp+20]
  0003f	50		 push	 eax
  00040	68 62 21 00 00	 push	 8546			; 00002162H
  00045	8b ce		 mov	 ecx, esi
  00047	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  0004f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00054	8b c8		 mov	 ecx, eax
  00056	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 3214 : 
; 3215 : 	Say(pMSG);

  0005b	8b 17		 mov	 edx, DWORD PTR [edi]
  0005d	56		 push	 esi
  0005e	8b cf		 mov	 ecx, edi
  00060	ff 12		 call	 DWORD PTR [edx]

; 3216 : }

  00062	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0006f	83 c4 10	 add	 esp, 16			; 00000010H
  00072	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132970:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132967[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_TERMINATE_REQ@CTServer@@QAEXK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132972
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TERMINATE_REQ@CTServer@@QAEXK@Z ENDP		; CTServer::SendMW_TERMINATE_REQ
PUBLIC	?SendMW_TOURNAMENTENABLE_REQ@CTServer@@QAEXEEK_J@Z ; CTServer::SendMW_TOURNAMENTENABLE_REQ
EXTRN	??6CPacket@@QAEAAV0@_J@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
xdata$x	SEGMENT
$T132988 DD	0ffffffffH
	DD	FLAT:$L132984
$T132986 DD	019930520H
	DD	01H
	DD	FLAT:$T132988
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_TOURNAMENTENABLE_REQ@CTServer@@QAEXEEK_J@Z
_TEXT	SEGMENT
$T132981 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bGroup$ = 8						; size = 1
_bStep$ = 12						; size = 1
_dwPeriod$ = 16						; size = 4
_dlNextStep$ = 20					; size = 8
?SendMW_TOURNAMENTENABLE_REQ@CTServer@@QAEXEEK_J@Z PROC NEAR ; CTServer::SendMW_TOURNAMENTENABLE_REQ, COMDAT
; _this$ = ecx

; 3219 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TOURNAMENTENABLE_REQ@CTServer@@QAEXEEK_J@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3220 : 	CPacket* pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132981[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L132983
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L132983:

; 3221 : 	pMSG->SetID(MW_TOURNAMENTENABLE_REQ)
; 3222 : 		<< bGroup
; 3223 : 		<< bStep
; 3224 : 		<< dwPeriod
; 3225 : 		<< dlNextStep;

  0003b	8b 44 24 2c	 mov	 eax, DWORD PTR _dlNextStep$[esp+24]
  0003f	8b 4c 24 28	 mov	 ecx, DWORD PTR _dlNextStep$[esp+20]
  00043	8b 54 24 24	 mov	 edx, DWORD PTR _dwPeriod$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 24	 mov	 eax, DWORD PTR _bStep$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 24	 mov	 ecx, DWORD PTR _bGroup$[esp+28]
  00051	52		 push	 edx
  00052	50		 push	 eax
  00053	51		 push	 ecx
  00054	68 44 21 00 00	 push	 8516			; 00002144H
  00059	8b ce		 mov	 ecx, esi
  0005b	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00063	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 3226 : 
; 3227 : 	Say(pMSG);

  00084	8b 17		 mov	 edx, DWORD PTR [edi]
  00086	56		 push	 esi
  00087	8b cf		 mov	 ecx, edi
  00089	ff 12		 call	 DWORD PTR [edx]

; 3228 : }

  0008b	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008f	5f		 pop	 edi
  00090	5e		 pop	 esi
  00091	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00098	83 c4 10	 add	 esp, 16			; 00000010H
  0009b	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132984:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132981[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_TOURNAMENTENABLE_REQ@CTServer@@QAEXEEK_J@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132986
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TOURNAMENTENABLE_REQ@CTServer@@QAEXEEK_J@Z ENDP	; CTServer::SendMW_TOURNAMENTENABLE_REQ
PUBLIC	?SendMW_TOURNAMENT_REQ@CTServer@@QAEXPAVCPacket@@@Z ; CTServer::SendMW_TOURNAMENT_REQ
; Function compile flags: /Ogty
;	COMDAT ?SendMW_TOURNAMENT_REQ@CTServer@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT
_pMSG$ = 8						; size = 4
?SendMW_TOURNAMENT_REQ@CTServer@@QAEXPAVCPacket@@@Z PROC NEAR ; CTServer::SendMW_TOURNAMENT_REQ, COMDAT
; _this$ = ecx

; 3231 : {

  00000	56		 push	 esi
  00001	57		 push	 edi

; 3232 : 	pMSG->SetID(MW_TOURNAMENT_REQ);

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _pMSG$[esp+4]
  00006	8b f1		 mov	 esi, ecx
  00008	68 45 21 00 00	 push	 8517			; 00002145H
  0000d	8b cf		 mov	 ecx, edi
  0000f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 3233 : 	Say(pMSG);

  00014	8b 06		 mov	 eax, DWORD PTR [esi]
  00016	57		 push	 edi
  00017	8b ce		 mov	 ecx, esi
  00019	ff 10		 call	 DWORD PTR [eax]
  0001b	5f		 pop	 edi
  0001c	5e		 pop	 esi

; 3234 : }

  0001d	c2 04 00	 ret	 4
?SendMW_TOURNAMENT_REQ@CTServer@@QAEXPAVCPacket@@@Z ENDP ; CTServer::SendMW_TOURNAMENT_REQ
_TEXT	ENDS
PUBLIC	?SendMW_TOURNAMENT_REQ@CTServer@@QAEXKKGE@Z	; CTServer::SendMW_TOURNAMENT_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T133005 DD	0ffffffffH
	DD	FLAT:$L133001
$T133003 DD	019930520H
	DD	01H
	DD	FLAT:$T133005
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_TOURNAMENT_REQ@CTServer@@QAEXKKGE@Z
_TEXT	SEGMENT
$T132998 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wProtocol$ = 16					; size = 2
_bResult$ = 20						; size = 1
?SendMW_TOURNAMENT_REQ@CTServer@@QAEXKKGE@Z PROC NEAR	; CTServer::SendMW_TOURNAMENT_REQ, COMDAT
; _this$ = ecx

; 3237 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TOURNAMENT_REQ@CTServer@@QAEXKKGE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3238 : 	CPacket* pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T132998[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L133000
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L133000:

; 3239 : 	pMSG->SetID(MW_TOURNAMENT_REQ)
; 3240 : 		<< dwCharID
; 3241 : 		<< dwKey
; 3242 : 		<< wProtocol
; 3243 : 		<< bResult;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _bResult$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _wProtocol$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKey$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 45 21 00 00	 push	 8517			; 00002145H
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3244 : 
; 3245 : 	Say(pMSG);

  0007f	8b 17		 mov	 edx, DWORD PTR [edi]
  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	ff 12		 call	 DWORD PTR [edx]

; 3246 : }

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00093	83 c4 10	 add	 esp, 16			; 00000010H
  00096	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L133001:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T132998[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_TOURNAMENT_REQ@CTServer@@QAEXKKGE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T133003
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TOURNAMENT_REQ@CTServer@@QAEXKKGE@Z ENDP	; CTServer::SendMW_TOURNAMENT_REQ
PUBLIC	?SendMW_MISSIONENABLE_REQ@CTServer@@QAEXEKK@Z	; CTServer::SendMW_MISSIONENABLE_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T133019 DD	0ffffffffH
	DD	FLAT:$L133015
$T133017 DD	019930520H
	DD	01H
	DD	FLAT:$T133019
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_MISSIONENABLE_REQ@CTServer@@QAEXEKK@Z
_TEXT	SEGMENT
$T133012 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bStatus$ = 8						; size = 1
_dwStart$ = 12						; size = 4
_dwSecond$ = 16						; size = 4
?SendMW_MISSIONENABLE_REQ@CTServer@@QAEXEKK@Z PROC NEAR	; CTServer::SendMW_MISSIONENABLE_REQ, COMDAT
; _this$ = ecx

; 3363 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MISSIONENABLE_REQ@CTServer@@QAEXEKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3364 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T133012[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L133014
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L133014:

; 3365 : 	pMsg->SetID(MW_MISSIONENABLE_REQ)
; 3366 : 		<< bStatus
; 3367 : 		<< dwStart
; 3368 : 		<< dwSecond;

  0003b	8b 44 24 24	 mov	 eax, DWORD PTR _dwSecond$[esp+20]
  0003f	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwStart$[esp+20]
  00043	8b 54 24 1c	 mov	 edx, DWORD PTR _bStatus$[esp+20]
  00047	50		 push	 eax
  00048	51		 push	 ecx
  00049	52		 push	 edx
  0004a	68 65 21 00 00	 push	 8549			; 00002165H
  0004f	8b ce		 mov	 ecx, esi
  00051	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 3369 : 
; 3370 : 	Say(pMsg);

  00073	8b 07		 mov	 eax, DWORD PTR [edi]
  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	ff 10		 call	 DWORD PTR [eax]

; 3371 : }

  0007a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00087	83 c4 10	 add	 esp, 16			; 00000010H
  0008a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L133015:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T133012[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MISSIONENABLE_REQ@CTServer@@QAEXEKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T133017
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MISSIONENABLE_REQ@CTServer@@QAEXEKK@Z ENDP	; CTServer::SendMW_MISSIONENABLE_REQ
PUBLIC	?SendMW_RPSGAME_REQ@CTServer@@QAEXKKEE@Z	; CTServer::SendMW_RPSGAME_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T133033 DD	0ffffffffH
	DD	FLAT:$L133029
$T133031 DD	019930520H
	DD	01H
	DD	FLAT:$T133033
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_RPSGAME_REQ@CTServer@@QAEXKKEE@Z
_TEXT	SEGMENT
$T133026 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bResult$ = 16						; size = 1
_bPlayerRPS$ = 20					; size = 1
?SendMW_RPSGAME_REQ@CTServer@@QAEXKKEE@Z PROC NEAR	; CTServer::SendMW_RPSGAME_REQ, COMDAT
; _this$ = ecx

; 3374 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_RPSGAME_REQ@CTServer@@QAEXKKEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3375 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T133026[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L133028
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L133028:

; 3376 : 	pMsg->SetID(MW_RPSGAME_REQ)
; 3377 : 		<< dwCharID
; 3378 : 		<< dwKey
; 3379 : 		<< bResult
; 3380 : 		<< bPlayerRPS;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _bPlayerRPS$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _bResult$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwKey$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 6b 21 00 00	 push	 8555			; 0000216bH
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3381 : 
; 3382 : 	Say(pMsg);

  0007f	8b 17		 mov	 edx, DWORD PTR [edi]
  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	ff 12		 call	 DWORD PTR [edx]

; 3383 : }

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00093	83 c4 10	 add	 esp, 16			; 00000010H
  00096	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L133029:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T133026[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_RPSGAME_REQ@CTServer@@QAEXKKEE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T133031
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_RPSGAME_REQ@CTServer@@QAEXKKEE@Z ENDP		; CTServer::SendMW_RPSGAME_REQ
PUBLIC	?SendMW_RPSGAMECHANGE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z ; CTServer::SendMW_RPSGAMECHANGE_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T133047 DD	0ffffffffH
	DD	FLAT:$L133043
$T133045 DD	019930520H
	DD	01H
	DD	FLAT:$T133047
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_RPSGAMECHANGE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z
_TEXT	SEGMENT
$T133040 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pBUF$ = 8						; size = 4
?SendMW_RPSGAMECHANGE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z PROC NEAR ; CTServer::SendMW_RPSGAMECHANGE_REQ, COMDAT
; _this$ = ecx

; 3386 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_RPSGAMECHANGE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3387 : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T133040[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L133042
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L133042:

; 3388 : 	pMsg->Copy(&(pBUF->m_packet));

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _pBUF$[esp+20]
  0003f	83 c0 04	 add	 eax, 4
  00042	50		 push	 eax
  00043	8b ce		 mov	 ecx, esi
  00045	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0004d	e8 00 00 00 00	 call	 ?Copy@CPacket@@QAEXPAV1@@Z ; CPacket::Copy

; 3389 : 	pMsg->SetID(MW_RPSGAMECHANGE_REQ);

  00052	68 6d 21 00 00	 push	 8557			; 0000216dH
  00057	8b ce		 mov	 ecx, esi
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 3390 : 
; 3391 : 	Say(pMsg);

  0005e	8b 17		 mov	 edx, DWORD PTR [edi]
  00060	56		 push	 esi
  00061	8b cf		 mov	 ecx, edi
  00063	ff 12		 call	 DWORD PTR [edx]

; 3392 : }

  00065	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00072	83 c4 10	 add	 esp, 16			; 00000010H
  00075	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L133043:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T133040[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_RPSGAMECHANGE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T133045
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_RPSGAMECHANGE_REQ@CTServer@@QAEXPAUtagPACKETBUF@@@Z ENDP ; CTServer::SendMW_RPSGAMECHANGE_REQ
PUBLIC	?SendMW_APEXDATA_REQ@CTServer@@QAEXKKPADH@Z	; CTServer::SendMW_APEXDATA_REQ
EXTRN	??6CPacket@@QAEAAV0@H@Z:NEAR			; CPacket::operator<<
EXTRN	?AttachBinary@CPacket@@QAEXPAXH@Z:NEAR		; CPacket::AttachBinary
;	COMDAT xdata$x
xdata$x	SEGMENT
$T133061 DD	0ffffffffH
	DD	FLAT:$L133057
$T133059 DD	019930520H
	DD	01H
	DD	FLAT:$T133061
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_APEXDATA_REQ@CTServer@@QAEXKKPADH@Z
_TEXT	SEGMENT
$T133054 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_pBuf$ = 16						; size = 4
_nBufLen$ = 20						; size = 4
?SendMW_APEXDATA_REQ@CTServer@@QAEXKKPADH@Z PROC NEAR	; CTServer::SendMW_APEXDATA_REQ, COMDAT
; _this$ = ecx

; 3398 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_APEXDATA_REQ@CTServer@@QAEXKKPADH@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi

; 3399 : 	CPacket* pMSG = new CPacket();

  00019	6a 1c		 push	 28			; 0000001cH
  0001b	8b f9		 mov	 edi, ecx
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	83 c4 04	 add	 esp, 4
  00025	89 44 24 0c	 mov	 DWORD PTR $T133054[esp+28], eax
  00029	33 f6		 xor	 esi, esi
  0002b	3b c6		 cmp	 eax, esi
  0002d	89 74 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], esi
  00031	74 09		 je	 SHORT $L133056
  00033	8b c8		 mov	 ecx, eax
  00035	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003a	8b f0		 mov	 esi, eax
$L133056:

; 3400 : 	pMSG->SetID(MW_APEXDATA_REQ)
; 3401 : 		<< dwCharID
; 3402 : 		<< dwKey
; 3403 : 		<< nBufLen;

  0003c	8b 5c 24 2c	 mov	 ebx, DWORD PTR _nBufLen$[esp+24]
  00040	8b 44 24 24	 mov	 eax, DWORD PTR _dwKey$[esp+24]
  00044	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwCharID$[esp+24]
  00048	53		 push	 ebx
  00049	50		 push	 eax
  0004a	51		 push	 ecx
  0004b	68 00 29 00 00	 push	 10496			; 00002900H
  00050	8b ce		 mov	 ecx, esi
  00052	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005a	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005f	8b c8		 mov	 ecx, eax
  00061	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00066	8b c8		 mov	 ecx, eax
  00068	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006d	8b c8		 mov	 ecx, eax
  0006f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@H@Z	; CPacket::operator<<

; 3404 : 
; 3405 : 	pMSG->AttachBinary((LPVOID)pBuf, nBufLen);

  00074	8b 54 24 28	 mov	 edx, DWORD PTR _pBuf$[esp+24]
  00078	53		 push	 ebx
  00079	52		 push	 edx
  0007a	8b ce		 mov	 ecx, esi
  0007c	e8 00 00 00 00	 call	 ?AttachBinary@CPacket@@QAEXPAXH@Z ; CPacket::AttachBinary

; 3406 : 
; 3407 : 	Say(pMSG);

  00081	8b 07		 mov	 eax, DWORD PTR [edi]
  00083	56		 push	 esi
  00084	8b cf		 mov	 ecx, edi
  00086	ff 10		 call	 DWORD PTR [eax]

; 3408 : }

  00088	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  0008c	5f		 pop	 edi
  0008d	5e		 pop	 esi
  0008e	5b		 pop	 ebx
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00096	83 c4 10	 add	 esp, 16			; 00000010H
  00099	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L133057:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T133054[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_APEXDATA_REQ@CTServer@@QAEXKKPADH@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T133059
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_APEXDATA_REQ@CTServer@@QAEXKKPADH@Z ENDP	; CTServer::SendMW_APEXDATA_REQ
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEIXZ ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	75 01		 jne	 SHORT $L133070

; 517  : 		}

  00007	c3		 ret	 0
$L133070:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00008	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000b	2b c8		 sub	 ecx, eax
  0000d	b8 e9 a2 8b 2e	 mov	 eax, 780903145		; 2e8ba2e9H
  00012	f7 e9		 imul	 ecx
  00014	c1 fa 03	 sar	 edx, 3
  00017	8b c2		 mov	 eax, edx
  00019	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001c	03 c2		 add	 eax, edx

; 517  : 		}

  0001e	c3		 ret	 0
?size@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBEIXZ ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L133096
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L133096:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBEIXZ ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L133101
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L133101:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 04	 sar	 eax, 4

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L133115
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L133115:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@KV?$allocator@K@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L133120
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L133120:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 04	 sar	 eax, 4

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBEIXZ ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	75 01		 jne	 SHORT $L133128

; 517  : 		}

  00007	c3		 ret	 0
$L133128:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00008	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000b	2b c8		 sub	 ecx, eax
  0000d	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00012	f7 e9		 imul	 ecx
  00014	c1 fa 03	 sar	 edx, 3
  00017	8b c2		 mov	 eax, edx
  00019	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001c	03 c2		 add	 eax, edx

; 517  : 		}

  0001e	c3		 ret	 0
?size@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBEIXZ ENDP ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBEIXZ ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L133133
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L133133:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 06	 sar	 eax, 6

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::size
_TEXT	ENDS
PUBLIC	?size@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBEIXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?size@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBEIXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::size, COMDAT
; _this$ = ecx

; 448  : 		return (_Mysize);

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]

; 449  : 		}

  00003	c3		 ret	 0
?size@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBEIXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::size
_TEXT	ENDS
PUBLIC	??R?$less@K@std@@QBE_NABK0@Z			; std::less<unsigned long>::operator()
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\functional
;	COMDAT ??R?$less@K@std@@QBE_NABK0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??R?$less@K@std@@QBE_NABK0@Z PROC NEAR			; std::less<unsigned long>::operator(), COMDAT
; _this$ = ecx

; 139  : 		return (_Left < _Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8b 54 24 08	 mov	 edx, DWORD PTR __Right$[esp-4]
  0000a	3b 0a		 cmp	 ecx, DWORD PTR [edx]
  0000c	1b c0		 sbb	 eax, eax
  0000e	f7 d8		 neg	 eax

; 140  : 		}

  00010	c2 08 00	 ret	 8
??R?$less@K@std@@QBE_NABK0@Z ENDP			; std::less<unsigned long>::operator()
_TEXT	ENDS
PUBLIC	?size@?$vector@_JV?$allocator@_J@std@@@std@@QBEIXZ ; std::vector<__int64,std::allocator<__int64> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@_JV?$allocator@_J@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@_JV?$allocator@_J@std@@@std@@QBEIXZ PROC NEAR ; std::vector<__int64,std::allocator<__int64> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L133144
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L133144:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 03	 sar	 eax, 3

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@_JV?$allocator@_J@std@@@std@@QBEIXZ ENDP	; std::vector<__int64,std::allocator<__int64> >::size
_TEXT	ENDS
PUBLIC	??0?$allocator@_J@std@@QAE@ABV01@@Z		; std::allocator<__int64>::allocator<__int64>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@_J@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@_J@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<__int64>::allocator<__int64>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@_J@std@@QAE@ABV01@@Z ENDP		; std::allocator<__int64>::allocator<__int64>
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTCHARACTER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTCHARACTER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTCHARACTER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTCHARACTER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Kfn@?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTSOULMATE@@@2@@Z ; std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0>::_Kfn
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\map
;	COMDAT ?_Kfn@?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTSOULMATE@@@2@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?_Kfn@?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTSOULMATE@@@2@@Z PROC NEAR ; std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0>::_Kfn, COMDAT

; 64   : 		return (_Val.first);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Val$[esp-4]

; 65   : 		}

  00004	c3		 ret	 0
?_Kfn@?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@SAABKABU?$pair@$$CBKPAUtagTSOULMATE@@@2@@Z ENDP ; std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0>::_Kfn
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTNMTPLAYER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Myval
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTNMTPLAYER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTNMTPLAYER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTNMTPLAYER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAU?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKK@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@_J@std@@QAEXPA_JI@Z	; std::allocator<__int64>::deallocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@_J@std@@QAEXPA_JI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@_J@std@@QAEXPA_JI@Z PROC NEAR	; std::allocator<__int64>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@_J@std@@QAEXPA_JI@Z ENDP	; std::allocator<__int64>::deallocate
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Left
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTITEM@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTITEM@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTITEM@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTITEM@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGUtagTRPSGAME@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGUtagTRPSGAME@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGUtagTRPSGAME@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBGUtagTRPSGAME@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKUtagTGUILDWANTED@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKUtagTGUILDWANTED@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKUtagTGUILDWANTED@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 10	 add	 eax, 16			; 00000010H

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKUtagTGUILDWANTED@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAU?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEABUtagTENTRYRECORD@@XZ ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::const_iterator::operator*
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Dconst_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEABUtagTENTRYRECORD@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEABUtagTENTRYRECORD@@XZ PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEABUtagTENTRYRECORD@@XZ ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBEABQAUtagTCHARACTER@@XZ ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBEABQAUtagTCHARACTER@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBEABQAUtagTCHARACTER@@XZ PROC NEAR ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBEABQAUtagTCHARACTER@@XZ ENDP ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	c1 e1 04	 shl	 ecx, 4
  0000b	03 d1		 add	 edx, ecx
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBEABUtagTNMTREWARD@@XZ ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBEABUtagTNMTREWARD@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBEABUtagTNMTREWARD@@XZ PROC NEAR ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBEABUtagTNMTREWARD@@XZ ENDP ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QAE@PA_J@Z ; std::vector<__int64,std::allocator<__int64> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QAE@PA_J@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QAE@PA_J@Z PROC NEAR ; std::vector<__int64,std::allocator<__int64> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QAE@PA_J@Z ENDP ; std::vector<__int64,std::allocator<__int64> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@KV?$allocator@K@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@KV?$allocator@K@std@@@std@@QBEABKXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	c1 e1 04	 shl	 ecx, 4
  0000b	03 d1		 add	 edx, ecx
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEABUtagTGUILDPOINTREWARD@@XZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEABUtagTGUILDPOINTREWARD@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEABUtagTGUILDPOINTREWARD@@XZ PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEABUtagTGUILDPOINTREWARD@@XZ ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAEAAV012@H@Z ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	8d 0c 89	 lea	 ecx, DWORD PTR [ecx+ecx*4]
  0000b	c1 e1 02	 shl	 ecx, 2
  0000e	03 d1		 add	 edx, ecx
  00010	89 10		 mov	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  00012	c2 04 00	 ret	 4
??Yiterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBEABULOTPACKET@@XZ ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBEABULOTPACKET@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBEABULOTPACKET@@XZ PROC NEAR ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBEABULOTPACKET@@XZ ENDP ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	c1 e1 06	 shl	 ecx, 6
  0000b	03 d1		 add	 edx, ecx
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBEABUtagTGUILDTACTICSWANTED@@XZ ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBEABUtagTGUILDTACTICSWANTED@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBEABUtagTGUILDTACTICSWANTED@@XZ PROC NEAR ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBEABUtagTGUILDTACTICSWANTED@@XZ ENDP ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@_J@std@@QBEIXZ		; std::allocator<__int64>::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?max_size@?$allocator@_J@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@_J@std@@QBEIXZ PROC NEAR		; std::allocator<__int64>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 159  : 		}

  00005	c3		 ret	 0
?max_size@?$allocator@_J@std@@QBEIXZ ENDP		; std::allocator<__int64>::max_size
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEUtagCASTLETOP3@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Myval
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEUtagCASTLETOP3@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEUtagCASTLETOP3@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEUtagCASTLETOP3@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator+=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Yiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	6b c9 2c	 imul	 ecx, 44			; 0000002cH
  0000b	03 d1		 add	 edx, ecx
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAE@PAPAUtagTCHARACTER@@@Z ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAE@PAPAUtagTCHARACTER@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAE@PAPAUtagTCHARACTER@@@Z PROC NEAR ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAE@PAPAUtagTCHARACTER@@@Z ENDP ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAE@PAUtagTNMTREWARD@@@Z ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAE@PAUtagTNMTREWARD@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAE@PAUtagTNMTREWARD@@@Z PROC NEAR ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAE@PAUtagTNMTREWARD@@@Z ENDP ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAE@PAULOTPACKET@@@Z ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAE@PAULOTPACKET@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAE@PAULOTPACKET@@@Z PROC NEAR ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAE@PAULOTPACKET@@@Z ENDP ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAE@PAUtagTGUILDTACTICSWANTED@@@Z ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAE@PAUtagTGUILDTACTICSWANTED@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAE@PAUtagTGUILDTACTICSWANTED@@@Z PROC NEAR ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAE@PAUtagTGUILDTACTICSWANTED@@@Z ENDP ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L130289
  0000d	8d 49 00	 npad	 3
$L130288:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L130288
$L130289:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L130299
  0000d	8d 49 00	 npad	 3
$L130298:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L130298
$L130299:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L130309
  0000d	8d 49 00	 npad	 3
$L130308:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L130308
$L130309:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L130319
  0000d	8d 49 00	 npad	 3
$L130318:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L130318
$L130319:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L130329
  0000d	8d 49 00	 npad	 3
$L130328:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L130328
$L130329:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L130339
  0000d	8d 49 00	 npad	 3
$L130338:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L130338
$L130339:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L130349
  0000d	8d 49 00	 npad	 3
$L130348:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L130348
$L130349:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 2d	 add	 eax, 45			; 0000002dH

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 2d	 mov	 dl, BYTE PTR [ecx+45]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L130359
  0000d	8d 49 00	 npad	 3
$L130358:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 2d	 mov	 dl, BYTE PTR [ecx+45]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L130358
$L130359:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 41	 add	 eax, 65			; 00000041H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 41	 mov	 dl, BYTE PTR [ecx+65]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L130369
  0000d	8d 49 00	 npad	 3
$L130368:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 41	 mov	 dl, BYTE PTR [ecx+65]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L130368
$L130369:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 21	 add	 eax, 33			; 00000021H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 21	 mov	 dl, BYTE PTR [ecx+33]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L130379
  0000d	8d 49 00	 npad	 3
$L130378:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 21	 mov	 dl, BYTE PTR [ecx+33]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L130378
$L130379:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L130389
  0000d	8d 49 00	 npad	 3
$L130388:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L130388
$L130389:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<unsigned short,std::allocator<unsigned short> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<unsigned short,std::allocator<unsigned short> >, COMDAT

; 234  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<unsigned short,std::allocator<unsigned short> >
_TEXT	ENDS
PUBLIC	??$_Allocate@_J@std@@YAPA_JIPA_J@Z		; std::_Allocate<__int64>
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@_J@std@@YAPA_JIPA_J@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@_J@std@@YAPA_JIPA_J@Z PROC NEAR		; std::_Allocate<__int64>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 35   : 	}

  00014	c3		 ret	 0
??$_Allocate@_J@std@@YAPA_JIPA_J@Z ENDP			; std::_Allocate<__int64>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@_JV?$allocator@_J@std@@@std@@YAXPA_J0AAV?$allocator@_J@0@U_Scalar_ptr_iterator_tag@0@@Z ; std::_Destroy_range<__int64,std::allocator<__int64> >
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy_range@_JV?$allocator@_J@std@@@std@@YAXPA_J0AAV?$allocator@_J@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range@_JV?$allocator@_J@std@@@std@@YAXPA_J0AAV?$allocator@_J@0@U_Scalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Destroy_range<__int64,std::allocator<__int64> >, COMDAT

; 234  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@_JV?$allocator@_J@std@@@std@@YAXPA_J0AAV?$allocator@_J@0@U_Scalar_ptr_iterator_tag@0@@Z ENDP ; std::_Destroy_range<__int64,std::allocator<__int64> >
_TEXT	ENDS
PUBLIC	??$_Ptr_cat@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@PA_J@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAVconst_iterator@?$vector@_JV?$allocator@_J@std@@@0@AAPA_J@Z ; std::_Ptr_cat<std::vector<__int64,std::allocator<__int64> >::const_iterator,__int64 *>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ??$_Ptr_cat@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@PA_J@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAVconst_iterator@?$vector@_JV?$allocator@_J@std@@@0@AAPA_J@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_cat@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@PA_J@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAVconst_iterator@?$vector@_JV?$allocator@_J@std@@@0@AAPA_J@Z PROC NEAR ; std::_Ptr_cat<std::vector<__int64,std::allocator<__int64> >::const_iterator,__int64 *>, COMDAT

; 211  : 	{	// return pointer category from arbitrary arguments

  00000	51		 push	 ecx

; 212  : 	_Nonscalar_ptr_iterator_tag _Cat;
; 213  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 214  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
??$_Ptr_cat@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@PA_J@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAVconst_iterator@?$vector@_JV?$allocator@_J@std@@@0@AAPA_J@Z ENDP ; std::_Ptr_cat<std::vector<__int64,std::allocator<__int64> >::const_iterator,__int64 *>
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QBEAB_JXZ ; std::vector<__int64,std::allocator<__int64> >::const_iterator::operator*
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Dconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QBEAB_JXZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QBEAB_JXZ PROC NEAR ; std::vector<__int64,std::allocator<__int64> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QBEAB_JXZ ENDP ; std::vector<__int64,std::allocator<__int64> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QAEAAV012@XZ ; std::vector<__int64,std::allocator<__int64> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::vector<__int64,std::allocator<__int64> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 91   : 			{	// preincrement

  00000	8b c1		 mov	 eax, ecx

; 92   : 			++_Myptr;

  00002	83 00 08	 add	 DWORD PTR [eax], 8

; 93   : 			return (*this);
; 94   : 			}

  00005	c3		 ret	 0
??Econst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QAEAAV012@XZ ENDP ; std::vector<__int64,std::allocator<__int64> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??8const_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QBE_NABV012@@Z ; std::vector<__int64,std::allocator<__int64> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::vector<__int64,std::allocator<__int64> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 153  : 
; 154  : 
; 155  : 			return (_Myptr == _Right._Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 156  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QBE_NABV012@@Z ENDP ; std::vector<__int64,std::allocator<__int64> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??$_Destroy@_J@std@@YAXPA_J@Z			; std::_Destroy<__int64>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy@_J@std@@YAXPA_J@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@_J@std@@YAXPA_J@Z PROC NEAR			; std::_Destroy<__int64>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@_J@std@@YAXPA_J@Z ENDP			; std::_Destroy<__int64>
_TEXT	ENDS
PUBLIC	?data@CStringData@ATL@@QAEPAXXZ			; ATL::CStringData::data
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT
?data@CStringData@ATL@@QAEPAXXZ PROC NEAR		; ATL::CStringData::data, COMDAT
; _this$ = ecx

; 66   : 		return (this+1);

  00000	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]

; 67   : 	}

  00003	c3		 ret	 0
?data@CStringData@ATL@@QAEPAXXZ ENDP			; ATL::CStringData::data
_TEXT	ENDS
PUBLIC	?IsLocked@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsLocked
; Function compile flags: /Ogty
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
?IsLocked@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsLocked, COMDAT
; _this$ = ecx

; 76   : 		return nRefs < 0;

  00000	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00003	33 c0		 xor	 eax, eax
  00005	85 d2		 test	 edx, edx
  00007	0f 9c c0	 setl	 al

; 77   : 	}

  0000a	c3		 ret	 0
?IsLocked@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsLocked
_TEXT	ENDS
PUBLIC	?IsShared@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsShared
; Function compile flags: /Ogty
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
?IsShared@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsShared, COMDAT
; _this$ = ecx

; 80   : 		return( nRefs > 1 ); 

  00000	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00003	33 c0		 xor	 eax, eax
  00005	83 fa 01	 cmp	 edx, 1
  00008	0f 9f c0	 setg	 al

; 81   : 	}

  0000b	c3		 ret	 0
?IsShared@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsShared
_TEXT	ENDS
PUBLIC	?Release@CStringData@ATL@@QAEXXZ		; ATL::CStringData::Release
; Function compile flags: /Ogty
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
?Release@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::Release, COMDAT
; _this$ = ecx

; 93   : 		ATLASSERT( nRefs != 0 );
; 94   : 
; 95   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

  00000	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  00003	83 ca ff	 or	 edx, -1
  00006	f0 0f c1 10	 lock	  xadd	 DWORD PTR [eax], edx
  0000a	4a		 dec	 edx
  0000b	85 d2		 test	 edx, edx
  0000d	7f 0a		 jg	 SHORT $L73499

; 96   : 		{
; 97   : 			pStringMgr->Free( this );

  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	8b 10		 mov	 edx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	8b c8		 mov	 ecx, eax
  00016	ff 52 04	 call	 DWORD PTR [edx+4]
$L73499:

; 98   : 		}
; 99   : 	}

  00019	c3		 ret	 0
?Release@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::Release
_TEXT	ENDS
PUBLIC	??2@YAPAXIPAX@Z					; operator new
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__P$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC NEAR				; operator new, COMDAT

; 109  :         {return (_P); }

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __P$[esp-4]
  00004	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC NEAR	; std::char_traits<char>::assign, COMDAT

; 331  : 		_Left = _Right;

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Right$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	8b 54 24 04	 mov	 edx, DWORD PTR __Left$[esp-4]
  0000a	88 0a		 mov	 BYTE PTR [edx], cl

; 332  : 		}

  0000c	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogty
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC NEAR		; std::char_traits<char>::length, COMDAT

; 352  : 		return (::strlen(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L133724:
  00007	8a 08		 mov	 cl, BYTE PTR [eax]
  00009	40		 inc	 eax
  0000a	84 c9		 test	 cl, cl
  0000c	75 f9		 jne	 SHORT $L133724
  0000e	2b c2		 sub	 eax, edx

; 353  : 		}

  00010	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
; Function compile flags: /Ogty
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::copy, COMDAT

; 358  : 		return ((_Elem *)::memcpy(_First1, _First2, _Count));

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR __First2$[esp]
  00009	57		 push	 edi
  0000a	8b 7c 24 0c	 mov	 edi, DWORD PTR __First1$[esp+4]
  0000e	8b c1		 mov	 eax, ecx
  00010	8b d7		 mov	 edx, edi
  00012	c1 e9 02	 shr	 ecx, 2
  00015	f3 a5		 rep movsd
  00017	8b c8		 mov	 ecx, eax
  00019	83 e1 03	 and	 ecx, 3
  0001c	f3 a4		 rep movsb
  0001e	5f		 pop	 edi
  0001f	8b c2		 mov	 eax, edx
  00021	5e		 pop	 esi

; 359  : 		}

  00022	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
EXTRN	_memmove:NEAR
; Function compile flags: /Ogty
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::move, COMDAT

; 370  : 		return ((_Elem *)::memmove(_First1, _First2, _Count));

  00000	e9 00 00 00 00	 jmp	 _memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z ; std::_Ptr_cat
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z PROC NEAR ; std::_Ptr_cat, COMDAT

; 322  : 	{	// return pointer category from pointer to unsigned short arguments

  00000	51		 push	 ecx

; 323  : 	_Scalar_ptr_iterator_tag _Cat;
; 324  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 325  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z ENDP ; std::_Ptr_cat
_TEXT	ENDS
PUBLIC	?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PA_J0@Z ; std::_Ptr_cat
; Function compile flags: /Ogty
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PA_J0@Z
_TEXT	SEGMENT
__Cat$ = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PA_J0@Z PROC NEAR ; std::_Ptr_cat, COMDAT

; 421  : 	{	// return pointer category from pointer to long long arguments

  00000	51		 push	 ecx

; 422  : 	_Scalar_ptr_iterator_tag _Cat;
; 423  : 	return (_Cat);

  00001	8a 44 24 03	 mov	 al, BYTE PTR __Cat$[esp+4]

; 424  : 	}

  00005	59		 pop	 ecx
  00006	c3		 ret	 0
?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PA_J0@Z ENDP ; std::_Ptr_cat
_TEXT	ENDS
PUBLIC	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ		; ATL::CSimpleStringT<char,0>::operator char const *
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::operator char const *, COMDAT
; _this$ = ecx

; 379  : 		return( m_pszData );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 380  : 	}

  00002	c3		 ret	 0
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP		; ATL::CSimpleStringT<char,0>::operator char const *
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1109 : 		return (_Mysize);

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]

; 1110 : 		}

  00003	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEIXZ ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L133747
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L133747:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L133752
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L133752:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	d1 f8		 sar	 eax, 1

; 517  : 		}

  00011	c3		 ret	 0
?size@?$vector@GV?$allocator@G@std@@@std@@QBEIXZ ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBEIXZ ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	75 01		 jne	 SHORT $L133757

; 517  : 		}

  00007	c3		 ret	 0
$L133757:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00008	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000b	2b c8		 sub	 ecx, eax
  0000d	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00012	f7 e9		 imul	 ecx
  00014	c1 fa 02	 sar	 edx, 2
  00017	8b c2		 mov	 eax, edx
  00019	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001c	03 c2		 add	 eax, edx

; 517  : 		}

  0001e	c3		 ret	 0
?size@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBEIXZ ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::size
; Function compile flags: /Ogty
;	COMDAT ?size@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	75 01		 jne	 SHORT $L133762

; 517  : 		}

  00007	c3		 ret	 0
$L133762:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00008	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000b	2b c8		 sub	 ecx, eax
  0000d	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00012	f7 e9		 imul	 ecx
  00014	8b c2		 mov	 eax, edx
  00016	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00019	03 c2		 add	 eax, edx

; 517  : 		}

  0001b	c3		 ret	 0
?size@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::size
_TEXT	ENDS
PUBLIC	?FindStringResourceInstance@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUHINSTANCE__@@I@Z ; ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> >::FindStringResourceInstance
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlstr.h
;	COMDAT ?FindStringResourceInstance@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_nID$ = 8						; size = 4
?FindStringResourceInstance@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUHINSTANCE__@@I@Z PROC NEAR ; ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> >::FindStringResourceInstance, COMDAT

; 949  : 		return( AtlFindStringResourceInstance( nID ) );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nID$[esp-4]
  00004	6a 00		 push	 0
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z ; ATL::AtlFindStringResourceInstance
  0000c	83 c4 08	 add	 esp, 8

; 950  : 	}

  0000f	c3		 ret	 0
?FindStringResourceInstance@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUHINSTANCE__@@I@Z ENDP ; ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> >::FindStringResourceInstance
_TEXT	ENDS
PUBLIC	?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ ; ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
EXTRN	?g_strmgr@ATL@@3VCAtlStringMgr@1@A:BYTE		; ATL::g_strmgr
; Function compile flags: /Ogty
;	COMDAT ?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT
?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ PROC NEAR ; ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> >::GetDefaultManager, COMDAT

; 954  : 		return( &g_strmgr );

  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr

; 955  : 	}

  00005	c3		 ret	 0
?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ ENDP ; ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> >::GetDefaultManager
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L133773
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  00009	c3		 ret	 0
$L133773:

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 193  : 			{	// construct with null node pointer

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 194  : 			}

  00008	c3		 ret	 0
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ	; ATL::CSimpleStringT<char,0>::GetString
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetString, COMDAT
; _this$ = ecx

; 510  : 		return( m_pszData );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 511  : 	}

  00002	c3		 ret	 0
?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP	; ATL::CSimpleStringT<char,0>::GetString
_TEXT	ENDS
PUBLIC	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
; Function compile flags: /Ogty
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT
_pData$ = 8						; size = 4
?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Attach, COMDAT
; _this$ = ecx

; 712  : 		m_pszData = static_cast< PXSTR >( pData->data() );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _pData$[esp-4]
  00004	83 c0 10	 add	 eax, 16			; 00000010H
  00007	89 01		 mov	 DWORD PTR [ecx], eax

; 713  : 	}

  00009	c2 04 00	 ret	 4
?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ENDP ; ATL::CSimpleStringT<char,0>::Attach
_TEXT	ENDS
PUBLIC	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
; Function compile flags: /Ogty
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetData, COMDAT
; _this$ = ecx

; 731  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 732  : 	}

  00005	c3		 ret	 0
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ENDP ; ATL::CSimpleStringT<char,0>::GetData
_TEXT	ENDS
PUBLIC	?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z ; ATL::ChTraitsCRT<char>::GetBaseTypeLength
EXTRN	__imp__WideCharToMultiByte@32:NEAR
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z
_TEXT	SEGMENT
_pszSource$ = 8						; size = 4
_nLength$ = 12						; size = 4
?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z PROC NEAR ; ATL::ChTraitsCRT<char>::GetBaseTypeLength, COMDAT

; 437  : 		// Returns required buffer length in XCHARs
; 438  : 		return ::WideCharToMultiByte( _AtlGetConversionACP(), 0, pszSource, nLength, NULL, 0, NULL, NULL );

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _nLength$[esp-4]
  00004	8b 4c 24 04	 mov	 ecx, DWORD PTR _pszSource$[esp-4]
  00008	6a 00		 push	 0
  0000a	6a 00		 push	 0
  0000c	6a 00		 push	 0
  0000e	6a 00		 push	 0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	6a 00		 push	 0
  00014	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  0001a	50		 push	 eax
  0001b	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32

; 439  : 	}

  00021	c3		 ret	 0
?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z ENDP	; ATL::ChTraitsCRT<char>::GetBaseTypeLength
_TEXT	ENDS
PUBLIC	?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z ; ATL::ChTraitsCRT<char>::ConvertToBaseType
; Function compile flags: /Ogty
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z
_TEXT	SEGMENT
_pszDest$ = 8						; size = 4
_nDestLength$ = 12					; size = 4
_pszSrc$ = 16						; size = 4
_nSrcLength$ = 20					; size = 4
?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z PROC NEAR ; ATL::ChTraitsCRT<char>::ConvertToBaseType, COMDAT

; 452  : 		// nLen is in XCHARs
; 453  : 		::WideCharToMultiByte( _AtlGetConversionACP(), 0, pszSrc, nSrcLength, pszDest, nDestLength, NULL, NULL );

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _nDestLength$[esp-4]
  00004	8b 4c 24 04	 mov	 ecx, DWORD PTR _pszDest$[esp-4]
  00008	8b 54 24 10	 mov	 edx, DWORD PTR _nSrcLength$[esp-4]
  0000c	6a 00		 push	 0
  0000e	6a 00		 push	 0
  00010	50		 push	 eax
  00011	8b 44 24 18	 mov	 eax, DWORD PTR _pszSrc$[esp+8]
  00015	51		 push	 ecx
  00016	52		 push	 edx
  00017	50		 push	 eax
  00018	6a 00		 push	 0
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00020	50		 push	 eax
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32

; 454  : 	}

  00027	c3		 ret	 0
?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z ENDP ; ATL::ChTraitsCRT<char>::ConvertToBaseType
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L133820
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  00009	c3		 ret	 0
$L133820:

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC NEAR	; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagTCHARCON@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagTCHARCON@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagTCHARCON@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBEPAUtagTCHARCON@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@I@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Node>::deallocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@I@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@I@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Node>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@I@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Node>::deallocate
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTFRIEND@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTFRIEND@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTFRIEND@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTFRIEND@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTSOULMATE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Myval
; Function compile flags: /Ogty
;	COMDAT ?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTSOULMATE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTSOULMATE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Myval, COMDAT

; 162  : 		return ((_Vref)(*_Pnode)._Myval);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 163  : 		}

  00007	c3		 ret	 0
?_Myval@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAAAU?$pair@$$CBKPAUtagTSOULMATE@@@2@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Myval
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Right
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Right
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@G@std@@QAEXPAGI@Z	; std::allocator<unsigned short>::deallocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAGI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@G@std@@QAEXPAGI@Z PROC NEAR	; std::allocator<unsigned short>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@G@std@@QAEXPAGI@Z ENDP		; std::allocator<unsigned short>::deallocate
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Isnil
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 1d	 add	 eax, 29			; 0000001dH

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Left@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Left
; Function compile flags: /Ogty
;	COMDAT ?_Left@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Left@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Left, COMDAT

; 147  : 		return ((_Nodepref)(*_Pnode)._Left);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]

; 148  : 		}

  00004	c3		 ret	 0
?_Left@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Left
_TEXT	ENDS
PUBLIC	?_Parent@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Parent
; Function compile flags: /Ogty
;	COMDAT ?_Parent@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Parent@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Parent, COMDAT

; 152  : 		return ((_Nodepref)(*_Pnode)._Parent);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 04	 add	 eax, 4

; 153  : 		}

  00007	c3		 ret	 0
?_Parent@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Parent
_TEXT	ENDS
PUBLIC	?_Right@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Right
; Function compile flags: /Ogty
;	COMDAT ?_Right@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Right@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Right, COMDAT

; 157  : 		return ((_Nodepref)(*_Pnode)._Right);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 08	 add	 eax, 8

; 158  : 		}

  00007	c3		 ret	 0
?_Right@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Right
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::operator+=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Yiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEABUtagTCASHITMSALE@@XZ ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEABUtagTCASHITMSALE@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEABUtagTCASHITMSALE@@XZ PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEABUtagTCASHITMSALE@@XZ ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@GV?$allocator@G@std@@@std@@QAEAAV012@H@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@GV?$allocator@G@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@GV?$allocator@G@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 09	 lea	 edx, DWORD PTR [ecx+ecx]
  00009	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000b	c2 04 00	 ret	 4
??Yiterator@?$vector@GV?$allocator@G@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@GV?$allocator@G@std@@@std@@QBEABGXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@GV?$allocator@G@std@@@std@@QBEABGXZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@GV?$allocator@G@std@@@std@@QBEABGXZ PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@GV?$allocator@G@std@@@std@@QBEABGXZ ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	8d 0c 49	 lea	 ecx, DWORD PTR [ecx+ecx*2]
  0000b	c1 e1 03	 shl	 ecx, 3
  0000e	03 d1		 add	 edx, ecx
  00010	89 10		 mov	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  00012	c2 04 00	 ret	 4
??Yiterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBEABUtagMONREGEN@@XZ ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBEABUtagMONREGEN@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBEABUtagMONREGEN@@XZ PROC NEAR ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBEABUtagMONREGEN@@XZ ENDP ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	8d 0c 49	 lea	 ecx, DWORD PTR [ecx+ecx*2]
  0000b	d1 e1		 shl	 ecx, 1
  0000d	03 d1		 add	 edx, ecx
  0000f	89 10		 mov	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  00011	c2 04 00	 ret	 4
??Yiterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBEABUtagLOTTERY@@XZ ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBEABUtagLOTTERY@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBEABUtagLOTTERY@@XZ PROC NEAR ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBEABUtagLOTTERY@@XZ ENDP ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_pchSrc$ = 12						; size = 4
_nChars$ = 16						; size = 4
?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CopyChars, COMDAT

; 653  : 		memcpy( pchDest, pchSrc, nChars*sizeof( XCHAR ) );

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR _nChars$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR _pchSrc$[esp]
  00009	8b c1		 mov	 eax, ecx
  0000b	57		 push	 edi
  0000c	8b 7c 24 0c	 mov	 edi, DWORD PTR _pchDest$[esp+4]
  00010	c1 e9 02	 shr	 ecx, 2
  00013	f3 a5		 rep movsd
  00015	8b c8		 mov	 ecx, eax
  00017	83 e1 03	 and	 ecx, 3
  0001a	f3 a4		 rep movsb
  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi

; 654  : 	}

  0001e	c3		 ret	 0
?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ENDP ; ATL::CSimpleStringT<char,0>::CopyChars
_TEXT	ENDS
PUBLIC	?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped
; Function compile flags: /Ogty
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_pchSrc$ = 12						; size = 4
_nChars$ = 16						; size = 4
?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped, COMDAT

; 657  : 		memmove( pchDest, pchSrc, nChars*sizeof( XCHAR ) );

  00000	e9 00 00 00 00	 jmp	 _memmove
?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ENDP ; ATL::CSimpleStringT<char,0>::CopyCharsOverlapped
_TEXT	ENDS
PUBLIC	?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z ; ATL::CSimpleStringT<char,0>::StringLength
; Function compile flags: /Ogty
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT
_psz$ = 8						; size = 4
?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::StringLength, COMDAT

; 678  : 		if( psz == NULL )

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _psz$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	75 01		 jne	 SHORT $L120135

; 683  : 	}

  00008	c3		 ret	 0
$L120135:

; 679  : 		{
; 680  : 			return( 0 );
; 681  : 		}
; 682  : 		return( int( strlen( psz ) ) );

  00009	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
  0000c	8d 64 24 00	 npad	 4
$L133963:
  00010	8a 08		 mov	 cl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 c9		 test	 cl, cl
  00015	75 f9		 jne	 SHORT $L133963
  00017	2b c2		 sub	 eax, edx

; 683  : 	}

  00019	c3		 ret	 0
?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z ENDP	; ATL::CSimpleStringT<char,0>::StringLength
_TEXT	ENDS
PUBLIC	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
; Function compile flags: /Ogty
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT
?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ PROC NEAR ; ATL::CSimpleStringT<char,0>::ThrowMemoryException, COMDAT

; 705  : 		AtlThrow( E_OUTOFMEMORY );

  00000	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  00005	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L133968:
$L133967:
  0000a	cc		 int	 3
?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ENDP ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
_TEXT	ENDS
PUBLIC	?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::Fork
; Function compile flags: /Ogty
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
tv181 = 8						; size = 4
_nLength$ = 8						; size = 4
?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::Fork, COMDAT
; _this$ = ecx

; 715  : 	{

  00000	51		 push	 ecx
  00001	53		 push	 ebx

; 716  : 		CStringData* pOldData = GetData();

  00002	8b 19		 mov	 ebx, DWORD PTR [ecx]
  00004	83 eb 10	 sub	 ebx, 16			; 00000010H
  00007	55		 push	 ebp

; 717  : 		int nOldLength = pOldData->nDataLength;

  00008	8b 6b 04	 mov	 ebp, DWORD PTR [ebx+4]
  0000b	89 4c 24 08	 mov	 DWORD PTR _this$[esp+12], ecx

; 718  : 		CStringData* pNewData = pOldData->pStringMgr->Clone()->Allocate( nLength, sizeof( XCHAR ) );

  0000f	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00011	8b 01		 mov	 eax, DWORD PTR [ecx]
  00013	56		 push	 esi
  00014	ff 50 10	 call	 DWORD PTR [eax+16]
  00017	8b 74 24 14	 mov	 esi, DWORD PTR _nLength$[esp+12]
  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	6a 01		 push	 1
  0001f	56		 push	 esi
  00020	8b c8		 mov	 ecx, eax
  00022	ff 12		 call	 DWORD PTR [edx]

; 719  : 		if( pNewData == NULL )

  00024	85 c0		 test	 eax, eax
  00026	75 05		 jne	 SHORT $L120144

; 720  : 		{
; 721  : 			ThrowMemoryException();

  00028	e8 00 00 00 00	 call	 ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L133999:
$L120144:

; 722  : 		}
; 723  : 		int nCharsToCopy = ((nOldLength < nLength) ? nOldLength : nLength)+1;  // Copy '\0'

  0002d	3b ee		 cmp	 ebp, esi
  0002f	7d 02		 jge	 SHORT $L133973
  00031	8b f5		 mov	 esi, ebp
$L133973:
  00033	8d 4e 01	 lea	 ecx, DWORD PTR [esi+1]

; 724  : 		CopyChars( PXSTR( pNewData->data() ), PCXSTR( pOldData->data() ), nCharsToCopy );

  00036	8b d1		 mov	 edx, ecx
  00038	57		 push	 edi
  00039	c1 e9 02	 shr	 ecx, 2
  0003c	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  0003f	89 7c 24 18	 mov	 DWORD PTR tv181[esp+16], edi
  00043	8d 73 10	 lea	 esi, DWORD PTR [ebx+16]
  00046	f3 a5		 rep movsd
  00048	8b ca		 mov	 ecx, edx
  0004a	83 e1 03	 and	 ecx, 3
  0004d	f3 a4		 rep movsb

; 725  : 		pNewData->nDataLength = nOldLength;

  0004f	89 68 04	 mov	 DWORD PTR [eax+4], ebp

; 726  : 		pOldData->Release();

  00052	8d 43 0c	 lea	 eax, DWORD PTR [ebx+12]
  00055	83 c9 ff	 or	 ecx, -1
  00058	f0 0f c1 08	 lock	  xadd	 DWORD PTR [eax], ecx
  0005c	49		 dec	 ecx
  0005d	85 c9		 test	 ecx, ecx
  0005f	5f		 pop	 edi
  00060	7f 08		 jg	 SHORT $L133988
  00062	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  00064	8b 11		 mov	 edx, DWORD PTR [ecx]
  00066	53		 push	 ebx
  00067	ff 52 04	 call	 DWORD PTR [edx+4]
$L133988:

; 727  : 		Attach( pNewData );

  0006a	8b 44 24 14	 mov	 eax, DWORD PTR tv181[esp+12]
  0006e	8b 4c 24 0c	 mov	 ecx, DWORD PTR _this$[esp+16]
  00072	5e		 pop	 esi
  00073	5d		 pop	 ebp
  00074	89 01		 mov	 DWORD PTR [ecx], eax
  00076	5b		 pop	 ebx

; 728  : 	}

  00077	59		 pop	 ecx
  00078	c2 04 00	 ret	 4
$L133998:
?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP		; ATL::CSimpleStringT<char,0>::Fork
_TEXT	ENDS
PUBLIC	?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::Reallocate
; Function compile flags: /Ogty
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_nLength$ = 8						; size = 4
?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Reallocate, COMDAT
; _this$ = ecx

; 776  : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi

; 777  : 		CStringData* pOldData = GetData();
; 778  : 		ATLASSERT( pOldData->nAllocLength < nLength );
; 779  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;
; 780  : 		CStringData* pNewData = pStringMgr->Reallocate( pOldData, nLength, sizeof( XCHAR ) );

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _nLength$[esp+4]
  00006	8b f1		 mov	 esi, ecx
  00008	8b 06		 mov	 eax, DWORD PTR [esi]
  0000a	8b 48 f0	 mov	 ecx, DWORD PTR [eax-16]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	83 e8 10	 sub	 eax, 16			; 00000010H
  00012	6a 01		 push	 1
  00014	57		 push	 edi
  00015	50		 push	 eax
  00016	ff 52 08	 call	 DWORD PTR [edx+8]

; 781  : 		if( pNewData == NULL )

  00019	85 c0		 test	 eax, eax
  0001b	75 05		 jne	 SHORT $L120153

; 782  : 		{
; 783  : 			ThrowMemoryException();

  0001d	e8 00 00 00 00	 call	 ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L134015:
$L120153:

; 784  : 		}
; 785  : 		Attach( pNewData );

  00022	83 c0 10	 add	 eax, 16			; 00000010H
  00025	5f		 pop	 edi
  00026	89 06		 mov	 DWORD PTR [esi], eax
  00028	5e		 pop	 esi

; 786  : 	}

  00029	c2 04 00	 ret	 4
$L134014:
?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::Reallocate
_TEXT	ENDS
PUBLIC	?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z	; ATL::CSimpleStringT<char,0>::SetLength
; Function compile flags: /Ogty
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_nLength$ = 8						; size = 4
?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::SetLength, COMDAT
; _this$ = ecx

; 790  : 		ATLASSERT( nLength >= 0 );
; 791  : 		ATLASSERT( nLength <= GetData()->nAllocLength );
; 792  : 
; 793  : 		if( nLength < 0 || nLength > GetData()->nAllocLength)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nLength$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	7c 13		 jl	 SHORT $L120159
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	3b 42 f8	 cmp	 eax, DWORD PTR [edx-8]
  0000d	7f 0c		 jg	 SHORT $L120159

; 794  : 			AtlThrow(E_INVALIDARG);
; 795  : 			
; 796  : 		GetData()->nDataLength = nLength;

  0000f	89 42 f4	 mov	 DWORD PTR [edx-12], eax

; 797  : 		m_pszData[nLength] = 0;

  00012	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00014	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0

; 798  : 	}

  00018	c2 04 00	 ret	 4
$L120159:
  0001b	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00020	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L134026:
$L134025:
  00025	cc		 int	 3
?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::SetLength
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 1494 : 		{	// test if _Ptr points inside string

  00000	56		 push	 esi

; 1495 : 		if (_Ptr < _Myptr() || _Myptr() + _Mysize <= _Ptr)

  00001	8b 71 18	 mov	 esi, DWORD PTR [ecx+24]
  00004	83 fe 10	 cmp	 esi, 16			; 00000010H
  00007	57		 push	 edi
  00008	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0000b	72 04		 jb	 SHORT $L134035
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	eb 02		 jmp	 SHORT $L134036
$L134035:
  00011	8b d0		 mov	 edx, eax
$L134036:
  00013	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  00017	3b fa		 cmp	 edi, edx
  00019	72 17		 jb	 SHORT $L120182
  0001b	83 fe 10	 cmp	 esi, 16			; 00000010H
  0001e	72 02		 jb	 SHORT $L134043
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L134043:
  00022	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00025	03 c8		 add	 ecx, eax
  00027	3b cf		 cmp	 ecx, edi
  00029	76 07		 jbe	 SHORT $L120182
  0002b	5f		 pop	 edi

; 1497 : 		else
; 1498 : 			return (true);

  0002c	b0 01		 mov	 al, 1
  0002e	5e		 pop	 esi

; 1499 : 		}

  0002f	c2 04 00	 ret	 4
$L120182:
  00032	5f		 pop	 edi

; 1496 : 			return (false);	// don't ask

  00033	32 c0		 xor	 al, al
  00035	5e		 pop	 esi

; 1499 : 		}

  00036	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Lmost
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0const_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAE@PAUtagMONREGEN@@@Z ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAE@PAUtagMONREGEN@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAE@PAUtagMONREGEN@@@Z PROC NEAR ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAE@PAUtagMONREGEN@@@Z ENDP ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAE@PAUtagLOTTERY@@@Z ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAE@PAUtagLOTTERY@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAE@PAUtagLOTTERY@@@Z PROC NEAR ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAE@PAUtagLOTTERY@@@Z ENDP ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??8const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::operator==
; Function compile flags: /Ogty
;	COMDAT ??8const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::operator==, COMDAT
; _this$ = ecx

; 241  : 			return (_Ptr == _Right._Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Right$[esp-4]
  00006	2b 01		 sub	 eax, DWORD PTR [ecx]
  00008	f7 d8		 neg	 eax
  0000a	1b c0		 sbb	 eax, eax
  0000c	40		 inc	 eax

; 242  : 			}

  0000d	c2 04 00	 ret	 4
??8const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::operator==
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC NEAR			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC NEAR		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	83 c8 ff	 or	 eax, -1

; 159  : 		}

  00003	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	?_Color@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Color
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Color@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Color@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Color, COMDAT

; 132  : 		return ((_Charref)(*_Pnode)._Color);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 14	 add	 eax, 20			; 00000014H

; 133  : 		}

  00007	c3		 ret	 0
?_Color@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Color
_TEXT	ENDS
PUBLIC	?_Max@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Max
; Function compile flags: /Ogty
;	COMDAT ?_Max@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Max@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Max, COMDAT

; 1035 : 		while (!_Isnil(_Right(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00007	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  0000a	84 d2		 test	 dl, dl
  0000c	75 0e		 jne	 SHORT $L120942
  0000e	8b ff		 npad	 2
$L120941:

; 1036 : 			_Pnode = _Right(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00015	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00018	84 d2		 test	 dl, dl
  0001a	74 f4		 je	 SHORT $L120941
$L120942:

; 1037 : 		return (_Pnode);
; 1038 : 		}

  0001c	c3		 ret	 0
?_Max@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Max
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L120946
  0000d	8d 49 00	 npad	 3
$L120945:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L120945
$L120946:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L120972
  0000d	8d 49 00	 npad	 3
$L120971:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L120971
$L120972:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L121024
  0000d	8d 49 00	 npad	 3
$L121023:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L121023
$L121024:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Isnil@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Isnil
; Function compile flags: /Ogty
;	COMDAT ?_Isnil@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Isnil@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Isnil, COMDAT

; 137  : 		return ((_Charref)(*_Pnode)._Isnil);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 15	 add	 eax, 21			; 00000015H

; 138  : 		}

  00007	c3		 ret	 0
?_Isnil@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAAADPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Isnil
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L121079
  0000d	8d 49 00	 npad	 3
$L121078:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L121078
$L121079:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L121115
  0000d	8d 49 00	 npad	 3
$L121114:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L121114
$L121115:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Min
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@3@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::_Mynode
; Function compile flags: /Ogty
;	COMDAT ?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@3@XZ
_TEXT	SEGMENT
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@3@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::_Mynode, COMDAT
; _this$ = ecx

; 284  : 			return (_Ptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 285  : 			}

  00002	c3		 ret	 0
?_Mynode@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@3@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::_Mynode
_TEXT	ENDS
PUBLIC	?_Min@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Min
; Function compile flags: /Ogty
;	COMDAT ?_Min@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Min@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Min, COMDAT

; 1042 : 		while (!_Isnil(_Left(_Pnode)))

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	8b 08		 mov	 ecx, DWORD PTR [eax]
  00006	8a 51 1d	 mov	 dl, BYTE PTR [ecx+29]
  00009	84 d2		 test	 dl, dl
  0000b	75 0e		 jne	 SHORT $L121282
  0000d	8d 49 00	 npad	 3
$L121281:

; 1043 : 			_Pnode = _Left(_Pnode);

  00010	8b c1		 mov	 eax, ecx
  00012	8b 08		 mov	 ecx, DWORD PTR [eax]
  00014	8a 51 1d	 mov	 dl, BYTE PTR [ecx+29]
  00017	84 d2		 test	 dl, dl
  00019	74 f5		 je	 SHORT $L121281
$L121282:

; 1044 : 		return (_Pnode);
; 1045 : 		}

  0001b	c3		 ret	 0
?_Min@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@PAU342@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Min
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 200  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 201  : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L121383

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L134282

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L134270
  0001d	8d 49 00	 npad	 3
$L134269:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L134269
$L134270:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L134282:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L121387
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L121386:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L121387

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L121386
$L121387:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L121383:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L121393

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L134332

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L134320
  0001d	8d 49 00	 npad	 3
$L134319:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L134319
$L134320:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L134332:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L121397
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L121396:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L121397

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L121396
$L121397:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L121393:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L121403

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L134382

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L134370
  0001d	8d 49 00	 npad	 3
$L134369:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L134369
$L134370:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L134382:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L121407
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L121406:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L121407

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L121406
$L121407:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L121403:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 1d	 mov	 dl, BYTE PTR [eax+29]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L121433

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 1d	 mov	 bl, BYTE PTR [edx+29]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L134432

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 1d	 mov	 bl, BYTE PTR [eax+29]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L134420
  0001d	8d 49 00	 npad	 3
$L134419:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 1d	 mov	 bl, BYTE PTR [eax+29]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L134419
$L134420:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L134432:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 1d	 mov	 dl, BYTE PTR [eax+29]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L121437
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L121436:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L121437

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 1d	 mov	 dl, BYTE PTR [eax+29]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L121436
$L121437:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L121433:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Node>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Node>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Node>
_TEXT	ENDS
PUBLIC	??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@0@@Z ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Node *>
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@0@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@0@@Z PROC NEAR ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Node *>, COMDAT

; 49   : 	_DESTRUCTOR(_Ty, _Ptr);
; 50   : 	}

  00000	c3		 ret	 0
??$_Destroy@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@YAXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@0@@Z ENDP ; std::_Destroy<std::_Tree_nod<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Node *>
_TEXT	ENDS
PUBLIC	??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@@Z ; std::_Destroy_range<unsigned short,std::allocator<unsigned short> >
; Function compile flags: /Ogty
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@@Z PROC NEAR ; std::_Destroy_range<unsigned short,std::allocator<unsigned short> >, COMDAT

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 218  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@@Z ENDP ; std::_Destroy_range<unsigned short,std::allocator<unsigned short> >
_TEXT	ENDS
PUBLIC	??$swap@D@std@@YAXAAD0@Z			; std::swap<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\utility
;	COMDAT ??$swap@D@std@@YAXAAD0@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$swap@D@std@@YAXAAD0@Z PROC NEAR			; std::swap<char>, COMDAT

; 15   : 	_Ty _Tmp = _Left;

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Left$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	56		 push	 esi

; 16   : 	_Left = _Right, _Right = _Tmp;

  00007	8b 74 24 0c	 mov	 esi, DWORD PTR __Right$[esp]
  0000b	8a 16		 mov	 dl, BYTE PTR [esi]
  0000d	88 10		 mov	 BYTE PTR [eax], dl
  0000f	88 0e		 mov	 BYTE PTR [esi], cl
  00011	5e		 pop	 esi

; 17   : 	}

  00012	c3		 ret	 0
??$swap@D@std@@YAXAAD0@Z ENDP				; std::swap<char>
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC NEAR		; std::_Allocate<char>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 35   : 	}

  0000d	c3		 ret	 0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	?SendMW_CHARINFO_REQ@CTServer@@QAEXKKPAVCTGuild@@0PAVCTParty@@EEGE@Z ; CTServer::SendMW_CHARINFO_REQ
EXTRN	?GetID@CTParty@@QAEGXZ:NEAR			; CTParty::GetID
EXTRN	?GetChiefID@CTParty@@QAEKXZ:NEAR		; CTParty::GetChiefID
EXTRN	??6CPacket@@QAEAAV0@PBD@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T134486 DD	0ffffffffH
	DD	FLAT:$L134472
$T134482 DD	019930520H
	DD	01H
	DD	FLAT:$T134486
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
CONST	ENDS
;	COMDAT ?SendMW_CHARINFO_REQ@CTServer@@QAEXKKPAVCTGuild@@0PAVCTParty@@EEGE@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T134463 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_pGuild$ = 16						; size = 4
_pTactics$ = 20						; size = 4
_pParty$ = 24						; size = 4
_bDuty$ = 28						; size = 1
_bPeer$ = 32						; size = 1
_wCastle$ = 36						; size = 2
_bCamp$ = 40						; size = 1
?SendMW_CHARINFO_REQ@CTServer@@QAEXKKPAVCTGuild@@0PAVCTParty@@EEGE@Z PROC NEAR ; CTServer::SendMW_CHARINFO_REQ, COMDAT
; _this$ = ecx

; 482  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHARINFO_REQ@CTServer@@QAEXKKPAVCTGuild@@0PAVCTParty@@EEGE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi

; 483  : 	CPacket *pMSG = new CPacket();

  0001c	6a 1c		 push	 28			; 0000001cH
  0001e	89 4c 24 14	 mov	 DWORD PTR _this$[esp+40], ecx
  00022	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00027	83 c4 04	 add	 esp, 4
  0002a	89 44 24 14	 mov	 DWORD PTR $T134463[esp+36], eax
  0002e	33 ed		 xor	 ebp, ebp
  00030	3b c5		 cmp	 eax, ebp
  00032	89 6c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebp
  00036	74 0b		 je	 SHORT $L134464
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L134465
$L134464:
  00043	33 f6		 xor	 esi, esi
$L134465:

; 484  : 
; 485  : 	pMSG->SetID(MW_CHARINFO_REQ)
; 486  : 		<< dwCharID
; 487  : 		<< dwKEY;

  00045	8b 44 24 2c	 mov	 eax, DWORD PTR _dwKEY$[esp+32]
  00049	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwCharID$[esp+32]
  0004d	50		 push	 eax
  0004e	51		 push	 ecx
  0004f	68 0e 20 00 00	 push	 8206			; 0000200eH
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 488  : 
; 489  : 	if(pGuild)

  00071	8b 44 24 30	 mov	 eax, DWORD PTR _pGuild$[esp+32]
  00075	3b c5		 cmp	 eax, ebp
  00077	74 11		 je	 SHORT $L123268

; 490  : 	{
; 491  : 		(*pMSG)
; 492  : 			<< pGuild->m_dwID
; 493  : 			<< pGuild->m_strName
; 494  : 			<< pGuild->m_dwFame
; 495  : 			<< pGuild->m_dwFameColor;

  00079	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  0007c	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0007f	52		 push	 edx
  00080	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00083	8b 00		 mov	 eax, DWORD PTR [eax]
  00085	52		 push	 edx
  00086	51		 push	 ecx
  00087	50		 push	 eax

; 496  : 	}
; 497  : 	else

  00088	eb 08		 jmp	 SHORT $L134484
$L123268:

; 498  : 	{
; 499  : 		(*pMSG)
; 500  : 			<< DWORD(0)
; 501  : 			<< NAME_NULL
; 502  : 			<< DWORD(0)
; 503  : 			<< DWORD(0);

  0008a	55		 push	 ebp
  0008b	55		 push	 ebp
  0008c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00091	55		 push	 ebp
$L134484:
  00092	8b ce		 mov	 ecx, esi
  00094	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00099	8b c8		 mov	 ecx, eax
  0009b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a7	8b c8		 mov	 ecx, eax
  000a9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 504  : 	}
; 505  : 
; 506  : 	if(pTactics)

  000ae	8b 44 24 34	 mov	 eax, DWORD PTR _pTactics$[esp+32]
  000b2	3b c5		 cmp	 eax, ebp
  000b4	74 09		 je	 SHORT $L123270

; 507  : 	{
; 508  : 		(*pMSG)
; 509  : 			<< pTactics->m_dwID
; 510  : 			<< pTactics->m_strName;

  000b6	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  000b9	51		 push	 ecx
  000ba	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bc	51		 push	 ecx

; 511  : 	}
; 512  : 	else

  000bd	eb 06		 jmp	 SHORT $L134485
$L123270:

; 513  : 	{
; 514  : 		(*pMSG)
; 515  : 			<< DWORD(0)
; 516  : 			<< NAME_NULL;

  000bf	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  000c4	55		 push	 ebp
$L134485:
  000c5	8b ce		 mov	 ecx, esi
  000c7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000cc	8b c8		 mov	 ecx, eax
  000ce	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 517  : 	}
; 518  : 
; 519  : 	(*pMSG)
; 520  : 		<< bDuty
; 521  : 		<< bPeer
; 522  : 		<< wCastle
; 523  : 		<< bCamp
; 524  : 		<< WORD(pParty ? pParty->GetID() : 0)
; 525  : 		<< BYTE(pParty ? pParty->m_bObtainType : 0)
; 526  : 		<< DWORD(pParty ? pParty->GetChiefID() : 0);

  000d3	8b 7c 24 38	 mov	 edi, DWORD PTR _pParty$[esp+32]
  000d7	3b fd		 cmp	 edi, ebp
  000d9	74 19		 je	 SHORT $L134468
  000db	8b cf		 mov	 ecx, edi
  000dd	e8 00 00 00 00	 call	 ?GetChiefID@CTParty@@QAEKXZ ; CTParty::GetChiefID
  000e2	0f b6 5f 14	 movzx	 ebx, BYTE PTR [edi+20]
  000e6	8b cf		 mov	 ecx, edi
  000e8	8b e8		 mov	 ebp, eax
  000ea	e8 00 00 00 00	 call	 ?GetID@CTParty@@QAEGXZ	; CTParty::GetID
  000ef	0f b7 c0	 movzx	 eax, ax
  000f2	eb 04		 jmp	 SHORT $L134467
$L134468:
  000f4	33 db		 xor	 ebx, ebx
  000f6	33 c0		 xor	 eax, eax
$L134467:
  000f8	8b 54 24 48	 mov	 edx, DWORD PTR _bCamp$[esp+32]
  000fc	8b 4c 24 40	 mov	 ecx, DWORD PTR _bPeer$[esp+32]
  00100	55		 push	 ebp
  00101	53		 push	 ebx
  00102	50		 push	 eax
  00103	8b 44 24 50	 mov	 eax, DWORD PTR _wCastle$[esp+44]
  00107	52		 push	 edx
  00108	8b 54 24 4c	 mov	 edx, DWORD PTR _bDuty$[esp+48]
  0010c	50		 push	 eax
  0010d	51		 push	 ecx
  0010e	52		 push	 edx
  0010f	8b ce		 mov	 ecx, esi
  00111	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00116	8b c8		 mov	 ecx, eax
  00118	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0011d	8b c8		 mov	 ecx, eax
  0011f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00124	8b c8		 mov	 ecx, eax
  00126	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0012b	8b c8		 mov	 ecx, eax
  0012d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00132	8b c8		 mov	 ecx, eax
  00134	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00139	8b c8		 mov	 ecx, eax
  0013b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 527  : 
; 528  : 	Say(pMSG);

  00140	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+36]
  00144	8b 01		 mov	 eax, DWORD PTR [ecx]
  00146	56		 push	 esi
  00147	ff 10		 call	 DWORD PTR [eax]

; 529  : }

  00149	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  0014d	5f		 pop	 edi
  0014e	5e		 pop	 esi
  0014f	5d		 pop	 ebp
  00150	5b		 pop	 ebx
  00151	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00158	83 c4 14	 add	 esp, 20			; 00000014H
  0015b	c2 24 00	 ret	 36			; 00000024H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L134472:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T134463[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CHARINFO_REQ@CTServer@@QAEXKKPAVCTGuild@@0PAVCTParty@@EEGE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T134482
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHARINFO_REQ@CTServer@@QAEXKKPAVCTGuild@@0PAVCTParty@@EEGE@Z ENDP ; CTServer::SendMW_CHARINFO_REQ
PUBLIC	?SendMW_ADDSQUAD_REQ@CTServer@@QAEXKKPAVCTParty@@@Z ; CTServer::SendMW_ADDSQUAD_REQ
EXTRN	?GetSize@CTParty@@QAEEXZ:NEAR			; CTParty::GetSize
EXTRN	?GetMember@CTParty@@QAEPAUtagTCHARACTER@@H@Z:NEAR ; CTParty::GetMember
EXTRN	__ftol2:NEAR
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T134508 DD	0ffffffffH
	DD	FLAT:$L134496
$T134503 DD	019930520H
	DD	01H
	DD	FLAT:$T134508
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_ADDSQUAD_REQ@CTServer@@QAEXKKPAVCTParty@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T134493 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_pParty$ = 16						; size = 4
?SendMW_ADDSQUAD_REQ@CTServer@@QAEXKKPAVCTParty@@@Z PROC NEAR ; CTServer::SendMW_ADDSQUAD_REQ, COMDAT
; _this$ = ecx

; 1878 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_ADDSQUAD_REQ@CTServer@@QAEXKKPAVCTParty@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	8b d9		 mov	 ebx, ecx

; 1879 : 	CPacket * pMsg = new CPacket();

  0001e	6a 1c		 push	 28			; 0000001cH
  00020	89 5c 24 14	 mov	 DWORD PTR _this$[esp+40], ebx
  00024	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00029	83 c4 04	 add	 esp, 4
  0002c	89 44 24 14	 mov	 DWORD PTR $T134493[esp+36], eax
  00030	33 f6		 xor	 esi, esi
  00032	3b c6		 cmp	 eax, esi
  00034	89 74 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], esi
  00038	74 0b		 je	 SHORT $L134494
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b e8		 mov	 ebp, eax
  00043	eb 02		 jmp	 SHORT $L134495
$L134494:
  00045	33 ed		 xor	 ebp, ebp
$L134495:

; 1880 : 	pMsg->SetID(MW_ADDSQUAD_REQ)
; 1881 : 		<< dwCharID
; 1882 : 		<< dwKey
; 1883 : 		<< pParty->GetChiefID()
; 1884 : 		<< pParty->GetID()
; 1885 : 		<< pParty->GetSize();

  00047	8b 7c 24 30	 mov	 edi, DWORD PTR _pParty$[esp+32]
  0004b	8b cf		 mov	 ecx, edi
  0004d	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00055	e8 00 00 00 00	 call	 ?GetSize@CTParty@@QAEEXZ ; CTParty::GetSize
  0005a	8b cf		 mov	 ecx, edi
  0005c	50		 push	 eax
  0005d	e8 00 00 00 00	 call	 ?GetID@CTParty@@QAEGXZ	; CTParty::GetID
  00062	8b cf		 mov	 ecx, edi
  00064	50		 push	 eax
  00065	e8 00 00 00 00	 call	 ?GetChiefID@CTParty@@QAEKXZ ; CTParty::GetChiefID
  0006a	8b 4c 24 30	 mov	 ecx, DWORD PTR _dwCharID$[esp+40]
  0006e	50		 push	 eax
  0006f	8b 44 24 38	 mov	 eax, DWORD PTR _dwKey$[esp+44]
  00073	50		 push	 eax
  00074	51		 push	 ecx
  00075	68 70 20 00 00	 push	 8304			; 00002070H
  0007a	8b cd		 mov	 ecx, ebp
  0007c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1886 : 
; 1887 : 	for(int i=0; i<pParty->GetSize(); i++)

  000a4	8b cf		 mov	 ecx, edi
  000a6	e8 00 00 00 00	 call	 ?GetSize@CTParty@@QAEEXZ ; CTParty::GetSize
  000ab	84 c0		 test	 al, al
  000ad	0f 86 d3 01 00
	00		 jbe	 $L126428
$L126426:

; 1888 : 	{
; 1889 : 		(*pMsg)
; 1890 : 			<< pParty->GetMember(i)->m_dwCharID
; 1891 : 			<< pParty->GetMember(i)->m_strNAME
; 1892 : 			<< FLOAT(1.0)
; 1893 : 			<< pParty->GetMember(i)->m_command.m_dwTgObjID
; 1894 : 			<< pParty->GetMember(i)->m_dwMaxHP
; 1895 : 			<< pParty->GetMember(i)->m_dwHP
; 1896 : 			<< pParty->GetMember(i)->m_command.m_wTgPosX
; 1897 : 			<< pParty->GetMember(i)->m_command.m_wTgPosZ
; 1898 : 			<< pParty->GetMember(i)->m_wMapID
; 1899 : 			<< WORD(pParty->GetMember(i)->m_fPosX)
; 1900 : 			<< WORD(pParty->GetMember(i)->m_fPosZ)
; 1901 : 			<< MOVE_NONE
; 1902 : 			<< pParty->GetMember(i)->m_command.m_bTgType
; 1903 : 			<< pParty->GetMember(i)->m_bLevel
; 1904 : 			<< pParty->GetMember(i)->m_bClass
; 1905 :             << pParty->GetMember(i)->m_bRace
; 1906 : 			<< pParty->GetMember(i)->m_bSex
; 1907 : 			<< pParty->GetMember(i)->m_bFace
; 1908 : 			<< pParty->GetMember(i)->m_bHair
; 1909 : 			<< pParty->GetMember(i)->m_command.m_bCommand;

  000b3	56		 push	 esi
  000b4	8b cf		 mov	 ecx, edi
  000b6	e8 00 00 00 00	 call	 ?GetMember@CTParty@@QAEPAUtagTCHARACTER@@H@Z ; CTParty::GetMember
  000bb	8b 58 6c	 mov	 ebx, DWORD PTR [eax+108]
  000be	83 c0 6c	 add	 eax, 108		; 0000006cH
  000c1	56		 push	 esi
  000c2	8b cf		 mov	 ecx, edi
  000c4	e8 00 00 00 00	 call	 ?GetMember@CTParty@@QAEPAUtagTCHARACTER@@H@Z ; CTParty::GetMember
  000c9	33 d2		 xor	 edx, edx
  000cb	8a 90 8c 00 00
	00		 mov	 dl, BYTE PTR [eax+140]
  000d1	8b cf		 mov	 ecx, edi
  000d3	52		 push	 edx
  000d4	56		 push	 esi
  000d5	e8 00 00 00 00	 call	 ?GetMember@CTParty@@QAEPAUtagTCHARACTER@@H@Z ; CTParty::GetMember
  000da	0f b6 80 d0 00
	00 00		 movzx	 eax, BYTE PTR [eax+208]
  000e1	50		 push	 eax
  000e2	56		 push	 esi
  000e3	8b cf		 mov	 ecx, edi
  000e5	e8 00 00 00 00	 call	 ?GetMember@CTParty@@QAEPAUtagTCHARACTER@@H@Z ; CTParty::GetMember
  000ea	33 c9		 xor	 ecx, ecx
  000ec	8a 88 cf 00 00
	00		 mov	 cl, BYTE PTR [eax+207]
  000f2	51		 push	 ecx
  000f3	56		 push	 esi
  000f4	8b cf		 mov	 ecx, edi
  000f6	e8 00 00 00 00	 call	 ?GetMember@CTParty@@QAEPAUtagTCHARACTER@@H@Z ; CTParty::GetMember
  000fb	33 d2		 xor	 edx, edx
  000fd	8a 90 d1 00 00
	00		 mov	 dl, BYTE PTR [eax+209]
  00103	8b cf		 mov	 ecx, edi
  00105	52		 push	 edx
  00106	56		 push	 esi
  00107	e8 00 00 00 00	 call	 ?GetMember@CTParty@@QAEPAUtagTCHARACTER@@H@Z ; CTParty::GetMember
  0010c	0f b6 80 ce 00
	00 00		 movzx	 eax, BYTE PTR [eax+206]
  00113	50		 push	 eax
  00114	56		 push	 esi
  00115	8b cf		 mov	 ecx, edi
  00117	e8 00 00 00 00	 call	 ?GetMember@CTParty@@QAEPAUtagTCHARACTER@@H@Z ; CTParty::GetMember
  0011c	33 c9		 xor	 ecx, ecx
  0011e	8a 88 cc 00 00
	00		 mov	 cl, BYTE PTR [eax+204]
  00124	51		 push	 ecx
  00125	56		 push	 esi
  00126	8b cf		 mov	 ecx, edi
  00128	e8 00 00 00 00	 call	 ?GetMember@CTParty@@QAEPAUtagTCHARACTER@@H@Z ; CTParty::GetMember
  0012d	33 d2		 xor	 edx, edx
  0012f	8a 90 cd 00 00
	00		 mov	 dl, BYTE PTR [eax+205]
  00135	8b cf		 mov	 ecx, edi
  00137	52		 push	 edx
  00138	56		 push	 esi
  00139	e8 00 00 00 00	 call	 ?GetMember@CTParty@@QAEPAUtagTCHARACTER@@H@Z ; CTParty::GetMember
  0013e	0f b6 80 8d 00
	00 00		 movzx	 eax, BYTE PTR [eax+141]
  00145	50		 push	 eax
  00146	68 08 07 00 00	 push	 1800			; 00000708H
  0014b	56		 push	 esi
  0014c	8b cf		 mov	 ecx, edi
  0014e	e8 00 00 00 00	 call	 ?GetMember@CTParty@@QAEPAUtagTCHARACTER@@H@Z ; CTParty::GetMember
  00153	d9 80 88 00 00
	00		 fld	 DWORD PTR [eax+136]
  00159	e8 00 00 00 00	 call	 __ftol2
  0015e	8b cf		 mov	 ecx, edi
  00160	50		 push	 eax
  00161	56		 push	 esi
  00162	e8 00 00 00 00	 call	 ?GetMember@CTParty@@QAEPAUtagTCHARACTER@@H@Z ; CTParty::GetMember
  00167	d9 80 80 00 00
	00		 fld	 DWORD PTR [eax+128]
  0016d	e8 00 00 00 00	 call	 __ftol2
  00172	8b cf		 mov	 ecx, edi
  00174	50		 push	 eax
  00175	56		 push	 esi
  00176	e8 00 00 00 00	 call	 ?GetMember@CTParty@@QAEPAUtagTCHARACTER@@H@Z ; CTParty::GetMember
  0017b	33 c9		 xor	 ecx, ecx
  0017d	66 8b 48 7e	 mov	 cx, WORD PTR [eax+126]
  00181	51		 push	 ecx
  00182	56		 push	 esi
  00183	8b cf		 mov	 ecx, edi
  00185	e8 00 00 00 00	 call	 ?GetMember@CTParty@@QAEPAUtagTCHARACTER@@H@Z ; CTParty::GetMember
  0018a	33 d2		 xor	 edx, edx
  0018c	66 8b 90 96 00
	00 00		 mov	 dx, WORD PTR [eax+150]
  00193	8b cf		 mov	 ecx, edi
  00195	52		 push	 edx
  00196	56		 push	 esi
  00197	e8 00 00 00 00	 call	 ?GetMember@CTParty@@QAEPAUtagTCHARACTER@@H@Z ; CTParty::GetMember
  0019c	0f b7 80 94 00
	00 00		 movzx	 eax, WORD PTR [eax+148]
  001a3	50		 push	 eax
  001a4	56		 push	 esi
  001a5	8b cf		 mov	 ecx, edi
  001a7	e8 00 00 00 00	 call	 ?GetMember@CTParty@@QAEPAUtagTCHARACTER@@H@Z ; CTParty::GetMember
  001ac	8b 88 b0 00 00
	00		 mov	 ecx, DWORD PTR [eax+176]
  001b2	51		 push	 ecx
  001b3	56		 push	 esi
  001b4	8b cf		 mov	 ecx, edi
  001b6	e8 00 00 00 00	 call	 ?GetMember@CTParty@@QAEPAUtagTCHARACTER@@H@Z ; CTParty::GetMember
  001bb	8b 90 ac 00 00
	00		 mov	 edx, DWORD PTR [eax+172]
  001c1	52		 push	 edx
  001c2	56		 push	 esi
  001c3	8b cf		 mov	 ecx, edi
  001c5	e8 00 00 00 00	 call	 ?GetMember@CTParty@@QAEPAUtagTCHARACTER@@H@Z ; CTParty::GetMember
  001ca	8b 80 90 00 00
	00		 mov	 eax, DWORD PTR [eax+144]
  001d0	50		 push	 eax
  001d1	68 00 00 80 3f	 push	 1065353216		; 3f800000H
  001d6	53		 push	 ebx
  001d7	56		 push	 esi
  001d8	8b cf		 mov	 ecx, edi
  001da	e8 00 00 00 00	 call	 ?GetMember@CTParty@@QAEPAUtagTCHARACTER@@H@Z ; CTParty::GetMember
  001df	8b 48 70	 mov	 ecx, DWORD PTR [eax+112]
  001e2	51		 push	 ecx
  001e3	8b cd		 mov	 ecx, ebp
  001e5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001ea	8b c8		 mov	 ecx, eax
  001ec	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  001f1	8b c8		 mov	 ecx, eax
  001f3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  001f8	8b c8		 mov	 ecx, eax
  001fa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001ff	8b c8		 mov	 ecx, eax
  00201	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00206	8b c8		 mov	 ecx, eax
  00208	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0020d	8b c8		 mov	 ecx, eax
  0020f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00214	8b c8		 mov	 ecx, eax
  00216	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0021b	8b c8		 mov	 ecx, eax
  0021d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00222	8b c8		 mov	 ecx, eax
  00224	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00229	8b c8		 mov	 ecx, eax
  0022b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00230	8b c8		 mov	 ecx, eax
  00232	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00237	8b c8		 mov	 ecx, eax
  00239	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0023e	8b c8		 mov	 ecx, eax
  00240	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00245	8b c8		 mov	 ecx, eax
  00247	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0024c	8b c8		 mov	 ecx, eax
  0024e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00253	8b c8		 mov	 ecx, eax
  00255	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0025a	8b c8		 mov	 ecx, eax
  0025c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00261	8b c8		 mov	 ecx, eax
  00263	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00268	8b c8		 mov	 ecx, eax
  0026a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0026f	8b cf		 mov	 ecx, edi
  00271	46		 inc	 esi
  00272	e8 00 00 00 00	 call	 ?GetSize@CTParty@@QAEEXZ ; CTParty::GetSize
  00277	0f b6 d0	 movzx	 edx, al
  0027a	3b f2		 cmp	 esi, edx
  0027c	0f 8c 31 fe ff
	ff		 jl	 $L126426

; 1886 : 
; 1887 : 	for(int i=0; i<pParty->GetSize(); i++)

  00282	8b 5c 24 10	 mov	 ebx, DWORD PTR _this$[esp+36]
$L126428:

; 1910 : 	}
; 1911 : 
; 1912 : 	Say(pMsg);

  00286	8b 03		 mov	 eax, DWORD PTR [ebx]
  00288	55		 push	 ebp
  00289	8b cb		 mov	 ecx, ebx
  0028b	ff 10		 call	 DWORD PTR [eax]

; 1913 : }

  0028d	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  00291	5f		 pop	 edi
  00292	5e		 pop	 esi
  00293	5d		 pop	 ebp
  00294	5b		 pop	 ebx
  00295	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0029c	83 c4 14	 add	 esp, 20			; 00000014H
  0029f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L134496:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T134493[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_ADDSQUAD_REQ@CTServer@@QAEXKKPAVCTParty@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T134503
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_ADDSQUAD_REQ@CTServer@@QAEXKKPAVCTParty@@@Z ENDP ; CTServer::SendMW_ADDSQUAD_REQ
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Key
; Function compile flags: /Ogty
;	COMDAT ?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Key, COMDAT

; 142  : 		return (_Mybase::_Kfn(_Myval(_Pnode)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pnode$[esp-4]
  00004	83 c0 0c	 add	 eax, 12			; 0000000cH

; 143  : 		}

  00007	c3		 ret	 0
?_Key@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@KAABKPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Key
_TEXT	ENDS
PUBLIC	?begin@?$vector@_JV?$allocator@_J@std@@@std@@QBE?AVconst_iterator@12@XZ ; std::vector<__int64,std::allocator<__int64> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@_JV?$allocator@_J@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@_JV?$allocator@_J@std@@@std@@QBE?AVconst_iterator@12@XZ PROC NEAR ; std::vector<__int64,std::allocator<__int64> >::begin, COMDAT
; _this$ = ecx

; 468  : 		return (const_iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 469  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@_JV?$allocator@_J@std@@@std@@QBE?AVconst_iterator@12@XZ ENDP ; std::vector<__int64,std::allocator<__int64> >::begin
_TEXT	ENDS
PUBLIC	?end@?$vector@_JV?$allocator@_J@std@@@std@@QBE?AVconst_iterator@12@XZ ; std::vector<__int64,std::allocator<__int64> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$vector@_JV?$allocator@_J@std@@@std@@QBE?AVconst_iterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@_JV?$allocator@_J@std@@@std@@QBE?AVconst_iterator@12@XZ PROC NEAR ; std::vector<__int64,std::allocator<__int64> >::end, COMDAT
; _this$ = ecx

; 478  : 		return (const_iterator(_Mylast));

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 479  : 		}

  00009	c2 04 00	 ret	 4
?end@?$vector@_JV?$allocator@_J@std@@@std@@QBE?AVconst_iterator@12@XZ ENDP ; std::vector<__int64,std::allocator<__int64> >::end
_TEXT	ENDS
PUBLIC	??0?$_Vector_val@_JV?$allocator@_J@std@@@std@@IAE@V?$allocator@_J@1@@Z ; std::_Vector_val<__int64,std::allocator<__int64> >::_Vector_val<__int64,std::allocator<__int64> >
; Function compile flags: /Ogty
;	COMDAT ??0?$_Vector_val@_JV?$allocator@_J@std@@@std@@IAE@V?$allocator@_J@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_Vector_val@_JV?$allocator@_J@std@@@std@@IAE@V?$allocator@_J@1@@Z PROC NEAR ; std::_Vector_val<__int64,std::allocator<__int64> >::_Vector_val<__int64,std::allocator<__int64> >, COMDAT
; _this$ = ecx

; 21   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 22   : 		}

  00002	c2 04 00	 ret	 4
??0?$_Vector_val@_JV?$allocator@_J@std@@@std@@IAE@V?$allocator@_J@1@@Z ENDP ; std::_Vector_val<__int64,std::allocator<__int64> >::_Vector_val<__int64,std::allocator<__int64> >
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Lmost
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTNMTPLAYER@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTNMTPLAYER@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTNMTPLAYER@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTNMTPLAYER@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEABU?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKK@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKK@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKK@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKK@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGUtagTRPSGAME@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGUtagTRPSGAME@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGUtagTRPSGAME@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBGUtagTRPSGAME@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTITEM@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTITEM@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTITEM@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTITEM@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKUtagTGUILDWANTED@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKUtagTGUILDWANTED@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKUtagTGUILDWANTED@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 10	 add	 eax, 16			; 00000010H

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKUtagTGUILDWANTED@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEABU?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTCHARACTER@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTCHARACTER@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTCHARACTER@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTCHARACTER@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEAAUtagTENTRYRECORD@@XZ ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator*
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Diterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEAAUtagTENTRYRECORD@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEAAUtagTENTRYRECORD@@XZ PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEAAUtagTENTRYRECORD@@XZ ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBEAAPAUtagTCHARACTER@@XZ ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBEAAPAUtagTCHARACTER@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBEAAPAUtagTCHARACTER@@XZ PROC NEAR ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBEAAPAUtagTCHARACTER@@XZ ENDP ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBEAAUtagTNMTREWARD@@XZ ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBEAAUtagTNMTREWARD@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBEAAUtagTNMTREWARD@@XZ PROC NEAR ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBEAAUtagTNMTREWARD@@XZ ENDP ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Off$[esp-4]
  00004	8b 01		 mov	 eax, DWORD PTR [ecx]
  00006	c1 e2 04	 shl	 edx, 4
  00009	03 d0		 add	 edx, eax
  0000b	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000f	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  00011	c2 08 00	 ret	 8
??Hiterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ
_TEXT	SEGMENT
??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@KV?$allocator@K@std@@@std@@QBEAAKXZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@KV?$allocator@K@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEAAUtagTGUILDPOINTREWARD@@XZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEAAUtagTGUILDPOINTREWARD@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEAAUtagTGUILDPOINTREWARD@@XZ PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBEAAUtagTGUILDPOINTREWARD@@XZ ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Off$[esp-4]
  00004	8b 01		 mov	 eax, DWORD PTR [ecx]
  00006	c1 e2 04	 shl	 edx, 4
  00009	03 d0		 add	 edx, eax
  0000b	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000f	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  00011	c2 08 00	 ret	 8
??Hiterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBEAAULOTPACKET@@XZ ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBEAAULOTPACKET@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBEAAULOTPACKET@@XZ PROC NEAR ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBEAAULOTPACKET@@XZ ENDP ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBE?AV012@H@Z ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Off$[esp-4]
  00004	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00006	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00009	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0000c	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00010	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  00012	c2 08 00	 ret	 8
??Hiterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBEAAUtagTGUILDTACTICSWANTED@@XZ ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBEAAUtagTGUILDTACTICSWANTED@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBEAAUtagTGUILDTACTICSWANTED@@XZ PROC NEAR ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBEAAUtagTGUILDTACTICSWANTED@@XZ ENDP ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Off$[esp-4]
  00004	8b 01		 mov	 eax, DWORD PTR [ecx]
  00006	c1 e2 06	 shl	 edx, 6
  00009	03 d0		 add	 edx, eax
  0000b	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000f	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  00011	c2 08 00	 ret	 8
??Hiterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::iterator::operator+
_TEXT	ENDS
PUBLIC	?max_size@?$vector@_JV?$allocator@_J@std@@@std@@QBEIXZ ; std::vector<__int64,std::allocator<__int64> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$vector@_JV?$allocator@_J@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$vector@_JV?$allocator@_J@std@@@std@@QBEIXZ PROC NEAR ; std::vector<__int64,std::allocator<__int64> >::max_size, COMDAT
; _this$ = ecx

; 521  : 		return (this->_Alval.max_size());

  00000	b8 ff ff ff 1f	 mov	 eax, 536870911		; 1fffffffH

; 522  : 		}

  00005	c3		 ret	 0
?max_size@?$vector@_JV?$allocator@_J@std@@@std@@QBEIXZ ENDP ; std::vector<__int64,std::allocator<__int64> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@_J@std@@QAEPA_JI@Z	; std::allocator<__int64>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@_J@std@@QAEPA_JI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@_J@std@@QAEPA_JI@Z PROC NEAR	; std::allocator<__int64>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	8d 0c c5 00 00
	00 00		 lea	 ecx, DWORD PTR [eax*8]
  0000b	51		 push	 ecx
  0000c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00011	83 c4 04	 add	 esp, 4

; 138  : 		}

  00014	c2 04 00	 ret	 4
?allocate@?$allocator@_J@std@@QAEPA_JI@Z ENDP		; std::allocator<__int64>::allocate
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEUtagCASTLETOP3@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEUtagCASTLETOP3@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEUtagCASTLETOP3@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEUtagCASTLETOP3@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Ziterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator-=
; Function compile flags: /Ogty
;	COMDAT ??Ziterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Ziterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator-=, COMDAT
; _this$ = ecx

; 267  : 			{	// decrement by integer

  00000	8b c1		 mov	 eax, ecx

; 268  : 			return (*this += -_Off);

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	6b c9 d4	 imul	 ecx, -44		; ffffffd4H
  0000b	03 d1		 add	 edx, ecx
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 269  : 			}

  0000f	c2 04 00	 ret	 4
??Ziterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator-=
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAE@PAPAUtagTCHARACTER@@@Z ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAE@PAPAUtagTCHARACTER@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAE@PAPAUtagTCHARACTER@@@Z PROC NEAR ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAE@PAPAUtagTCHARACTER@@@Z ENDP ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAE@PAUtagTNMTREWARD@@@Z ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAE@PAUtagTNMTREWARD@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAE@PAUtagTNMTREWARD@@@Z PROC NEAR ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAE@PAUtagTNMTREWARD@@@Z ENDP ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@KV?$allocator@K@std@@@std@@QAE@PAK@Z ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE@PAUtagTGUILDPOINTREWARD@@@Z ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAE@PAULOTPACKET@@@Z ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAE@PAULOTPACKET@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAE@PAULOTPACKET@@@Z PROC NEAR ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAE@PAULOTPACKET@@@Z ENDP ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAE@PAUtagTGUILDTACTICSWANTED@@@Z ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAE@PAUtagTGUILDTACTICSWANTED@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAE@PAUtagTGUILDTACTICSWANTED@@@Z PROC NEAR ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAE@PAUtagTGUILDTACTICSWANTED@@@Z ENDP ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Root
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1064 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1065 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@IBEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 2d	 mov	 dl, BYTE PTR [eax+45]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L130159

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 2d	 mov	 bl, BYTE PTR [edx+45]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L135131

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 2d	 mov	 bl, BYTE PTR [eax+45]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L135112
  0001d	8d 49 00	 npad	 3
$L135111:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 2d	 mov	 bl, BYTE PTR [eax+45]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L135111
$L135112:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L135131:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 2d	 mov	 dl, BYTE PTR [eax+45]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L130163
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L130162:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L130163

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 2d	 mov	 dl, BYTE PTR [eax+45]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L130162
$L130163:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L130159:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L130169

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L135181

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L135162
  0001d	8d 49 00	 npad	 3
$L135161:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L135161
$L135162:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L135181:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L130173
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L130172:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L130173

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L130172
$L130173:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L130169:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L130179

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L135231

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L135219
  0001d	8d 49 00	 npad	 3
$L135218:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L135218
$L135219:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L135231:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L130183
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L130182:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L130183

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L130182
$L130183:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L130179:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L130189

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L135281

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L135269
  0001d	8d 49 00	 npad	 3
$L135268:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L135268
$L135269:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L135281:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L130193
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L130192:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L130193

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L130192
$L130193:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L130189:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 41	 mov	 dl, BYTE PTR [eax+65]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L130199

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 41	 mov	 bl, BYTE PTR [edx+65]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L135331

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 41	 mov	 bl, BYTE PTR [eax+65]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L135319
  0001d	8d 49 00	 npad	 3
$L135318:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 41	 mov	 bl, BYTE PTR [eax+65]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L135318
$L135319:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L135331:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 41	 mov	 dl, BYTE PTR [eax+65]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L130203
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L130202:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L130203

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 41	 mov	 dl, BYTE PTR [eax+65]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L130202
$L130203:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L130199:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L130209

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L135381

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L135369
  0001d	8d 49 00	 npad	 3
$L135368:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L135368
$L135369:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L135381:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L130213
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L130212:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L130213

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L130212
$L130213:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L130209:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 21	 mov	 dl, BYTE PTR [eax+33]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L130219

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 21	 mov	 bl, BYTE PTR [edx+33]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L135431

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 21	 mov	 bl, BYTE PTR [eax+33]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L135419
  0001d	8d 49 00	 npad	 3
$L135418:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 21	 mov	 bl, BYTE PTR [eax+33]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L135418
$L135419:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L135431:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 21	 mov	 dl, BYTE PTR [eax+33]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L130223
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L130222:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L130223

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 21	 mov	 dl, BYTE PTR [eax+33]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L130222
$L130223:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L130219:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L130229

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L135481

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L135462
  0001d	8d 49 00	 npad	 3
$L135461:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L135461
$L135462:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L135481:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L130233
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L130232:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L130233

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L130232
$L130233:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L130229:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L130239

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L135531

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L135512
  0001d	8d 49 00	 npad	 3
$L135511:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L135511
$L135512:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L135531:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L130243
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L130242:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L130243

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L130242
$L130243:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L130239:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L130249

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L135581

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L135562
  0001d	8d 49 00	 npad	 3
$L135561:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L135561
$L135562:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L135581:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L130253
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L130252:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L130253

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L130252
$L130253:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L130249:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L130259

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L135631

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L135612
  0001d	8d 49 00	 npad	 3
$L135611:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L135611
$L135612:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L135631:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L130263
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L130262:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L130263

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L130262
$L130263:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L130259:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??$_Destroy_range@_JV?$allocator@_J@std@@@std@@YAXPA_J0AAV?$allocator@_J@0@@Z ; std::_Destroy_range<__int64,std::allocator<__int64> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Destroy_range@_JV?$allocator@_J@std@@@std@@YAXPA_J0AAV?$allocator@_J@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@_JV?$allocator@_J@std@@@std@@YAXPA_J0AAV?$allocator@_J@0@@Z PROC NEAR ; std::_Destroy_range<__int64,std::allocator<__int64> >, COMDAT

; 217  : 	_Destroy_range(_First, _Last, _Al, _Ptr_cat(_First, _Last));
; 218  : 	}

  00000	c3		 ret	 0
??$_Destroy_range@_JV?$allocator@_J@std@@@std@@YAXPA_J0AAV?$allocator@_J@0@@Z ENDP ; std::_Destroy_range<__int64,std::allocator<__int64> >
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@_J@std@@QAEXPA_J@Z		; std::allocator<__int64>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@_J@std@@QAEXPA_J@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@_J@std@@QAEXPA_J@Z PROC NEAR	; std::allocator<__int64>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@_J@std@@QAEXPA_J@Z ENDP		; std::allocator<__int64>::destroy
_TEXT	ENDS
PUBLIC	??9const_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QBE_NABV012@@Z ; std::vector<__int64,std::allocator<__int64> >::const_iterator::operator!=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??9const_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::vector<__int64,std::allocator<__int64> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 160  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 161  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$vector@_JV?$allocator@_J@std@@@std@@QBE_NABV012@@Z ENDP ; std::vector<__int64,std::allocator<__int64> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??$_Construct@_J_J@std@@YAXPA_JAB_J@Z		; std::_Construct<__int64,__int64>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??$_Construct@_J_J@std@@YAXPA_JAB_J@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
??$_Construct@_J_J@std@@YAXPA_JAB_J@Z PROC NEAR		; std::_Construct<__int64,__int64>, COMDAT

; 42   : 	new ((void _FARQ *)_Ptr) _T1(_Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 0e		 je	 SHORT $L135662
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
  00010	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00013	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$L135662:

; 43   : 	}

  00016	c3		 ret	 0
??$_Construct@_J_J@std@@YAXPA_JAB_J@Z ENDP		; std::_Construct<__int64,__int64>
_TEXT	ENDS
PUBLIC	?WrapPacketIn@tagMONTHRANKER@@QAEXPAVCPacket@@@Z ; tagMONTHRANKER::WrapPacketIn
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tworldtype.h
;	COMDAT ?WrapPacketIn@tagMONTHRANKER@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT
_pMSG$ = 8						; size = 4
?WrapPacketIn@tagMONTHRANKER@@QAEXPAVCPacket@@@Z PROC NEAR ; tagMONTHRANKER::WrapPacketIn, COMDAT
; _this$ = ecx

; 912  : 		(*pMSG)
; 913  : 			<< m_dwTotalRank
; 914  : 			<< m_dwMonthRank
; 915  : 			<< m_dwCharID
; 916  : 			<< m_strName
; 917  : 			<< m_dwTotalPoint
; 918  : 			<< m_dwMonthPoint
; 919  : 			<< m_wMonthWin
; 920  : 			<< m_wMonthLose
; 921  : 			<< m_dwTotalWin
; 922  : 			<< m_dwTotalLose
; 923  : 			<< m_bCountry
; 924  : 			<< m_bLevel
; 925  : 			<< m_bClass
; 926  : 			<< m_bRace
; 927  : 			<< m_bSex
; 928  : 			<< m_bHair
; 929  : 			<< m_bFace
; 930  : 			<< m_strSay
; 931  : 			<< m_strGuild;		

  00000	8b 41 30	 mov	 eax, DWORD PTR [ecx+48]
  00003	8b 51 2c	 mov	 edx, DWORD PTR [ecx+44]
  00006	56		 push	 esi
  00007	50		 push	 eax
  00008	52		 push	 edx
  00009	33 c0		 xor	 eax, eax
  0000b	8a 41 2a	 mov	 al, BYTE PTR [ecx+42]
  0000e	33 d2		 xor	 edx, edx
  00010	8a 51 29	 mov	 dl, BYTE PTR [ecx+41]
  00013	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00016	50		 push	 eax
  00017	33 c0		 xor	 eax, eax
  00019	8a 41 28	 mov	 al, BYTE PTR [ecx+40]
  0001c	52		 push	 edx
  0001d	33 d2		 xor	 edx, edx
  0001f	8a 51 27	 mov	 dl, BYTE PTR [ecx+39]
  00022	50		 push	 eax
  00023	33 c0		 xor	 eax, eax
  00025	8a 41 26	 mov	 al, BYTE PTR [ecx+38]
  00028	52		 push	 edx
  00029	33 d2		 xor	 edx, edx
  0002b	8a 51 25	 mov	 dl, BYTE PTR [ecx+37]
  0002e	50		 push	 eax
  0002f	33 c0		 xor	 eax, eax
  00031	8a 41 24	 mov	 al, BYTE PTR [ecx+36]
  00034	52		 push	 edx
  00035	8b 51 20	 mov	 edx, DWORD PTR [ecx+32]
  00038	50		 push	 eax
  00039	8b 41 1c	 mov	 eax, DWORD PTR [ecx+28]
  0003c	52		 push	 edx
  0003d	50		 push	 eax
  0003e	33 d2		 xor	 edx, edx
  00040	66 8b 51 1a	 mov	 dx, WORD PTR [ecx+26]
  00044	33 c0		 xor	 eax, eax
  00046	66 8b 41 18	 mov	 ax, WORD PTR [ecx+24]
  0004a	52		 push	 edx
  0004b	8b 51 14	 mov	 edx, DWORD PTR [ecx+20]
  0004e	50		 push	 eax
  0004f	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00052	52		 push	 edx
  00053	8b 11		 mov	 edx, DWORD PTR [ecx]
  00055	50		 push	 eax
  00056	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00059	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0005c	56		 push	 esi
  0005d	52		 push	 edx
  0005e	50		 push	 eax
  0005f	51		 push	 ecx
  00060	8b 4c 24 54	 mov	 ecx, DWORD PTR _pMSG$[esp+76]
  00064	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00069	8b c8		 mov	 ecx, eax
  0006b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00070	8b c8		 mov	 ecx, eax
  00072	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a1	8b c8		 mov	 ecx, eax
  000a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a8	8b c8		 mov	 ecx, eax
  000aa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000af	8b c8		 mov	 ecx, eax
  000b1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000b6	8b c8		 mov	 ecx, eax
  000b8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000bd	8b c8		 mov	 ecx, eax
  000bf	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c4	8b c8		 mov	 ecx, eax
  000c6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000cb	8b c8		 mov	 ecx, eax
  000cd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000d2	8b c8		 mov	 ecx, eax
  000d4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000d9	8b c8		 mov	 ecx, eax
  000db	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000e0	8b c8		 mov	 ecx, eax
  000e2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000e7	5e		 pop	 esi

; 932  : 	}

  000e8	c2 04 00	 ret	 4
?WrapPacketIn@tagMONTHRANKER@@QAEXPAVCPacket@@@Z ENDP	; tagMONTHRANKER::WrapPacketIn
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 304  : 		iterator()

  00000	8b c1		 mov	 eax, ecx
  00002	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 305  : 			{	// construct with null node pointer
; 306  : 			}

  00008	c3		 ret	 0
??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::operator!=
; Function compile flags: /Ogty
;	COMDAT ??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::operator!=, COMDAT
; _this$ = ecx

; 246  : 			return (!(*this == _Right));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 54 24 04	 mov	 edx, DWORD PTR __Right$[esp-4]
  00006	56		 push	 esi
  00007	8b 32		 mov	 esi, DWORD PTR [edx]
  00009	33 c9		 xor	 ecx, ecx
  0000b	3b c6		 cmp	 eax, esi
  0000d	0f 95 c1	 setne	 cl
  00010	8a c1		 mov	 al, cl
  00012	5e		 pop	 esi

; 247  : 			}

  00013	c2 04 00	 ret	 4
??9const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBE_NABV012@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::operator!=
_TEXT	ENDS
PUBLIC	??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT
_pStringMgr$ = 8					; size = 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 210  : 	explicit CSimpleStringT( IAtlStringMgr* pStringMgr ) throw()

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 211  : 	{
; 212  : 		ATLASSERT( pStringMgr != NULL );
; 213  : 		CStringData* pData = pStringMgr->GetNilString();

  00003	8b 4c 24 08	 mov	 ecx, DWORD PTR _pStringMgr$[esp]
  00007	8b 01		 mov	 eax, DWORD PTR [ecx]
  00009	ff 50 0c	 call	 DWORD PTR [eax+12]

; 214  : 		Attach( pData );

  0000c	83 c0 10	 add	 eax, 16			; 00000010H
  0000f	89 06		 mov	 DWORD PTR [esi], eax

; 215  : 	}

  00011	8b c6		 mov	 eax, esi
  00013	5e		 pop	 esi
  00014	c2 04 00	 ret	 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z ENDP ; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
; Function compile flags: /Ogty
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ PROC NEAR		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 263  : 		CStringData* pData = GetData();

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 264  : 		pData->Release();

  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L135732
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L135732:

; 265  : 	}

  0001c	c3		 ret	 0
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ ENDP		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z PROC NEAR ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 34   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 35   : 		}

  00002	c2 04 00	 ret	 4
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Lmost
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Rmost@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Rmost
; Function compile flags: /Ogty
;	COMDAT ?_Rmost@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Rmost@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Rmost, COMDAT
; _this$ = ecx

; 1049 : 		return (_Right(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 08	 add	 eax, 8

; 1050 : 		}

  00006	c3		 ret	 0
?_Rmost@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Rmost
_TEXT	ENDS
PUBLIC	?_Root@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Root
; Function compile flags: /Ogty
;	COMDAT ?_Root@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Root@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Root, COMDAT
; _this$ = ecx

; 1059 : 		return (_Parent(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	83 c0 04	 add	 eax, 4

; 1060 : 		}

  00006	c3		 ret	 0
?_Root@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Root
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTFRIEND@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTFRIEND@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTFRIEND@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTFRIEND@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTSOULMATE@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTSOULMATE@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTSOULMATE@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBKPAUtagTSOULMATE@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagTCHARCON@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagTCHARCON@@@2@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagTCHARCON@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 205  : 			return (_Myval(_Ptr));

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 206  : 			}

  00005	c3		 ret	 0
??Dconst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEABU?$pair@$$CBEPAUtagTCHARCON@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?_Lmost@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Lmost
; Function compile flags: /Ogty
;	COMDAT ?_Lmost@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@XZ
_TEXT	SEGMENT
?_Lmost@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Lmost, COMDAT
; _this$ = ecx

; 1005 : 		return (_Left(_Myhead));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1006 : 		}

  00003	c3		 ret	 0
?_Lmost@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@IAEAAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::_Lmost
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEAAUtagTCASHITMSALE@@XZ ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::operator*
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Diterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEAAUtagTCASHITMSALE@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEAAUtagTCASHITMSALE@@XZ PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEAAUtagTCASHITMSALE@@XZ ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@GV?$allocator@G@std@@@std@@QBEAAGXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@GV?$allocator@G@std@@@std@@QBEAAGXZ
_TEXT	SEGMENT
??Diterator@?$vector@GV?$allocator@G@std@@@std@@QBEAAGXZ PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@GV?$allocator@G@std@@@std@@QBEAAGXZ ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@GV?$allocator@G@std@@@std@@QBE?AV012@H@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@GV?$allocator@G@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@GV?$allocator@G@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 48	 lea	 edx, DWORD PTR [eax+ecx*2]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@GV?$allocator@G@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBEAAUtagMONREGEN@@XZ ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBEAAUtagMONREGEN@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBEAAUtagMONREGEN@@XZ PROC NEAR ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBEAAUtagMONREGEN@@XZ ENDP ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Off$[esp-4]
  00004	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00006	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00009	8d 14 c1	 lea	 edx, DWORD PTR [ecx+eax*8]
  0000c	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00010	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  00012	c2 08 00	 ret	 8
??Hiterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBEAAUtagLOTTERY@@XZ ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBEAAUtagLOTTERY@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBEAAUtagLOTTERY@@XZ PROC NEAR ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBEAAUtagLOTTERY@@XZ ENDP ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Off$[esp-4]
  00004	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00006	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  00009	8d 14 41	 lea	 edx, DWORD PTR [ecx+eax*2]
  0000c	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00010	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  00012	c2 08 00	 ret	 8
??Hiterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::iterator::operator+
_TEXT	ENDS
PUBLIC	?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ	; ATL::CSimpleStringT<char,0>::GetLength
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT
?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::GetLength, COMDAT
; _this$ = ecx

; 501  : 		return( GetData()->nDataLength );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 40 f4	 mov	 eax, DWORD PTR [eax-12]

; 502  : 	}

  00005	c3		 ret	 0
?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ ENDP	; ATL::CSimpleStringT<char,0>::GetLength
_TEXT	ENDS
PUBLIC	?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength
; Function compile flags: /Ogty
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT
_nNewLength$ = 8					; size = 4
?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength, COMDAT
; _this$ = ecx

; 547  : 		ATLASSERT( nNewLength >= 0 );
; 548  : 		SetLength( nNewLength );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _nNewLength$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	7c 13		 jl	 SHORT $L135892
  00008	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000a	3b 42 f8	 cmp	 eax, DWORD PTR [edx-8]
  0000d	7f 0c		 jg	 SHORT $L135892
  0000f	89 42 f4	 mov	 DWORD PTR [edx-12], eax
  00012	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00014	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0

; 549  : 	}

  00018	c2 04 00	 ret	 4
$L135892:
  0001b	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00020	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L135900:
$L135899:
  00025	cc		 int	 3
?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z ENDP ; ATL::CSimpleStringT<char,0>::ReleaseBufferSetLength
_TEXT	ENDS
PUBLIC	?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
; Function compile flags: /Ogty
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT
_nLength$ = 8						; size = 4
?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::PrepareWrite2, COMDAT
; _this$ = ecx

; 747  : 		CStringData* pOldData = GetData();

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 748  : 		if( pOldData->nDataLength > nLength )

  00002	8b 54 24 04	 mov	 edx, DWORD PTR _nLength$[esp-4]
  00006	83 e8 10	 sub	 eax, 16			; 00000010H
  00009	56		 push	 esi
  0000a	8b 70 04	 mov	 esi, DWORD PTR [eax+4]
  0000d	3b f2		 cmp	 esi, edx
  0000f	7e 02		 jle	 SHORT $L119029

; 749  : 		{
; 750  : 			nLength = pOldData->nDataLength;

  00011	8b d6		 mov	 edx, esi
$L119029:

; 751  : 		}
; 752  : 		if( pOldData->IsShared() )

  00013	83 78 0c 01	 cmp	 DWORD PTR [eax+12], 1
  00017	5e		 pop	 esi
  00018	7e 09		 jle	 SHORT $L119030

; 753  : 		{
; 754  : 			Fork( nLength );

  0001a	89 54 24 04	 mov	 DWORD PTR _nLength$[esp-4], edx
  0001e	e9 00 00 00 00	 jmp	 ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::Fork
$L119030:

; 755  : 		}
; 756  : 		else if( pOldData->nAllocLength < nLength )

  00023	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  00026	3b c2		 cmp	 eax, edx
  00028	7d 1f		 jge	 SHORT $L119032

; 757  : 		{
; 758  : 			// Grow exponentially, until we hit 1K.
; 759  : 			int nNewLength = pOldData->nAllocLength;
; 760  : 			if( nNewLength > 1024 )

  0002a	3d 00 04 00 00	 cmp	 eax, 1024		; 00000400H
  0002f	7e 07		 jle	 SHORT $L119034

; 761  : 			{
; 762  : 				nNewLength += 1024;

  00031	05 00 04 00 00	 add	 eax, 1024		; 00000400H

; 763  : 			}
; 764  : 			else

  00036	eb 02		 jmp	 SHORT $L119035
$L119034:

; 765  : 			{
; 766  : 				nNewLength *= 2;

  00038	03 c0		 add	 eax, eax
$L119035:

; 767  : 			}
; 768  : 			if( nNewLength < nLength )

  0003a	3b c2		 cmp	 eax, edx
  0003c	7d 02		 jge	 SHORT $L119036

; 769  : 			{
; 770  : 				nNewLength = nLength;

  0003e	8b c2		 mov	 eax, edx
$L119036:

; 771  : 			}
; 772  : 			Reallocate( nNewLength );

  00040	89 44 24 04	 mov	 DWORD PTR _nLength$[esp-4], eax
  00044	e9 00 00 00 00	 jmp	 ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::Reallocate
$L119032:

; 773  : 		}
; 774  : 	}

  00049	c2 04 00	 ret	 4
?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ENDP	; ATL::CSimpleStringT<char,0>::PrepareWrite2
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	8b 44 24 04	 mov	 eax, DWORD PTR __Newsize$[esp-4]
  00008	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0000b	72 0a		 jb	 SHORT $L135919
  0000d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00010	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1476 : 		}

  00014	c2 04 00	 ret	 4

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

$L135919:
  00017	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 1476 : 		}

  0001c	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Node>::destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Node>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@U_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Node>::destroy
_TEXT	ENDS
PUBLIC	?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Node *>::destroy
; Function compile flags: /Ogty
;	COMDAT ?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Node *>::destroy, COMDAT
; _this$ = ecx

; 152  : 		_Destroy(_Ptr);
; 153  : 		}

  00000	c2 04 00	 ret	 4
?destroy@?$allocator@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@@std@@QAEXPAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::allocator<std::_Tree_nod<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Node *>::destroy
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::_Destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);
; 788  : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::_Destroy
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@GV?$allocator@G@std@@@std@@QAE@PAG@Z ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAE@PAUtagMONREGEN@@@Z ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAE@PAUtagMONREGEN@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAE@PAUtagMONREGEN@@@Z PROC NEAR ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAE@PAUtagMONREGEN@@@Z ENDP ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAE@PAUtagLOTTERY@@@Z ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAE@PAUtagLOTTERY@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAE@PAUtagLOTTERY@@@Z PROC NEAR ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAE@PAUtagLOTTERY@@@Z ENDP ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ	; ATL::CSimpleStringT<char,0>::Empty
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT
?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::Empty, COMDAT
; _this$ = ecx

; 421  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 422  : 		CStringData* pOldData = GetData();

  00003	8b 0e		 mov	 ecx, DWORD PTR [esi]

; 423  : 		IAtlStringMgr* pStringMgr = pOldData->pStringMgr;
; 424  : 		if( pOldData->nDataLength == 0 )

  00005	8b 51 f4	 mov	 edx, DWORD PTR [ecx-12]
  00008	85 d2		 test	 edx, edx
  0000a	8d 41 f0	 lea	 eax, DWORD PTR [ecx-16]
  0000d	57		 push	 edi
  0000e	8b 38		 mov	 edi, DWORD PTR [eax]
  00010	74 4c		 je	 SHORT $L135996
  00012	53		 push	 ebx

; 425  : 		{
; 426  : 			return;
; 427  : 		}
; 428  : 
; 429  : 		if( pOldData->IsLocked() )

  00013	8b 58 0c	 mov	 ebx, DWORD PTR [eax+12]
  00016	8d 50 0c	 lea	 edx, DWORD PTR [eax+12]
  00019	85 db		 test	 ebx, ebx
  0001b	5b		 pop	 ebx
  0001c	7d 20		 jge	 SHORT $L120127

; 430  : 		{
; 431  : 			// Don't reallocate a locked buffer that's shrinking
; 432  : 			SetLength( 0 );

  0001e	8b 41 f8	 mov	 eax, DWORD PTR [ecx-8]
  00021	85 c0		 test	 eax, eax
  00023	7d 0a		 jge	 SHORT $L135980
  00025	68 57 00 07 80	 push	 -2147024809		; 80070057H
  0002a	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L136001:
$L135980:
  0002f	c7 41 f4 00 00
	00 00		 mov	 DWORD PTR [ecx-12], 0
  00036	8b 06		 mov	 eax, DWORD PTR [esi]
  00038	5f		 pop	 edi
  00039	c6 00 00	 mov	 BYTE PTR [eax], 0
  0003c	5e		 pop	 esi

; 439  : 		}
; 440  : 	}

  0003d	c3		 ret	 0
$L120127:

; 433  : 		}
; 434  : 		else
; 435  : 		{
; 436  : 			pOldData->Release();

  0003e	83 c9 ff	 or	 ecx, -1
  00041	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
  00045	49		 dec	 ecx
  00046	85 c9		 test	 ecx, ecx
  00048	7f 08		 jg	 SHORT $L135990
  0004a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0004c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004e	50		 push	 eax
  0004f	ff 52 04	 call	 DWORD PTR [edx+4]
$L135990:

; 437  : 			CStringData* pNewData = pStringMgr->GetNilString();

  00052	8b 07		 mov	 eax, DWORD PTR [edi]
  00054	8b cf		 mov	 ecx, edi
  00056	ff 50 0c	 call	 DWORD PTR [eax+12]

; 438  : 			Attach( pNewData );

  00059	83 c0 10	 add	 eax, 16			; 00000010H
  0005c	89 06		 mov	 DWORD PTR [esi], eax
$L135996:
  0005e	5f		 pop	 edi
  0005f	5e		 pop	 esi

; 439  : 		}
; 440  : 	}

  00060	c3		 ret	 0
$L136000:
?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ ENDP		; ATL::CSimpleStringT<char,0>::Empty
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1114 : 		size_type _Num = _Mybase::_Alval.max_size();
; 1115 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH

; 1116 : 		}

  00005	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L120540

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L136061

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L136042
  0001d	8d 49 00	 npad	 3
$L136041:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L136041
$L136042:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L136061:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L120544
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L120543:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L120544

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L120543
$L120544:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L120540:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::_Inc
; Function compile flags: /Ogty
;	COMDAT ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::_Inc, COMDAT
; _this$ = ecx

; 268  : 			if (_Isnil(_Ptr))

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00005	84 d2		 test	 dl, dl
  00007	75 4d		 jne	 SHORT $L120560

; 269  : 				;	// end() shouldn't be incremented, don't move
; 270  : 			else if (!_Isnil(_Right(_Ptr)))

  00009	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0000c	53		 push	 ebx
  0000d	8a 5a 15	 mov	 bl, BYTE PTR [edx+21]
  00010	84 db		 test	 bl, bl
  00012	75 1b		 jne	 SHORT $L136111

; 271  : 				_Ptr = _Min(_Right(_Ptr));	// ==> smallest of right subtree

  00014	8b 02		 mov	 eax, DWORD PTR [edx]
  00016	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00019	84 db		 test	 bl, bl
  0001b	75 0e		 jne	 SHORT $L136092
  0001d	8d 49 00	 npad	 3
$L136091:
  00020	8b d0		 mov	 edx, eax
  00022	8b 02		 mov	 eax, DWORD PTR [edx]
  00024	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00027	84 db		 test	 bl, bl
  00029	74 f5		 je	 SHORT $L136091
$L136092:
  0002b	89 11		 mov	 DWORD PTR [ecx], edx
  0002d	5b		 pop	 ebx

; 279  : 				}
; 280  : 			}

  0002e	c3		 ret	 0
$L136111:

; 272  : 			else
; 273  : 				{	// climb looking for right subtree
; 274  : 				_Nodeptr _Pnode;
; 275  : 				while (!_Isnil(_Pnode = _Parent(_Ptr))
; 276  : 					&& _Ptr == _Right(_Pnode))

  0002f	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00032	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00035	84 d2		 test	 dl, dl
  00037	75 1a		 jne	 SHORT $L120564
  00039	8d a4 24 00 00
	00 00		 npad	 7
$L120563:
  00040	8b 11		 mov	 edx, DWORD PTR [ecx]
  00042	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  00045	75 0c		 jne	 SHORT $L120564

; 277  : 					_Ptr = _Pnode;	// ==> parent while right subtree

  00047	89 01		 mov	 DWORD PTR [ecx], eax
  00049	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0004c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0004f	84 d2		 test	 dl, dl
  00051	74 ed		 je	 SHORT $L120563
$L120564:

; 278  : 				_Ptr = _Pnode;	// ==> parent (head if end())

  00053	89 01		 mov	 DWORD PTR [ecx], eax
  00055	5b		 pop	 ebx
$L120560:

; 279  : 				}
; 280  : 			}

  00056	c3		 ret	 0
?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::_Inc
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??0iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Pnode$ = 8						; size = 4
??0iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::iterator::iterator, COMDAT
; _this$ = ecx

; 312  : 			{	// construct with node pointer _Pnode

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pnode$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 313  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE@PAU_Node@?$_Tree_nod@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC NEAR	; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 138  : 		}

  0000d	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	?_Lrotate@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Lrotate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Lrotate@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Lrotate, COMDAT
; _this$ = ecx

; 1015 : 		_Nodeptr _Pnode = _Right(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 42 08	 mov	 eax, DWORD PTR [edx+8]
  00007	53		 push	 ebx
  00008	56		 push	 esi

; 1016 : 		_Right(_Wherenode) = _Left(_Pnode);

  00009	8b 30		 mov	 esi, DWORD PTR [eax]
  0000b	89 72 08	 mov	 DWORD PTR [edx+8], esi

; 1017 : 
; 1018 : 		if (!_Isnil(_Left(_Pnode)))

  0000e	8b 30		 mov	 esi, DWORD PTR [eax]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L120934

; 1019 : 			_Parent(_Left(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L120934:

; 1020 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1021 : 
; 1022 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0d		 jne	 SHORT $L120935

; 1023 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0002c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0002e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00031	5b		 pop	 ebx

; 1031 : 		}

  00032	c2 04 00	 ret	 4
$L120935:

; 1024 : 		else if (_Wherenode == _Left(_Parent(_Wherenode)))

  00035	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00038	3b 11		 cmp	 edx, DWORD PTR [ecx]
  0003a	75 0c		 jne	 SHORT $L120937

; 1025 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0003c	89 01		 mov	 DWORD PTR [ecx], eax
  0003e	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0003f	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  00041	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00044	5b		 pop	 ebx

; 1031 : 		}

  00045	c2 04 00	 ret	 4
$L120937:

; 1026 : 		else
; 1027 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  00048	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  0004b	5e		 pop	 esi

; 1028 : 
; 1029 : 		_Left(_Pnode) = _Wherenode;

  0004c	89 10		 mov	 DWORD PTR [eax], edx

; 1030 : 		_Parent(_Wherenode) = _Pnode;

  0004e	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00051	5b		 pop	 ebx

; 1031 : 		}

  00052	c2 04 00	 ret	 4
?_Lrotate@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Lrotate
_TEXT	ENDS
PUBLIC	?_Rrotate@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Rrotate
; Function compile flags: /Ogty
;	COMDAT ?_Rrotate@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Wherenode$ = 8					; size = 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Rrotate, COMDAT
; _this$ = ecx

; 1069 : 		_Nodeptr _Pnode = _Left(_Wherenode);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Wherenode$[esp-4]
  00004	8b 02		 mov	 eax, DWORD PTR [edx]
  00006	53		 push	 ebx
  00007	56		 push	 esi

; 1070 : 		_Left(_Wherenode) = _Right(_Pnode);

  00008	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  0000b	89 32		 mov	 DWORD PTR [edx], esi

; 1071 : 
; 1072 : 		if (!_Isnil(_Right(_Pnode)))

  0000d	8b 70 08	 mov	 esi, DWORD PTR [eax+8]
  00010	8a 5e 15	 mov	 bl, BYTE PTR [esi+21]
  00013	84 db		 test	 bl, bl
  00015	75 03		 jne	 SHORT $L120950

; 1073 : 			_Parent(_Right(_Pnode)) = _Wherenode;

  00017	89 56 04	 mov	 DWORD PTR [esi+4], edx
$L120950:

; 1074 : 		_Parent(_Pnode) = _Parent(_Wherenode);

  0001a	8b 72 04	 mov	 esi, DWORD PTR [edx+4]
  0001d	89 70 04	 mov	 DWORD PTR [eax+4], esi

; 1075 : 
; 1076 : 		if (_Wherenode == _Root())

  00020	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00023	3b 51 04	 cmp	 edx, DWORD PTR [ecx+4]
  00026	75 0e		 jne	 SHORT $L120951

; 1077 : 			_Root() = _Pnode;

  00028	89 41 04	 mov	 DWORD PTR [ecx+4], eax
  0002b	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0002c	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  0002f	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00032	5b		 pop	 ebx

; 1085 : 		}

  00033	c2 04 00	 ret	 4
$L120951:

; 1078 : 		else if (_Wherenode == _Right(_Parent(_Wherenode)))

  00036	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  00039	3b 51 08	 cmp	 edx, DWORD PTR [ecx+8]
  0003c	75 0e		 jne	 SHORT $L120953

; 1079 : 			_Right(_Parent(_Wherenode)) = _Pnode;

  0003e	89 41 08	 mov	 DWORD PTR [ecx+8], eax
  00041	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  00042	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00045	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00048	5b		 pop	 ebx

; 1085 : 		}

  00049	c2 04 00	 ret	 4
$L120953:

; 1080 : 		else
; 1081 : 			_Left(_Parent(_Wherenode)) = _Pnode;

  0004c	89 01		 mov	 DWORD PTR [ecx], eax
  0004e	5e		 pop	 esi

; 1082 : 
; 1083 : 		_Right(_Pnode) = _Wherenode;

  0004f	89 50 08	 mov	 DWORD PTR [eax+8], edx

; 1084 : 		_Parent(_Wherenode) = _Pnode;

  00052	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00055	5b		 pop	 ebx

; 1085 : 		}

  00056	c2 04 00	 ret	 4
?_Rrotate@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Rrotate
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	?SendMW_MONTHRANKLIST_REQ@CTServer@@QAEXQAY0CB@UtagMONTHRANKER@@E@Z ; CTServer::SendMW_MONTHRANKLIST_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	SEGMENT
$T136318 DD	0ffffffffH
	DD	FLAT:$L136309
$T136311 DD	019930520H
	DD	01H
	DD	FLAT:$T136318
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_MONTHRANKLIST_REQ@CTServer@@QAEXQAY0CB@UtagMONTHRANKER@@E@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T136306 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_arMonthRank$ = 8					; size = 4
_bRankMonth$ = 12					; size = 1
?SendMW_MONTHRANKLIST_REQ@CTServer@@QAEXQAY0CB@UtagMONTHRANKER@@E@Z PROC NEAR ; CTServer::SendMW_MONTHRANKLIST_REQ, COMDAT
; _this$ = ecx

; 3118 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MONTHRANKLIST_REQ@CTServer@@QAEXQAY0CB@UtagMONTHRANKER@@E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi

; 3119 : 	CPacket* pMSG = new CPacket();

  0001c	6a 1c		 push	 28			; 0000001cH
  0001e	89 4c 24 14	 mov	 DWORD PTR _this$[esp+40], ecx
  00022	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00027	83 c4 04	 add	 esp, 4
  0002a	89 44 24 14	 mov	 DWORD PTR $T136306[esp+36], eax
  0002e	33 db		 xor	 ebx, ebx
  00030	3b c3		 cmp	 eax, ebx
  00032	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00036	74 09		 je	 SHORT $L136308
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b d8		 mov	 ebx, eax
$L136308:

; 3120 : 	pMSG->SetID(MW_MONTHRANKLIST_REQ)
; 3121 : 		<< bRankMonth
; 3122 : 		<< (BYTE)MONTHRANKCOUNT;

  00041	8b 44 24 2c	 mov	 eax, DWORD PTR _bRankMonth$[esp+32]
  00045	6a 21		 push	 33			; 00000021H
  00047	50		 push	 eax
  00048	68 3f 21 00 00	 push	 8511			; 0000213fH
  0004d	8b cb		 mov	 ecx, ebx
  0004f	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00057	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005c	8b c8		 mov	 ecx, eax
  0005e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0006a	8b 74 24 28	 mov	 esi, DWORD PTR _arMonthRank$[esp+32]
  0006e	bd 02 00 00 00	 mov	 ebp, 2
$L136316:

; 3125 :         for(BYTE j = 0; j < MONTHRANKCOUNT; j++)

  00073	bf 21 00 00 00	 mov	 edi, 33			; 00000021H
$L127467:

; 3126 : 			arMonthRank[i][j].WrapPacketIn(pMSG);

  00078	53		 push	 ebx
  00079	8b ce		 mov	 ecx, esi
  0007b	e8 00 00 00 00	 call	 ?WrapPacketIn@tagMONTHRANKER@@QAEXPAVCPacket@@@Z ; tagMONTHRANKER::WrapPacketIn
  00080	83 c6 34	 add	 esi, 52			; 00000034H
  00083	4f		 dec	 edi
  00084	75 f2		 jne	 SHORT $L127467

; 3123 : 
; 3124 : 	for(BYTE i = 0; i < COUNTRY_COUNT; i++)

  00086	4d		 dec	 ebp
  00087	75 ea		 jne	 SHORT $L136316

; 3127 : 
; 3128 : 	Say(pMSG);

  00089	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+36]
  0008d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008f	53		 push	 ebx
  00090	ff 12		 call	 DWORD PTR [edx]

; 3129 : }

  00092	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	5d		 pop	 ebp
  00099	5b		 pop	 ebx
  0009a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a1	83 c4 14	 add	 esp, 20			; 00000014H
  000a4	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136309:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136306[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MONTHRANKLIST_REQ@CTServer@@QAEXQAY0CB@UtagMONTHRANKER@@E@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136311
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MONTHRANKLIST_REQ@CTServer@@QAEXQAY0CB@UtagMONTHRANKER@@E@Z ENDP ; CTServer::SendMW_MONTHRANKLIST_REQ
PUBLIC	?SendMW_MONTHRANKRESET_REQ@CTServer@@QAEXQAUtagMONTHRANKER@@E@Z ; CTServer::SendMW_MONTHRANKRESET_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T136334 DD	0ffffffffH
	DD	FLAT:$L136328
$T136330 DD	019930520H
	DD	01H
	DD	FLAT:$T136334
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_MONTHRANKRESET_REQ@CTServer@@QAEXQAUtagMONTHRANKER@@E@Z
_TEXT	SEGMENT
$T136325 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_arMonthRank$ = 8					; size = 4
_bRankMonth$ = 12					; size = 1
?SendMW_MONTHRANKRESET_REQ@CTServer@@QAEXQAUtagMONTHRANKER@@E@Z PROC NEAR ; CTServer::SendMW_MONTHRANKRESET_REQ, COMDAT
; _this$ = ecx

; 3132 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MONTHRANKRESET_REQ@CTServer@@QAEXQAUtagMONTHRANKER@@E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi

; 3133 : 	CPacket* pMSG = new CPacket();

  0001a	6a 1c		 push	 28			; 0000001cH
  0001c	8b e9		 mov	 ebp, ecx
  0001e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00023	83 c4 04	 add	 esp, 4
  00026	89 44 24 10	 mov	 DWORD PTR $T136325[esp+32], eax
  0002a	33 ff		 xor	 edi, edi
  0002c	3b c7		 cmp	 eax, edi
  0002e	89 7c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], edi
  00032	74 09		 je	 SHORT $L136327
  00034	8b c8		 mov	 ecx, eax
  00036	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003b	8b f8		 mov	 edi, eax
$L136327:

; 3134 : 	pMSG->SetID(MW_MONTHRANKRESET_REQ)
; 3135 : 		<< bRankMonth
; 3136 : 		<< (BYTE)FAMERANKCOUNT;

  0003d	8b 44 24 28	 mov	 eax, DWORD PTR _bRankMonth$[esp+28]
  00041	6a 09		 push	 9
  00043	50		 push	 eax
  00044	68 40 21 00 00	 push	 8512			; 00002140H
  00049	8b cf		 mov	 ecx, edi
  0004b	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  00053	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00058	8b c8		 mov	 ecx, eax
  0005a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0005f	8b c8		 mov	 ecx, eax
  00061	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00066	8b 74 24 24	 mov	 esi, DWORD PTR _arMonthRank$[esp+28]
  0006a	bb 09 00 00 00	 mov	 ebx, 9
  0006f	90		 npad	 1
$L127482:

; 3137 : 
; 3138 : 	for(BYTE i = 0; i < FAMERANKCOUNT; i++)
; 3139 :         arMonthRank[i].WrapPacketIn(pMSG);

  00070	57		 push	 edi
  00071	8b ce		 mov	 ecx, esi
  00073	e8 00 00 00 00	 call	 ?WrapPacketIn@tagMONTHRANKER@@QAEXPAVCPacket@@@Z ; tagMONTHRANKER::WrapPacketIn
  00078	83 c6 34	 add	 esi, 52			; 00000034H
  0007b	4b		 dec	 ebx
  0007c	75 f2		 jne	 SHORT $L127482

; 3140 : 
; 3141 : 	Say(pMSG);	

  0007e	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  00081	57		 push	 edi
  00082	8b cd		 mov	 ecx, ebp
  00084	ff 12		 call	 DWORD PTR [edx]

; 3142 : }

  00086	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	5d		 pop	 ebp
  0008d	5b		 pop	 ebx
  0008e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00095	83 c4 10	 add	 esp, 16			; 00000010H
  00098	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136328:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136325[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MONTHRANKRESET_REQ@CTServer@@QAEXQAUtagMONTHRANKER@@E@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136330
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MONTHRANKRESET_REQ@CTServer@@QAEXQAUtagMONTHRANKER@@E@Z ENDP ; CTServer::SendMW_MONTHRANKRESET_REQ
PUBLIC	?SendMW_MONTHRANKUPDATE_REQ@CTServer@@QAEXEEEEQAY0CB@UtagMONTHRANKER@@E@Z ; CTServer::SendMW_MONTHRANKUPDATE_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T136350 DD	0ffffffffH
	DD	FLAT:$L136344
$T136346 DD	019930520H
	DD	01H
	DD	FLAT:$T136350
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_MONTHRANKUPDATE_REQ@CTServer@@QAEXEEEEQAY0CB@UtagMONTHRANKER@@E@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T136341 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bMonth$ = 8						; size = 1
_bCountry$ = 12						; size = 1
_bStartRank$ = 16					; size = 1
_bEndRank$ = 20						; size = 1
_arMonthRank$ = 24					; size = 4
_bNewWarlord$ = 28					; size = 1
?SendMW_MONTHRANKUPDATE_REQ@CTServer@@QAEXEEEEQAY0CB@UtagMONTHRANKER@@E@Z PROC NEAR ; CTServer::SendMW_MONTHRANKUPDATE_REQ, COMDAT
; _this$ = ecx

; 3155 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_MONTHRANKUPDATE_REQ@CTServer@@QAEXEEEEQAY0CB@UtagMONTHRANKER@@E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	8b f1		 mov	 esi, ecx

; 3156 : 	CPacket* pMSG = new CPacket();

  0001e	6a 1c		 push	 28			; 0000001cH
  00020	89 74 24 14	 mov	 DWORD PTR _this$[esp+40], esi
  00024	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00029	83 c4 04	 add	 esp, 4
  0002c	89 44 24 14	 mov	 DWORD PTR $T136341[esp+36], eax
  00030	33 ff		 xor	 edi, edi
  00032	3b c7		 cmp	 eax, edi
  00034	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00038	74 09		 je	 SHORT $L136343
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f8		 mov	 edi, eax
$L136343:

; 3157 : 	pMSG->SetID(MW_MONTHRANKUPDATE_REQ)
; 3158 : 		<< bMonth
; 3159 : 		<< bCountry
; 3160 : 		<< bStartRank
; 3161 : 		<< bEndRank;		

  00043	8b 5c 24 34	 mov	 ebx, DWORD PTR _bEndRank$[esp+32]
  00047	8b 44 24 30	 mov	 eax, DWORD PTR _bStartRank$[esp+32]
  0004b	8b 4c 24 2c	 mov	 ecx, DWORD PTR _bCountry$[esp+32]
  0004f	8b 54 24 28	 mov	 edx, DWORD PTR _bMonth$[esp+32]
  00053	53		 push	 ebx
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	52		 push	 edx
  00057	68 3d 21 00 00	 push	 8509			; 0000213dH
  0005c	8b cf		 mov	 ecx, edi
  0005e	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+64], -1
  00066	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006b	8b c8		 mov	 ecx, eax
  0006d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3162 : 
; 3163 : 	if(bStartRank && bEndRank)

  00087	8a 44 24 30	 mov	 al, BYTE PTR _bStartRank$[esp+32]
  0008b	84 c0		 test	 al, al
  0008d	8b 6c 24 38	 mov	 ebp, DWORD PTR _arMonthRank$[esp+32]
  00091	74 33		 je	 SHORT $L127512
  00093	84 db		 test	 bl, bl
  00095	74 2f		 je	 SHORT $L127512

; 3164 : 		for(BYTE i = bStartRank; i <= bEndRank; i++)

  00097	3a c3		 cmp	 al, bl
  00099	77 2b		 ja	 SHORT $L127512
  0009b	0f b6 74 24 2c	 movzx	 esi, BYTE PTR _bCountry$[esp+32]
  000a0	6b f6 21	 imul	 esi, 33			; 00000021H
  000a3	0f b6 c8	 movzx	 ecx, al
  000a6	03 f1		 add	 esi, ecx
  000a8	6b f6 34	 imul	 esi, 52			; 00000034H
  000ab	2a d8		 sub	 bl, al
  000ad	03 f5		 add	 esi, ebp
  000af	fe c3		 inc	 bl
  000b1	0f b6 db	 movzx	 ebx, bl
$L127510:

; 3165 : 			arMonthRank[bCountry][i].WrapPacketIn(pMSG);

  000b4	57		 push	 edi
  000b5	8b ce		 mov	 ecx, esi
  000b7	e8 00 00 00 00	 call	 ?WrapPacketIn@tagMONTHRANKER@@QAEXPAVCPacket@@@Z ; tagMONTHRANKER::WrapPacketIn
  000bc	83 c6 34	 add	 esi, 52			; 00000034H
  000bf	4b		 dec	 ebx
  000c0	75 f2		 jne	 SHORT $L127510

; 3164 : 		for(BYTE i = bStartRank; i <= bEndRank; i++)

  000c2	8b 74 24 10	 mov	 esi, DWORD PTR _this$[esp+36]
$L127512:

; 3166 :         
; 3167 : 	if(!bNewWarlord)

  000c6	8a 44 24 3c	 mov	 al, BYTE PTR _bNewWarlord$[esp+32]
  000ca	84 c0		 test	 al, al

; 3168 : 	{
; 3169 : 		(*pMSG) 
; 3170 : 			<< BYTE(FALSE);

  000cc	8b cf		 mov	 ecx, edi
  000ce	75 09		 jne	 SHORT $L127513
  000d0	6a 00		 push	 0
  000d2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3171 : 	}
; 3172 : 	else

  000d7	eb 1a		 jmp	 SHORT $L127514
$L127513:

; 3173 : 	{
; 3174 : 		(*pMSG)
; 3175 : 			<< (BYTE)TRUE;

  000d9	6a 01		 push	 1
  000db	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3176 : 
; 3177 : 		arMonthRank[bCountry][0].WrapPacketIn(pMSG);

  000e0	0f b6 4c 24 2c	 movzx	 ecx, BYTE PTR _bCountry$[esp+32]
  000e5	69 c9 b4 06 00
	00		 imul	 ecx, 1716		; 000006b4H
  000eb	57		 push	 edi
  000ec	03 cd		 add	 ecx, ebp
  000ee	e8 00 00 00 00	 call	 ?WrapPacketIn@tagMONTHRANKER@@QAEXPAVCPacket@@@Z ; tagMONTHRANKER::WrapPacketIn
$L127514:

; 3178 : 	}
; 3179 : 	
; 3180 : 	Say(pMSG);

  000f3	8b 16		 mov	 edx, DWORD PTR [esi]
  000f5	57		 push	 edi
  000f6	8b ce		 mov	 ecx, esi
  000f8	ff 12		 call	 DWORD PTR [edx]

; 3181 : }

  000fa	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  000fe	5f		 pop	 edi
  000ff	5e		 pop	 esi
  00100	5d		 pop	 ebp
  00101	5b		 pop	 ebx
  00102	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00109	83 c4 14	 add	 esp, 20			; 00000014H
  0010c	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136344:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136341[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_MONTHRANKUPDATE_REQ@CTServer@@QAEXEEEEQAY0CB@UtagMONTHRANKER@@E@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136346
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_MONTHRANKUPDATE_REQ@CTServer@@QAEXEEEEQAY0CB@UtagMONTHRANKER@@E@Z ENDP ; CTServer::SendMW_MONTHRANKUPDATE_REQ
PUBLIC	?SendMW_FIRSTGRADEGROUP_REQ@CTServer@@QAEXQAY0BB@UtagMONTHRANKER@@E@Z ; CTServer::SendMW_FIRSTGRADEGROUP_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T136369 DD	0ffffffffH
	DD	FLAT:$L136360
$T136362 DD	019930520H
	DD	01H
	DD	FLAT:$T136369
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_FIRSTGRADEGROUP_REQ@CTServer@@QAEXQAY0BB@UtagMONTHRANKER@@E@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T136357 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_arMonthRank$ = 8					; size = 4
_bRankMonth$ = 12					; size = 1
?SendMW_FIRSTGRADEGROUP_REQ@CTServer@@QAEXQAY0BB@UtagMONTHRANKER@@E@Z PROC NEAR ; CTServer::SendMW_FIRSTGRADEGROUP_REQ, COMDAT
; _this$ = ecx

; 3196 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FIRSTGRADEGROUP_REQ@CTServer@@QAEXQAY0BB@UtagMONTHRANKER@@E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi

; 3197 : 	CPacket* pMSG = new CPacket();

  0001c	6a 1c		 push	 28			; 0000001cH
  0001e	89 4c 24 14	 mov	 DWORD PTR _this$[esp+40], ecx
  00022	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00027	83 c4 04	 add	 esp, 4
  0002a	89 44 24 14	 mov	 DWORD PTR $T136357[esp+36], eax
  0002e	33 db		 xor	 ebx, ebx
  00030	3b c3		 cmp	 eax, ebx
  00032	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00036	74 09		 je	 SHORT $L136359
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b d8		 mov	 ebx, eax
$L136359:

; 3198 : 	pMSG->SetID(MW_FIRSTGRADEGROUP_REQ)
; 3199 : 		<< bRankMonth
; 3200 : 		<< (BYTE)FIRSTGRADEGROUPCOUNT;

  00041	8b 44 24 2c	 mov	 eax, DWORD PTR _bRankMonth$[esp+32]
  00045	6a 11		 push	 17			; 00000011H
  00047	50		 push	 eax
  00048	68 43 21 00 00	 push	 8515			; 00002143H
  0004d	8b cb		 mov	 ecx, ebx
  0004f	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00057	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005c	8b c8		 mov	 ecx, eax
  0005e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0006a	8b 74 24 28	 mov	 esi, DWORD PTR _arMonthRank$[esp+32]
  0006e	bd 02 00 00 00	 mov	 ebp, 2
$L136367:

; 3203 :         for(BYTE j = 0; j < FIRSTGRADEGROUPCOUNT; j++)

  00073	bf 11 00 00 00	 mov	 edi, 17			; 00000011H
$L127544:

; 3204 : 			arMonthRank[i][j].WrapPacketIn(pMSG);

  00078	53		 push	 ebx
  00079	8b ce		 mov	 ecx, esi
  0007b	e8 00 00 00 00	 call	 ?WrapPacketIn@tagMONTHRANKER@@QAEXPAVCPacket@@@Z ; tagMONTHRANKER::WrapPacketIn
  00080	83 c6 34	 add	 esi, 52			; 00000034H
  00083	4f		 dec	 edi
  00084	75 f2		 jne	 SHORT $L127544

; 3201 : 
; 3202 : 	for(BYTE i = 0; i < COUNTRY_COUNT; i++)

  00086	4d		 dec	 ebp
  00087	75 ea		 jne	 SHORT $L136367

; 3205 : 
; 3206 : 	Say(pMSG);

  00089	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+36]
  0008d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008f	53		 push	 ebx
  00090	ff 12		 call	 DWORD PTR [edx]

; 3207 : }

  00092	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  00096	5f		 pop	 edi
  00097	5e		 pop	 esi
  00098	5d		 pop	 ebp
  00099	5b		 pop	 ebx
  0009a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a1	83 c4 14	 add	 esp, 20			; 00000014H
  000a4	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136360:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136357[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_FIRSTGRADEGROUP_REQ@CTServer@@QAEXQAY0BB@UtagMONTHRANKER@@E@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136362
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FIRSTGRADEGROUP_REQ@CTServer@@QAEXQAY0BB@UtagMONTHRANKER@@E@Z ENDP ; CTServer::SendMW_FIRSTGRADEGROUP_REQ
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::end
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTNMTPLAYER@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTNMTPLAYER@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTNMTPLAYER@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTNMTPLAYER@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QBEAAU?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKK@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKK@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKK@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKK@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::end
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGUtagTRPSGAME@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGUtagTRPSGAME@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGUtagTRPSGAME@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBGUtagTRPSGAME@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDMEMBER@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTITEM@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTITEM@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTITEM@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTITEM@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDARTICLE@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::end
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKUtagTGUILDWANTED@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKUtagTGUILDWANTED@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKUtagTGUILDWANTED@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 10	 add	 eax, 16			; 00000010H

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKUtagTGUILDWANTED@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::end
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QBEAAU?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTTACTICSMEMBER@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTCHARACTER@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTCHARACTER@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTCHARACTER@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTCHARACTER@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::end
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?end@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::end
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?end@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::end, COMDAT
; _this$ = ecx

; 473  : 		return (iterator(_Mylast));

  00000	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 474  : 		}

  00009	c2 04 00	 ret	 4
?end@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::end
_TEXT	ENDS
PUBLIC	?begin@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::begin
_TEXT	ENDS
PUBLIC	?begin@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::begin
_TEXT	ENDS
PUBLIC	?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@KV?$allocator@K@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<unsigned long,std::allocator<unsigned long> >::begin
_TEXT	ENDS
PUBLIC	?begin@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::begin
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEUtagCASTLETOP3@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::iterator::operator*
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEUtagCASTLETOP3@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEUtagCASTLETOP3@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEUtagCASTLETOP3@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?begin@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::begin
_TEXT	ENDS
PUBLIC	?begin@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::begin
_TEXT	ENDS
PUBLIC	??Giterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator-
; Function compile flags: /Ogty
;	COMDAT ??Giterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Giterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator-, COMDAT
; _this$ = ecx

; 273  : 			iterator _Tmp = *this;
; 274  : 			return (_Tmp -= _Off);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Off$[esp-4]
  00004	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00006	6b c0 2c	 imul	 eax, 44			; 0000002cH
  00009	2b c8		 sub	 ecx, eax
  0000b	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000f	89 08		 mov	 DWORD PTR [eax], ecx

; 275  : 			}

  00011	c2 08 00	 ret	 8
??Giterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator-
_TEXT	ENDS
PUBLIC	?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Lbound
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@ABK@Z
_TEXT	SEGMENT
__Keyval$ = 8						; size = 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Lbound, COMDAT
; _this$ = ecx

; 988  : 		_Nodeptr _Pnode = _Root();

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]

; 989  : 		_Nodeptr _Wherenode = _Myhead;	// end() if search fails
; 990  : 
; 991  : 		while (!_Isnil(_Pnode))

  00006	8a 51 15	 mov	 dl, BYTE PTR [ecx+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L129855
  0000d	8b 54 24 04	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L129854:

; 992  : 			if (this->comp(_Key(_Pnode), _Keyval))

  00014	39 51 0c	 cmp	 DWORD PTR [ecx+12], edx
  00017	73 05		 jae	 SHORT $L129856

; 993  : 				_Pnode = _Right(_Pnode);	// descend right subtree

  00019	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]

; 994  : 			else

  0001c	eb 04		 jmp	 SHORT $L129857
$L129856:

; 995  : 				{	// _Pnode not less than _Keyval, remember it
; 996  : 				_Wherenode = _Pnode;

  0001e	8b c1		 mov	 eax, ecx

; 997  : 				_Pnode = _Left(_Pnode);	// descend left subtree

  00020	8b 09		 mov	 ecx, DWORD PTR [ecx]
$L129857:
  00022	8a 59 15	 mov	 bl, BYTE PTR [ecx+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L129854
  00029	5b		 pop	 ebx
$L129855:

; 998  : 				}
; 999  : 
; 1000 : 		return (_Wherenode);	// return best remembered candidate
; 1001 : 		}

  0002a	c2 04 00	 ret	 4
?_Lbound@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@IBEPAU_Node@?$_Tree_nod@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@2@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::_Lbound
_TEXT	ENDS
PUBLIC	?_Destroy@?$vector@_JV?$allocator@_J@std@@@std@@IAEXPA_J0@Z ; std::vector<__int64,std::allocator<__int64> >::_Destroy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Destroy@?$vector@_JV?$allocator@_J@std@@@std@@IAEXPA_J0@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@_JV?$allocator@_J@std@@@std@@IAEXPA_J0@Z PROC NEAR ; std::vector<__int64,std::allocator<__int64> >::_Destroy, COMDAT
; _this$ = ecx

; 787  : 		_Destroy_range(_First, _Last, this->_Alval);
; 788  : 		}

  00000	c2 08 00	 ret	 8
?_Destroy@?$vector@_JV?$allocator@_J@std@@@std@@IAEXPA_J0@Z ENDP ; std::vector<__int64,std::allocator<__int64> >::_Destroy
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	?construct@?$allocator@_J@std@@QAEXPA_JAB_J@Z	; std::allocator<__int64>::construct
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?construct@?$allocator@_J@std@@QAEXPA_JAB_J@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Val$ = 12						; size = 4
?construct@?$allocator@_J@std@@QAEXPA_JAB_J@Z PROC NEAR	; std::allocator<__int64>::construct, COMDAT
; _this$ = ecx

; 147  : 		_Construct(_Ptr, _Val);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	85 c0		 test	 eax, eax
  00006	74 0e		 je	 SHORT $L137082
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR __Val$[esp-4]
  0000c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000e	89 10		 mov	 DWORD PTR [eax], edx
  00010	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00013	89 48 04	 mov	 DWORD PTR [eax+4], ecx
$L137082:

; 148  : 		}

  00016	c2 08 00	 ret	 8
?construct@?$allocator@_J@std@@QAEXPA_JAB_J@Z ENDP	; std::allocator<__int64>::construct
_TEXT	ENDS
PUBLIC	??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 796  : 	{

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  0000d	ff 50 0c	 call	 DWORD PTR [eax+12]
  00010	83 c0 10	 add	 eax, 16			; 00000010H
  00013	89 06		 mov	 DWORD PTR [esi], eax

; 797  : 	}

  00015	8b c6		 mov	 eax, esi
  00017	5e		 pop	 esi
  00018	c3		 ret	 0
??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 963  : 	}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H
  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L137123
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L137123:
  0001c	c3		 ret	 0
??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::end
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::end
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTFRIEND@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTFRIEND@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTFRIEND@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTFRIEND@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTSOULMATE@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTSOULMATE@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTSOULMATE@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBKPAUtagTSOULMATE@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagTCHARCON@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagTCHARCON@@@2@XZ
_TEXT	SEGMENT
??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagTCHARCON@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::iterator::operator*, COMDAT
; _this$ = ecx

; 317  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 318  : 			}

  00005	c3		 ret	 0
??Diterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QBEAAU?$pair@$$CBEPAUtagTCHARCON@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::iterator::operator*
_TEXT	ENDS
PUBLIC	?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT
_nLength$ = 8						; size = 4
?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::PrepareWrite, COMDAT
; _this$ = ecx

; 734  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 735  : 		CStringData* pOldData = GetData();

  00003	8b 06		 mov	 eax, DWORD PTR [esi]

; 736  : 		int nShared = 1-pOldData->nRefs;  // nShared < 0 means true, >= 0 means false

  00005	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00008	83 e8 10	 sub	 eax, 16			; 00000010H
  0000b	b9 01 00 00 00	 mov	 ecx, 1
  00010	2b ca		 sub	 ecx, edx

; 737  : 		int nTooShort = pOldData->nAllocLength-nLength;  // nTooShort < 0 means true, >= 0 means false

  00012	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00015	8b 44 24 08	 mov	 eax, DWORD PTR _nLength$[esp]
  00019	2b d0		 sub	 edx, eax

; 738  : 		if( (nShared|nTooShort) < 0 )  // If either sign bit is set (i.e. either is less than zero), we need to copy data

  0001b	0b ca		 or	 ecx, edx
  0001d	7d 08		 jge	 SHORT $L137244

; 739  : 		{
; 740  : 			PrepareWrite2( nLength );

  0001f	50		 push	 eax
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
$L137244:

; 741  : 		}
; 742  : 
; 743  : 		return( m_pszData );

  00027	8b 06		 mov	 eax, DWORD PTR [esi]
  00029	5e		 pop	 esi

; 744  : 	}

  0002a	c2 04 00	 ret	 4
?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z ENDP ; ATL::CSimpleStringT<char,0>::PrepareWrite
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1510 : 		if (!_Built)

  00000	8a 44 24 04	 mov	 al, BYTE PTR __Built$[esp-4]
  00004	84 c0		 test	 al, al
  00006	53		 push	 ebx
  00007	55		 push	 ebp
  00008	8b 6c 24 10	 mov	 ebp, DWORD PTR __Newsize$[esp+4]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	74 2f		 je	 SHORT $L137253

; 1511 : 			;
; 1512 : 		else if (_BUF_SIZE <= _Myres)

  00010	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  00014	72 29		 jb	 SHORT $L137253

; 1513 : 			{	// copy any leftovers to small buffer and deallocate
; 1514 : 			_Elem *_Ptr = _Bx._Ptr;
; 1515 : 			if (0 < _Newsize)

  00016	85 ed		 test	 ebp, ebp
  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	57		 push	 edi
  0001c	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  0001f	76 14		 jbe	 SHORT $L137250
  00021	56		 push	 esi

; 1516 : 				_Traits::copy(_Bx._Buf, _Ptr, _Newsize);

  00022	8b cd		 mov	 ecx, ebp
  00024	8b d1		 mov	 edx, ecx
  00026	c1 e9 02	 shr	 ecx, 2
  00029	8b f0		 mov	 esi, eax
  0002b	f3 a5		 rep movsd
  0002d	8b ca		 mov	 ecx, edx
  0002f	83 e1 03	 and	 ecx, 3
  00032	f3 a4		 rep movsb
  00034	5e		 pop	 esi
$L137250:

; 1517 : 			_Mybase::_Alval.deallocate(_Ptr, _Myres + 1);

  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003b	83 c4 04	 add	 esp, 4
  0003e	5f		 pop	 edi
$L137253:

; 1518 : 			}
; 1519 : 		_Myres = _BUF_SIZE - 1;
; 1520 : 		_Eos(_Newsize);

  0003f	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00042	c7 43 18 0f 00
	00 00		 mov	 DWORD PTR [ebx+24], 15	; 0000000fH
  00049	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0004e	5d		 pop	 ebp
  0004f	5b		 pop	 ebx

; 1521 : 		}

  00050	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	?_Erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Erase
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z
_TEXT	SEGMENT
__Rootnode$ = 8						; size = 4
?_Erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Erase, COMDAT
; _this$ = ecx

; 890  : 		{	// free entire subtree, recursively

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 891  : 		for (_Nodeptr _Pnode = _Rootnode; !_Isnil(_Pnode); _Rootnode = _Pnode)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR __Rootnode$[esp+8]
  00007	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0000a	84 c0		 test	 al, al
  0000c	8b d9		 mov	 ebx, ecx
  0000e	8b f7		 mov	 esi, edi
  00010	75 1f		 jne	 SHORT $L117959
$L117957:

; 892  : 			{	// free subtrees, then node
; 893  : 			_Erase(_Right(_Pnode));

  00012	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00015	50		 push	 eax
  00016	8b cb		 mov	 ecx, ebx
  00018	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Erase

; 894  : 			_Pnode = _Left(_Pnode);

  0001d	8b 36		 mov	 esi, DWORD PTR [esi]

; 895  : 			this->_Alnod.destroy(_Rootnode);	// destroy, free erased node
; 896  : 			this->_Alnod.deallocate(_Rootnode, 1);

  0001f	57		 push	 edi
  00020	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00025	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00028	83 c4 04	 add	 esp, 4
  0002b	84 c0		 test	 al, al
  0002d	8b fe		 mov	 edi, esi
  0002f	74 e1		 je	 SHORT $L117957
$L117959:
  00031	5f		 pop	 edi
  00032	5e		 pop	 esi
  00033	5b		 pop	 ebx

; 897  : 			}
; 898  : 		}

  00034	c2 04 00	 ret	 4
?_Erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Erase
_TEXT	ENDS
PUBLIC	?begin@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::begin
_TEXT	ENDS
PUBLIC	?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AViterator@12@XZ ; std::vector<unsigned short,std::allocator<unsigned short> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@GV?$allocator@G@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<unsigned short,std::allocator<unsigned short> >::begin
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ ; std::vector<unsigned short,std::allocator<unsigned short> >::_Tidy
; Function compile flags: /Ogty
;	COMDAT ?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::_Tidy, COMDAT
; _this$ = ecx

; 791  : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 792  : 		if (_Myfirst != 0)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L137322

; 793  : 			{	// something to free, destroy and deallocate it
; 794  : 			_Destroy(_Myfirst, _Mylast);
; 795  : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L137322:

; 796  : 			}
; 797  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 798  : 		}

  00029	c3		 ret	 0
?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::_Tidy
_TEXT	ENDS
PUBLIC	?begin@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::begin
_TEXT	ENDS
PUBLIC	?begin@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::begin
_TEXT	ENDS
PUBLIC	?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ; ATL::CSimpleStringT<char,0>::GetBuffer
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT
_nMinBufferLength$ = 8					; size = 4
?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::GetBuffer, COMDAT
; _this$ = ecx

; 489  : 	{

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 490  : 		return( PrepareWrite( nMinBufferLength ) );

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	8b 50 fc	 mov	 edx, DWORD PTR [eax-4]
  00008	83 e8 10	 sub	 eax, 16			; 00000010H
  0000b	b9 01 00 00 00	 mov	 ecx, 1
  00010	2b ca		 sub	 ecx, edx
  00012	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00015	8b 44 24 08	 mov	 eax, DWORD PTR _nMinBufferLength$[esp]
  00019	2b d0		 sub	 edx, eax
  0001b	0b ca		 or	 ecx, edx
  0001d	7d 08		 jge	 SHORT $L137365
  0001f	50		 push	 eax
  00020	8b ce		 mov	 ecx, esi
  00022	e8 00 00 00 00	 call	 ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
$L137365:
  00027	8b 06		 mov	 eax, DWORD PTR [esi]
  00029	5e		 pop	 esi

; 491  : 	}

  0002a	c2 04 00	 ret	 4
?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z ENDP	; ATL::CSimpleStringT<char,0>::GetBuffer
_TEXT	ENDS
PUBLIC	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
; Function compile flags: /Ogty
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
_nLength$ = 12						; size = 4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::SetString, COMDAT
; _this$ = ecx

; 583  : 	{

  00000	53		 push	 ebx

; 584  : 		if( nLength == 0 )

  00001	8b 5c 24 0c	 mov	 ebx, DWORD PTR _nLength$[esp]
  00005	85 db		 test	 ebx, ebx
  00007	55		 push	 ebp
  00008	8b e9		 mov	 ebp, ecx
  0000a	75 0a		 jne	 SHORT $L119011

; 585  : 		{
; 586  : 			Empty();

  0000c	e8 00 00 00 00	 call	 ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ ; ATL::CSimpleStringT<char,0>::Empty
  00011	5d		 pop	 ebp
  00012	5b		 pop	 ebx

; 614  : 		}
; 615  : 	}

  00013	c2 08 00	 ret	 8
$L119011:

; 587  : 		}
; 588  : 		else
; 589  : 		{
; 590  : 			// It is possible that pszSrc points to a location inside of our 
; 591  : 			// buffer.  GetBuffer() might change m_pszData if (1) the buffer 
; 592  : 			// is shared or (2) the buffer is too small to hold the new 
; 593  : 			// string.  We detect this aliasing, and modify pszSrc to point
; 594  : 			// into the newly allocated buffer instead.
; 595  : 			
; 596  : 			if(pszSrc == NULL)

  00016	8b 54 24 0c	 mov	 edx, DWORD PTR _pszSrc$[esp+4]
  0001a	85 d2		 test	 edx, edx
  0001c	75 0a		 jne	 SHORT $L119013

; 612  : 			}
; 613  : 			ReleaseBufferSetLength( nLength );

$L137437:
  0001e	68 57 00 07 80	 push	 -2147024809		; 80070057H
  00023	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L137441:
$L119013:

; 597  : 				AtlThrow(E_INVALIDARG);			
; 598  : 				
; 599  : 			UINT nOldLength = GetLength();

  00028	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  0002b	56		 push	 esi

; 600  : 			UINT_PTR nOffset = pszSrc-GetString();

  0002c	8b f2		 mov	 esi, edx
  0002e	2b f0		 sub	 esi, eax

; 601  : 			// If 0 <= nOffset <= nOldLength, then pszSrc points into our 
; 602  : 			// buffer
; 603  : 
; 604  : 			PXSTR pszBuffer = GetBuffer( nLength );

  00030	b9 01 00 00 00	 mov	 ecx, 1
  00035	2b 48 fc	 sub	 ecx, DWORD PTR [eax-4]
  00038	57		 push	 edi
  00039	8b 78 f4	 mov	 edi, DWORD PTR [eax-12]
  0003c	8b 40 f8	 mov	 eax, DWORD PTR [eax-8]
  0003f	2b c3		 sub	 eax, ebx
  00041	0b c8		 or	 ecx, eax
  00043	7d 0c		 jge	 SHORT $L137404
  00045	53		 push	 ebx
  00046	8b cd		 mov	 ecx, ebp
  00048	e8 00 00 00 00	 call	 ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
  0004d	8b 54 24 14	 mov	 edx, DWORD PTR _pszSrc$[esp+12]
$L137404:

; 605  : 			if( nOffset <= nOldLength )

  00051	3b f7		 cmp	 esi, edi
  00053	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  00056	77 10		 ja	 SHORT $L119018

; 606  : 			{
; 607  : 				CopyCharsOverlapped( pszBuffer, pszBuffer+nOffset, nLength );

  00058	53		 push	 ebx
  00059	8d 0c 30	 lea	 ecx, DWORD PTR [eax+esi]
  0005c	51		 push	 ecx
  0005d	50		 push	 eax
  0005e	e8 00 00 00 00	 call	 _memmove
  00063	83 c4 0c	 add	 esp, 12			; 0000000cH

; 608  : 			}
; 609  : 			else

  00066	eb 14		 jmp	 SHORT $L137411
$L119018:

; 610  : 			{
; 611  : 				CopyChars( pszBuffer, pszSrc, nLength );

  00068	8b cb		 mov	 ecx, ebx
  0006a	8b f2		 mov	 esi, edx
  0006c	8b d1		 mov	 edx, ecx
  0006e	c1 e9 02	 shr	 ecx, 2
  00071	8b f8		 mov	 edi, eax
  00073	f3 a5		 rep movsd
  00075	8b ca		 mov	 ecx, edx
  00077	83 e1 03	 and	 ecx, 3
  0007a	f3 a4		 rep movsb
$L137411:

; 612  : 			}
; 613  : 			ReleaseBufferSetLength( nLength );

  0007c	85 db		 test	 ebx, ebx
  0007e	5f		 pop	 edi
  0007f	5e		 pop	 esi
  00080	7c 9c		 jl	 SHORT $L137437
  00082	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  00085	3b 58 f8	 cmp	 ebx, DWORD PTR [eax-8]
  00088	7f 94		 jg	 SHORT $L137437
  0008a	89 58 f4	 mov	 DWORD PTR [eax-12], ebx
  0008d	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  00090	5d		 pop	 ebp
  00091	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0
  00095	5b		 pop	 ebx

; 614  : 		}
; 615  : 	}

  00096	c2 08 00	 ret	 8
$L137440:
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ENDP	; ATL::CSimpleStringT<char,0>::SetString
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
EXTRN	?_Xran@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xran
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 792  : 		{	// erase elements [_Off, _Off + _Count)

  00000	55		 push	 ebp

; 793  : 		if (_Mysize < _Off)

  00001	8b 6c 24 08	 mov	 ebp, DWORD PTR __Off$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	39 6e 14	 cmp	 DWORD PTR [esi+20], ebp
  0000b	57		 push	 edi
  0000c	73 05		 jae	 SHORT $L119054

; 794  : 			_String_base::_Xran();	// _Off off end

  0000e	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L119054:

; 795  : 		if (_Mysize - _Off < _Count)

  00013	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00016	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  0001a	2b c5		 sub	 eax, ebp
  0001c	3b c7		 cmp	 eax, edi
  0001e	73 02		 jae	 SHORT $L119055

; 796  : 			_Count = _Mysize - _Off;	// trim _Count

  00020	8b f8		 mov	 edi, eax
$L119055:

; 797  : 		if (0 < _Count)

  00022	85 ff		 test	 edi, edi
  00024	76 47		 jbe	 SHORT $L137484

; 798  : 			{	// move elements down
; 799  : 			_Traits::move(_Myptr() + _Off, _Myptr() + _Off + _Count,
; 800  : 				_Mysize - _Off - _Count);

  00026	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00029	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0002c	53		 push	 ebx
  0002d	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00030	72 04		 jb	 SHORT $L137449
  00032	8b 13		 mov	 edx, DWORD PTR [ebx]
  00034	eb 02		 jmp	 SHORT $L137450
$L137449:
  00036	8b d3		 mov	 edx, ebx
$L137450:
  00038	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0003b	72 04		 jb	 SHORT $L137456
  0003d	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0003f	eb 02		 jmp	 SHORT $L137457
$L137456:
  00041	8b cb		 mov	 ecx, ebx
$L137457:
  00043	2b c7		 sub	 eax, edi

; 803  : 			}
; 804  : 		return (*this);

  00045	03 d5		 add	 edx, ebp
  00047	50		 push	 eax
  00048	03 d7		 add	 edx, edi
  0004a	52		 push	 edx
  0004b	03 cd		 add	 ecx, ebp
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 _memmove
  00053	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00056	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00059	2b c7		 sub	 eax, edi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00061	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00064	72 02		 jb	 SHORT $L137479

; 801  : 			size_type _Newsize = _Mysize - _Count;
; 802  : 			_Eos(_Newsize);

  00066	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$L137479:
  00068	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0
  0006c	5b		 pop	 ebx
$L137484:
  0006d	5f		 pop	 edi

; 803  : 			}
; 804  : 		return (*this);

  0006e	8b c6		 mov	 eax, esi
  00070	5e		 pop	 esi
  00071	5d		 pop	 ebp

; 805  : 		}

  00072	c2 08 00	 ret	 8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::end
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::end
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::operator++, COMDAT
; _this$ = ecx

; 214  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 215  : 			_Inc();

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::_Inc

; 216  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 217  : 			}

  0000b	c3		 ret	 0
??Econst_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::operator++
_TEXT	ENDS
PUBLIC	?begin@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::begin
; Function compile flags: /Ogty
;	COMDAT ?begin@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::begin, COMDAT
; _this$ = ecx

; 408  : 		return (_TREE_ITERATOR(_Lmost()));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 08		 mov	 ecx, DWORD PTR [eax]
  00005	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 409  : 		}

  0000b	c2 04 00	 ret	 4
?begin@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::begin
_TEXT	ENDS
PUBLIC	?end@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::end
; Function compile flags: /Ogty
;	COMDAT ?end@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?end@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::end, COMDAT
; _this$ = ecx

; 418  : 		return (_TREE_ITERATOR(_Myhead));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 419  : 		}

  00009	c2 04 00	 ret	 4
?end@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::end
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T137826 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
$T137828 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L137629
$T137829 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L137627
$T137827 DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:$T137828
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:$T137829
$T137821 DD	019930520H
	DD	04H
	DD	FLAT:$T137826
	DD	02H
	DD	FLAT:$T137827
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 1444 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1445 : 		size_type _Newres = _Newsize | _ALLOC_MASK;

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	8b d8		 mov	 ebx, eax
  00022	83 cb 0f	 or	 ebx, 15			; 0000000fH

; 1446 : 		if (max_size() < _Newres)

  00025	83 fb fe	 cmp	 ebx, -2			; fffffffeH
  00028	57		 push	 edi
  00029	8b f1		 mov	 esi, ecx
  0002b	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00031	76 04		 jbe	 SHORT $L120172

; 1447 : 			_Newres = _Newsize;	// undo roundup if too big

  00033	8b d8		 mov	 ebx, eax

; 1448 : 		else if (_Newres / 3 < _Myres / 2

  00035	eb 22		 jmp	 SHORT $L120174
$L120172:

; 1449 : 			&& _Myres <= max_size() - _Myres / 2)

  00037	8b 7e 18	 mov	 edi, DWORD PTR [esi+24]
  0003a	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  0003f	f7 e3		 mul	 ebx
  00041	8b cf		 mov	 ecx, edi
  00043	d1 e9		 shr	 ecx, 1
  00045	d1 ea		 shr	 edx, 1
  00047	3b d1		 cmp	 edx, ecx
  00049	73 0e		 jae	 SHORT $L120174
  0004b	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00050	2b c1		 sub	 eax, ecx
  00052	3b f8		 cmp	 edi, eax
  00054	77 03		 ja	 SHORT $L120174

; 1450 : 			_Newres = _Myres + _Myres / 2;	// grow exponentially if possible

  00056	8d 1c 39	 lea	 ebx, DWORD PTR [ecx+edi]
$L120174:

; 1451 : 		_Elem *_Ptr;
; 1452 : 
; 1453 : 		_TRY_BEGIN
; 1454 : 			_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00059	8d 4b 01	 lea	 ecx, DWORD PTR [ebx+1]
  0005c	51		 push	 ecx
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00064	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00069	8b d0		 mov	 edx, eax
  0006b	83 c4 04	 add	 esp, 4
  0006e	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
  00071	eb 29		 jmp	 SHORT $L120176
$L137627:

; 1455 : 		_CATCH_ALL
; 1456 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  00073	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00076	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax

; 1457 : 			_TRY_BEGIN
; 1458 : 				_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00079	40		 inc	 eax
  0007a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0007d	50		 push	 eax
  0007e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00082	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00087	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  0008a	83 c4 04	 add	 esp, 4

; 1462 : 			_CATCH_END
; 1463 : 		_CATCH_END

  0008d	b8 00 00 00 00	 mov	 eax, $L137822
  00092	c3		 ret	 0
$L137822:
  00093	8b 5d e8	 mov	 ebx, DWORD PTR __Newres$[ebp]
  00096	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  00099	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$L120176:

; 1464 : 
; 1465 : 		if (0 < _Oldlen)

  0009c	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  0009f	85 c9		 test	 ecx, ecx
  000a1	76 24		 jbe	 SHORT $L137747

; 1466 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

  000a3	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000a7	72 05		 jb	 SHORT $L137743
  000a9	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  000ac	eb 03		 jmp	 SHORT $L137744
$L137743:
  000ae	83 c6 04	 add	 esi, 4
$L137744:
  000b1	8b c1		 mov	 eax, ecx
  000b3	c1 e9 02	 shr	 ecx, 2
  000b6	8b fa		 mov	 edi, edx
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb
  000c1	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  000c4	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
$L137747:

; 1467 : 		_Tidy(true);

  000c7	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000cb	72 12		 jb	 SHORT $L137788
  000cd	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000d0	51		 push	 ecx
  000d1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000d6	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  000d9	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  000dc	83 c4 04	 add	 esp, 4
$L137788:

; 1468 : 		_Bx._Ptr = _Ptr;
; 1469 : 		_Myres = _Newres;
; 1470 : 		_Eos(_Oldlen);

  000df	83 fb 10	 cmp	 ebx, 16			; 00000010H
  000e2	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000e5	c6 00 00	 mov	 BYTE PTR [eax], 0
  000e8	89 10		 mov	 DWORD PTR [eax], edx
  000ea	89 5e 18	 mov	 DWORD PTR [esi+24], ebx
  000ed	89 4e 14	 mov	 DWORD PTR [esi+20], ecx
  000f0	72 02		 jb	 SHORT $L137817
  000f2	8b c2		 mov	 eax, edx
$L137817:

; 1471 : 		}

  000f4	5f		 pop	 edi
  000f5	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0
  000f9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000fc	5e		 pop	 esi
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00104	5b		 pop	 ebx
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c2 08 00	 ret	 8
$L137629:

; 1459 : 			_CATCH_ALL
; 1460 : 			_Tidy(true);	// failed again, discard storage and reraise

  0010b	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  0010e	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00112	72 0c		 jb	 SHORT $L137727
  00114	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00117	52		 push	 edx
  00118	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0011d	83 c4 04	 add	 esp, 4
$L137727:

; 1461 : 			_RERAISE;

  00120	6a 00		 push	 0
  00122	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00129	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00130	6a 00		 push	 0
  00132	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00136	e8 00 00 00 00	 call	 __CxxThrowException@8
$L137830:
$L137825:
  0013b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T137821
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?SendMW_HELPMESSAGE_REQ@CTServer@@QAEXE_J0V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTServer::SendMW_HELPMESSAGE_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T137898 DD	0ffffffffH
	DD	FLAT:$L137863
	DD	00H
	DD	FLAT:$L137864
$T137896 DD	019930520H
	DD	02H
	DD	FLAT:$T137898
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_HELPMESSAGE_REQ@CTServer@@QAEXE_J0V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T137860 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bID$ = 8						; size = 1
_dlStart$ = 12						; size = 8
_dlEnd$ = 20						; size = 8
_strMessage$ = 28					; size = 4
?SendMW_HELPMESSAGE_REQ@CTServer@@QAEXE_J0V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTServer::SendMW_HELPMESSAGE_REQ, COMDAT
; _this$ = ecx

; 102  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_HELPMESSAGE_REQ@CTServer@@QAEXE_J0V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 103  : 	CPacket *pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T137860[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L137861
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L137862
$L137861:
  00043	33 f6		 xor	 esi, esi
$L137862:

; 104  : 	pMSG->SetID(MW_HELPMESSAGE_REQ)
; 105  : 		<< bID
; 106  : 		<< dlStart
; 107  : 		<< dlEnd
; 108  : 		<< strMessage;

  00045	8b 44 24 30	 mov	 eax, DWORD PTR _dlEnd$[esp+28]
  00049	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dlEnd$[esp+24]
  0004d	8b 54 24 28	 mov	 edx, DWORD PTR _dlStart$[esp+28]
  00051	88 5c 24 18	 mov	 BYTE PTR __$EHRec$[esp+36], bl
  00055	8b 5c 24 34	 mov	 ebx, DWORD PTR _strMessage$[esp+24]
  00059	53		 push	 ebx
  0005a	50		 push	 eax
  0005b	8b 44 24 2c	 mov	 eax, DWORD PTR _dlStart$[esp+32]
  0005f	51		 push	 ecx
  00060	8b 4c 24 2c	 mov	 ecx, DWORD PTR _bID$[esp+36]
  00064	52		 push	 edx
  00065	50		 push	 eax
  00066	51		 push	 ecx
  00067	68 64 21 00 00	 push	 8548			; 00002164H
  0006c	8b ce		 mov	 ecx, esi
  0006e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 109  : 
; 110  : 	Say(pMSG);

  0008f	8b 17		 mov	 edx, DWORD PTR [edi]
  00091	56		 push	 esi
  00092	8b cf		 mov	 ecx, edi
  00094	ff 12		 call	 DWORD PTR [edx]

; 111  : }

  00096	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  00099	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a1	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a4	83 ca ff	 or	 edx, -1
  000a7	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ab	4a		 dec	 edx
  000ac	85 d2		 test	 edx, edx
  000ae	5f		 pop	 edi
  000af	5e		 pop	 esi
  000b0	5b		 pop	 ebx
  000b1	7f 08		 jg	 SHORT $L137891
  000b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b7	50		 push	 eax
  000b8	ff 52 04	 call	 DWORD PTR [edx+4]
$L137891:
  000bb	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000bf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c6	83 c4 10	 add	 esp, 16			; 00000010H
  000c9	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L137863:
  00000	8d 4d 18	 lea	 ecx, DWORD PTR _strMessage$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L137864:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T137860[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_HELPMESSAGE_REQ@CTServer@@QAEXE_J0V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T137896
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_HELPMESSAGE_REQ@CTServer@@QAEXE_J0V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTServer::SendMW_HELPMESSAGE_REQ
PUBLIC	?SendMW_USERPOSITION_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTServer::SendMW_USERPOSITION_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T137943 DD	0ffffffffH
	DD	FLAT:$L137908
	DD	00H
	DD	FLAT:$L137909
$T137941 DD	019930520H
	DD	02H
	DD	FLAT:$T137943
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_USERPOSITION_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T137905 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_strGMName$ = 16					; size = 4
?SendMW_USERPOSITION_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTServer::SendMW_USERPOSITION_REQ, COMDAT
; _this$ = ecx

; 116  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_USERPOSITION_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 117  : 	CPacket *pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T137905[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L137906
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L137907
$L137906:
  00043	33 f6		 xor	 esi, esi
$L137907:

; 118  : 
; 119  : 	pMSG->SetID(MW_USERPOSITION_REQ)
; 120  : 		<< dwCharID
; 121  : 		<< dwKey
; 122  : 		<< strGMName;

  00045	8b 44 24 24	 mov	 eax, DWORD PTR _dwKey$[esp+24]
  00049	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwCharID$[esp+24]
  0004d	88 5c 24 18	 mov	 BYTE PTR __$EHRec$[esp+36], bl
  00051	8b 5c 24 28	 mov	 ebx, DWORD PTR _strGMName$[esp+24]
  00055	53		 push	 ebx
  00056	50		 push	 eax
  00057	51		 push	 ecx
  00058	68 c6 20 00 00	 push	 8390			; 000020c6H
  0005d	8b ce		 mov	 ecx, esi
  0005f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00064	8b c8		 mov	 ecx, eax
  00066	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006b	8b c8		 mov	 ecx, eax
  0006d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 123  : 
; 124  : 	Say(pMSG);

  00079	8b 17		 mov	 edx, DWORD PTR [edi]
  0007b	56		 push	 esi
  0007c	8b cf		 mov	 ecx, edi
  0007e	ff 12		 call	 DWORD PTR [edx]

; 125  : }

  00080	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  00083	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0008b	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0008e	83 ca ff	 or	 edx, -1
  00091	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00095	4a		 dec	 edx
  00096	85 d2		 test	 edx, edx
  00098	5f		 pop	 edi
  00099	5e		 pop	 esi
  0009a	5b		 pop	 ebx
  0009b	7f 08		 jg	 SHORT $L137936
  0009d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009f	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a1	50		 push	 eax
  000a2	ff 52 04	 call	 DWORD PTR [edx+4]
$L137936:
  000a5	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000a9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b0	83 c4 10	 add	 esp, 16			; 00000010H
  000b3	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L137908:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strGMName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L137909:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T137905[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_USERPOSITION_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T137941
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_USERPOSITION_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTServer::SendMW_USERPOSITION_REQ
PUBLIC	?SendMW_ENTERCHAR_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GMMMKKK0EEGEK0GEKGEEEEEK_JKK0EPAVCPacket@@@Z ; CTServer::SendMW_ENTERCHAR_REQ
EXTRN	??5CPacket@@QAEAAV0@AAV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:NEAR ; CPacket::operator>>
EXTRN	??5CPacket@@QAEAAV0@AAK@Z:NEAR			; CPacket::operator>>
EXTRN	??5CPacket@@QAEAAV0@AAG@Z:NEAR			; CPacket::operator>>
EXTRN	??5CPacket@@QAEAAV0@AAE@Z:NEAR			; CPacket::operator>>
EXTRN	??5CPacket@@QAEAAV0@AAM@Z:NEAR			; CPacket::operator>>
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T138209 DD	0ffffffffH
	DD	FLAT:$L137953
	DD	00H
	DD	FLAT:$L137954
	DD	01H
	DD	FLAT:$L137955
	DD	02H
	DD	FLAT:$L137956
	DD	03H
	DD	FLAT:$L137957
	DD	03H
	DD	FLAT:$L137958
	DD	03H
	DD	FLAT:$L137959
$T138203 DD	019930520H
	DD	07H
	DD	FLAT:$T138209
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_ENTERCHAR_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GMMMKKK0EEGEK0GEKGEEEEEK_JKK0EPAVCPacket@@@Z
_TEXT	SEGMENT
_bRecallCnt$ = -24					; size = 1
_strComment$ = -20					; size = 4
_pOffset$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bStartAct$ = 16					; size = 1
_strNAME$ = 20						; size = 4
_wMapID$ = 24						; size = 2
_wSkillID$123188 = 28					; size = 2
_fPosX$ = 28						; size = 4
_dwMonID$123166 = 32					; size = 4
_fPosY$ = 32						; size = 4
_wMon$123167 = 36					; size = 2
_fPosZ$ = 36						; size = 4
_dwATTR$123168 = 40					; size = 4
_dwGuildID$ = 40					; size = 4
_wPetID$123169 = 44					; size = 2
_dwFame$ = 44						; size = 4
_bLevel$123172 = 48					; size = 1
_dwFameColor$ = 48					; size = 4
_strGuildName$ = 52					; size = 4
_bClass$123173 = 56					; size = 1
_bGuildDuty$ = 56					; size = 1
_bRace$123174 = 60					; size = 1
_bGuildPeer$ = 60					; size = 1
_bAction$123175 = 64					; size = 1
_wCastle$ = 64						; size = 2
_bStatus$123176 = 68					; size = 1
_bCamp$ = 68						; size = 1
_bMode$123177 = 72					; size = 1
_dwTacticsID$ = 72					; size = 4
_strTacticsName$ = 76					; size = 4
_wPartyID$ = 80						; size = 2
_dwMaxHP$123178 = 80					; size = 4
_bPartyType$ = 84					; size = 1
_dwMaxMP$123179 = 84					; size = 4
_dwHP$123180 = 88					; size = 4
_dwPartyChiefID$ = 88					; size = 4
_wCommander$ = 92					; size = 2
_dwMP$123181 = 92					; size = 4
_bHit$123186 = 96					; size = 1
_bLevel$ = 96						; size = 1
_bSkillLevel$123189 = 100				; size = 1
_bHelmetHide$ = 100					; size = 1
_bCountry$ = 104					; size = 1
_fPosX$123182 = 104					; size = 4
_bAidCountry$ = 108					; size = 1
_fPosY$123183 = 108					; size = 4
_bMode$ = 112						; size = 1
_fPosZ$123184 = 112					; size = 4
_wDir$123185 = 116					; size = 2
_dwRiding$ = 116					; size = 4
_nChatBanTime$ = 120					; size = 8
_dwTime$123171 = 128					; size = 4
_dwSoulmate$ = 128					; size = 4
_strName$123170 = 132					; size = 4
_dwSoulSilence$ = 132					; size = 4
_strSoulmate$ = 136					; size = 4
_bSkillCount$123187 = 140				; size = 1
_bClass$ = 140						; size = 1
_bRC$123162 = 144					; size = 1
$T137950 = 144						; size = 4
_pPacket$ = 144						; size = 4
?SendMW_ENTERCHAR_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GMMMKKK0EEGEK0GEKGEEEEEK_JKK0EPAVCPacket@@@Z PROC NEAR ; CTServer::SendMW_ENTERCHAR_REQ, COMDAT
; _this$ = ecx

; 255  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_ENTERCHAR_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GMMMKKK0EEGEK0GEKGEEEEEK_JKK0EPAVCPacket@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00018	55		 push	 ebp
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8b e9		 mov	 ebp, ecx

; 256  : 	LPBYTE pOffset = pPacket->m_ptrOffset;

  0001d	8b bc 24 b0 00
	00 00		 mov	 edi, DWORD PTR _pPacket$[esp+32]
  00024	8b 47 08	 mov	 eax, DWORD PTR [edi+8]

; 257  : 	CPacket *pMSG = new CPacket();

  00027	6a 1c		 push	 28			; 0000001cH
  00029	c7 44 24 24 03
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+48], 3
  00031	89 44 24 18	 mov	 DWORD PTR _pOffset$[esp+40], eax
  00035	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0003a	83 c4 04	 add	 esp, 4
  0003d	89 84 24 b0 00
	00 00		 mov	 DWORD PTR $T137950[esp+32], eax
  00044	85 c0		 test	 eax, eax
  00046	c6 44 24 20 04	 mov	 BYTE PTR __$EHRec$[esp+44], 4
  0004b	74 0b		 je	 SHORT $L137951
  0004d	8b c8		 mov	 ecx, eax
  0004f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00054	8b f0		 mov	 esi, eax
  00056	eb 02		 jmp	 SHORT $L137952
$L137951:
  00058	33 f6		 xor	 esi, esi
$L137952:

; 258  : 
; 259  : 	pMSG->SetID(MW_ENTERCHAR_REQ)
; 260  : 		<< dwCharID
; 261  : 		<< dwKEY
; 262  : 		<< bStartAct
; 263  : 		<< strNAME
; 264  : 		<< wMapID
; 265  : 		<< fPosX
; 266  : 		<< fPosY
; 267  : 		<< fPosZ
; 268  : 		<< dwGuildID
; 269  : 		<< dwFame
; 270  : 		<< dwFameColor
; 271  : 		<< strGuildName
; 272  : 		<< bGuildDuty
; 273  : 		<< bGuildPeer
; 274  : 		<< wCastle
; 275  : 		<< bCamp
; 276  : 		<< dwTacticsID
; 277  : 		<< strTacticsName
; 278  : 		<< wPartyID
; 279  : 		<< bPartyType
; 280  : 		<< dwPartyChiefID
; 281  : 		<< wCommander
; 282  : 		<< bLevel
; 283  : 		<< bHelmetHide
; 284  : 		<< bCountry
; 285  : 		<< bAidCountry
; 286  : 		<< bMode
; 287  : 		<< dwRiding
; 288  : 		<< nChatBanTime
; 289  : 		<< dwSoulmate
; 290  : 		<< dwSoulSilence
; 291  : 		<< strSoulmate
; 292  : 		<< bClass;

  0005a	8b 8c 24 ac 00
	00 00		 mov	 ecx, DWORD PTR _bClass$[esp+32]
  00061	51		 push	 ecx
  00062	8b 94 24 ac 00
	00 00		 mov	 edx, DWORD PTR _strSoulmate$[esp+36]
  00069	52		 push	 edx
  0006a	8b 84 24 ac 00
	00 00		 mov	 eax, DWORD PTR _dwSoulSilence$[esp+40]
  00071	50		 push	 eax
  00072	8b 8c 24 ac 00
	00 00		 mov	 ecx, DWORD PTR _dwSoulmate$[esp+44]
  00079	51		 push	 ecx
  0007a	8b 94 24 ac 00
	00 00		 mov	 edx, DWORD PTR _nChatBanTime$[esp+52]
  00081	52		 push	 edx
  00082	8b 84 24 ac 00
	00 00		 mov	 eax, DWORD PTR _nChatBanTime$[esp+52]
  00089	50		 push	 eax
  0008a	8b 8c 24 ac 00
	00 00		 mov	 ecx, DWORD PTR _dwRiding$[esp+56]
  00091	51		 push	 ecx
  00092	8b 94 24 ac 00
	00 00		 mov	 edx, DWORD PTR _bMode$[esp+60]
  00099	52		 push	 edx
  0009a	8b 84 24 ac 00
	00 00		 mov	 eax, DWORD PTR _bAidCountry$[esp+64]
  000a1	50		 push	 eax
  000a2	8b 8c 24 ac 00
	00 00		 mov	 ecx, DWORD PTR _bCountry$[esp+68]
  000a9	51		 push	 ecx
  000aa	8b 94 24 ac 00
	00 00		 mov	 edx, DWORD PTR _bHelmetHide$[esp+72]
  000b1	8b 84 24 a8 00
	00 00		 mov	 eax, DWORD PTR _bLevel$[esp+72]
  000b8	52		 push	 edx
  000b9	8b 8c 24 a8 00
	00 00		 mov	 ecx, DWORD PTR _wCommander$[esp+76]
  000c0	8b 94 24 a4 00
	00 00		 mov	 edx, DWORD PTR _dwPartyChiefID$[esp+76]
  000c7	50		 push	 eax
  000c8	8b 84 24 a4 00
	00 00		 mov	 eax, DWORD PTR _bPartyType$[esp+80]
  000cf	51		 push	 ecx
  000d0	8b 8c 24 a4 00
	00 00		 mov	 ecx, DWORD PTR _wPartyID$[esp+84]
  000d7	52		 push	 edx
  000d8	8b 94 24 a4 00
	00 00		 mov	 edx, DWORD PTR _strTacticsName$[esp+88]
  000df	50		 push	 eax
  000e0	8b 84 24 a4 00
	00 00		 mov	 eax, DWORD PTR _dwTacticsID$[esp+92]
  000e7	51		 push	 ecx
  000e8	8b 8c 24 a4 00
	00 00		 mov	 ecx, DWORD PTR _bCamp$[esp+96]
  000ef	52		 push	 edx
  000f0	8b 94 24 a4 00
	00 00		 mov	 edx, DWORD PTR _wCastle$[esp+100]
  000f7	50		 push	 eax
  000f8	8b 84 24 a4 00
	00 00		 mov	 eax, DWORD PTR _bGuildPeer$[esp+104]
  000ff	51		 push	 ecx
  00100	8b 8c 24 a4 00
	00 00		 mov	 ecx, DWORD PTR _bGuildDuty$[esp+108]
  00107	52		 push	 edx
  00108	8b 94 24 a4 00
	00 00		 mov	 edx, DWORD PTR _strGuildName$[esp+112]
  0010f	50		 push	 eax
  00110	8b 84 24 a4 00
	00 00		 mov	 eax, DWORD PTR _dwFameColor$[esp+116]
  00117	51		 push	 ecx
  00118	8b 8c 24 a4 00
	00 00		 mov	 ecx, DWORD PTR _dwFame$[esp+120]
  0011f	52		 push	 edx
  00120	8b 94 24 a4 00
	00 00		 mov	 edx, DWORD PTR _dwGuildID$[esp+124]
  00127	50		 push	 eax
  00128	8b 84 24 a4 00
	00 00		 mov	 eax, DWORD PTR _fPosZ$[esp+128]
  0012f	51		 push	 ecx
  00130	8b 8c 24 a4 00
	00 00		 mov	 ecx, DWORD PTR _fPosY$[esp+132]
  00137	52		 push	 edx
  00138	8b 94 24 a4 00
	00 00		 mov	 edx, DWORD PTR _fPosX$[esp+136]
  0013f	50		 push	 eax
  00140	8b 84 24 a4 00
	00 00		 mov	 eax, DWORD PTR _wMapID$[esp+140]
  00147	51		 push	 ecx
  00148	8b 8c 24 a4 00
	00 00		 mov	 ecx, DWORD PTR _strNAME$[esp+144]
  0014f	52		 push	 edx
  00150	8b 94 24 a4 00
	00 00		 mov	 edx, DWORD PTR _bStartAct$[esp+148]
  00157	50		 push	 eax
  00158	8b 84 24 a4 00
	00 00		 mov	 eax, DWORD PTR _dwKEY$[esp+152]
  0015f	51		 push	 ecx
  00160	8b 8c 24 a4 00
	00 00		 mov	 ecx, DWORD PTR _dwCharID$[esp+156]
  00167	52		 push	 edx
  00168	50		 push	 eax
  00169	51		 push	 ecx
  0016a	68 05 20 00 00	 push	 8197			; 00002005H
  0016f	8b ce		 mov	 ecx, esi
  00171	c6 84 24 ac 00
	00 00 03	 mov	 BYTE PTR __$EHRec$[esp+184], 3
  00179	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0017e	8b c8		 mov	 ecx, eax
  00180	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00185	8b c8		 mov	 ecx, eax
  00187	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0018c	8b c8		 mov	 ecx, eax
  0018e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00193	8b c8		 mov	 ecx, eax
  00195	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0019a	8b c8		 mov	 ecx, eax
  0019c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  001a1	8b c8		 mov	 ecx, eax
  001a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  001a8	8b c8		 mov	 ecx, eax
  001aa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  001af	8b c8		 mov	 ecx, eax
  001b1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  001b6	8b c8		 mov	 ecx, eax
  001b8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001bd	8b c8		 mov	 ecx, eax
  001bf	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001c4	8b c8		 mov	 ecx, eax
  001c6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001cb	8b c8		 mov	 ecx, eax
  001cd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  001d2	8b c8		 mov	 ecx, eax
  001d4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  001d9	8b c8		 mov	 ecx, eax
  001db	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  001e0	8b c8		 mov	 ecx, eax
  001e2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  001e7	8b c8		 mov	 ecx, eax
  001e9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  001ee	8b c8		 mov	 ecx, eax
  001f0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001f5	8b c8		 mov	 ecx, eax
  001f7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  001fc	8b c8		 mov	 ecx, eax
  001fe	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00203	8b c8		 mov	 ecx, eax
  00205	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0020a	8b c8		 mov	 ecx, eax
  0020c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00211	8b c8		 mov	 ecx, eax
  00213	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00218	8b c8		 mov	 ecx, eax
  0021a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0021f	8b c8		 mov	 ecx, eax
  00221	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00226	8b c8		 mov	 ecx, eax
  00228	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0022d	8b c8		 mov	 ecx, eax
  0022f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00234	8b c8		 mov	 ecx, eax
  00236	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0023b	8b c8		 mov	 ecx, eax
  0023d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00242	8b c8		 mov	 ecx, eax
  00244	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  00249	8b c8		 mov	 ecx, eax
  0024b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00250	8b c8		 mov	 ecx, eax
  00252	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00257	8b c8		 mov	 ecx, eax
  00259	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0025e	8b c8		 mov	 ecx, eax
  00260	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 293  : 
; 294  : 
; 295  : 	BYTE bRecallCnt;
; 296  : 	(*pPacket)
; 297  : 		>> bRecallCnt;

  00265	8d 54 24 0c	 lea	 edx, DWORD PTR _bRecallCnt$[esp+36]
  00269	52		 push	 edx
  0026a	8b cf		 mov	 ecx, edi
  0026c	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAE@Z ; CPacket::operator>>

; 298  : 
; 299  : 	(*pMSG)
; 300  : 		<< bRecallCnt;

  00271	8b 44 24 0c	 mov	 eax, DWORD PTR _bRecallCnt$[esp+36]
  00275	50		 push	 eax
  00276	8b ce		 mov	 ecx, esi
  00278	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 301  : 
; 302  : 	for(BYTE bRC = 0; bRC < bRecallCnt; bRC++)

  0027d	8a 44 24 0c	 mov	 al, BYTE PTR _bRecallCnt$[esp+36]
  00281	84 c0		 test	 al, al
  00283	c6 84 24 b0 00
	00 00 00	 mov	 BYTE PTR _bRC$123162[esp+32], 0
  0028b	0f 86 48 03 00
	00		 jbe	 $L123165
  00291	53		 push	 ebx
$L123163:

; 303  : 	{
; 304  : 		DWORD dwMonID;
; 305  : 		WORD wMon;
; 306  : 		DWORD dwATTR;
; 307  : 		WORD wPetID;
; 308  : 		CString strName;

  00292	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  00298	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  0029d	ff 52 0c	 call	 DWORD PTR [edx+12]
  002a0	83 c0 10	 add	 eax, 16			; 00000010H
  002a3	89 84 24 a8 00
	00 00		 mov	 DWORD PTR _strName$123170[esp+36], eax

; 309  : 		DWORD dwTime;
; 310  : 		BYTE bLevel;
; 311  : 		BYTE bClass;
; 312  : 		BYTE bRace;
; 313  : 		BYTE bAction;
; 314  : 		BYTE bStatus;
; 315  : 		BYTE bMode;
; 316  : 		DWORD dwMaxHP;
; 317  : 		DWORD dwMaxMP;
; 318  : 		DWORD dwHP;
; 319  : 		DWORD dwMP;
; 320  : 		FLOAT fPosX;
; 321  : 		FLOAT fPosY;
; 322  : 		FLOAT fPosZ;
; 323  : 		WORD wDir;
; 324  : 		BYTE bHit;
; 325  : 		BYTE bSkillCount;
; 326  : 		WORD wSkillID;
; 327  : 		BYTE bSkillLevel;
; 328  : 
; 329  : 		(*pPacket)
; 330  : 			>> dwMonID
; 331  : 			>> wMon
; 332  : 			>> dwATTR
; 333  : 			>> wPetID
; 334  : 			>> strName
; 335  : 			>> bLevel
; 336  : 			>> bClass
; 337  : 			>> bRace
; 338  : 			>> bAction
; 339  : 			>> bStatus
; 340  : 			>> bMode
; 341  : 			>> dwMaxHP
; 342  : 			>> dwMaxMP
; 343  : 			>> dwHP
; 344  : 			>> dwMP
; 345  : 			>> bHit
; 346  : 			>> bSkillLevel
; 347  : 			>> fPosX
; 348  : 			>> fPosY
; 349  : 			>> fPosZ
; 350  : 			>> wDir
; 351  : 			>> dwTime
; 352  : 			>> bSkillCount;

  002aa	8d 84 24 b0 00
	00 00		 lea	 eax, DWORD PTR _bSkillCount$123187[esp+36]
  002b1	50		 push	 eax
  002b2	8d 8c 24 a8 00
	00 00		 lea	 ecx, DWORD PTR _dwTime$123171[esp+40]
  002b9	51		 push	 ecx
  002ba	8d 94 24 a0 00
	00 00		 lea	 edx, DWORD PTR _wDir$123185[esp+44]
  002c1	52		 push	 edx
  002c2	8d 84 24 a0 00
	00 00		 lea	 eax, DWORD PTR _fPosZ$123184[esp+48]
  002c9	50		 push	 eax
  002ca	8d 8c 24 a0 00
	00 00		 lea	 ecx, DWORD PTR _fPosY$123183[esp+52]
  002d1	51		 push	 ecx
  002d2	8d 94 24 a0 00
	00 00		 lea	 edx, DWORD PTR _fPosX$123182[esp+56]
  002d9	52		 push	 edx
  002da	8d 84 24 a0 00
	00 00		 lea	 eax, DWORD PTR _bSkillLevel$123189[esp+60]
  002e1	50		 push	 eax
  002e2	8d 8c 24 a0 00
	00 00		 lea	 ecx, DWORD PTR _bHit$123186[esp+64]
  002e9	51		 push	 ecx
  002ea	8d 94 24 a0 00
	00 00		 lea	 edx, DWORD PTR _dwMP$123181[esp+68]
  002f1	52		 push	 edx
  002f2	8d 84 24 a0 00
	00 00		 lea	 eax, DWORD PTR _dwHP$123180[esp+72]
  002f9	50		 push	 eax
  002fa	8d 8c 24 a0 00
	00 00		 lea	 ecx, DWORD PTR _dwMaxMP$123179[esp+76]
  00301	51		 push	 ecx
  00302	8d 94 24 a0 00
	00 00		 lea	 edx, DWORD PTR _dwMaxHP$123178[esp+80]
  00309	52		 push	 edx
  0030a	8d 84 24 9c 00
	00 00		 lea	 eax, DWORD PTR _bMode$123177[esp+84]
  00311	50		 push	 eax
  00312	8d 8c 24 9c 00
	00 00		 lea	 ecx, DWORD PTR _bStatus$123176[esp+88]
  00319	51		 push	 ecx
  0031a	8d 94 24 9c 00
	00 00		 lea	 edx, DWORD PTR _bAction$123175[esp+92]
  00321	52		 push	 edx
  00322	8d 84 24 9c 00
	00 00		 lea	 eax, DWORD PTR _bRace$123174[esp+96]
  00329	50		 push	 eax
  0032a	8d 8c 24 9c 00
	00 00		 lea	 ecx, DWORD PTR _bClass$123173[esp+100]
  00331	51		 push	 ecx
  00332	8d 94 24 98 00
	00 00		 lea	 edx, DWORD PTR _bLevel$123172[esp+104]
  00339	52		 push	 edx
  0033a	8d 84 24 f0 00
	00 00		 lea	 eax, DWORD PTR _strName$123170[esp+108]
  00341	50		 push	 eax
  00342	8d 8c 24 9c 00
	00 00		 lea	 ecx, DWORD PTR _wPetID$123169[esp+112]
  00349	51		 push	 ecx
  0034a	8d 94 24 9c 00
	00 00		 lea	 edx, DWORD PTR _dwATTR$123168[esp+116]
  00351	52		 push	 edx
  00352	8d 84 24 9c 00
	00 00		 lea	 eax, DWORD PTR _wMon$123167[esp+120]
  00359	50		 push	 eax
  0035a	8d 8c 24 9c 00
	00 00		 lea	 ecx, DWORD PTR _dwMonID$123166[esp+124]
  00361	51		 push	 ecx
  00362	8b cf		 mov	 ecx, edi
  00364	c6 84 24 80 00
	00 00 05	 mov	 BYTE PTR __$EHRec$[esp+140], 5
  0036c	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAK@Z ; CPacket::operator>>
  00371	8b c8		 mov	 ecx, eax
  00373	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAG@Z ; CPacket::operator>>
  00378	8b c8		 mov	 ecx, eax
  0037a	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAK@Z ; CPacket::operator>>
  0037f	8b c8		 mov	 ecx, eax
  00381	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAG@Z ; CPacket::operator>>
  00386	8b c8		 mov	 ecx, eax
  00388	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CPacket::operator>>
  0038d	8b c8		 mov	 ecx, eax
  0038f	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAE@Z ; CPacket::operator>>
  00394	8b c8		 mov	 ecx, eax
  00396	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAE@Z ; CPacket::operator>>
  0039b	8b c8		 mov	 ecx, eax
  0039d	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAE@Z ; CPacket::operator>>
  003a2	8b c8		 mov	 ecx, eax
  003a4	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAE@Z ; CPacket::operator>>
  003a9	8b c8		 mov	 ecx, eax
  003ab	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAE@Z ; CPacket::operator>>
  003b0	8b c8		 mov	 ecx, eax
  003b2	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAE@Z ; CPacket::operator>>
  003b7	8b c8		 mov	 ecx, eax
  003b9	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAK@Z ; CPacket::operator>>
  003be	8b c8		 mov	 ecx, eax
  003c0	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAK@Z ; CPacket::operator>>
  003c5	8b c8		 mov	 ecx, eax
  003c7	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAK@Z ; CPacket::operator>>
  003cc	8b c8		 mov	 ecx, eax
  003ce	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAK@Z ; CPacket::operator>>
  003d3	8b c8		 mov	 ecx, eax
  003d5	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAE@Z ; CPacket::operator>>
  003da	8b c8		 mov	 ecx, eax
  003dc	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAE@Z ; CPacket::operator>>
  003e1	8b c8		 mov	 ecx, eax
  003e3	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAM@Z ; CPacket::operator>>
  003e8	8b c8		 mov	 ecx, eax
  003ea	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAM@Z ; CPacket::operator>>
  003ef	8b c8		 mov	 ecx, eax
  003f1	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAM@Z ; CPacket::operator>>
  003f6	8b c8		 mov	 ecx, eax
  003f8	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAG@Z ; CPacket::operator>>
  003fd	8b c8		 mov	 ecx, eax
  003ff	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAK@Z ; CPacket::operator>>
  00404	8b c8		 mov	 ecx, eax
  00406	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAE@Z ; CPacket::operator>>

; 353  : 
; 354  : 		(*pMSG)
; 355  : 			<< dwMonID
; 356  : 			<< wMon
; 357  : 			<< dwATTR
; 358  : 			<< wPetID
; 359  : 			<< strName
; 360  : 			<< bLevel
; 361  : 			<< bClass
; 362  : 			<< bRace
; 363  : 			<< bAction
; 364  : 			<< bStatus
; 365  : 			<< bMode
; 366  : 			<< dwMaxHP
; 367  : 			<< dwMaxMP
; 368  : 			<< dwHP
; 369  : 			<< dwMP
; 370  : 			<< bHit
; 371  : 			<< bSkillLevel
; 372  : 			<< fPosX
; 373  : 			<< fPosY
; 374  : 			<< fPosZ
; 375  : 			<< wDir
; 376  : 			<< dwTime
; 377  : 			<< bSkillCount;

  0040b	8b 94 24 b0 00
	00 00		 mov	 edx, DWORD PTR _bSkillCount$123187[esp+36]
  00412	8b 84 24 a4 00
	00 00		 mov	 eax, DWORD PTR _dwTime$123171[esp+36]
  00419	8b 8c 24 98 00
	00 00		 mov	 ecx, DWORD PTR _wDir$123185[esp+36]
  00420	52		 push	 edx
  00421	8b 94 24 98 00
	00 00		 mov	 edx, DWORD PTR _fPosZ$123184[esp+40]
  00428	50		 push	 eax
  00429	8b 84 24 98 00
	00 00		 mov	 eax, DWORD PTR _fPosY$123183[esp+44]
  00430	51		 push	 ecx
  00431	8b 8c 24 98 00
	00 00		 mov	 ecx, DWORD PTR _fPosX$123182[esp+48]
  00438	52		 push	 edx
  00439	8b 94 24 98 00
	00 00		 mov	 edx, DWORD PTR _bSkillLevel$123189[esp+52]
  00440	50		 push	 eax
  00441	8b 84 24 98 00
	00 00		 mov	 eax, DWORD PTR _bHit$123186[esp+56]
  00448	51		 push	 ecx
  00449	8b 8c 24 98 00
	00 00		 mov	 ecx, DWORD PTR _dwMP$123181[esp+60]
  00450	52		 push	 edx
  00451	8b 94 24 98 00
	00 00		 mov	 edx, DWORD PTR _dwHP$123180[esp+64]
  00458	50		 push	 eax
  00459	8b 84 24 98 00
	00 00		 mov	 eax, DWORD PTR _dwMaxMP$123179[esp+68]
  00460	51		 push	 ecx
  00461	8b 8c 24 98 00
	00 00		 mov	 ecx, DWORD PTR _dwMaxHP$123178[esp+72]
  00468	52		 push	 edx
  00469	8b 94 24 94 00
	00 00		 mov	 edx, DWORD PTR _bMode$123177[esp+76]
  00470	50		 push	 eax
  00471	8b 84 24 94 00
	00 00		 mov	 eax, DWORD PTR _bStatus$123176[esp+80]
  00478	51		 push	 ecx
  00479	8b 8c 24 94 00
	00 00		 mov	 ecx, DWORD PTR _bAction$123175[esp+84]
  00480	52		 push	 edx
  00481	8b 94 24 94 00
	00 00		 mov	 edx, DWORD PTR _bRace$123174[esp+88]
  00488	50		 push	 eax
  00489	8b 84 24 94 00
	00 00		 mov	 eax, DWORD PTR _bClass$123173[esp+92]
  00490	51		 push	 ecx
  00491	8b 8c 24 90 00
	00 00		 mov	 ecx, DWORD PTR _bLevel$123172[esp+96]
  00498	52		 push	 edx
  00499	8b 94 24 e8 00
	00 00		 mov	 edx, DWORD PTR _strName$123170[esp+100]
  004a0	50		 push	 eax
  004a1	8b 84 24 94 00
	00 00		 mov	 eax, DWORD PTR _wPetID$123169[esp+104]
  004a8	51		 push	 ecx
  004a9	8b 8c 24 94 00
	00 00		 mov	 ecx, DWORD PTR _dwATTR$123168[esp+108]
  004b0	52		 push	 edx
  004b1	8b 94 24 94 00
	00 00		 mov	 edx, DWORD PTR _wMon$123167[esp+112]
  004b8	50		 push	 eax
  004b9	8b 84 24 94 00
	00 00		 mov	 eax, DWORD PTR _dwMonID$123166[esp+116]
  004c0	51		 push	 ecx
  004c1	52		 push	 edx
  004c2	50		 push	 eax
  004c3	8b ce		 mov	 ecx, esi
  004c5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  004ca	8b c8		 mov	 ecx, eax
  004cc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  004d1	8b c8		 mov	 ecx, eax
  004d3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  004d8	8b c8		 mov	 ecx, eax
  004da	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  004df	8b c8		 mov	 ecx, eax
  004e1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  004e6	8b c8		 mov	 ecx, eax
  004e8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  004ed	8b c8		 mov	 ecx, eax
  004ef	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  004f4	8b c8		 mov	 ecx, eax
  004f6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  004fb	8b c8		 mov	 ecx, eax
  004fd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00502	8b c8		 mov	 ecx, eax
  00504	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00509	8b c8		 mov	 ecx, eax
  0050b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00510	8b c8		 mov	 ecx, eax
  00512	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00517	8b c8		 mov	 ecx, eax
  00519	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0051e	8b c8		 mov	 ecx, eax
  00520	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00525	8b c8		 mov	 ecx, eax
  00527	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0052c	8b c8		 mov	 ecx, eax
  0052e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00533	8b c8		 mov	 ecx, eax
  00535	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0053a	8b c8		 mov	 ecx, eax
  0053c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  00541	8b c8		 mov	 ecx, eax
  00543	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  00548	8b c8		 mov	 ecx, eax
  0054a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  0054f	8b c8		 mov	 ecx, eax
  00551	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00556	8b c8		 mov	 ecx, eax
  00558	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0055d	8b c8		 mov	 ecx, eax
  0055f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 378  : 
; 379  : 		for(BYTE sc=0; sc<bSkillCount; sc++)

  00564	8a 84 24 b0 00
	00 00		 mov	 al, BYTE PTR _bSkillCount$123187[esp+36]
  0056b	32 db		 xor	 bl, bl
  0056d	84 c0		 test	 al, al
  0056f	76 25		 jbe	 SHORT $L123193
$L123191:

; 380  : 		{
; 381  : 			(*pPacket)
; 382  : 				>> wSkillID;

  00571	8d 4c 24 40	 lea	 ecx, DWORD PTR _wSkillID$123188[esp+36]
  00575	51		 push	 ecx
  00576	8b cf		 mov	 ecx, edi
  00578	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAG@Z ; CPacket::operator>>

; 383  : 
; 384  : 			(*pMSG)
; 385  : 				<< wSkillID;

  0057d	8b 54 24 40	 mov	 edx, DWORD PTR _wSkillID$123188[esp+36]
  00581	52		 push	 edx
  00582	8b ce		 mov	 ecx, esi
  00584	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00589	8a 84 24 b0 00
	00 00		 mov	 al, BYTE PTR _bSkillCount$123187[esp+36]
  00590	fe c3		 inc	 bl
  00592	3a d8		 cmp	 bl, al
  00594	72 db		 jb	 SHORT $L123191
$L123193:

; 386  : 		}
; 387  : 	}

  00596	8b 84 24 a8 00
	00 00		 mov	 eax, DWORD PTR _strName$123170[esp+36]
  0059d	83 c0 f0	 add	 eax, -16		; fffffff0H
  005a0	c6 44 24 24 03	 mov	 BYTE PTR __$EHRec$[esp+48], 3
  005a5	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  005a8	83 ca ff	 or	 edx, -1
  005ab	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  005af	4a		 dec	 edx
  005b0	85 d2		 test	 edx, edx
  005b2	7f 08		 jg	 SHORT $L123164
  005b4	8b 08		 mov	 ecx, DWORD PTR [eax]
  005b6	8b 11		 mov	 edx, DWORD PTR [ecx]
  005b8	50		 push	 eax
  005b9	ff 52 04	 call	 DWORD PTR [edx+4]
$L123164:
  005bc	8a 84 24 b4 00
	00 00		 mov	 al, BYTE PTR _bRC$123162[esp+36]
  005c3	8a 4c 24 10	 mov	 cl, BYTE PTR _bRecallCnt$[esp+40]
  005c7	fe c0		 inc	 al
  005c9	3a c1		 cmp	 al, cl
  005cb	88 84 24 b4 00
	00 00		 mov	 BYTE PTR _bRC$123162[esp+36], al
  005d2	0f 82 ba fc ff
	ff		 jb	 $L123163
  005d8	5b		 pop	 ebx
$L123165:

; 388  : 
; 389  : 	CString strComment;

  005d9	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  005de	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  005e3	ff 50 0c	 call	 DWORD PTR [eax+12]
  005e6	83 c0 10	 add	 eax, 16			; 00000010H
  005e9	89 44 24 10	 mov	 DWORD PTR _strComment$[esp+36], eax

; 390  : 	(*pPacket)
; 391  : 		>> strComment;

  005ed	8d 4c 24 10	 lea	 ecx, DWORD PTR _strComment$[esp+36]
  005f1	51		 push	 ecx
  005f2	8b cf		 mov	 ecx, edi
  005f4	c6 44 24 24 06	 mov	 BYTE PTR __$EHRec$[esp+48], 6
  005f9	e8 00 00 00 00	 call	 ??5CPacket@@QAEAAV0@AAV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CPacket::operator>>

; 392  : 	(*pMSG)
; 393  : 		<< strComment;

  005fe	8b 54 24 10	 mov	 edx, DWORD PTR _strComment$[esp+36]
  00602	52		 push	 edx
  00603	8b ce		 mov	 ecx, esi
  00605	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 394  : 
; 395  : 	pPacket->m_ptrOffset = pOffset;

  0060a	8b 44 24 14	 mov	 eax, DWORD PTR _pOffset$[esp+36]
  0060e	89 47 08	 mov	 DWORD PTR [edi+8], eax

; 396  : 
; 397  : 	Say(pMSG);

  00611	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  00614	56		 push	 esi
  00615	8b cd		 mov	 ecx, ebp
  00617	ff 12		 call	 DWORD PTR [edx]

; 398  : }

  00619	8b 44 24 10	 mov	 eax, DWORD PTR _strComment$[esp+36]
  0061d	83 c0 f0	 add	 eax, -16		; fffffff0H
  00620	c6 44 24 20 03	 mov	 BYTE PTR __$EHRec$[esp+44], 3
  00625	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00628	83 ca ff	 or	 edx, -1
  0062b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0062f	4a		 dec	 edx
  00630	85 d2		 test	 edx, edx
  00632	5f		 pop	 edi
  00633	5e		 pop	 esi
  00634	5d		 pop	 ebp
  00635	7f 08		 jg	 SHORT $L138090
  00637	8b 08		 mov	 ecx, DWORD PTR [eax]
  00639	8b 11		 mov	 edx, DWORD PTR [ecx]
  0063b	50		 push	 eax
  0063c	ff 52 04	 call	 DWORD PTR [edx+4]
$L138090:
  0063f	8b 44 24 28	 mov	 eax, DWORD PTR _strNAME$[esp+20]
  00643	83 c0 f0	 add	 eax, -16		; fffffff0H
  00646	c6 44 24 14 02	 mov	 BYTE PTR __$EHRec$[esp+32], 2
  0064b	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0064e	83 ca ff	 or	 edx, -1
  00651	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00655	4a		 dec	 edx
  00656	85 d2		 test	 edx, edx
  00658	7f 08		 jg	 SHORT $L138117
  0065a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0065c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0065e	50		 push	 eax
  0065f	ff 52 04	 call	 DWORD PTR [edx+4]
$L138117:
  00662	8b 44 24 48	 mov	 eax, DWORD PTR _strGuildName$[esp+20]
  00666	83 c0 f0	 add	 eax, -16		; fffffff0H
  00669	c6 44 24 14 01	 mov	 BYTE PTR __$EHRec$[esp+32], 1
  0066e	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00671	83 ca ff	 or	 edx, -1
  00674	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00678	4a		 dec	 edx
  00679	85 d2		 test	 edx, edx
  0067b	7f 08		 jg	 SHORT $L138144
  0067d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0067f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00681	50		 push	 eax
  00682	ff 52 04	 call	 DWORD PTR [edx+4]
$L138144:
  00685	8b 44 24 60	 mov	 eax, DWORD PTR _strTacticsName$[esp+20]
  00689	83 c0 f0	 add	 eax, -16		; fffffff0H
  0068c	c6 44 24 14 00	 mov	 BYTE PTR __$EHRec$[esp+32], 0
  00691	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00694	83 ca ff	 or	 edx, -1
  00697	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0069b	4a		 dec	 edx
  0069c	85 d2		 test	 edx, edx
  0069e	7f 08		 jg	 SHORT $L138173
  006a0	8b 08		 mov	 ecx, DWORD PTR [eax]
  006a2	8b 11		 mov	 edx, DWORD PTR [ecx]
  006a4	50		 push	 eax
  006a5	ff 52 04	 call	 DWORD PTR [edx+4]
$L138173:
  006a8	8b 84 24 9c 00
	00 00		 mov	 eax, DWORD PTR _strSoulmate$[esp+20]
  006af	83 c0 f0	 add	 eax, -16		; fffffff0H
  006b2	c7 44 24 14 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+32], -1
  006ba	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  006bd	83 ca ff	 or	 edx, -1
  006c0	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  006c4	4a		 dec	 edx
  006c5	85 d2		 test	 edx, edx
  006c7	7f 08		 jg	 SHORT $L138200
  006c9	8b 08		 mov	 ecx, DWORD PTR [eax]
  006cb	8b 11		 mov	 edx, DWORD PTR [ecx]
  006cd	50		 push	 eax
  006ce	ff 52 04	 call	 DWORD PTR [edx+4]
$L138200:
  006d1	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  006d5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  006dc	83 c4 18	 add	 esp, 24			; 00000018H
  006df	c2 8c 00	 ret	 140			; 0000008cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L137953:
  00000	8d 8d 84 00 00
	00		 lea	 ecx, DWORD PTR _strSoulmate$[ebp-4]
  00006	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L137954:
  0000b	8d 4d 48	 lea	 ecx, DWORD PTR _strTacticsName$[ebp-4]
  0000e	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L137955:
  00013	8d 4d 30	 lea	 ecx, DWORD PTR _strGuildName$[ebp-4]
  00016	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L137956:
  0001b	8d 4d 10	 lea	 ecx, DWORD PTR _strNAME$[ebp-4]
  0001e	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L137957:
  00023	8b 85 8c 00 00
	00		 mov	 eax, DWORD PTR $T137950[ebp-4]
  00029	50		 push	 eax
  0002a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002f	59		 pop	 ecx
  00030	c3		 ret	 0
$L137958:
  00031	8d 8d 80 00 00
	00		 lea	 ecx, DWORD PTR _strName$123170[ebp-4]
  00037	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L137959:
  0003c	8d 4d ec	 lea	 ecx, DWORD PTR _strComment$[ebp]
  0003f	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
__ehhandler$?SendMW_ENTERCHAR_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GMMMKKK0EEGEK0GEKGEEEEEK_JKK0EPAVCPacket@@@Z:
  00044	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138203
  00049	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_ENTERCHAR_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@GMMMKKK0EEGEK0GEKGEEEEEK_JKK0EPAVCPacket@@@Z ENDP ; CTServer::SendMW_ENTERCHAR_REQ
PUBLIC	?SendMW_PARTYADD_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEK@Z ; CTServer::SendMW_PARTYADD_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T138285 DD	0ffffffffH
	DD	FLAT:$L138219
	DD	00H
	DD	FLAT:$L138220
	DD	01H
	DD	FLAT:$L138221
$T138283 DD	019930520H
	DD	03H
	DD	FLAT:$T138285
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_PARTYADD_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEK@Z
_TEXT	SEGMENT
$T138216 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_strRequest$ = 16					; size = 4
_strTarget$ = 20					; size = 4
_bObtainType$ = 24					; size = 1
_bResult$ = 28						; size = 1
_dwRequest$ = 32					; size = 4
?SendMW_PARTYADD_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEK@Z PROC NEAR ; CTServer::SendMW_PARTYADD_REQ, COMDAT
; _this$ = ecx

; 640  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PARTYADD_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	bb 01 00 00 00	 mov	 ebx, 1

; 641  : 	CPacket *pMSG = new CPacket();

  00021	6a 1c		 push	 28			; 0000001cH
  00023	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00027	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 44 24 10	 mov	 DWORD PTR $T138216[esp+32], eax
  00033	85 c0		 test	 eax, eax
  00035	c6 44 24 1c 02	 mov	 BYTE PTR __$EHRec$[esp+40], 2
  0003a	74 0b		 je	 SHORT $L138217
  0003c	8b c8		 mov	 ecx, eax
  0003e	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00043	8b f0		 mov	 esi, eax
  00045	eb 02		 jmp	 SHORT $L138218
$L138217:
  00047	33 f6		 xor	 esi, esi
$L138218:

; 642  : 
; 643  : 	pMSG->SetID(MW_PARTYADD_REQ)
; 644  : 		<< dwCharID
; 645  : 		<< dwKEY
; 646  : 		<< strRequest
; 647  : 		<< strTarget
; 648  : 		<< bObtainType
; 649  : 		<< bResult
; 650  : 		<< dwRequest;

  00049	8b 44 24 3c	 mov	 eax, DWORD PTR _dwRequest$[esp+28]
  0004d	8b 4c 24 38	 mov	 ecx, DWORD PTR _bResult$[esp+28]
  00051	8b 54 24 34	 mov	 edx, DWORD PTR _bObtainType$[esp+28]
  00055	8b 6c 24 30	 mov	 ebp, DWORD PTR _strTarget$[esp+28]
  00059	50		 push	 eax
  0005a	8b 44 24 2c	 mov	 eax, DWORD PTR _dwKEY$[esp+32]
  0005e	51		 push	 ecx
  0005f	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwCharID$[esp+36]
  00063	52		 push	 edx
  00064	55		 push	 ebp
  00065	88 5c 24 2c	 mov	 BYTE PTR __$EHRec$[esp+56], bl
  00069	8b 5c 24 3c	 mov	 ebx, DWORD PTR _strRequest$[esp+44]
  0006d	53		 push	 ebx
  0006e	50		 push	 eax
  0006f	51		 push	 ecx
  00070	68 18 20 00 00	 push	 8216			; 00002018H
  00075	8b ce		 mov	 ecx, esi
  00077	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007c	8b c8		 mov	 ecx, eax
  0007e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00098	8b c8		 mov	 ecx, eax
  0009a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0009f	8b c8		 mov	 ecx, eax
  000a1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a6	8b c8		 mov	 ecx, eax
  000a8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 651  : 
; 652  : 	Say(pMSG);

  000ad	8b 17		 mov	 edx, DWORD PTR [edi]
  000af	56		 push	 esi
  000b0	8b cf		 mov	 ecx, edi
  000b2	ff 12		 call	 DWORD PTR [edx]

; 653  : }

  000b4	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000b7	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000bc	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000bf	83 ca ff	 or	 edx, -1
  000c2	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000c6	4a		 dec	 edx
  000c7	85 d2		 test	 edx, edx
  000c9	7f 08		 jg	 SHORT $L138248
  000cb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000cd	8b 11		 mov	 edx, DWORD PTR [ecx]
  000cf	50		 push	 eax
  000d0	ff 52 04	 call	 DWORD PTR [edx+4]
$L138248:
  000d3	8d 45 f0	 lea	 eax, DWORD PTR [ebp-16]
  000d6	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  000de	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000e1	83 ca ff	 or	 edx, -1
  000e4	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000e8	4a		 dec	 edx
  000e9	85 d2		 test	 edx, edx
  000eb	5f		 pop	 edi
  000ec	5e		 pop	 esi
  000ed	5d		 pop	 ebp
  000ee	5b		 pop	 ebx
  000ef	7f 08		 jg	 SHORT $L138278
  000f1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f5	50		 push	 eax
  000f6	ff 52 04	 call	 DWORD PTR [edx+4]
$L138278:
  000f9	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00104	83 c4 10	 add	 esp, 16			; 00000010H
  00107	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138219:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138220:
  00008	8d 4d 0c	 lea	 ecx, DWORD PTR _strRequest$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138221:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T138216[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_PARTYADD_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEK@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138283
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PARTYADD_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EEK@Z ENDP ; CTServer::SendMW_PARTYADD_REQ
PUBLIC	?SendMW_GUILDESTABLISH_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z ; CTServer::SendMW_GUILDESTABLISH_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T138330 DD	0ffffffffH
	DD	FLAT:$L138295
	DD	00H
	DD	FLAT:$L138296
$T138328 DD	019930520H
	DD	02H
	DD	FLAT:$T138330
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDESTABLISH_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z
_TEXT	SEGMENT
$T138292 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bRet$ = 16						; size = 1
_dwGuildID$ = 20					; size = 4
_strName$ = 24						; size = 4
_bEstablish$ = 28					; size = 1
?SendMW_GUILDESTABLISH_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z PROC NEAR ; CTServer::SendMW_GUILDESTABLISH_REQ, COMDAT
; _this$ = ecx

; 788  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDESTABLISH_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 789  : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T138292[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L138293
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L138294
$L138293:
  00043	33 f6		 xor	 esi, esi
$L138294:

; 790  : 
; 791  : 	pMsg->SetID(MW_GUILDESTABLISH_REQ)
; 792  : 		<< dwCharID
; 793  : 		<< dwKey
; 794  : 		<< bRet
; 795  : 		<< dwGuildID
; 796  : 		<< strName
; 797  : 		<< bEstablish;

  00045	8b 44 24 34	 mov	 eax, DWORD PTR _bEstablish$[esp+24]
  00049	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwGuildID$[esp+24]
  0004d	8b 54 24 28	 mov	 edx, DWORD PTR _bRet$[esp+24]
  00051	50		 push	 eax
  00052	8b 44 24 28	 mov	 eax, DWORD PTR _dwKey$[esp+28]
  00056	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl
  0005a	8b 5c 24 34	 mov	 ebx, DWORD PTR _strName$[esp+28]
  0005e	53		 push	 ebx
  0005f	51		 push	 ecx
  00060	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwCharID$[esp+36]
  00064	52		 push	 edx
  00065	50		 push	 eax
  00066	51		 push	 ecx
  00067	68 2a 20 00 00	 push	 8234			; 0000202aH
  0006c	8b ce		 mov	 ecx, esi
  0006e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 798  : 
; 799  : 	Say(pMsg);

  0009d	8b 17		 mov	 edx, DWORD PTR [edi]
  0009f	56		 push	 esi
  000a0	8b cf		 mov	 ecx, edi
  000a2	ff 12		 call	 DWORD PTR [edx]

; 800  : }

  000a4	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000a7	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000af	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000b2	83 ca ff	 or	 edx, -1
  000b5	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000b9	4a		 dec	 edx
  000ba	85 d2		 test	 edx, edx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	7f 08		 jg	 SHORT $L138323
  000c1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c5	50		 push	 eax
  000c6	ff 52 04	 call	 DWORD PTR [edx+4]
$L138323:
  000c9	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000cd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d4	83 c4 10	 add	 esp, 16			; 00000010H
  000d7	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138295:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138296:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T138292[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_GUILDESTABLISH_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138328
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDESTABLISH_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z ENDP ; CTServer::SendMW_GUILDESTABLISH_REQ
PUBLIC	?SendMW_GUILDINVITE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z ; CTServer::SendMW_GUILDINVITE_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T138406 DD	0ffffffffH
	DD	FLAT:$L138340
	DD	00H
	DD	FLAT:$L138341
	DD	01H
	DD	FLAT:$L138342
$T138404 DD	019930520H
	DD	03H
	DD	FLAT:$T138406
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDINVITE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z
_TEXT	SEGMENT
$T138337 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_strName$ = 16						; size = 4
_dwInviter$ = 20					; size = 4
_strInviterName$ = 24					; size = 4
?SendMW_GUILDINVITE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z PROC NEAR ; CTServer::SendMW_GUILDINVITE_REQ, COMDAT
; _this$ = ecx

; 820  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDINVITE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	bb 01 00 00 00	 mov	 ebx, 1

; 821  : 	CPacket * pMsg = new CPacket();

  00021	6a 1c		 push	 28			; 0000001cH
  00023	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00027	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 44 24 10	 mov	 DWORD PTR $T138337[esp+32], eax
  00033	85 c0		 test	 eax, eax
  00035	c6 44 24 1c 02	 mov	 BYTE PTR __$EHRec$[esp+40], 2
  0003a	74 0b		 je	 SHORT $L138338
  0003c	8b c8		 mov	 ecx, eax
  0003e	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00043	8b f0		 mov	 esi, eax
  00045	eb 02		 jmp	 SHORT $L138339
$L138338:
  00047	33 f6		 xor	 esi, esi
$L138339:

; 822  : 
; 823  : 	pMsg->SetID(MW_GUILDINVITE_REQ)
; 824  : 		<< dwCharID
; 825  : 		<< dwKey
; 826  : 		<< strName
; 827  : 		<< dwInviter
; 828  : 		<< strInviterName;

  00049	8b 6c 24 34	 mov	 ebp, DWORD PTR _strInviterName$[esp+28]
  0004d	8b 44 24 30	 mov	 eax, DWORD PTR _dwInviter$[esp+28]
  00051	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwKey$[esp+28]
  00055	8b 54 24 24	 mov	 edx, DWORD PTR _dwCharID$[esp+28]
  00059	55		 push	 ebp
  0005a	50		 push	 eax
  0005b	88 5c 24 24	 mov	 BYTE PTR __$EHRec$[esp+48], bl
  0005f	8b 5c 24 34	 mov	 ebx, DWORD PTR _strName$[esp+36]
  00063	53		 push	 ebx
  00064	51		 push	 ecx
  00065	52		 push	 edx
  00066	68 2e 20 00 00	 push	 8238			; 0000202eH
  0006b	8b ce		 mov	 ecx, esi
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 829  : 
; 830  : 	Say(pMsg);

  00095	8b 07		 mov	 eax, DWORD PTR [edi]
  00097	56		 push	 esi
  00098	8b cf		 mov	 ecx, edi
  0009a	ff 10		 call	 DWORD PTR [eax]

; 831  : }

  0009c	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0009f	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000a4	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a7	83 ca ff	 or	 edx, -1
  000aa	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ae	4a		 dec	 edx
  000af	85 d2		 test	 edx, edx
  000b1	7f 08		 jg	 SHORT $L138372
  000b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b7	50		 push	 eax
  000b8	ff 52 04	 call	 DWORD PTR [edx+4]
$L138372:
  000bb	8d 45 f0	 lea	 eax, DWORD PTR [ebp-16]
  000be	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  000c6	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000c9	83 ca ff	 or	 edx, -1
  000cc	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d0	4a		 dec	 edx
  000d1	85 d2		 test	 edx, edx
  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5d		 pop	 ebp
  000d6	5b		 pop	 ebx
  000d7	7f 08		 jg	 SHORT $L138399
  000d9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000db	8b 11		 mov	 edx, DWORD PTR [ecx]
  000dd	50		 push	 eax
  000de	ff 52 04	 call	 DWORD PTR [edx+4]
$L138399:
  000e1	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000e5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ec	83 c4 10	 add	 esp, 16			; 00000010H
  000ef	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138340:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strInviterName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138341:
  00008	8d 4d 0c	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138342:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T138337[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_GUILDINVITE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138404
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDINVITE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0@Z ENDP ; CTServer::SendMW_GUILDINVITE_REQ
PUBLIC	?SendMW_GUILDJOIN_REQ@CTServer@@QAEXKKEKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0E@Z ; CTServer::SendMW_GUILDJOIN_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T138482 DD	0ffffffffH
	DD	FLAT:$L138416
	DD	00H
	DD	FLAT:$L138417
	DD	01H
	DD	FLAT:$L138418
$T138480 DD	019930520H
	DD	03H
	DD	FLAT:$T138482
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDJOIN_REQ@CTServer@@QAEXKKEKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0E@Z
_TEXT	SEGMENT
$T138413 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bRet$ = 16						; size = 1
_dwGuildID$ = 20					; size = 4
_dwFame$ = 24						; size = 4
_dwFameColor$ = 28					; size = 4
_strGuildName$ = 32					; size = 4
_dwMemberID$ = 36					; size = 4
_strMemberName$ = 40					; size = 4
_bMaxGuildMember$ = 44					; size = 1
?SendMW_GUILDJOIN_REQ@CTServer@@QAEXKKEKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0E@Z PROC NEAR ; CTServer::SendMW_GUILDJOIN_REQ, COMDAT
; _this$ = ecx

; 843  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDJOIN_REQ@CTServer@@QAEXKKEKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	bb 01 00 00 00	 mov	 ebx, 1

; 844  : 	CPacket * pMsg = new CPacket();

  00021	6a 1c		 push	 28			; 0000001cH
  00023	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00027	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 44 24 10	 mov	 DWORD PTR $T138413[esp+32], eax
  00033	85 c0		 test	 eax, eax
  00035	c6 44 24 1c 02	 mov	 BYTE PTR __$EHRec$[esp+40], 2
  0003a	74 0b		 je	 SHORT $L138414
  0003c	8b c8		 mov	 ecx, eax
  0003e	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00043	8b f0		 mov	 esi, eax
  00045	eb 02		 jmp	 SHORT $L138415
$L138414:
  00047	33 f6		 xor	 esi, esi
$L138415:

; 845  : 
; 846  : 	pMsg->SetID(MW_GUILDJOIN_REQ)
; 847  : 		<< dwCharID
; 848  : 		<< dwKey
; 849  : 		<< bRet
; 850  : 		<< dwGuildID
; 851  : 		<< dwFame
; 852  : 		<< dwFameColor
; 853  : 		<< strGuildName
; 854  : 		<< dwMemberID
; 855  : 		<< strMemberName
; 856  : 		<< bMaxGuildMember;

  00049	8b 44 24 48	 mov	 eax, DWORD PTR _bMaxGuildMember$[esp+28]
  0004d	8b 6c 24 44	 mov	 ebp, DWORD PTR _strMemberName$[esp+28]
  00051	8b 4c 24 40	 mov	 ecx, DWORD PTR _dwMemberID$[esp+28]
  00055	8b 54 24 38	 mov	 edx, DWORD PTR _dwFameColor$[esp+28]
  00059	50		 push	 eax
  0005a	8b 44 24 38	 mov	 eax, DWORD PTR _dwFame$[esp+32]
  0005e	55		 push	 ebp
  0005f	51		 push	 ecx
  00060	8b 4c 24 3c	 mov	 ecx, DWORD PTR _dwGuildID$[esp+40]
  00064	88 5c 24 28	 mov	 BYTE PTR __$EHRec$[esp+52], bl
  00068	8b 5c 24 48	 mov	 ebx, DWORD PTR _strGuildName$[esp+40]
  0006c	53		 push	 ebx
  0006d	52		 push	 edx
  0006e	8b 54 24 40	 mov	 edx, DWORD PTR _bRet$[esp+48]
  00072	50		 push	 eax
  00073	8b 44 24 40	 mov	 eax, DWORD PTR _dwKey$[esp+52]
  00077	51		 push	 ecx
  00078	8b 4c 24 40	 mov	 ecx, DWORD PTR _dwCharID$[esp+56]
  0007c	52		 push	 edx
  0007d	50		 push	 eax
  0007e	51		 push	 ecx
  0007f	68 31 20 00 00	 push	 8241			; 00002031H
  00084	8b ce		 mov	 ecx, esi
  00086	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0008b	8b c8		 mov	 ecx, eax
  0008d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00092	8b c8		 mov	 ecx, eax
  00094	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00099	8b c8		 mov	 ecx, eax
  0009b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a7	8b c8		 mov	 ecx, eax
  000a9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ae	8b c8		 mov	 ecx, eax
  000b0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b5	8b c8		 mov	 ecx, eax
  000b7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000bc	8b c8		 mov	 ecx, eax
  000be	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000c3	8b c8		 mov	 ecx, eax
  000c5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000ca	8b c8		 mov	 ecx, eax
  000cc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 857  : 
; 858  : 	Say(pMsg);

  000d1	8b 17		 mov	 edx, DWORD PTR [edi]
  000d3	56		 push	 esi
  000d4	8b cf		 mov	 ecx, edi
  000d6	ff 12		 call	 DWORD PTR [edx]

; 859  : }

  000d8	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000db	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000e0	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000e3	83 ca ff	 or	 edx, -1
  000e6	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ea	4a		 dec	 edx
  000eb	85 d2		 test	 edx, edx
  000ed	7f 08		 jg	 SHORT $L138448
  000ef	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f3	50		 push	 eax
  000f4	ff 52 04	 call	 DWORD PTR [edx+4]
$L138448:
  000f7	8d 45 f0	 lea	 eax, DWORD PTR [ebp-16]
  000fa	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  00102	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00105	83 ca ff	 or	 edx, -1
  00108	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0010c	4a		 dec	 edx
  0010d	85 d2		 test	 edx, edx
  0010f	5f		 pop	 edi
  00110	5e		 pop	 esi
  00111	5d		 pop	 ebp
  00112	5b		 pop	 ebx
  00113	7f 08		 jg	 SHORT $L138475
  00115	8b 08		 mov	 ecx, DWORD PTR [eax]
  00117	8b 11		 mov	 edx, DWORD PTR [ecx]
  00119	50		 push	 eax
  0011a	ff 52 04	 call	 DWORD PTR [edx+4]
$L138475:
  0011d	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00121	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00128	83 c4 10	 add	 esp, 16			; 00000010H
  0012b	c2 28 00	 ret	 40			; 00000028H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138416:
  00000	8d 4d 24	 lea	 ecx, DWORD PTR _strMemberName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138417:
  00008	8d 4d 1c	 lea	 ecx, DWORD PTR _strGuildName$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138418:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T138413[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_GUILDJOIN_REQ@CTServer@@QAEXKKEKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0E@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138480
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDJOIN_REQ@CTServer@@QAEXKKEKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0E@Z ENDP ; CTServer::SendMW_GUILDJOIN_REQ
PUBLIC	?SendMW_GUILDLEAVE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EK@Z ; CTServer::SendMW_GUILDLEAVE_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T138527 DD	0ffffffffH
	DD	FLAT:$L138492
	DD	00H
	DD	FLAT:$L138493
$T138525 DD	019930520H
	DD	02H
	DD	FLAT:$T138527
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDLEAVE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EK@Z
_TEXT	SEGMENT
$T138489 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_strTarget$ = 16					; size = 4
_bReason$ = 20						; size = 1
_dwTime$ = 24						; size = 4
?SendMW_GUILDLEAVE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EK@Z PROC NEAR ; CTServer::SendMW_GUILDLEAVE_REQ, COMDAT
; _this$ = ecx

; 865  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDLEAVE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 866  : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T138489[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L138490
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L138491
$L138490:
  00043	33 f6		 xor	 esi, esi
$L138491:

; 867  : 
; 868  : 	pMsg->SetID(MW_GUILDLEAVE_REQ)
; 869  : 		<< dwCharID
; 870  : 		<< dwKey
; 871  : 		<< strTarget
; 872  : 		<< bReason
; 873  : 		<< dwTime;

  00045	8b 44 24 30	 mov	 eax, DWORD PTR _dwTime$[esp+24]
  00049	8b 4c 24 2c	 mov	 ecx, DWORD PTR _bReason$[esp+24]
  0004d	8b 54 24 24	 mov	 edx, DWORD PTR _dwKey$[esp+24]
  00051	50		 push	 eax
  00052	8b 44 24 24	 mov	 eax, DWORD PTR _dwCharID$[esp+28]
  00056	51		 push	 ecx
  00057	88 5c 24 20	 mov	 BYTE PTR __$EHRec$[esp+44], bl
  0005b	8b 5c 24 30	 mov	 ebx, DWORD PTR _strTarget$[esp+32]
  0005f	53		 push	 ebx
  00060	52		 push	 edx
  00061	50		 push	 eax
  00062	68 32 20 00 00	 push	 8242			; 00002032H
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00075	8b c8		 mov	 ecx, eax
  00077	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007c	8b c8		 mov	 ecx, eax
  0007e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 874  : 
; 875  : 	Say(pMsg);

  00091	8b 17		 mov	 edx, DWORD PTR [edi]
  00093	56		 push	 esi
  00094	8b cf		 mov	 ecx, edi
  00096	ff 12		 call	 DWORD PTR [edx]

; 876  : }

  00098	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0009b	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a6	83 ca ff	 or	 edx, -1
  000a9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ad	4a		 dec	 edx
  000ae	85 d2		 test	 edx, edx
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5b		 pop	 ebx
  000b3	7f 08		 jg	 SHORT $L138520
  000b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b9	50		 push	 eax
  000ba	ff 52 04	 call	 DWORD PTR [edx+4]
$L138520:
  000bd	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c8	83 c4 10	 add	 esp, 16			; 00000010H
  000cb	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138492:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138493:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T138489[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_GUILDLEAVE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EK@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138525
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDLEAVE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EK@Z ENDP ; CTServer::SendMW_GUILDLEAVE_REQ
PUBLIC	?SendMW_GUILDDUTY_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z ; CTServer::SendMW_GUILDDUTY_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T138572 DD	0ffffffffH
	DD	FLAT:$L138537
	DD	00H
	DD	FLAT:$L138538
$T138570 DD	019930520H
	DD	02H
	DD	FLAT:$T138572
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDDUTY_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z
_TEXT	SEGMENT
$T138534 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_strTarget$ = 16					; size = 4
_bDuty$ = 20						; size = 1
?SendMW_GUILDDUTY_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z PROC NEAR ; CTServer::SendMW_GUILDDUTY_REQ, COMDAT
; _this$ = ecx

; 881  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDDUTY_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 882  : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T138534[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L138535
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L138536
$L138535:
  00043	33 f6		 xor	 esi, esi
$L138536:

; 883  : 
; 884  : 	pMsg->SetID(MW_GUILDDUTY_REQ)
; 885  : 		<< dwCharID
; 886  : 		<< dwKey
; 887  : 		<< strTarget
; 888  : 		<< bDuty;

  00045	8b 44 24 2c	 mov	 eax, DWORD PTR _bDuty$[esp+24]
  00049	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKey$[esp+24]
  0004d	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  00051	50		 push	 eax
  00052	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl
  00056	8b 5c 24 2c	 mov	 ebx, DWORD PTR _strTarget$[esp+28]
  0005a	53		 push	 ebx
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	68 34 20 00 00	 push	 8244			; 00002034H
  00062	8b ce		 mov	 ecx, esi
  00064	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00069	8b c8		 mov	 ecx, eax
  0006b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00070	8b c8		 mov	 ecx, eax
  00072	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 889  : 
; 890  : 	Say(pMsg);

  00085	8b 07		 mov	 eax, DWORD PTR [edi]
  00087	56		 push	 esi
  00088	8b cf		 mov	 ecx, edi
  0008a	ff 10		 call	 DWORD PTR [eax]

; 891  : }

  0008c	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0008f	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00097	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0009a	83 ca ff	 or	 edx, -1
  0009d	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000a1	4a		 dec	 edx
  000a2	85 d2		 test	 edx, edx
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	7f 08		 jg	 SHORT $L138565
  000a9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ab	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ad	50		 push	 eax
  000ae	ff 52 04	 call	 DWORD PTR [edx+4]
$L138565:
  000b1	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000b5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000bc	83 c4 10	 add	 esp, 16			; 00000010H
  000bf	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138537:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138538:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T138534[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_GUILDDUTY_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138570
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDDUTY_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z ENDP ; CTServer::SendMW_GUILDDUTY_REQ
PUBLIC	?SendMW_GUILDPEER_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z ; CTServer::SendMW_GUILDPEER_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T138617 DD	0ffffffffH
	DD	FLAT:$L138582
	DD	00H
	DD	FLAT:$L138583
$T138615 DD	019930520H
	DD	02H
	DD	FLAT:$T138617
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDPEER_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z
_TEXT	SEGMENT
$T138579 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bResult$ = 16						; size = 1
_strTarget$ = 20					; size = 4
_bPeer$ = 24						; size = 1
_bOldPeer$ = 28						; size = 1
?SendMW_GUILDPEER_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z PROC NEAR ; CTServer::SendMW_GUILDPEER_REQ, COMDAT
; _this$ = ecx

; 898  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDPEER_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 899  : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T138579[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L138580
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L138581
$L138580:
  00043	33 f6		 xor	 esi, esi
$L138581:

; 900  : 
; 901  : 	pMsg->SetID(MW_GUILDPEER_REQ)
; 902  : 		<< dwCharID
; 903  : 		<< dwKEY
; 904  : 		<< bResult
; 905  : 		<< strTarget
; 906  : 		<< bPeer
; 907  : 		<< bOldPeer;

  00045	8b 44 24 34	 mov	 eax, DWORD PTR _bOldPeer$[esp+24]
  00049	8b 4c 24 30	 mov	 ecx, DWORD PTR _bPeer$[esp+24]
  0004d	8b 54 24 28	 mov	 edx, DWORD PTR _bResult$[esp+24]
  00051	50		 push	 eax
  00052	8b 44 24 28	 mov	 eax, DWORD PTR _dwKEY$[esp+28]
  00056	51		 push	 ecx
  00057	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwCharID$[esp+32]
  0005b	88 5c 24 20	 mov	 BYTE PTR __$EHRec$[esp+44], bl
  0005f	8b 5c 24 34	 mov	 ebx, DWORD PTR _strTarget$[esp+32]
  00063	53		 push	 ebx
  00064	52		 push	 edx
  00065	50		 push	 eax
  00066	51		 push	 ecx
  00067	68 36 20 00 00	 push	 8246			; 00002036H
  0006c	8b ce		 mov	 ecx, esi
  0006e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 908  : 
; 909  : 	Say(pMsg);

  0009d	8b 17		 mov	 edx, DWORD PTR [edi]
  0009f	56		 push	 esi
  000a0	8b cf		 mov	 ecx, edi
  000a2	ff 12		 call	 DWORD PTR [edx]

; 910  : }

  000a4	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000a7	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000af	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000b2	83 ca ff	 or	 edx, -1
  000b5	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000b9	4a		 dec	 edx
  000ba	85 d2		 test	 edx, edx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	7f 08		 jg	 SHORT $L138610
  000c1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c5	50		 push	 eax
  000c6	ff 52 04	 call	 DWORD PTR [edx+4]
$L138610:
  000c9	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000cd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d4	83 c4 10	 add	 esp, 16			; 00000010H
  000d7	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138582:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138583:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T138579[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_GUILDPEER_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138615
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDPEER_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z ENDP ; CTServer::SendMW_GUILDPEER_REQ
PUBLIC	?SendMW_GUILDTACTICSREPLY_REQ@CTServer@@QAEXKKEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0KKK@Z ; CTServer::SendMW_GUILDTACTICSREPLY_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T138693 DD	0ffffffffH
	DD	FLAT:$L138627
	DD	00H
	DD	FLAT:$L138628
	DD	01H
	DD	FLAT:$L138629
$T138691 DD	019930520H
	DD	03H
	DD	FLAT:$T138693
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSREPLY_REQ@CTServer@@QAEXKKEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0KKK@Z
_TEXT	SEGMENT
$T138624 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bResult$ = 16						; size = 1
_dwMemberID$ = 20					; size = 4
_dwGuildID$ = 24					; size = 4
_strGuildName$ = 28					; size = 4
_strMemberName$ = 32					; size = 4
_dwGold$ = 36						; size = 4
_dwSilver$ = 40						; size = 4
_dwCooper$ = 44						; size = 4
?SendMW_GUILDTACTICSREPLY_REQ@CTServer@@QAEXKKEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0KKK@Z PROC NEAR ; CTServer::SendMW_GUILDTACTICSREPLY_REQ, COMDAT
; _this$ = ecx

; 1429 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSREPLY_REQ@CTServer@@QAEXKKEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0KKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	bb 01 00 00 00	 mov	 ebx, 1

; 1430 : 	CPacket * pMsg = new CPacket();

  00021	6a 1c		 push	 28			; 0000001cH
  00023	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00027	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 44 24 10	 mov	 DWORD PTR $T138624[esp+32], eax
  00033	85 c0		 test	 eax, eax
  00035	c6 44 24 1c 02	 mov	 BYTE PTR __$EHRec$[esp+40], 2
  0003a	74 0b		 je	 SHORT $L138625
  0003c	8b c8		 mov	 ecx, eax
  0003e	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00043	8b f0		 mov	 esi, eax
  00045	eb 02		 jmp	 SHORT $L138626
$L138625:
  00047	33 f6		 xor	 esi, esi
$L138626:

; 1431 : 
; 1432 : 	pMsg->SetID(MW_GUILDTACTICSREPLY_REQ)
; 1433 : 		<< dwCharID
; 1434 : 		<< dwKey
; 1435 : 		<< bResult
; 1436 : 		<< dwGuildID
; 1437 : 		<< strGuildName
; 1438 : 		<< dwMemberID
; 1439 : 		<< strMemberName
; 1440 : 		<< dwGold
; 1441 : 		<< dwSilver
; 1442 : 		<< dwCooper;

  00049	8b 44 24 48	 mov	 eax, DWORD PTR _dwCooper$[esp+28]
  0004d	8b 4c 24 44	 mov	 ecx, DWORD PTR _dwSilver$[esp+28]
  00051	8b 54 24 40	 mov	 edx, DWORD PTR _dwGold$[esp+28]
  00055	8b 6c 24 3c	 mov	 ebp, DWORD PTR _strMemberName$[esp+28]
  00059	50		 push	 eax
  0005a	8b 44 24 34	 mov	 eax, DWORD PTR _dwMemberID$[esp+32]
  0005e	51		 push	 ecx
  0005f	8b 4c 24 3c	 mov	 ecx, DWORD PTR _dwGuildID$[esp+36]
  00063	52		 push	 edx
  00064	8b 54 24 38	 mov	 edx, DWORD PTR _bResult$[esp+40]
  00068	55		 push	 ebp
  00069	50		 push	 eax
  0006a	8b 44 24 3c	 mov	 eax, DWORD PTR _dwKey$[esp+48]
  0006e	88 5c 24 30	 mov	 BYTE PTR __$EHRec$[esp+60], bl
  00072	8b 5c 24 4c	 mov	 ebx, DWORD PTR _strGuildName$[esp+48]
  00076	53		 push	 ebx
  00077	51		 push	 ecx
  00078	8b 4c 24 40	 mov	 ecx, DWORD PTR _dwCharID$[esp+56]
  0007c	52		 push	 edx
  0007d	50		 push	 eax
  0007e	51		 push	 ecx
  0007f	68 fc 20 00 00	 push	 8444			; 000020fcH
  00084	8b ce		 mov	 ecx, esi
  00086	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0008b	8b c8		 mov	 ecx, eax
  0008d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00092	8b c8		 mov	 ecx, eax
  00094	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00099	8b c8		 mov	 ecx, eax
  0009b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a7	8b c8		 mov	 ecx, eax
  000a9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000ae	8b c8		 mov	 ecx, eax
  000b0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b5	8b c8		 mov	 ecx, eax
  000b7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000bc	8b c8		 mov	 ecx, eax
  000be	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000c3	8b c8		 mov	 ecx, eax
  000c5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ca	8b c8		 mov	 ecx, eax
  000cc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1443 : 
; 1444 : 	Say(pMsg);

  000d1	8b 17		 mov	 edx, DWORD PTR [edi]
  000d3	56		 push	 esi
  000d4	8b cf		 mov	 ecx, edi
  000d6	ff 12		 call	 DWORD PTR [edx]

; 1445 : }

  000d8	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000db	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000e0	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000e3	83 ca ff	 or	 edx, -1
  000e6	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ea	4a		 dec	 edx
  000eb	85 d2		 test	 edx, edx
  000ed	7f 08		 jg	 SHORT $L138659
  000ef	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f3	50		 push	 eax
  000f4	ff 52 04	 call	 DWORD PTR [edx+4]
$L138659:
  000f7	8d 45 f0	 lea	 eax, DWORD PTR [ebp-16]
  000fa	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  00102	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00105	83 ca ff	 or	 edx, -1
  00108	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0010c	4a		 dec	 edx
  0010d	85 d2		 test	 edx, edx
  0010f	5f		 pop	 edi
  00110	5e		 pop	 esi
  00111	5d		 pop	 ebp
  00112	5b		 pop	 ebx
  00113	7f 08		 jg	 SHORT $L138686
  00115	8b 08		 mov	 ecx, DWORD PTR [eax]
  00117	8b 11		 mov	 edx, DWORD PTR [ecx]
  00119	50		 push	 eax
  0011a	ff 52 04	 call	 DWORD PTR [edx+4]
$L138686:
  0011d	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00121	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00128	83 c4 10	 add	 esp, 16			; 00000010H
  0012b	c2 28 00	 ret	 40			; 00000028H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138627:
  00000	8d 4d 1c	 lea	 ecx, DWORD PTR _strMemberName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138628:
  00008	8d 4d 18	 lea	 ecx, DWORD PTR _strGuildName$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138629:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T138624[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSREPLY_REQ@CTServer@@QAEXKKEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0KKK@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138691
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSREPLY_REQ@CTServer@@QAEXKKEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0KKK@Z ENDP ; CTServer::SendMW_GUILDTACTICSREPLY_REQ
PUBLIC	?SendMW_GUILDTACTICSINVITE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EKKKK@Z ; CTServer::SendMW_GUILDTACTICSINVITE_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T138769 DD	0ffffffffH
	DD	FLAT:$L138703
	DD	00H
	DD	FLAT:$L138704
	DD	01H
	DD	FLAT:$L138705
$T138767 DD	019930520H
	DD	03H
	DD	FLAT:$T138769
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSINVITE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EKKKK@Z
_TEXT	SEGMENT
$T138700 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_strGuildName$ = 16					; size = 4
_strNAME$ = 20						; size = 4
_bDay$ = 24						; size = 1
_dwPoint$ = 28						; size = 4
_dwGold$ = 32						; size = 4
_dwSilver$ = 36						; size = 4
_dwCooper$ = 40						; size = 4
?SendMW_GUILDTACTICSINVITE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EKKKK@Z PROC NEAR ; CTServer::SendMW_GUILDTACTICSINVITE_REQ, COMDAT
; _this$ = ecx

; 1472 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSINVITE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	bb 01 00 00 00	 mov	 ebx, 1

; 1473 : 	CPacket * pMsg = new CPacket();

  00021	6a 1c		 push	 28			; 0000001cH
  00023	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00027	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 44 24 10	 mov	 DWORD PTR $T138700[esp+32], eax
  00033	85 c0		 test	 eax, eax
  00035	c6 44 24 1c 02	 mov	 BYTE PTR __$EHRec$[esp+40], 2
  0003a	74 0b		 je	 SHORT $L138701
  0003c	8b c8		 mov	 ecx, eax
  0003e	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00043	8b f0		 mov	 esi, eax
  00045	eb 02		 jmp	 SHORT $L138702
$L138701:
  00047	33 f6		 xor	 esi, esi
$L138702:

; 1474 : 
; 1475 : 	pMsg->SetID(MW_GUILDTACTICSINVITE_REQ)
; 1476 : 		<< dwCharID
; 1477 : 		<< dwKEY
; 1478 : 		<< strGuildName
; 1479 : 		<< strNAME
; 1480 : 		<< bDay
; 1481 : 		<< dwPoint
; 1482 : 		<< dwGold
; 1483 : 		<< dwSilver
; 1484 : 		<< dwCooper;

  00049	8b 44 24 44	 mov	 eax, DWORD PTR _dwCooper$[esp+28]
  0004d	8b 4c 24 40	 mov	 ecx, DWORD PTR _dwSilver$[esp+28]
  00051	8b 54 24 3c	 mov	 edx, DWORD PTR _dwGold$[esp+28]
  00055	8b 6c 24 30	 mov	 ebp, DWORD PTR _strNAME$[esp+28]
  00059	50		 push	 eax
  0005a	8b 44 24 3c	 mov	 eax, DWORD PTR _dwPoint$[esp+32]
  0005e	51		 push	 ecx
  0005f	8b 4c 24 3c	 mov	 ecx, DWORD PTR _bDay$[esp+36]
  00063	52		 push	 edx
  00064	8b 54 24 34	 mov	 edx, DWORD PTR _dwKEY$[esp+40]
  00068	50		 push	 eax
  00069	8b 44 24 34	 mov	 eax, DWORD PTR _dwCharID$[esp+44]
  0006d	51		 push	 ecx
  0006e	55		 push	 ebp
  0006f	88 5c 24 34	 mov	 BYTE PTR __$EHRec$[esp+64], bl
  00073	8b 5c 24 44	 mov	 ebx, DWORD PTR _strGuildName$[esp+52]
  00077	53		 push	 ebx
  00078	52		 push	 edx
  00079	50		 push	 eax
  0007a	68 35 21 00 00	 push	 8501			; 00002135H
  0007f	8b ce		 mov	 ecx, esi
  00081	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008d	8b c8		 mov	 ecx, eax
  0008f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00094	8b c8		 mov	 ecx, eax
  00096	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0009b	8b c8		 mov	 ecx, eax
  0009d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000a2	8b c8		 mov	 ecx, eax
  000a4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a9	8b c8		 mov	 ecx, eax
  000ab	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b0	8b c8		 mov	 ecx, eax
  000b2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b7	8b c8		 mov	 ecx, eax
  000b9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000be	8b c8		 mov	 ecx, eax
  000c0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1485 : 
; 1486 : 	Say(pMsg);

  000c5	8b 17		 mov	 edx, DWORD PTR [edi]
  000c7	56		 push	 esi
  000c8	8b cf		 mov	 ecx, edi
  000ca	ff 12		 call	 DWORD PTR [edx]

; 1487 : }

  000cc	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000cf	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000d4	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000d7	83 ca ff	 or	 edx, -1
  000da	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000de	4a		 dec	 edx
  000df	85 d2		 test	 edx, edx
  000e1	7f 08		 jg	 SHORT $L138735
  000e3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e7	50		 push	 eax
  000e8	ff 52 04	 call	 DWORD PTR [edx+4]
$L138735:
  000eb	8d 45 f0	 lea	 eax, DWORD PTR [ebp-16]
  000ee	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  000f6	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000f9	83 ca ff	 or	 edx, -1
  000fc	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00100	4a		 dec	 edx
  00101	85 d2		 test	 edx, edx
  00103	5f		 pop	 edi
  00104	5e		 pop	 esi
  00105	5d		 pop	 ebp
  00106	5b		 pop	 ebx
  00107	7f 08		 jg	 SHORT $L138762
  00109	8b 08		 mov	 ecx, DWORD PTR [eax]
  0010b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010d	50		 push	 eax
  0010e	ff 52 04	 call	 DWORD PTR [edx+4]
$L138762:
  00111	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00115	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0011c	83 c4 10	 add	 esp, 16			; 00000010H
  0011f	c2 24 00	 ret	 36			; 00000024H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138703:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strNAME$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138704:
  00008	8d 4d 0c	 lea	 ecx, DWORD PTR _strGuildName$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138705:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T138700[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSINVITE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EKKKK@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138767
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSINVITE_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EKKKK@Z ENDP ; CTServer::SendMW_GUILDTACTICSINVITE_REQ
PUBLIC	?SendMW_GUILDTACTICSANSWER_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0KKK@Z ; CTServer::SendMW_GUILDTACTICSANSWER_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T138845 DD	0ffffffffH
	DD	FLAT:$L138779
	DD	00H
	DD	FLAT:$L138780
	DD	01H
	DD	FLAT:$L138781
$T138843 DD	019930520H
	DD	03H
	DD	FLAT:$T138845
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSANSWER_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0KKK@Z
_TEXT	SEGMENT
$T138776 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bResult$ = 16						; size = 1
_dwGuildID$ = 20					; size = 4
_strGuildName$ = 24					; size = 4
_dwMemberID$ = 28					; size = 4
_strMemberName$ = 32					; size = 4
_dwGold$ = 36						; size = 4
_dwSilver$ = 40						; size = 4
_dwCooper$ = 44						; size = 4
?SendMW_GUILDTACTICSANSWER_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0KKK@Z PROC NEAR ; CTServer::SendMW_GUILDTACTICSANSWER_REQ, COMDAT
; _this$ = ecx

; 1498 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSANSWER_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0KKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	bb 01 00 00 00	 mov	 ebx, 1

; 1499 : 	CPacket * pMsg = new CPacket();

  00021	6a 1c		 push	 28			; 0000001cH
  00023	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00027	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 44 24 10	 mov	 DWORD PTR $T138776[esp+32], eax
  00033	85 c0		 test	 eax, eax
  00035	c6 44 24 1c 02	 mov	 BYTE PTR __$EHRec$[esp+40], 2
  0003a	74 0b		 je	 SHORT $L138777
  0003c	8b c8		 mov	 ecx, eax
  0003e	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00043	8b f0		 mov	 esi, eax
  00045	eb 02		 jmp	 SHORT $L138778
$L138777:
  00047	33 f6		 xor	 esi, esi
$L138778:

; 1500 : 
; 1501 : 	pMsg->SetID(MW_GUILDTACTICSANSWER_REQ)
; 1502 : 		<< dwCharID
; 1503 : 		<< dwKey
; 1504 : 		<< bResult
; 1505 : 		<< dwGuildID
; 1506 : 		<< strGuildName
; 1507 : 		<< dwMemberID
; 1508 : 		<< strMemberName
; 1509 : 		<< dwGold
; 1510 : 		<< dwSilver
; 1511 : 		<< dwCooper;

  00049	8b 44 24 48	 mov	 eax, DWORD PTR _dwCooper$[esp+28]
  0004d	8b 4c 24 44	 mov	 ecx, DWORD PTR _dwSilver$[esp+28]
  00051	8b 54 24 40	 mov	 edx, DWORD PTR _dwGold$[esp+28]
  00055	8b 6c 24 3c	 mov	 ebp, DWORD PTR _strMemberName$[esp+28]
  00059	50		 push	 eax
  0005a	8b 44 24 3c	 mov	 eax, DWORD PTR _dwMemberID$[esp+32]
  0005e	51		 push	 ecx
  0005f	8b 4c 24 38	 mov	 ecx, DWORD PTR _dwGuildID$[esp+36]
  00063	52		 push	 edx
  00064	8b 54 24 38	 mov	 edx, DWORD PTR _bResult$[esp+40]
  00068	55		 push	 ebp
  00069	50		 push	 eax
  0006a	8b 44 24 3c	 mov	 eax, DWORD PTR _dwKey$[esp+48]
  0006e	88 5c 24 30	 mov	 BYTE PTR __$EHRec$[esp+60], bl
  00072	8b 5c 24 48	 mov	 ebx, DWORD PTR _strGuildName$[esp+48]
  00076	53		 push	 ebx
  00077	51		 push	 ecx
  00078	8b 4c 24 40	 mov	 ecx, DWORD PTR _dwCharID$[esp+56]
  0007c	52		 push	 edx
  0007d	50		 push	 eax
  0007e	51		 push	 ecx
  0007f	68 37 21 00 00	 push	 8503			; 00002137H
  00084	8b ce		 mov	 ecx, esi
  00086	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0008b	8b c8		 mov	 ecx, eax
  0008d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00092	8b c8		 mov	 ecx, eax
  00094	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00099	8b c8		 mov	 ecx, eax
  0009b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a7	8b c8		 mov	 ecx, eax
  000a9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000ae	8b c8		 mov	 ecx, eax
  000b0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b5	8b c8		 mov	 ecx, eax
  000b7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000bc	8b c8		 mov	 ecx, eax
  000be	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000c3	8b c8		 mov	 ecx, eax
  000c5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ca	8b c8		 mov	 ecx, eax
  000cc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1512 : 
; 1513 : 	Say(pMsg);

  000d1	8b 17		 mov	 edx, DWORD PTR [edi]
  000d3	56		 push	 esi
  000d4	8b cf		 mov	 ecx, edi
  000d6	ff 12		 call	 DWORD PTR [edx]

; 1514 : }

  000d8	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000db	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000e0	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000e3	83 ca ff	 or	 edx, -1
  000e6	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ea	4a		 dec	 edx
  000eb	85 d2		 test	 edx, edx
  000ed	7f 08		 jg	 SHORT $L138811
  000ef	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000f3	50		 push	 eax
  000f4	ff 52 04	 call	 DWORD PTR [edx+4]
$L138811:
  000f7	8d 45 f0	 lea	 eax, DWORD PTR [ebp-16]
  000fa	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  00102	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00105	83 ca ff	 or	 edx, -1
  00108	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0010c	4a		 dec	 edx
  0010d	85 d2		 test	 edx, edx
  0010f	5f		 pop	 edi
  00110	5e		 pop	 esi
  00111	5d		 pop	 ebp
  00112	5b		 pop	 ebx
  00113	7f 08		 jg	 SHORT $L138838
  00115	8b 08		 mov	 ecx, DWORD PTR [eax]
  00117	8b 11		 mov	 edx, DWORD PTR [ecx]
  00119	50		 push	 eax
  0011a	ff 52 04	 call	 DWORD PTR [edx+4]
$L138838:
  0011d	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00121	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00128	83 c4 10	 add	 esp, 16			; 00000010H
  0012b	c2 28 00	 ret	 40			; 00000028H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138779:
  00000	8d 4d 1c	 lea	 ecx, DWORD PTR _strMemberName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138780:
  00008	8d 4d 14	 lea	 ecx, DWORD PTR _strGuildName$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138781:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T138776[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSANSWER_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0KKK@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138843
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSANSWER_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0KKK@Z ENDP ; CTServer::SendMW_GUILDTACTICSANSWER_REQ
PUBLIC	?SendMW_CHAT_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEK0@Z ; CTServer::SendMW_CHAT_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T138921 DD	0ffffffffH
	DD	FLAT:$L138855
	DD	00H
	DD	FLAT:$L138856
	DD	01H
	DD	FLAT:$L138857
$T138919 DD	019930520H
	DD	03H
	DD	FLAT:$T138921
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CHAT_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEK0@Z
_TEXT	SEGMENT
$T138852 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bChannel$ = 16						; size = 1
_dwSenderID$ = 20					; size = 4
_strSenderName$ = 24					; size = 4
_bCountry$ = 28						; size = 1
_bWarCountry$ = 32					; size = 1
_bType$ = 36						; size = 1
_bGroup$ = 40						; size = 1
_dwTargetID$ = 44					; size = 4
_strTalk$ = 48						; size = 4
?SendMW_CHAT_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEK0@Z PROC NEAR ; CTServer::SendMW_CHAT_REQ, COMDAT
; _this$ = ecx

; 1559 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHAT_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEK0@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	bb 01 00 00 00	 mov	 ebx, 1

; 1560 : 	CPacket * pMsg = new CPacket();

  00021	6a 1c		 push	 28			; 0000001cH
  00023	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00027	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 44 24 10	 mov	 DWORD PTR $T138852[esp+32], eax
  00033	85 c0		 test	 eax, eax
  00035	c6 44 24 1c 02	 mov	 BYTE PTR __$EHRec$[esp+40], 2
  0003a	74 0b		 je	 SHORT $L138853
  0003c	8b c8		 mov	 ecx, eax
  0003e	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00043	8b f0		 mov	 esi, eax
  00045	eb 02		 jmp	 SHORT $L138854
$L138853:
  00047	33 f6		 xor	 esi, esi
$L138854:

; 1561 : 
; 1562 : 	pMsg->SetID(MW_CHAT_REQ)
; 1563 : 		<< dwCharID
; 1564 : 		<< dwKEY
; 1565 : 		<< bChannel
; 1566 : 		<< dwSenderID
; 1567 : 		<< strSenderName
; 1568 : 		<< bCountry
; 1569 : 		<< bWarCountry
; 1570 : 		<< bType
; 1571 : 		<< bGroup
; 1572 : 		<< dwTargetID
; 1573 : 		<< strTalk;

  00049	8b 6c 24 4c	 mov	 ebp, DWORD PTR _strTalk$[esp+28]
  0004d	8b 44 24 48	 mov	 eax, DWORD PTR _dwTargetID$[esp+28]
  00051	8b 4c 24 44	 mov	 ecx, DWORD PTR _bGroup$[esp+28]
  00055	8b 54 24 40	 mov	 edx, DWORD PTR _bType$[esp+28]
  00059	55		 push	 ebp
  0005a	50		 push	 eax
  0005b	8b 44 24 44	 mov	 eax, DWORD PTR _bWarCountry$[esp+36]
  0005f	51		 push	 ecx
  00060	8b 4c 24 44	 mov	 ecx, DWORD PTR _bCountry$[esp+40]
  00064	52		 push	 edx
  00065	8b 54 24 40	 mov	 edx, DWORD PTR _dwSenderID$[esp+44]
  00069	50		 push	 eax
  0006a	8b 44 24 40	 mov	 eax, DWORD PTR _bChannel$[esp+48]
  0006e	51		 push	 ecx
  0006f	8b 4c 24 40	 mov	 ecx, DWORD PTR _dwKEY$[esp+52]
  00073	88 5c 24 34	 mov	 BYTE PTR __$EHRec$[esp+64], bl
  00077	8b 5c 24 4c	 mov	 ebx, DWORD PTR _strSenderName$[esp+52]
  0007b	53		 push	 ebx
  0007c	52		 push	 edx
  0007d	8b 54 24 44	 mov	 edx, DWORD PTR _dwCharID$[esp+60]
  00081	50		 push	 eax
  00082	51		 push	 ecx
  00083	52		 push	 edx
  00084	68 3d 20 00 00	 push	 8253			; 0000203dH
  00089	8b ce		 mov	 ecx, esi
  0008b	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009e	8b c8		 mov	 ecx, eax
  000a0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a5	8b c8		 mov	 ecx, eax
  000a7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ac	8b c8		 mov	 ecx, eax
  000ae	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000b3	8b c8		 mov	 ecx, eax
  000b5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ba	8b c8		 mov	 ecx, eax
  000bc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c1	8b c8		 mov	 ecx, eax
  000c3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c8	8b c8		 mov	 ecx, eax
  000ca	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000cf	8b c8		 mov	 ecx, eax
  000d1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000d6	8b c8		 mov	 ecx, eax
  000d8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 1574 : 	Say(pMsg);

  000dd	8b 07		 mov	 eax, DWORD PTR [edi]
  000df	56		 push	 esi
  000e0	8b cf		 mov	 ecx, edi
  000e2	ff 10		 call	 DWORD PTR [eax]

; 1575 : }

  000e4	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000e7	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000ec	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000ef	83 ca ff	 or	 edx, -1
  000f2	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000f6	4a		 dec	 edx
  000f7	85 d2		 test	 edx, edx
  000f9	7f 08		 jg	 SHORT $L138887
  000fb	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fd	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ff	50		 push	 eax
  00100	ff 52 04	 call	 DWORD PTR [edx+4]
$L138887:
  00103	8d 45 f0	 lea	 eax, DWORD PTR [ebp-16]
  00106	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  0010e	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00111	83 ca ff	 or	 edx, -1
  00114	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00118	4a		 dec	 edx
  00119	85 d2		 test	 edx, edx
  0011b	5f		 pop	 edi
  0011c	5e		 pop	 esi
  0011d	5d		 pop	 ebp
  0011e	5b		 pop	 ebx
  0011f	7f 08		 jg	 SHORT $L138914
  00121	8b 08		 mov	 ecx, DWORD PTR [eax]
  00123	8b 11		 mov	 edx, DWORD PTR [ecx]
  00125	50		 push	 eax
  00126	ff 52 04	 call	 DWORD PTR [edx+4]
$L138914:
  00129	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  0012d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00134	83 c4 10	 add	 esp, 16			; 00000010H
  00137	c2 2c 00	 ret	 44			; 0000002cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138855:
  00000	8d 4d 2c	 lea	 ecx, DWORD PTR _strTalk$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138856:
  00008	8d 4d 14	 lea	 ecx, DWORD PTR _strSenderName$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138857:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T138852[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_CHAT_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEK0@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138919
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHAT_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEK0@Z ENDP ; CTServer::SendMW_CHAT_REQ
PUBLIC	?SendMW_FRIENDADD_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEK@Z ; CTServer::SendMW_FRIENDADD_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T138966 DD	0ffffffffH
	DD	FLAT:$L138931
	DD	00H
	DD	FLAT:$L138932
$T138964 DD	019930520H
	DD	02H
	DD	FLAT:$T138966
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_FRIENDADD_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEK@Z
_TEXT	SEGMENT
$T138928 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bResult$ = 16						; size = 1
_dwFriendID$ = 20					; size = 4
_strName$ = 24						; size = 4
_bLevel$ = 28						; size = 1
_bGroup$ = 32						; size = 1
_bClass$ = 36						; size = 1
_dwRegion$ = 40						; size = 4
?SendMW_FRIENDADD_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEK@Z PROC NEAR ; CTServer::SendMW_FRIENDADD_REQ, COMDAT
; _this$ = ecx

; 1708 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FRIENDADD_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 1709 : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T138928[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L138929
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L138930
$L138929:
  00043	33 f6		 xor	 esi, esi
$L138930:

; 1710 : 	pMsg->SetID(MW_FRIENDADD_REQ)
; 1711 : 		<< dwCharID
; 1712 : 		<< dwKey
; 1713 : 		<< bResult
; 1714 : 		<< dwFriendID
; 1715 : 		<< strName
; 1716 : 		<< bLevel
; 1717 : 		<< bGroup
; 1718 : 		<< bClass
; 1719 : 		<< dwRegion;

  00045	8b 44 24 40	 mov	 eax, DWORD PTR _dwRegion$[esp+24]
  00049	8b 4c 24 3c	 mov	 ecx, DWORD PTR _bClass$[esp+24]
  0004d	8b 54 24 38	 mov	 edx, DWORD PTR _bGroup$[esp+24]
  00051	50		 push	 eax
  00052	8b 44 24 38	 mov	 eax, DWORD PTR _bLevel$[esp+28]
  00056	51		 push	 ecx
  00057	8b 4c 24 34	 mov	 ecx, DWORD PTR _dwFriendID$[esp+32]
  0005b	52		 push	 edx
  0005c	8b 54 24 34	 mov	 edx, DWORD PTR _bResult$[esp+36]
  00060	50		 push	 eax
  00061	8b 44 24 34	 mov	 eax, DWORD PTR _dwKey$[esp+40]
  00065	88 5c 24 28	 mov	 BYTE PTR __$EHRec$[esp+52], bl
  00069	8b 5c 24 40	 mov	 ebx, DWORD PTR _strName$[esp+40]
  0006d	53		 push	 ebx
  0006e	51		 push	 ecx
  0006f	8b 4c 24 38	 mov	 ecx, DWORD PTR _dwCharID$[esp+48]
  00073	52		 push	 edx
  00074	50		 push	 eax
  00075	51		 push	 ecx
  00076	68 52 20 00 00	 push	 8274			; 00002052H
  0007b	8b ce		 mov	 ecx, esi
  0007d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009e	8b c8		 mov	 ecx, eax
  000a0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000a5	8b c8		 mov	 ecx, eax
  000a7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ac	8b c8		 mov	 ecx, eax
  000ae	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000b3	8b c8		 mov	 ecx, eax
  000b5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ba	8b c8		 mov	 ecx, eax
  000bc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1720 : 
; 1721 : 	Say(pMsg);

  000c1	8b 17		 mov	 edx, DWORD PTR [edi]
  000c3	56		 push	 esi
  000c4	8b cf		 mov	 ecx, edi
  000c6	ff 12		 call	 DWORD PTR [edx]

; 1722 : }

  000c8	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000cb	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000d3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000d6	83 ca ff	 or	 edx, -1
  000d9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000dd	4a		 dec	 edx
  000de	85 d2		 test	 edx, edx
  000e0	5f		 pop	 edi
  000e1	5e		 pop	 esi
  000e2	5b		 pop	 ebx
  000e3	7f 08		 jg	 SHORT $L138959
  000e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e9	50		 push	 eax
  000ea	ff 52 04	 call	 DWORD PTR [edx+4]
$L138959:
  000ed	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000f1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000f8	83 c4 10	 add	 esp, 16			; 00000010H
  000fb	c2 24 00	 ret	 36			; 00000024H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138931:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138932:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T138928[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_FRIENDADD_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEK@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138964
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FRIENDADD_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEK@Z ENDP ; CTServer::SendMW_FRIENDADD_REQ
PUBLIC	?SendMW_FRIENDASK_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z ; CTServer::SendMW_FRIENDASK_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139011 DD	0ffffffffH
	DD	FLAT:$L138976
	DD	00H
	DD	FLAT:$L138977
$T139009 DD	019930520H
	DD	02H
	DD	FLAT:$T139011
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_FRIENDASK_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z
_TEXT	SEGMENT
$T138973 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_strInviter$ = 16					; size = 4
_dwInviter$ = 20					; size = 4
?SendMW_FRIENDASK_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z PROC NEAR ; CTServer::SendMW_FRIENDASK_REQ, COMDAT
; _this$ = ecx

; 1727 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FRIENDASK_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 1728 : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T138973[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L138974
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L138975
$L138974:
  00043	33 f6		 xor	 esi, esi
$L138975:

; 1729 : 	pMsg->SetID(MW_FRIENDASK_REQ)
; 1730 : 		<< dwCharID
; 1731 : 		<< dwKey
; 1732 : 		<< strInviter
; 1733 : 		<< dwInviter;

  00045	8b 44 24 2c	 mov	 eax, DWORD PTR _dwInviter$[esp+24]
  00049	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKey$[esp+24]
  0004d	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  00051	50		 push	 eax
  00052	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl
  00056	8b 5c 24 2c	 mov	 ebx, DWORD PTR _strInviter$[esp+28]
  0005a	53		 push	 ebx
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	68 50 20 00 00	 push	 8272			; 00002050H
  00062	8b ce		 mov	 ecx, esi
  00064	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00069	8b c8		 mov	 ecx, eax
  0006b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00070	8b c8		 mov	 ecx, eax
  00072	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1734 : 
; 1735 : 	Say(pMsg);

  00085	8b 07		 mov	 eax, DWORD PTR [edi]
  00087	56		 push	 esi
  00088	8b cf		 mov	 ecx, edi
  0008a	ff 10		 call	 DWORD PTR [eax]

; 1736 : }

  0008c	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0008f	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00097	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0009a	83 ca ff	 or	 edx, -1
  0009d	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000a1	4a		 dec	 edx
  000a2	85 d2		 test	 edx, edx
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	7f 08		 jg	 SHORT $L139005
  000a9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ab	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ad	50		 push	 eax
  000ae	ff 52 04	 call	 DWORD PTR [edx+4]
$L139005:
  000b1	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000b5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000bc	83 c4 10	 add	 esp, 16			; 00000010H
  000bf	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138976:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strInviter$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L138977:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T138973[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_FRIENDASK_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139009
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FRIENDASK_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z ENDP ; CTServer::SendMW_FRIENDASK_REQ
PUBLIC	?SendMW_CORPSREPLY_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTServer::SendMW_CORPSREPLY_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139056 DD	0ffffffffH
	DD	FLAT:$L139021
	DD	00H
	DD	FLAT:$L139022
$T139054 DD	019930520H
	DD	02H
	DD	FLAT:$T139056
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CORPSREPLY_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T139018 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bResult$ = 16						; size = 1
_strName$ = 20						; size = 4
?SendMW_CORPSREPLY_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTServer::SendMW_CORPSREPLY_REQ, COMDAT
; _this$ = ecx

; 1865 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CORPSREPLY_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 1866 : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T139018[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L139019
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L139020
$L139019:
  00043	33 f6		 xor	 esi, esi
$L139020:

; 1867 : 	pMsg->SetID(MW_CORPSREPLY_REQ)
; 1868 : 		<< dwCharID
; 1869 : 		<< dwKey
; 1870 : 		<< bResult
; 1871 : 		<< strName;

  00045	8b 44 24 28	 mov	 eax, DWORD PTR _bResult$[esp+24]
  00049	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKey$[esp+24]
  0004d	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  00051	88 5c 24 18	 mov	 BYTE PTR __$EHRec$[esp+36], bl
  00055	8b 5c 24 2c	 mov	 ebx, DWORD PTR _strName$[esp+24]
  00059	53		 push	 ebx
  0005a	50		 push	 eax
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	68 6d 20 00 00	 push	 8301			; 0000206dH
  00062	8b ce		 mov	 ecx, esi
  00064	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00069	8b c8		 mov	 ecx, eax
  0006b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00070	8b c8		 mov	 ecx, eax
  00072	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 1872 : 
; 1873 : 	Say(pMsg);

  00085	8b 07		 mov	 eax, DWORD PTR [edi]
  00087	56		 push	 esi
  00088	8b cf		 mov	 ecx, edi
  0008a	ff 10		 call	 DWORD PTR [eax]

; 1874 : }

  0008c	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0008f	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00097	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0009a	83 ca ff	 or	 edx, -1
  0009d	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000a1	4a		 dec	 edx
  000a2	85 d2		 test	 edx, edx
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	7f 08		 jg	 SHORT $L139050
  000a9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ab	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ad	50		 push	 eax
  000ae	ff 52 04	 call	 DWORD PTR [edx+4]
$L139050:
  000b1	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000b5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000bc	83 c4 10	 add	 esp, 16			; 00000010H
  000bf	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139021:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139022:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T139018[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_CORPSREPLY_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139054
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CORPSREPLY_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTServer::SendMW_CORPSREPLY_REQ
PUBLIC	?SendMW_CORPSASK_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTServer::SendMW_CORPSASK_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139101 DD	0ffffffffH
	DD	FLAT:$L139066
	DD	00H
	DD	FLAT:$L139067
$T139099 DD	019930520H
	DD	02H
	DD	FLAT:$T139101
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CORPSASK_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T139063 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwInviter$ = 16					; size = 4
_strName$ = 20						; size = 4
?SendMW_CORPSASK_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTServer::SendMW_CORPSASK_REQ, COMDAT
; _this$ = ecx

; 1932 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CORPSASK_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 1933 : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T139063[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L139064
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L139065
$L139064:
  00043	33 f6		 xor	 esi, esi
$L139065:

; 1934 : 	pMsg->SetID(MW_CORPSASK_REQ)
; 1935 : 		<< dwCharID
; 1936 : 		<< dwKey
; 1937 : 		<< dwInviter
; 1938 : 		<< strName;

  00045	8b 44 24 28	 mov	 eax, DWORD PTR _dwInviter$[esp+24]
  00049	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKey$[esp+24]
  0004d	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  00051	88 5c 24 18	 mov	 BYTE PTR __$EHRec$[esp+36], bl
  00055	8b 5c 24 2c	 mov	 ebx, DWORD PTR _strName$[esp+24]
  00059	53		 push	 ebx
  0005a	50		 push	 eax
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	68 6b 20 00 00	 push	 8299			; 0000206bH
  00062	8b ce		 mov	 ecx, esi
  00064	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00069	8b c8		 mov	 ecx, eax
  0006b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00070	8b c8		 mov	 ecx, eax
  00072	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 1939 : 
; 1940 : 	Say(pMsg);

  00085	8b 07		 mov	 eax, DWORD PTR [edi]
  00087	56		 push	 esi
  00088	8b cf		 mov	 ecx, edi
  0008a	ff 10		 call	 DWORD PTR [eax]

; 1941 : }

  0008c	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0008f	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00097	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0009a	83 ca ff	 or	 edx, -1
  0009d	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000a1	4a		 dec	 edx
  000a2	85 d2		 test	 edx, edx
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	7f 08		 jg	 SHORT $L139094
  000a9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ab	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ad	50		 push	 eax
  000ae	ff 52 04	 call	 DWORD PTR [edx+4]
$L139094:
  000b1	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000b5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000bc	83 c4 10	 add	 esp, 16			; 00000010H
  000bf	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139066:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139067:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T139063[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_CORPSASK_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139099
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CORPSASK_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTServer::SendMW_CORPSASK_REQ
PUBLIC	?SendMW_ADDCORPSUNIT_REQ@CTServer@@QAEXKKGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@MKKKGGGGGGEEEEEEEE@Z ; CTServer::SendMW_ADDCORPSUNIT_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139146 DD	0ffffffffH
	DD	FLAT:$L139111
	DD	00H
	DD	FLAT:$L139112
$T139144 DD	019930520H
	DD	02H
	DD	FLAT:$T139146
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_ADDCORPSUNIT_REQ@CTServer@@QAEXKKGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@MKKKGGGGGGEEEEEEEE@Z
_TEXT	SEGMENT
$T139108 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wSquadID$ = 16						; size = 2
_dwAddID$ = 20						; size = 4
_strNAME$ = 24						; size = 4
_fSPEED$ = 28						; size = 4
_dwTargetID$ = 32					; size = 4
_dwMaxHP$ = 36						; size = 4
_dwHP$ = 40						; size = 4
_wTargetX$ = 44						; size = 2
_wTargetZ$ = 48						; size = 2
_wMapID$ = 52						; size = 2
_wPosX$ = 56						; size = 2
_wPosZ$ = 60						; size = 2
_wDIR$ = 64						; size = 2
_bTargetType$ = 68					; size = 1
_bLevel$ = 72						; size = 1
_bClass$ = 76						; size = 1
_bRaceID$ = 80						; size = 1
_bSexID$ = 84						; size = 1
_bFaceID$ = 88						; size = 1
_bHairID$ = 92						; size = 1
_bTCMD$ = 96						; size = 1
?SendMW_ADDCORPSUNIT_REQ@CTServer@@QAEXKKGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@MKKKGGGGGGEEEEEEEE@Z PROC NEAR ; CTServer::SendMW_ADDCORPSUNIT_REQ, COMDAT
; _this$ = ecx

; 1980 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_ADDCORPSUNIT_REQ@CTServer@@QAEXKKGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@MKKKGGGGGGEEEEEEEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 1981 : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T139108[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L139109
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L139110
$L139109:
  00043	33 f6		 xor	 esi, esi
$L139110:

; 1982 : 	pMsg->SetID(MW_ADDCORPSUNIT_REQ)
; 1983 : 		<< dwCharID
; 1984 : 		<< dwKey
; 1985 : 		<< wSquadID
; 1986 : 		<< dwAddID
; 1987 : 		<< strNAME
; 1988 : 		<< fSPEED
; 1989 : 		<< dwTargetID
; 1990 : 		<< dwMaxHP
; 1991 : 		<< dwHP
; 1992 : 		<< wTargetX
; 1993 : 		<< wTargetZ
; 1994 : 		<< wMapID
; 1995 : 		<< wPosX
; 1996 : 		<< wPosZ
; 1997 : 		<< wDIR
; 1998 : 		<< bTargetType
; 1999 : 		<< bLevel
; 2000 : 		<< bClass
; 2001 : 		<< bRaceID
; 2002 : 		<< bSexID
; 2003 : 		<< bFaceID
; 2004 : 		<< bHairID
; 2005 : 		<< bTCMD;

  00045	8b 44 24 78	 mov	 eax, DWORD PTR _bTCMD$[esp+24]
  00049	8b 4c 24 74	 mov	 ecx, DWORD PTR _bHairID$[esp+24]
  0004d	8b 54 24 70	 mov	 edx, DWORD PTR _bFaceID$[esp+24]
  00051	50		 push	 eax
  00052	8b 44 24 70	 mov	 eax, DWORD PTR _bSexID$[esp+28]
  00056	51		 push	 ecx
  00057	8b 4c 24 70	 mov	 ecx, DWORD PTR _bRaceID$[esp+32]
  0005b	52		 push	 edx
  0005c	8b 54 24 70	 mov	 edx, DWORD PTR _bClass$[esp+36]
  00060	50		 push	 eax
  00061	8b 44 24 70	 mov	 eax, DWORD PTR _bLevel$[esp+40]
  00065	51		 push	 ecx
  00066	8b 4c 24 70	 mov	 ecx, DWORD PTR _bTargetType$[esp+44]
  0006a	52		 push	 edx
  0006b	8b 54 24 70	 mov	 edx, DWORD PTR _wDIR$[esp+48]
  0006f	50		 push	 eax
  00070	8b 44 24 70	 mov	 eax, DWORD PTR _wPosZ$[esp+52]
  00074	51		 push	 ecx
  00075	8b 4c 24 70	 mov	 ecx, DWORD PTR _wPosX$[esp+56]
  00079	52		 push	 edx
  0007a	8b 54 24 70	 mov	 edx, DWORD PTR _wMapID$[esp+60]
  0007e	50		 push	 eax
  0007f	8b 44 24 70	 mov	 eax, DWORD PTR _wTargetZ$[esp+64]
  00083	51		 push	 ecx
  00084	8b 4c 24 70	 mov	 ecx, DWORD PTR _wTargetX$[esp+68]
  00088	52		 push	 edx
  00089	8b 54 24 70	 mov	 edx, DWORD PTR _dwHP$[esp+72]
  0008d	50		 push	 eax
  0008e	8b 44 24 70	 mov	 eax, DWORD PTR _dwMaxHP$[esp+76]
  00092	51		 push	 ecx
  00093	8b 4c 24 70	 mov	 ecx, DWORD PTR _dwTargetID$[esp+80]
  00097	52		 push	 edx
  00098	8b 54 24 70	 mov	 edx, DWORD PTR _fSPEED$[esp+84]
  0009c	50		 push	 eax
  0009d	8b 44 24 6c	 mov	 eax, DWORD PTR _dwAddID$[esp+88]
  000a1	51		 push	 ecx
  000a2	8b 4c 24 6c	 mov	 ecx, DWORD PTR _wSquadID$[esp+92]
  000a6	52		 push	 edx
  000a7	8b 54 24 6c	 mov	 edx, DWORD PTR _dwKey$[esp+96]
  000ab	88 5c 24 60	 mov	 BYTE PTR __$EHRec$[esp+108], bl
  000af	8b 5c 24 78	 mov	 ebx, DWORD PTR _strNAME$[esp+96]
  000b3	53		 push	 ebx
  000b4	50		 push	 eax
  000b5	8b 44 24 70	 mov	 eax, DWORD PTR _dwCharID$[esp+104]
  000b9	51		 push	 ecx
  000ba	52		 push	 edx
  000bb	50		 push	 eax
  000bc	68 74 20 00 00	 push	 8308			; 00002074H
  000c1	8b ce		 mov	 ecx, esi
  000c3	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  000c8	8b c8		 mov	 ecx, eax
  000ca	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000cf	8b c8		 mov	 ecx, eax
  000d1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000d6	8b c8		 mov	 ecx, eax
  000d8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000dd	8b c8		 mov	 ecx, eax
  000df	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000e4	8b c8		 mov	 ecx, eax
  000e6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000eb	8b c8		 mov	 ecx, eax
  000ed	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000f2	8b c8		 mov	 ecx, eax
  000f4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000f9	8b c8		 mov	 ecx, eax
  000fb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00100	8b c8		 mov	 ecx, eax
  00102	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00107	8b c8		 mov	 ecx, eax
  00109	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0010e	8b c8		 mov	 ecx, eax
  00110	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00115	8b c8		 mov	 ecx, eax
  00117	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0011c	8b c8		 mov	 ecx, eax
  0011e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00123	8b c8		 mov	 ecx, eax
  00125	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0012a	8b c8		 mov	 ecx, eax
  0012c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00131	8b c8		 mov	 ecx, eax
  00133	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00138	8b c8		 mov	 ecx, eax
  0013a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0013f	8b c8		 mov	 ecx, eax
  00141	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00146	8b c8		 mov	 ecx, eax
  00148	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0014d	8b c8		 mov	 ecx, eax
  0014f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00154	8b c8		 mov	 ecx, eax
  00156	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0015b	8b c8		 mov	 ecx, eax
  0015d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00162	8b c8		 mov	 ecx, eax
  00164	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2006 : 
; 2007 : 	Say(pMsg);

  00169	8b 17		 mov	 edx, DWORD PTR [edi]
  0016b	56		 push	 esi
  0016c	8b cf		 mov	 ecx, edi
  0016e	ff 12		 call	 DWORD PTR [edx]

; 2008 : }

  00170	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  00173	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0017b	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0017e	83 ca ff	 or	 edx, -1
  00181	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00185	4a		 dec	 edx
  00186	85 d2		 test	 edx, edx
  00188	5f		 pop	 edi
  00189	5e		 pop	 esi
  0018a	5b		 pop	 ebx
  0018b	7f 08		 jg	 SHORT $L139139
  0018d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0018f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00191	50		 push	 eax
  00192	ff 52 04	 call	 DWORD PTR [edx+4]
$L139139:
  00195	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00199	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001a0	83 c4 10	 add	 esp, 16			; 00000010H
  001a3	c2 5c 00	 ret	 92			; 0000005cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139111:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strNAME$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139112:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T139108[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_ADDCORPSUNIT_REQ@CTServer@@QAEXKKGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@MKKKGGGGGGEEEEEEEE@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139144
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_ADDCORPSUNIT_REQ@CTServer@@QAEXKKGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@MKKKGGGGGGEEEEEEEE@Z ENDP ; CTServer::SendMW_ADDCORPSUNIT_REQ
PUBLIC	?SendMW_TMSRECV_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ; CTServer::SendMW_TMSRECV_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139222 DD	0ffffffffH
	DD	FLAT:$L139156
	DD	00H
	DD	FLAT:$L139157
	DD	01H
	DD	FLAT:$L139158
$T139220 DD	019930520H
	DD	03H
	DD	FLAT:$T139222
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_TMSRECV_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT
$T139153 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwTMS$ = 16						; size = 4
_strSender$ = 20					; size = 4
_strMessage$ = 24					; size = 4
?SendMW_TMSRECV_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z PROC NEAR ; CTServer::SendMW_TMSRECV_REQ, COMDAT
; _this$ = ecx

; 2085 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TMSRECV_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	bb 01 00 00 00	 mov	 ebx, 1

; 2086 : 	CPacket * pMsg = new CPacket();

  00021	6a 1c		 push	 28			; 0000001cH
  00023	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00027	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 44 24 10	 mov	 DWORD PTR $T139153[esp+32], eax
  00033	85 c0		 test	 eax, eax
  00035	c6 44 24 1c 02	 mov	 BYTE PTR __$EHRec$[esp+40], 2
  0003a	74 0b		 je	 SHORT $L139154
  0003c	8b c8		 mov	 ecx, eax
  0003e	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00043	8b f0		 mov	 esi, eax
  00045	eb 02		 jmp	 SHORT $L139155
$L139154:
  00047	33 f6		 xor	 esi, esi
$L139155:

; 2087 : 	pMsg->SetID(MW_TMSRECV_REQ)
; 2088 : 		<< dwCharID
; 2089 : 		<< dwKey
; 2090 : 		<< dwTMS
; 2091 : 		<< strSender
; 2092 : 		<< strMessage;

  00049	8b 6c 24 34	 mov	 ebp, DWORD PTR _strMessage$[esp+28]
  0004d	8b 44 24 2c	 mov	 eax, DWORD PTR _dwTMS$[esp+28]
  00051	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwKey$[esp+28]
  00055	8b 54 24 24	 mov	 edx, DWORD PTR _dwCharID$[esp+28]
  00059	55		 push	 ebp
  0005a	88 5c 24 20	 mov	 BYTE PTR __$EHRec$[esp+44], bl
  0005e	8b 5c 24 34	 mov	 ebx, DWORD PTR _strSender$[esp+32]
  00062	53		 push	 ebx
  00063	50		 push	 eax
  00064	51		 push	 ecx
  00065	52		 push	 edx
  00066	68 77 20 00 00	 push	 8311			; 00002077H
  0006b	8b ce		 mov	 ecx, esi
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2093 : 
; 2094 : 	Say(pMsg);

  00095	8b 07		 mov	 eax, DWORD PTR [edi]
  00097	56		 push	 esi
  00098	8b cf		 mov	 ecx, edi
  0009a	ff 10		 call	 DWORD PTR [eax]

; 2095 : }

  0009c	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0009f	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000a4	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a7	83 ca ff	 or	 edx, -1
  000aa	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ae	4a		 dec	 edx
  000af	85 d2		 test	 edx, edx
  000b1	7f 08		 jg	 SHORT $L139188
  000b3	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b5	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b7	50		 push	 eax
  000b8	ff 52 04	 call	 DWORD PTR [edx+4]
$L139188:
  000bb	8d 45 f0	 lea	 eax, DWORD PTR [ebp-16]
  000be	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  000c6	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000c9	83 ca ff	 or	 edx, -1
  000cc	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d0	4a		 dec	 edx
  000d1	85 d2		 test	 edx, edx
  000d3	5f		 pop	 edi
  000d4	5e		 pop	 esi
  000d5	5d		 pop	 ebp
  000d6	5b		 pop	 ebx
  000d7	7f 08		 jg	 SHORT $L139217
  000d9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000db	8b 11		 mov	 edx, DWORD PTR [ecx]
  000dd	50		 push	 eax
  000de	ff 52 04	 call	 DWORD PTR [edx+4]
$L139217:
  000e1	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000e5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ec	83 c4 10	 add	 esp, 16			; 00000010H
  000ef	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139156:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strMessage$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139157:
  00008	8d 4d 10	 lea	 ecx, DWORD PTR _strSender$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139158:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T139153[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_TMSRECV_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139220
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TMSRECV_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ENDP ; CTServer::SendMW_TMSRECV_REQ
PUBLIC	?SendMW_TMSINVITEASK_REQ@CTServer@@QAEXKKKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTServer::SendMW_TMSINVITEASK_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139267 DD	0ffffffffH
	DD	FLAT:$L139232
	DD	00H
	DD	FLAT:$L139233
$T139265 DD	019930520H
	DD	02H
	DD	FLAT:$T139267
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_TMSINVITEASK_REQ@CTServer@@QAEXKKKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T139229 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwTargetID$ = 16					; size = 4
_dwTargetKEY$ = 20					; size = 4
_dwTMS$ = 24						; size = 4
_strMessage$ = 28					; size = 4
?SendMW_TMSINVITEASK_REQ@CTServer@@QAEXKKKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTServer::SendMW_TMSINVITEASK_REQ, COMDAT
; _this$ = ecx

; 2103 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TMSINVITEASK_REQ@CTServer@@QAEXKKKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 2104 : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T139229[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L139230
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L139231
$L139230:
  00043	33 f6		 xor	 esi, esi
$L139231:

; 2105 : 	pMsg->SetID(MW_TMSINVITEASK_REQ)
; 2106 : 		<< dwCharID
; 2107 : 		<< dwKEY
; 2108 : 		<< dwTargetID
; 2109 : 		<< dwTargetKEY
; 2110 : 		<< dwTMS
; 2111 : 		<< strMessage;

  00045	8b 44 24 30	 mov	 eax, DWORD PTR _dwTMS$[esp+24]
  00049	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwTargetKEY$[esp+24]
  0004d	8b 54 24 28	 mov	 edx, DWORD PTR _dwTargetID$[esp+24]
  00051	88 5c 24 18	 mov	 BYTE PTR __$EHRec$[esp+36], bl
  00055	8b 5c 24 34	 mov	 ebx, DWORD PTR _strMessage$[esp+24]
  00059	53		 push	 ebx
  0005a	50		 push	 eax
  0005b	8b 44 24 2c	 mov	 eax, DWORD PTR _dwKEY$[esp+32]
  0005f	51		 push	 ecx
  00060	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwCharID$[esp+36]
  00064	52		 push	 edx
  00065	50		 push	 eax
  00066	51		 push	 ecx
  00067	68 cc 20 00 00	 push	 8396			; 000020ccH
  0006c	8b ce		 mov	 ecx, esi
  0006e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2112 : 
; 2113 : 	Say(pMsg);

  0009d	8b 17		 mov	 edx, DWORD PTR [edi]
  0009f	56		 push	 esi
  000a0	8b cf		 mov	 ecx, edi
  000a2	ff 12		 call	 DWORD PTR [edx]

; 2114 : }

  000a4	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000a7	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000af	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000b2	83 ca ff	 or	 edx, -1
  000b5	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000b9	4a		 dec	 edx
  000ba	85 d2		 test	 edx, edx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	7f 08		 jg	 SHORT $L139262
  000c1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c5	50		 push	 eax
  000c6	ff 52 04	 call	 DWORD PTR [edx+4]
$L139262:
  000c9	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000cd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d4	83 c4 10	 add	 esp, 16			; 00000010H
  000d7	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139232:
  00000	8d 4d 18	 lea	 ecx, DWORD PTR _strMessage$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139233:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T139229[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_TMSINVITEASK_REQ@CTServer@@QAEXKKKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139265
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TMSINVITEASK_REQ@CTServer@@QAEXKKKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTServer::SendMW_TMSINVITEASK_REQ
PUBLIC	?SendMW_TMSOUT_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTServer::SendMW_TMSOUT_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139312 DD	0ffffffffH
	DD	FLAT:$L139277
	DD	00H
	DD	FLAT:$L139278
$T139310 DD	019930520H
	DD	02H
	DD	FLAT:$T139312
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_TMSOUT_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T139274 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwTMS$ = 16						; size = 4
_strTarget$ = 20					; size = 4
?SendMW_TMSOUT_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTServer::SendMW_TMSOUT_REQ, COMDAT
; _this$ = ecx

; 2146 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TMSOUT_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 2147 : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T139274[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L139275
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L139276
$L139275:
  00043	33 f6		 xor	 esi, esi
$L139276:

; 2148 : 	pMsg->SetID(MW_TMSOUT_REQ)
; 2149 : 		<< dwCharID
; 2150 : 		<< dwKey
; 2151 : 		<< dwTMS
; 2152 : 		<< strTarget;

  00045	8b 44 24 28	 mov	 eax, DWORD PTR _dwTMS$[esp+24]
  00049	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKey$[esp+24]
  0004d	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  00051	88 5c 24 18	 mov	 BYTE PTR __$EHRec$[esp+36], bl
  00055	8b 5c 24 2c	 mov	 ebx, DWORD PTR _strTarget$[esp+24]
  00059	53		 push	 ebx
  0005a	50		 push	 eax
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	68 7a 20 00 00	 push	 8314			; 0000207aH
  00062	8b ce		 mov	 ecx, esi
  00064	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00069	8b c8		 mov	 ecx, eax
  0006b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00070	8b c8		 mov	 ecx, eax
  00072	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2153 : 
; 2154 : 	Say(pMsg);

  00085	8b 07		 mov	 eax, DWORD PTR [edi]
  00087	56		 push	 esi
  00088	8b cf		 mov	 ecx, edi
  0008a	ff 10		 call	 DWORD PTR [eax]

; 2155 : }

  0008c	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0008f	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00097	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0009a	83 ca ff	 or	 edx, -1
  0009d	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000a1	4a		 dec	 edx
  000a2	85 d2		 test	 edx, edx
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	7f 08		 jg	 SHORT $L139305
  000a9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ab	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ad	50		 push	 eax
  000ae	ff 52 04	 call	 DWORD PTR [edx+4]
$L139305:
  000b1	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000b5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000bc	83 c4 10	 add	 esp, 16			; 00000010H
  000bf	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139277:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139278:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T139274[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_TMSOUT_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139310
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TMSOUT_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTServer::SendMW_TMSOUT_REQ
PUBLIC	?SendMW_LOCALOCCUPY_REQ@CTServer@@QAEXEGEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTServer::SendMW_LOCALOCCUPY_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139357 DD	0ffffffffH
	DD	FLAT:$L139322
	DD	00H
	DD	FLAT:$L139323
$T139355 DD	019930520H
	DD	02H
	DD	FLAT:$T139357
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_LOCALOCCUPY_REQ@CTServer@@QAEXEGEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T139319 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bType$ = 8						; size = 1
_wLocalID$ = 12						; size = 2
_bCountry$ = 16						; size = 1
_dwGuildID$ = 20					; size = 4
_strName$ = 24						; size = 4
?SendMW_LOCALOCCUPY_REQ@CTServer@@QAEXEGEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTServer::SendMW_LOCALOCCUPY_REQ, COMDAT
; _this$ = ecx

; 2170 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_LOCALOCCUPY_REQ@CTServer@@QAEXEGEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 2171 : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T139319[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L139320
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L139321
$L139320:
  00043	33 f6		 xor	 esi, esi
$L139321:

; 2172 : 	pMsg->SetID(MW_LOCALOCCUPY_REQ)
; 2173 : 		<< bType
; 2174 : 		<< wLocalID
; 2175 : 		<< bCountry
; 2176 : 		<< dwGuildID
; 2177 : 		<< strName;

  00045	8b 44 24 2c	 mov	 eax, DWORD PTR _dwGuildID$[esp+24]
  00049	8b 4c 24 28	 mov	 ecx, DWORD PTR _bCountry$[esp+24]
  0004d	8b 54 24 24	 mov	 edx, DWORD PTR _wLocalID$[esp+24]
  00051	88 5c 24 18	 mov	 BYTE PTR __$EHRec$[esp+36], bl
  00055	8b 5c 24 30	 mov	 ebx, DWORD PTR _strName$[esp+24]
  00059	53		 push	 ebx
  0005a	50		 push	 eax
  0005b	8b 44 24 28	 mov	 eax, DWORD PTR _bType$[esp+32]
  0005f	51		 push	 ecx
  00060	52		 push	 edx
  00061	50		 push	 eax
  00062	68 69 20 00 00	 push	 8297			; 00002069H
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00075	8b c8		 mov	 ecx, eax
  00077	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0007c	8b c8		 mov	 ecx, eax
  0007e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2178 : 
; 2179 : 	Say(pMsg);

  00091	8b 17		 mov	 edx, DWORD PTR [edi]
  00093	56		 push	 esi
  00094	8b cf		 mov	 ecx, edi
  00096	ff 12		 call	 DWORD PTR [edx]

; 2180 : }

  00098	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0009b	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a6	83 ca ff	 or	 edx, -1
  000a9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ad	4a		 dec	 edx
  000ae	85 d2		 test	 edx, edx
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5b		 pop	 ebx
  000b3	7f 08		 jg	 SHORT $L139350
  000b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b9	50		 push	 eax
  000ba	ff 52 04	 call	 DWORD PTR [edx+4]
$L139350:
  000bd	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c8	83 c4 10	 add	 esp, 16			; 00000010H
  000cb	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139322:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139323:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T139319[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_LOCALOCCUPY_REQ@CTServer@@QAEXEGEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139355
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_LOCALOCCUPY_REQ@CTServer@@QAEXEGEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTServer::SendMW_LOCALOCCUPY_REQ
PUBLIC	?SendMW_CASTLEOCCUPY_REQ@CTServer@@QAEXEGKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTServer::SendMW_CASTLEOCCUPY_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139402 DD	0ffffffffH
	DD	FLAT:$L139367
	DD	00H
	DD	FLAT:$L139368
$T139400 DD	019930520H
	DD	02H
	DD	FLAT:$T139402
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CASTLEOCCUPY_REQ@CTServer@@QAEXEGKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T139364 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bType$ = 8						; size = 1
_wCastle$ = 12						; size = 2
_dwGuildID$ = 16					; size = 4
_bCountry$ = 20						; size = 1
_strGuildName$ = 24					; size = 4
?SendMW_CASTLEOCCUPY_REQ@CTServer@@QAEXEGKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTServer::SendMW_CASTLEOCCUPY_REQ, COMDAT
; _this$ = ecx

; 2186 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CASTLEOCCUPY_REQ@CTServer@@QAEXEGKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 2187 : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T139364[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L139365
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L139366
$L139365:
  00043	33 f6		 xor	 esi, esi
$L139366:

; 2188 : 	pMsg->SetID(MW_CASTLEOCCUPY_REQ)
; 2189 : 		<< bType
; 2190 : 		<< wCastle
; 2191 : 		<< dwGuildID
; 2192 : 		<< bCountry
; 2193 : 		<< strGuildName;

  00045	8b 44 24 2c	 mov	 eax, DWORD PTR _bCountry$[esp+24]
  00049	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwGuildID$[esp+24]
  0004d	8b 54 24 24	 mov	 edx, DWORD PTR _wCastle$[esp+24]
  00051	88 5c 24 18	 mov	 BYTE PTR __$EHRec$[esp+36], bl
  00055	8b 5c 24 30	 mov	 ebx, DWORD PTR _strGuildName$[esp+24]
  00059	53		 push	 ebx
  0005a	50		 push	 eax
  0005b	8b 44 24 28	 mov	 eax, DWORD PTR _bType$[esp+32]
  0005f	51		 push	 ecx
  00060	52		 push	 edx
  00061	50		 push	 eax
  00062	68 85 20 00 00	 push	 8325			; 00002085H
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00075	8b c8		 mov	 ecx, eax
  00077	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0007c	8b c8		 mov	 ecx, eax
  0007e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2194 : 
; 2195 : 	Say(pMsg);

  00091	8b 17		 mov	 edx, DWORD PTR [edi]
  00093	56		 push	 esi
  00094	8b cf		 mov	 ecx, edi
  00096	ff 12		 call	 DWORD PTR [edx]

; 2196 : }

  00098	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0009b	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a6	83 ca ff	 or	 edx, -1
  000a9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ad	4a		 dec	 edx
  000ae	85 d2		 test	 edx, edx
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5b		 pop	 ebx
  000b3	7f 08		 jg	 SHORT $L139395
  000b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b9	50		 push	 eax
  000ba	ff 52 04	 call	 DWORD PTR [edx+4]
$L139395:
  000bd	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c8	83 c4 10	 add	 esp, 16			; 00000010H
  000cb	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139367:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strGuildName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139368:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T139364[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_CASTLEOCCUPY_REQ@CTServer@@QAEXEGKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139400
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CASTLEOCCUPY_REQ@CTServer@@QAEXEGKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTServer::SendMW_CASTLEOCCUPY_REQ
PUBLIC	?SendMW_FRIENDGROUPMAKE_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTServer::SendMW_FRIENDGROUPMAKE_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139447 DD	0ffffffffH
	DD	FLAT:$L139412
	DD	00H
	DD	FLAT:$L139413
$T139445 DD	019930520H
	DD	02H
	DD	FLAT:$T139447
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_FRIENDGROUPMAKE_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T139409 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bRet$ = 16						; size = 1
_bGroup$ = 20						; size = 1
_strName$ = 24						; size = 4
?SendMW_FRIENDGROUPMAKE_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTServer::SendMW_FRIENDGROUPMAKE_REQ, COMDAT
; _this$ = ecx

; 2286 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FRIENDGROUPMAKE_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 2287 : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T139409[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L139410
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L139411
$L139410:
  00043	33 f6		 xor	 esi, esi
$L139411:

; 2288 : 	pMsg->SetID(MW_FRIENDGROUPMAKE_REQ)
; 2289 : 		<< dwCharID
; 2290 : 		<< dwKey
; 2291 : 		<< bRet
; 2292 : 		<< bGroup
; 2293 : 		<< strName;

  00045	8b 44 24 2c	 mov	 eax, DWORD PTR _bGroup$[esp+24]
  00049	8b 4c 24 28	 mov	 ecx, DWORD PTR _bRet$[esp+24]
  0004d	8b 54 24 24	 mov	 edx, DWORD PTR _dwKey$[esp+24]
  00051	88 5c 24 18	 mov	 BYTE PTR __$EHRec$[esp+36], bl
  00055	8b 5c 24 30	 mov	 ebx, DWORD PTR _strName$[esp+24]
  00059	53		 push	 ebx
  0005a	50		 push	 eax
  0005b	8b 44 24 28	 mov	 eax, DWORD PTR _dwCharID$[esp+32]
  0005f	51		 push	 ecx
  00060	52		 push	 edx
  00061	50		 push	 eax
  00062	68 59 20 00 00	 push	 8281			; 00002059H
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00075	8b c8		 mov	 ecx, eax
  00077	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007c	8b c8		 mov	 ecx, eax
  0007e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2294 : 
; 2295 : 	Say(pMsg);

  00091	8b 17		 mov	 edx, DWORD PTR [edi]
  00093	56		 push	 esi
  00094	8b cf		 mov	 ecx, edi
  00096	ff 12		 call	 DWORD PTR [edx]

; 2296 : }

  00098	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0009b	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a6	83 ca ff	 or	 edx, -1
  000a9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ad	4a		 dec	 edx
  000ae	85 d2		 test	 edx, edx
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5b		 pop	 ebx
  000b3	7f 08		 jg	 SHORT $L139440
  000b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b9	50		 push	 eax
  000ba	ff 52 04	 call	 DWORD PTR [edx+4]
$L139440:
  000bd	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c8	83 c4 10	 add	 esp, 16			; 00000010H
  000cb	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139412:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139413:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T139409[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_FRIENDGROUPMAKE_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139445
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FRIENDGROUPMAKE_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTServer::SendMW_FRIENDGROUPMAKE_REQ
PUBLIC	?SendMW_FRIENDGROUPNAME_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTServer::SendMW_FRIENDGROUPNAME_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139492 DD	0ffffffffH
	DD	FLAT:$L139457
	DD	00H
	DD	FLAT:$L139458
$T139490 DD	019930520H
	DD	02H
	DD	FLAT:$T139492
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_FRIENDGROUPNAME_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T139454 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bRet$ = 16						; size = 1
_bGroup$ = 20						; size = 1
_strName$ = 24						; size = 4
?SendMW_FRIENDGROUPNAME_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTServer::SendMW_FRIENDGROUPNAME_REQ, COMDAT
; _this$ = ecx

; 2332 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FRIENDGROUPNAME_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 2333 : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T139454[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L139455
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L139456
$L139455:
  00043	33 f6		 xor	 esi, esi
$L139456:

; 2334 : 	pMsg->SetID(MW_FRIENDGROUPNAME_REQ)
; 2335 : 		<< dwCharID
; 2336 : 		<< dwKey
; 2337 : 		<< bRet
; 2338 : 		<< bGroup
; 2339 : 		<< strName;

  00045	8b 44 24 2c	 mov	 eax, DWORD PTR _bGroup$[esp+24]
  00049	8b 4c 24 28	 mov	 ecx, DWORD PTR _bRet$[esp+24]
  0004d	8b 54 24 24	 mov	 edx, DWORD PTR _dwKey$[esp+24]
  00051	88 5c 24 18	 mov	 BYTE PTR __$EHRec$[esp+36], bl
  00055	8b 5c 24 30	 mov	 ebx, DWORD PTR _strName$[esp+24]
  00059	53		 push	 ebx
  0005a	50		 push	 eax
  0005b	8b 44 24 28	 mov	 eax, DWORD PTR _dwCharID$[esp+32]
  0005f	51		 push	 ecx
  00060	52		 push	 edx
  00061	50		 push	 eax
  00062	68 5f 20 00 00	 push	 8287			; 0000205fH
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00075	8b c8		 mov	 ecx, eax
  00077	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007c	8b c8		 mov	 ecx, eax
  0007e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2340 : 
; 2341 : 	Say(pMsg);

  00091	8b 17		 mov	 edx, DWORD PTR [edi]
  00093	56		 push	 esi
  00094	8b cf		 mov	 ecx, edi
  00096	ff 12		 call	 DWORD PTR [edx]

; 2342 : }

  00098	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0009b	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a6	83 ca ff	 or	 edx, -1
  000a9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ad	4a		 dec	 edx
  000ae	85 d2		 test	 edx, edx
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5b		 pop	 ebx
  000b3	7f 08		 jg	 SHORT $L139485
  000b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b9	50		 push	 eax
  000ba	ff 52 04	 call	 DWORD PTR [edx+4]
$L139485:
  000bd	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c8	83 c4 10	 add	 esp, 16			; 00000010H
  000cb	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139457:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139458:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T139454[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_FRIENDGROUPNAME_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139490
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FRIENDGROUPNAME_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTServer::SendMW_FRIENDGROUPNAME_REQ
PUBLIC	?SendMW_FRIENDCONNECTION_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z ; CTServer::SendMW_FRIENDCONNECTION_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139537 DD	0ffffffffH
	DD	FLAT:$L139502
	DD	00H
	DD	FLAT:$L139503
$T139535 DD	019930520H
	DD	02H
	DD	FLAT:$T139537
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_FRIENDCONNECTION_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z
_TEXT	SEGMENT
$T139499 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bRet$ = 16						; size = 1
_strName$ = 20						; size = 4
_dwRegion$ = 24						; size = 4
?SendMW_FRIENDCONNECTION_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z PROC NEAR ; CTServer::SendMW_FRIENDCONNECTION_REQ, COMDAT
; _this$ = ecx

; 2348 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FRIENDCONNECTION_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 2349 : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T139499[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L139500
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L139501
$L139500:
  00043	33 f6		 xor	 esi, esi
$L139501:

; 2350 : 	pMsg->SetID(MW_FRIENDCONNECTION_REQ)
; 2351 : 		<< dwCharID
; 2352 : 		<< dwKey
; 2353 : 		<< bRet
; 2354 : 		<< strName
; 2355 : 		<< dwRegion;

  00045	8b 44 24 30	 mov	 eax, DWORD PTR _dwRegion$[esp+24]
  00049	8b 4c 24 28	 mov	 ecx, DWORD PTR _bRet$[esp+24]
  0004d	8b 54 24 24	 mov	 edx, DWORD PTR _dwKey$[esp+24]
  00051	50		 push	 eax
  00052	8b 44 24 24	 mov	 eax, DWORD PTR _dwCharID$[esp+28]
  00056	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl
  0005a	8b 5c 24 30	 mov	 ebx, DWORD PTR _strName$[esp+28]
  0005e	53		 push	 ebx
  0005f	51		 push	 ecx
  00060	52		 push	 edx
  00061	50		 push	 eax
  00062	68 58 20 00 00	 push	 8280			; 00002058H
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00075	8b c8		 mov	 ecx, eax
  00077	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007c	8b c8		 mov	 ecx, eax
  0007e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2356 : 
; 2357 : 	Say(pMsg);

  00091	8b 17		 mov	 edx, DWORD PTR [edi]
  00093	56		 push	 esi
  00094	8b cf		 mov	 ecx, edi
  00096	ff 12		 call	 DWORD PTR [edx]

; 2358 : }

  00098	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0009b	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a6	83 ca ff	 or	 edx, -1
  000a9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ad	4a		 dec	 edx
  000ae	85 d2		 test	 edx, edx
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5b		 pop	 ebx
  000b3	7f 08		 jg	 SHORT $L139530
  000b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b9	50		 push	 eax
  000ba	ff 52 04	 call	 DWORD PTR [edx+4]
$L139530:
  000bd	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c8	83 c4 10	 add	 esp, 16			; 00000010H
  000cb	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139502:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139503:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T139499[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_FRIENDCONNECTION_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139535
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FRIENDCONNECTION_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z ENDP ; CTServer::SendMW_FRIENDCONNECTION_REQ
PUBLIC	?SendMW_DEALITEMERROR_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0E@Z ; CTServer::SendMW_DEALITEMERROR_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139613 DD	0ffffffffH
	DD	FLAT:$L139547
	DD	00H
	DD	FLAT:$L139548
	DD	01H
	DD	FLAT:$L139549
$T139611 DD	019930520H
	DD	03H
	DD	FLAT:$T139613
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_DEALITEMERROR_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0E@Z
_TEXT	SEGMENT
$T139544 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strTarget$ = 8						; size = 4
_strErrorChar$ = 12					; size = 4
_bResult$ = 16						; size = 1
?SendMW_DEALITEMERROR_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0E@Z PROC NEAR ; CTServer::SendMW_DEALITEMERROR_REQ, COMDAT
; _this$ = ecx

; 2362 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_DEALITEMERROR_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	bb 01 00 00 00	 mov	 ebx, 1

; 2363 : 	CPacket * pMsg = new CPacket();

  00021	6a 1c		 push	 28			; 0000001cH
  00023	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00027	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 44 24 10	 mov	 DWORD PTR $T139544[esp+32], eax
  00033	85 c0		 test	 eax, eax
  00035	c6 44 24 1c 02	 mov	 BYTE PTR __$EHRec$[esp+40], 2
  0003a	74 0b		 je	 SHORT $L139545
  0003c	8b c8		 mov	 ecx, eax
  0003e	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00043	8b f0		 mov	 esi, eax
  00045	eb 02		 jmp	 SHORT $L139546
$L139545:
  00047	33 f6		 xor	 esi, esi
$L139546:

; 2364 : 	pMsg->SetID(MW_DEALITEMERROR_REQ)
; 2365 : 		<< strTarget
; 2366 : 		<< strErrorChar
; 2367 : 		<< bResult;

  00049	8b 44 24 2c	 mov	 eax, DWORD PTR _bResult$[esp+28]
  0004d	8b 6c 24 28	 mov	 ebp, DWORD PTR _strErrorChar$[esp+28]
  00051	50		 push	 eax
  00052	88 5c 24 20	 mov	 BYTE PTR __$EHRec$[esp+44], bl
  00056	8b 5c 24 28	 mov	 ebx, DWORD PTR _strTarget$[esp+32]
  0005a	55		 push	 ebp
  0005b	53		 push	 ebx
  0005c	68 ad 20 00 00	 push	 8365			; 000020adH
  00061	8b ce		 mov	 ecx, esi
  00063	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2368 : 
; 2369 : 	Say(pMsg);

  0007d	8b 17		 mov	 edx, DWORD PTR [edi]
  0007f	56		 push	 esi
  00080	8b cf		 mov	 ecx, edi
  00082	ff 12		 call	 DWORD PTR [edx]

; 2370 : }

  00084	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  00087	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  0008c	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0008f	83 ca ff	 or	 edx, -1
  00092	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00096	4a		 dec	 edx
  00097	85 d2		 test	 edx, edx
  00099	7f 08		 jg	 SHORT $L139579
  0009b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0009f	50		 push	 eax
  000a0	ff 52 04	 call	 DWORD PTR [edx+4]
$L139579:
  000a3	8d 45 f0	 lea	 eax, DWORD PTR [ebp-16]
  000a6	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  000ae	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000b1	83 ca ff	 or	 edx, -1
  000b4	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000b8	4a		 dec	 edx
  000b9	85 d2		 test	 edx, edx
  000bb	5f		 pop	 edi
  000bc	5e		 pop	 esi
  000bd	5d		 pop	 ebp
  000be	5b		 pop	 ebx
  000bf	7f 08		 jg	 SHORT $L139606
  000c1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c5	50		 push	 eax
  000c6	ff 52 04	 call	 DWORD PTR [edx+4]
$L139606:
  000c9	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000cd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d4	83 c4 10	 add	 esp, 16			; 00000010H
  000d7	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139547:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strErrorChar$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139548:
  00008	8d 4d 04	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139549:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T139544[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_DEALITEMERROR_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0E@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139611
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_DEALITEMERROR_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0E@Z ENDP ; CTServer::SendMW_DEALITEMERROR_REQ
PUBLIC	?SendMW_FRIENDREGION_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z ; CTServer::SendMW_FRIENDREGION_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139658 DD	0ffffffffH
	DD	FLAT:$L139623
	DD	00H
	DD	FLAT:$L139624
$T139656 DD	019930520H
	DD	02H
	DD	FLAT:$T139658
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_FRIENDREGION_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z
_TEXT	SEGMENT
$T139620 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_strNAME$ = 16						; size = 4
_dwRegion$ = 20						; size = 4
?SendMW_FRIENDREGION_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z PROC NEAR ; CTServer::SendMW_FRIENDREGION_REQ, COMDAT
; _this$ = ecx

; 2461 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FRIENDREGION_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 2462 : 	CPacket * pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T139620[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L139621
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L139622
$L139621:
  00043	33 f6		 xor	 esi, esi
$L139622:

; 2463 : 	pMSG->SetID(MW_FRIENDREGION_REQ)
; 2464 : 		<< dwCharID
; 2465 : 		<< dwKEY
; 2466 : 		<< strNAME
; 2467 : 		<< dwRegion;

  00045	8b 44 24 2c	 mov	 eax, DWORD PTR _dwRegion$[esp+24]
  00049	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKEY$[esp+24]
  0004d	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  00051	50		 push	 eax
  00052	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl
  00056	8b 5c 24 2c	 mov	 ebx, DWORD PTR _strNAME$[esp+28]
  0005a	53		 push	 ebx
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	68 57 20 00 00	 push	 8279			; 00002057H
  00062	8b ce		 mov	 ecx, esi
  00064	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00069	8b c8		 mov	 ecx, eax
  0006b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00070	8b c8		 mov	 ecx, eax
  00072	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2468 : 
; 2469 : 	Say(pMSG);

  00085	8b 07		 mov	 eax, DWORD PTR [edi]
  00087	56		 push	 esi
  00088	8b cf		 mov	 ecx, edi
  0008a	ff 10		 call	 DWORD PTR [eax]

; 2470 : }

  0008c	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0008f	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00097	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0009a	83 ca ff	 or	 edx, -1
  0009d	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000a1	4a		 dec	 edx
  000a2	85 d2		 test	 edx, edx
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	7f 08		 jg	 SHORT $L139651
  000a9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ab	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ad	50		 push	 eax
  000ae	ff 52 04	 call	 DWORD PTR [edx+4]
$L139651:
  000b1	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000b5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000bc	83 c4 10	 add	 esp, 16			; 00000010H
  000bf	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139623:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strNAME$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139624:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T139620[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_FRIENDREGION_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139656
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FRIENDREGION_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z ENDP ; CTServer::SendMW_FRIENDREGION_REQ
PUBLIC	?SendMW_EVENTQUARTER_REQ@CTServer@@QAEXEEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTServer::SendMW_EVENTQUARTER_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139703 DD	0ffffffffH
	DD	FLAT:$L139668
	DD	00H
	DD	FLAT:$L139669
$T139701 DD	019930520H
	DD	02H
	DD	FLAT:$T139703
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_EVENTQUARTER_REQ@CTServer@@QAEXEEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T139665 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bDay$ = 8						; size = 1
_bHour$ = 12						; size = 1
_bMinute$ = 16						; size = 1
_bSelect$ = 20						; size = 1
_strPresent$ = 24					; size = 4
?SendMW_EVENTQUARTER_REQ@CTServer@@QAEXEEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTServer::SendMW_EVENTQUARTER_REQ, COMDAT
; _this$ = ecx

; 2513 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_EVENTQUARTER_REQ@CTServer@@QAEXEEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 2514 : 	CPacket *pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T139665[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L139666
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L139667
$L139666:
  00043	33 f6		 xor	 esi, esi
$L139667:

; 2515 : 
; 2516 : 	pMSG->SetID(MW_EVENTQUARTER_REQ)
; 2517 : 		<< bDay
; 2518 : 		<< bHour
; 2519 : 		<< bMinute
; 2520 : 		<< bSelect
; 2521 : 		<< strPresent;

  00045	8b 44 24 2c	 mov	 eax, DWORD PTR _bSelect$[esp+24]
  00049	8b 4c 24 28	 mov	 ecx, DWORD PTR _bMinute$[esp+24]
  0004d	8b 54 24 24	 mov	 edx, DWORD PTR _bHour$[esp+24]
  00051	88 5c 24 18	 mov	 BYTE PTR __$EHRec$[esp+36], bl
  00055	8b 5c 24 30	 mov	 ebx, DWORD PTR _strPresent$[esp+24]
  00059	53		 push	 ebx
  0005a	50		 push	 eax
  0005b	8b 44 24 28	 mov	 eax, DWORD PTR _bDay$[esp+32]
  0005f	51		 push	 ecx
  00060	52		 push	 edx
  00061	50		 push	 eax
  00062	68 00 21 00 00	 push	 8448			; 00002100H
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00075	8b c8		 mov	 ecx, eax
  00077	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007c	8b c8		 mov	 ecx, eax
  0007e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2522 : 
; 2523 : 	Say(pMSG);

  00091	8b 17		 mov	 edx, DWORD PTR [edi]
  00093	56		 push	 esi
  00094	8b cf		 mov	 ecx, edi
  00096	ff 12		 call	 DWORD PTR [edx]

; 2524 : }

  00098	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0009b	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a6	83 ca ff	 or	 edx, -1
  000a9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ad	4a		 dec	 edx
  000ae	85 d2		 test	 edx, edx
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5b		 pop	 ebx
  000b3	7f 08		 jg	 SHORT $L139696
  000b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b9	50		 push	 eax
  000ba	ff 52 04	 call	 DWORD PTR [edx+4]
$L139696:
  000bd	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c8	83 c4 10	 add	 esp, 16			; 00000010H
  000cb	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139668:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strPresent$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139669:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T139665[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_EVENTQUARTER_REQ@CTServer@@QAEXEEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139701
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_EVENTQUARTER_REQ@CTServer@@QAEXEEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTServer::SendMW_EVENTQUARTER_REQ
PUBLIC	?SendMW_PARTYMEMBERRECALL_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEGMMM@Z ; CTServer::SendMW_PARTYMEMBERRECALL_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139748 DD	0ffffffffH
	DD	FLAT:$L139713
	DD	00H
	DD	FLAT:$L139714
$T139746 DD	019930520H
	DD	02H
	DD	FLAT:$T139748
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_PARTYMEMBERRECALL_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEGMMM@Z
_TEXT	SEGMENT
$T139710 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bResult$ = 16						; size = 1
_strTarget$ = 20					; size = 4
_bType$ = 24						; size = 1
_bInvenID$ = 28						; size = 1
_bItemID$ = 32						; size = 1
_bChannel$ = 36						; size = 1
_wMapID$ = 40						; size = 2
_fPosX$ = 44						; size = 4
_fPosY$ = 48						; size = 4
_fPosZ$ = 52						; size = 4
?SendMW_PARTYMEMBERRECALL_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEGMMM@Z PROC NEAR ; CTServer::SendMW_PARTYMEMBERRECALL_REQ, COMDAT
; _this$ = ecx

; 2552 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PARTYMEMBERRECALL_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEGMMM@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 2553 : 	CPacket *pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T139710[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L139711
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L139712
$L139711:
  00043	33 f6		 xor	 esi, esi
$L139712:

; 2554 : 
; 2555 : 	pMSG->SetID(MW_PARTYMEMBERRECALL_REQ)
; 2556 : 		<< dwCharID
; 2557 : 		<< dwKEY
; 2558 : 		<< bResult
; 2559 : 		<< strTarget
; 2560 : 		<< bType
; 2561 : 		<< bInvenID
; 2562 : 		<< bItemID
; 2563 : 		<< bChannel
; 2564 : 		<< wMapID
; 2565 : 		<< fPosX
; 2566 : 		<< fPosY
; 2567 : 		<< fPosZ;

  00045	8b 44 24 4c	 mov	 eax, DWORD PTR _fPosZ$[esp+24]
  00049	8b 4c 24 48	 mov	 ecx, DWORD PTR _fPosY$[esp+24]
  0004d	8b 54 24 44	 mov	 edx, DWORD PTR _fPosX$[esp+24]
  00051	50		 push	 eax
  00052	8b 44 24 44	 mov	 eax, DWORD PTR _wMapID$[esp+28]
  00056	51		 push	 ecx
  00057	8b 4c 24 44	 mov	 ecx, DWORD PTR _bChannel$[esp+32]
  0005b	52		 push	 edx
  0005c	8b 54 24 44	 mov	 edx, DWORD PTR _bItemID$[esp+36]
  00060	50		 push	 eax
  00061	8b 44 24 44	 mov	 eax, DWORD PTR _bInvenID$[esp+40]
  00065	51		 push	 ecx
  00066	8b 4c 24 44	 mov	 ecx, DWORD PTR _bType$[esp+44]
  0006a	52		 push	 edx
  0006b	8b 54 24 40	 mov	 edx, DWORD PTR _bResult$[esp+48]
  0006f	50		 push	 eax
  00070	8b 44 24 40	 mov	 eax, DWORD PTR _dwKEY$[esp+52]
  00074	51		 push	 ecx
  00075	8b 4c 24 40	 mov	 ecx, DWORD PTR _dwCharID$[esp+56]
  00079	88 5c 24 38	 mov	 BYTE PTR __$EHRec$[esp+68], bl
  0007d	8b 5c 24 4c	 mov	 ebx, DWORD PTR _strTarget$[esp+56]
  00081	53		 push	 ebx
  00082	52		 push	 edx
  00083	50		 push	 eax
  00084	51		 push	 ecx
  00085	68 03 21 00 00	 push	 8451			; 00002103H
  0008a	8b ce		 mov	 ecx, esi
  0008c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00098	8b c8		 mov	 ecx, eax
  0009a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009f	8b c8		 mov	 ecx, eax
  000a1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a6	8b c8		 mov	 ecx, eax
  000a8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000ad	8b c8		 mov	 ecx, eax
  000af	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000b4	8b c8		 mov	 ecx, eax
  000b6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000bb	8b c8		 mov	 ecx, eax
  000bd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c2	8b c8		 mov	 ecx, eax
  000c4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c9	8b c8		 mov	 ecx, eax
  000cb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000d0	8b c8		 mov	 ecx, eax
  000d2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000d7	8b c8		 mov	 ecx, eax
  000d9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  000de	8b c8		 mov	 ecx, eax
  000e0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<

; 2568 : 
; 2569 : 	Say(pMSG);

  000e5	8b 17		 mov	 edx, DWORD PTR [edi]
  000e7	56		 push	 esi
  000e8	8b cf		 mov	 ecx, edi
  000ea	ff 12		 call	 DWORD PTR [edx]

; 2570 : }

  000ec	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000ef	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000f7	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000fa	83 ca ff	 or	 edx, -1
  000fd	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00101	4a		 dec	 edx
  00102	85 d2		 test	 edx, edx
  00104	5f		 pop	 edi
  00105	5e		 pop	 esi
  00106	5b		 pop	 ebx
  00107	7f 08		 jg	 SHORT $L139741
  00109	8b 08		 mov	 ecx, DWORD PTR [eax]
  0010b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0010d	50		 push	 eax
  0010e	ff 52 04	 call	 DWORD PTR [edx+4]
$L139741:
  00111	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00115	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0011c	83 c4 10	 add	 esp, 16			; 00000010H
  0011f	c2 30 00	 ret	 48			; 00000030H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139713:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139714:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T139710[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_PARTYMEMBERRECALL_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEGMMM@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139746
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PARTYMEMBERRECALL_REQ@CTServer@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEGMMM@Z ENDP ; CTServer::SendMW_PARTYMEMBERRECALL_REQ
PUBLIC	?SendMW_PARTYMEMBERRECALLANS_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z ; CTServer::SendMW_PARTYMEMBERRECALLANS_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139793 DD	0ffffffffH
	DD	FLAT:$L139758
	DD	00H
	DD	FLAT:$L139759
$T139791 DD	019930520H
	DD	02H
	DD	FLAT:$T139793
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_PARTYMEMBERRECALLANS_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z
_TEXT	SEGMENT
$T139755 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_strTarget$ = 16					; size = 4
_bType$ = 20						; size = 1
_bInvenID$ = 24						; size = 1
_bItemID$ = 28						; size = 1
?SendMW_PARTYMEMBERRECALLANS_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z PROC NEAR ; CTServer::SendMW_PARTYMEMBERRECALLANS_REQ, COMDAT
; _this$ = ecx

; 2578 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PARTYMEMBERRECALLANS_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 2579 : 	CPacket *pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T139755[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L139756
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L139757
$L139756:
  00043	33 f6		 xor	 esi, esi
$L139757:

; 2580 : 
; 2581 : 	pMSG->SetID(MW_PARTYMEMBERRECALLANS_REQ)
; 2582 : 		<< dwCharID
; 2583 : 		<< dwKey
; 2584 : 		<< strTarget
; 2585 : 		<< bType
; 2586 : 		<< bInvenID
; 2587 : 		<< bItemID;

  00045	8b 44 24 34	 mov	 eax, DWORD PTR _bItemID$[esp+24]
  00049	8b 4c 24 30	 mov	 ecx, DWORD PTR _bInvenID$[esp+24]
  0004d	8b 54 24 2c	 mov	 edx, DWORD PTR _bType$[esp+24]
  00051	50		 push	 eax
  00052	8b 44 24 28	 mov	 eax, DWORD PTR _dwKey$[esp+28]
  00056	51		 push	 ecx
  00057	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwCharID$[esp+32]
  0005b	52		 push	 edx
  0005c	88 5c 24 24	 mov	 BYTE PTR __$EHRec$[esp+48], bl
  00060	8b 5c 24 34	 mov	 ebx, DWORD PTR _strTarget$[esp+36]
  00064	53		 push	 ebx
  00065	50		 push	 eax
  00066	51		 push	 ecx
  00067	68 13 21 00 00	 push	 8467			; 00002113H
  0006c	8b ce		 mov	 ecx, esi
  0006e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2588 : 
; 2589 : 	Say(pMSG);

  0009d	8b 17		 mov	 edx, DWORD PTR [edi]
  0009f	56		 push	 esi
  000a0	8b cf		 mov	 ecx, edi
  000a2	ff 12		 call	 DWORD PTR [edx]

; 2590 : }

  000a4	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000a7	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000af	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000b2	83 ca ff	 or	 edx, -1
  000b5	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000b9	4a		 dec	 edx
  000ba	85 d2		 test	 edx, edx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5b		 pop	 ebx
  000bf	7f 08		 jg	 SHORT $L139786
  000c1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c5	50		 push	 eax
  000c6	ff 52 04	 call	 DWORD PTR [edx+4]
$L139786:
  000c9	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000cd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d4	83 c4 10	 add	 esp, 16			; 00000010H
  000d7	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139758:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139759:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T139755[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_PARTYMEMBERRECALLANS_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139791
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PARTYMEMBERRECALLANS_REQ@CTServer@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEE@Z ENDP ; CTServer::SendMW_PARTYMEMBERRECALLANS_REQ
PUBLIC	?SendMW_SOULMATE_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z ; CTServer::SendMW_SOULMATE_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139838 DD	0ffffffffH
	DD	FLAT:$L139803
	DD	00H
	DD	FLAT:$L139804
$T139836 DD	019930520H
	DD	02H
	DD	FLAT:$T139838
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_SOULMATE_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z
_TEXT	SEGMENT
$T139800 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwSoulmate$ = 16					; size = 4
_strSoulmate$ = 20					; size = 4
_dwTime$ = 24						; size = 4
?SendMW_SOULMATE_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z PROC NEAR ; CTServer::SendMW_SOULMATE_REQ, COMDAT
; _this$ = ecx

; 2597 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_SOULMATE_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 2598 : 	CPacket *pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T139800[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L139801
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L139802
$L139801:
  00043	33 f6		 xor	 esi, esi
$L139802:

; 2599 : 
; 2600 : 	pMSG->SetID(MW_SOULMATE_REQ)
; 2601 : 		<< dwCharID
; 2602 : 		<< dwKEY
; 2603 : 		<< dwSoulmate
; 2604 : 		<< strSoulmate
; 2605 : 		<< dwTime;

  00045	8b 44 24 30	 mov	 eax, DWORD PTR _dwTime$[esp+24]
  00049	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwSoulmate$[esp+24]
  0004d	8b 54 24 24	 mov	 edx, DWORD PTR _dwKEY$[esp+24]
  00051	50		 push	 eax
  00052	8b 44 24 24	 mov	 eax, DWORD PTR _dwCharID$[esp+28]
  00056	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl
  0005a	8b 5c 24 30	 mov	 ebx, DWORD PTR _strSoulmate$[esp+28]
  0005e	53		 push	 ebx
  0005f	51		 push	 ecx
  00060	52		 push	 edx
  00061	50		 push	 eax
  00062	68 05 21 00 00	 push	 8453			; 00002105H
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00075	8b c8		 mov	 ecx, eax
  00077	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007c	8b c8		 mov	 ecx, eax
  0007e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2606 : 
; 2607 : 	Say(pMSG);

  00091	8b 17		 mov	 edx, DWORD PTR [edi]
  00093	56		 push	 esi
  00094	8b cf		 mov	 ecx, edi
  00096	ff 12		 call	 DWORD PTR [edx]

; 2608 : }

  00098	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0009b	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a6	83 ca ff	 or	 edx, -1
  000a9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ad	4a		 dec	 edx
  000ae	85 d2		 test	 edx, edx
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5b		 pop	 ebx
  000b3	7f 08		 jg	 SHORT $L139831
  000b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b9	50		 push	 eax
  000ba	ff 52 04	 call	 DWORD PTR [edx+4]
$L139831:
  000bd	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c8	83 c4 10	 add	 esp, 16			; 00000010H
  000cb	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139803:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strSoulmate$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139804:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T139800[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_SOULMATE_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139836
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_SOULMATE_REQ@CTServer@@QAEXKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z ENDP ; CTServer::SendMW_SOULMATE_REQ
PUBLIC	?SendMW_SOULMATESEARCH_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEE@Z ; CTServer::SendMW_SOULMATESEARCH_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139883 DD	0ffffffffH
	DD	FLAT:$L139848
	DD	00H
	DD	FLAT:$L139849
$T139881 DD	019930520H
	DD	02H
	DD	FLAT:$T139883
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_SOULMATESEARCH_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEE@Z
_TEXT	SEGMENT
$T139845 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bResult$ = 16						; size = 1
_dwSoulID$ = 20						; size = 4
_strSoulmate$ = 24					; size = 4
_dwRegion$ = 28						; size = 4
_bNpcInvenID$ = 32					; size = 1
_bNpcItemID$ = 36					; size = 1
?SendMW_SOULMATESEARCH_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEE@Z PROC NEAR ; CTServer::SendMW_SOULMATESEARCH_REQ, COMDAT
; _this$ = ecx

; 2618 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_SOULMATESEARCH_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 2619 : 	CPacket *pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T139845[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L139846
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L139847
$L139846:
  00043	33 f6		 xor	 esi, esi
$L139847:

; 2620 : 
; 2621 : 	pMSG->SetID(MW_SOULMATESEARCH_REQ)
; 2622 : 		<< dwCharID
; 2623 : 		<< dwKEY
; 2624 : 		<< bResult
; 2625 : 		<< dwSoulID
; 2626 : 		<< strSoulmate
; 2627 : 		<< dwRegion
; 2628 : 		<< bNpcInvenID
; 2629 : 		<< bNpcItemID;

  00045	8b 44 24 3c	 mov	 eax, DWORD PTR _bNpcItemID$[esp+24]
  00049	8b 4c 24 38	 mov	 ecx, DWORD PTR _bNpcInvenID$[esp+24]
  0004d	8b 54 24 34	 mov	 edx, DWORD PTR _dwRegion$[esp+24]
  00051	50		 push	 eax
  00052	8b 44 24 30	 mov	 eax, DWORD PTR _dwSoulID$[esp+28]
  00056	51		 push	 ecx
  00057	8b 4c 24 30	 mov	 ecx, DWORD PTR _bResult$[esp+32]
  0005b	52		 push	 edx
  0005c	8b 54 24 30	 mov	 edx, DWORD PTR _dwKEY$[esp+36]
  00060	88 5c 24 24	 mov	 BYTE PTR __$EHRec$[esp+48], bl
  00064	8b 5c 24 3c	 mov	 ebx, DWORD PTR _strSoulmate$[esp+36]
  00068	53		 push	 ebx
  00069	50		 push	 eax
  0006a	8b 44 24 34	 mov	 eax, DWORD PTR _dwCharID$[esp+44]
  0006e	51		 push	 ecx
  0006f	52		 push	 edx
  00070	50		 push	 eax
  00071	68 07 21 00 00	 push	 8455			; 00002107H
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008b	8b c8		 mov	 ecx, eax
  0008d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00092	8b c8		 mov	 ecx, eax
  00094	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00099	8b c8		 mov	 ecx, eax
  0009b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a7	8b c8		 mov	 ecx, eax
  000a9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ae	8b c8		 mov	 ecx, eax
  000b0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2630 : 
; 2631 : 	Say(pMSG);

  000b5	8b 17		 mov	 edx, DWORD PTR [edi]
  000b7	56		 push	 esi
  000b8	8b cf		 mov	 ecx, edi
  000ba	ff 12		 call	 DWORD PTR [edx]

; 2632 : }

  000bc	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000bf	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000c7	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000ca	83 ca ff	 or	 edx, -1
  000cd	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d1	4a		 dec	 edx
  000d2	85 d2		 test	 edx, edx
  000d4	5f		 pop	 edi
  000d5	5e		 pop	 esi
  000d6	5b		 pop	 ebx
  000d7	7f 08		 jg	 SHORT $L139876
  000d9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000db	8b 11		 mov	 edx, DWORD PTR [ecx]
  000dd	50		 push	 eax
  000de	ff 52 04	 call	 DWORD PTR [edx+4]
$L139876:
  000e1	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000e5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ec	83 c4 10	 add	 esp, 16			; 00000010H
  000ef	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139848:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strSoulmate$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139849:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T139845[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_SOULMATESEARCH_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEE@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139881
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_SOULMATESEARCH_REQ@CTServer@@QAEXKKEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEE@Z ENDP ; CTServer::SendMW_SOULMATESEARCH_REQ
PUBLIC	?SendMW_SOULMATEREG_REQ@CTServer@@QAEXKKEEEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z ; CTServer::SendMW_SOULMATEREG_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139928 DD	0ffffffffH
	DD	FLAT:$L139893
	DD	00H
	DD	FLAT:$L139894
$T139926 DD	019930520H
	DD	02H
	DD	FLAT:$T139928
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_SOULMATEREG_REQ@CTServer@@QAEXKKEEEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z
_TEXT	SEGMENT
$T139890 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bResult$ = 16						; size = 1
_bReg$ = 20						; size = 1
_bNpcInvenID$ = 24					; size = 1
_bNpcItemID$ = 28					; size = 1
_dwSoulmate$ = 32					; size = 4
_strSoulmate$ = 36					; size = 4
_dwRegion$ = 40						; size = 4
?SendMW_SOULMATEREG_REQ@CTServer@@QAEXKKEEEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z PROC NEAR ; CTServer::SendMW_SOULMATEREG_REQ, COMDAT
; _this$ = ecx

; 2643 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_SOULMATEREG_REQ@CTServer@@QAEXKKEEEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 2644 : 	CPacket *pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T139890[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L139891
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L139892
$L139891:
  00043	33 f6		 xor	 esi, esi
$L139892:

; 2645 : 
; 2646 : 	pMSG->SetID(MW_SOULMATEREG_REQ)
; 2647 : 		<< dwCharID
; 2648 : 		<< dwKEY
; 2649 : 		<< bResult
; 2650 : 		<< bReg
; 2651 : 		<< bNpcInvenID
; 2652 : 		<< bNpcItemID
; 2653 : 		<< dwSoulmate
; 2654 : 		<< strSoulmate
; 2655 : 		<< dwRegion;

  00045	8b 44 24 40	 mov	 eax, DWORD PTR _dwRegion$[esp+24]
  00049	8b 4c 24 38	 mov	 ecx, DWORD PTR _dwSoulmate$[esp+24]
  0004d	8b 54 24 34	 mov	 edx, DWORD PTR _bNpcItemID$[esp+24]
  00051	50		 push	 eax
  00052	8b 44 24 34	 mov	 eax, DWORD PTR _bNpcInvenID$[esp+28]
  00056	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl
  0005a	8b 5c 24 40	 mov	 ebx, DWORD PTR _strSoulmate$[esp+28]
  0005e	53		 push	 ebx
  0005f	51		 push	 ecx
  00060	8b 4c 24 38	 mov	 ecx, DWORD PTR _bReg$[esp+36]
  00064	52		 push	 edx
  00065	8b 54 24 38	 mov	 edx, DWORD PTR _bResult$[esp+40]
  00069	50		 push	 eax
  0006a	8b 44 24 38	 mov	 eax, DWORD PTR _dwKEY$[esp+44]
  0006e	51		 push	 ecx
  0006f	8b 4c 24 38	 mov	 ecx, DWORD PTR _dwCharID$[esp+48]
  00073	52		 push	 edx
  00074	50		 push	 eax
  00075	51		 push	 ecx
  00076	68 09 21 00 00	 push	 8457			; 00002109H
  0007b	8b ce		 mov	 ecx, esi
  0007d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0009e	8b c8		 mov	 ecx, eax
  000a0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a5	8b c8		 mov	 ecx, eax
  000a7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ac	8b c8		 mov	 ecx, eax
  000ae	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b3	8b c8		 mov	 ecx, eax
  000b5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000ba	8b c8		 mov	 ecx, eax
  000bc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2656 : 
; 2657 : 	Say(pMSG);

  000c1	8b 17		 mov	 edx, DWORD PTR [edi]
  000c3	56		 push	 esi
  000c4	8b cf		 mov	 ecx, edi
  000c6	ff 12		 call	 DWORD PTR [edx]

; 2658 : }

  000c8	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000cb	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000d3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000d6	83 ca ff	 or	 edx, -1
  000d9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000dd	4a		 dec	 edx
  000de	85 d2		 test	 edx, edx
  000e0	5f		 pop	 edi
  000e1	5e		 pop	 esi
  000e2	5b		 pop	 ebx
  000e3	7f 08		 jg	 SHORT $L139921
  000e5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e9	50		 push	 eax
  000ea	ff 52 04	 call	 DWORD PTR [edx+4]
$L139921:
  000ed	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000f1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000f8	83 c4 10	 add	 esp, 16			; 00000010H
  000fb	c2 24 00	 ret	 36			; 00000024H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139893:
  00000	8d 4d 20	 lea	 ecx, DWORD PTR _strSoulmate$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139894:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T139890[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_SOULMATEREG_REQ@CTServer@@QAEXKKEEEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139926
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_SOULMATEREG_REQ@CTServer@@QAEXKKEEEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z ENDP ; CTServer::SendMW_SOULMATEREG_REQ
PUBLIC	?SendMW_CHATBAN_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_JEKK@Z ; CTServer::SendMW_CHATBAN_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T139973 DD	0ffffffffH
	DD	FLAT:$L139938
	DD	00H
	DD	FLAT:$L139939
$T139971 DD	019930520H
	DD	02H
	DD	FLAT:$T139973
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CHATBAN_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_JEKK@Z
_TEXT	SEGMENT
$T139935 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strName$ = 8						; size = 4
_nChatBanTime$ = 12					; size = 8
_bResult$ = 20						; size = 1
_dwCharID$ = 24						; size = 4
_dwKey$ = 28						; size = 4
?SendMW_CHATBAN_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_JEKK@Z PROC NEAR ; CTServer::SendMW_CHATBAN_REQ, COMDAT
; _this$ = ecx

; 2736 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHATBAN_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_JEKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 2737 : 	CPacket* pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T139935[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L139936
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L139937
$L139936:
  00043	33 f6		 xor	 esi, esi
$L139937:

; 2738 : 
; 2739 : 	pMSG->SetID(MW_CHATBAN_REQ)
; 2740 : 		<< strName
; 2741 : 		<< nChatBanTime
; 2742 : 		<< bResult
; 2743 : 		<< dwCharID
; 2744 : 		<< dwKey;

  00045	8b 44 24 34	 mov	 eax, DWORD PTR _dwKey$[esp+24]
  00049	8b 4c 24 30	 mov	 ecx, DWORD PTR _dwCharID$[esp+24]
  0004d	8b 54 24 2c	 mov	 edx, DWORD PTR _bResult$[esp+24]
  00051	50		 push	 eax
  00052	8b 44 24 2c	 mov	 eax, DWORD PTR _nChatBanTime$[esp+32]
  00056	51		 push	 ecx
  00057	8b 4c 24 2c	 mov	 ecx, DWORD PTR _nChatBanTime$[esp+32]
  0005b	52		 push	 edx
  0005c	50		 push	 eax
  0005d	51		 push	 ecx
  0005e	88 5c 24 2c	 mov	 BYTE PTR __$EHRec$[esp+56], bl
  00062	8b 5c 24 34	 mov	 ebx, DWORD PTR _strName$[esp+44]
  00066	53		 push	 ebx
  00067	68 15 21 00 00	 push	 8469			; 00002115H
  0006c	8b ce		 mov	 ecx, esi
  0006e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2745 : 
; 2746 : 	Say(pMSG);

  00096	8b 17		 mov	 edx, DWORD PTR [edi]
  00098	56		 push	 esi
  00099	8b cf		 mov	 ecx, edi
  0009b	ff 12		 call	 DWORD PTR [edx]

; 2747 : }

  0009d	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000a0	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a8	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000ab	83 ca ff	 or	 edx, -1
  000ae	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000b2	4a		 dec	 edx
  000b3	85 d2		 test	 edx, edx
  000b5	5f		 pop	 edi
  000b6	5e		 pop	 esi
  000b7	5b		 pop	 ebx
  000b8	7f 08		 jg	 SHORT $L139966
  000ba	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bc	8b 11		 mov	 edx, DWORD PTR [ecx]
  000be	50		 push	 eax
  000bf	ff 52 04	 call	 DWORD PTR [edx+4]
$L139966:
  000c2	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000cd	83 c4 10	 add	 esp, 16			; 00000010H
  000d0	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139938:
  00000	8d 4d 04	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139939:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T139935[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_CHATBAN_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_JEKK@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139971
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHATBAN_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_JEKK@Z ENDP ; CTServer::SendMW_CHATBAN_REQ
PUBLIC	?SendMW_CHARMSG_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ; CTServer::SendMW_CHARMSG_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T140049 DD	0ffffffffH
	DD	FLAT:$L139983
	DD	00H
	DD	FLAT:$L139984
	DD	01H
	DD	FLAT:$L139985
$T140047 DD	019930520H
	DD	03H
	DD	FLAT:$T140049
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CHARMSG_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT
$T139980 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strName$ = 8						; size = 4
_strMsg$ = 12						; size = 4
?SendMW_CHARMSG_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z PROC NEAR ; CTServer::SendMW_CHARMSG_REQ, COMDAT
; _this$ = ecx

; 2750 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHARMSG_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	bb 01 00 00 00	 mov	 ebx, 1

; 2751 : 	CPacket* pMSG = new CPacket();

  00021	6a 1c		 push	 28			; 0000001cH
  00023	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00027	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 44 24 10	 mov	 DWORD PTR $T139980[esp+32], eax
  00033	85 c0		 test	 eax, eax
  00035	c6 44 24 1c 02	 mov	 BYTE PTR __$EHRec$[esp+40], 2
  0003a	74 0b		 je	 SHORT $L139981
  0003c	8b c8		 mov	 ecx, eax
  0003e	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00043	8b f0		 mov	 esi, eax
  00045	eb 02		 jmp	 SHORT $L139982
$L139981:
  00047	33 f6		 xor	 esi, esi
$L139982:

; 2752 : 
; 2753 : 	pMSG->SetID(MW_CHARMSG_REQ)
; 2754 : 		<< strName
; 2755 : 		<< strMsg;

  00049	8b 6c 24 28	 mov	 ebp, DWORD PTR _strMsg$[esp+28]
  0004d	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl
  00051	8b 5c 24 24	 mov	 ebx, DWORD PTR _strName$[esp+28]
  00055	55		 push	 ebp
  00056	53		 push	 ebx
  00057	68 1e 21 00 00	 push	 8478			; 0000211eH
  0005c	8b ce		 mov	 ecx, esi
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2756 : 
; 2757 : 	Say(pMSG);

  00071	8b 07		 mov	 eax, DWORD PTR [edi]
  00073	56		 push	 esi
  00074	8b cf		 mov	 ecx, edi
  00076	ff 10		 call	 DWORD PTR [eax]

; 2758 : }

  00078	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0007b	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  00080	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00083	83 ca ff	 or	 edx, -1
  00086	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0008a	4a		 dec	 edx
  0008b	85 d2		 test	 edx, edx
  0008d	7f 08		 jg	 SHORT $L140015
  0008f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00091	8b 11		 mov	 edx, DWORD PTR [ecx]
  00093	50		 push	 eax
  00094	ff 52 04	 call	 DWORD PTR [edx+4]
$L140015:
  00097	8d 45 f0	 lea	 eax, DWORD PTR [ebp-16]
  0009a	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  000a2	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a5	83 ca ff	 or	 edx, -1
  000a8	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ac	4a		 dec	 edx
  000ad	85 d2		 test	 edx, edx
  000af	5f		 pop	 edi
  000b0	5e		 pop	 esi
  000b1	5d		 pop	 ebp
  000b2	5b		 pop	 ebx
  000b3	7f 08		 jg	 SHORT $L140043
  000b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b9	50		 push	 eax
  000ba	ff 52 04	 call	 DWORD PTR [edx+4]
$L140043:
  000bd	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c8	83 c4 10	 add	 esp, 16			; 00000010H
  000cb	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139983:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strMsg$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139984:
  00008	8d 4d 04	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L139985:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T139980[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_CHARMSG_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T140047
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHARMSG_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ENDP ; CTServer::SendMW_CHARMSG_REQ
PUBLIC	?SendMW_CHANGECHARBASE_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTServer::SendMW_CHANGECHARBASE_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T140094 DD	0ffffffffH
	DD	FLAT:$L140059
	DD	00H
	DD	FLAT:$L140060
$T140092 DD	019930520H
	DD	02H
	DD	FLAT:$T140094
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CHANGECHARBASE_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T140056 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_bType$ = 16						; size = 1
_bValue$ = 20						; size = 1
_strName$ = 24						; size = 4
?SendMW_CHANGECHARBASE_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTServer::SendMW_CHANGECHARBASE_REQ, COMDAT
; _this$ = ecx

; 2773 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CHANGECHARBASE_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 2774 : 	CPacket* pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T140056[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L140057
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L140058
$L140057:
  00043	33 f6		 xor	 esi, esi
$L140058:

; 2775 : 
; 2776 : 	pMSG->SetID(MW_CHANGECHARBASE_REQ)
; 2777 : 		<< dwCharID
; 2778 : 		<< dwKey
; 2779 : 		<< bType
; 2780 : 		<< bValue
; 2781 : 		<< strName;

  00045	8b 44 24 2c	 mov	 eax, DWORD PTR _bValue$[esp+24]
  00049	8b 4c 24 28	 mov	 ecx, DWORD PTR _bType$[esp+24]
  0004d	8b 54 24 24	 mov	 edx, DWORD PTR _dwKey$[esp+24]
  00051	88 5c 24 18	 mov	 BYTE PTR __$EHRec$[esp+36], bl
  00055	8b 5c 24 30	 mov	 ebx, DWORD PTR _strName$[esp+24]
  00059	53		 push	 ebx
  0005a	50		 push	 eax
  0005b	8b 44 24 28	 mov	 eax, DWORD PTR _dwCharID$[esp+32]
  0005f	51		 push	 ecx
  00060	52		 push	 edx
  00061	50		 push	 eax
  00062	68 19 21 00 00	 push	 8473			; 00002119H
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00075	8b c8		 mov	 ecx, eax
  00077	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007c	8b c8		 mov	 ecx, eax
  0007e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2782 : 
; 2783 : 	Say(pMSG);

  00091	8b 17		 mov	 edx, DWORD PTR [edi]
  00093	56		 push	 esi
  00094	8b cf		 mov	 ecx, edi
  00096	ff 12		 call	 DWORD PTR [edx]

; 2784 : }

  00098	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0009b	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a6	83 ca ff	 or	 edx, -1
  000a9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ad	4a		 dec	 edx
  000ae	85 d2		 test	 edx, edx
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5b		 pop	 ebx
  000b3	7f 08		 jg	 SHORT $L140087
  000b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b9	50		 push	 eax
  000ba	ff 52 04	 call	 DWORD PTR [edx+4]
$L140087:
  000bd	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c8	83 c4 10	 add	 esp, 16			; 00000010H
  000cb	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L140059:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L140060:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T140056[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_CHANGECHARBASE_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T140092
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CHANGECHARBASE_REQ@CTServer@@QAEXKKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTServer::SendMW_CHANGECHARBASE_REQ
PUBLIC	?SendMW_HEROSELECT_REQ@CTServer@@QAEXGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z ; CTServer::SendMW_HEROSELECT_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T140139 DD	0ffffffffH
	DD	FLAT:$L140104
	DD	00H
	DD	FLAT:$L140105
$T140137 DD	019930520H
	DD	02H
	DD	FLAT:$T140139
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_HEROSELECT_REQ@CTServer@@QAEXGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z
_TEXT	SEGMENT
$T140101 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wBattleZoneID$ = 8					; size = 2
_strHeroName$ = 12					; size = 4
_timeHero$ = 16						; size = 8
?SendMW_HEROSELECT_REQ@CTServer@@QAEXGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z PROC NEAR ; CTServer::SendMW_HEROSELECT_REQ, COMDAT
; _this$ = ecx

; 2790 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_HEROSELECT_REQ@CTServer@@QAEXGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 2791 : 	CPacket* pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T140101[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L140102
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L140103
$L140102:
  00043	33 f6		 xor	 esi, esi
$L140103:

; 2792 : 
; 2793 : 	pMSG->SetID(MW_HEROSELECT_REQ)
; 2794 : 		<< wBattleZoneID
; 2795 : 		<< strHeroName
; 2796 : 		<< timeHero;

  00045	8b 44 24 2c	 mov	 eax, DWORD PTR _timeHero$[esp+28]
  00049	8b 4c 24 28	 mov	 ecx, DWORD PTR _timeHero$[esp+24]
  0004d	8b 54 24 20	 mov	 edx, DWORD PTR _wBattleZoneID$[esp+24]
  00051	50		 push	 eax
  00052	51		 push	 ecx
  00053	88 5c 24 20	 mov	 BYTE PTR __$EHRec$[esp+44], bl
  00057	8b 5c 24 2c	 mov	 ebx, DWORD PTR _strHeroName$[esp+32]
  0005b	53		 push	 ebx
  0005c	52		 push	 edx
  0005d	68 1b 21 00 00	 push	 8475			; 0000211bH
  00062	8b ce		 mov	 ecx, esi
  00064	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00069	8b c8		 mov	 ecx, eax
  0006b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00070	8b c8		 mov	 ecx, eax
  00072	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 2797 : 
; 2798 : 	Say(pMSG);

  0007e	8b 07		 mov	 eax, DWORD PTR [edi]
  00080	56		 push	 esi
  00081	8b cf		 mov	 ecx, edi
  00083	ff 10		 call	 DWORD PTR [eax]

; 2799 : }

  00085	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  00088	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00090	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00093	83 ca ff	 or	 edx, -1
  00096	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0009a	4a		 dec	 edx
  0009b	85 d2		 test	 edx, edx
  0009d	5f		 pop	 edi
  0009e	5e		 pop	 esi
  0009f	5b		 pop	 ebx
  000a0	7f 08		 jg	 SHORT $L140132
  000a2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000a4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a6	50		 push	 eax
  000a7	ff 52 04	 call	 DWORD PTR [edx+4]
$L140132:
  000aa	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000ae	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b5	83 c4 10	 add	 esp, 16			; 00000010H
  000b8	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L140104:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strHeroName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L140105:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T140101[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_HEROSELECT_REQ@CTServer@@QAEXGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T140137
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_HEROSELECT_REQ@CTServer@@QAEXGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@_J@Z ENDP ; CTServer::SendMW_HEROSELECT_REQ
PUBLIC	?SendCT_CASTLEGUILDCHG_ACK@CTServer@@QAEXKEGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z ; CTServer::SendCT_CASTLEGUILDCHG_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T140215 DD	0ffffffffH
	DD	FLAT:$L140149
	DD	00H
	DD	FLAT:$L140150
	DD	01H
	DD	FLAT:$L140151
$T140213 DD	019930520H
	DD	03H
	DD	FLAT:$T140215
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendCT_CASTLEGUILDCHG_ACK@CTServer@@QAEXKEGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z
_TEXT	SEGMENT
$T140146 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwManagerID$ = 8					; size = 4
_bRet$ = 12						; size = 1
_wCastleID$ = 16					; size = 2
_dwDefGuildID$ = 20					; size = 4
_strDefGuild$ = 24					; size = 4
_dwAtkGuildID$ = 28					; size = 4
_strAtkGuild$ = 32					; size = 4
_tTime$ = 36						; size = 8
?SendCT_CASTLEGUILDCHG_ACK@CTServer@@QAEXKEGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z PROC NEAR ; CTServer::SendCT_CASTLEGUILDCHG_ACK, COMDAT
; _this$ = ecx

; 2841 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCT_CASTLEGUILDCHG_ACK@CTServer@@QAEXKEGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	bb 01 00 00 00	 mov	 ebx, 1

; 2842 : 	CPacket* pMSG = new CPacket();

  00021	6a 1c		 push	 28			; 0000001cH
  00023	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00027	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 44 24 10	 mov	 DWORD PTR $T140146[esp+32], eax
  00033	85 c0		 test	 eax, eax
  00035	c6 44 24 1c 02	 mov	 BYTE PTR __$EHRec$[esp+40], 2
  0003a	74 0b		 je	 SHORT $L140147
  0003c	8b c8		 mov	 ecx, eax
  0003e	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00043	8b f0		 mov	 esi, eax
  00045	eb 02		 jmp	 SHORT $L140148
$L140147:
  00047	33 f6		 xor	 esi, esi
$L140148:

; 2843 : 	pMSG->SetID(CT_CASTLEGUILDCHG_ACK)
; 2844 : 		<< dwManagerID
; 2845 : 		<< bRet
; 2846 : 		<< wCastleID
; 2847 : 		<< dwDefGuildID
; 2848 : 		<< strDefGuild
; 2849 : 		<< dwAtkGuildID
; 2850 : 		<< strAtkGuild
; 2851 : 		<< tTime;

  00049	8b 44 24 44	 mov	 eax, DWORD PTR _tTime$[esp+32]
  0004d	8b 4c 24 40	 mov	 ecx, DWORD PTR _tTime$[esp+28]
  00051	8b 6c 24 3c	 mov	 ebp, DWORD PTR _strAtkGuild$[esp+28]
  00055	8b 54 24 38	 mov	 edx, DWORD PTR _dwAtkGuildID$[esp+28]
  00059	50		 push	 eax
  0005a	8b 44 24 34	 mov	 eax, DWORD PTR _dwDefGuildID$[esp+32]
  0005e	51		 push	 ecx
  0005f	8b 4c 24 34	 mov	 ecx, DWORD PTR _wCastleID$[esp+36]
  00063	55		 push	 ebp
  00064	52		 push	 edx
  00065	8b 54 24 38	 mov	 edx, DWORD PTR _bRet$[esp+44]
  00069	88 5c 24 2c	 mov	 BYTE PTR __$EHRec$[esp+56], bl
  0006d	8b 5c 24 44	 mov	 ebx, DWORD PTR _strDefGuild$[esp+44]
  00071	53		 push	 ebx
  00072	50		 push	 eax
  00073	8b 44 24 3c	 mov	 eax, DWORD PTR _dwManagerID$[esp+52]
  00077	51		 push	 ecx
  00078	52		 push	 edx
  00079	50		 push	 eax
  0007a	68 5c 60 00 00	 push	 24668			; 0000605cH
  0007f	8b ce		 mov	 ecx, esi
  00081	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008d	8b c8		 mov	 ecx, eax
  0008f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00094	8b c8		 mov	 ecx, eax
  00096	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0009b	8b c8		 mov	 ecx, eax
  0009d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a2	8b c8		 mov	 ecx, eax
  000a4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000a9	8b c8		 mov	 ecx, eax
  000ab	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b0	8b c8		 mov	 ecx, eax
  000b2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000b7	8b c8		 mov	 ecx, eax
  000b9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 2852 : 
; 2853 : 	Say(pMSG);

  000be	8b 17		 mov	 edx, DWORD PTR [edi]
  000c0	56		 push	 esi
  000c1	8b cf		 mov	 ecx, edi
  000c3	ff 12		 call	 DWORD PTR [edx]

; 2854 : }

  000c5	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000c8	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000cd	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000d0	83 ca ff	 or	 edx, -1
  000d3	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d7	4a		 dec	 edx
  000d8	85 d2		 test	 edx, edx
  000da	7f 08		 jg	 SHORT $L140181
  000dc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000de	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e0	50		 push	 eax
  000e1	ff 52 04	 call	 DWORD PTR [edx+4]
$L140181:
  000e4	8d 45 f0	 lea	 eax, DWORD PTR [ebp-16]
  000e7	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  000ef	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000f2	83 ca ff	 or	 edx, -1
  000f5	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000f9	4a		 dec	 edx
  000fa	85 d2		 test	 edx, edx
  000fc	5f		 pop	 edi
  000fd	5e		 pop	 esi
  000fe	5d		 pop	 ebp
  000ff	5b		 pop	 ebx
  00100	7f 08		 jg	 SHORT $L140208
  00102	8b 08		 mov	 ecx, DWORD PTR [eax]
  00104	8b 11		 mov	 edx, DWORD PTR [ecx]
  00106	50		 push	 eax
  00107	ff 52 04	 call	 DWORD PTR [edx+4]
$L140208:
  0010a	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  0010e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00115	83 c4 10	 add	 esp, 16			; 00000010H
  00118	c2 24 00	 ret	 36			; 00000024H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L140149:
  00000	8d 4d 1c	 lea	 ecx, DWORD PTR _strAtkGuild$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L140150:
  00008	8d 4d 14	 lea	 ecx, DWORD PTR _strDefGuild$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L140151:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T140146[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendCT_CASTLEGUILDCHG_ACK@CTServer@@QAEXKEGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T140213
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCT_CASTLEGUILDCHG_ACK@CTServer@@QAEXKEGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z ENDP ; CTServer::SendCT_CASTLEGUILDCHG_ACK
PUBLIC	?SendMW_GAINPVPPOINT_REQ@CTServer@@QAEXKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z ; CTServer::SendMW_GAINPVPPOINT_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T140260 DD	0ffffffffH
	DD	FLAT:$L140225
	DD	00H
	DD	FLAT:$L140226
$T140258 DD	019930520H
	DD	02H
	DD	FLAT:$T140260
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GAINPVPPOINT_REQ@CTServer@@QAEXKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z
_TEXT	SEGMENT
$T140222 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwOwnerID$ = 8						; size = 4
_dwPoint$ = 12						; size = 4
_bEvent$ = 16						; size = 1
_bType$ = 20						; size = 1
_bGain$ = 24						; size = 1
_strName$ = 28						; size = 4
_bClass$ = 32						; size = 1
_bLevel$ = 36						; size = 1
?SendMW_GAINPVPPOINT_REQ@CTServer@@QAEXKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z PROC NEAR ; CTServer::SendMW_GAINPVPPOINT_REQ, COMDAT
; _this$ = ecx

; 2864 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GAINPVPPOINT_REQ@CTServer@@QAEXKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 2865 : 	CPacket* pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T140222[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L140223
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L140224
$L140223:
  00043	33 f6		 xor	 esi, esi
$L140224:

; 2866 : 	pMSG->SetID(MW_GAINPVPPOINT_REQ)
; 2867 : 		<< dwOwnerID
; 2868 : 		<< dwPoint
; 2869 : 		<< bEvent
; 2870 : 		<< bType
; 2871 : 		<< bGain
; 2872 : 		<< strName
; 2873 : 		<< bClass
; 2874 : 		<< bLevel;

  00045	8b 44 24 3c	 mov	 eax, DWORD PTR _bLevel$[esp+24]
  00049	8b 4c 24 38	 mov	 ecx, DWORD PTR _bClass$[esp+24]
  0004d	8b 54 24 30	 mov	 edx, DWORD PTR _bGain$[esp+24]
  00051	50		 push	 eax
  00052	8b 44 24 30	 mov	 eax, DWORD PTR _bType$[esp+28]
  00056	51		 push	 ecx
  00057	8b 4c 24 30	 mov	 ecx, DWORD PTR _bEvent$[esp+32]
  0005b	88 5c 24 20	 mov	 BYTE PTR __$EHRec$[esp+44], bl
  0005f	8b 5c 24 3c	 mov	 ebx, DWORD PTR _strName$[esp+32]
  00063	53		 push	 ebx
  00064	52		 push	 edx
  00065	8b 54 24 34	 mov	 edx, DWORD PTR _dwPoint$[esp+40]
  00069	50		 push	 eax
  0006a	8b 44 24 34	 mov	 eax, DWORD PTR _dwOwnerID$[esp+44]
  0006e	51		 push	 ecx
  0006f	52		 push	 edx
  00070	50		 push	 eax
  00071	68 20 21 00 00	 push	 8480			; 00002120H
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008b	8b c8		 mov	 ecx, eax
  0008d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00092	8b c8		 mov	 ecx, eax
  00094	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00099	8b c8		 mov	 ecx, eax
  0009b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000a7	8b c8		 mov	 ecx, eax
  000a9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ae	8b c8		 mov	 ecx, eax
  000b0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2875 : 
; 2876 : 	Say(pMSG);

  000b5	8b 17		 mov	 edx, DWORD PTR [edi]
  000b7	56		 push	 esi
  000b8	8b cf		 mov	 ecx, edi
  000ba	ff 12		 call	 DWORD PTR [edx]

; 2877 : }

  000bc	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000bf	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000c7	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000ca	83 ca ff	 or	 edx, -1
  000cd	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d1	4a		 dec	 edx
  000d2	85 d2		 test	 edx, edx
  000d4	5f		 pop	 edi
  000d5	5e		 pop	 esi
  000d6	5b		 pop	 ebx
  000d7	7f 08		 jg	 SHORT $L140255
  000d9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000db	8b 11		 mov	 edx, DWORD PTR [ecx]
  000dd	50		 push	 eax
  000de	ff 52 04	 call	 DWORD PTR [edx+4]
$L140255:
  000e1	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000e5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ec	83 c4 10	 add	 esp, 16			; 00000010H
  000ef	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L140225:
  00000	8d 4d 18	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L140226:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T140222[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_GAINPVPPOINT_REQ@CTServer@@QAEXKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T140258
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GAINPVPPOINT_REQ@CTServer@@QAEXKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EE@Z ENDP ; CTServer::SendMW_GAINPVPPOINT_REQ
PUBLIC	?SendMW_GUILDPOINTREWARD_REQ@CTServer@@QAEXEKKKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ; CTServer::SendMW_GUILDPOINTREWARD_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T140336 DD	0ffffffffH
	DD	FLAT:$L140270
	DD	00H
	DD	FLAT:$L140271
	DD	01H
	DD	FLAT:$L140272
$T140334 DD	019930520H
	DD	03H
	DD	FLAT:$T140336
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDPOINTREWARD_REQ@CTServer@@QAEXEKKKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT
$T140267 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bResult$ = 8						; size = 1
_dwCharID$ = 12						; size = 4
_dwKey$ = 16						; size = 4
_dwRemainPoint$ = 20					; size = 4
_dwPoint$ = 24						; size = 4
_dwTargetID$ = 28					; size = 4
_strTarget$ = 32					; size = 4
_strMessage$ = 36					; size = 4
?SendMW_GUILDPOINTREWARD_REQ@CTServer@@QAEXEKKKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z PROC NEAR ; CTServer::SendMW_GUILDPOINTREWARD_REQ, COMDAT
; _this$ = ecx

; 2908 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDPOINTREWARD_REQ@CTServer@@QAEXEKKKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	bb 01 00 00 00	 mov	 ebx, 1

; 2909 : 	CPacket* pMSG = new CPacket();

  00021	6a 1c		 push	 28			; 0000001cH
  00023	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00027	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 44 24 10	 mov	 DWORD PTR $T140267[esp+32], eax
  00033	85 c0		 test	 eax, eax
  00035	c6 44 24 1c 02	 mov	 BYTE PTR __$EHRec$[esp+40], 2
  0003a	74 0b		 je	 SHORT $L140268
  0003c	8b c8		 mov	 ecx, eax
  0003e	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00043	8b f0		 mov	 esi, eax
  00045	eb 02		 jmp	 SHORT $L140269
$L140268:
  00047	33 f6		 xor	 esi, esi
$L140269:

; 2910 : 	pMSG->SetID(MW_GUILDPOINTREWARD_REQ)
; 2911 : 		<< bResult
; 2912 : 		<< dwCharID
; 2913 : 		<< dwKey
; 2914 : 		<< dwRemainPoint
; 2915 : 		<< dwPoint
; 2916 : 		<< dwTargetID
; 2917 : 		<< strTarget
; 2918 : 		<< strMessage;

  00049	8b 6c 24 40	 mov	 ebp, DWORD PTR _strMessage$[esp+28]
  0004d	8b 44 24 38	 mov	 eax, DWORD PTR _dwTargetID$[esp+28]
  00051	8b 4c 24 34	 mov	 ecx, DWORD PTR _dwPoint$[esp+28]
  00055	8b 54 24 30	 mov	 edx, DWORD PTR _dwRemainPoint$[esp+28]
  00059	55		 push	 ebp
  0005a	88 5c 24 20	 mov	 BYTE PTR __$EHRec$[esp+44], bl
  0005e	8b 5c 24 40	 mov	 ebx, DWORD PTR _strTarget$[esp+32]
  00062	53		 push	 ebx
  00063	50		 push	 eax
  00064	8b 44 24 38	 mov	 eax, DWORD PTR _dwKey$[esp+40]
  00068	51		 push	 ecx
  00069	8b 4c 24 38	 mov	 ecx, DWORD PTR _dwCharID$[esp+44]
  0006d	52		 push	 edx
  0006e	8b 54 24 38	 mov	 edx, DWORD PTR _bResult$[esp+48]
  00072	50		 push	 eax
  00073	51		 push	 ecx
  00074	52		 push	 edx
  00075	68 25 21 00 00	 push	 8485			; 00002125H
  0007a	8b ce		 mov	 ecx, esi
  0007c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a4	8b c8		 mov	 ecx, eax
  000a6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ab	8b c8		 mov	 ecx, eax
  000ad	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000b2	8b c8		 mov	 ecx, eax
  000b4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 2919 : 
; 2920 : 	Say(pMSG);

  000b9	8b 07		 mov	 eax, DWORD PTR [edi]
  000bb	56		 push	 esi
  000bc	8b cf		 mov	 ecx, edi
  000be	ff 10		 call	 DWORD PTR [eax]

; 2921 : }

  000c0	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000c3	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000c8	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000cb	83 ca ff	 or	 edx, -1
  000ce	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d2	4a		 dec	 edx
  000d3	85 d2		 test	 edx, edx
  000d5	7f 08		 jg	 SHORT $L140302
  000d7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000db	50		 push	 eax
  000dc	ff 52 04	 call	 DWORD PTR [edx+4]
$L140302:
  000df	8d 45 f0	 lea	 eax, DWORD PTR [ebp-16]
  000e2	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  000ea	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000ed	83 ca ff	 or	 edx, -1
  000f0	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000f4	4a		 dec	 edx
  000f5	85 d2		 test	 edx, edx
  000f7	5f		 pop	 edi
  000f8	5e		 pop	 esi
  000f9	5d		 pop	 ebp
  000fa	5b		 pop	 ebx
  000fb	7f 08		 jg	 SHORT $L140329
  000fd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ff	8b 11		 mov	 edx, DWORD PTR [ecx]
  00101	50		 push	 eax
  00102	ff 52 04	 call	 DWORD PTR [edx+4]
$L140329:
  00105	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00109	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00110	83 c4 10	 add	 esp, 16			; 00000010H
  00113	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L140270:
  00000	8d 4d 20	 lea	 ecx, DWORD PTR _strMessage$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L140271:
  00008	8d 4d 1c	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L140272:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T140267[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_GUILDPOINTREWARD_REQ@CTServer@@QAEXEKKKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T140334
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDPOINTREWARD_REQ@CTServer@@QAEXEKKKKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ENDP ; CTServer::SendMW_GUILDPOINTREWARD_REQ
PUBLIC	?SendMW_CASTLEGUILDCHG_REQ@CTServer@@QAEXGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z ; CTServer::SendMW_CASTLEGUILDCHG_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T140412 DD	0ffffffffH
	DD	FLAT:$L140346
	DD	00H
	DD	FLAT:$L140347
	DD	01H
	DD	FLAT:$L140348
$T140410 DD	019930520H
	DD	03H
	DD	FLAT:$T140412
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CASTLEGUILDCHG_REQ@CTServer@@QAEXGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z
_TEXT	SEGMENT
$T140343 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wCastleID$ = 8						; size = 2
_dwDefGuildID$ = 12					; size = 4
_strDefGuild$ = 16					; size = 4
_dwAtkGuildID$ = 20					; size = 4
_strAtkGuild$ = 24					; size = 4
_tTime$ = 28						; size = 8
?SendMW_CASTLEGUILDCHG_REQ@CTServer@@QAEXGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z PROC NEAR ; CTServer::SendMW_CASTLEGUILDCHG_REQ, COMDAT
; _this$ = ecx

; 2996 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CASTLEGUILDCHG_REQ@CTServer@@QAEXGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	bb 01 00 00 00	 mov	 ebx, 1

; 2997 : 	CPacket* pMSG = new CPacket();

  00021	6a 1c		 push	 28			; 0000001cH
  00023	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00027	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 44 24 10	 mov	 DWORD PTR $T140343[esp+32], eax
  00033	85 c0		 test	 eax, eax
  00035	c6 44 24 1c 02	 mov	 BYTE PTR __$EHRec$[esp+40], 2
  0003a	74 0b		 je	 SHORT $L140344
  0003c	8b c8		 mov	 ecx, eax
  0003e	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00043	8b f0		 mov	 esi, eax
  00045	eb 02		 jmp	 SHORT $L140345
$L140344:
  00047	33 f6		 xor	 esi, esi
$L140345:

; 2998 : 	pMSG->SetID(MW_CASTLEGUILDCHG_REQ)
; 2999 : 		<< wCastleID
; 3000 : 		<< dwDefGuildID
; 3001 : 		<< strDefGuild
; 3002 : 		<< dwAtkGuildID
; 3003 : 		<< strAtkGuild
; 3004 : 		<< tTime;

  00049	8b 44 24 3c	 mov	 eax, DWORD PTR _tTime$[esp+32]
  0004d	8b 4c 24 38	 mov	 ecx, DWORD PTR _tTime$[esp+28]
  00051	8b 6c 24 34	 mov	 ebp, DWORD PTR _strAtkGuild$[esp+28]
  00055	8b 54 24 30	 mov	 edx, DWORD PTR _dwAtkGuildID$[esp+28]
  00059	50		 push	 eax
  0005a	8b 44 24 2c	 mov	 eax, DWORD PTR _dwDefGuildID$[esp+32]
  0005e	51		 push	 ecx
  0005f	8b 4c 24 2c	 mov	 ecx, DWORD PTR _wCastleID$[esp+36]
  00063	55		 push	 ebp
  00064	52		 push	 edx
  00065	88 5c 24 2c	 mov	 BYTE PTR __$EHRec$[esp+56], bl
  00069	8b 5c 24 3c	 mov	 ebx, DWORD PTR _strDefGuild$[esp+44]
  0006d	53		 push	 ebx
  0006e	50		 push	 eax
  0006f	51		 push	 ecx
  00070	68 2d 21 00 00	 push	 8493			; 0000212dH
  00075	8b ce		 mov	 ecx, esi
  00077	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007c	8b c8		 mov	 ecx, eax
  0007e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00098	8b c8		 mov	 ecx, eax
  0009a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0009f	8b c8		 mov	 ecx, eax
  000a1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 3005 : 
; 3006 : 	Say(pMSG);

  000a6	8b 17		 mov	 edx, DWORD PTR [edi]
  000a8	56		 push	 esi
  000a9	8b cf		 mov	 ecx, edi
  000ab	ff 12		 call	 DWORD PTR [edx]

; 3007 : }

  000ad	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000b0	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000b5	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000b8	83 ca ff	 or	 edx, -1
  000bb	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000bf	4a		 dec	 edx
  000c0	85 d2		 test	 edx, edx
  000c2	7f 08		 jg	 SHORT $L140378
  000c4	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c6	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c8	50		 push	 eax
  000c9	ff 52 04	 call	 DWORD PTR [edx+4]
$L140378:
  000cc	8d 45 f0	 lea	 eax, DWORD PTR [ebp-16]
  000cf	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  000d7	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000da	83 ca ff	 or	 edx, -1
  000dd	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000e1	4a		 dec	 edx
  000e2	85 d2		 test	 edx, edx
  000e4	5f		 pop	 edi
  000e5	5e		 pop	 esi
  000e6	5d		 pop	 ebp
  000e7	5b		 pop	 ebx
  000e8	7f 08		 jg	 SHORT $L140405
  000ea	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ec	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ee	50		 push	 eax
  000ef	ff 52 04	 call	 DWORD PTR [edx+4]
$L140405:
  000f2	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000f6	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000fd	83 c4 10	 add	 esp, 16			; 00000010H
  00100	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L140346:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strAtkGuild$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L140347:
  00008	8d 4d 0c	 lea	 ecx, DWORD PTR _strDefGuild$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L140348:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T140343[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_CASTLEGUILDCHG_REQ@CTServer@@QAEXGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T140410
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CASTLEGUILDCHG_REQ@CTServer@@QAEXGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z ENDP ; CTServer::SendMW_CASTLEGUILDCHG_REQ
PUBLIC	?SendMW_EVENTMSG_REQ@CTServer@@QAEXEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTServer::SendMW_EVENTMSG_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T140457 DD	0ffffffffH
	DD	FLAT:$L140422
	DD	00H
	DD	FLAT:$L140423
$T140455 DD	019930520H
	DD	02H
	DD	FLAT:$T140457
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_EVENTMSG_REQ@CTServer@@QAEXEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T140419 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bEventID$ = 8						; size = 1
_bEventMsgType$ = 12					; size = 1
_strMsg$ = 16						; size = 4
?SendMW_EVENTMSG_REQ@CTServer@@QAEXEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTServer::SendMW_EVENTMSG_REQ, COMDAT
; _this$ = ecx

; 3023 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_EVENTMSG_REQ@CTServer@@QAEXEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 3024 : 	CPacket* pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T140419[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L140420
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L140421
$L140420:
  00043	33 f6		 xor	 esi, esi
$L140421:

; 3025 : 	pMSG->SetID(MW_EVENTMSG_REQ)
; 3026 : 		<< bEventID
; 3027 : 		<< bEventMsgType
; 3028 : 		<< strMsg;

  00045	8b 44 24 24	 mov	 eax, DWORD PTR _bEventMsgType$[esp+24]
  00049	8b 4c 24 20	 mov	 ecx, DWORD PTR _bEventID$[esp+24]
  0004d	88 5c 24 18	 mov	 BYTE PTR __$EHRec$[esp+36], bl
  00051	8b 5c 24 28	 mov	 ebx, DWORD PTR _strMsg$[esp+24]
  00055	53		 push	 ebx
  00056	50		 push	 eax
  00057	51		 push	 ecx
  00058	68 31 21 00 00	 push	 8497			; 00002131H
  0005d	8b ce		 mov	 ecx, esi
  0005f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00064	8b c8		 mov	 ecx, eax
  00066	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0006b	8b c8		 mov	 ecx, eax
  0006d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 3029 : 
; 3030 : 	Say(pMSG);

  00079	8b 17		 mov	 edx, DWORD PTR [edi]
  0007b	56		 push	 esi
  0007c	8b cf		 mov	 ecx, edi
  0007e	ff 12		 call	 DWORD PTR [edx]

; 3031 : }

  00080	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  00083	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0008b	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0008e	83 ca ff	 or	 edx, -1
  00091	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00095	4a		 dec	 edx
  00096	85 d2		 test	 edx, edx
  00098	5f		 pop	 edi
  00099	5e		 pop	 esi
  0009a	5b		 pop	 ebx
  0009b	7f 08		 jg	 SHORT $L140450
  0009d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009f	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a1	50		 push	 eax
  000a2	ff 52 04	 call	 DWORD PTR [edx+4]
$L140450:
  000a5	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000a9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b0	83 c4 10	 add	 esp, 16			; 00000010H
  000b3	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L140422:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strMsg$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L140423:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T140419[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_EVENTMSG_REQ@CTServer@@QAEXEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T140455
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_EVENTMSG_REQ@CTServer@@QAEXEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTServer::SendMW_EVENTMSG_REQ
PUBLIC	?SendMW_WORLDPOSTSEND_REQ@CTServer@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00GEG@Z ; CTServer::SendMW_WORLDPOSTSEND_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T140564 DD	0ffffffffH
	DD	FLAT:$L140467
	DD	00H
	DD	FLAT:$L140468
	DD	01H
	DD	FLAT:$L140469
	DD	02H
	DD	FLAT:$L140470
$T140562 DD	019930520H
	DD	04H
	DD	FLAT:$T140564
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_WORLDPOSTSEND_REQ@CTServer@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00GEG@Z
_TEXT	SEGMENT
$T140464 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bType$ = 8						; size = 1
_dwRecvID$ = 12						; size = 4
_strRecver$ = 16					; size = 4
_strTitle$ = 20						; size = 4
_strMessage$ = 24					; size = 4
_wItemID$ = 28						; size = 2
_bItemNum$ = 32						; size = 1
_wUseTime$ = 36						; size = 2
?SendMW_WORLDPOSTSEND_REQ@CTServer@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00GEG@Z PROC NEAR ; CTServer::SendMW_WORLDPOSTSEND_REQ, COMDAT
; _this$ = ecx

; 3069 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_WORLDPOSTSEND_REQ@CTServer@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00GEG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	bb 02 00 00 00	 mov	 ebx, 2

; 3070 : 	CPacket* pMSG = new CPacket();

  00021	6a 1c		 push	 28			; 0000001cH
  00023	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00027	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 44 24 10	 mov	 DWORD PTR $T140464[esp+32], eax
  00033	85 c0		 test	 eax, eax
  00035	c6 44 24 1c 03	 mov	 BYTE PTR __$EHRec$[esp+40], 3
  0003a	74 0b		 je	 SHORT $L140465
  0003c	8b c8		 mov	 ecx, eax
  0003e	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00043	8b f0		 mov	 esi, eax
  00045	eb 02		 jmp	 SHORT $L140466
$L140465:
  00047	33 f6		 xor	 esi, esi
$L140466:

; 3071 : 	pMSG->SetID(MW_WORLDPOSTSEND_REQ)
; 3072 : 		<< bType
; 3073 : 		<< dwRecvID
; 3074 : 		<< strRecver
; 3075 : 		<< strTitle
; 3076 : 		<< strMessage
; 3077 : 		<< wItemID
; 3078 : 		<< bItemNum
; 3079 : 		<< wUseTime;

  00049	8b 44 24 40	 mov	 eax, DWORD PTR _wUseTime$[esp+28]
  0004d	8b 4c 24 3c	 mov	 ecx, DWORD PTR _bItemNum$[esp+28]
  00051	8b 54 24 38	 mov	 edx, DWORD PTR _wItemID$[esp+28]
  00055	8b 6c 24 30	 mov	 ebp, DWORD PTR _strTitle$[esp+28]
  00059	50		 push	 eax
  0005a	8b 44 24 38	 mov	 eax, DWORD PTR _strMessage$[esp+32]
  0005e	51		 push	 ecx
  0005f	8b 4c 24 30	 mov	 ecx, DWORD PTR _dwRecvID$[esp+36]
  00063	52		 push	 edx
  00064	8b 54 24 30	 mov	 edx, DWORD PTR _bType$[esp+40]
  00068	50		 push	 eax
  00069	55		 push	 ebp
  0006a	88 5c 24 30	 mov	 BYTE PTR __$EHRec$[esp+60], bl
  0006e	8b 5c 24 40	 mov	 ebx, DWORD PTR _strRecver$[esp+48]
  00072	53		 push	 ebx
  00073	51		 push	 ecx
  00074	52		 push	 edx
  00075	68 3b 21 00 00	 push	 8507			; 0000213bH
  0007a	8b ce		 mov	 ecx, esi
  0007c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000a4	8b c8		 mov	 ecx, eax
  000a6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000ab	8b c8		 mov	 ecx, eax
  000ad	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000b2	8b c8		 mov	 ecx, eax
  000b4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 3080 : 
; 3081 : 	Say(pMSG);

  000b9	8b 07		 mov	 eax, DWORD PTR [edi]
  000bb	56		 push	 esi
  000bc	8b cf		 mov	 ecx, edi
  000be	ff 10		 call	 DWORD PTR [eax]

; 3082 : }

  000c0	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000c3	c6 44 24 1c 01	 mov	 BYTE PTR __$EHRec$[esp+40], 1
  000c8	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000cb	83 ca ff	 or	 edx, -1
  000ce	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000d2	4a		 dec	 edx
  000d3	85 d2		 test	 edx, edx
  000d5	7f 08		 jg	 SHORT $L140503
  000d7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000db	50		 push	 eax
  000dc	ff 52 04	 call	 DWORD PTR [edx+4]
$L140503:
  000df	8d 45 f0	 lea	 eax, DWORD PTR [ebp-16]
  000e2	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000e7	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000ea	83 ca ff	 or	 edx, -1
  000ed	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000f1	4a		 dec	 edx
  000f2	85 d2		 test	 edx, edx
  000f4	5f		 pop	 edi
  000f5	5e		 pop	 esi
  000f6	5d		 pop	 ebp
  000f7	5b		 pop	 ebx
  000f8	7f 08		 jg	 SHORT $L140530
  000fa	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fc	8b 11		 mov	 edx, DWORD PTR [ecx]
  000fe	50		 push	 eax
  000ff	ff 52 04	 call	 DWORD PTR [edx+4]
$L140530:
  00102	8b 44 24 24	 mov	 eax, DWORD PTR _strMessage$[esp+12]
  00106	83 c0 f0	 add	 eax, -16		; fffffff0H
  00109	c7 44 24 0c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+24], -1
  00111	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00114	83 ca ff	 or	 edx, -1
  00117	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0011b	4a		 dec	 edx
  0011c	85 d2		 test	 edx, edx
  0011e	7f 08		 jg	 SHORT $L140557
  00120	8b 08		 mov	 ecx, DWORD PTR [eax]
  00122	8b 11		 mov	 edx, DWORD PTR [ecx]
  00124	50		 push	 eax
  00125	ff 52 04	 call	 DWORD PTR [edx+4]
$L140557:
  00128	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  0012c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00133	83 c4 10	 add	 esp, 16			; 00000010H
  00136	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L140467:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strMessage$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L140468:
  00008	8d 4d 10	 lea	 ecx, DWORD PTR _strTitle$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L140469:
  00010	8d 4d 0c	 lea	 ecx, DWORD PTR _strRecver$[ebp-4]
  00013	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L140470:
  00018	8b 45 f0	 mov	 eax, DWORD PTR $T140464[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00021	59		 pop	 ecx
  00022	c3		 ret	 0
__ehhandler$?SendMW_WORLDPOSTSEND_REQ@CTServer@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00GEG@Z:
  00023	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T140562
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_WORLDPOSTSEND_REQ@CTServer@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00GEG@Z ENDP ; CTServer::SendMW_WORLDPOSTSEND_REQ
PUBLIC	?SendMW_WORLDPOSTSEND_REQ@CTServer@@QAEXEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z ; CTServer::SendMW_WORLDPOSTSEND_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T140640 DD	0ffffffffH
	DD	FLAT:$L140574
	DD	00H
	DD	FLAT:$L140575
	DD	01H
	DD	FLAT:$L140576
$T140638 DD	019930520H
	DD	03H
	DD	FLAT:$T140640
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_WORLDPOSTSEND_REQ@CTServer@@QAEXEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z
_TEXT	SEGMENT
$T140571 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bType$ = 8						; size = 1
_dwValue$ = 12						; size = 4
_dwSenderID$ = 16					; size = 4
_strSender$ = 20					; size = 4
_dwRecvID$ = 24						; size = 4
_strRecver$ = 28					; size = 4
_dlValue$ = 32						; size = 8
?SendMW_WORLDPOSTSEND_REQ@CTServer@@QAEXEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z PROC NEAR ; CTServer::SendMW_WORLDPOSTSEND_REQ, COMDAT
; _this$ = ecx

; 3090 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_WORLDPOSTSEND_REQ@CTServer@@QAEXEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx
  0001c	bb 01 00 00 00	 mov	 ebx, 1

; 3091 : 	CPacket* pMSG = new CPacket();

  00021	6a 1c		 push	 28			; 0000001cH
  00023	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00027	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 44 24 10	 mov	 DWORD PTR $T140571[esp+32], eax
  00033	85 c0		 test	 eax, eax
  00035	c6 44 24 1c 02	 mov	 BYTE PTR __$EHRec$[esp+40], 2
  0003a	74 0b		 je	 SHORT $L140572
  0003c	8b c8		 mov	 ecx, eax
  0003e	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00043	8b f0		 mov	 esi, eax
  00045	eb 02		 jmp	 SHORT $L140573
$L140572:
  00047	33 f6		 xor	 esi, esi
$L140573:

; 3092 : 	pMSG->SetID(MW_WORLDPOSTSEND_REQ)
; 3093 : 		<< bType
; 3094 : 		<< dwValue
; 3095 : 		<< dwSenderID
; 3096 : 		<< strSender
; 3097 : 		<< dwRecvID
; 3098 : 		<< strRecver
; 3099 : 		<< dlValue;

  00049	8b 44 24 40	 mov	 eax, DWORD PTR _dlValue$[esp+32]
  0004d	8b 4c 24 3c	 mov	 ecx, DWORD PTR _dlValue$[esp+28]
  00051	8b 6c 24 38	 mov	 ebp, DWORD PTR _strRecver$[esp+28]
  00055	8b 54 24 34	 mov	 edx, DWORD PTR _dwRecvID$[esp+28]
  00059	50		 push	 eax
  0005a	8b 44 24 30	 mov	 eax, DWORD PTR _dwSenderID$[esp+32]
  0005e	51		 push	 ecx
  0005f	8b 4c 24 30	 mov	 ecx, DWORD PTR _dwValue$[esp+36]
  00063	55		 push	 ebp
  00064	52		 push	 edx
  00065	8b 54 24 34	 mov	 edx, DWORD PTR _bType$[esp+44]
  00069	88 5c 24 2c	 mov	 BYTE PTR __$EHRec$[esp+56], bl
  0006d	8b 5c 24 40	 mov	 ebx, DWORD PTR _strSender$[esp+44]
  00071	53		 push	 ebx
  00072	50		 push	 eax
  00073	51		 push	 ecx
  00074	52		 push	 edx
  00075	68 3b 21 00 00	 push	 8507			; 0000213bH
  0007a	8b ce		 mov	 ecx, esi
  0007c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0009d	8b c8		 mov	 ecx, eax
  0009f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a4	8b c8		 mov	 ecx, eax
  000a6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000ab	8b c8		 mov	 ecx, eax
  000ad	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 3100 : 
; 3101 : 	Say(pMSG);

  000b2	8b 07		 mov	 eax, DWORD PTR [edi]
  000b4	56		 push	 esi
  000b5	8b cf		 mov	 ecx, edi
  000b7	ff 10		 call	 DWORD PTR [eax]

; 3102 : }

  000b9	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000bc	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000c1	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000c4	83 ca ff	 or	 edx, -1
  000c7	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000cb	4a		 dec	 edx
  000cc	85 d2		 test	 edx, edx
  000ce	7f 08		 jg	 SHORT $L140606
  000d0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d2	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d4	50		 push	 eax
  000d5	ff 52 04	 call	 DWORD PTR [edx+4]
$L140606:
  000d8	8d 45 f0	 lea	 eax, DWORD PTR [ebp-16]
  000db	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  000e3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000e6	83 ca ff	 or	 edx, -1
  000e9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ed	4a		 dec	 edx
  000ee	85 d2		 test	 edx, edx
  000f0	5f		 pop	 edi
  000f1	5e		 pop	 esi
  000f2	5d		 pop	 ebp
  000f3	5b		 pop	 ebx
  000f4	7f 08		 jg	 SHORT $L140633
  000f6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f8	8b 11		 mov	 edx, DWORD PTR [ecx]
  000fa	50		 push	 eax
  000fb	ff 52 04	 call	 DWORD PTR [edx+4]
$L140633:
  000fe	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00102	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00109	83 c4 10	 add	 esp, 16			; 00000010H
  0010c	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L140574:
  00000	8d 4d 18	 lea	 ecx, DWORD PTR _strRecver$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L140575:
  00008	8d 4d 10	 lea	 ecx, DWORD PTR _strSender$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L140576:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T140571[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_WORLDPOSTSEND_REQ@CTServer@@QAEXEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T140638
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_WORLDPOSTSEND_REQ@CTServer@@QAEXEKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K0_J@Z ENDP ; CTServer::SendMW_WORLDPOSTSEND_REQ
PUBLIC	?SendMW_WARLORDSAY_REQ@CTServer@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTServer::SendMW_WARLORDSAY_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T140685 DD	0ffffffffH
	DD	FLAT:$L140650
	DD	00H
	DD	FLAT:$L140651
$T140683 DD	019930520H
	DD	02H
	DD	FLAT:$T140685
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_WARLORDSAY_REQ@CTServer@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T140647 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bType$ = 8						; size = 1
_bRankMonth$ = 12					; size = 1
_dwCharID$ = 16						; size = 4
_strSay$ = 20						; size = 4
?SendMW_WARLORDSAY_REQ@CTServer@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTServer::SendMW_WARLORDSAY_REQ, COMDAT
; _this$ = ecx

; 3184 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_WARLORDSAY_REQ@CTServer@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 3185 : 	CPacket* pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T140647[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L140648
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L140649
$L140648:
  00043	33 f6		 xor	 esi, esi
$L140649:

; 3186 : 	pMSG->SetID(MW_WARLORDSAY_REQ)
; 3187 : 		<< bType
; 3188 : 		<< bRankMonth
; 3189 : 		<< dwCharID
; 3190 : 		<< strSay;

  00045	8b 44 24 28	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  00049	8b 4c 24 24	 mov	 ecx, DWORD PTR _bRankMonth$[esp+24]
  0004d	8b 54 24 20	 mov	 edx, DWORD PTR _bType$[esp+24]
  00051	88 5c 24 18	 mov	 BYTE PTR __$EHRec$[esp+36], bl
  00055	8b 5c 24 2c	 mov	 ebx, DWORD PTR _strSay$[esp+24]
  00059	53		 push	 ebx
  0005a	50		 push	 eax
  0005b	51		 push	 ecx
  0005c	52		 push	 edx
  0005d	68 41 21 00 00	 push	 8513			; 00002141H
  00062	8b ce		 mov	 ecx, esi
  00064	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00069	8b c8		 mov	 ecx, eax
  0006b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00070	8b c8		 mov	 ecx, eax
  00072	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 3191 : 
; 3192 : 	Say(pMSG);

  00085	8b 07		 mov	 eax, DWORD PTR [edi]
  00087	56		 push	 esi
  00088	8b cf		 mov	 ecx, edi
  0008a	ff 10		 call	 DWORD PTR [eax]

; 3193 : }

  0008c	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0008f	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00097	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0009a	83 ca ff	 or	 edx, -1
  0009d	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000a1	4a		 dec	 edx
  000a2	85 d2		 test	 edx, edx
  000a4	5f		 pop	 edi
  000a5	5e		 pop	 esi
  000a6	5b		 pop	 ebx
  000a7	7f 08		 jg	 SHORT $L140678
  000a9	8b 08		 mov	 ecx, DWORD PTR [eax]
  000ab	8b 11		 mov	 edx, DWORD PTR [ecx]
  000ad	50		 push	 eax
  000ae	ff 52 04	 call	 DWORD PTR [edx+4]
$L140678:
  000b1	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000b5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000bc	83 c4 10	 add	 esp, 16			; 00000010H
  000bf	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L140650:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strSay$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L140651:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T140647[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_WARLORDSAY_REQ@CTServer@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T140683
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_WARLORDSAY_REQ@CTServer@@QAEXEEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTServer::SendMW_WARLORDSAY_REQ
PUBLIC	?SendMW_TOURNAMENTBATPOINT_REQ@CTServer@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z ; CTServer::SendMW_TOURNAMENTBATPOINT_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T140730 DD	0ffffffffH
	DD	FLAT:$L140695
	DD	00H
	DD	FLAT:$L140696
$T140728 DD	019930520H
	DD	02H
	DD	FLAT:$T140730
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_TOURNAMENTBATPOINT_REQ@CTServer@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z
_TEXT	SEGMENT
$T140692 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_strName$ = 12						; size = 4
_dwAmount$ = 16						; size = 4
?SendMW_TOURNAMENTBATPOINT_REQ@CTServer@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z PROC NEAR ; CTServer::SendMW_TOURNAMENTBATPOINT_REQ, COMDAT
; _this$ = ecx

; 3352 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TOURNAMENTBATPOINT_REQ@CTServer@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 3353 : 	CPacket * pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T140692[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L140693
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L140694
$L140693:
  00043	33 f6		 xor	 esi, esi
$L140694:

; 3354 : 	pMSG->SetID(MW_TOURNAMENTBATPOINT_REQ)
; 3355 : 		<< dwCharID
; 3356 : 		<< strName
; 3357 : 		<< dwAmount;

  00045	8b 44 24 28	 mov	 eax, DWORD PTR _dwAmount$[esp+24]
  00049	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwCharID$[esp+24]
  0004d	50		 push	 eax
  0004e	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl
  00052	8b 5c 24 28	 mov	 ebx, DWORD PTR _strName$[esp+28]
  00056	53		 push	 ebx
  00057	51		 push	 ecx
  00058	68 61 21 00 00	 push	 8545			; 00002161H
  0005d	8b ce		 mov	 ecx, esi
  0005f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00064	8b c8		 mov	 ecx, eax
  00066	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006b	8b c8		 mov	 ecx, eax
  0006d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 3358 : 
; 3359 : 	Say(pMSG);

  00079	8b 17		 mov	 edx, DWORD PTR [edi]
  0007b	56		 push	 esi
  0007c	8b cf		 mov	 ecx, edi
  0007e	ff 12		 call	 DWORD PTR [edx]

; 3360 : }

  00080	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  00083	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0008b	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0008e	83 ca ff	 or	 edx, -1
  00091	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00095	4a		 dec	 edx
  00096	85 d2		 test	 edx, edx
  00098	5f		 pop	 edi
  00099	5e		 pop	 esi
  0009a	5b		 pop	 ebx
  0009b	7f 08		 jg	 SHORT $L140723
  0009d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0009f	8b 11		 mov	 edx, DWORD PTR [ecx]
  000a1	50		 push	 eax
  000a2	ff 52 04	 call	 DWORD PTR [edx+4]
$L140723:
  000a5	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000a9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b0	83 c4 10	 add	 esp, 16			; 00000010H
  000b3	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L140695:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L140696:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T140692[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_TOURNAMENTBATPOINT_REQ@CTServer@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T140728
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TOURNAMENTBATPOINT_REQ@CTServer@@QAEXKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@K@Z ENDP ; CTServer::SendMW_TOURNAMENTBATPOINT_REQ
PUBLIC	?back@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAUtagTENTRYRECORD@@XZ ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::back
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?back@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAUtagTENTRYRECORD@@XZ
_TEXT	SEGMENT
?back@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAUtagTENTRYRECORD@@XZ PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::back, COMDAT
; _this$ = ecx

; 570  : 		return (*(end() - 1));

  00000	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00003	83 e8 2c	 sub	 eax, 44			; 0000002cH

; 571  : 		}

  00006	c3		 ret	 0
?back@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAUtagTENTRYRECORD@@XZ ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::back
_TEXT	ENDS
PUBLIC	??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ	; std::vector<unsigned short,std::allocator<unsigned short> >::~vector<unsigned short,std::allocator<unsigned short> >
; Function compile flags: /Ogty
;	COMDAT ??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ PROC NEAR	; std::vector<unsigned short,std::allocator<unsigned short> >::~vector<unsigned short,std::allocator<unsigned short> >, COMDAT
; _this$ = ecx

; 387  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 388  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L140789
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L140789:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 389  : 		}

  00029	c3		 ret	 0
??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::~vector<unsigned short,std::allocator<unsigned short> >
_TEXT	ENDS
PUBLIC	??A?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAEAAPAUtagTCHARACTER@@I@Z ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAEAAPAUtagTCHARACTER@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAEAAPAUtagTCHARACTER@@I@Z PROC NEAR ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@PAUtagTCHARACTER@@V?$allocator@PAUtagTCHARACTER@@@std@@@std@@QAEAAPAUtagTCHARACTER@@I@Z ENDP ; std::vector<tagTCHARACTER *,std::allocator<tagTCHARACTER *> >::operator[]
_TEXT	ENDS
PUBLIC	??A?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAEAAUtagTNMTREWARD@@I@Z ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAEAAUtagTNMTREWARD@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAEAAUtagTNMTREWARD@@I@Z PROC NEAR ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pos$[esp-4]
  00004	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00007	c1 e0 04	 shl	 eax, 4
  0000a	03 c2		 add	 eax, edx

; 556  : 		}

  0000c	c2 04 00	 ret	 4
??A?$vector@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@QAEAAUtagTNMTREWARD@@I@Z ENDP ; std::vector<tagTNMTREWARD,std::allocator<tagTNMTREWARD> >::operator[]
_TEXT	ENDS
PUBLIC	??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z ; std::vector<unsigned long,std::allocator<unsigned long> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z PROC NEAR ; std::vector<unsigned long,std::allocator<unsigned long> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@KV?$allocator@K@std@@@std@@QAEAAKI@Z ENDP	; std::vector<unsigned long,std::allocator<unsigned long> >::operator[]
_TEXT	ENDS
PUBLIC	??A?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEAAUtagTGUILDPOINTREWARD@@I@Z ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEAAUtagTGUILDPOINTREWARD@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEAAUtagTGUILDPOINTREWARD@@I@Z PROC NEAR ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pos$[esp-4]
  00004	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00007	c1 e0 04	 shl	 eax, 4
  0000a	03 c2		 add	 eax, edx

; 556  : 		}

  0000c	c2 04 00	 ret	 4
??A?$vector@UtagTGUILDPOINTREWARD@@V?$allocator@UtagTGUILDPOINTREWARD@@@std@@@std@@QAEAAUtagTGUILDPOINTREWARD@@I@Z ENDP ; std::vector<tagTGUILDPOINTREWARD,std::allocator<tagTGUILDPOINTREWARD> >::operator[]
_TEXT	ENDS
PUBLIC	??Citerator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBEUtagCASTLETOP3@@@2@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::iterator::operator->
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Citerator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBEUtagCASTLETOP3@@@2@XZ
_TEXT	SEGMENT
??Citerator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBEUtagCASTLETOP3@@@2@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::iterator::operator->, COMDAT
; _this$ = ecx

; 322  : 			return (&**this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 c0 0c	 add	 eax, 12			; 0000000cH

; 323  : 			}

  00005	c3		 ret	 0
??Citerator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QBEPAU?$pair@$$CBEUtagCASTLETOP3@@@2@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::iterator::operator->
_TEXT	ENDS
PUBLIC	??A?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAEAAULOTPACKET@@I@Z ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::operator[]
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??A?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAEAAULOTPACKET@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAEAAULOTPACKET@@I@Z PROC NEAR ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pos$[esp-4]
  00004	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00007	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0000a	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]

; 556  : 		}

  0000d	c2 04 00	 ret	 4
??A?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@QAEAAULOTPACKET@@I@Z ENDP ; std::vector<LOTPACKET,std::allocator<LOTPACKET> >::operator[]
_TEXT	ENDS
PUBLIC	??A?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAEAAUtagTGUILDTACTICSWANTED@@I@Z ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAEAAUtagTGUILDTACTICSWANTED@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAEAAUtagTGUILDTACTICSWANTED@@I@Z PROC NEAR ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pos$[esp-4]
  00004	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00007	c1 e0 06	 shl	 eax, 6
  0000a	03 c2		 add	 eax, edx

; 556  : 		}

  0000c	c2 04 00	 ret	 4
??A?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@QAEAAUtagTGUILDTACTICSWANTED@@I@Z ENDP ; std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >::operator[]
_TEXT	ENDS
PUBLIC	?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::lower_bound
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Keyval$ = 12						; size = 4
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::lower_bound, COMDAT
; _this$ = ecx

; 810  : 		return (_TREE_ITERATOR(_Lbound(_Keyval)));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00006	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00009	84 d2		 test	 dl, dl
  0000b	75 1d		 jne	 SHORT $L141110
  0000d	8b 54 24 08	 mov	 edx, DWORD PTR __Keyval$[esp-4]
  00011	8b 12		 mov	 edx, DWORD PTR [edx]
  00013	53		 push	 ebx
$L141097:
  00014	39 50 0c	 cmp	 DWORD PTR [eax+12], edx
  00017	73 05		 jae	 SHORT $L141099
  00019	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001c	eb 04		 jmp	 SHORT $L141100
$L141099:
  0001e	8b c8		 mov	 ecx, eax
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L141100:
  00022	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00025	84 db		 test	 bl, bl
  00027	74 eb		 je	 SHORT $L141097
  00029	5b		 pop	 ebx
$L141110:
  0002a	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0002e	89 08		 mov	 DWORD PTR [eax], ecx

; 811  : 		}

  00030	c2 08 00	 ret	 8
?lower_bound@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::lower_bound
_TEXT	ENDS
PUBLIC	?_Tidy@?$vector@_JV?$allocator@_J@std@@@std@@IAEXXZ ; std::vector<__int64,std::allocator<__int64> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?_Tidy@?$vector@_JV?$allocator@_J@std@@@std@@IAEXXZ
_TEXT	SEGMENT
?_Tidy@?$vector@_JV?$allocator@_J@std@@@std@@IAEXXZ PROC NEAR ; std::vector<__int64,std::allocator<__int64> >::_Tidy, COMDAT
; _this$ = ecx

; 791  : 		{	// free all storage

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 792  : 		if (_Myfirst != 0)

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L141116

; 793  : 			{	// something to free, destroy and deallocate it
; 794  : 			_Destroy(_Myfirst, _Mylast);
; 795  : 			this->_Alval.deallocate(_Myfirst, _Myend - _Myfirst);

  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L141116:

; 796  : 			}
; 797  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;

  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 798  : 		}

  00029	c3		 ret	 0
?_Tidy@?$vector@_JV?$allocator@_J@std@@@std@@IAEXXZ ENDP ; std::vector<__int64,std::allocator<__int64> >::_Tidy
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??$_Uninit_copy@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@PA_JV?$allocator@_J@3@@std@@YAPA_JVconst_iterator@?$vector@_JV?$allocator@_J@std@@@0@0PA_JAAV?$allocator@_J@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<__int64,std::allocator<__int64> >::const_iterator,__int64 *,std::allocator<__int64> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninit_copy@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@PA_JV?$allocator@_J@3@@std@@YAPA_JVconst_iterator@?$vector@_JV?$allocator@_J@std@@@0@0PA_JAAV?$allocator@_J@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
??$_Uninit_copy@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@PA_JV?$allocator@_J@3@@std@@YAPA_JVconst_iterator@?$vector@_JV?$allocator@_J@std@@@0@0PA_JAAV?$allocator@_J@0@U_Nonscalar_ptr_iterator_tag@0@@Z PROC NEAR ; std::_Uninit_copy<std::vector<__int64,std::allocator<__int64> >::const_iterator,__int64 *,std::allocator<__int64> >, COMDAT

; 78   : 	_FwdIt _Next = _Dest;
; 79   : 
; 80   : 	_TRY_BEGIN
; 81   : 	for (; _First != _Last; ++_Dest, ++_First)

  00000	8b 4c 24 04	 mov	 ecx, DWORD PTR __First$[esp-4]
  00004	8b 54 24 08	 mov	 edx, DWORD PTR __Last$[esp-4]
  00008	3b ca		 cmp	 ecx, edx
  0000a	8b 44 24 0c	 mov	 eax, DWORD PTR __Dest$[esp-4]
  0000e	74 1a		 je	 SHORT $L130821
  00010	56		 push	 esi
$L141191:

; 82   : 		_Al.construct(_Dest, *_First);

  00011	85 c0		 test	 eax, eax
  00013	74 0a		 je	 SHORT $L130820
  00015	8b 31		 mov	 esi, DWORD PTR [ecx]
  00017	89 30		 mov	 DWORD PTR [eax], esi
  00019	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  0001c	89 70 04	 mov	 DWORD PTR [eax+4], esi
$L130820:
  0001f	83 c1 08	 add	 ecx, 8
  00022	83 c0 08	 add	 eax, 8
  00025	3b ca		 cmp	 ecx, edx
  00027	75 e8		 jne	 SHORT $L141191
  00029	5e		 pop	 esi
$L130821:

; 83   : 	_CATCH_ALL
; 84   : 	for (; _Next != _Dest; ++_Next)
; 85   : 		_Al.destroy(_Next);
; 86   : 	_RERAISE;
; 87   : 	_CATCH_END
; 88   : 	return (_Dest);
; 89   : 	}

  0002a	c3		 ret	 0
??$_Uninit_copy@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@PA_JV?$allocator@_J@3@@std@@YAPA_JVconst_iterator@?$vector@_JV?$allocator@_J@std@@@0@0PA_JAAV?$allocator@_J@0@U_Nonscalar_ptr_iterator_tag@0@@Z ENDP ; std::_Uninit_copy<std::vector<__int64,std::allocator<__int64> >::const_iterator,__int64 *,std::allocator<__int64> >
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 456  : 		{	// destroy the string

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 457  : 		_Tidy(true);

  00003	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00007	72 0c		 jb	 SHORT $L141276
  00009	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	83 c4 04	 add	 esp, 4
$L141276:
  00015	33 c0		 xor	 eax, eax
  00017	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  0001e	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00021	88 46 04	 mov	 BYTE PTR [esi+4], al
  00024	5e		 pop	 esi

; 458  : 		}

  00025	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?clear@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::clear
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?clear@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
?clear@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::clear, COMDAT
; _this$ = ecx

; 780  : 		{	// erase all

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 781  : 		_Erase(_Root());

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00009	51		 push	 ecx
  0000a	8b ce		 mov	 ecx, esi
  0000c	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Erase

; 782  : 		_Root() = _Myhead, _Mysize = 0;

  00011	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00014	89 40 04	 mov	 DWORD PTR [eax+4], eax

; 783  : 		_Lmost() = _Myhead, _Rmost() = _Myhead;

  00017	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	89 00		 mov	 DWORD PTR [eax], eax
  00023	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00026	89 76 08	 mov	 DWORD PTR [esi+8], esi
  00029	5e		 pop	 esi

; 784  : 		}

  0002a	c3		 ret	 0
?clear@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::clear
_TEXT	ENDS
PUBLIC	??A?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAUtagTCASHITMSALE@@I@Z ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::operator[]
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??A?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAUtagTCASHITMSALE@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAUtagTCASHITMSALE@@I@Z PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 88	 lea	 eax, DWORD PTR [eax+ecx*4]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAUtagTCASHITMSALE@@I@Z ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::operator[]
_TEXT	ENDS
PUBLIC	??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z ; std::vector<unsigned short,std::allocator<unsigned short> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z PROC NEAR ; std::vector<unsigned short,std::allocator<unsigned short> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	8b 4c 24 04	 mov	 ecx, DWORD PTR __Pos$[esp-4]
  00007	8d 04 48	 lea	 eax, DWORD PTR [eax+ecx*2]

; 556  : 		}

  0000a	c2 04 00	 ret	 4
??A?$vector@GV?$allocator@G@std@@@std@@QAEAAGI@Z ENDP	; std::vector<unsigned short,std::allocator<unsigned short> >::operator[]
_TEXT	ENDS
PUBLIC	??A?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAEAAUtagMONREGEN@@I@Z ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAEAAUtagMONREGEN@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAEAAUtagMONREGEN@@I@Z PROC NEAR ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pos$[esp-4]
  00004	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00007	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0000a	8d 04 c1	 lea	 eax, DWORD PTR [ecx+eax*8]

; 556  : 		}

  0000d	c2 04 00	 ret	 4
??A?$vector@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@QAEAAUtagMONREGEN@@I@Z ENDP ; std::vector<tagMONREGEN,std::allocator<tagMONREGEN> >::operator[]
_TEXT	ENDS
PUBLIC	??A?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAEAAUtagLOTTERY@@I@Z ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAEAAUtagLOTTERY@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAEAAUtagLOTTERY@@I@Z PROC NEAR ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pos$[esp-4]
  00004	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00007	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  0000a	8d 04 41	 lea	 eax, DWORD PTR [ecx+eax*2]

; 556  : 		}

  0000d	c2 04 00	 ret	 4
??A?$vector@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@QAEAAUtagLOTTERY@@I@Z ENDP ; std::vector<tagLOTTERY,std::allocator<tagLOTTERY> >::operator[]
_TEXT	ENDS
PUBLIC	?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::LoadStringA
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT
_hInstance$ = 8						; size = 4
_nID$ = 12						; size = 4
?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::LoadStringA, COMDAT
; _this$ = ecx

; 1981 : 	{

  00000	53		 push	 ebx
  00001	56		 push	 esi

; 1982 : 		const ATLSTRINGRESOURCEIMAGE* pImage = AtlGetStringResourceImage( hInstance, nID );

  00002	8b 74 24 10	 mov	 esi, DWORD PTR _nID$[esp+4]
  00006	8b c6		 mov	 eax, esi
  00008	c1 e8 04	 shr	 eax, 4
  0000b	57		 push	 edi
  0000c	8b 7c 24 10	 mov	 edi, DWORD PTR _hInstance$[esp+8]
  00010	40		 inc	 eax
  00011	8b d9		 mov	 ebx, ecx
  00013	0f b7 c8	 movzx	 ecx, ax
  00016	6a 06		 push	 6
  00018	51		 push	 ecx
  00019	57		 push	 edi
  0001a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__FindResourceA@12
  00020	85 c0		 test	 eax, eax
  00022	74 11		 je	 SHORT $L141553
  00024	56		 push	 esi
  00025	50		 push	 eax
  00026	57		 push	 edi
  00027	e8 00 00 00 00	 call	 ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z ; ATL::_AtlGetStringResourceImage
  0002c	8b f8		 mov	 edi, eax
  0002e	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1983 : 		if( pImage == NULL )

  00031	85 ff		 test	 edi, edi
  00033	75 08		 jne	 SHORT $L117649
$L141553:
  00035	5f		 pop	 edi
  00036	5e		 pop	 esi

; 1984 : 		{
; 1985 : 			return( FALSE );

  00037	33 c0		 xor	 eax, eax
  00039	5b		 pop	 ebx

; 1994 : 	}

  0003a	c2 08 00	 ret	 8
$L117649:

; 1986 : 		}
; 1987 : 
; 1988 : 		int nLength = StringTraits::GetBaseTypeLength( pImage->achString, pImage->nLength );

  0003d	0f b7 07	 movzx	 eax, WORD PTR [edi]
  00040	55		 push	 ebp
  00041	6a 00		 push	 0
  00043	6a 00		 push	 0
  00045	6a 00		 push	 0
  00047	6a 00		 push	 0
  00049	50		 push	 eax
  0004a	8d 6f 02	 lea	 ebp, DWORD PTR [edi+2]
  0004d	55		 push	 ebp
  0004e	6a 00		 push	 0
  00050	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00056	50		 push	 eax
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32
  0005d	8b f0		 mov	 esi, eax

; 1989 : 		PXSTR pszBuffer = GetBuffer( nLength );

  0005f	8b 03		 mov	 eax, DWORD PTR [ebx]
  00061	8b 48 fc	 mov	 ecx, DWORD PTR [eax-4]
  00064	83 e8 10	 sub	 eax, 16			; 00000010H
  00067	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0006a	ba 01 00 00 00	 mov	 edx, 1
  0006f	2b d1		 sub	 edx, ecx
  00071	2b c6		 sub	 eax, esi
  00073	0b d0		 or	 edx, eax
  00075	7d 08		 jge	 SHORT $L141514
  00077	56		 push	 esi
  00078	8b cb		 mov	 ecx, ebx
  0007a	e8 00 00 00 00	 call	 ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z ; ATL::CSimpleStringT<char,0>::PrepareWrite2
$L141514:
  0007f	8b 03		 mov	 eax, DWORD PTR [ebx]

; 1990 : 		StringTraits::ConvertToBaseType( pszBuffer, nLength, pImage->achString, pImage->nLength );

  00081	0f b7 0f	 movzx	 ecx, WORD PTR [edi]
  00084	6a 00		 push	 0
  00086	6a 00		 push	 0
  00088	56		 push	 esi
  00089	50		 push	 eax
  0008a	51		 push	 ecx
  0008b	55		 push	 ebp
  0008c	6a 00		 push	 0
  0008e	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00094	50		 push	 eax
  00095	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WideCharToMultiByte@32

; 1991 : 		ReleaseBufferSetLength( nLength );

  0009b	85 f6		 test	 esi, esi
  0009d	5d		 pop	 ebp
  0009e	7c 1b		 jl	 SHORT $L141551
  000a0	8b 03		 mov	 eax, DWORD PTR [ebx]
  000a2	3b 70 f8	 cmp	 esi, DWORD PTR [eax-8]
  000a5	7f 14		 jg	 SHORT $L141551
  000a7	89 70 f4	 mov	 DWORD PTR [eax-12], esi
  000aa	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  000ac	5f		 pop	 edi
  000ad	c6 04 0e 00	 mov	 BYTE PTR [esi+ecx], 0
  000b1	5e		 pop	 esi

; 1992 : 
; 1993 : 		return( TRUE );

  000b2	b8 01 00 00 00	 mov	 eax, 1
  000b7	5b		 pop	 ebx

; 1994 : 	}

  000b8	c2 08 00	 ret	 8
$L141551:
  000bb	68 57 00 07 80	 push	 -2147024809		; 80070057H
  000c0	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L141555:
$L141554:
  000c5	cc		 int	 3
?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::LoadStringA
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ
_TEXT	SEGMENT
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 326  : 			{	// preincrement

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 327  : 			++(*(const_iterator *)this);

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::_Inc

; 328  : 			return (*this);

  00008	8b c6		 mov	 eax, esi
  0000a	5e		 pop	 esi

; 329  : 			}

  0000b	c3		 ret	 0
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEAAV012@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ; ATL::CSimpleStringT<char,0>::SetString
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::SetString, COMDAT
; _this$ = ecx

; 579  : 	{

  00000	56		 push	 esi

; 580  : 		SetString( pszSrc, StringLength( pszSrc ) );

  00001	8b 74 24 08	 mov	 esi, DWORD PTR _pszSrc$[esp]
  00005	85 f6		 test	 esi, esi
  00007	75 0d		 jne	 SHORT $L141574
  00009	33 c0		 xor	 eax, eax
  0000b	50		 push	 eax
  0000c	56		 push	 esi
  0000d	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
  00012	5e		 pop	 esi

; 581  : 	}

  00013	c2 04 00	 ret	 4

; 580  : 		SetString( pszSrc, StringLength( pszSrc ) );

$L141574:
  00016	8b c6		 mov	 eax, esi
  00018	57		 push	 edi
  00019	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0001c	8d 64 24 00	 npad	 4
$L141576:
  00020	8a 10		 mov	 dl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 d2		 test	 dl, dl
  00025	75 f9		 jne	 SHORT $L141576
  00027	2b c7		 sub	 eax, edi
  00029	5f		 pop	 edi
  0002a	50		 push	 eax
  0002b	56		 push	 esi
  0002c	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
  00031	5e		 pop	 esi

; 581  : 	}

  00032	c2 04 00	 ret	 4
?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z ENDP	; ATL::CSimpleStringT<char,0>::SetString
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
EXTRN	?_Xlen@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xlen
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 1480 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	56		 push	 esi

; 1481 : 		if (max_size() < _Newsize)

  00002	8b 74 24 0c	 mov	 esi, DWORD PTR __Newsize$[esp+4]
  00006	83 fe fe	 cmp	 esi, -2			; fffffffeH
  00009	8b e9		 mov	 ebp, ecx
  0000b	76 05		 jbe	 SHORT $L119063

; 1482 : 			_String_base::_Xlen();	// result too long

  0000d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L119063:

; 1483 : 		if (_Myres < _Newsize)

  00012	8b 45 18	 mov	 eax, DWORD PTR [ebp+24]
  00015	3b c6		 cmp	 eax, esi
  00017	73 19		 jae	 SHORT $L119064

; 1484 : 			_Copy(_Newsize, _Mysize);	// reallocate to grow

  00019	8b 45 14	 mov	 eax, DWORD PTR [ebp+20]
  0001c	50		 push	 eax
  0001d	56		 push	 esi
  0001e	8b cd		 mov	 ecx, ebp
  00020	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  00025	33 c0		 xor	 eax, eax
  00027	3b c6		 cmp	 eax, esi
  00029	1b c0		 sbb	 eax, eax
  0002b	5e		 pop	 esi
  0002c	f7 d8		 neg	 eax
  0002e	5d		 pop	 ebp

; 1491 : 		}

  0002f	c2 08 00	 ret	 8
$L119064:

; 1485 : 		else if (_Trim && _Newsize < _BUF_SIZE)

  00032	8a 4c 24 10	 mov	 cl, BYTE PTR __Trim$[esp+4]
  00036	84 c9		 test	 cl, cl
  00038	74 5c		 je	 SHORT $L119066
  0003a	83 fe 10	 cmp	 esi, 16			; 00000010H
  0003d	73 57		 jae	 SHORT $L119066
  0003f	53		 push	 ebx

; 1486 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1487 : 				_Newsize < _Mysize ? _Newsize : _Mysize);

  00040	8b 5d 14	 mov	 ebx, DWORD PTR [ebp+20]
  00043	3b f3		 cmp	 esi, ebx
  00045	73 02		 jae	 SHORT $L141581
  00047	8b de		 mov	 ebx, esi
$L141581:
  00049	83 f8 10	 cmp	 eax, 16			; 00000010H
  0004c	72 2b		 jb	 SHORT $L141641
  0004e	85 db		 test	 ebx, ebx
  00050	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00053	57		 push	 edi
  00054	8d 7d 04	 lea	 edi, DWORD PTR [ebp+4]
  00057	76 16		 jbe	 SHORT $L141640
  00059	8b cb		 mov	 ecx, ebx
  0005b	8b d1		 mov	 edx, ecx
  0005d	c1 e9 02	 shr	 ecx, 2
  00060	8b f0		 mov	 esi, eax
  00062	f3 a5		 rep movsd
  00064	8b ca		 mov	 ecx, edx
  00066	83 e1 03	 and	 ecx, 3
  00069	f3 a4		 rep movsb
  0006b	8b 74 24 14	 mov	 esi, DWORD PTR __Newsize$[esp+12]
$L141640:
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00075	83 c4 04	 add	 esp, 4
  00078	5f		 pop	 edi
$L141641:
  00079	89 5d 14	 mov	 DWORD PTR [ebp+20], ebx

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  0007c	33 c0		 xor	 eax, eax
  0007e	c7 45 18 0f 00
	00 00		 mov	 DWORD PTR [ebp+24], 15	; 0000000fH
  00085	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0008a	3b c6		 cmp	 eax, esi
  0008c	5b		 pop	 ebx
  0008d	1b c0		 sbb	 eax, eax
  0008f	5e		 pop	 esi
  00090	f7 d8		 neg	 eax
  00092	5d		 pop	 ebp

; 1491 : 		}

  00093	c2 08 00	 ret	 8
$L119066:

; 1488 : 		else if (_Newsize == 0)

  00096	85 f6		 test	 esi, esi
  00098	75 23		 jne	 SHORT $L141673

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

  0009a	83 f8 10	 cmp	 eax, 16			; 00000010H
  0009d	89 75 14	 mov	 DWORD PTR [ebp+20], esi
  000a0	72 14		 jb	 SHORT $L141670
  000a2	8b 6d 04	 mov	 ebp, DWORD PTR [ebp+4]

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000a5	33 c0		 xor	 eax, eax
  000a7	3b c6		 cmp	 eax, esi
  000a9	1b c0		 sbb	 eax, eax
  000ab	5e		 pop	 esi
  000ac	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
  000b0	f7 d8		 neg	 eax
  000b2	5d		 pop	 ebp

; 1491 : 		}

  000b3	c2 08 00	 ret	 8

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

$L141670:
  000b6	83 c5 04	 add	 ebp, 4
  000b9	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
$L141673:

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000bd	33 c0		 xor	 eax, eax
  000bf	3b c6		 cmp	 eax, esi
  000c1	1b c0		 sbb	 eax, eax
  000c3	5e		 pop	 esi
  000c4	f7 d8		 neg	 eax
  000c6	5d		 pop	 ebp

; 1491 : 		}

  000c7	c2 08 00	 ret	 8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@EUtagCASTLETOP3@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEUtagCASTLETOP3@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagCASTLETOP3,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagCASTLETOP3> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?SendMW_EVENTMSGLOTTERY_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAV?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@@Z ; CTServer::SendMW_EVENTMSGLOTTERY_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T142059 DD	0ffffffffH
	DD	FLAT:$L141726
	DD	00H
	DD	FLAT:$L141727
$T142053 DD	019930520H
	DD	02H
	DD	FLAT:$T142059
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_EVENTMSGLOTTERY_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAV?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@@Z
_TEXT	SEGMENT
tv277 = -20						; size = 4
$T141723 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strTitle$ = 8						; size = 4
_pLotPacket$ = 12					; size = 4
?SendMW_EVENTMSGLOTTERY_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAV?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@@Z PROC NEAR ; CTServer::SendMW_EVENTMSGLOTTERY_REQ, COMDAT
; _this$ = ecx

; 750  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_EVENTMSGLOTTERY_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAV?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	8b f9		 mov	 edi, ecx
  0001e	89 7c 24 14	 mov	 DWORD PTR _this$[esp+36], edi
  00022	33 ed		 xor	 ebp, ebp

; 751  : 	CPacket * pMSG = new CPacket();

  00024	6a 1c		 push	 28			; 0000001cH
  00026	89 6c 24 24	 mov	 DWORD PTR __$EHRec$[esp+48], ebp
  0002a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002f	83 c4 04	 add	 esp, 4
  00032	89 44 24 10	 mov	 DWORD PTR $T141723[esp+36], eax
  00036	3b c5		 cmp	 eax, ebp
  00038	c6 44 24 20 01	 mov	 BYTE PTR __$EHRec$[esp+44], 1
  0003d	74 0b		 je	 SHORT $L141724
  0003f	8b c8		 mov	 ecx, eax
  00041	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00046	8b d8		 mov	 ebx, eax
  00048	eb 02		 jmp	 SHORT $L141725
$L141724:
  0004a	33 db		 xor	 ebx, ebx
$L141725:

; 752  : 	pMSG->SetID(MW_EVENTMSGLOTTERY_REQ)
; 753  : 		<< strTitle;

  0004c	8b 44 24 28	 mov	 eax, DWORD PTR _strTitle$[esp+32]
  00050	50		 push	 eax
  00051	68 68 21 00 00	 push	 8552			; 00002168H
  00056	8b cb		 mov	 ecx, ebx
  00058	c6 44 24 28 00	 mov	 BYTE PTR __$EHRec$[esp+52], 0
  0005d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00062	8b c8		 mov	 ecx, eax
  00064	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 754  : 
; 755  : 	WORD wItemCount = (WORD)pLotPacket.size();

  00069	8b 74 24 2c	 mov	 esi, DWORD PTR _pLotPacket$[esp+32]
  0006d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00070	3b c5		 cmp	 eax, ebp
  00072	74 16		 je	 SHORT $L141737
  00074	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  00077	2b c8		 sub	 ecx, eax
  00079	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0007e	f7 e9		 imul	 ecx
  00080	c1 fa 03	 sar	 edx, 3
  00083	8b ea		 mov	 ebp, edx
  00085	c1 ed 1f	 shr	 ebp, 31			; 0000001fH
  00088	03 ea		 add	 ebp, edx
$L141737:

; 756  : 
; 757  : 	*pMSG
; 758  : 		<< wItemCount;

  0008a	55		 push	 ebp
  0008b	8b cb		 mov	 ecx, ebx
  0008d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 759  : 
; 760  : 	for( WORD i = 0; i < wItemCount; i++)

  00092	66 85 ed	 test	 bp, bp
  00095	0f 86 8a 00 00
	00		 jbe	 $L123675
  0009b	0f b7 cd	 movzx	 ecx, bp
  0009e	33 ff		 xor	 edi, edi
  000a0	89 4c 24 10	 mov	 DWORD PTR tv277[esp+36], ecx
$L123673:

; 761  : 	{
; 762  : 		WORD j = 0;
; 763  : 		WORD wUserCount = (WORD)pLotPacket[i].m_pChar.size();

  000a4	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000a7	8b 4c 07 08	 mov	 ecx, DWORD PTR [edi+eax+8]
  000ab	85 c9		 test	 ecx, ecx
  000ad	75 04		 jne	 SHORT $L141798
  000af	33 ed		 xor	 ebp, ebp
  000b1	eb 09		 jmp	 SHORT $L141799
$L141798:
  000b3	8b 6c 07 0c	 mov	 ebp, DWORD PTR [edi+eax+12]
  000b7	2b e9		 sub	 ebp, ecx
  000b9	c1 fd 02	 sar	 ebp, 2
$L141799:

; 764  : 
; 765  : 		*pMSG
; 766  : 			<< (pLotPacket[i].m_pLot->m_wItemID)
; 767  : 			<< (pLotPacket[i].m_pLot->m_bNum)
; 768  : 			<< wUserCount;

  000bc	8b 14 07	 mov	 edx, DWORD PTR [edi+eax]
  000bf	33 c9		 xor	 ecx, ecx
  000c1	8a 4a 02	 mov	 cl, BYTE PTR [edx+2]
  000c4	33 c0		 xor	 eax, eax
  000c6	66 8b 02	 mov	 ax, WORD PTR [edx]
  000c9	55		 push	 ebp
  000ca	51		 push	 ecx
  000cb	8b cb		 mov	 ecx, ebx
  000cd	50		 push	 eax
  000ce	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000d3	8b c8		 mov	 ecx, eax
  000d5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000da	8b c8		 mov	 ecx, eax
  000dc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 769  : 
; 770  : 		for(j = 0; j < wUserCount; j++)

  000e1	66 85 ed	 test	 bp, bp
  000e4	76 2d		 jbe	 SHORT $L123674
  000e6	33 f6		 xor	 esi, esi
  000e8	0f b7 ed	 movzx	 ebp, bp
  000eb	eb 03 8d 49 00	 npad	 5
$L123679:

; 771  : 		{
; 772  : 			*pMSG
; 773  : 				<< (pLotPacket[i].m_pChar[j]->m_strNAME);

  000f0	8b 4c 24 2c	 mov	 ecx, DWORD PTR _pLotPacket$[esp+32]
  000f4	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  000f7	8b 44 07 08	 mov	 eax, DWORD PTR [edi+eax+8]
  000fb	8b 14 06	 mov	 edx, DWORD PTR [esi+eax]
  000fe	8b 42 6c	 mov	 eax, DWORD PTR [edx+108]
  00101	50		 push	 eax
  00102	8b cb		 mov	 ecx, ebx
  00104	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00109	83 c6 04	 add	 esi, 4
  0010c	4d		 dec	 ebp
  0010d	75 e1		 jne	 SHORT $L123679

; 769  : 
; 770  : 		for(j = 0; j < wUserCount; j++)

  0010f	8b 74 24 2c	 mov	 esi, DWORD PTR _pLotPacket$[esp+32]
$L123674:

; 759  : 
; 760  : 	for( WORD i = 0; i < wItemCount; i++)

  00113	8b 44 24 10	 mov	 eax, DWORD PTR tv277[esp+36]
  00117	83 c7 14	 add	 edi, 20			; 00000014H
  0011a	48		 dec	 eax
  0011b	89 44 24 10	 mov	 DWORD PTR tv277[esp+36], eax
  0011f	75 83		 jne	 SHORT $L123673
  00121	8b 7c 24 14	 mov	 edi, DWORD PTR _this$[esp+36]
$L123675:

; 774  : 		}
; 775  : 	}
; 776  : 
; 777  : 	Say(pMSG);

  00125	8b 07		 mov	 eax, DWORD PTR [edi]
  00127	53		 push	 ebx
  00128	8b cf		 mov	 ecx, edi
  0012a	ff 10		 call	 DWORD PTR [eax]

; 778  : 
; 779  : }

  0012c	8b 44 24 28	 mov	 eax, DWORD PTR _strTitle$[esp+32]
  00130	83 c0 f0	 add	 eax, -16		; fffffff0H
  00133	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  0013b	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0013e	83 ca ff	 or	 edx, -1
  00141	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00145	4a		 dec	 edx
  00146	85 d2		 test	 edx, edx
  00148	5f		 pop	 edi
  00149	5e		 pop	 esi
  0014a	5d		 pop	 ebp
  0014b	5b		 pop	 ebx
  0014c	7f 08		 jg	 SHORT $L142048
  0014e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00150	8b 11		 mov	 edx, DWORD PTR [ecx]
  00152	50		 push	 eax
  00153	ff 52 04	 call	 DWORD PTR [edx+4]
$L142048:
  00156	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0015a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00161	83 c4 14	 add	 esp, 20			; 00000014H
  00164	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L141726:
  00000	8d 4d 04	 lea	 ecx, DWORD PTR _strTitle$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L141727:
  00008	8b 45 ec	 mov	 eax, DWORD PTR $T141723[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_EVENTMSGLOTTERY_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAV?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T142053
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_EVENTMSGLOTTERY_REQ@CTServer@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAV?$vector@ULOTPACKET@@V?$allocator@ULOTPACKET@@@std@@@std@@@Z ENDP ; CTServer::SendMW_EVENTMSGLOTTERY_REQ
PUBLIC	?SendMW_CREATERECALLMON_REQ@CTServer@@QAEXKKKGKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEEEEEEKKKKEEMMMGV?$vector@GV?$allocator@G@std@@@std@@@Z ; CTServer::SendMW_CREATERECALLMON_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T142195 DD	0ffffffffH
	DD	FLAT:$L142069
	DD	00H
	DD	FLAT:$L142070
	DD	01H
	DD	FLAT:$L142071
$T142191 DD	019930520H
	DD	03H
	DD	FLAT:$T142195
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CREATERECALLMON_REQ@CTServer@@QAEXKKKGKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEEEEEEKKKKEEMMMGV?$vector@GV?$allocator@G@std@@@std@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T142066 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_dwMonID$ = 16						; size = 4
_wMon$ = 20						; size = 2
_dwATTR$ = 24						; size = 4
_wPetID$ = 28						; size = 2
_strName$ = 32						; size = 4
_dwTime$ = 36						; size = 4
_bLevel$ = 40						; size = 1
_bClass$ = 44						; size = 1
_bRace$ = 48						; size = 1
_bAction$ = 52						; size = 1
_bStatus$ = 56						; size = 1
_bMode$ = 60						; size = 1
_dwMaxHP$ = 64						; size = 4
_dwMaxMP$ = 68						; size = 4
_dwHP$ = 72						; size = 4
_dwMP$ = 76						; size = 4
_bHit$ = 80						; size = 1
_bSkillLevel$ = 84					; size = 1
_fPosX$ = 88						; size = 4
_fPosY$ = 92						; size = 4
_fPosZ$ = 96						; size = 4
_wDir$ = 100						; size = 2
_vSkill$ = 104						; size = 16
?SendMW_CREATERECALLMON_REQ@CTServer@@QAEXKKKGKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEEEEEEKKKKEEMMMGV?$vector@GV?$allocator@G@std@@@std@@@Z PROC NEAR ; CTServer::SendMW_CREATERECALLMON_REQ, COMDAT
; _this$ = ecx

; 2405 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CREATERECALLMON_REQ@CTServer@@QAEXKKKGKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEEEEEEKKKKEEMMMGV?$vector@GV?$allocator@G@std@@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	89 4c 24 10	 mov	 DWORD PTR _this$[esp+36], ecx
  00020	bb 01 00 00 00	 mov	 ebx, 1

; 2406 : 	CPacket *pMSG = new CPacket();

  00025	6a 1c		 push	 28			; 0000001cH
  00027	89 5c 24 24	 mov	 DWORD PTR __$EHRec$[esp+48], ebx
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	83 c4 04	 add	 esp, 4
  00033	89 44 24 14	 mov	 DWORD PTR $T142066[esp+36], eax
  00037	85 c0		 test	 eax, eax
  00039	c6 44 24 20 02	 mov	 BYTE PTR __$EHRec$[esp+44], 2
  0003e	74 0b		 je	 SHORT $L142067
  00040	8b c8		 mov	 ecx, eax
  00042	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00047	8b e8		 mov	 ebp, eax
  00049	eb 02		 jmp	 SHORT $L142068
$L142067:
  0004b	33 ed		 xor	 ebp, ebp
$L142068:

; 2407 : 
; 2408 : 	pMSG->SetID(MW_CREATERECALLMON_REQ)
; 2409 : 		<< dwCharID
; 2410 : 		<< dwKEY
; 2411 : 		<< dwMonID
; 2412 : 		<< wMon
; 2413 : 		<< dwATTR
; 2414 : 		<< wPetID
; 2415 : 		<< strName
; 2416 : 		<< bLevel
; 2417 : 		<< bClass
; 2418 : 		<< bRace
; 2419 : 		<< bAction
; 2420 : 		<< bStatus
; 2421 : 		<< bMode
; 2422 : 		<< dwMaxHP
; 2423 : 		<< dwMaxMP
; 2424 : 		<< dwHP
; 2425 : 		<< dwMP
; 2426 : 		<< bHit
; 2427 : 		<< bSkillLevel
; 2428 : 		<< fPosX
; 2429 : 		<< fPosY
; 2430 : 		<< fPosZ
; 2431 : 		<< wDir
; 2432 : 		<< dwTime
; 2433 : 		<< BYTE(vSkill.size());

  0004d	8b bc 24 8c 00
	00 00		 mov	 edi, DWORD PTR _vSkill$[esp+36]
  00054	85 ff		 test	 edi, edi
  00056	88 5c 24 20	 mov	 BYTE PTR __$EHRec$[esp+44], bl
  0005a	8b 9c 24 90 00
	00 00		 mov	 ebx, DWORD PTR _vSkill$[esp+40]
  00061	75 04		 jne	 SHORT $L142077
  00063	33 c0		 xor	 eax, eax
  00065	eb 06		 jmp	 SHORT $L142078
$L142077:
  00067	8b c3		 mov	 eax, ebx
  00069	2b c7		 sub	 eax, edi
  0006b	d1 f8		 sar	 eax, 1
$L142078:
  0006d	50		 push	 eax
  0006e	8b 44 24 48	 mov	 eax, DWORD PTR _dwTime$[esp+36]
  00072	8b 8c 24 88 00
	00 00		 mov	 ecx, DWORD PTR _wDir$[esp+36]
  00079	50		 push	 eax
  0007a	8b 94 24 88 00
	00 00		 mov	 edx, DWORD PTR _fPosZ$[esp+40]
  00081	51		 push	 ecx
  00082	8b 84 24 88 00
	00 00		 mov	 eax, DWORD PTR _fPosY$[esp+44]
  00089	8b 8c 24 84 00
	00 00		 mov	 ecx, DWORD PTR _fPosX$[esp+44]
  00090	52		 push	 edx
  00091	8b 94 24 84 00
	00 00		 mov	 edx, DWORD PTR _bSkillLevel$[esp+48]
  00098	50		 push	 eax
  00099	8b 84 24 84 00
	00 00		 mov	 eax, DWORD PTR _bHit$[esp+52]
  000a0	51		 push	 ecx
  000a1	8b 8c 24 84 00
	00 00		 mov	 ecx, DWORD PTR _dwMP$[esp+56]
  000a8	52		 push	 edx
  000a9	8b 94 24 84 00
	00 00		 mov	 edx, DWORD PTR _dwHP$[esp+60]
  000b0	50		 push	 eax
  000b1	8b 84 24 84 00
	00 00		 mov	 eax, DWORD PTR _dwMaxMP$[esp+64]
  000b8	51		 push	 ecx
  000b9	8b 8c 24 84 00
	00 00		 mov	 ecx, DWORD PTR _dwMaxHP$[esp+68]
  000c0	52		 push	 edx
  000c1	8b 94 24 84 00
	00 00		 mov	 edx, DWORD PTR _bMode$[esp+72]
  000c8	50		 push	 eax
  000c9	8b 84 24 84 00
	00 00		 mov	 eax, DWORD PTR _bStatus$[esp+76]
  000d0	51		 push	 ecx
  000d1	8b 8c 24 84 00
	00 00		 mov	 ecx, DWORD PTR _bAction$[esp+80]
  000d8	52		 push	 edx
  000d9	8b 94 24 84 00
	00 00		 mov	 edx, DWORD PTR _bRace$[esp+84]
  000e0	50		 push	 eax
  000e1	8b 84 24 84 00
	00 00		 mov	 eax, DWORD PTR _bClass$[esp+88]
  000e8	51		 push	 ecx
  000e9	8b 8c 24 84 00
	00 00		 mov	 ecx, DWORD PTR _bLevel$[esp+92]
  000f0	52		 push	 edx
  000f1	8b 94 24 80 00
	00 00		 mov	 edx, DWORD PTR _strName$[esp+96]
  000f8	50		 push	 eax
  000f9	8b 84 24 80 00
	00 00		 mov	 eax, DWORD PTR _wPetID$[esp+100]
  00100	51		 push	 ecx
  00101	8b 8c 24 80 00
	00 00		 mov	 ecx, DWORD PTR _dwATTR$[esp+104]
  00108	52		 push	 edx
  00109	8b 94 24 80 00
	00 00		 mov	 edx, DWORD PTR _wMon$[esp+108]
  00110	50		 push	 eax
  00111	8b 84 24 80 00
	00 00		 mov	 eax, DWORD PTR _dwMonID$[esp+112]
  00118	51		 push	 ecx
  00119	8b 8c 24 80 00
	00 00		 mov	 ecx, DWORD PTR _dwKEY$[esp+116]
  00120	52		 push	 edx
  00121	8b 94 24 80 00
	00 00		 mov	 edx, DWORD PTR _dwCharID$[esp+120]
  00128	50		 push	 eax
  00129	51		 push	 ecx
  0012a	52		 push	 edx
  0012b	68 b8 20 00 00	 push	 8376			; 000020b8H
  00130	8b cd		 mov	 ecx, ebp
  00132	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00137	8b c8		 mov	 ecx, eax
  00139	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0013e	8b c8		 mov	 ecx, eax
  00140	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00145	8b c8		 mov	 ecx, eax
  00147	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0014c	8b c8		 mov	 ecx, eax
  0014e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00153	8b c8		 mov	 ecx, eax
  00155	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0015a	8b c8		 mov	 ecx, eax
  0015c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00161	8b c8		 mov	 ecx, eax
  00163	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00168	8b c8		 mov	 ecx, eax
  0016a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0016f	8b c8		 mov	 ecx, eax
  00171	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00176	8b c8		 mov	 ecx, eax
  00178	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0017d	8b c8		 mov	 ecx, eax
  0017f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00184	8b c8		 mov	 ecx, eax
  00186	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0018b	8b c8		 mov	 ecx, eax
  0018d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00192	8b c8		 mov	 ecx, eax
  00194	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00199	8b c8		 mov	 ecx, eax
  0019b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001a0	8b c8		 mov	 ecx, eax
  001a2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001a7	8b c8		 mov	 ecx, eax
  001a9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001ae	8b c8		 mov	 ecx, eax
  001b0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  001b5	8b c8		 mov	 ecx, eax
  001b7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  001bc	8b c8		 mov	 ecx, eax
  001be	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  001c3	8b c8		 mov	 ecx, eax
  001c5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  001ca	8b c8		 mov	 ecx, eax
  001cc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  001d1	8b c8		 mov	 ecx, eax
  001d3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  001d8	8b c8		 mov	 ecx, eax
  001da	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001df	8b c8		 mov	 ecx, eax
  001e1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2434 : 
; 2435 : 	for(DWORD i=0; i<vSkill.size(); i++)

  001e6	33 f6		 xor	 esi, esi
$L126927:
  001e8	85 ff		 test	 edi, edi
  001ea	74 1b		 je	 SHORT $L142193
  001ec	8b c3		 mov	 eax, ebx
  001ee	2b c7		 sub	 eax, edi
  001f0	d1 f8		 sar	 eax, 1
  001f2	3b f0		 cmp	 esi, eax
  001f4	73 11		 jae	 SHORT $L142193

; 2436 : 	{
; 2437 : 		(*pMSG)
; 2438 : 			<< vSkill[i];

  001f6	33 c0		 xor	 eax, eax
  001f8	66 8b 04 77	 mov	 ax, WORD PTR [edi+esi*2]
  001fc	8b cd		 mov	 ecx, ebp
  001fe	50		 push	 eax
  001ff	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00204	46		 inc	 esi
  00205	eb e1		 jmp	 SHORT $L126927
$L142193:

; 2439 : 	}
; 2440 : 
; 2441 : 	Say(pMSG);

  00207	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+36]
  0020b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0020d	55		 push	 ebp
  0020e	ff 12		 call	 DWORD PTR [edx]

; 2442 : }

  00210	8b 44 24 40	 mov	 eax, DWORD PTR _strName$[esp+32]
  00214	83 c0 f0	 add	 eax, -16		; fffffff0H
  00217	c6 44 24 20 00	 mov	 BYTE PTR __$EHRec$[esp+44], 0
  0021c	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0021f	83 ca ff	 or	 edx, -1
  00222	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00226	4a		 dec	 edx
  00227	85 d2		 test	 edx, edx
  00229	7f 08		 jg	 SHORT $L142167
  0022b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0022f	50		 push	 eax
  00230	ff 52 04	 call	 DWORD PTR [edx+4]
$L142167:
  00233	85 ff		 test	 edi, edi
  00235	74 09		 je	 SHORT $L142189
  00237	57		 push	 edi
  00238	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0023d	83 c4 04	 add	 esp, 4
$L142189:
  00240	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  00244	5f		 pop	 edi
  00245	5e		 pop	 esi
  00246	5d		 pop	 ebp
  00247	5b		 pop	 ebx
  00248	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0024f	83 c4 14	 add	 esp, 20			; 00000014H
  00252	c2 70 00	 ret	 112			; 00000070H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L142069:
  00000	8d 4d 64	 lea	 ecx, DWORD PTR _vSkill$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ ; std::vector<unsigned short,std::allocator<unsigned short> >::~vector<unsigned short,std::allocator<unsigned short> >
$L142070:
  00008	8d 4d 1c	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L142071:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T142066[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_CREATERECALLMON_REQ@CTServer@@QAEXKKKGKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEEEEEEKKKKEEMMMGV?$vector@GV?$allocator@G@std@@@std@@@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T142191
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CREATERECALLMON_REQ@CTServer@@QAEXKKKGKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KEEEEEEKKKKEEMMMGV?$vector@GV?$allocator@G@std@@@std@@@Z ENDP ; CTServer::SendMW_CREATERECALLMON_REQ
PUBLIC	?SendMW_CASTLEWARINFO_REQ@CTServer@@QAEXPAUtagCASTLEWARINFO@@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EK1@Z ; CTServer::SendMW_CASTLEWARINFO_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T143013 DD	0ffffffffH
	DD	FLAT:$L142214
	DD	00H
	DD	FLAT:$L142215
	DD	01H
	DD	FLAT:$L142216
$T142997 DD	019930520H
	DD	03H
	DD	FLAT:$T143013
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CASTLEWARINFO_REQ@CTServer@@QAEXPAUtagCASTLEWARINFO@@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EK1@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T142202 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_it$ = 8						; size = 4
_pInfo$ = 8						; size = 4
_dwDefGuild$ = 12					; size = 4
_strDefName$ = 16					; size = 4
_bDefCountry$ = 20					; size = 1
_dwAtkGuild$ = 24					; size = 4
_strAtkName$ = 28					; size = 4
?SendMW_CASTLEWARINFO_REQ@CTServer@@QAEXPAUtagCASTLEWARINFO@@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EK1@Z PROC NEAR ; CTServer::SendMW_CASTLEWARINFO_REQ, COMDAT
; _this$ = ecx

; 2682 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CASTLEWARINFO_REQ@CTServer@@QAEXPAUtagCASTLEWARINFO@@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EK1@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	89 4c 24 10	 mov	 DWORD PTR _this$[esp+36], ecx

; 2683 : 	CPacket *pMSG = new CPacket();

  00020	6a 1c		 push	 28			; 0000001cH
  00022	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+48], 1
  0002a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002f	83 c4 04	 add	 esp, 4
  00032	89 44 24 14	 mov	 DWORD PTR $T142202[esp+36], eax
  00036	85 c0		 test	 eax, eax
  00038	c6 44 24 20 02	 mov	 BYTE PTR __$EHRec$[esp+44], 2
  0003d	74 0b		 je	 SHORT $L142203
  0003f	8b c8		 mov	 ecx, eax
  00041	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00046	8b e8		 mov	 ebp, eax
  00048	eb 02		 jmp	 SHORT $L142204
$L142203:
  0004a	33 ed		 xor	 ebp, ebp
$L142204:

; 2684 : 
; 2685 : 	pMSG->SetID(MW_CASTLEWARINFO_REQ)
; 2686 : 		<< pInfo->m_wID
; 2687 : 		<< dwDefGuild
; 2688 : 		<< strDefName
; 2689 : 		<< pInfo->m_bDefCountry
; 2690 : 		<< pInfo->m_wCountryPoint[TCONTRY_D]
; 2691 : 		<< dwAtkGuild
; 2692 : 		<< strAtkName
; 2693 : 		<< pInfo->m_wCountryPoint[TCONTRY_C]
; 2694 : 		<< DWORD(pInfo->m_mapGuild.size());

  0004c	8b 7c 24 28	 mov	 edi, DWORD PTR _pInfo$[esp+32]
  00050	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00053	8b 4c 24 3c	 mov	 ecx, DWORD PTR _strAtkName$[esp+32]
  00057	8b 54 24 38	 mov	 edx, DWORD PTR _dwAtkGuild$[esp+32]
  0005b	50		 push	 eax
  0005c	8b 5c 24 34	 mov	 ebx, DWORD PTR _strDefName$[esp+36]
  00060	33 c0		 xor	 eax, eax
  00062	66 8b 47 70	 mov	 ax, WORD PTR [edi+112]
  00066	c6 44 24 24 01	 mov	 BYTE PTR __$EHRec$[esp+48], 1
  0006b	50		 push	 eax
  0006c	51		 push	 ecx
  0006d	33 c0		 xor	 eax, eax
  0006f	66 8b 47 6e	 mov	 ax, WORD PTR [edi+110]
  00073	52		 push	 edx
  00074	8b 54 24 3c	 mov	 edx, DWORD PTR _dwDefGuild$[esp+48]
  00078	33 c9		 xor	 ecx, ecx
  0007a	8a 4f 6c	 mov	 cl, BYTE PTR [edi+108]
  0007d	50		 push	 eax
  0007e	33 c0		 xor	 eax, eax
  00080	66 8b 07	 mov	 ax, WORD PTR [edi]
  00083	51		 push	 ecx
  00084	53		 push	 ebx
  00085	52		 push	 edx
  00086	8b cd		 mov	 ecx, ebp
  00088	50		 push	 eax
  00089	68 0f 21 00 00	 push	 8463			; 0000210fH
  0008e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a1	8b c8		 mov	 ecx, eax
  000a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000a8	8b c8		 mov	 ecx, eax
  000aa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000af	8b c8		 mov	 ecx, eax
  000b1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000b6	8b c8		 mov	 ecx, eax
  000b8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000bd	8b c8		 mov	 ecx, eax
  000bf	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000c4	8b c8		 mov	 ecx, eax
  000c6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000cb	8b c8		 mov	 ecx, eax
  000cd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 2695 : 
; 2696 : 	MAPDWORD::iterator it;
; 2697 : 	for(it=pInfo->m_mapGuild.begin(); it!=pInfo->m_mapGuild.end(); it++)

  000d2	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  000d5	8b 01		 mov	 eax, DWORD PTR [ecx]
  000d7	3b c1		 cmp	 eax, ecx
  000d9	89 44 24 28	 mov	 DWORD PTR _it$[esp+32], eax
  000dd	74 2b		 je	 SHORT $L127115
  000df	90		 npad	 1
$L142273:

; 2698 : 	{
; 2699 : 		(*pMSG)
; 2700 : 			<< (*it).first
; 2701 : 			<< (*it).second;

  000e0	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e3	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000e6	51		 push	 ecx
  000e7	52		 push	 edx
  000e8	8b cd		 mov	 ecx, ebp
  000ea	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ef	8b c8		 mov	 ecx, eax
  000f1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000f6	8d 4c 24 28	 lea	 ecx, DWORD PTR _it$[esp+32]
  000fa	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KKU?$less@K@std@@V?$allocator@U?$pair@$$CBKK@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,unsigned long,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,unsigned long> >,0> >::const_iterator::_Inc
  000ff	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  00102	8b 44 24 28	 mov	 eax, DWORD PTR _it$[esp+32]
  00106	3b c1		 cmp	 eax, ecx
  00108	75 d6		 jne	 SHORT $L142273
$L127115:

; 2702 : 	}
; 2703 : 
; 2704 : 	(*pMSG)
; 2705 : 		<< BYTE(pInfo->m_mapTop3[TCONTRY_D].size() + pInfo->m_mapTop3[TCONTRY_C].size());

  0010a	8b 47 30	 mov	 eax, DWORD PTR [edi+48]
  0010d	02 47 3c	 add	 al, BYTE PTR [edi+60]
  00110	8b cd		 mov	 ecx, ebp
  00112	50		 push	 eax
  00113	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2706 : 
; 2707 : 	MAPCASTLETOP3::iterator it3;
; 2708 : 	for(it3=pInfo->m_mapTop3[TCONTRY_D].begin(); it3!=pInfo->m_mapTop3[TCONTRY_D].end(); it3++)

  00118	8b 47 2c	 mov	 eax, DWORD PTR [edi+44]
  0011b	8b 30		 mov	 esi, DWORD PTR [eax]
  0011d	3b f0		 cmp	 esi, eax
  0011f	74 6e		 je	 SHORT $L127122
$L142531:

; 2709 : 	{
; 2710 : 		(*pMSG)
; 2711 : 			<< BYTE(TCONTRY_D)
; 2712 : 			<< it3->second.m_strName
; 2713 : 			<< it3->second.m_wPoint;

  00121	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00124	33 c9		 xor	 ecx, ecx
  00126	66 8b 4e 18	 mov	 cx, WORD PTR [esi+24]
  0012a	51		 push	 ecx
  0012b	50		 push	 eax
  0012c	6a 00		 push	 0
  0012e	8b cd		 mov	 ecx, ebp
  00130	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00135	8b c8		 mov	 ecx, eax
  00137	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0013c	8b c8		 mov	 ecx, eax
  0013e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00143	8a 46 1d	 mov	 al, BYTE PTR [esi+29]
  00146	84 c0		 test	 al, al
  00148	75 40		 jne	 SHORT $L142564
  0014a	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0014d	8a 48 1d	 mov	 cl, BYTE PTR [eax+29]
  00150	84 c9		 test	 cl, cl
  00152	75 19		 jne	 SHORT $L143001
  00154	8b f0		 mov	 esi, eax
  00156	8b 06		 mov	 eax, DWORD PTR [esi]
  00158	8a 48 1d	 mov	 cl, BYTE PTR [eax+29]
  0015b	84 c9		 test	 cl, cl
  0015d	75 2b		 jne	 SHORT $L142564
  0015f	90		 npad	 1

; 2706 : 
; 2707 : 	MAPCASTLETOP3::iterator it3;
; 2708 : 	for(it3=pInfo->m_mapTop3[TCONTRY_D].begin(); it3!=pInfo->m_mapTop3[TCONTRY_D].end(); it3++)

$L142552:
  00160	8b f0		 mov	 esi, eax
  00162	8b 06		 mov	 eax, DWORD PTR [esi]
  00164	8a 48 1d	 mov	 cl, BYTE PTR [eax+29]
  00167	84 c9		 test	 cl, cl
  00169	74 f5		 je	 SHORT $L142552
  0016b	eb 1d		 jmp	 SHORT $L142564
$L143001:
  0016d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00170	8a 48 1d	 mov	 cl, BYTE PTR [eax+29]
  00173	84 c9		 test	 cl, cl
  00175	75 11		 jne	 SHORT $L142567
$L142566:
  00177	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0017a	75 0c		 jne	 SHORT $L142567
  0017c	8b f0		 mov	 esi, eax
  0017e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00181	8a 48 1d	 mov	 cl, BYTE PTR [eax+29]
  00184	84 c9		 test	 cl, cl
  00186	74 ef		 je	 SHORT $L142566
$L142567:
  00188	8b f0		 mov	 esi, eax
$L142564:
  0018a	3b 77 2c	 cmp	 esi, DWORD PTR [edi+44]
  0018d	75 92		 jne	 SHORT $L142531
$L127122:

; 2714 : 	}
; 2715 : 	for(it3=pInfo->m_mapTop3[TCONTRY_C].begin(); it3!=pInfo->m_mapTop3[TCONTRY_C].end(); it3++)

  0018f	8b 47 38	 mov	 eax, DWORD PTR [edi+56]
  00192	8b 30		 mov	 esi, DWORD PTR [eax]
  00194	3b f0		 cmp	 esi, eax
  00196	74 77		 je	 SHORT $L127128
  00198	eb 06 8d 9b 00
	00 00 00	 npad	 8
$L142826:

; 2716 : 	{
; 2717 : 		(*pMSG)
; 2718 : 			<< BYTE(TCONTRY_C)
; 2719 : 			<< it3->second.m_strName
; 2720 : 			<< it3->second.m_wPoint;

  001a0	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  001a3	33 d2		 xor	 edx, edx
  001a5	66 8b 56 18	 mov	 dx, WORD PTR [esi+24]
  001a9	8b cd		 mov	 ecx, ebp
  001ab	52		 push	 edx
  001ac	50		 push	 eax
  001ad	6a 01		 push	 1
  001af	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  001b4	8b c8		 mov	 ecx, eax
  001b6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  001bb	8b c8		 mov	 ecx, eax
  001bd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  001c2	8a 46 1d	 mov	 al, BYTE PTR [esi+29]
  001c5	84 c0		 test	 al, al
  001c7	75 41		 jne	 SHORT $L142860
  001c9	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  001cc	8a 48 1d	 mov	 cl, BYTE PTR [eax+29]
  001cf	84 c9		 test	 cl, cl
  001d1	75 1a		 jne	 SHORT $L143004
  001d3	8b f0		 mov	 esi, eax
  001d5	8b 06		 mov	 eax, DWORD PTR [esi]
  001d7	8a 48 1d	 mov	 cl, BYTE PTR [eax+29]
  001da	84 c9		 test	 cl, cl
  001dc	75 2c		 jne	 SHORT $L142860
  001de	8b ff		 npad	 2

; 2714 : 	}
; 2715 : 	for(it3=pInfo->m_mapTop3[TCONTRY_C].begin(); it3!=pInfo->m_mapTop3[TCONTRY_C].end(); it3++)

$L142848:
  001e0	8b f0		 mov	 esi, eax
  001e2	8b 06		 mov	 eax, DWORD PTR [esi]
  001e4	8a 48 1d	 mov	 cl, BYTE PTR [eax+29]
  001e7	84 c9		 test	 cl, cl
  001e9	74 f5		 je	 SHORT $L142848
  001eb	eb 1d		 jmp	 SHORT $L142860
$L143004:
  001ed	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001f0	8a 48 1d	 mov	 cl, BYTE PTR [eax+29]
  001f3	84 c9		 test	 cl, cl
  001f5	75 11		 jne	 SHORT $L142863
$L142862:
  001f7	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  001fa	75 0c		 jne	 SHORT $L142863
  001fc	8b f0		 mov	 esi, eax
  001fe	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00201	8a 48 1d	 mov	 cl, BYTE PTR [eax+29]
  00204	84 c9		 test	 cl, cl
  00206	74 ef		 je	 SHORT $L142862
$L142863:
  00208	8b f0		 mov	 esi, eax
$L142860:
  0020a	3b 77 38	 cmp	 esi, DWORD PTR [edi+56]
  0020d	75 91		 jne	 SHORT $L142826
$L127128:

; 2721 : 	}
; 2722 : 	Say(pMSG);

  0020f	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+36]
  00213	8b 01		 mov	 eax, DWORD PTR [ecx]
  00215	55		 push	 ebp
  00216	ff 10		 call	 DWORD PTR [eax]

; 2723 : }

  00218	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  0021b	c6 44 24 20 00	 mov	 BYTE PTR __$EHRec$[esp+44], 0
  00220	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00223	83 ca ff	 or	 edx, -1
  00226	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0022a	4a		 dec	 edx
  0022b	85 d2		 test	 edx, edx
  0022d	5f		 pop	 edi
  0022e	5e		 pop	 esi
  0022f	5d		 pop	 ebp
  00230	5b		 pop	 ebx
  00231	7f 08		 jg	 SHORT $L142965
  00233	8b 08		 mov	 ecx, DWORD PTR [eax]
  00235	8b 11		 mov	 edx, DWORD PTR [ecx]
  00237	50		 push	 eax
  00238	ff 52 04	 call	 DWORD PTR [edx+4]
$L142965:
  0023b	8b 44 24 2c	 mov	 eax, DWORD PTR _strAtkName$[esp+16]
  0023f	83 c0 f0	 add	 eax, -16		; fffffff0H
  00242	c7 44 24 10 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+28], -1
  0024a	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0024d	83 ca ff	 or	 edx, -1
  00250	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00254	4a		 dec	 edx
  00255	85 d2		 test	 edx, edx
  00257	7f 08		 jg	 SHORT $L142992
  00259	8b 08		 mov	 ecx, DWORD PTR [eax]
  0025b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0025d	50		 push	 eax
  0025e	ff 52 04	 call	 DWORD PTR [edx+4]
$L142992:
  00261	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00265	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0026c	83 c4 14	 add	 esp, 20			; 00000014H
  0026f	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L142214:
  00000	8d 4d 18	 lea	 ecx, DWORD PTR _strAtkName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L142215:
  00008	8d 4d 0c	 lea	 ecx, DWORD PTR _strDefName$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L142216:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T142202[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendMW_CASTLEWARINFO_REQ@CTServer@@QAEXPAUtagCASTLEWARINFO@@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EK1@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T142997
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CASTLEWARINFO_REQ@CTServer@@QAEXPAUtagCASTLEWARINFO@@KV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EK1@Z ENDP ; CTServer::SendMW_CASTLEWARINFO_REQ
PUBLIC	?SendMW_GUILDPOINTLOG_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z ; CTServer::SendMW_GUILDPOINTLOG_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	SEGMENT
$T143213 DD	0ffffffffH
	DD	FLAT:$L143023
$T143210 DD	019930520H
	DD	01H
	DD	FLAT:$T143213
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDPOINTLOG_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z
_TEXT	SEGMENT
$T143020 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_pGuild$ = 16						; size = 4
?SendMW_GUILDPOINTLOG_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z PROC NEAR ; CTServer::SendMW_GUILDPOINTLOG_REQ, COMDAT
; _this$ = ecx

; 2882 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDPOINTLOG_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi

; 2883 : 	CPacket* pMSG = new CPacket();

  0001a	6a 1c		 push	 28			; 0000001cH
  0001c	8b e9		 mov	 ebp, ecx
  0001e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00023	83 c4 04	 add	 esp, 4
  00026	89 44 24 10	 mov	 DWORD PTR $T143020[esp+32], eax
  0002a	33 ff		 xor	 edi, edi
  0002c	3b c7		 cmp	 eax, edi
  0002e	89 7c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], edi
  00032	74 0b		 je	 SHORT $L143021
  00034	8b c8		 mov	 ecx, eax
  00036	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003b	8b d8		 mov	 ebx, eax
  0003d	eb 02		 jmp	 SHORT $L143022
$L143021:
  0003f	33 db		 xor	 ebx, ebx
$L143022:

; 2884 : 	pMSG->SetID(MW_GUILDPOINTLOG_REQ)
; 2885 : 		<< dwCharID
; 2886 : 		<< dwKey
; 2887 : 		<< WORD(pGuild->m_vPointReward.size());

  00041	8b 74 24 2c	 mov	 esi, DWORD PTR _pGuild$[esp+28]
  00045	8b 8e bc 00 00
	00		 mov	 ecx, DWORD PTR [esi+188]
  0004b	3b cf		 cmp	 ecx, edi
  0004d	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  00055	75 04		 jne	 SHORT $L143028
  00057	33 c0		 xor	 eax, eax
  00059	eb 0b		 jmp	 SHORT $L143029
$L143028:
  0005b	8b 86 c0 00 00
	00		 mov	 eax, DWORD PTR [esi+192]
  00061	2b c1		 sub	 eax, ecx
  00063	c1 f8 04	 sar	 eax, 4
$L143029:
  00066	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwCharID$[esp+28]
  0006a	50		 push	 eax
  0006b	8b 44 24 2c	 mov	 eax, DWORD PTR _dwKey$[esp+32]
  0006f	50		 push	 eax
  00070	51		 push	 ecx
  00071	68 23 21 00 00	 push	 8483			; 00002123H
  00076	8b cb		 mov	 ecx, ebx
  00078	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007d	8b c8		 mov	 ecx, eax
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008b	8b c8		 mov	 ecx, eax
  0008d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
$L127277:

; 2888 : 
; 2889 : 	for(WORD i=0; i<pGuild->m_vPointReward.size(); i++)

  00092	8b 86 bc 00 00
	00		 mov	 eax, DWORD PTR [esi+188]
  00098	85 c0		 test	 eax, eax
  0009a	75 04		 jne	 SHORT $L143036
  0009c	33 c9		 xor	 ecx, ecx
  0009e	eb 0b		 jmp	 SHORT $L143037
$L143036:
  000a0	8b 8e c0 00 00
	00		 mov	 ecx, DWORD PTR [esi+192]
  000a6	2b c8		 sub	 ecx, eax
  000a8	c1 f9 04	 sar	 ecx, 4
$L143037:
  000ab	0f b7 c7	 movzx	 eax, di
  000ae	3b c1		 cmp	 eax, ecx
  000b0	73 33		 jae	 SHORT $L127279

; 2890 : 	{
; 2891 : 		(*pMSG)
; 2892 : 			<< pGuild->m_vPointReward[i].m_dlDate
; 2893 : 			<< pGuild->m_vPointReward[i].m_strName
; 2894 : 			<< pGuild->m_vPointReward[i].m_dwPoint;

  000b2	8b 96 bc 00 00
	00		 mov	 edx, DWORD PTR [esi+188]
  000b8	c1 e0 04	 shl	 eax, 4
  000bb	8b 0c 10	 mov	 ecx, DWORD PTR [eax+edx]
  000be	03 c2		 add	 eax, edx
  000c0	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000c3	52		 push	 edx
  000c4	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  000c7	51		 push	 ecx
  000c8	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  000cb	51		 push	 ecx
  000cc	52		 push	 edx
  000cd	8b cb		 mov	 ecx, ebx
  000cf	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  000d4	8b c8		 mov	 ecx, eax
  000d6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000db	8b c8		 mov	 ecx, eax
  000dd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000e2	47		 inc	 edi
  000e3	eb ad		 jmp	 SHORT $L127277
$L127279:

; 2895 : 	}
; 2896 : 
; 2897 : 	Say(pMSG);

  000e5	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  000e8	53		 push	 ebx
  000e9	8b cd		 mov	 ecx, ebp
  000eb	ff 10		 call	 DWORD PTR [eax]

; 2898 : }

  000ed	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  000f1	5f		 pop	 edi
  000f2	5e		 pop	 esi
  000f3	5d		 pop	 ebp
  000f4	5b		 pop	 ebx
  000f5	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000fc	83 c4 10	 add	 esp, 16			; 00000010H
  000ff	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L143023:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T143020[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDPOINTLOG_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T143210
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDPOINTLOG_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z ENDP ; CTServer::SendMW_GUILDPOINTLOG_REQ
PUBLIC	?SendMW_TOURNAMENTMATCH_REQ@CTServer@@QAEXPAV?$map@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@@std@@@Z ; CTServer::SendMW_TOURNAMENTMATCH_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T143332 DD	0ffffffffH
	DD	FLAT:$L143226
$T143328 DD	019930520H
	DD	01H
	DD	FLAT:$T143332
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_TOURNAMENTMATCH_REQ@CTServer@@QAEXPAV?$map@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@@std@@@Z
_TEXT	SEGMENT
$T143220 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_itTm$ = 8						; size = 4
_mapPlayer$ = 8						; size = 4
?SendMW_TOURNAMENTMATCH_REQ@CTServer@@QAEXPAV?$map@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@@std@@@Z PROC NEAR ; CTServer::SendMW_TOURNAMENTMATCH_REQ, COMDAT
; _this$ = ecx

; 3297 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TOURNAMENTMATCH_REQ@CTServer@@QAEXPAV?$map@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi

; 3298 : 	CPacket* pMSG = new CPacket();

  00019	6a 1c		 push	 28			; 0000001cH
  0001b	8b e9		 mov	 ebp, ecx
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	83 c4 04	 add	 esp, 4
  00025	89 44 24 0c	 mov	 DWORD PTR $T143220[esp+28], eax
  00029	33 f6		 xor	 esi, esi
  0002b	3b c6		 cmp	 eax, esi
  0002d	89 74 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], esi
  00031	74 09		 je	 SHORT $L143222
  00033	8b c8		 mov	 ecx, eax
  00035	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003a	8b f0		 mov	 esi, eax
$L143222:

; 3299 : 	pMSG->SetID(MW_TOURNAMENTMATCH_REQ)
; 3300 : 		<< BYTE(mapPlayer->size());

  0003c	8b 7c 24 20	 mov	 edi, DWORD PTR _mapPlayer$[esp+24]
  00040	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00043	50		 push	 eax
  00044	68 59 21 00 00	 push	 8537			; 00002159H
  00049	8b ce		 mov	 ecx, esi
  0004b	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00053	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00058	8b c8		 mov	 ecx, eax
  0005a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3301 : 
; 3302 : 	MAPTNMTPLAYER::iterator itTm;
; 3303 : 	for(itTm=mapPlayer->begin(); itTm!=mapPlayer->end(); itTm++)

  0005f	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00062	8b 01		 mov	 eax, DWORD PTR [ecx]
  00064	3b c1		 cmp	 eax, ecx
  00066	89 44 24 20	 mov	 DWORD PTR _itTm$[esp+24], eax
  0006a	0f 84 a1 00 00
	00		 je	 $L128200
$L143277:

; 3304 : 	{
; 3305 : 		LPTNMTPLAYER pPlayer = (*itTm).second;

  00070	8b 40 10	 mov	 eax, DWORD PTR [eax+16]

; 3306 : 		(*pMSG)
; 3307 : 			<< pPlayer->m_bEntryID
; 3308 : 			<< pPlayer->m_bSlotID
; 3309 : 			<< pPlayer->m_dwCharID
; 3310 : 			<< pPlayer->m_bCountry
; 3311 : 			<< pPlayer->m_strName
; 3312 : 			<< pPlayer->m_bLevel
; 3313 : 			<< pPlayer->m_bClass
; 3314 : 			<< pPlayer->m_dwChiefID
; 3315 : 			<< pPlayer->m_bResult[MATCH_QFINAL]
; 3316 : 			<< pPlayer->m_bResult[MATCH_SFINAL]
; 3317 : 			<< pPlayer->m_bResult[MATCH_FINAL];

  00073	33 d2		 xor	 edx, edx
  00075	8a 50 27	 mov	 dl, BYTE PTR [eax+39]
  00078	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0007b	52		 push	 edx
  0007c	33 d2		 xor	 edx, edx
  0007e	8a 50 26	 mov	 dl, BYTE PTR [eax+38]
  00081	52		 push	 edx
  00082	33 d2		 xor	 edx, edx
  00084	8a 50 25	 mov	 dl, BYTE PTR [eax+37]
  00087	52		 push	 edx
  00088	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0008b	52		 push	 edx
  0008c	33 d2		 xor	 edx, edx
  0008e	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  00091	52		 push	 edx
  00092	33 d2		 xor	 edx, edx
  00094	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  00097	52		 push	 edx
  00098	8b 10		 mov	 edx, DWORD PTR [eax]
  0009a	51		 push	 ecx
  0009b	33 c9		 xor	 ecx, ecx
  0009d	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  000a0	51		 push	 ecx
  000a1	52		 push	 edx
  000a2	33 c9		 xor	 ecx, ecx
  000a4	8a 48 24	 mov	 cl, BYTE PTR [eax+36]
  000a7	33 d2		 xor	 edx, edx
  000a9	8a 50 18	 mov	 dl, BYTE PTR [eax+24]
  000ac	51		 push	 ecx
  000ad	8b ce		 mov	 ecx, esi
  000af	52		 push	 edx
  000b0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000b5	8b c8		 mov	 ecx, eax
  000b7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000bc	8b c8		 mov	 ecx, eax
  000be	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000c3	8b c8		 mov	 ecx, eax
  000c5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ca	8b c8		 mov	 ecx, eax
  000cc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000d1	8b c8		 mov	 ecx, eax
  000d3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000d8	8b c8		 mov	 ecx, eax
  000da	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000df	8b c8		 mov	 ecx, eax
  000e1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000e6	8b c8		 mov	 ecx, eax
  000e8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ed	8b c8		 mov	 ecx, eax
  000ef	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000f4	8b c8		 mov	 ecx, eax
  000f6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000fb	8d 4c 24 20	 lea	 ecx, DWORD PTR _itTm$[esp+24]
  000ff	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTNMTPLAYER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTNMTPLAYER *> >,0> >::const_iterator::_Inc
  00104	8b 44 24 20	 mov	 eax, DWORD PTR _itTm$[esp+24]
  00108	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
  0010b	0f 85 5f ff ff
	ff		 jne	 $L143277
$L128200:

; 3318 : 	}
; 3319 : 
; 3320 : 	Say(pMSG);

  00111	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  00114	56		 push	 esi
  00115	8b cd		 mov	 ecx, ebp
  00117	ff 10		 call	 DWORD PTR [eax]

; 3321 : }

  00119	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  0011d	5f		 pop	 edi
  0011e	5e		 pop	 esi
  0011f	5d		 pop	 ebp
  00120	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00127	83 c4 10	 add	 esp, 16			; 00000010H
  0012a	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L143226:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T143220[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_TOURNAMENTMATCH_REQ@CTServer@@QAEXPAV?$map@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@@std@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T143328
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TOURNAMENTMATCH_REQ@CTServer@@QAEXPAV?$map@KPAUtagTNMTPLAYER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTNMTPLAYER@@@std@@@3@@std@@@Z ENDP ; CTServer::SendMW_TOURNAMENTMATCH_REQ
PUBLIC	?SendMW_TOURNAMENTRESULT_REQ@CTServer@@QAEXGEEKKKKAAV?$vector@KV?$allocator@K@std@@@std@@@Z ; CTServer::SendMW_TOURNAMENTRESULT_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	SEGMENT
$T143417 DD	0ffffffffH
	DD	FLAT:$L143342
$T143413 DD	019930520H
	DD	01H
	DD	FLAT:$T143417
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_TOURNAMENTRESULT_REQ@CTServer@@QAEXGEEKKKKAAV?$vector@KV?$allocator@K@std@@@std@@@Z
_TEXT	SEGMENT
$T143339 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wTournamentID$ = 8					; size = 2
_bStep$ = 12						; size = 1
_bRet$ = 16						; size = 1
_dwWin$ = 20						; size = 4
_dwLose$ = 24						; size = 4
_dwBlueHideTick$ = 28					; size = 4
_dwRedHideTick$ = 32					; size = 4
_vPlayer$ = 36						; size = 4
?SendMW_TOURNAMENTRESULT_REQ@CTServer@@QAEXGEEKKKKAAV?$vector@KV?$allocator@K@std@@@std@@@Z PROC NEAR ; CTServer::SendMW_TOURNAMENTRESULT_REQ, COMDAT
; _this$ = ecx

; 3331 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TOURNAMENTRESULT_REQ@CTServer@@QAEXGEEKKKKAAV?$vector@KV?$allocator@K@std@@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi

; 3332 : 	CPacket * pMSG = new CPacket();

  0001a	6a 1c		 push	 28			; 0000001cH
  0001c	8b e9		 mov	 ebp, ecx
  0001e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00023	83 c4 04	 add	 esp, 4
  00026	89 44 24 10	 mov	 DWORD PTR $T143339[esp+32], eax
  0002a	33 f6		 xor	 esi, esi
  0002c	3b c6		 cmp	 eax, esi
  0002e	89 74 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], esi
  00032	74 0b		 je	 SHORT $L143340
  00034	8b c8		 mov	 ecx, eax
  00036	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003b	8b d8		 mov	 ebx, eax
  0003d	eb 02		 jmp	 SHORT $L143341
$L143340:
  0003f	33 db		 xor	 ebx, ebx
$L143341:

; 3333 : 	pMSG->SetID(MW_TOURNAMENTRESULT_REQ)
; 3334 : 		<< wTournamentID
; 3335 : 		<< bStep
; 3336 : 		<< bRet
; 3337 : 		<< dwWin
; 3338 : 		<< dwLose
; 3339 : 		<< dwBlueHideTick
; 3340 : 		<< dwRedHideTick
; 3341 : 		<< BYTE(vPlayer.size());

  00041	8b 7c 24 40	 mov	 edi, DWORD PTR _vPlayer$[esp+28]
  00045	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00048	3b ce		 cmp	 ecx, esi
  0004a	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  00052	75 04		 jne	 SHORT $L143348
  00054	33 c0		 xor	 eax, eax
  00056	eb 08		 jmp	 SHORT $L143349
$L143348:
  00058	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0005b	2b c1		 sub	 eax, ecx
  0005d	c1 f8 02	 sar	 eax, 2
$L143349:
  00060	8b 4c 24 38	 mov	 ecx, DWORD PTR _dwBlueHideTick$[esp+28]
  00064	8b 54 24 34	 mov	 edx, DWORD PTR _dwLose$[esp+28]
  00068	50		 push	 eax
  00069	8b 44 24 40	 mov	 eax, DWORD PTR _dwRedHideTick$[esp+32]
  0006d	50		 push	 eax
  0006e	8b 44 24 38	 mov	 eax, DWORD PTR _dwWin$[esp+36]
  00072	51		 push	 ecx
  00073	8b 4c 24 38	 mov	 ecx, DWORD PTR _bRet$[esp+40]
  00077	52		 push	 edx
  00078	8b 54 24 38	 mov	 edx, DWORD PTR _bStep$[esp+44]
  0007c	50		 push	 eax
  0007d	8b 44 24 38	 mov	 eax, DWORD PTR _wTournamentID$[esp+48]
  00081	51		 push	 ecx
  00082	52		 push	 edx
  00083	50		 push	 eax
  00084	68 5c 21 00 00	 push	 8540			; 0000215cH
  00089	8b cb		 mov	 ecx, ebx
  0008b	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0009e	8b c8		 mov	 ecx, eax
  000a0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a5	8b c8		 mov	 ecx, eax
  000a7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ac	8b c8		 mov	 ecx, eax
  000ae	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b3	8b c8		 mov	 ecx, eax
  000b5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ba	8b c8		 mov	 ecx, eax
  000bc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000c1	8b c8		 mov	 ecx, eax
  000c3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
$L128219:

; 3342 : 
; 3343 : 	for(DWORD i=0; i<vPlayer.size(); i++)

  000c8	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  000cb	85 c9		 test	 ecx, ecx
  000cd	74 1a		 je	 SHORT $L143415
  000cf	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000d2	2b c1		 sub	 eax, ecx
  000d4	c1 f8 02	 sar	 eax, 2
  000d7	3b f0		 cmp	 esi, eax
  000d9	73 0e		 jae	 SHORT $L143415

; 3344 : 		(*pMSG) << vPlayer[i];

  000db	8b 0c b1	 mov	 ecx, DWORD PTR [ecx+esi*4]
  000de	51		 push	 ecx
  000df	8b cb		 mov	 ecx, ebx
  000e1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000e6	46		 inc	 esi
  000e7	eb df		 jmp	 SHORT $L128219
$L143415:

; 3345 : 
; 3346 : 	Say(pMSG);

  000e9	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ec	53		 push	 ebx
  000ed	8b cd		 mov	 ecx, ebp
  000ef	ff 12		 call	 DWORD PTR [edx]

; 3347 : }

  000f1	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  000f5	5f		 pop	 edi
  000f6	5e		 pop	 esi
  000f7	5d		 pop	 ebp
  000f8	5b		 pop	 ebx
  000f9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00100	83 c4 10	 add	 esp, 16			; 00000010H
  00103	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L143342:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T143339[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_TOURNAMENTRESULT_REQ@CTServer@@QAEXGEEKKKKAAV?$vector@KV?$allocator@K@std@@@std@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T143413
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TOURNAMENTRESULT_REQ@CTServer@@QAEXGEEKKKKAAV?$vector@KV?$allocator@K@std@@@std@@@Z ENDP ; CTServer::SendMW_TOURNAMENTRESULT_REQ
PUBLIC	?find@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::find
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z
_TEXT	SEGMENT
$T143426 = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
__Keyval$ = 12						; size = 4
?find@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::find, COMDAT
; _this$ = ecx

; 787  : 		{	// find an element in mutable sequence that matches _Keyval

  00000	51		 push	 ecx

; 788  : 		iterator _Where = lower_bound(_Keyval);

  00001	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00004	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00007	53		 push	 ebx
  00008	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  0000b	84 db		 test	 bl, bl
  0000d	56		 push	 esi
  0000e	57		 push	 edi
  0000f	8b 7c 24 18	 mov	 edi, DWORD PTR __Keyval$[esp+12]
  00013	75 17		 jne	 SHORT $L143521
  00015	8b 37		 mov	 esi, DWORD PTR [edi]
$L143520:
  00017	39 70 0c	 cmp	 DWORD PTR [eax+12], esi
  0001a	73 05		 jae	 SHORT $L143522
  0001c	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  0001f	eb 04		 jmp	 SHORT $L143523
$L143522:
  00021	8b d0		 mov	 edx, eax
  00023	8b 00		 mov	 eax, DWORD PTR [eax]
$L143523:
  00025	8a 58 15	 mov	 bl, BYTE PTR [eax+21]
  00028	84 db		 test	 bl, bl
  0002a	74 eb		 je	 SHORT $L143520
$L143521:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  0002c	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  0002f	3b d0		 cmp	 edx, eax
  00031	89 54 24 18	 mov	 DWORD PTR __Where$[esp+12], edx
  00035	74 1a		 je	 SHORT $L143425
  00037	8b 0f		 mov	 ecx, DWORD PTR [edi]
  00039	3b 4a 0c	 cmp	 ecx, DWORD PTR [edx+12]
  0003c	72 13		 jb	 SHORT $L143425
  0003e	8d 44 24 18	 lea	 eax, DWORD PTR __Where$[esp+12]
  00042	8b 10		 mov	 edx, DWORD PTR [eax]
  00044	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  00048	5f		 pop	 edi
  00049	5e		 pop	 esi
  0004a	89 10		 mov	 DWORD PTR [eax], edx
  0004c	5b		 pop	 ebx

; 791  : 		}

  0004d	59		 pop	 ecx
  0004e	c2 08 00	 ret	 8
$L143425:

; 789  : 		return (_Where == end() || this->comp(_Keyval, _Key(_Where._Mynode()))
; 790  : 			? end() : _Where);

  00051	89 44 24 0c	 mov	 DWORD PTR $T143426[esp+16], eax
  00055	8d 44 24 0c	 lea	 eax, DWORD PTR $T143426[esp+16]
  00059	8b 10		 mov	 edx, DWORD PTR [eax]
  0005b	8b 44 24 14	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+12]
  0005f	5f		 pop	 edi
  00060	5e		 pop	 esi
  00061	89 10		 mov	 DWORD PTR [eax], edx
  00063	5b		 pop	 ebx

; 791  : 		}

  00064	59		 pop	 ecx
  00065	c2 08 00	 ret	 8
?find@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::find
_TEXT	ENDS
PUBLIC	??1?$vector@_JV?$allocator@_J@std@@@std@@QAE@XZ	; std::vector<__int64,std::allocator<__int64> >::~vector<__int64,std::allocator<__int64> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??1?$vector@_JV?$allocator@_J@std@@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$vector@_JV?$allocator@_J@std@@@std@@QAE@XZ PROC NEAR ; std::vector<__int64,std::allocator<__int64> >::~vector<__int64,std::allocator<__int64> >, COMDAT
; _this$ = ecx

; 387  : 		{	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 388  : 		_Tidy();

  00003	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L143595
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L143595:
  00013	c7 46 04 00 00
	00 00		 mov	 DWORD PTR [esi+4], 0
  0001a	c7 46 08 00 00
	00 00		 mov	 DWORD PTR [esi+8], 0
  00021	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00028	5e		 pop	 esi

; 389  : 		}

  00029	c3		 ret	 0
??1?$vector@_JV?$allocator@_J@std@@@std@@QAE@XZ ENDP	; std::vector<__int64,std::allocator<__int64> >::~vector<__int64,std::allocator<__int64> >
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> >,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,std::vector<tagTGUILDTACTICSWANTED,std::allocator<tagTGUILDTACTICSWANTED> > > >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTOURNAMENTENTRY *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTOURNAMENTENTRY *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??$_Uninitialized_copy@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@PA_JV?$allocator@_J@3@@std@@YAPA_JVconst_iterator@?$vector@_JV?$allocator@_J@std@@@0@0PA_JAAV?$allocator@_J@0@@Z ; std::_Uninitialized_copy<std::vector<__int64,std::allocator<__int64> >::const_iterator,__int64 *,std::allocator<__int64> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\memory
;	COMDAT ??$_Uninitialized_copy@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@PA_JV?$allocator@_J@3@@std@@YAPA_JVconst_iterator@?$vector@_JV?$allocator@_J@std@@@0@0PA_JAAV?$allocator@_J@0@@Z
_TEXT	SEGMENT
__Cat$143726 = -4					; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@PA_JV?$allocator@_J@3@@std@@YAPA_JVconst_iterator@?$vector@_JV?$allocator@_J@std@@@0@0PA_JAAV?$allocator@_J@0@@Z PROC NEAR ; std::_Uninitialized_copy<std::vector<__int64,std::allocator<__int64> >::const_iterator,__int64 *,std::allocator<__int64> >, COMDAT

; 126  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

  00000	51		 push	 ecx

; 127  : 	return (_Uninit_copy(_First, _Last, _Dest, _Al,
; 128  : 		_Ptr_cat(_First, _Dest)));

  00001	8b 04 24	 mov	 eax, DWORD PTR __Cat$143726[esp+4]
  00004	8b 4c 24 14	 mov	 ecx, DWORD PTR __Al$[esp]
  00008	8b 54 24 10	 mov	 edx, DWORD PTR __Dest$[esp]
  0000c	50		 push	 eax
  0000d	8b 44 24 10	 mov	 eax, DWORD PTR __Last$[esp+4]
  00011	51		 push	 ecx
  00012	8b 4c 24 10	 mov	 ecx, DWORD PTR __First$[esp+8]
  00016	52		 push	 edx
  00017	50		 push	 eax
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ??$_Uninit_copy@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@PA_JV?$allocator@_J@3@@std@@YAPA_JVconst_iterator@?$vector@_JV?$allocator@_J@std@@@0@0PA_JAAV?$allocator@_J@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<__int64,std::allocator<__int64> >::const_iterator,__int64 *,std::allocator<__int64> >

; 129  : 	}

  0001e	83 c4 18	 add	 esp, 24			; 00000018H
  00021	c3		 ret	 0
??$_Uninitialized_copy@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@PA_JV?$allocator@_J@3@@std@@YAPA_JVconst_iterator@?$vector@_JV?$allocator@_J@std@@@0@0PA_JAAV?$allocator@_J@0@@Z ENDP ; std::_Uninitialized_copy<std::vector<__int64,std::allocator<__int64> >::const_iterator,__int64 *,std::allocator<__int64> >
_TEXT	ENDS
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:NEAR		; std::logic_error::`vector deleting destructor'
EXTRN	??1exception@@UAE@XZ:NEAR			; exception::~exception
;	COMDAT ??_7logic_error@std@@6B@
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
CONST	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC NEAR			; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 23   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L143793
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L143793:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@logic_error@std@@UBEPBDXZ PROC NEAR		; std::logic_error::what, COMDAT
; _this$ = ecx

; 27   : 		return (_Str.c_str());

  00000	83 79 24 10	 cmp	 DWORD PTR [ecx+36], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L143821
  00006	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  00009	c3		 ret	 0

; 27   : 		return (_Str.c_str());

$L143821:
  0000a	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  0000d	c3		 ret	 0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC NEAR		; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L143828
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L143828:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?WrapPacketIn@tagEVENTINFO@@QAEXPAVCPacket@@@Z	; tagEVENTINFO::WrapPacketIn
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tworldtype.h
;	COMDAT ?WrapPacketIn@tagEVENTINFO@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT
_pMsg$ = 8						; size = 4
?WrapPacketIn@tagEVENTINFO@@QAEXPAVCPacket@@@Z PROC NEAR ; tagEVENTINFO::WrapPacketIn, COMDAT
; _this$ = ecx

; 768  : 	{

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 769  : 		(*pMsg)
; 770  : 			<< m_dwIndex
; 771  : 			<< m_bID
; 772  : 			<< m_bState
; 773  : 			<< m_bGroupID
; 774  : 			<< m_bSvrType
; 775  : 			<< m_bSvrID
; 776  : 			<< m_dStartDate
; 777  : 			<< m_dEndDate	
; 778  : 			<< m_wValue
; 779  : 			<< m_wMapID
; 780  : 			<< m_dwStartAlarm
; 781  : 			<< m_dwEndAlarm
; 782  : 			<< m_strStartMsg
; 783  : 			<< m_strEndMsg
; 784  : 			<< m_strTitle
; 785  : 			<< m_bPartTime
; 786  : 			<< m_strLotMsg
; 787  : 			<< (WORD)m_vCashItem.size();

  00004	8b 4e 40	 mov	 ecx, DWORD PTR [esi+64]
  00007	85 c9		 test	 ecx, ecx
  00009	57		 push	 edi
  0000a	75 04		 jne	 SHORT $L143837
  0000c	33 c0		 xor	 eax, eax
  0000e	eb 08		 jmp	 SHORT $L143838
$L143837:
  00010	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  00013	2b c1		 sub	 eax, ecx
  00015	c1 f8 02	 sar	 eax, 2
$L143838:
  00018	8b 8e 80 00 00
	00		 mov	 ecx, DWORD PTR [esi+128]
  0001e	50		 push	 eax
  0001f	8b 56 08	 mov	 edx, DWORD PTR [esi+8]
  00022	8b 7e 34	 mov	 edi, DWORD PTR [esi+52]
  00025	8b 5e 30	 mov	 ebx, DWORD PTR [esi+48]
  00028	51		 push	 ecx
  00029	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  0002c	33 c0		 xor	 eax, eax
  0002e	8a 46 39	 mov	 al, BYTE PTR [esi+57]
  00031	50		 push	 eax
  00032	52		 push	 edx
  00033	8b 56 24	 mov	 edx, DWORD PTR [esi+36]
  00036	57		 push	 edi
  00037	53		 push	 ebx
  00038	51		 push	 ecx
  00039	52		 push	 edx
  0003a	8b 56 1c	 mov	 edx, DWORD PTR [esi+28]
  0003d	33 c0		 xor	 eax, eax
  0003f	66 8b 46 22	 mov	 ax, WORD PTR [esi+34]
  00043	33 c9		 xor	 ecx, ecx
  00045	66 8b 4e 20	 mov	 cx, WORD PTR [esi+32]
  00049	8b 5c 24 30	 mov	 ebx, DWORD PTR _pMsg$[esp+40]
  0004d	50		 push	 eax
  0004e	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  00051	51		 push	 ecx
  00052	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  00055	52		 push	 edx
  00056	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  00059	50		 push	 eax
  0005a	51		 push	 ecx
  0005b	33 c0		 xor	 eax, eax
  0005d	8a 46 0e	 mov	 al, BYTE PTR [esi+14]
  00060	33 c9		 xor	 ecx, ecx
  00062	8a 4e 0d	 mov	 cl, BYTE PTR [esi+13]
  00065	52		 push	 edx
  00066	33 d2		 xor	 edx, edx
  00068	8a 56 0c	 mov	 dl, BYTE PTR [esi+12]
  0006b	50		 push	 eax
  0006c	33 c0		 xor	 eax, eax
  0006e	8a 46 38	 mov	 al, BYTE PTR [esi+56]
  00071	51		 push	 ecx
  00072	33 c9		 xor	 ecx, ecx
  00074	8a 4e 04	 mov	 cl, BYTE PTR [esi+4]
  00077	52		 push	 edx
  00078	8b 16		 mov	 edx, DWORD PTR [esi]
  0007a	50		 push	 eax
  0007b	51		 push	 ecx
  0007c	52		 push	 edx
  0007d	8b cb		 mov	 ecx, ebx
  0007f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008b	8b c8		 mov	 ecx, eax
  0008d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00092	8b c8		 mov	 ecx, eax
  00094	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00099	8b c8		 mov	 ecx, eax
  0009b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a7	8b c8		 mov	 ecx, eax
  000a9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  000ae	8b c8		 mov	 ecx, eax
  000b0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  000b5	8b c8		 mov	 ecx, eax
  000b7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000bc	8b c8		 mov	 ecx, eax
  000be	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000c3	8b c8		 mov	 ecx, eax
  000c5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ca	8b c8		 mov	 ecx, eax
  000cc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000d1	8b c8		 mov	 ecx, eax
  000d3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000d8	8b c8		 mov	 ecx, eax
  000da	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000df	8b c8		 mov	 ecx, eax
  000e1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000e6	8b c8		 mov	 ecx, eax
  000e8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ed	8b c8		 mov	 ecx, eax
  000ef	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000f4	8b c8		 mov	 ecx, eax
  000f6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 788  : 
; 789  : 		WORD i;
; 790  : 		for(i = 0; i < (WORD)m_vCashItem.size(); i++)

  000fb	33 ff		 xor	 edi, edi
  000fd	8d 49 00	 npad	 3
$L100888:
  00100	8b 4e 40	 mov	 ecx, DWORD PTR [esi+64]
  00103	85 c9		 test	 ecx, ecx
  00105	74 2e		 je	 SHORT $L144576
  00107	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  0010a	2b c1		 sub	 eax, ecx
  0010c	c1 f8 02	 sar	 eax, 2
  0010f	66 3b f8	 cmp	 di, ax
  00112	73 21		 jae	 SHORT $L144576

; 791  : 		{
; 792  : 			(*pMsg)
; 793  : 				<< m_vCashItem[i].m_wID
; 794  : 				<< m_vCashItem[i].m_bSaleValue;

  00114	0f b7 c7	 movzx	 eax, di
  00117	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]
  0011a	33 d2		 xor	 edx, edx
  0011c	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0011f	0f b7 00	 movzx	 eax, WORD PTR [eax]
  00122	8b cb		 mov	 ecx, ebx
  00124	52		 push	 edx
  00125	50		 push	 eax
  00126	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0012b	8b c8		 mov	 ecx, eax
  0012d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00132	47		 inc	 edi
  00133	eb cb		 jmp	 SHORT $L100888
$L144576:

; 795  : 		}
; 796  : 
; 797  : 		(*pMsg)
; 798  : 			<< m_stMONEVENT.m_bStartAction
; 799  : 			<< m_stMONEVENT.m_bEndAction
; 800  : 			<< (WORD)m_stMONEVENT.m_vSpawnID.size();

  00135	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  00138	85 c9		 test	 ecx, ecx
  0013a	75 04		 jne	 SHORT $L143979
  0013c	33 c0		 xor	 eax, eax
  0013e	eb 07		 jmp	 SHORT $L143980
$L143979:
  00140	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
  00143	2b c1		 sub	 eax, ecx
  00145	d1 f8		 sar	 eax, 1
$L143980:
  00147	33 c9		 xor	 ecx, ecx
  00149	8a 4e 4d	 mov	 cl, BYTE PTR [esi+77]
  0014c	33 d2		 xor	 edx, edx
  0014e	8a 56 4c	 mov	 dl, BYTE PTR [esi+76]
  00151	50		 push	 eax
  00152	51		 push	 ecx
  00153	8b cb		 mov	 ecx, ebx
  00155	52		 push	 edx
  00156	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0015b	8b c8		 mov	 ecx, eax
  0015d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00162	8b c8		 mov	 ecx, eax
  00164	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 801  : 
; 802  : 		for(i = 0; i < (WORD)m_stMONEVENT.m_vSpawnID.size(); i++)

  00169	33 ff		 xor	 edi, edi
  0016b	eb 03 8d 49 00	 npad	 5
$L100893:
  00170	8b 4e 54	 mov	 ecx, DWORD PTR [esi+84]
  00173	85 c9		 test	 ecx, ecx
  00175	74 22		 je	 SHORT $L144577
  00177	8b 46 58	 mov	 eax, DWORD PTR [esi+88]
  0017a	2b c1		 sub	 eax, ecx
  0017c	d1 f8		 sar	 eax, 1
  0017e	66 3b f8	 cmp	 di, ax
  00181	73 16		 jae	 SHORT $L144577

; 803  : 		{
; 804  : 			(*pMsg)
; 805  : 				<< m_stMONEVENT.m_vSpawnID[i];

  00183	0f b7 c7	 movzx	 eax, di
  00186	8d 04 41	 lea	 eax, DWORD PTR [ecx+eax*2]
  00189	33 d2		 xor	 edx, edx
  0018b	66 8b 10	 mov	 dx, WORD PTR [eax]
  0018e	8b cb		 mov	 ecx, ebx
  00190	52		 push	 edx
  00191	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00196	47		 inc	 edi
  00197	eb d7		 jmp	 SHORT $L100893
$L144577:

; 806  : 		}
; 807  : 
; 808  : 		(*pMsg)
; 809  : 			<< (WORD)m_vMONREGEN.size();

  00199	8b 46 64	 mov	 eax, DWORD PTR [esi+100]
  0019c	85 c0		 test	 eax, eax
  0019e	74 16		 je	 SHORT $L144051
$L144050:
  001a0	8b 4e 68	 mov	 ecx, DWORD PTR [esi+104]
  001a3	2b c8		 sub	 ecx, eax
  001a5	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  001aa	f7 e9		 imul	 ecx
  001ac	c1 fa 02	 sar	 edx, 2
  001af	8b c2		 mov	 eax, edx
  001b1	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001b4	03 c2		 add	 eax, edx
$L144051:
  001b6	50		 push	 eax
  001b7	8b cb		 mov	 ecx, ebx
  001b9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 810  : 		for(i = 0; i < (WORD)m_vMONREGEN.size(); i++)

  001be	33 ff		 xor	 edi, edi
$L100898:
  001c0	8b 46 64	 mov	 eax, DWORD PTR [esi+100]
  001c3	85 c0		 test	 eax, eax
  001c5	74 70		 je	 SHORT $L144578
  001c7	8b 4e 68	 mov	 ecx, DWORD PTR [esi+104]
  001ca	2b c8		 sub	 ecx, eax
  001cc	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  001d1	f7 e9		 imul	 ecx
  001d3	c1 fa 02	 sar	 edx, 2
  001d6	8b c2		 mov	 eax, edx
  001d8	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  001db	03 c2		 add	 eax, edx
  001dd	66 3b f8	 cmp	 di, ax
  001e0	73 55		 jae	 SHORT $L144578

; 811  : 		{
; 812  : 			(*pMsg)
; 813  : 				<< m_vMONREGEN[i].m_wMonID
; 814  : 				<< m_vMONREGEN[i].m_dwDelay
; 815  : 				<< m_vMONREGEN[i].m_wMapID
; 816  : 				<< m_vMONREGEN[i].m_fPosX
; 817  : 				<< m_vMONREGEN[i].m_fPosY
; 818  : 				<< m_vMONREGEN[i].m_fPosZ;

  001e2	8b 4e 64	 mov	 ecx, DWORD PTR [esi+100]
  001e5	0f b7 c7	 movzx	 eax, di
  001e8	8d 04 40	 lea	 eax, DWORD PTR [eax+eax*2]
  001eb	8b 54 c1 14	 mov	 edx, DWORD PTR [ecx+eax*8+20]
  001ef	8d 04 c1	 lea	 eax, DWORD PTR [ecx+eax*8]
  001f2	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  001f5	52		 push	 edx
  001f6	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  001f9	51		 push	 ecx
  001fa	33 c9		 xor	 ecx, ecx
  001fc	66 8b 48 08	 mov	 cx, WORD PTR [eax+8]
  00200	52		 push	 edx
  00201	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00204	0f b7 00	 movzx	 eax, WORD PTR [eax]
  00207	51		 push	 ecx
  00208	52		 push	 edx
  00209	50		 push	 eax
  0020a	8b cb		 mov	 ecx, ebx
  0020c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00211	8b c8		 mov	 ecx, eax
  00213	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00218	8b c8		 mov	 ecx, eax
  0021a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0021f	8b c8		 mov	 ecx, eax
  00221	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  00226	8b c8		 mov	 ecx, eax
  00228	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  0022d	8b c8		 mov	 ecx, eax
  0022f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@M@Z	; CPacket::operator<<
  00234	47		 inc	 edi
  00235	eb 89		 jmp	 SHORT $L100898
$L144578:

; 819  : 		}
; 820  : 
; 821  : 		(*pMsg)
; 822  : 			<< (WORD)m_vLOTTERY.size();

  00237	8b 46 74	 mov	 eax, DWORD PTR [esi+116]
  0023a	85 c0		 test	 eax, eax
  0023c	74 13		 je	 SHORT $L144396
$L144395:
  0023e	8b 4e 78	 mov	 ecx, DWORD PTR [esi+120]
  00241	2b c8		 sub	 ecx, eax
  00243	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00248	f7 e9		 imul	 ecx
  0024a	8b c2		 mov	 eax, edx
  0024c	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0024f	03 c2		 add	 eax, edx
$L144396:
  00251	50		 push	 eax
  00252	8b cb		 mov	 ecx, ebx
  00254	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 823  : 		for(i = 0; i < (WORD)m_vLOTTERY.size(); i++)

  00259	33 ff		 xor	 edi, edi
  0025b	eb 03 8d 49 00	 npad	 5
$L100903:
  00260	8b 46 74	 mov	 eax, DWORD PTR [esi+116]
  00263	85 c0		 test	 eax, eax
  00265	74 4d		 je	 SHORT $L144579
  00267	8b 4e 78	 mov	 ecx, DWORD PTR [esi+120]
  0026a	2b c8		 sub	 ecx, eax
  0026c	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  00271	f7 e9		 imul	 ecx
  00273	8b c2		 mov	 eax, edx
  00275	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00278	03 c2		 add	 eax, edx
  0027a	66 3b f8	 cmp	 di, ax
  0027d	73 35		 jae	 SHORT $L144579

; 824  : 		{
; 825  : 			(*pMsg)
; 826  : 				<< m_vLOTTERY[i].m_wItemID
; 827  : 				<< m_vLOTTERY[i].m_bNum
; 828  : 				<< m_vLOTTERY[i].m_wWinner;

  0027f	8b 56 74	 mov	 edx, DWORD PTR [esi+116]
  00282	0f b7 c7	 movzx	 eax, di
  00285	8d 0c 40	 lea	 ecx, DWORD PTR [eax+eax*2]
  00288	8d 04 4a	 lea	 eax, DWORD PTR [edx+ecx*2]
  0028b	33 c9		 xor	 ecx, ecx
  0028d	66 8b 48 04	 mov	 cx, WORD PTR [eax+4]
  00291	33 d2		 xor	 edx, edx
  00293	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  00296	0f b7 00	 movzx	 eax, WORD PTR [eax]
  00299	51		 push	 ecx
  0029a	8b cb		 mov	 ecx, ebx
  0029c	52		 push	 edx
  0029d	50		 push	 eax
  0029e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  002a3	8b c8		 mov	 ecx, eax
  002a5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  002aa	8b c8		 mov	 ecx, eax
  002ac	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  002b1	47		 inc	 edi
  002b2	eb ac		 jmp	 SHORT $L100903
$L144579:
  002b4	5f		 pop	 edi
  002b5	5e		 pop	 esi
  002b6	5b		 pop	 ebx

; 829  : 		}
; 830  : 	}

  002b7	c2 04 00	 ret	 4
?WrapPacketIn@tagEVENTINFO@@QAEXPAVCPacket@@@Z ENDP	; tagEVENTINFO::WrapPacketIn
_TEXT	ENDS
PUBLIC	?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHI@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::LoadStringA
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHI@Z
_TEXT	SEGMENT
_nID$ = 8						; size = 4
?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHI@Z PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::LoadStringA, COMDAT
; _this$ = ecx

; 1969 : 	{

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1970 : 		HINSTANCE hInst = StringTraits::FindStringResourceInstance( nID );

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _nID$[esp+4]
  00006	6a 00		 push	 0
  00008	57		 push	 edi
  00009	8b f1		 mov	 esi, ecx
  0000b	e8 00 00 00 00	 call	 ?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z ; ATL::AtlFindStringResourceInstance
  00010	83 c4 08	 add	 esp, 8

; 1971 : 		if( hInst == NULL )

  00013	85 c0		 test	 eax, eax
  00015	75 05		 jne	 SHORT $L116475
  00017	5f		 pop	 edi
  00018	5e		 pop	 esi

; 1977 : 	}

  00019	c2 04 00	 ret	 4
$L116475:

; 1972 : 		{
; 1973 : 			return( FALSE );
; 1974 : 		}
; 1975 : 
; 1976 : 		return( LoadString( hInst, nID ) );		

  0001c	57		 push	 edi
  0001d	50		 push	 eax
  0001e	8b ce		 mov	 ecx, esi
  00020	e8 00 00 00 00	 call	 ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::LoadStringA
  00025	5f		 pop	 edi
  00026	5e		 pop	 esi

; 1977 : 	}

  00027	c2 04 00	 ret	 4
?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHI@Z ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::LoadStringA
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@KPAUtagTFRIEND@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTFRIEND@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned long,tagTFRIEND *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTFRIEND *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::iterator::operator++
; Function compile flags: /Ogty
;	COMDAT ??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
___formal$ = 12						; size = 4
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::iterator::operator++, COMDAT
; _this$ = ecx

; 332  : 			{	// postincrement

  00000	56		 push	 esi

; 333  : 			iterator _Tmp = *this;

  00001	8b 31		 mov	 esi, DWORD PTR [ecx]

; 334  : 			++*this;

  00003	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::_Inc

; 335  : 			return (_Tmp);

  00008	8b 44 24 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp]
  0000c	89 30		 mov	 DWORD PTR [eax], esi
  0000e	5e		 pop	 esi

; 336  : 			}

  0000f	c2 08 00	 ret	 8
??Eiterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AV012@H@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::iterator::operator++
_TEXT	ENDS
PUBLIC	?CheckImplicitLoad@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAE_NPBX@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CheckImplicitLoad
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ?CheckImplicitLoad@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT
_pv$ = 8						; size = 4
?CheckImplicitLoad@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAE_NPBX@Z PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CheckImplicitLoad, COMDAT
; _this$ = ecx

; 2229 : 	{

  00000	57		 push	 edi
  00001	8b f9		 mov	 edi, ecx

; 2230 : 		bool bRet = false;
; 2231 : 
; 2232 : 		if( (pv != NULL) && IS_INTRESOURCE( pv ) )

  00003	8b 4c 24 08	 mov	 ecx, DWORD PTR _pv$[esp]
  00007	32 c0		 xor	 al, al
  00009	85 c9		 test	 ecx, ecx
  0000b	74 27		 je	 SHORT $L117656
  0000d	f7 c1 00 00 ff
	ff		 test	 ecx, -65536		; ffff0000H
  00013	75 1f		 jne	 SHORT $L117656
  00015	56		 push	 esi

; 2233 : 		{
; 2234 : 			UINT nID = LOWORD( reinterpret_cast< DWORD_PTR >( pv ) );

  00016	0f b7 f1	 movzx	 esi, cx

; 2235 : 			if( !LoadString( nID ) )

  00019	6a 00		 push	 0
  0001b	56		 push	 esi
  0001c	e8 00 00 00 00	 call	 ?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z ; ATL::AtlFindStringResourceInstance
  00021	83 c4 08	 add	 esp, 8
  00024	85 c0		 test	 eax, eax
  00026	74 09		 je	 SHORT $L144618
  00028	56		 push	 esi
  00029	50		 push	 eax
  0002a	8b cf		 mov	 ecx, edi
  0002c	e8 00 00 00 00	 call	 ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::LoadStringA
$L144618:

; 2236 : 			{
; 2237 : 				ATLTRACE( atlTraceString, 2, _T( "Warning: implicit LoadString(%u) failed\n" ), nID );
; 2238 : 			}
; 2239 : 			bRet = true;

  00031	b0 01		 mov	 al, 1
  00033	5e		 pop	 esi
$L117656:
  00034	5f		 pop	 edi

; 2240 : 		}
; 2241 : 
; 2242 : 		return( bRet );
; 2243 : 	}

  00035	c2 04 00	 ret	 4
?CheckImplicitLoad@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAE_NPBX@Z ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CheckImplicitLoad
_TEXT	ENDS
PUBLIC	??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z	; ATL::CSimpleStringT<char,0>::operator=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::operator=, COMDAT
; _this$ = ecx

; 316  : 		SetString( pszSrc );

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _pszSrc$[esp-4]
  00004	85 d2		 test	 edx, edx
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx
  00009	75 0f		 jne	 SHORT $L144637
  0000b	33 c0		 xor	 eax, eax
  0000d	50		 push	 eax
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 317  : 
; 318  : 		return( *this );

  00014	8b c7		 mov	 eax, edi
  00016	5f		 pop	 edi

; 319  : 	}

  00017	c2 04 00	 ret	 4

; 316  : 		SetString( pszSrc );

$L144637:
  0001a	8b c2		 mov	 eax, edx
  0001c	56		 push	 esi
  0001d	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$L144638:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L144638
  00027	2b c6		 sub	 eax, esi
  00029	5e		 pop	 esi
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	8b cf		 mov	 ecx, edi
  0002e	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 317  : 
; 318  : 		return( *this );

  00033	8b c7		 mov	 eax, edi
  00035	5f		 pop	 edi

; 319  : 	}

  00036	c2 04 00	 ret	 4
??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z ENDP	; ATL::CSimpleStringT<char,0>::operator=
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 590  : 		{	// assign _Right [_Roff, _Roff + _Count)

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi

; 591  : 		if (_Right.size() < _Roff)

  00003	8b 74 24 14	 mov	 esi, DWORD PTR __Roff$[esp+8]
  00007	57		 push	 edi
  00008	8b 7c 24 14	 mov	 edi, DWORD PTR __Right$[esp+12]
  0000c	39 77 14	 cmp	 DWORD PTR [edi+20], esi
  0000f	8b d9		 mov	 ebx, ecx
  00011	73 05		 jae	 SHORT $L117696

; 592  : 			_String_base::_Xran();	// _Roff off end

  00013	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L117696:

; 593  : 		size_type _Num = _Right.size() - _Roff;

  00018	8b 6f 14	 mov	 ebp, DWORD PTR [edi+20]

; 594  : 		if (_Count < _Num)

  0001b	8b 44 24 1c	 mov	 eax, DWORD PTR __Count$[esp+12]
  0001f	2b ee		 sub	 ebp, esi
  00021	3b c5		 cmp	 eax, ebp
  00023	73 02		 jae	 SHORT $L117698

; 595  : 			_Num = _Count;	// trim _Num to size

  00025	8b e8		 mov	 ebp, eax
$L117698:

; 596  : 
; 597  : 		if (this == &_Right)

  00027	3b df		 cmp	 ebx, edi
  00029	75 1f		 jne	 SHORT $L117699

; 598  : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

  0002b	6a ff		 push	 -1
  0002d	03 ee		 add	 ebp, esi
  0002f	55		 push	 ebp
  00030	8b cb		 mov	 ecx, ebx
  00032	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00037	56		 push	 esi
  00038	6a 00		 push	 0
  0003a	8b cb		 mov	 ecx, ebx
  0003c	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00044	8b c3		 mov	 eax, ebx
  00046	5b		 pop	 ebx

; 605  : 		}

  00047	c2 0c 00	 ret	 12			; 0000000cH
$L117699:

; 599  : 		else if (_Grow(_Num))

  0004a	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  0004d	76 07		 jbe	 SHORT $L144750
  0004f	8b cb		 mov	 ecx, ebx
  00051	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L144750:
  00056	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00059	3b c5		 cmp	 eax, ebp
  0005b	73 21		 jae	 SHORT $L144752
  0005d	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00060	50		 push	 eax
  00061	55		 push	 ebp
  00062	8b cb		 mov	 ecx, ebx
  00064	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00069	85 ed		 test	 ebp, ebp
$L144835:
  0006b	76 6d		 jbe	 SHORT $L144834

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

  0006d	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00070	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00075	3b c8		 cmp	 ecx, eax
  00077	72 2f		 jb	 SHORT $L144800
  00079	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0007c	eb 2d		 jmp	 SHORT $L144801

; 599  : 		else if (_Grow(_Num))

$L144752:
  0007e	85 ed		 test	 ebp, ebp
  00080	75 e9		 jne	 SHORT $L144835
  00082	83 f8 10	 cmp	 eax, 16			; 00000010H
  00085	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00088	72 0f		 jb	 SHORT $L144791
  0008a	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	c6 00 00	 mov	 BYTE PTR [eax], 0
  00092	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00093	8b c3		 mov	 eax, ebx
  00095	5b		 pop	 ebx

; 605  : 		}

  00096	c2 0c 00	 ret	 12			; 0000000cH

; 599  : 		else if (_Grow(_Num))

$L144791:
  00099	5f		 pop	 edi
  0009a	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0009d	5e		 pop	 esi
  0009e	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a1	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000a2	8b c3		 mov	 eax, ebx
  000a4	5b		 pop	 ebx

; 605  : 		}

  000a5	c2 0c 00	 ret	 12			; 0000000cH

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

$L144800:
  000a8	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
$L144801:
  000ab	39 43 18	 cmp	 DWORD PTR [ebx+24], eax
  000ae	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000b1	72 04		 jb	 SHORT $L144807
  000b3	8b 38		 mov	 edi, DWORD PTR [eax]
  000b5	eb 02		 jmp	 SHORT $L144808
$L144807:
  000b7	8b f8		 mov	 edi, eax
$L144808:
  000b9	03 f2		 add	 esi, edx
  000bb	8b cd		 mov	 ecx, ebp
  000bd	8b d1		 mov	 edx, ecx
  000bf	c1 e9 02	 shr	 ecx, 2
  000c2	f3 a5		 rep movsd
  000c4	8b ca		 mov	 ecx, edx
  000c6	83 e1 03	 and	 ecx, 3
  000c9	f3 a4		 rep movsb

; 602  : 			_Eos(_Num);

  000cb	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000cf	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000d2	72 02		 jb	 SHORT $L144831
  000d4	8b 00		 mov	 eax, DWORD PTR [eax]
$L144831:
  000d6	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L144834:
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000dd	8b c3		 mov	 eax, ebx
  000df	5b		 pop	 ebx

; 605  : 		}

  000e0	c2 0c 00	 ret	 12			; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Num$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 608  : 		{	// assign [_Ptr, _Ptr + _Num)

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx

; 609  : 		if (_Inside(_Ptr))

  00003	8b 53 18	 mov	 edx, DWORD PTR [ebx+24]
  00006	83 fa 10	 cmp	 edx, 16			; 00000010H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	72 05		 jb	 SHORT $L144861
  0000d	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00010	eb 03		 jmp	 SHORT $L144862
$L144861:
  00012	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$L144862:
  00015	8b 74 24 10	 mov	 esi, DWORD PTR __Ptr$[esp+8]
  00019	3b f0		 cmp	 esi, eax
  0001b	72 34		 jb	 SHORT $L119050
  0001d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00020	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00023	72 04		 jb	 SHORT $L144865
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	eb 02		 jmp	 SHORT $L144866
$L144865:
  00029	8b c8		 mov	 ecx, eax
$L144866:
  0002b	8b 7b 14	 mov	 edi, DWORD PTR [ebx+20]
  0002e	03 f9		 add	 edi, ecx
  00030	3b fe		 cmp	 edi, esi
  00032	76 1d		 jbe	 SHORT $L119050

; 610  : 			return (assign(*this, _Ptr - _Myptr(), _Num));	// substring

  00034	83 fa 10	 cmp	 edx, 16			; 00000010H
  00037	72 02		 jb	 SHORT $L144874
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$L144874:
  0003b	8b 4c 24 14	 mov	 ecx, DWORD PTR __Num$[esp+8]
  0003f	51		 push	 ecx
  00040	2b f0		 sub	 esi, eax
  00042	56		 push	 esi
  00043	53		 push	 ebx
  00044	8b cb		 mov	 ecx, ebx
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx

; 618  : 		}

  0004e	c2 08 00	 ret	 8
$L119050:
  00051	55		 push	 ebp

; 611  : 
; 612  : 		if (_Grow(_Num))

  00052	8b 6c 24 18	 mov	 ebp, DWORD PTR __Num$[esp+12]
  00056	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  00059	76 07		 jbe	 SHORT $L144972
  0005b	8b cb		 mov	 ecx, ebx
  0005d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L144972:
  00062	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00065	3b c5		 cmp	 eax, ebp
  00067	73 1b		 jae	 SHORT $L144973
  00069	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  0006c	52		 push	 edx
  0006d	55		 push	 ebp
  0006e	8b cb		 mov	 ecx, ebx
  00070	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00075	85 ed		 test	 ebp, ebp
$L145053:
  00077	76 68		 jbe	 SHORT $L145050

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

  00079	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  0007d	72 2f		 jb	 SHORT $L145025
  0007f	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
  00082	eb 2d		 jmp	 SHORT $L145026

; 611  : 
; 612  : 		if (_Grow(_Num))

$L144973:
  00084	85 ed		 test	 ebp, ebp
  00086	75 ef		 jne	 SHORT $L145053
  00088	83 f8 10	 cmp	 eax, 16			; 00000010H
  0008b	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  0008e	72 0f		 jb	 SHORT $L145016
  00090	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00093	5d		 pop	 ebp
  00094	5f		 pop	 edi
  00095	c6 00 00	 mov	 BYTE PTR [eax], 0
  00098	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  00099	8b c3		 mov	 eax, ebx
  0009b	5b		 pop	 ebx

; 618  : 		}

  0009c	c2 08 00	 ret	 8

; 611  : 
; 612  : 		if (_Grow(_Num))

$L145016:
  0009f	5d		 pop	 ebp
  000a0	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000a3	5f		 pop	 edi
  000a4	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a7	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000a8	8b c3		 mov	 eax, ebx
  000aa	5b		 pop	 ebx

; 618  : 		}

  000ab	c2 08 00	 ret	 8

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

$L145025:
  000ae	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
$L145026:
  000b1	8b cd		 mov	 ecx, ebp
  000b3	8b c1		 mov	 eax, ecx
  000b5	c1 e9 02	 shr	 ecx, 2
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb

; 615  : 			_Eos(_Num);

  000c1	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000c5	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000c8	72 10		 jb	 SHORT $L145048
  000ca	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000cd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
  000d1	5d		 pop	 ebp
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000d4	8b c3		 mov	 eax, ebx
  000d6	5b		 pop	 ebx

; 618  : 		}

  000d7	c2 08 00	 ret	 8

; 615  : 			_Eos(_Num);

$L145048:
  000da	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000dd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L145050:
  000e1	5d		 pop	 ebp
  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000e4	8b c3		 mov	 eax, ebx
  000e6	5b		 pop	 ebx

; 618  : 		}

  000e7	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??1tagTRPSGAME@@QAE@XZ				; tagTRPSGAME::~tagTRPSGAME
; Function compile flags: /Ogty
;	COMDAT ??1tagTRPSGAME@@QAE@XZ
_TEXT	SEGMENT
??1tagTRPSGAME@@QAE@XZ PROC NEAR			; tagTRPSGAME::~tagTRPSGAME, COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00006	85 c0		 test	 eax, eax
  00008	74 09		 je	 SHORT $L145075
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00010	83 c4 04	 add	 esp, 4
$L145075:
  00013	c7 46 10 00 00
	00 00		 mov	 DWORD PTR [esi+16], 0
  0001a	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00021	c7 46 18 00 00
	00 00		 mov	 DWORD PTR [esi+24], 0
  00028	5e		 pop	 esi
  00029	c3		 ret	 0
??1tagTRPSGAME@@QAE@XZ ENDP				; tagTRPSGAME::~tagTRPSGAME
_TEXT	ENDS
PUBLIC	?SendMW_GUILDMEMBERLIST_REQ@CTServer@@QAEXKKEPAVCTGuild@@@Z ; CTServer::SendMW_GUILDMEMBERLIST_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T145428 DD	0ffffffffH
	DD	FLAT:$L145092
$T145423 DD	019930520H
	DD	01H
	DD	FLAT:$T145428
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDMEMBERLIST_REQ@CTServer@@QAEXKKEPAVCTGuild@@@Z
_TEXT	SEGMENT
$T145082 = -20						; size = 4
$T145081 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bRet$ = 16						; size = 1
_it$123867 = 16						; size = 4
_pGuild$ = 20						; size = 4
?SendMW_GUILDMEMBERLIST_REQ@CTServer@@QAEXKKEPAVCTGuild@@@Z PROC NEAR ; CTServer::SendMW_GUILDMEMBERLIST_REQ, COMDAT
; _this$ = ecx

; 915  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDMEMBERLIST_REQ@CTServer@@QAEXKKEPAVCTGuild@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	8b d9		 mov	 ebx, ecx

; 916  : 	CPacket * pMsg = new CPacket();

  0001e	6a 1c		 push	 28			; 0000001cH
  00020	89 5c 24 18	 mov	 DWORD PTR _this$[esp+40], ebx
  00024	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00029	83 c4 04	 add	 esp, 4
  0002c	89 44 24 10	 mov	 DWORD PTR $T145082[esp+36], eax
  00030	33 ed		 xor	 ebp, ebp
  00032	3b c5		 cmp	 eax, ebp
  00034	89 6c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebp
  00038	74 0f		 je	 SHORT $L145083
  0003a	8b c8		 mov	 ecx, eax
  0003c	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00041	8b f0		 mov	 esi, eax
  00043	89 74 24 10	 mov	 DWORD PTR $T145081[esp+36], esi
  00047	eb 06		 jmp	 SHORT $L145084
$L145083:
  00049	89 6c 24 10	 mov	 DWORD PTR $T145081[esp+36], ebp
  0004d	8b f5		 mov	 esi, ebp
$L145084:

; 917  : 
; 918  : 	pMsg->SetID(MW_GUILDMEMBERLIST_REQ)
; 919  : 		<< dwCharID
; 920  : 		<< dwKEY
; 921  : 		<< bRet;

  0004f	8b 44 24 30	 mov	 eax, DWORD PTR _bRet$[esp+32]
  00053	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwKEY$[esp+32]
  00057	8b 54 24 28	 mov	 edx, DWORD PTR _dwCharID$[esp+32]
  0005b	50		 push	 eax
  0005c	51		 push	 ecx
  0005d	52		 push	 edx
  0005e	68 3b 20 00 00	 push	 8251			; 0000203bH
  00063	8b ce		 mov	 ecx, esi
  00065	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 922  : 
; 923  : 	if(pGuild)

  00087	8b 7c 24 34	 mov	 edi, DWORD PTR _pGuild$[esp+32]
  0008b	3b fd		 cmp	 edi, ebp
  0008d	0f 84 18 01 00
	00		 je	 $L123873

; 924  : 	{
; 925  : 		(*pMsg)
; 926  : 			<< pGuild->m_dwID
; 927  : 			<< pGuild->m_strName
; 928  : 			<< WORD(pGuild->m_mapTMember.size());

  00093	8b 47 78	 mov	 eax, DWORD PTR [edi+120]
  00096	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00099	50		 push	 eax
  0009a	8b 07		 mov	 eax, DWORD PTR [edi]
  0009c	51		 push	 ecx
  0009d	50		 push	 eax
  0009e	8b ce		 mov	 ecx, esi
  000a0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a5	8b c8		 mov	 ecx, eax
  000a7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000ac	8b c8		 mov	 ecx, eax
  000ae	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 929  : 
; 930  : 		MAPTGUILDMEMBER::iterator it;
; 931  : 		for(it=pGuild->m_mapTMember.begin(); it!=pGuild->m_mapTMember.end(); it++)

  000b3	8b 47 74	 mov	 eax, DWORD PTR [edi+116]
  000b6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b8	3b c8		 cmp	 ecx, eax
  000ba	89 4c 24 30	 mov	 DWORD PTR _it$123867[esp+32], ecx
  000be	0f 84 e7 00 00
	00		 je	 $L123873
$L145426:

; 932  : 		{
; 933  : 			(*pMsg)
; 934  : 				<< (*it).second->m_dwID
; 935  : 				<< (*it).second->m_strName
; 936  : 				<< BYTE((*it).second->m_pChar ? (*it).second->m_pChar->m_bLevel : (*it).second->m_bLevel)
; 937  : 				<< (*it).second->m_bClass
; 938  : 				<< (*it).second->m_bDuty
; 939  : 				<< (*it).second->m_bPeer
; 940  : 				<< BYTE((*it).second->m_pChar ? TRUE : FALSE)
; 941  : 				<< DWORD((*it).second->m_pChar ? (*it).second->m_pChar->m_dwRegion : 0)
; 942  : 				<< (*it).second->m_wCastle
; 943  : 				<< (*it).second->m_bCamp
; 944  : 				<< (*it).second->m_dwTactics
; 945  : 				<< (*it).second->m_bWarCountry
; 946  : 				<< (*it).second->m_dlConnectedDate;

  000c4	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  000c7	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000ca	85 c0		 test	 eax, eax
  000cc	74 08		 je	 SHORT $L145090
  000ce	8b a8 a8 00 00
	00		 mov	 ebp, DWORD PTR [eax+168]
  000d4	eb 02		 jmp	 SHORT $L145091
$L145090:
  000d6	33 ed		 xor	 ebp, ebp
$L145091:
  000d8	85 c0		 test	 eax, eax
  000da	74 08		 je	 SHORT $L145088
  000dc	8a 90 cd 00 00
	00		 mov	 dl, BYTE PTR [eax+205]
  000e2	eb 03		 jmp	 SHORT $L145089
$L145088:
  000e4	8a 52 10	 mov	 dl, BYTE PTR [edx+16]
$L145089:
  000e7	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  000ea	8b 58 64	 mov	 ebx, DWORD PTR [eax+100]
  000ed	53		 push	 ebx
  000ee	8b 58 60	 mov	 ebx, DWORD PTR [eax+96]
  000f1	53		 push	 ebx
  000f2	33 db		 xor	 ebx, ebx
  000f4	8a 58 5c	 mov	 bl, BYTE PTR [eax+92]
  000f7	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
  000fa	8b c8		 mov	 ecx, eax
  000fc	53		 push	 ebx
  000fd	8b 58 18	 mov	 ebx, DWORD PTR [eax+24]
  00100	53		 push	 ebx
  00101	33 db		 xor	 ebx, ebx
  00103	8a 58 16	 mov	 bl, BYTE PTR [eax+22]
  00106	53		 push	 ebx
  00107	33 db		 xor	 ebx, ebx
  00109	66 8b 58 14	 mov	 bx, WORD PTR [eax+20]
  0010d	53		 push	 ebx
  0010e	8b 58 04	 mov	 ebx, DWORD PTR [eax+4]
  00111	85 db		 test	 ebx, ebx
  00113	0f 95 c0	 setne	 al
  00116	55		 push	 ebp
  00117	50		 push	 eax
  00118	33 c0		 xor	 eax, eax
  0011a	8a 41 13	 mov	 al, BYTE PTR [ecx+19]
  0011d	50		 push	 eax
  0011e	33 c0		 xor	 eax, eax
  00120	8a 41 12	 mov	 al, BYTE PTR [ecx+18]
  00123	50		 push	 eax
  00124	33 c0		 xor	 eax, eax
  00126	8a 41 11	 mov	 al, BYTE PTR [ecx+17]
  00129	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0012c	50		 push	 eax
  0012d	52		 push	 edx
  0012e	56		 push	 esi
  0012f	51		 push	 ecx
  00130	8b 4c 24 48	 mov	 ecx, DWORD PTR $T145081[esp+92]
  00134	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00139	8b c8		 mov	 ecx, eax
  0013b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00140	8b c8		 mov	 ecx, eax
  00142	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00147	8b c8		 mov	 ecx, eax
  00149	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0014e	8b c8		 mov	 ecx, eax
  00150	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00155	8b c8		 mov	 ecx, eax
  00157	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0015c	8b c8		 mov	 ecx, eax
  0015e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00163	8b c8		 mov	 ecx, eax
  00165	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0016a	8b c8		 mov	 ecx, eax
  0016c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00171	8b c8		 mov	 ecx, eax
  00173	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00178	8b c8		 mov	 ecx, eax
  0017a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0017f	8b c8		 mov	 ecx, eax
  00181	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00186	8b c8		 mov	 ecx, eax
  00188	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  0018d	8d 4c 24 30	 lea	 ecx, DWORD PTR _it$123867[esp+32]
  00191	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc
  00196	8b 4c 24 30	 mov	 ecx, DWORD PTR _it$123867[esp+32]
  0019a	3b 4f 74	 cmp	 ecx, DWORD PTR [edi+116]
  0019d	0f 85 21 ff ff
	ff		 jne	 $L145426
  001a3	8b 74 24 10	 mov	 esi, DWORD PTR $T145081[esp+36]
  001a7	8b 5c 24 14	 mov	 ebx, DWORD PTR _this$[esp+36]
$L123873:

; 947  : 		}
; 948  : 	}
; 949  : 	Say(pMsg);

  001ab	8b 13		 mov	 edx, DWORD PTR [ebx]
  001ad	56		 push	 esi
  001ae	8b cb		 mov	 ecx, ebx
  001b0	ff 12		 call	 DWORD PTR [edx]

; 950  : }

  001b2	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  001b6	5f		 pop	 edi
  001b7	5e		 pop	 esi
  001b8	5d		 pop	 ebp
  001b9	5b		 pop	 ebx
  001ba	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001c1	83 c4 14	 add	 esp, 20			; 00000014H
  001c4	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L145092:
  00000	8b 45 ec	 mov	 eax, DWORD PTR $T145082[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDMEMBERLIST_REQ@CTServer@@QAEXKKEPAVCTGuild@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T145423
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDMEMBERLIST_REQ@CTServer@@QAEXKKEPAVCTGuild@@@Z ENDP ; CTServer::SendMW_GUILDMEMBERLIST_REQ
PUBLIC	?SendMW_GUILDINFO_REQ@CTServer@@QAEXKKEPAUtagTGUILDMEMBER@@PAVCTGuild@@EE@Z ; CTServer::SendMW_GUILDINFO_REQ
EXTRN	?GetMaxMemberCnt@CTGuild@@QAEEXZ:NEAR		; CTGuild::GetMaxMemberCnt
EXTRN	?GetMemberSize@CTGuild@@QAEEXZ:NEAR		; CTGuild::GetMemberSize
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T145574 DD	0ffffffffH
	DD	FLAT:$L145441
$T145566 DD	019930520H
	DD	01H
	DD	FLAT:$T145574
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDINFO_REQ@CTServer@@QAEXKKEPAUtagTGUILDMEMBER@@PAVCTGuild@@EE@Z
_TEXT	SEGMENT
$T145435 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bRet$ = 16						; size = 1
_it$123909 = 16						; size = 4
_pChief$ = 20						; size = 4
_pGuild$ = 24						; size = 4
_bDuty$ = 28						; size = 1
_bPeer$ = 32						; size = 1
?SendMW_GUILDINFO_REQ@CTServer@@QAEXKKEPAUtagTGUILDMEMBER@@PAVCTGuild@@EE@Z PROC NEAR ; CTServer::SendMW_GUILDINFO_REQ, COMDAT
; _this$ = ecx

; 958  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDINFO_REQ@CTServer@@QAEXKKEPAUtagTGUILDMEMBER@@PAVCTGuild@@EE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi

; 959  : 	CPacket * pMsg = new CPacket();

  00019	6a 1c		 push	 28			; 0000001cH
  0001b	8b e9		 mov	 ebp, ecx
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	83 c4 04	 add	 esp, 4
  00025	89 44 24 0c	 mov	 DWORD PTR $T145435[esp+28], eax
  00029	85 c0		 test	 eax, eax
  0002b	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+36], 0
  00033	74 0b		 je	 SHORT $L145436
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003c	8b f8		 mov	 edi, eax
  0003e	eb 02		 jmp	 SHORT $L145437
$L145436:
  00040	33 ff		 xor	 edi, edi
$L145437:

; 960  : 
; 961  : 	pMsg->SetID(MW_GUILDINFO_REQ)
; 962  : 		<< dwCharID
; 963  : 		<< dwKEY
; 964  : 		<< bRet;

  00042	8b 44 24 28	 mov	 eax, DWORD PTR _bRet$[esp+24]
  00046	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKEY$[esp+24]
  0004a	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  0004e	50		 push	 eax
  0004f	51		 push	 ecx
  00050	52		 push	 edx
  00051	68 38 20 00 00	 push	 8248			; 00002038H
  00056	8b cf		 mov	 ecx, edi
  00058	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  00060	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00065	8b c8		 mov	 ecx, eax
  00067	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 965  : 
; 966  : 	if(pGuild)

  0007a	8b 74 24 30	 mov	 esi, DWORD PTR _pGuild$[esp+24]
  0007e	85 f6		 test	 esi, esi
  00080	0f 84 9d 01 00
	00		 je	 $L123907

; 967  : 	{
; 968  : 		(*pMsg)
; 969  : 			<< pGuild->m_dwID
; 970  : 			<< pGuild->m_strName
; 971  : 			<< pGuild->m_timeEstablish
; 972  : 			<< WORD(pGuild->GetMemberSize())
; 973  : 			<< WORD(pGuild->GetMaxMemberCnt())
; 974  : 			<< pChief->m_strName
; 975  : 			<< pChief->m_bPeer;

  00086	8b 44 24 2c	 mov	 eax, DWORD PTR _pChief$[esp+24]
  0008a	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0008d	0f b6 40 13	 movzx	 eax, BYTE PTR [eax+19]
  00091	53		 push	 ebx
  00092	8b 5e 04	 mov	 ebx, DWORD PTR [esi+4]
  00095	50		 push	 eax
  00096	51		 push	 ecx
  00097	8b ce		 mov	 ecx, esi
  00099	e8 00 00 00 00	 call	 ?GetMaxMemberCnt@CTGuild@@QAEEXZ ; CTGuild::GetMaxMemberCnt
  0009e	66 0f b6 c8	 movzx	 cx, al
  000a2	51		 push	 ecx
  000a3	8b ce		 mov	 ecx, esi
  000a5	e8 00 00 00 00	 call	 ?GetMemberSize@CTGuild@@QAEEXZ ; CTGuild::GetMemberSize
  000aa	8b 4e 40	 mov	 ecx, DWORD PTR [esi+64]
  000ad	66 0f b6 d0	 movzx	 dx, al
  000b1	8b 46 44	 mov	 eax, DWORD PTR [esi+68]
  000b4	52		 push	 edx
  000b5	8b 16		 mov	 edx, DWORD PTR [esi]
  000b7	50		 push	 eax
  000b8	51		 push	 ecx
  000b9	53		 push	 ebx
  000ba	52		 push	 edx
  000bb	8b cf		 mov	 ecx, edi
  000bd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000c2	8b c8		 mov	 ecx, eax
  000c4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000c9	8b c8		 mov	 ecx, eax
  000cb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  000d0	8b c8		 mov	 ecx, eax
  000d2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000d7	8b c8		 mov	 ecx, eax
  000d9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000de	8b c8		 mov	 ecx, eax
  000e0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000e5	8b c8		 mov	 ecx, eax
  000e7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 976  : 
; 977  : 		BYTE bVice=0;
; 978  : 		MAPTGUILDMEMBER::iterator it;
; 979  : 		for(it=pGuild->m_mapTMember.begin(); it!=pGuild->m_mapTMember.end(); it++)

  000ec	8b 46 74	 mov	 eax, DWORD PTR [esi+116]
  000ef	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f1	32 db		 xor	 bl, bl
  000f3	3b c8		 cmp	 ecx, eax
  000f5	89 4c 24 2c	 mov	 DWORD PTR _it$123909[esp+28], ecx
  000f9	74 32		 je	 SHORT $L145572
  000fb	eb 03 8d 49 00	 npad	 5
$L145501:

; 980  : 		{
; 981  : 			if((*it).second->m_bDuty == GUILD_DUTY_VICECHIEF)

  00100	8b 49 10	 mov	 ecx, DWORD PTR [ecx+16]
  00103	80 79 12 01	 cmp	 BYTE PTR [ecx+18], 1
  00107	75 0d		 jne	 SHORT $L123914

; 982  : 			{
; 983  : 				bVice++;
; 984  : 				(*pMsg)
; 985  : 					<< (*it).second->m_strName;

  00109	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0010c	50		 push	 eax
  0010d	8b cf		 mov	 ecx, edi
  0010f	fe c3		 inc	 bl
  00111	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
$L123914:
  00116	8d 4c 24 2c	 lea	 ecx, DWORD PTR _it$123909[esp+28]
  0011a	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDMEMBER *> >,0> >::const_iterator::_Inc
  0011f	8b 4c 24 2c	 mov	 ecx, DWORD PTR _it$123909[esp+28]
  00123	3b 4e 74	 cmp	 ecx, DWORD PTR [esi+116]
  00126	75 d8		 jne	 SHORT $L145501

; 986  : 			}
; 987  : 		}
; 988  : 		while(bVice<2)

  00128	80 fb 02	 cmp	 bl, 2
  0012b	73 16		 jae	 SHORT $L123919
$L145572:

; 989  : 		{
; 990  : 			(*pMsg)
; 991  : 				<< NAME_NULL;

  0012d	b1 02		 mov	 cl, 2
  0012f	2a cb		 sub	 cl, bl
  00131	0f b6 d9	 movzx	 ebx, cl
$L123918:
  00134	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00139	8b cf		 mov	 ecx, edi
  0013b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00140	4b		 dec	 ebx
  00141	75 f1		 jne	 SHORT $L123918
$L123919:

; 992  : 			bVice++;
; 993  : 		}
; 994  : 
; 995  : 		(*pMsg)
; 996  : 			<< pGuild->m_bLevel
; 997  : 			<< pGuild->m_dwFame
; 998  : 			<< pGuild->m_dwFameColor
; 999  : 			<< pGuild->m_dwGI
; 1000 : 			<< pGuild->m_dwExp
; 1001 : 			<< pGuild->m_pTLEVEL->m_dwEXP
; 1002 : 			<< pGuild->m_bGPoint
; 1003 : 			<< pGuild->m_bStatus
; 1004 : 			<< pGuild->m_dwGold
; 1005 : 			<< pGuild->m_dwSilver
; 1006 : 			<< pGuild->m_dwCooper
; 1007 : 			<< bDuty
; 1008 : 			<< bPeer
; 1009 : 			<< pGuild->m_strArticleTitle
; 1010 : 			<< pGuild->m_dwPvPTotalPoint
; 1011 : 			<< pGuild->m_dwPvPUseablePoint
; 1012 : 			<< pGuild->m_dwPvPMonthPoint
; 1013 : 			<< pGuild->m_dwRankTotal
; 1014 : 			<< pGuild->m_dwRankMonth;

  00143	8b 56 5c	 mov	 edx, DWORD PTR [esi+92]
  00146	8b 4e 58	 mov	 ecx, DWORD PTR [esi+88]
  00149	8b 46 48	 mov	 eax, DWORD PTR [esi+72]
  0014c	52		 push	 edx
  0014d	8b 56 54	 mov	 edx, DWORD PTR [esi+84]
  00150	51		 push	 ecx
  00151	8b 4e 4c	 mov	 ecx, DWORD PTR [esi+76]
  00154	52		 push	 edx
  00155	8b 56 50	 mov	 edx, DWORD PTR [esi+80]
  00158	51		 push	 ecx
  00159	8b 4c 24 48	 mov	 ecx, DWORD PTR _bDuty$[esp+44]
  0015d	52		 push	 edx
  0015e	8b 56 30	 mov	 edx, DWORD PTR [esi+48]
  00161	50		 push	 eax
  00162	8b 44 24 54	 mov	 eax, DWORD PTR _bPeer$[esp+52]
  00166	50		 push	 eax
  00167	8b 46 2c	 mov	 eax, DWORD PTR [esi+44]
  0016a	51		 push	 ecx
  0016b	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  0016e	52		 push	 edx
  0016f	50		 push	 eax
  00170	51		 push	 ecx
  00171	8b 8e c8 00 00
	00		 mov	 ecx, DWORD PTR [esi+200]
  00177	33 d2		 xor	 edx, edx
  00179	8a 56 25	 mov	 dl, BYTE PTR [esi+37]
  0017c	33 c0		 xor	 eax, eax
  0017e	8a 46 24	 mov	 al, BYTE PTR [esi+36]
  00181	52		 push	 edx
  00182	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00185	8b 4e 1c	 mov	 ecx, DWORD PTR [esi+28]
  00188	50		 push	 eax
  00189	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  0018c	52		 push	 edx
  0018d	8b 56 18	 mov	 edx, DWORD PTR [esi+24]
  00190	50		 push	 eax
  00191	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00194	51		 push	 ecx
  00195	33 c9		 xor	 ecx, ecx
  00197	8a 4e 10	 mov	 cl, BYTE PTR [esi+16]
  0019a	52		 push	 edx
  0019b	50		 push	 eax
  0019c	51		 push	 ecx
  0019d	8b cf		 mov	 ecx, edi
  0019f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  001a4	8b c8		 mov	 ecx, eax
  001a6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001ab	8b c8		 mov	 ecx, eax
  001ad	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001b2	8b c8		 mov	 ecx, eax
  001b4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001b9	8b c8		 mov	 ecx, eax
  001bb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001c0	8b c8		 mov	 ecx, eax
  001c2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001c7	8b c8		 mov	 ecx, eax
  001c9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  001ce	8b c8		 mov	 ecx, eax
  001d0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  001d5	8b c8		 mov	 ecx, eax
  001d7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001dc	8b c8		 mov	 ecx, eax
  001de	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001e3	8b c8		 mov	 ecx, eax
  001e5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001ea	8b c8		 mov	 ecx, eax
  001ec	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  001f1	8b c8		 mov	 ecx, eax
  001f3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  001f8	8b c8		 mov	 ecx, eax
  001fa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  001ff	8b c8		 mov	 ecx, eax
  00201	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00206	8b c8		 mov	 ecx, eax
  00208	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0020d	8b c8		 mov	 ecx, eax
  0020f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00214	8b c8		 mov	 ecx, eax
  00216	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0021b	8b c8		 mov	 ecx, eax
  0021d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00222	5b		 pop	 ebx
$L123907:

; 1015 : 	}
; 1016 : 	Say(pMsg);

  00223	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  00226	57		 push	 edi
  00227	8b cd		 mov	 ecx, ebp
  00229	ff 12		 call	 DWORD PTR [edx]

; 1017 : }

  0022b	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  0022f	5f		 pop	 edi
  00230	5e		 pop	 esi
  00231	5d		 pop	 ebp
  00232	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00239	83 c4 10	 add	 esp, 16			; 00000010H
  0023c	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L145441:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T145435[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDINFO_REQ@CTServer@@QAEXKKEPAUtagTGUILDMEMBER@@PAVCTGuild@@EE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T145566
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDINFO_REQ@CTServer@@QAEXKKEPAUtagTGUILDMEMBER@@PAVCTGuild@@EE@Z ENDP ; CTServer::SendMW_GUILDINFO_REQ
PUBLIC	?SendMW_GUILDCABINETLIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z ; CTServer::SendMW_GUILDCABINETLIST_REQ
EXTRN	?GetCabinetSize@CTGuild@@QAEEXZ:NEAR		; CTGuild::GetCabinetSize
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T145685 DD	0ffffffffH
	DD	FLAT:$L145587
$T145681 DD	019930520H
	DD	01H
	DD	FLAT:$T145685
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDCABINETLIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z
_TEXT	SEGMENT
$T145581 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_it$ = 16						; size = 4
_pGuild$ = 16						; size = 4
?SendMW_GUILDCABINETLIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z PROC NEAR ; CTServer::SendMW_GUILDCABINETLIST_REQ, COMDAT
; _this$ = ecx

; 1022 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDCABINETLIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	57		 push	 edi

; 1023 : 	CPacket * pMsg = new CPacket();

  00019	6a 1c		 push	 28			; 0000001cH
  0001b	8b e9		 mov	 ebp, ecx
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	83 c4 04	 add	 esp, 4
  00025	89 44 24 0c	 mov	 DWORD PTR $T145581[esp+28], eax
  00029	33 ff		 xor	 edi, edi
  0002b	3b c7		 cmp	 eax, edi
  0002d	89 7c 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], edi
  00031	74 09		 je	 SHORT $L145583
  00033	8b c8		 mov	 ecx, eax
  00035	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003a	8b f8		 mov	 edi, eax
$L145583:

; 1024 : 
; 1025 : 	pMsg->SetID(MW_GUILDCABINETLIST_REQ)
; 1026 : 		<< dwCharID
; 1027 : 		<< dwKEY
; 1028 : 		<< pGuild->m_bMaxCabinet
; 1029 : 		<< pGuild->GetCabinetSize();

  0003c	8b 5c 24 28	 mov	 ebx, DWORD PTR _pGuild$[esp+24]
  00040	8b cb		 mov	 ecx, ebx
  00042	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0004a	e8 00 00 00 00	 call	 ?GetCabinetSize@CTGuild@@QAEEXZ ; CTGuild::GetCabinetSize
  0004f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKEY$[esp+24]
  00053	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  00057	50		 push	 eax
  00058	33 c0		 xor	 eax, eax
  0005a	8a 43 60	 mov	 al, BYTE PTR [ebx+96]
  0005d	50		 push	 eax
  0005e	51		 push	 ecx
  0005f	52		 push	 edx
  00060	68 d0 20 00 00	 push	 8400			; 000020d0H
  00065	8b cf		 mov	 ecx, edi
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1030 : 
; 1031 : 	MAPTITEM::iterator it;
; 1032 : 	for(it=pGuild->m_mapTCabinet.begin(); it!=pGuild->m_mapTCabinet.end(); it++)

  00088	8b 4b 68	 mov	 ecx, DWORD PTR [ebx+104]
  0008b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0008d	3b c1		 cmp	 eax, ecx
  0008f	89 44 24 28	 mov	 DWORD PTR _it$[esp+24], eax
  00093	74 2b		 je	 SHORT $L124014
  00095	56		 push	 esi
$L145639:

; 1033 : 	{
; 1034 : 		LPTITEM pItem = (*it).second;

  00096	8b 70 10	 mov	 esi, DWORD PTR [eax+16]

; 1035 : 		(*pMsg)
; 1036 : 			<< pItem->m_dwItemID;

  00099	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0009c	50		 push	 eax
  0009d	8b cf		 mov	 ecx, edi
  0009f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1037 : 
; 1038 : 		WrapItem(pMsg, pItem);

  000a4	56		 push	 esi
  000a5	57		 push	 edi
  000a6	8b cd		 mov	 ecx, ebp
  000a8	e8 00 00 00 00	 call	 ?WrapItem@CTServer@@QAEXPAVCPacket@@PAUtagTITEM@@@Z ; CTServer::WrapItem
  000ad	8d 4c 24 2c	 lea	 ecx, DWORD PTR _it$[esp+28]
  000b1	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTITEM@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTITEM@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTITEM *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTITEM *> >,0> >::const_iterator::_Inc
  000b6	8b 44 24 2c	 mov	 eax, DWORD PTR _it$[esp+28]
  000ba	3b 43 68	 cmp	 eax, DWORD PTR [ebx+104]
  000bd	75 d7		 jne	 SHORT $L145639
  000bf	5e		 pop	 esi
$L124014:

; 1039 : 	}
; 1040 : 
; 1041 : 	Say(pMsg);

  000c0	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000c3	57		 push	 edi
  000c4	8b cd		 mov	 ecx, ebp
  000c6	ff 12		 call	 DWORD PTR [edx]

; 1042 : }

  000c8	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  000cc	5f		 pop	 edi
  000cd	5d		 pop	 ebp
  000ce	5b		 pop	 ebx
  000cf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d6	83 c4 10	 add	 esp, 16			; 00000010H
  000d9	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L145587:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T145581[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDCABINETLIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T145681
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDCABINETLIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z ENDP ; CTServer::SendMW_GUILDCABINETLIST_REQ
PUBLIC	?SendMW_GUILDARTICLELIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z ; CTServer::SendMW_GUILDARTICLELIST_REQ
EXTRN	?GetArticleSize@CTGuild@@QAEEXZ:NEAR		; CTGuild::GetArticleSize
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T145887 DD	0ffffffffH
	DD	FLAT:$L145698
$T145883 DD	019930520H
	DD	01H
	DD	FLAT:$T145887
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDARTICLELIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T145692 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_it$ = 16						; size = 4
_pGuild$ = 16						; size = 4
?SendMW_GUILDARTICLELIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z PROC NEAR ; CTServer::SendMW_GUILDARTICLELIST_REQ, COMDAT
; _this$ = ecx

; 1069 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDARTICLELIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	8b f1		 mov	 esi, ecx

; 1070 : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 74 24 10	 mov	 DWORD PTR _this$[esp+36], esi
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 10	 mov	 DWORD PTR $T145692[esp+32], eax
  0002f	33 db		 xor	 ebx, ebx
  00031	3b c3		 cmp	 eax, ebx
  00033	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00037	74 09		 je	 SHORT $L145694
  00039	8b c8		 mov	 ecx, eax
  0003b	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00040	8b d8		 mov	 ebx, eax
$L145694:

; 1071 : 
; 1072 : 	pMsg->SetID(MW_GUILDARTICLELIST_REQ)
; 1073 : 		<< dwCharID
; 1074 : 		<< dwKEY
; 1075 : 		<< pGuild->GetArticleSize();

  00042	8b 6c 24 2c	 mov	 ebp, DWORD PTR _pGuild$[esp+28]
  00046	8b cd		 mov	 ecx, ebp
  00048	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  00050	e8 00 00 00 00	 call	 ?GetArticleSize@CTGuild@@QAEEXZ ; CTGuild::GetArticleSize
  00055	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwCharID$[esp+28]
  00059	50		 push	 eax
  0005a	8b 44 24 2c	 mov	 eax, DWORD PTR _dwKEY$[esp+32]
  0005e	50		 push	 eax
  0005f	51		 push	 ecx
  00060	68 d8 20 00 00	 push	 8408			; 000020d8H
  00065	8b cb		 mov	 ecx, ebx
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1076 : 
; 1077 : 	MAPTGUILDARTICLE::iterator it;
; 1078 : 	for(it=pGuild->m_mapTArticle.begin(); it!=pGuild->m_mapTArticle.end(); it++)

  00081	8b 8d 90 00 00
	00		 mov	 ecx, DWORD PTR [ebp+144]
  00087	8b 01		 mov	 eax, DWORD PTR [ecx]
  00089	3b c1		 cmp	 eax, ecx
  0008b	89 44 24 2c	 mov	 DWORD PTR _it$[esp+28], eax
  0008f	74 61		 je	 SHORT $L124144
  00091	57		 push	 edi
$L145745:

; 1079 : 	{
; 1080 : 		(*pMsg)
; 1081 : 			<< (*it).second->m_dwID
; 1082 : 			<< (*it).second->m_bDuty
; 1083 : 			<< (*it).second->m_strWritter
; 1084 : 			<< (*it).second->m_strTitle
; 1085 : 			<< (*it).second->m_strArticle
; 1086 : 			<< (*it).second->m_strDate;

  00092	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00095	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00098	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0009b	8b 70 0c	 mov	 esi, DWORD PTR [eax+12]
  0009e	8b 78 08	 mov	 edi, DWORD PTR [eax+8]
  000a1	51		 push	 ecx
  000a2	52		 push	 edx
  000a3	33 d2		 xor	 edx, edx
  000a5	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  000a8	8b 00		 mov	 eax, DWORD PTR [eax]
  000aa	56		 push	 esi
  000ab	57		 push	 edi
  000ac	8b cb		 mov	 ecx, ebx
  000ae	52		 push	 edx
  000af	50		 push	 eax
  000b0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b5	8b c8		 mov	 ecx, eax
  000b7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000bc	8b c8		 mov	 ecx, eax
  000be	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000c3	8b c8		 mov	 ecx, eax
  000c5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000ca	8b c8		 mov	 ecx, eax
  000cc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000d1	8b c8		 mov	 ecx, eax
  000d3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000d8	8d 4c 24 30	 lea	 ecx, DWORD PTR _it$[esp+32]
  000dc	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDARTICLE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDARTICLE@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDARTICLE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDARTICLE *> >,0> >::const_iterator::_Inc
  000e1	8b 44 24 30	 mov	 eax, DWORD PTR _it$[esp+32]
  000e5	3b 85 90 00 00
	00		 cmp	 eax, DWORD PTR [ebp+144]
  000eb	75 a5		 jne	 SHORT $L145745
  000ed	8b 74 24 10	 mov	 esi, DWORD PTR _this$[esp+36]
  000f1	5f		 pop	 edi
$L124144:

; 1087 : 	}
; 1088 : 
; 1089 : 	Say(pMsg);

  000f2	8b 16		 mov	 edx, DWORD PTR [esi]
  000f4	53		 push	 ebx
  000f5	8b ce		 mov	 ecx, esi
  000f7	ff 12		 call	 DWORD PTR [edx]

; 1090 : }

  000f9	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  000fd	5e		 pop	 esi
  000fe	5d		 pop	 ebp
  000ff	5b		 pop	 ebx
  00100	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00107	83 c4 14	 add	 esp, 20			; 00000014H
  0010a	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L145698:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T145692[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDARTICLELIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T145883
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDARTICLELIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z ENDP ; CTServer::SendMW_GUILDARTICLELIST_REQ
PUBLIC	?SendMW_GUILDWANTEDLIST_REQ@CTServer@@QAEXKKEPAUtagTGUILDWANTEDAPP@@PAV?$map@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@@std@@@Z ; CTServer::SendMW_GUILDWANTEDLIST_REQ
EXTRN	?GetBuffer@CPacket@@QAEPAEXZ:NEAR		; CPacket::GetBuffer
EXTRN	?GetSize@CPacket@@QAEGXZ:NEAR			; CPacket::GetSize
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T146133 DD	0ffffffffH
	DD	FLAT:$L145902
$T146128 DD	019930520H
	DD	01H
	DD	FLAT:$T146133
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDWANTEDLIST_REQ@CTServer@@QAEXKKEPAUtagTGUILDWANTEDAPP@@PAV?$map@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@@std@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T145894 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wSize$ = 8						; size = 2
_dwCharID$ = 8						; size = 4
_it$ = 12						; size = 4
_dwKey$ = 12						; size = 4
_bCountry$ = 16						; size = 1
_pApp$ = 20						; size = 4
_mapWanted$ = 24					; size = 4
?SendMW_GUILDWANTEDLIST_REQ@CTServer@@QAEXKKEPAUtagTGUILDWANTEDAPP@@PAV?$map@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@@std@@@Z PROC NEAR ; CTServer::SendMW_GUILDWANTEDLIST_REQ, COMDAT
; _this$ = ecx

; 1181 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDWANTEDLIST_REQ@CTServer@@QAEXKKEPAUtagTGUILDWANTEDAPP@@PAV?$map@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8b f9		 mov	 edi, ecx

; 1182 : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 7c 24 10	 mov	 DWORD PTR _this$[esp+36], edi
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 10	 mov	 DWORD PTR $T145894[esp+32], eax
  0002f	33 db		 xor	 ebx, ebx
  00031	3b c3		 cmp	 eax, ebx
  00033	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00037	74 0b		 je	 SHORT $L145895
  00039	8b c8		 mov	 ecx, eax
  0003b	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00040	8b f0		 mov	 esi, eax
  00042	eb 02		 jmp	 SHORT $L145896
$L145895:
  00044	33 f6		 xor	 esi, esi
$L145896:

; 1183 : 
; 1184 : 	pMsg->SetID(MW_GUILDWANTEDLIST_REQ)
; 1185 : 		<< dwCharID
; 1186 : 		<< dwKey;

  00046	8b 44 24 28	 mov	 eax, DWORD PTR _dwKey$[esp+28]
  0004a	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwCharID$[esp+28]
  0004e	50		 push	 eax
  0004f	51		 push	 ecx
  00050	68 e6 20 00 00	 push	 8422			; 000020e6H
  00055	8b ce		 mov	 ecx, esi
  00057	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00064	8b c8		 mov	 ecx, eax
  00066	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006b	8b c8		 mov	 ecx, eax
  0006d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1187 : 
; 1188 : 	WORD wSize = pMsg->GetSize();

  00072	8b ce		 mov	 ecx, esi
  00074	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 1189 : 	DWORD dwCount = 0;
; 1190 : 
; 1191 : 	(*pMsg)
; 1192 : 		<< dwCount;

  00079	53		 push	 ebx
  0007a	8b ce		 mov	 ecx, esi
  0007c	89 44 24 28	 mov	 DWORD PTR _wSize$[esp+32], eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1193 : 
; 1194 : 	MAPTGUILDWANTED::iterator it;
; 1195 : 	for(it=mapWanted->begin(); it!=mapWanted->end(); it++)

  00085	8b 54 24 34	 mov	 edx, DWORD PTR _mapWanted$[esp+28]
  00089	8b 4a 04	 mov	 ecx, DWORD PTR [edx+4]
  0008c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0008e	3b c1		 cmp	 eax, ecx
  00090	89 44 24 28	 mov	 DWORD PTR _it$[esp+28], eax
  00094	0f 84 a3 00 00
	00		 je	 $L124810
  0009a	55		 push	 ebp
  0009b	eb 03 8d 49 00	 npad	 5
$L146131:

; 1196 : 	{
; 1197 : 		if((*it).second.m_bCountry == bCountry)

  000a0	8a 4c 24 30	 mov	 cl, BYTE PTR _bCountry$[esp+32]
  000a4	38 48 1c	 cmp	 BYTE PTR [eax+28], cl
  000a7	75 75		 jne	 SHORT $L124809

; 1198 : 		{
; 1199 : 			(*pMsg)
; 1200 : 				<< (*it).second.m_dwGuildID
; 1201 : 				<< (*it).second.m_strName
; 1202 : 				<< (*it).second.m_strTitle
; 1203 : 				<< (*it).second.m_strText
; 1204 : 				<< (*it).second.m_bMinLevel
; 1205 : 				<< (*it).second.m_bMaxLevel
; 1206 : 				<< (*it).second.m_dlEndTime
; 1207 : 				<< BYTE( !pApp ? FALSE : ((*it).second.m_dwGuildID == pApp->m_dwWantedID ? TRUE : FALSE) );

  000a9	8b 54 24 34	 mov	 edx, DWORD PTR _pApp$[esp+32]
  000ad	85 d2		 test	 edx, edx
  000af	75 04		 jne	 SHORT $L145900
  000b1	33 c9		 xor	 ecx, ecx
  000b3	eb 0b		 jmp	 SHORT $L145901
$L145900:
  000b5	8b 48 18	 mov	 ecx, DWORD PTR [eax+24]
  000b8	2b 4a 04	 sub	 ecx, DWORD PTR [edx+4]
  000bb	f7 d9		 neg	 ecx
  000bd	1b c9		 sbb	 ecx, ecx
  000bf	41		 inc	 ecx
$L145901:
  000c0	51		 push	 ecx
  000c1	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000c4	51		 push	 ecx
  000c5	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  000c8	8b 50 30	 mov	 edx, DWORD PTR [eax+48]
  000cb	8b 78 2c	 mov	 edi, DWORD PTR [eax+44]
  000ce	51		 push	 ecx
  000cf	8b 68 28	 mov	 ebp, DWORD PTR [eax+40]
  000d2	33 c9		 xor	 ecx, ecx
  000d4	8a 48 1e	 mov	 cl, BYTE PTR [eax+30]
  000d7	51		 push	 ecx
  000d8	33 c9		 xor	 ecx, ecx
  000da	8a 48 1d	 mov	 cl, BYTE PTR [eax+29]
  000dd	51		 push	 ecx
  000de	52		 push	 edx
  000df	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  000e2	57		 push	 edi
  000e3	55		 push	 ebp
  000e4	52		 push	 edx
  000e5	8b ce		 mov	 ecx, esi
  000e7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ec	8b c8		 mov	 ecx, eax
  000ee	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000f3	8b c8		 mov	 ecx, eax
  000f5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000fa	8b c8		 mov	 ecx, eax
  000fc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00101	8b c8		 mov	 ecx, eax
  00103	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00108	8b c8		 mov	 ecx, eax
  0010a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0010f	8b c8		 mov	 ecx, eax
  00111	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  00116	8b c8		 mov	 ecx, eax
  00118	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1208 : 
; 1209 : 			dwCount++;

  0011d	43		 inc	 ebx
$L124809:
  0011e	8d 4c 24 2c	 lea	 ecx, DWORD PTR _it$[esp+32]
  00122	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTED,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTED> >,0> >::const_iterator::_Inc
  00127	8b 4c 24 38	 mov	 ecx, DWORD PTR _mapWanted$[esp+32]
  0012b	8b 44 24 2c	 mov	 eax, DWORD PTR _it$[esp+32]
  0012f	3b 41 04	 cmp	 eax, DWORD PTR [ecx+4]
  00132	0f 85 68 ff ff
	ff		 jne	 $L146131
  00138	8b 7c 24 10	 mov	 edi, DWORD PTR _this$[esp+36]
  0013c	5d		 pop	 ebp
$L124810:

; 1210 : 		}
; 1211 : 	}
; 1212 : 
; 1213 : 	memcpy(pMsg->GetBuffer()+wSize, &dwCount, sizeof(dwCount));

  0013d	8b ce		 mov	 ecx, esi
  0013f	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  00144	0f b7 54 24 24	 movzx	 edx, WORD PTR _wSize$[esp+28]
  00149	89 1c 10	 mov	 DWORD PTR [eax+edx], ebx

; 1214 : 
; 1215 : 	Say(pMsg);

  0014c	8b 07		 mov	 eax, DWORD PTR [edi]
  0014e	56		 push	 esi
  0014f	8b cf		 mov	 ecx, edi
  00151	ff 10		 call	 DWORD PTR [eax]

; 1216 : }

  00153	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  00157	5f		 pop	 edi
  00158	5e		 pop	 esi
  00159	5b		 pop	 ebx
  0015a	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00161	83 c4 14	 add	 esp, 20			; 00000014H
  00164	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L145902:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T145894[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDWANTEDLIST_REQ@CTServer@@QAEXKKEPAUtagTGUILDWANTEDAPP@@PAV?$map@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@@std@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T146128
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDWANTEDLIST_REQ@CTServer@@QAEXKKEPAUtagTGUILDWANTEDAPP@@PAV?$map@KUtagTGUILDWANTED@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKUtagTGUILDWANTED@@@std@@@3@@std@@@Z ENDP ; CTServer::SendMW_GUILDWANTEDLIST_REQ
PUBLIC	?SendMW_GUILDVOLUNTEERLIST_REQ@CTServer@@QAEXKKPAV?$map@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@@std@@@Z ; CTServer::SendMW_GUILDVOLUNTEERLIST_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T146314 DD	0ffffffffH
	DD	FLAT:$L146148
$T146310 DD	019930520H
	DD	01H
	DD	FLAT:$T146314
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDVOLUNTEERLIST_REQ@CTServer@@QAEXKKPAV?$map@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@@std@@@Z
_TEXT	SEGMENT
$T146140 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_it$124945 = 16						; size = 4
_pApp$ = 16						; size = 4
?SendMW_GUILDVOLUNTEERLIST_REQ@CTServer@@QAEXKKPAV?$map@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@@std@@@Z PROC NEAR ; CTServer::SendMW_GUILDVOLUNTEERLIST_REQ, COMDAT
; _this$ = ecx

; 1247 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDVOLUNTEERLIST_REQ@CTServer@@QAEXKKPAV?$map@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi

; 1248 : 	CPacket * pMsg = new CPacket();

  00019	6a 1c		 push	 28			; 0000001cH
  0001b	8b e9		 mov	 ebp, ecx
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	83 c4 04	 add	 esp, 4
  00025	89 44 24 0c	 mov	 DWORD PTR $T146140[esp+28], eax
  00029	85 c0		 test	 eax, eax
  0002b	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+36], 0
  00033	74 0b		 je	 SHORT $L146141
  00035	8b c8		 mov	 ecx, eax
  00037	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003c	8b f8		 mov	 edi, eax
  0003e	eb 02		 jmp	 SHORT $L146142
$L146141:
  00040	33 ff		 xor	 edi, edi
$L146142:

; 1249 : 
; 1250 : 	pMsg->SetID(MW_GUILDVOLUNTEERLIST_REQ)
; 1251 : 		<< dwCharID
; 1252 : 		<< dwKey
; 1253 : 		<< DWORD(pApp ? pApp->size() : 0);

  00042	8b 74 24 28	 mov	 esi, DWORD PTR _pApp$[esp+24]
  00046	85 f6		 test	 esi, esi
  00048	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00050	74 05		 je	 SHORT $L146143
  00052	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00055	eb 02		 jmp	 SHORT $L146144
$L146143:
  00057	33 c0		 xor	 eax, eax
$L146144:
  00059	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwCharID$[esp+24]
  0005d	50		 push	 eax
  0005e	8b 44 24 28	 mov	 eax, DWORD PTR _dwKey$[esp+28]
  00062	50		 push	 eax
  00063	51		 push	 ecx
  00064	68 ec 20 00 00	 push	 8428			; 000020ecH
  00069	8b cf		 mov	 ecx, edi
  0006b	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00070	8b c8		 mov	 ecx, eax
  00072	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1254 : 
; 1255 : 	if(pApp)

  00085	85 f6		 test	 esi, esi
  00087	74 5c		 je	 SHORT $L124951

; 1256 : 	{
; 1257 : 		MAPTGUILDWANTEDAPP::iterator it;
; 1258 : 		for(it=pApp->begin(); it!=pApp->end(); it++)

  00089	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0008c	8b 01		 mov	 eax, DWORD PTR [ecx]
  0008e	3b c1		 cmp	 eax, ecx
  00090	89 44 24 28	 mov	 DWORD PTR _it$124945[esp+24], eax
  00094	74 4f		 je	 SHORT $L124951
$L146199:

; 1259 : 		{
; 1260 : 			(*pMsg)
; 1261 : 				<< (*it).second->m_dwCharID
; 1262 : 				<< (*it).second->m_strName
; 1263 : 				<< (*it).second->m_bLevel
; 1264 : 				<< (*it).second->m_bClass
; 1265 : 				<< (*it).second->m_dwRegion;

  00096	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  00099	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0009c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0009f	52		 push	 edx
  000a0	33 d2		 xor	 edx, edx
  000a2	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000a5	52		 push	 edx
  000a6	33 d2		 xor	 edx, edx
  000a8	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000ab	8b 00		 mov	 eax, DWORD PTR [eax]
  000ad	52		 push	 edx
  000ae	51		 push	 ecx
  000af	50		 push	 eax
  000b0	8b cf		 mov	 ecx, edi
  000b2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b7	8b c8		 mov	 ecx, eax
  000b9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000be	8b c8		 mov	 ecx, eax
  000c0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c5	8b c8		 mov	 ecx, eax
  000c7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000cc	8b c8		 mov	 ecx, eax
  000ce	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000d3	8d 4c 24 28	 lea	 ecx, DWORD PTR _it$124945[esp+24]
  000d7	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDWANTEDAPP *> >,0> >::const_iterator::_Inc
  000dc	8b 44 24 28	 mov	 eax, DWORD PTR _it$124945[esp+24]
  000e0	3b 46 04	 cmp	 eax, DWORD PTR [esi+4]
  000e3	75 b1		 jne	 SHORT $L146199
$L124951:

; 1266 : 		}
; 1267 : 	}
; 1268 : 
; 1269 : 	Say(pMsg);

  000e5	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000e8	57		 push	 edi
  000e9	8b cd		 mov	 ecx, ebp
  000eb	ff 12		 call	 DWORD PTR [edx]

; 1270 : }

  000ed	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  000f1	5f		 pop	 edi
  000f2	5e		 pop	 esi
  000f3	5d		 pop	 ebp
  000f4	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000fb	83 c4 10	 add	 esp, 16			; 00000010H
  000fe	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L146148:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T146140[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDVOLUNTEERLIST_REQ@CTServer@@QAEXKKPAV?$map@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@@std@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T146310
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDVOLUNTEERLIST_REQ@CTServer@@QAEXKKPAV?$map@KPAUtagTGUILDWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDWANTEDAPP@@@std@@@3@@std@@@Z ENDP ; CTServer::SendMW_GUILDVOLUNTEERLIST_REQ
PUBLIC	?SendMW_GUILDTACTICSWANTEDLIST_REQ@CTServer@@QAEXKKEPAUtagTGUILDTACTICSWANTEDAPP@@PAV?$map@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@@std@@@Z ; CTServer::SendMW_GUILDTACTICSWANTEDLIST_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	SEGMENT
$T147678 DD	0ffffffffH
	DD	FLAT:$L146329
$T147668 DD	019930520H
	DD	01H
	DD	FLAT:$T147678
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSWANTEDLIST_REQ@CTServer@@QAEXKKEPAUtagTGUILDTACTICSWANTEDAPP@@PAV?$map@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@@std@@@Z
_TEXT	SEGMENT
$T146320 = -24						; size = 4
_this$ = -20						; size = 4
_wSize$ = -16						; size = 2
$T146321 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCount$ = 8						; size = 4
_dwCharID$ = 8						; size = 4
tv805 = 12						; size = 4
_dwKey$ = 12						; size = 4
_bCountry$ = 16						; size = 1
_pApp$ = 20						; size = 4
_mapWanted$ = 24					; size = 4
?SendMW_GUILDTACTICSWANTEDLIST_REQ@CTServer@@QAEXKKEPAUtagTGUILDTACTICSWANTEDAPP@@PAV?$map@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@@std@@@Z PROC NEAR ; CTServer::SendMW_GUILDTACTICSWANTEDLIST_REQ, COMDAT
; _this$ = ecx

; 1318 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSWANTEDLIST_REQ@CTServer@@QAEXKKEPAUtagTGUILDTACTICSWANTEDAPP@@PAV?$map@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8b d9		 mov	 ebx, ecx

; 1319 : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 14	 mov	 DWORD PTR _this$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 14	 mov	 DWORD PTR $T146321[esp+36], eax
  0002f	85 c0		 test	 eax, eax
  00031	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 0
  00039	74 0d		 je	 SHORT $L146322
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00042	89 44 24 0c	 mov	 DWORD PTR $T146320[esp+36], eax
  00046	eb 08		 jmp	 SHORT $L146323
$L146322:
  00048	c7 44 24 0c 00
	00 00 00	 mov	 DWORD PTR $T146320[esp+36], 0
$L146323:

; 1320 : 
; 1321 : 	pMsg->SetID(MW_GUILDTACTICSWANTEDLIST_REQ)
; 1322 : 		<< dwCharID
; 1323 : 		<< dwKey;

  00050	8b 44 24 2c	 mov	 eax, DWORD PTR _dwKey$[esp+32]
  00054	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwCharID$[esp+32]
  00058	8b 7c 24 0c	 mov	 edi, DWORD PTR $T146320[esp+36]
  0005c	50		 push	 eax
  0005d	51		 push	 ecx
  0005e	68 f4 20 00 00	 push	 8436			; 000020f4H
  00063	8b cf		 mov	 ecx, edi
  00065	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  0006d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1324 : 
; 1325 : 	WORD wSize = pMsg->GetSize();

  00080	8b cf		 mov	 ecx, edi
  00082	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 1326 : 	DWORD dwCount = 0;
; 1327 : 
; 1328 : 	(*pMsg)
; 1329 : 		<< dwCount;

  00087	6a 00		 push	 0
  00089	8b cf		 mov	 ecx, edi
  0008b	c7 44 24 2c 00
	00 00 00	 mov	 DWORD PTR _dwCount$[esp+36], 0
  00093	89 44 24 18	 mov	 DWORD PTR _wSize$[esp+40], eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1330 : 	
; 1331 : 	MAPVTGUILDTACTICSWANTED::iterator it;
; 1332 : 
; 1333 : 	for(it=mapWanted->begin(); it!=mapWanted->end(); it++)

  0009c	8b 54 24 38	 mov	 edx, DWORD PTR _mapWanted$[esp+32]
  000a0	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000a3	8b 30		 mov	 esi, DWORD PTR [eax]
  000a5	3b f0		 cmp	 esi, eax
  000a7	0f 84 73 01 00
	00		 je	 $L125581
  000ad	55		 push	 ebp
  000ae	8b ff		 npad	 2
$L146555:

; 1334 : 	{
; 1335 : 		for(DWORD i=0; i<(*it).second.size(); i++)

  000b0	33 db		 xor	 ebx, ebx
  000b2	89 5c 24 30	 mov	 DWORD PTR tv805[esp+36], ebx
  000b6	eb 08 8d a4 24
	00 00 00 00 90	 npad	 10
$L125846:
  000c0	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  000c3	85 c9		 test	 ecx, ecx
  000c5	0f 84 f2 00 00
	00		 je	 $L125580
  000cb	8b 46 18	 mov	 eax, DWORD PTR [esi+24]
  000ce	2b c1		 sub	 eax, ecx
  000d0	c1 f8 06	 sar	 eax, 6
  000d3	3b d8		 cmp	 ebx, eax
  000d5	0f 83 e2 00 00
	00		 jae	 $L125580

; 1336 : 		{
; 1337 : 			if(((*it).second)[i].m_bCountry == bCountry)

  000db	8a 54 24 34	 mov	 dl, BYTE PTR _bCountry$[esp+36]
  000df	8b c1		 mov	 eax, ecx
  000e1	8b 4c 24 30	 mov	 ecx, DWORD PTR tv805[esp+36]
  000e5	03 c1		 add	 eax, ecx
  000e7	38 50 19	 cmp	 BYTE PTR [eax+25], dl
  000ea	0f 85 bc 00 00
	00		 jne	 $L125847

; 1338 : 			{
; 1339 : 				(*pMsg)
; 1340 : 					<< ((*it).second)[i].m_dwID
; 1341 : 					<< ((*it).second)[i].m_dwGuildID
; 1342 : 					<< ((*it).second)[i].m_strName
; 1343 : 					<< ((*it).second)[i].m_strTitle
; 1344 : 					<< ((*it).second)[i].m_strText
; 1345 : 					<< ((*it).second)[i].m_bDay
; 1346 : 					<< ((*it).second)[i].m_bMinLevel
; 1347 : 					<< ((*it).second)[i].m_bMaxLevel
; 1348 : 					<< ((*it).second)[i].m_dwPoint
; 1349 : 					<< ((*it).second)[i].m_dwGold
; 1350 : 					<< ((*it).second)[i].m_dwSilver
; 1351 : 					<< ((*it).second)[i].m_dwCooper
; 1352 : 					<< ((*it).second)[i].m_dlEndTime
; 1353 : 					<< BYTE(!pApp ? FALSE : ((*it).second)[i].m_dwID == pApp->m_dwWantedID ? TRUE : FALSE);

  000f0	8b 54 24 38	 mov	 edx, DWORD PTR _pApp$[esp+36]
  000f4	85 d2		 test	 edx, edx
  000f6	75 04		 jne	 SHORT $L146327
  000f8	33 c9		 xor	 ecx, ecx
  000fa	eb 0a		 jmp	 SHORT $L146328
$L146327:
  000fc	8b 08		 mov	 ecx, DWORD PTR [eax]
  000fe	2b 4a 08	 sub	 ecx, DWORD PTR [edx+8]
  00101	f7 d9		 neg	 ecx
  00103	1b c9		 sbb	 ecx, ecx
  00105	41		 inc	 ecx
$L146328:
  00106	51		 push	 ecx
  00107	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  0010a	51		 push	 ecx
  0010b	8b 48 20	 mov	 ecx, DWORD PTR [eax+32]
  0010e	51		 push	 ecx
  0010f	8b 48 14	 mov	 ecx, DWORD PTR [eax+20]
  00112	51		 push	 ecx
  00113	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00116	51		 push	 ecx
  00117	8b 48 0c	 mov	 ecx, DWORD PTR [eax+12]
  0011a	51		 push	 ecx
  0011b	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0011e	51		 push	 ecx
  0011f	33 c9		 xor	 ecx, ecx
  00121	8a 48 1b	 mov	 cl, BYTE PTR [eax+27]
  00124	8b 50 30	 mov	 edx, DWORD PTR [eax+48]
  00127	8b 78 2c	 mov	 edi, DWORD PTR [eax+44]
  0012a	8b 68 28	 mov	 ebp, DWORD PTR [eax+40]
  0012d	51		 push	 ecx
  0012e	33 c9		 xor	 ecx, ecx
  00130	8a 48 1a	 mov	 cl, BYTE PTR [eax+26]
  00133	51		 push	 ecx
  00134	33 c9		 xor	 ecx, ecx
  00136	8a 48 18	 mov	 cl, BYTE PTR [eax+24]
  00139	51		 push	 ecx
  0013a	8b 4c 24 38	 mov	 ecx, DWORD PTR $T146320[esp+80]
  0013e	52		 push	 edx
  0013f	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00142	8b 00		 mov	 eax, DWORD PTR [eax]
  00144	57		 push	 edi
  00145	55		 push	 ebp
  00146	52		 push	 edx
  00147	50		 push	 eax
  00148	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0014d	8b c8		 mov	 ecx, eax
  0014f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00154	8b c8		 mov	 ecx, eax
  00156	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0015b	8b c8		 mov	 ecx, eax
  0015d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00162	8b c8		 mov	 ecx, eax
  00164	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00169	8b c8		 mov	 ecx, eax
  0016b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00170	8b c8		 mov	 ecx, eax
  00172	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00177	8b c8		 mov	 ecx, eax
  00179	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0017e	8b c8		 mov	 ecx, eax
  00180	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00185	8b c8		 mov	 ecx, eax
  00187	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0018c	8b c8		 mov	 ecx, eax
  0018e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00193	8b c8		 mov	 ecx, eax
  00195	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0019a	8b c8		 mov	 ecx, eax
  0019c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  001a1	8b c8		 mov	 ecx, eax
  001a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1354 : 
; 1355 : 				dwCount++;

  001a8	ff 44 24 2c	 inc	 DWORD PTR _dwCount$[esp+36]
$L125847:
  001ac	8b 44 24 30	 mov	 eax, DWORD PTR tv805[esp+36]
  001b0	43		 inc	 ebx
  001b1	83 c0 40	 add	 eax, 64			; 00000040H
  001b4	89 44 24 30	 mov	 DWORD PTR tv805[esp+36], eax
  001b8	e9 03 ff ff ff	 jmp	 $L125846
$L125580:

; 1330 : 	
; 1331 : 	MAPVTGUILDTACTICSWANTED::iterator it;
; 1332 : 
; 1333 : 	for(it=mapWanted->begin(); it!=mapWanted->end(); it++)

  001bd	8a 46 21	 mov	 al, BYTE PTR [esi+33]
  001c0	84 c0		 test	 al, al
  001c2	75 46		 jne	 SHORT $L146538
  001c4	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  001c7	8a 48 21	 mov	 cl, BYTE PTR [eax+33]
  001ca	84 c9		 test	 cl, cl
  001cc	75 1f		 jne	 SHORT $L147672
  001ce	8b f0		 mov	 esi, eax
  001d0	8b 06		 mov	 eax, DWORD PTR [esi]
  001d2	8a 48 21	 mov	 cl, BYTE PTR [eax+33]
  001d5	84 c9		 test	 cl, cl
  001d7	75 31		 jne	 SHORT $L146538
  001d9	8d a4 24 00 00
	00 00		 npad	 7
$L146552:
  001e0	8b f0		 mov	 esi, eax
  001e2	8b 06		 mov	 eax, DWORD PTR [esi]
  001e4	8a 48 21	 mov	 cl, BYTE PTR [eax+33]
  001e7	84 c9		 test	 cl, cl
  001e9	74 f5		 je	 SHORT $L146552
  001eb	eb 1d		 jmp	 SHORT $L146538
$L147672:
  001ed	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  001f0	8a 48 21	 mov	 cl, BYTE PTR [eax+33]
  001f3	84 c9		 test	 cl, cl
  001f5	75 11		 jne	 SHORT $L146541
$L146540:
  001f7	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  001fa	75 0c		 jne	 SHORT $L146541
  001fc	8b f0		 mov	 esi, eax
  001fe	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00201	8a 48 21	 mov	 cl, BYTE PTR [eax+33]
  00204	84 c9		 test	 cl, cl
  00206	74 ef		 je	 SHORT $L146540
$L146541:
  00208	8b f0		 mov	 esi, eax
$L146538:
  0020a	8b 4c 24 3c	 mov	 ecx, DWORD PTR _mapWanted$[esp+36]
  0020e	3b 71 04	 cmp	 esi, DWORD PTR [ecx+4]
  00211	0f 85 99 fe ff
	ff		 jne	 $L146555
  00217	8b 5c 24 14	 mov	 ebx, DWORD PTR _this$[esp+40]
  0021b	8b 7c 24 10	 mov	 edi, DWORD PTR $T146320[esp+40]
  0021f	5d		 pop	 ebp
$L125581:

; 1356 : 			}
; 1357 : 		}
; 1358 : 	}
; 1359 : 
; 1360 : 	memcpy(pMsg->GetBuffer()+wSize, &dwCount, sizeof(dwCount));

  00220	8b cf		 mov	 ecx, edi
  00222	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  00227	0f b7 54 24 14	 movzx	 edx, WORD PTR _wSize$[esp+36]
  0022c	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwCount$[esp+32]
  00230	89 0c 10	 mov	 DWORD PTR [eax+edx], ecx

; 1361 : 
; 1362 : 	Say(pMsg);

  00233	8b 13		 mov	 edx, DWORD PTR [ebx]
  00235	57		 push	 edi
  00236	8b cb		 mov	 ecx, ebx
  00238	ff 12		 call	 DWORD PTR [edx]

; 1363 : }

  0023a	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  0023e	5f		 pop	 edi
  0023f	5e		 pop	 esi
  00240	5b		 pop	 ebx
  00241	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00248	83 c4 18	 add	 esp, 24			; 00000018H
  0024b	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L146329:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T146321[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSWANTEDLIST_REQ@CTServer@@QAEXKKEPAUtagTGUILDTACTICSWANTEDAPP@@PAV?$map@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@@std@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T147668
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSWANTEDLIST_REQ@CTServer@@QAEXKKEPAUtagTGUILDTACTICSWANTEDAPP@@PAV?$map@KV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@U?$less@K@2@V?$allocator@U?$pair@$$CBKV?$vector@UtagTGUILDTACTICSWANTED@@V?$allocator@UtagTGUILDTACTICSWANTED@@@std@@@std@@@std@@@2@@std@@@Z ENDP ; CTServer::SendMW_GUILDTACTICSWANTEDLIST_REQ
PUBLIC	?SendMW_GUILDTACTICSVOLUNTEERLIST_REQ@CTServer@@QAEXKKPAV?$map@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@@std@@@Z ; CTServer::SendMW_GUILDTACTICSVOLUNTEERLIST_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T147932 DD	0ffffffffH
	DD	FLAT:$L147691
$T147928 DD	019930520H
	DD	01H
	DD	FLAT:$T147932
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSVOLUNTEERLIST_REQ@CTServer@@QAEXKKPAV?$map@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@@std@@@Z
_TEXT	SEGMENT
$T147685 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_it$ = 16						; size = 4
_pApp$ = 16						; size = 4
?SendMW_GUILDTACTICSVOLUNTEERLIST_REQ@CTServer@@QAEXKKPAV?$map@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@@std@@@Z PROC NEAR ; CTServer::SendMW_GUILDTACTICSVOLUNTEERLIST_REQ, COMDAT
; _this$ = ecx

; 1393 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSVOLUNTEERLIST_REQ@CTServer@@QAEXKKPAV?$map@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi

; 1394 : 	CPacket * pMsg = new CPacket();

  00019	6a 1c		 push	 28			; 0000001cH
  0001b	8b e9		 mov	 ebp, ecx
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	83 c4 04	 add	 esp, 4
  00025	89 44 24 0c	 mov	 DWORD PTR $T147685[esp+28], eax
  00029	33 f6		 xor	 esi, esi
  0002b	3b c6		 cmp	 eax, esi
  0002d	89 74 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], esi
  00031	74 09		 je	 SHORT $L147687
  00033	8b c8		 mov	 ecx, eax
  00035	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003a	8b f0		 mov	 esi, eax
$L147687:

; 1395 : 
; 1396 : 	pMsg->SetID(MW_GUILDTACTICSVOLUNTEERLIST_REQ)
; 1397 : 		<< dwCharID
; 1398 : 		<< dwKey
; 1399 : 		<< DWORD(pApp->size());

  0003c	8b 7c 24 28	 mov	 edi, DWORD PTR _pApp$[esp+24]
  00040	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00043	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwCharID$[esp+24]
  00047	50		 push	 eax
  00048	8b 44 24 28	 mov	 eax, DWORD PTR _dwKey$[esp+28]
  0004c	50		 push	 eax
  0004d	51		 push	 ecx
  0004e	68 fa 20 00 00	 push	 8442			; 000020faH
  00053	8b ce		 mov	 ecx, esi
  00055	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00062	8b c8		 mov	 ecx, eax
  00064	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00069	8b c8		 mov	 ecx, eax
  0006b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00070	8b c8		 mov	 ecx, eax
  00072	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1400 : 
; 1401 : 	MAPTGUILDTACTICSWANTEDAPP::iterator it;
; 1402 : 	for(it=pApp->begin(); it!=pApp->end(); it++)

  00077	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0007a	8b 01		 mov	 eax, DWORD PTR [ecx]
  0007c	3b c1		 cmp	 eax, ecx
  0007e	89 44 24 28	 mov	 DWORD PTR _it$[esp+24], eax
  00082	0f 84 8c 00 00
	00		 je	 $L125966
$L147747:

; 1403 : 	{
; 1404 : 		(*pMsg)
; 1405 : 			<< (*it).second->m_dwCharID
; 1406 : 			<< (*it).second->m_strName
; 1407 : 			<< (*it).second->m_bLevel
; 1408 : 			<< (*it).second->m_bClass
; 1409 : 			<< (*it).second->m_dwRegion
; 1410 : 			<< (*it).second->m_bDay
; 1411 : 			<< (*it).second->m_dwPoint
; 1412 : 			<< (*it).second->m_dwGold
; 1413 : 			<< (*it).second->m_dwSilver
; 1414 : 			<< (*it).second->m_dwCooper;

  00088	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  0008b	8b 50 1c	 mov	 edx, DWORD PTR [eax+28]
  0008e	52		 push	 edx
  0008f	8b 50 18	 mov	 edx, DWORD PTR [eax+24]
  00092	52		 push	 edx
  00093	8b 50 14	 mov	 edx, DWORD PTR [eax+20]
  00096	52		 push	 edx
  00097	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  0009a	52		 push	 edx
  0009b	33 d2		 xor	 edx, edx
  0009d	8a 50 20	 mov	 dl, BYTE PTR [eax+32]
  000a0	8b 48 24	 mov	 ecx, DWORD PTR [eax+36]
  000a3	52		 push	 edx
  000a4	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  000a7	52		 push	 edx
  000a8	33 d2		 xor	 edx, edx
  000aa	8a 50 21	 mov	 dl, BYTE PTR [eax+33]
  000ad	52		 push	 edx
  000ae	33 d2		 xor	 edx, edx
  000b0	8a 50 22	 mov	 dl, BYTE PTR [eax+34]
  000b3	8b 00		 mov	 eax, DWORD PTR [eax]
  000b5	52		 push	 edx
  000b6	51		 push	 ecx
  000b7	50		 push	 eax
  000b8	8b ce		 mov	 ecx, esi
  000ba	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000bf	8b c8		 mov	 ecx, eax
  000c1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000c6	8b c8		 mov	 ecx, eax
  000c8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000cd	8b c8		 mov	 ecx, eax
  000cf	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000d4	8b c8		 mov	 ecx, eax
  000d6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000db	8b c8		 mov	 ecx, eax
  000dd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000e2	8b c8		 mov	 ecx, eax
  000e4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000e9	8b c8		 mov	 ecx, eax
  000eb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000f0	8b c8		 mov	 ecx, eax
  000f2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000f7	8b c8		 mov	 ecx, eax
  000f9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000fe	8d 4c 24 28	 lea	 ecx, DWORD PTR _it$[esp+24]
  00102	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTGUILDTACTICSWANTEDAPP *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTGUILDTACTICSWANTEDAPP *> >,0> >::const_iterator::_Inc
  00107	8b 44 24 28	 mov	 eax, DWORD PTR _it$[esp+24]
  0010b	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
  0010e	0f 85 74 ff ff
	ff		 jne	 $L147747
$L125966:

; 1415 : 	}
; 1416 : 
; 1417 : 	Say(pMsg);

  00114	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  00117	56		 push	 esi
  00118	8b cd		 mov	 ecx, ebp
  0011a	ff 12		 call	 DWORD PTR [edx]

; 1418 : }

  0011c	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  00120	5f		 pop	 edi
  00121	5e		 pop	 esi
  00122	5d		 pop	 ebp
  00123	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0012a	83 c4 10	 add	 esp, 16			; 00000010H
  0012d	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L147691:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T147685[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSVOLUNTEERLIST_REQ@CTServer@@QAEXKKPAV?$map@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@@std@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T147928
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSVOLUNTEERLIST_REQ@CTServer@@QAEXKKPAV?$map@KPAUtagTGUILDTACTICSWANTEDAPP@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTGUILDTACTICSWANTEDAPP@@@std@@@3@@std@@@Z ENDP ; CTServer::SendMW_GUILDTACTICSVOLUNTEERLIST_REQ
PUBLIC	?SendMW_GUILDTACTICSLIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z ; CTServer::SendMW_GUILDTACTICSLIST_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T148266 DD	0ffffffffH
	DD	FLAT:$L147949
$T148261 DD	019930520H
	DD	01H
	DD	FLAT:$T148266
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDTACTICSLIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T147939 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_it$ = 16						; size = 4
_pGuild$ = 16						; size = 4
?SendMW_GUILDTACTICSLIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z PROC NEAR ; CTServer::SendMW_GUILDTACTICSLIST_REQ, COMDAT
; _this$ = ecx

; 1518 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDTACTICSLIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	55		 push	 ebp
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8b f1		 mov	 esi, ecx

; 1519 : 	CPacket * pMsg = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 74 24 10	 mov	 DWORD PTR _this$[esp+36], esi
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 10	 mov	 DWORD PTR $T147939[esp+32], eax
  0002f	33 ff		 xor	 edi, edi
  00031	3b c7		 cmp	 eax, edi
  00033	89 7c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], edi
  00037	74 09		 je	 SHORT $L147941
  00039	8b c8		 mov	 ecx, eax
  0003b	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00040	8b f8		 mov	 edi, eax
$L147941:

; 1520 : 
; 1521 : 	pMsg->SetID(MW_GUILDTACTICSLIST_REQ)
; 1522 : 		<< dwCharID
; 1523 : 		<< dwKEY
; 1524 : 		<< DWORD(pGuild->m_mapTTactics.size());

  00042	8b 6c 24 2c	 mov	 ebp, DWORD PTR _pGuild$[esp+28]
  00046	8b 85 84 00 00
	00		 mov	 eax, DWORD PTR [ebp+132]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwCharID$[esp+28]
  00050	50		 push	 eax
  00051	8b 44 24 2c	 mov	 eax, DWORD PTR _dwKEY$[esp+32]
  00055	50		 push	 eax
  00056	51		 push	 ecx
  00057	68 39 21 00 00	 push	 8505			; 00002139H
  0005c	8b cf		 mov	 ecx, edi
  0005e	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00066	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006b	8b c8		 mov	 ecx, eax
  0006d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1525 : 
; 1526 : 	MAPTTACTICSMEMBER::iterator it;
; 1527 : 	for(it=pGuild->m_mapTTactics.begin(); it!=pGuild->m_mapTTactics.end(); it++)

  00080	8b 8d 80 00 00
	00		 mov	 ecx, DWORD PTR [ebp+128]
  00086	8b 01		 mov	 eax, DWORD PTR [ecx]
  00088	3b c1		 cmp	 eax, ecx
  0008a	89 44 24 2c	 mov	 DWORD PTR _it$[esp+28], eax
  0008e	0f 84 d3 00 00
	00		 je	 $L126145
  00094	53		 push	 ebx
$L148264:

; 1528 : 	{
; 1529 : 		(*pMsg)
; 1530 : 			<< (*it).second->m_dwID
; 1531 : 			<< (*it).second->m_strName
; 1532 : 			<< BYTE((*it).second->m_pChar ? (*it).second->m_pChar->m_bLevel : (*it).second->m_bLevel)
; 1533 : 			<< (*it).second->m_bClass
; 1534 : 			<< (*it).second->m_bDay
; 1535 : 			<< (*it).second->m_dwRewardPoint
; 1536 : 			<< (*it).second->m_dlRewardMoney
; 1537 : 			<< (*it).second->m_dlEndTime
; 1538 : 			<< (*it).second->m_dwGainPoint
; 1539 : 			<< DWORD((*it).second->m_pChar ? (*it).second->m_pChar->m_dwRegion : 0)
; 1540 : 			<< (*it).second->m_wCastle
; 1541 : 			<< (*it).second->m_bCamp;

  00095	8b 50 10	 mov	 edx, DWORD PTR [eax+16]
  00098	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0009a	85 c9		 test	 ecx, ecx
  0009c	74 08		 je	 SHORT $L147947
  0009e	8b b1 a8 00 00
	00		 mov	 esi, DWORD PTR [ecx+168]
  000a4	eb 02		 jmp	 SHORT $L147948
$L147947:
  000a6	33 f6		 xor	 esi, esi
$L147948:
  000a8	85 c9		 test	 ecx, ecx
  000aa	74 08		 je	 SHORT $L147945
  000ac	8a 91 cd 00 00
	00		 mov	 dl, BYTE PTR [ecx+205]
  000b2	eb 03		 jmp	 SHORT $L147946
$L147945:
  000b4	8a 52 0c	 mov	 dl, BYTE PTR [edx+12]
$L147946:
  000b7	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  000ba	33 db		 xor	 ebx, ebx
  000bc	8a 58 2a	 mov	 bl, BYTE PTR [eax+42]
  000bf	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  000c2	53		 push	 ebx
  000c3	33 db		 xor	 ebx, ebx
  000c5	66 8b 58 28	 mov	 bx, WORD PTR [eax+40]
  000c9	53		 push	 ebx
  000ca	56		 push	 esi
  000cb	8b 70 14	 mov	 esi, DWORD PTR [eax+20]
  000ce	56		 push	 esi
  000cf	8b 70 24	 mov	 esi, DWORD PTR [eax+36]
  000d2	56		 push	 esi
  000d3	8b 70 20	 mov	 esi, DWORD PTR [eax+32]
  000d6	56		 push	 esi
  000d7	8b 70 34	 mov	 esi, DWORD PTR [eax+52]
  000da	56		 push	 esi
  000db	8b 70 30	 mov	 esi, DWORD PTR [eax+48]
  000de	56		 push	 esi
  000df	8b 70 10	 mov	 esi, DWORD PTR [eax+16]
  000e2	33 db		 xor	 ebx, ebx
  000e4	8a 58 18	 mov	 bl, BYTE PTR [eax+24]
  000e7	56		 push	 esi
  000e8	53		 push	 ebx
  000e9	33 db		 xor	 ebx, ebx
  000eb	8a 58 0d	 mov	 bl, BYTE PTR [eax+13]
  000ee	53		 push	 ebx
  000ef	52		 push	 edx
  000f0	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  000f3	51		 push	 ecx
  000f4	52		 push	 edx
  000f5	8b cf		 mov	 ecx, edi
  000f7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000fc	8b c8		 mov	 ecx, eax
  000fe	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00103	8b c8		 mov	 ecx, eax
  00105	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0010a	8b c8		 mov	 ecx, eax
  0010c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00111	8b c8		 mov	 ecx, eax
  00113	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00118	8b c8		 mov	 ecx, eax
  0011a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0011f	8b c8		 mov	 ecx, eax
  00121	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  00126	8b c8		 mov	 ecx, eax
  00128	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  0012d	8b c8		 mov	 ecx, eax
  0012f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00134	8b c8		 mov	 ecx, eax
  00136	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0013b	8b c8		 mov	 ecx, eax
  0013d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00142	8b c8		 mov	 ecx, eax
  00144	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00149	8d 4c 24 30	 lea	 ecx, DWORD PTR _it$[esp+32]
  0014d	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTTACTICSMEMBER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTTACTICSMEMBER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTTACTICSMEMBER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTTACTICSMEMBER *> >,0> >::const_iterator::_Inc
  00152	8b 44 24 30	 mov	 eax, DWORD PTR _it$[esp+32]
  00156	3b 85 80 00 00
	00		 cmp	 eax, DWORD PTR [ebp+128]
  0015c	0f 85 33 ff ff
	ff		 jne	 $L148264
  00162	8b 74 24 10	 mov	 esi, DWORD PTR _this$[esp+36]
  00166	5b		 pop	 ebx
$L126145:

; 1542 : 	}
; 1543 : 
; 1544 : 	Say(pMsg);

  00167	8b 06		 mov	 eax, DWORD PTR [esi]
  00169	57		 push	 edi
  0016a	8b ce		 mov	 ecx, esi
  0016c	ff 10		 call	 DWORD PTR [eax]

; 1545 : }

  0016e	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  00172	5f		 pop	 edi
  00173	5e		 pop	 esi
  00174	5d		 pop	 ebp
  00175	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0017c	83 c4 14	 add	 esp, 20			; 00000014H
  0017f	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L147949:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T147939[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDTACTICSLIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T148261
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDTACTICSLIST_REQ@CTServer@@QAEXKKPAVCTGuild@@@Z ENDP ; CTServer::SendMW_GUILDTACTICSLIST_REQ
PUBLIC	?SendMW_FRIENDLIST_REQ@CTServer@@QAEXPAUtagTCHARACTER@@@Z ; CTServer::SendMW_FRIENDLIST_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T149119 DD	0ffffffffH
	DD	FLAT:$L148288
$T149102 DD	019930520H
	DD	01H
	DD	FLAT:$T149119
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_FRIENDLIST_REQ@CTServer@@QAEXPAUtagTCHARACTER@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T148273 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bCount$ = 8						; size = 1
_it$ = 8						; size = 4
_find$ = 8						; size = 4
_pChar$ = 8						; size = 4
?SendMW_FRIENDLIST_REQ@CTServer@@QAEXPAUtagTCHARACTER@@@Z PROC NEAR ; CTServer::SendMW_FRIENDLIST_REQ, COMDAT
; _this$ = ecx

; 1631 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_FRIENDLIST_REQ@CTServer@@QAEXPAUtagTCHARACTER@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	55		 push	 ebp
  00019	56		 push	 esi
  0001a	57		 push	 edi

; 1632 : 	CPacket * pMsg = new CPacket();

  0001b	6a 1c		 push	 28			; 0000001cH
  0001d	89 4c 24 10	 mov	 DWORD PTR _this$[esp+36], ecx
  00021	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00026	83 c4 04	 add	 esp, 4
  00029	89 44 24 10	 mov	 DWORD PTR $T148273[esp+32], eax
  0002d	85 c0		 test	 eax, eax
  0002f	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00037	74 0b		 je	 SHORT $L148274
  00039	8b c8		 mov	 ecx, eax
  0003b	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00040	8b f8		 mov	 edi, eax
  00042	eb 02		 jmp	 SHORT $L148275
$L148274:
  00044	33 ff		 xor	 edi, edi
$L148275:

; 1633 : 
; 1634 : 	pMsg->SetID(MW_FRIENDLIST_REQ)
; 1635 : 		<< pChar->m_dwCharID
; 1636 : 		<< pChar->m_dwKEY;

  00046	8b 6c 24 24	 mov	 ebp, DWORD PTR _pChar$[esp+28]
  0004a	8b 45 74	 mov	 eax, DWORD PTR [ebp+116]
  0004d	8b 4d 70	 mov	 ecx, DWORD PTR [ebp+112]
  00050	8d 75 70	 lea	 esi, DWORD PTR [ebp+112]
  00053	50		 push	 eax
  00054	51		 push	 ecx
  00055	68 56 20 00 00	 push	 8278			; 00002056H
  0005a	8b cf		 mov	 ecx, edi
  0005c	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  00064	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00069	8b c8		 mov	 ecx, eax
  0006b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00070	8b c8		 mov	 ecx, eax
  00072	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1637 : 
; 1638 : 	LPTSOULMATE pTSOUL = NULL;
; 1639 : 
; 1640 : 	MAPTSOULMATE::iterator find = pChar->m_mapTSOULMATE.find(pChar->m_dwCharID);

  00077	56		 push	 esi
  00078	8d 54 24 28	 lea	 edx, DWORD PTR _find$[esp+32]
  0007c	52		 push	 edx
  0007d	8d 4d 18	 lea	 ecx, DWORD PTR [ebp+24]
  00080	e8 00 00 00 00	 call	 ?find@?$_Tree@V?$_Tmap_traits@KPAUtagTSOULMATE@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTSOULMATE@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@ABK@Z ; std::_Tree<std::_Tmap_traits<unsigned long,tagTSOULMATE *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTSOULMATE *> >,0> >::find

; 1641 : 	if(find!=pChar->m_mapTSOULMATE.end())

  00085	8b 44 24 24	 mov	 eax, DWORD PTR _find$[esp+28]
  00089	3b 45 1c	 cmp	 eax, DWORD PTR [ebp+28]
  0008c	74 4f		 je	 SHORT $L126239

; 1642 : 	{
; 1643 : 		pTSOUL = (*find).second;

  0008e	8b 70 10	 mov	 esi, DWORD PTR [eax+16]

; 1644 : 		
; 1645 : 		(*pMsg)
; 1646 : 			<< pTSOUL->m_dwTarget
; 1647 : 			<< pTSOUL->m_strName
; 1648 : 			<< pTSOUL->m_bLevel
; 1649 : 			<< pTSOUL->m_bClass
; 1650 : 			<< pTSOUL->m_bConnected;

  00091	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00094	33 c9		 xor	 ecx, ecx
  00096	8a 4e 0e	 mov	 cl, BYTE PTR [esi+14]
  00099	33 d2		 xor	 edx, edx
  0009b	8a 56 0d	 mov	 dl, BYTE PTR [esi+13]
  0009e	51		 push	 ecx
  0009f	33 c9		 xor	 ecx, ecx
  000a1	8a 4e 0c	 mov	 cl, BYTE PTR [esi+12]
  000a4	52		 push	 edx
  000a5	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  000a8	51		 push	 ecx
  000a9	50		 push	 eax
  000aa	52		 push	 edx
  000ab	8b cf		 mov	 ecx, edi
  000ad	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b2	8b c8		 mov	 ecx, eax
  000b4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000b9	8b c8		 mov	 ecx, eax
  000bb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c0	8b c8		 mov	 ecx, eax
  000c2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c7	8b c8		 mov	 ecx, eax
  000c9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1651 : 
; 1652 : 		if(pTSOUL->m_bConnected)

  000ce	8a 46 0e	 mov	 al, BYTE PTR [esi+14]
  000d1	84 c0		 test	 al, al

; 1653 : 			(*pMsg) << pTSOUL->m_dwRegion;

  000d3	8b cf		 mov	 ecx, edi
  000d5	74 08		 je	 SHORT $L126240
  000d7	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  000da	50		 push	 eax

; 1654 : 		else

  000db	eb 04		 jmp	 SHORT $L149118
$L126239:

; 1655 : 			(*pMsg) << DWORD(0);
; 1656 : 	}
; 1657 : 	else
; 1658 : 		(*pMsg) << DWORD(0);

  000dd	8b cf		 mov	 ecx, edi
$L126240:
  000df	6a 00		 push	 0
$L149118:
  000e1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 1659 : 
; 1660 : 	(*pMsg)
; 1661 : 		<< BYTE(pChar->m_mapFRIENDGROUP.size());

  000e6	33 c9		 xor	 ecx, ecx
  000e8	8a 4d 4c	 mov	 cl, BYTE PTR [ebp+76]
  000eb	51		 push	 ecx
  000ec	8b cf		 mov	 ecx, edi
  000ee	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1662 : 
; 1663 : 	MAPBSTRING::iterator it;
; 1664 : 	for(it=pChar->m_mapFRIENDGROUP.begin(); it != pChar->m_mapFRIENDGROUP.end(); it++)

  000f3	8b 4d 48	 mov	 ecx, DWORD PTR [ebp+72]
  000f6	8b 01		 mov	 eax, DWORD PTR [ecx]
  000f8	3b c1		 cmp	 eax, ecx
  000fa	89 44 24 24	 mov	 DWORD PTR _it$[esp+28], eax
  000fe	74 2a		 je	 SHORT $L126249
$L148382:

; 1665 : 	{
; 1666 : 		(*pMsg)
; 1667 : 			<< (*it).first
; 1668 : 			<< (*it).second;

  00100	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00103	33 d2		 xor	 edx, edx
  00105	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  00108	51		 push	 ecx
  00109	8b cf		 mov	 ecx, edi
  0010b	52		 push	 edx
  0010c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00111	8b c8		 mov	 ecx, eax
  00113	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00118	8d 4c 24 24	 lea	 ecx, DWORD PTR _it$[esp+28]
  0011c	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@std@@@4@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > > > >,0> >::const_iterator::_Inc
  00121	8b 44 24 24	 mov	 eax, DWORD PTR _it$[esp+28]
  00125	3b 45 48	 cmp	 eax, DWORD PTR [ebp+72]
  00128	75 d6		 jne	 SHORT $L148382
$L126249:

; 1669 : 	}
; 1670 : 
; 1671 : 	BYTE bCount = BYTE(pChar->m_mapTFRIEND.size());
; 1672 : 
; 1673 : 	MAPTFRIEND::iterator itFr;
; 1674 : 	for(itFr=pChar->m_mapTFRIEND.begin(); itFr!=pChar->m_mapTFRIEND.end(); itFr++)

  0012a	8b 55 10	 mov	 edx, DWORD PTR [ebp+16]
  0012d	8b 0a		 mov	 ecx, DWORD PTR [edx]
  0012f	3b ca		 cmp	 ecx, edx
  00131	53		 push	 ebx
  00132	8a 5d 14	 mov	 bl, BYTE PTR [ebp+20]
  00135	88 5c 24 28	 mov	 BYTE PTR _bCount$[esp+32], bl
  00139	74 5f		 je	 SHORT $L126257
  0013b	eb 03 8d 49 00	 npad	 5
$L148647:

; 1675 : 	{
; 1676 : 		if((*itFr).second->m_bType == FT_TARGET)

  00140	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]
  00143	80 78 13 01	 cmp	 BYTE PTR [eax+19], 1
  00147	75 02		 jne	 SHORT $L126256

; 1677 : 			bCount--;

  00149	fe cb		 dec	 bl
$L126256:

; 1669 : 	}
; 1670 : 
; 1671 : 	BYTE bCount = BYTE(pChar->m_mapTFRIEND.size());
; 1672 : 
; 1673 : 	MAPTFRIEND::iterator itFr;
; 1674 : 	for(itFr=pChar->m_mapTFRIEND.begin(); itFr!=pChar->m_mapTFRIEND.end(); itFr++)

  0014b	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  0014e	84 c0		 test	 al, al
  00150	75 40		 jne	 SHORT $L148673
  00152	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00155	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00159	75 16		 jne	 SHORT $L149106
  0015b	8b c8		 mov	 ecx, eax
  0015d	8b 01		 mov	 eax, DWORD PTR [ecx]
  0015f	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00163	75 2d		 jne	 SHORT $L148673
$L148661:
  00165	8b c8		 mov	 ecx, eax
  00167	8b 01		 mov	 eax, DWORD PTR [ecx]
  00169	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0016d	74 f6		 je	 SHORT $L148661
  0016f	eb 21		 jmp	 SHORT $L148673
$L149106:
  00171	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00174	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00178	75 16		 jne	 SHORT $L148676
  0017a	8d 9b 00 00 00
	00		 npad	 6
$L148675:
  00180	3b 48 08	 cmp	 ecx, DWORD PTR [eax+8]
  00183	75 0b		 jne	 SHORT $L148676
  00185	8b c8		 mov	 ecx, eax
  00187	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0018a	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  0018e	74 f0		 je	 SHORT $L148675
$L148676:
  00190	8b c8		 mov	 ecx, eax
$L148673:
  00192	3b ca		 cmp	 ecx, edx
  00194	75 aa		 jne	 SHORT $L148647

; 1677 : 			bCount--;

  00196	88 5c 24 28	 mov	 BYTE PTR _bCount$[esp+32], bl
$L126257:

; 1678 : 	}
; 1679 :     
; 1680 : 	(*pMsg)
; 1681 : 		<< bCount;

  0019a	8b 4c 24 28	 mov	 ecx, DWORD PTR _bCount$[esp+32]
  0019e	51		 push	 ecx
  0019f	8b cf		 mov	 ecx, edi
  001a1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 1682 : 
; 1683 : 	for(itFr=pChar->m_mapTFRIEND.begin(); itFr!=pChar->m_mapTFRIEND.end(); itFr++)

  001a6	8b 45 10	 mov	 eax, DWORD PTR [ebp+16]
  001a9	8b 30		 mov	 esi, DWORD PTR [eax]
  001ab	3b f0		 cmp	 esi, eax
  001ad	5b		 pop	 ebx
  001ae	0f 84 bf 00 00
	00		 je	 $L126264
$L148898:

; 1684 : 	{
; 1685 : 		if((*itFr).second->m_bType == FT_TARGET)

  001b4	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  001b7	80 78 13 01	 cmp	 BYTE PTR [eax+19], 1
  001bb	74 60		 je	 SHORT $L126263

; 1686 : 			continue;
; 1687 : 
; 1688 : 		(*pMsg)
; 1689 : 			<< (*itFr).second->m_dwID
; 1690 : 			<< (*itFr).second->m_strName
; 1691 : 			<< (*itFr).second->m_bLevel
; 1692 : 			<< (*itFr).second->m_bGroup
; 1693 : 			<< (*itFr).second->m_bClass
; 1694 : 			<< (*itFr).second->m_bConnected
; 1695 : 			<< DWORD((*itFr).second->m_bConnected ? (*itFr).second->m_dwRegion : 0);

  001bd	80 38 00	 cmp	 BYTE PTR [eax], 0
  001c0	74 05		 je	 SHORT $L148286
  001c2	8b 50 0c	 mov	 edx, DWORD PTR [eax+12]
  001c5	eb 02		 jmp	 SHORT $L148287
$L148286:
  001c7	33 d2		 xor	 edx, edx
$L148287:
  001c9	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  001cc	52		 push	 edx
  001cd	33 d2		 xor	 edx, edx
  001cf	8a 10		 mov	 dl, BYTE PTR [eax]
  001d1	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  001d4	52		 push	 edx
  001d5	33 d2		 xor	 edx, edx
  001d7	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  001da	52		 push	 edx
  001db	33 d2		 xor	 edx, edx
  001dd	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  001e0	52		 push	 edx
  001e1	33 d2		 xor	 edx, edx
  001e3	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  001e6	8b 40 08	 mov	 eax, DWORD PTR [eax+8]
  001e9	52		 push	 edx
  001ea	51		 push	 ecx
  001eb	50		 push	 eax
  001ec	8b cf		 mov	 ecx, edi
  001ee	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  001f3	8b c8		 mov	 ecx, eax
  001f5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  001fa	8b c8		 mov	 ecx, eax
  001fc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00201	8b c8		 mov	 ecx, eax
  00203	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00208	8b c8		 mov	 ecx, eax
  0020a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0020f	8b c8		 mov	 ecx, eax
  00211	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00216	8b c8		 mov	 ecx, eax
  00218	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
$L126263:
  0021d	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00220	84 c0		 test	 al, al
  00222	75 46		 jne	 SHORT $L148932
  00224	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  00227	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  0022a	84 c9		 test	 cl, cl
  0022c	75 1f		 jne	 SHORT $L149109
  0022e	8b f0		 mov	 esi, eax
  00230	8b 06		 mov	 eax, DWORD PTR [esi]
  00232	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00235	84 c9		 test	 cl, cl
  00237	75 31		 jne	 SHORT $L148932
  00239	8d a4 24 00 00
	00 00		 npad	 7

; 1682 : 
; 1683 : 	for(itFr=pChar->m_mapTFRIEND.begin(); itFr!=pChar->m_mapTFRIEND.end(); itFr++)

$L148913:
  00240	8b f0		 mov	 esi, eax
  00242	8b 06		 mov	 eax, DWORD PTR [esi]
  00244	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00247	84 c9		 test	 cl, cl
  00249	74 f5		 je	 SHORT $L148913
  0024b	eb 1d		 jmp	 SHORT $L148932
$L149109:
  0024d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00250	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00253	84 c9		 test	 cl, cl
  00255	75 11		 jne	 SHORT $L148935
$L148934:
  00257	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0025a	75 0c		 jne	 SHORT $L148935
  0025c	8b f0		 mov	 esi, eax
  0025e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00261	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00264	84 c9		 test	 cl, cl
  00266	74 ef		 je	 SHORT $L148934
$L148935:
  00268	8b f0		 mov	 esi, eax
$L148932:
  0026a	3b 75 10	 cmp	 esi, DWORD PTR [ebp+16]
  0026d	0f 85 41 ff ff
	ff		 jne	 $L148898
$L126264:

; 1696 : 	}
; 1697 : 	Say(pMsg);

  00273	8b 4c 24 0c	 mov	 ecx, DWORD PTR _this$[esp+32]
  00277	8b 11		 mov	 edx, DWORD PTR [ecx]
  00279	57		 push	 edi
  0027a	ff 12		 call	 DWORD PTR [edx]

; 1698 : }

  0027c	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  00280	5f		 pop	 edi
  00281	5e		 pop	 esi
  00282	5d		 pop	 ebp
  00283	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0028a	83 c4 14	 add	 esp, 20			; 00000014H
  0028d	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L148288:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T148273[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_FRIENDLIST_REQ@CTServer@@QAEXPAUtagTCHARACTER@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T149102
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_FRIENDLIST_REQ@CTServer@@QAEXPAUtagTCHARACTER@@@Z ENDP ; CTServer::SendMW_FRIENDLIST_REQ
PUBLIC	?SendMW_TMSINVITE_REQ@CTServer@@QAEXKKKPAUtagTMS@@@Z ; CTServer::SendMW_TMSINVITE_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
xdata$x	SEGMENT
$T149283 DD	0ffffffffH
	DD	FLAT:$L149132
$T149279 DD	019930520H
	DD	01H
	DD	FLAT:$T149283
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_TMSINVITE_REQ@CTServer@@QAEXKKKPAUtagTMS@@@Z
_TEXT	SEGMENT
$T149126 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwInviter$ = 16					; size = 4
_it$ = 20						; size = 4
_pTMS$ = 20						; size = 4
?SendMW_TMSINVITE_REQ@CTServer@@QAEXKKKPAUtagTMS@@@Z PROC NEAR ; CTServer::SendMW_TMSINVITE_REQ, COMDAT
; _this$ = ecx

; 2120 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TMSINVITE_REQ@CTServer@@QAEXKKKPAUtagTMS@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi

; 2121 : 	CPacket * pMsg = new CPacket();

  00019	6a 1c		 push	 28			; 0000001cH
  0001b	8b e9		 mov	 ebp, ecx
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	83 c4 04	 add	 esp, 4
  00025	89 44 24 0c	 mov	 DWORD PTR $T149126[esp+28], eax
  00029	33 ff		 xor	 edi, edi
  0002b	3b c7		 cmp	 eax, edi
  0002d	89 7c 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], edi
  00031	74 09		 je	 SHORT $L149128
  00033	8b c8		 mov	 ecx, eax
  00035	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003a	8b f8		 mov	 edi, eax
$L149128:

; 2122 : 	pMsg->SetID(MW_TMSINVITE_REQ)
; 2123 : 		<< dwCharID
; 2124 : 		<< dwKey
; 2125 : 		<< dwInviter
; 2126 : 		<< pTMS->m_dwID
; 2127 : 		<< BYTE(pTMS->m_mapMember.size());

  0003c	8b 74 24 2c	 mov	 esi, DWORD PTR _pTMS$[esp+24]
  00040	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00043	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwInviter$[esp+24]
  00047	8b 54 24 24	 mov	 edx, DWORD PTR _dwKey$[esp+24]
  0004b	50		 push	 eax
  0004c	8b 06		 mov	 eax, DWORD PTR [esi]
  0004e	50		 push	 eax
  0004f	8b 44 24 28	 mov	 eax, DWORD PTR _dwCharID$[esp+32]
  00053	51		 push	 ecx
  00054	52		 push	 edx
  00055	50		 push	 eax
  00056	68 78 20 00 00	 push	 8312			; 00002078H
  0005b	8b cf		 mov	 ecx, edi
  0005d	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  00065	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 2128 : 
; 2129 : 	MAPTCHARACTER::iterator it;
; 2130 : 	for(it=pTMS->m_mapMember.begin(); it!=pTMS->m_mapMember.end(); it++)

  0008d	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  00090	8b 01		 mov	 eax, DWORD PTR [ecx]
  00092	3b c1		 cmp	 eax, ecx
  00094	89 44 24 2c	 mov	 DWORD PTR _it$[esp+24], eax
  00098	74 51		 je	 SHORT $L126671
  0009a	8d 9b 00 00 00
	00		 npad	 6
$L149183:

; 2131 : 	{
; 2132 :         (*pMsg)
; 2133 : 			<< (*it).second->m_dwCharID
; 2134 : 			<< (*it).second->m_strNAME
; 2135 : 			<< (*it).second->m_bClass
; 2136 : 			<< (*it).second->m_bLevel;

  000a0	8b 40 10	 mov	 eax, DWORD PTR [eax+16]
  000a3	8b 48 6c	 mov	 ecx, DWORD PTR [eax+108]
  000a6	33 d2		 xor	 edx, edx
  000a8	8a 90 cd 00 00
	00		 mov	 dl, BYTE PTR [eax+205]
  000ae	52		 push	 edx
  000af	33 d2		 xor	 edx, edx
  000b1	8a 90 cc 00 00
	00		 mov	 dl, BYTE PTR [eax+204]
  000b7	8b 40 70	 mov	 eax, DWORD PTR [eax+112]
  000ba	52		 push	 edx
  000bb	51		 push	 ecx
  000bc	50		 push	 eax
  000bd	8b cf		 mov	 ecx, edi
  000bf	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000c4	8b c8		 mov	 ecx, eax
  000c6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000cb	8b c8		 mov	 ecx, eax
  000cd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000d2	8b c8		 mov	 ecx, eax
  000d4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000d9	8d 4c 24 2c	 lea	 ecx, DWORD PTR _it$[esp+24]
  000dd	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@KPAUtagTCHARACTER@@U?$less@K@std@@V?$allocator@U?$pair@$$CBKPAUtagTCHARACTER@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned long,tagTCHARACTER *,std::less<unsigned long>,std::allocator<std::pair<unsigned long const ,tagTCHARACTER *> >,0> >::const_iterator::_Inc
  000e2	8b 44 24 2c	 mov	 eax, DWORD PTR _it$[esp+24]
  000e6	3b 46 0c	 cmp	 eax, DWORD PTR [esi+12]
  000e9	75 b5		 jne	 SHORT $L149183
$L126671:

; 2137 : 	}
; 2138 : 
; 2139 : 	Say(pMsg);

  000eb	8b 55 00	 mov	 edx, DWORD PTR [ebp]
  000ee	57		 push	 edi
  000ef	8b cd		 mov	 ecx, ebp
  000f1	ff 12		 call	 DWORD PTR [edx]

; 2140 : }

  000f3	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  000f7	5f		 pop	 edi
  000f8	5e		 pop	 esi
  000f9	5d		 pop	 ebp
  000fa	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00101	83 c4 10	 add	 esp, 16			; 00000010H
  00104	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L149132:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T149126[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_TMSINVITE_REQ@CTServer@@QAEXKKKPAUtagTMS@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T149279
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TMSINVITE_REQ@CTServer@@QAEXKKKPAUtagTMS@@@Z ENDP ; CTServer::SendMW_TMSINVITE_REQ
PUBLIC	?SendMW_GUILDPVPRECORD_REQ@CTServer@@QAEXKKPAVCTGuild@@K@Z ; CTServer::SendMW_GUILDPVPRECORD_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	SEGMENT
$T149850 DD	0ffffffffH
	DD	FLAT:$L149296
$T149833 DD	019930520H
	DD	01H
	DD	FLAT:$T149850
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_GUILDPVPRECORD_REQ@CTServer@@QAEXKKPAVCTGuild@@K@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T149290 = -16						; size = 4
__$EHRec$ = -12						; size = 12
tv252 = 8						; size = 4
_dwCharID$ = 8						; size = 4
_itM$ = 12						; size = 4
_dwKey$ = 12						; size = 4
_pGuild$ = 16						; size = 4
_dwRecentRecordDate$ = 20				; size = 4
?SendMW_GUILDPVPRECORD_REQ@CTServer@@QAEXKKPAVCTGuild@@K@Z PROC NEAR ; CTServer::SendMW_GUILDPVPRECORD_REQ, COMDAT
; _this$ = ecx

; 2927 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_GUILDPVPRECORD_REQ@CTServer@@QAEXKKPAVCTGuild@@K@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	56		 push	 esi
  0001a	57		 push	 edi
  0001b	8b f9		 mov	 edi, ecx

; 2928 : 	CPacket* pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 7c 24 10	 mov	 DWORD PTR _this$[esp+36], edi
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 10	 mov	 DWORD PTR $T149290[esp+32], eax
  0002f	33 db		 xor	 ebx, ebx
  00031	3b c3		 cmp	 eax, ebx
  00033	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00037	74 09		 je	 SHORT $L149292
  00039	8b c8		 mov	 ecx, eax
  0003b	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00040	8b d8		 mov	 ebx, eax
$L149292:

; 2929 : 	pMSG->SetID(MW_GUILDPVPRECORD_REQ)
; 2930 : 		<< dwCharID
; 2931 : 		<< dwKey
; 2932 : 		<< WORD(pGuild->m_mapTMember.size());

  00042	8b 74 24 2c	 mov	 esi, DWORD PTR _pGuild$[esp+28]
  00046	8b 46 78	 mov	 eax, DWORD PTR [esi+120]
  00049	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwCharID$[esp+28]
  0004d	50		 push	 eax
  0004e	8b 44 24 2c	 mov	 eax, DWORD PTR _dwKey$[esp+32]
  00052	50		 push	 eax
  00053	51		 push	 ecx
  00054	68 27 21 00 00	 push	 8487			; 00002127H
  00059	8b cb		 mov	 ecx, ebx
  0005b	c7 44 24 2c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+56], -1
  00063	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006f	8b c8		 mov	 ecx, eax
  00071	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00076	8b c8		 mov	 ecx, eax
  00078	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 2933 : 
; 2934 : 	MAPTGUILDMEMBER::iterator itM;
; 2935 : 	for(itM=pGuild->m_mapTMember.begin(); itM!=pGuild->m_mapTMember.end(); itM++)

  0007d	8b 4e 74	 mov	 ecx, DWORD PTR [esi+116]
  00080	8b 01		 mov	 eax, DWORD PTR [ecx]
  00082	3b c1		 cmp	 eax, ecx
  00084	89 44 24 28	 mov	 DWORD PTR _itM$[esp+28], eax
  00088	0f 84 50 01 00
	00		 je	 $L127314
  0008e	55		 push	 ebp
  0008f	eb 04		 jmp	 SHORT $L149489
$L149847:
  00091	8b 44 24 2c	 mov	 eax, DWORD PTR _itM$[esp+32]
$L149489:

; 2936 : 	{
; 2937 : 		LPTGUILDMEMBER pMember = (*itM).second;

  00095	8b 70 10	 mov	 esi, DWORD PTR [eax+16]

; 2938 : 		(*pMSG)
; 2939 : 			<< pMember->m_dwID
; 2940 : 			<< pMember->m_weekrecord.m_wKillCount
; 2941 : 			<< pMember->m_weekrecord.m_wDieCount;

  00098	8b 4e 08	 mov	 ecx, DWORD PTR [esi+8]
  0009b	33 d2		 xor	 edx, edx
  0009d	66 8b 56 36	 mov	 dx, WORD PTR [esi+54]
  000a1	33 c0		 xor	 eax, eax
  000a3	66 8b 46 34	 mov	 ax, WORD PTR [esi+52]
  000a7	52		 push	 edx
  000a8	50		 push	 eax
  000a9	51		 push	 ecx
  000aa	8b cb		 mov	 ecx, ebx
  000ac	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b1	8b c8		 mov	 ecx, eax
  000b3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000b8	8b c8		 mov	 ecx, eax
  000ba	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000bf	8d 7e 3c	 lea	 edi, DWORD PTR [esi+60]
  000c2	bd 05 00 00 00	 mov	 ebp, 5
$L127317:

; 2942 : 
; 2943 : 		for(BYTE i=PVPE_KILL_H; i<PVPE_WIN; i++)
; 2944 : 			(*pMSG) << pMember->m_weekrecord.m_aGainPoint[i];

  000c7	8b 17		 mov	 edx, DWORD PTR [edi]
  000c9	52		 push	 edx
  000ca	8b cb		 mov	 ecx, ebx
  000cc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000d1	83 c7 04	 add	 edi, 4
  000d4	4d		 dec	 ebp
  000d5	75 f0		 jne	 SHORT $L127317

; 2945 : 
; 2946 : 		if(pMember->m_vRecord.size() && pMember->m_vRecord.back().m_dwDate >= dwRecentRecordDate)

  000d7	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  000da	85 c0		 test	 eax, eax
  000dc	74 6c		 je	 SHORT $L127320
  000de	8b 4e 28	 mov	 ecx, DWORD PTR [esi+40]
  000e1	2b c8		 sub	 ecx, eax
  000e3	b8 e9 a2 8b 2e	 mov	 eax, 780903145		; 2e8ba2e9H
  000e8	f7 e9		 imul	 ecx
  000ea	c1 fa 03	 sar	 edx, 3
  000ed	8b c2		 mov	 eax, edx
  000ef	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000f2	03 c2		 add	 eax, edx
  000f4	89 44 24 28	 mov	 DWORD PTR tv252[esp+32], eax
  000f8	74 50		 je	 SHORT $L127320
  000fa	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  000fd	8b 4c 24 34	 mov	 ecx, DWORD PTR _dwRecentRecordDate$[esp+32]
  00101	39 48 d4	 cmp	 DWORD PTR [eax-44], ecx
  00104	72 44		 jb	 SHORT $L127320

; 2947 : 		{
; 2948 : 			(*pMSG)
; 2949 : 				<< pMember->m_vRecord.back().m_wKillCount
; 2950 : 				<< pMember->m_vRecord.back().m_wDieCount;

  00106	33 d2		 xor	 edx, edx
  00108	66 8b 50 da	 mov	 dx, WORD PTR [eax-38]
  0010c	0f b7 40 d8	 movzx	 eax, WORD PTR [eax-40]
  00110	8b cb		 mov	 ecx, ebx
  00112	52		 push	 edx
  00113	50		 push	 eax
  00114	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00119	8b c8		 mov	 ecx, eax
  0011b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00120	bf 0c 00 00 00	 mov	 edi, 12			; 0000000cH
  00125	bd 05 00 00 00	 mov	 ebp, 5
  0012a	8d 9b 00 00 00
	00		 npad	 6
$L127322:

; 2951 : 
; 2952 : 			for(BYTE i=PVPE_KILL_H; i<PVPE_WIN; i++)
; 2953 : 				(*pMSG) << pMember->m_vRecord.back().m_aGainPoint[i];

  00130	8b 46 28	 mov	 eax, DWORD PTR [esi+40]
  00133	8b 4c 07 d4	 mov	 ecx, DWORD PTR [edi+eax-44]
  00137	83 e8 2c	 sub	 eax, 44			; 0000002cH
  0013a	51		 push	 ecx
  0013b	8b cb		 mov	 ecx, ebx
  0013d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00142	83 c7 04	 add	 edi, 4
  00145	4d		 dec	 ebp
  00146	75 e8		 jne	 SHORT $L127322

; 2954 : 		}
; 2955 : 		else

  00148	eb 23		 jmp	 SHORT $L127313
$L127320:

; 2956 : 		{
; 2957 : 			(*pMSG)
; 2958 : 				<< WORD(0)
; 2959 : 				<< WORD(0);

  0014a	6a 00		 push	 0
  0014c	6a 00		 push	 0
  0014e	8b cb		 mov	 ecx, ebx
  00150	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00155	8b c8		 mov	 ecx, eax
  00157	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0015c	be 05 00 00 00	 mov	 esi, 5
$L127327:

; 2960 : 
; 2961 : 			for(BYTE i=PVPE_KILL_H; i<PVPE_WIN; i++)
; 2962 : 				(*pMSG) << DWORD(0);

  00161	6a 00		 push	 0
  00163	8b cb		 mov	 ecx, ebx
  00165	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0016a	4e		 dec	 esi
  0016b	75 f4		 jne	 SHORT $L127327
$L127313:

; 2933 : 
; 2934 : 	MAPTGUILDMEMBER::iterator itM;
; 2935 : 	for(itM=pGuild->m_mapTMember.begin(); itM!=pGuild->m_mapTMember.end(); itM++)

  0016d	8b 54 24 2c	 mov	 edx, DWORD PTR _itM$[esp+32]
  00171	8a 42 15	 mov	 al, BYTE PTR [edx+21]
  00174	84 c0		 test	 al, al
  00176	75 54		 jne	 SHORT $L149499
  00178	8b 4a 08	 mov	 ecx, DWORD PTR [edx+8]
  0017b	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  0017e	84 c0		 test	 al, al
  00180	75 1f		 jne	 SHORT $L149839
  00182	8b 01		 mov	 eax, DWORD PTR [ecx]
  00184	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00187	84 d2		 test	 dl, dl
  00189	75 10		 jne	 SHORT $L149514
  0018b	eb 03 8d 49 00	 npad	 5
$L149513:
  00190	8b c8		 mov	 ecx, eax
  00192	8b 01		 mov	 eax, DWORD PTR [ecx]
  00194	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00197	84 d2		 test	 dl, dl
  00199	74 f5		 je	 SHORT $L149513
$L149514:
  0019b	89 4c 24 2c	 mov	 DWORD PTR _itM$[esp+32], ecx
  0019f	eb 27		 jmp	 SHORT $L149849
$L149839:
  001a1	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  001a4	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001a7	84 c9		 test	 cl, cl
  001a9	75 19		 jne	 SHORT $L149502
  001ab	eb 04		 jmp	 SHORT $L149501
$L149846:
  001ad	8b 54 24 2c	 mov	 edx, DWORD PTR _itM$[esp+32]
$L149501:
  001b1	3b 50 08	 cmp	 edx, DWORD PTR [eax+8]
  001b4	75 0e		 jne	 SHORT $L149502
  001b6	89 44 24 2c	 mov	 DWORD PTR _itM$[esp+32], eax
  001ba	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001bd	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001c0	84 c9		 test	 cl, cl
  001c2	74 e9		 je	 SHORT $L149846
$L149502:
  001c4	89 44 24 2c	 mov	 DWORD PTR _itM$[esp+32], eax
$L149849:
  001c8	8b 54 24 2c	 mov	 edx, DWORD PTR _itM$[esp+32]
$L149499:
  001cc	8b 44 24 30	 mov	 eax, DWORD PTR _pGuild$[esp+32]
  001d0	3b 50 74	 cmp	 edx, DWORD PTR [eax+116]
  001d3	0f 85 b8 fe ff
	ff		 jne	 $L149847
  001d9	8b 7c 24 10	 mov	 edi, DWORD PTR _this$[esp+36]
  001dd	5d		 pop	 ebp
$L127314:

; 2963 : 		}
; 2964 : 	}
; 2965 : 
; 2966 : 	Say(pMSG);

  001de	8b 17		 mov	 edx, DWORD PTR [edi]
  001e0	53		 push	 ebx
  001e1	8b cf		 mov	 ecx, edi
  001e3	ff 12		 call	 DWORD PTR [edx]

; 2967 : }

  001e5	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  001e9	5f		 pop	 edi
  001ea	5e		 pop	 esi
  001eb	5b		 pop	 ebx
  001ec	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001f3	83 c4 14	 add	 esp, 20			; 00000014H
  001f6	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L149296:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T149290[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_GUILDPVPRECORD_REQ@CTServer@@QAEXKKPAVCTGuild@@K@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T149833
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_GUILDPVPRECORD_REQ@CTServer@@QAEXKKPAVCTGuild@@K@Z ENDP ; CTServer::SendMW_GUILDPVPRECORD_REQ
PUBLIC	?SendMW_EVENTUPDATE_REQ@CTServer@@QAEXEGPAUtagEVENTINFO@@@Z ; CTServer::SendMW_EVENTUPDATE_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T149864 DD	0ffffffffH
	DD	FLAT:$L149860
$T149862 DD	019930520H
	DD	01H
	DD	FLAT:$T149864
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendMW_EVENTUPDATE_REQ@CTServer@@QAEXEGPAUtagEVENTINFO@@@Z
_TEXT	SEGMENT
$T149857 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bEvnetID$ = 8						; size = 1
_wValue$ = 12						; size = 2
_pEvent$ = 16						; size = 4
?SendMW_EVENTUPDATE_REQ@CTServer@@QAEXEGPAUtagEVENTINFO@@@Z PROC NEAR ; CTServer::SendMW_EVENTUPDATE_REQ, COMDAT
; _this$ = ecx

; 3010 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_EVENTUPDATE_REQ@CTServer@@QAEXEGPAUtagEVENTINFO@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 3011 : 	CPacket* pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T149857[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L149859
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L149859:

; 3012 : 	pMSG->SetID(MW_EVENTUPDATE_REQ)
; 3013 : 		<< bEvnetID
; 3014 : 		<< wValue;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _wValue$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _bEvnetID$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 2f 21 00 00	 push	 8495			; 0000212fH
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 3015 : 
; 3016 : 	pEvent->WrapPacketIn(pMSG);

  00067	8b 4c 24 24	 mov	 ecx, DWORD PTR _pEvent$[esp+20]
  0006b	56		 push	 esi
  0006c	e8 00 00 00 00	 call	 ?WrapPacketIn@tagEVENTINFO@@QAEXPAVCPacket@@@Z ; tagEVENTINFO::WrapPacketIn

; 3017 : 
; 3018 : 	Say(pMSG);

  00071	8b 17		 mov	 edx, DWORD PTR [edi]
  00073	56		 push	 esi
  00074	8b cf		 mov	 ecx, edi
  00076	ff 12		 call	 DWORD PTR [edx]

; 3019 : 	
; 3020 : }

  00078	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi
  0007e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00085	83 c4 10	 add	 esp, 16			; 00000010H
  00088	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L149860:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T149857[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_EVENTUPDATE_REQ@CTServer@@QAEXEGPAUtagEVENTINFO@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T149862
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_EVENTUPDATE_REQ@CTServer@@QAEXEGPAUtagEVENTINFO@@@Z ENDP ; CTServer::SendMW_EVENTUPDATE_REQ
PUBLIC	?SendMW_TOURNAMENTINFO_REQ@CTServer@@QAEXEPAV?$map@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@@std@@EEE@Z ; CTServer::SendMW_TOURNAMENTINFO_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	SEGMENT
$T150347 DD	0ffffffffH
	DD	FLAT:$L149879
$T150336 DD	019930520H
	DD	01H
	DD	FLAT:$T150347
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_TOURNAMENTINFO_REQ@CTServer@@QAEXEPAV?$map@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@@std@@EEE@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T149871 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bFirstGroupCount$ = 8					; size = 1
_pTour$ = 12						; size = 4
_bGroup$ = 16						; size = 1
_bStep$ = 20						; size = 1
_bMaxLevel$ = 24					; size = 1
?SendMW_TOURNAMENTINFO_REQ@CTServer@@QAEXEPAV?$map@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@@std@@EEE@Z PROC NEAR ; CTServer::SendMW_TOURNAMENTINFO_REQ, COMDAT
; _this$ = ecx

; 3253 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_TOURNAMENTINFO_REQ@CTServer@@QAEXEPAV?$map@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@@std@@EEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	8b d9		 mov	 ebx, ecx

; 3254 : 	CPacket* pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 10	 mov	 DWORD PTR _this$[esp+36], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 10	 mov	 DWORD PTR $T149871[esp+32], eax
  0002f	85 c0		 test	 eax, eax
  00031	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00039	74 0b		 je	 SHORT $L149872
  0003b	8b c8		 mov	 ecx, eax
  0003d	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00042	8b e8		 mov	 ebp, eax
  00044	eb 02		 jmp	 SHORT $L149873
$L149872:
  00046	33 ed		 xor	 ebp, ebp
$L149873:

; 3255 : 	pMSG->SetID(MW_TOURNAMENTINFO_REQ)
; 3256 : 		<< bFirstGroupCount
; 3257 : 		<< bGroup
; 3258 : 		<< bStep
; 3259 : 		<< BYTE(pTour ? pTour->size() : 0);

  00048	8b 74 24 28	 mov	 esi, DWORD PTR _pTour$[esp+28]
  0004c	85 f6		 test	 esi, esi
  0004e	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  00056	74 05		 je	 SHORT $L149874
  00058	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005b	eb 02		 jmp	 SHORT $L149875
$L149874:
  0005d	33 c0		 xor	 eax, eax
$L149875:
  0005f	8b 4c 24 2c	 mov	 ecx, DWORD PTR _bGroup$[esp+28]
  00063	8b 54 24 24	 mov	 edx, DWORD PTR _bFirstGroupCount$[esp+28]
  00067	50		 push	 eax
  00068	8b 44 24 34	 mov	 eax, DWORD PTR _bStep$[esp+32]
  0006c	50		 push	 eax
  0006d	51		 push	 ecx
  0006e	52		 push	 edx
  0006f	68 5a 21 00 00	 push	 8538			; 0000215aH
  00074	8b cd		 mov	 ecx, ebp
  00076	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3260 : 
; 3261 : 	if(pTour)

  00097	85 f6		 test	 esi, esi
  00099	0f 84 66 01 00
	00		 je	 $L128161

; 3262 : 	{
; 3263 : 		MAPTOURNAMENTENTRY::iterator it;
; 3264 : 		for(it=pTour->begin(); it!=pTour->end(); it++)

  0009f	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000a2	57		 push	 edi
  000a3	8b 38		 mov	 edi, DWORD PTR [eax]
  000a5	3b f8		 cmp	 edi, eax
  000a7	0f 84 57 01 00
	00		 je	 $L150346
  000ad	8d 49 00	 npad	 3
$L150344:

; 3265 : 		{
; 3266 : 			LPTOURNAMENTENTRY pEntry = (*it).second;

  000b0	8b 77 10	 mov	 esi, DWORD PTR [edi+16]

; 3267 : 
; 3268 : 			(*pMSG)
; 3269 : 				<< pEntry->m_bGroup
; 3270 : 				<< pEntry->m_bEntryID
; 3271 : 				<< pEntry->m_strName
; 3272 : 				<< pEntry->m_bType
; 3273 : 				<< pEntry->m_dwClass
; 3274 : 				<< pEntry->m_dwFee
; 3275 : 				<< pEntry->m_dwFeeBack
; 3276 : 				<< pEntry->m_wPermitItemID
; 3277 : 				<< pEntry->m_bPermitCount
; 3278 : 				<< pEntry->m_bMinLevel
; 3279 : 				<< pEntry->m_bMaxLevel;

  000b3	33 c9		 xor	 ecx, ecx
  000b5	8a 4e 51	 mov	 cl, BYTE PTR [esi+81]
  000b8	33 d2		 xor	 edx, edx
  000ba	8a 56 50	 mov	 dl, BYTE PTR [esi+80]
  000bd	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  000c0	51		 push	 ecx
  000c1	33 c9		 xor	 ecx, ecx
  000c3	8a 4e 1a	 mov	 cl, BYTE PTR [esi+26]
  000c6	52		 push	 edx
  000c7	33 d2		 xor	 edx, edx
  000c9	66 8b 56 18	 mov	 dx, WORD PTR [esi+24]
  000cd	51		 push	 ecx
  000ce	8b 4e 14	 mov	 ecx, DWORD PTR [esi+20]
  000d1	52		 push	 edx
  000d2	8b 56 10	 mov	 edx, DWORD PTR [esi+16]
  000d5	51		 push	 ecx
  000d6	8b 4e 0c	 mov	 ecx, DWORD PTR [esi+12]
  000d9	52		 push	 edx
  000da	33 d2		 xor	 edx, edx
  000dc	8a 56 08	 mov	 dl, BYTE PTR [esi+8]
  000df	51		 push	 ecx
  000e0	33 c9		 xor	 ecx, ecx
  000e2	8a 4e 01	 mov	 cl, BYTE PTR [esi+1]
  000e5	52		 push	 edx
  000e6	50		 push	 eax
  000e7	33 c0		 xor	 eax, eax
  000e9	8a 06		 mov	 al, BYTE PTR [esi]
  000eb	50		 push	 eax
  000ec	51		 push	 ecx
  000ed	8b cd		 mov	 ecx, ebp
  000ef	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000f4	8b c8		 mov	 ecx, eax
  000f6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000fb	8b c8		 mov	 ecx, eax
  000fd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00102	8b c8		 mov	 ecx, eax
  00104	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00109	8b c8		 mov	 ecx, eax
  0010b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00110	8b c8		 mov	 ecx, eax
  00112	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00117	8b c8		 mov	 ecx, eax
  00119	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0011e	8b c8		 mov	 ecx, eax
  00120	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00125	8b c8		 mov	 ecx, eax
  00127	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0012c	8b c8		 mov	 ecx, eax
  0012e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00133	8b c8		 mov	 ecx, eax
  00135	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3280 : 
; 3281 : 			(*pMSG)<< BYTE(pEntry->m_vReward.size());

  0013a	8b 4e 20	 mov	 ecx, DWORD PTR [esi+32]
  0013d	85 c9		 test	 ecx, ecx
  0013f	75 04		 jne	 SHORT $L150159
  00141	33 c0		 xor	 eax, eax
  00143	eb 08		 jmp	 SHORT $L150160
$L150159:
  00145	8b 46 24	 mov	 eax, DWORD PTR [esi+36]
  00148	2b c1		 sub	 eax, ecx
  0014a	c1 f8 04	 sar	 eax, 4
$L150160:
  0014d	50		 push	 eax
  0014e	8b cd		 mov	 ecx, ebp
  00150	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 3282 : 
; 3283 : 			for(BYTE i=0; i<pEntry->m_vReward.size(); i++)

  00155	32 db		 xor	 bl, bl
$L128182:
  00157	8b 46 20	 mov	 eax, DWORD PTR [esi+32]
  0015a	85 c0		 test	 eax, eax
  0015c	75 04		 jne	 SHORT $L150167
  0015e	33 c9		 xor	 ecx, ecx
  00160	eb 08		 jmp	 SHORT $L150168
$L150167:
  00162	8b 4e 24	 mov	 ecx, DWORD PTR [esi+36]
  00165	2b c8		 sub	 ecx, eax
  00167	c1 f9 04	 sar	 ecx, 4
$L150168:
  0016a	0f b6 c3	 movzx	 eax, bl
  0016d	3b c1		 cmp	 eax, ecx
  0016f	73 32		 jae	 SHORT $L128160

; 3284 : 			{
; 3285 : 				(*pMSG)
; 3286 : 					<< pEntry->m_vReward[i].m_bChartType
; 3287 : 					<< pEntry->m_vReward[i].m_wItemID
; 3288 : 					<< pEntry->m_vReward[i].m_bCount;

  00171	8b 56 20	 mov	 edx, DWORD PTR [esi+32]
  00174	c1 e0 04	 shl	 eax, 4
  00177	03 c2		 add	 eax, edx
  00179	33 c9		 xor	 ecx, ecx
  0017b	8a 48 04	 mov	 cl, BYTE PTR [eax+4]
  0017e	33 d2		 xor	 edx, edx
  00180	66 8b 50 02	 mov	 dx, WORD PTR [eax+2]
  00184	0f b6 00	 movzx	 eax, BYTE PTR [eax]
  00187	51		 push	 ecx
  00188	8b cd		 mov	 ecx, ebp
  0018a	52		 push	 edx
  0018b	50		 push	 eax
  0018c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00191	8b c8		 mov	 ecx, eax
  00193	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00198	8b c8		 mov	 ecx, eax
  0019a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0019f	fe c3		 inc	 bl
  001a1	eb b4		 jmp	 SHORT $L128182
$L128160:

; 3262 : 	{
; 3263 : 		MAPTOURNAMENTENTRY::iterator it;
; 3264 : 		for(it=pTour->begin(); it!=pTour->end(); it++)

  001a3	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  001a6	84 c0		 test	 al, al
  001a8	75 49		 jne	 SHORT $L150081
  001aa	8b 4f 08	 mov	 ecx, DWORD PTR [edi+8]
  001ad	8a 41 15	 mov	 al, BYTE PTR [ecx+21]
  001b0	84 c0		 test	 al, al
  001b2	75 1b		 jne	 SHORT $L150340
  001b4	8b 01		 mov	 eax, DWORD PTR [ecx]
  001b6	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  001b9	84 d2		 test	 dl, dl
  001bb	75 0e		 jne	 SHORT $L150096
  001bd	8d 49 00	 npad	 3
$L150095:
  001c0	8b c8		 mov	 ecx, eax
  001c2	8b 01		 mov	 eax, DWORD PTR [ecx]
  001c4	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  001c7	84 d2		 test	 dl, dl
  001c9	74 f5		 je	 SHORT $L150095
$L150096:
  001cb	8b f9		 mov	 edi, ecx
  001cd	eb 24		 jmp	 SHORT $L150081
$L150340:
  001cf	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  001d2	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001d5	84 c9		 test	 cl, cl
  001d7	75 18		 jne	 SHORT $L150084
  001d9	8d a4 24 00 00
	00 00		 npad	 7
$L150083:
  001e0	3b 78 08	 cmp	 edi, DWORD PTR [eax+8]
  001e3	75 0c		 jne	 SHORT $L150084
  001e5	8b f8		 mov	 edi, eax
  001e7	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  001ea	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001ed	84 c9		 test	 cl, cl
  001ef	74 ef		 je	 SHORT $L150083
$L150084:
  001f1	8b f8		 mov	 edi, eax
$L150081:
  001f3	8b 4c 24 2c	 mov	 ecx, DWORD PTR _pTour$[esp+32]
  001f7	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  001fa	0f 85 b0 fe ff
	ff		 jne	 $L150344
  00200	8b 5c 24 10	 mov	 ebx, DWORD PTR _this$[esp+36]
$L150346:
  00204	5f		 pop	 edi
$L128161:

; 3289 : 			}
; 3290 : 		}
; 3291 : 	}
; 3292 : 
; 3293 : 	Say(pMSG);

  00205	8b 13		 mov	 edx, DWORD PTR [ebx]
  00207	55		 push	 ebp
  00208	8b cb		 mov	 ecx, ebx
  0020a	ff 12		 call	 DWORD PTR [edx]

; 3294 : }

  0020c	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  00210	5e		 pop	 esi
  00211	5d		 pop	 ebp
  00212	5b		 pop	 ebx
  00213	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0021a	83 c4 14	 add	 esp, 20			; 00000014H
  0021d	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L149879:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T149871[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_TOURNAMENTINFO_REQ@CTServer@@QAEXEPAV?$map@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@@std@@EEE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T150336
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_TOURNAMENTINFO_REQ@CTServer@@QAEXEPAV?$map@EPAUtagTOURNAMENTENTRY@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTOURNAMENTENTRY@@@std@@@3@@std@@EEE@Z ENDP ; CTServer::SendMW_TOURNAMENTINFO_REQ
PUBLIC	??$_Ucopy@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@@?$vector@_JV?$allocator@_J@std@@@std@@IAEPA_JVconst_iterator@01@0PA_J@Z ; std::vector<__int64,std::allocator<__int64> >::_Ucopy<std::vector<__int64,std::allocator<__int64> >::const_iterator>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??$_Ucopy@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@@?$vector@_JV?$allocator@_J@std@@@std@@IAEPA_JVconst_iterator@01@0PA_J@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Cat$150363 = 16					; size = 1
__Ptr$ = 16						; size = 4
??$_Ucopy@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@@?$vector@_JV?$allocator@_J@std@@@std@@IAEPA_JVconst_iterator@01@0PA_J@Z PROC NEAR ; std::vector<__int64,std::allocator<__int64> >::_Ucopy<std::vector<__int64,std::allocator<__int64> >::const_iterator>, COMDAT
; _this$ = ecx

; 802  : 		{	// copy initializing [_First, _Last), using allocator
; 803  : 		return (_Uninitialized_copy(_First, _Last,
; 804  : 			_Ptr, this->_Alval));

  00000	8b 44 24 0c	 mov	 eax, DWORD PTR __Cat$150363[esp-4]
  00004	8b 54 24 08	 mov	 edx, DWORD PTR __Last$[esp-4]
  00008	50		 push	 eax
  00009	8b 44 24 08	 mov	 eax, DWORD PTR __First$[esp]
  0000d	51		 push	 ecx
  0000e	8b 4c 24 14	 mov	 ecx, DWORD PTR __Ptr$[esp+4]
  00012	51		 push	 ecx
  00013	52		 push	 edx
  00014	50		 push	 eax
  00015	e8 00 00 00 00	 call	 ??$_Uninit_copy@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@PA_JV?$allocator@_J@3@@std@@YAPA_JVconst_iterator@?$vector@_JV?$allocator@_J@std@@@0@0PA_JAAV?$allocator@_J@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<__int64,std::allocator<__int64> >::const_iterator,__int64 *,std::allocator<__int64> >
  0001a	83 c4 14	 add	 esp, 20			; 00000014H

; 805  : 		}

  0001d	c2 0c 00	 ret	 12			; 0000000cH
??$_Ucopy@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@@?$vector@_JV?$allocator@_J@std@@@std@@IAEPA_JVconst_iterator@01@0PA_J@Z ENDP ; std::vector<__int64,std::allocator<__int64> >::_Ucopy<std::vector<__int64,std::allocator<__int64> >::const_iterator>
_TEXT	ENDS
PUBLIC	??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::operator=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT
_pszSrc$ = 8						; size = 4
??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::operator=, COMDAT
; _this$ = ecx

; 983  : 		CThisSimpleString::operator=( pszSrc );

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _pszSrc$[esp-4]
  00004	85 d2		 test	 edx, edx
  00006	57		 push	 edi
  00007	8b f9		 mov	 edi, ecx
  00009	75 0f		 jne	 SHORT $L150386
  0000b	33 c0		 xor	 eax, eax
  0000d	50		 push	 eax
  0000e	52		 push	 edx
  0000f	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 984  : 
; 985  : 		return( *this );

  00014	8b c7		 mov	 eax, edi
  00016	5f		 pop	 edi

; 986  : 	}

  00017	c2 04 00	 ret	 4

; 983  : 		CThisSimpleString::operator=( pszSrc );

$L150386:
  0001a	8b c2		 mov	 eax, edx
  0001c	56		 push	 esi
  0001d	8d 70 01	 lea	 esi, DWORD PTR [eax+1]
$L150389:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L150389
  00027	2b c6		 sub	 eax, esi
  00029	5e		 pop	 esi
  0002a	50		 push	 eax
  0002b	52		 push	 edx
  0002c	8b cf		 mov	 ecx, edi
  0002e	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString

; 984  : 
; 985  : 		return( *this );

  00033	8b c7		 mov	 eax, edi
  00035	5f		 pop	 edi

; 986  : 	}

  00036	c2 04 00	 ret	 4
??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::operator=
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 323  : 		{	// construct by copying _Right

  00000	56		 push	 esi

; 324  : 		_Tidy();

  00001	33 c0		 xor	 eax, eax
  00003	8b f1		 mov	 esi, ecx

; 325  : 		assign(_Right, 0, npos);

  00005	6a ff		 push	 -1
  00007	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	50		 push	 eax
  00012	88 46 04	 mov	 BYTE PTR [esi+4], al
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Right$[esp+8]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 326  : 		}

  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 621  : 		{	// assign [_Ptr, <null>)

  00000	56		 push	 esi

; 622  : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __Ptr$[esp]
  00005	8b c6		 mov	 eax, esi
  00007	57		 push	 edi
  00008	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000b	eb 03 8d 49 00	 npad	 5
$L150462:
  00010	8a 10		 mov	 dl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 d2		 test	 dl, dl
  00015	75 f9		 jne	 SHORT $L150462
  00017	2b c7		 sub	 eax, edi
  00019	50		 push	 eax
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi

; 623  : 		}

  00022	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 361  : 		_Tidy();
; 362  : 		assign(_Ptr);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Ptr$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b c2		 mov	 eax, edx
  00009	57		 push	 edi
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00018	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  0001c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0001f	90		 npad	 1
$L150537:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L150537
  00027	2b c7		 sub	 eax, edi
  00029	50		 push	 eax
  0002a	52		 push	 edx
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00032	5f		 pop	 edi

; 363  : 		}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
EXTRN	??0exception@@QAE@XZ:NEAR			; exception::exception
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T150640 DD	0ffffffffH
	DD	FLAT:$L150541
$T150638 DD	019930520H
	DD	01H
	DD	FLAT:$T150640
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 19   : 		{	// construct from message string

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	89 74 24 04	 mov	 DWORD PTR _this$[esp+20], esi
  0001d	e8 00 00 00 00	 call	 ??0exception@@QAE@XZ	; exception::exception
  00022	33 c0		 xor	 eax, eax
  00024	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00027	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  0002d	6a ff		 push	 -1
  0002f	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00032	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00039	50		 push	 eax
  0003a	89 44 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], eax
  0003e	88 41 04	 mov	 BYTE PTR [ecx+4], al
  00041	8b 44 24 20	 mov	 eax, DWORD PTR __Message$[esp+24]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 20   : 		}

  0004b	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0004f	8b c6		 mov	 eax, esi
  00051	5e		 pop	 esi
  00052	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L150541:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T150638
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
PUBLIC	??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::length_error::length_error
PUBLIC	??_7length_error@std@@6B@			; std::length_error::`vftable'
PUBLIC	??_Glength_error@std@@UAEPAXI@Z			; std::length_error::`scalar deleting destructor'
EXTRN	??_Elength_error@std@@UAEPAXI@Z:NEAR		; std::length_error::`vector deleting destructor'
;	COMDAT ??_7length_error@std@@6B@
CONST	SEGMENT
??_7length_error@std@@6B@ DD FLAT:??_Elength_error@std@@UAEPAXI@Z ; std::length_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::length_error::length_error, COMDAT
; _this$ = ecx

; 95   : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@

; 96   : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::length_error::length_error
_TEXT	ENDS
PUBLIC	??1length_error@std@@UAE@XZ			; std::length_error::~length_error
; Function compile flags: /Ogty
;	COMDAT ??_Glength_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glength_error@std@@UAEPAXI@Z PROC NEAR		; std::length_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1length_error@std@@UAE@XZ ; std::length_error::~length_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L150650
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L150650:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glength_error@std@@UAEPAXI@Z ENDP			; std::length_error::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1length_error@std@@UAE@XZ
_TEXT	SEGMENT
??1length_error@std@@UAE@XZ PROC NEAR			; std::length_error::~length_error, COMDAT
; _this$ = ecx

; 99   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L150744
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L150744:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1length_error@std@@UAE@XZ ENDP			; std::length_error::~length_error
_TEXT	ENDS
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_Gout_of_range@std@@UAEPAXI@Z			; std::out_of_range::`scalar deleting destructor'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:NEAR		; std::out_of_range::`vector deleting destructor'
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_Eout_of_range@std@@UAEPAXI@Z ; std::out_of_range::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 118  : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@

; 119  : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
; Function compile flags: /Ogty
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC NEAR		; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1out_of_range@std@@UAE@XZ ; std::out_of_range::~out_of_range
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L150764
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L150764:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
??1out_of_range@std@@UAE@XZ PROC NEAR			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx

; 122  : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L150858
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L150858:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
_TEXT	ENDS
PUBLIC	??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T150954 DD	0ffffffffH
	DD	FLAT:$L150874
$T150948 DD	019930520H
	DD	01H
	DD	FLAT:$T150954
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
xdata$x	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pszSrc$ = 8						; size = 4
??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 830  : 	{

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	a1 00 00 00 00	 mov	 eax, DWORD PTR ?g_strmgr@ATL@@3VCAtlStringMgr@1@A
  0001b	56		 push	 esi
  0001c	8b f1		 mov	 esi, ecx
  0001e	57		 push	 edi
  0001f	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?g_strmgr@ATL@@3VCAtlStringMgr@1@A ; ATL::g_strmgr
  00024	89 74 24 08	 mov	 DWORD PTR _this$[esp+24], esi
  00028	ff 50 0c	 call	 DWORD PTR [eax+12]
  0002b	83 c0 10	 add	 eax, 16			; 00000010H
  0002e	89 06		 mov	 DWORD PTR [esi], eax

; 831  : 		if( !CheckImplicitLoad( pszSrc ) )

  00030	8b 54 24 1c	 mov	 edx, DWORD PTR _pszSrc$[esp+20]
  00034	85 d2		 test	 edx, edx
  00036	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  0003e	74 38		 je	 SHORT $L150950
  00040	f7 c2 00 00 ff
	ff		 test	 edx, -65536		; ffff0000H
  00046	75 34		 jne	 SHORT $L150943
  00048	0f b7 fa	 movzx	 edi, dx
  0004b	6a 00		 push	 0
  0004d	57		 push	 edi
  0004e	e8 00 00 00 00	 call	 ?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z ; ATL::AtlFindStringResourceInstance
  00053	83 c4 08	 add	 esp, 8
  00056	85 c0		 test	 eax, eax
  00058	74 39		 je	 SHORT $L150952
  0005a	57		 push	 edi
  0005b	50		 push	 eax
  0005c	8b ce		 mov	 ecx, esi
  0005e	e8 00 00 00 00	 call	 ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::LoadStringA
  00063	5f		 pop	 edi

; 835  : 		}
; 836  : 	}

  00064	8b c6		 mov	 eax, esi
  00066	5e		 pop	 esi
  00067	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00072	83 c4 10	 add	 esp, 16			; 00000010H
  00075	c2 04 00	 ret	 4
$L150950:

; 832  : 		{
; 833  : 			// nDestLength is in XCHARs
; 834  : 			*this = pszSrc;

  00078	33 c0		 xor	 eax, eax
  0007a	eb 0e		 jmp	 SHORT $L150942
$L150943:
  0007c	8b c2		 mov	 eax, edx
  0007e	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
$L150951:
  00081	8a 08		 mov	 cl, BYTE PTR [eax]
  00083	40		 inc	 eax
  00084	84 c9		 test	 cl, cl
  00086	75 f9		 jne	 SHORT $L150951
  00088	2b c7		 sub	 eax, edi
$L150942:
  0008a	50		 push	 eax
  0008b	52		 push	 edx
  0008c	8b ce		 mov	 ecx, esi
  0008e	e8 00 00 00 00	 call	 ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z ; ATL::CSimpleStringT<char,0>::SetString
$L150952:

; 835  : 		}
; 836  : 	}

  00093	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00097	5f		 pop	 edi
  00098	8b c6		 mov	 eax, esi
  0009a	5e		 pop	 esi
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a2	83 c4 10	 add	 esp, 16			; 00000010H
  000a5	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L150874:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ ; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
__ehhandler$??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T150948
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
PUBLIC	??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ ; `string'
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::erase
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T151451 DD	0ffffffffH
	DD	FLAT:$L150966
$T151443 DD	019930520H
	DD	01H
	DD	FLAT:$T151451
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
CONST	SEGMENT
??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@ DB 'invalid '
	DB	'map/set<T> iterator', 00H			; `string'
CONST	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
_DATA	ENDS
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
_TEXT	SEGMENT
__Erasednode$ = -84					; size = 4
$T150961 = -80						; size = 28
$T150960 = -52						; size = 40
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
__Where$ = 12						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::erase, COMDAT
; _this$ = ecx

; 590  : 		{	// erase element at _Where

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z
  0000d	50		 push	 eax

; 591  : 		if (_Isnil(_Where._Mynode()))

  0000e	8b 44 24 14	 mov	 eax, DWORD PTR __Where$[esp+8]
  00012	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00019	83 ec 48	 sub	 esp, 72			; 00000048H
  0001c	55		 push	 ebp
  0001d	8b e9		 mov	 ebp, ecx
  0001f	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00022	84 c9		 test	 cl, cl
  00024	56		 push	 esi
  00025	74 4c		 je	 SHORT $L120192

; 592  : 			_THROW(out_of_range, "invalid map/set<T> iterator");

  00027	6a 1b		 push	 27			; 0000001bH
  00029	33 f6		 xor	 esi, esi
  0002b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@PAPJHAGI@invalid?5map?1set?$DMT?$DO?5iterator?$AA@
  00030	8d 4c 24 14	 lea	 ecx, DWORD PTR $T150961[esp+100]
  00034	c7 44 24 2c 0f
	00 00 00	 mov	 DWORD PTR $T150961[esp+124], 15 ; 0000000fH
  0003c	89 74 24 28	 mov	 DWORD PTR $T150961[esp+120], esi
  00040	c6 44 24 18 00	 mov	 BYTE PTR $T150961[esp+104], 0
  00045	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004a	8d 44 24 0c	 lea	 eax, DWORD PTR $T150961[esp+92]
  0004e	50		 push	 eax
  0004f	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T150960[esp+96]
  00053	89 74 24 5c	 mov	 DWORD PTR __$EHRec$[esp+104], esi
  00057	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0005c	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00061	8d 4c 24 2c	 lea	 ecx, DWORD PTR $T150960[esp+96]
  00065	51		 push	 ecx
  00066	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR $T150960[esp+100], OFFSET FLAT:??_7out_of_range@std@@6B@
  0006e	e8 00 00 00 00	 call	 __CxxThrowException@8
$L151452:
$L120192:
  00073	53		 push	 ebx

; 593  : 		_Nodeptr _Erasednode = _Where._Mynode();	// node to erase

  00074	8b d8		 mov	 ebx, eax
  00076	57		 push	 edi

; 594  : 		++_Where;	// save successor iterator for return

  00077	8d 4c 24 6c	 lea	 ecx, DWORD PTR __Where$[esp+96]
  0007b	89 5c 24 10	 mov	 DWORD PTR __Erasednode$[esp+100], ebx
  0007f	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::_Inc

; 595  : 
; 596  : 		_Nodeptr _Fixnode;	// the node to recolor as needed
; 597  : 		_Nodeptr _Fixnodeparent;	// parent of _Fixnode (which may be nil)
; 598  : 		_Nodeptr _Pnode = _Erasednode;
; 599  : 
; 600  : 		if (_Isnil(_Left(_Pnode)))

  00084	8b 03		 mov	 eax, DWORD PTR [ebx]
  00086	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00089	84 c9		 test	 cl, cl
  0008b	74 05		 je	 SHORT $L120205

; 601  : 			_Fixnode = _Right(_Pnode);	// must stitch up right subtree

  0008d	8b 7b 08	 mov	 edi, DWORD PTR [ebx+8]

; 602  : 		else if (_Isnil(_Right(_Pnode)))

  00090	eb 19		 jmp	 SHORT $L151446
$L120205:
  00092	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00095	8a 4a 15	 mov	 cl, BYTE PTR [edx+21]
  00098	84 c9		 test	 cl, cl
  0009a	74 04		 je	 SHORT $L120207

; 603  : 			_Fixnode = _Left(_Pnode);	// must stitch up left subtree

  0009c	8b f8		 mov	 edi, eax

; 604  : 		else

  0009e	eb 0b		 jmp	 SHORT $L151446
$L120207:

; 605  : 			{	// two subtrees, must lift successor node to replace erased
; 606  : 			_Pnode = _Where._Mynode();	// _Pnode is successor node
; 607  : 			_Fixnode = _Right(_Pnode);	// _Fixnode is its only subtree

  000a0	8b 4c 24 6c	 mov	 ecx, DWORD PTR __Where$[esp+96]

; 608  : 			}
; 609  : 
; 610  : 		if (_Pnode == _Erasednode)

  000a4	3b cb		 cmp	 ecx, ebx
  000a6	8b 79 08	 mov	 edi, DWORD PTR [ecx+8]
  000a9	75 6e		 jne	 SHORT $L120209
$L151446:

; 611  : 			{	// at most one subtree, relink it
; 612  : 			_Fixnodeparent = _Parent(_Erasednode);
; 613  : 			if (!_Isnil(_Fixnode))

  000ab	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000ae	84 c0		 test	 al, al
  000b0	8b 73 04	 mov	 esi, DWORD PTR [ebx+4]
  000b3	75 03		 jne	 SHORT $L120210

; 614  : 				_Parent(_Fixnode) = _Fixnodeparent;	// link up

  000b5	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L120210:

; 615  : 
; 616  : 			if (_Root() == _Erasednode)

  000b8	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  000bb	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  000be	75 05		 jne	 SHORT $L120211

; 617  : 				_Root() = _Fixnode;	// link down from root

  000c0	89 78 04	 mov	 DWORD PTR [eax+4], edi

; 618  : 			else if (_Left(_Fixnodeparent) == _Erasednode)

  000c3	eb 0b		 jmp	 SHORT $L120214
$L120211:
  000c5	39 1e		 cmp	 DWORD PTR [esi], ebx
  000c7	75 04		 jne	 SHORT $L120213

; 619  : 				_Left(_Fixnodeparent) = _Fixnode;	// link down to left

  000c9	89 3e		 mov	 DWORD PTR [esi], edi

; 620  : 			else

  000cb	eb 03		 jmp	 SHORT $L120214
$L120213:

; 621  : 				_Right(_Fixnodeparent) = _Fixnode;	// link down to right

  000cd	89 7e 08	 mov	 DWORD PTR [esi+8], edi
$L120214:

; 622  : 
; 623  : 			if (_Lmost() == _Erasednode)

  000d0	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000d3	8b 03		 mov	 eax, DWORD PTR [ebx]
  000d5	3b 44 24 10	 cmp	 eax, DWORD PTR __Erasednode$[esp+100]
  000d9	75 16		 jne	 SHORT $L120215

; 624  : 				_Lmost() = _Isnil(_Fixnode)
; 625  : 					? _Fixnodeparent	// smallest is parent of erased node
; 626  : 					: _Min(_Fixnode);	// smallest in relinked subtree

  000db	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  000de	84 c0		 test	 al, al
  000e0	74 04		 je	 SHORT $L150962
  000e2	8b c6		 mov	 eax, esi
  000e4	eb 09		 jmp	 SHORT $L150963
$L150962:
  000e6	57		 push	 edi
  000e7	e8 00 00 00 00	 call	 ?_Min@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Min
  000ec	83 c4 04	 add	 esp, 4
$L150963:
  000ef	89 03		 mov	 DWORD PTR [ebx], eax
$L120215:

; 627  : 
; 628  : 			if (_Rmost() == _Erasednode)

  000f1	8b 5d 04	 mov	 ebx, DWORD PTR [ebp+4]
  000f4	8b 4c 24 10	 mov	 ecx, DWORD PTR __Erasednode$[esp+100]
  000f8	39 4b 08	 cmp	 DWORD PTR [ebx+8], ecx
  000fb	75 74		 jne	 SHORT $L151279

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  000fd	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  00100	84 c0		 test	 al, al
  00102	74 07		 je	 SHORT $L150964
  00104	8b c6		 mov	 eax, esi
  00106	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00109	eb 66		 jmp	 SHORT $L151279
$L150964:

; 629  : 				_Rmost() = _Isnil(_Fixnode)
; 630  : 					? _Fixnodeparent	// largest is parent of erased node
; 631  : 					: _Max(_Fixnode);	// largest in relinked subtree

  0010b	57		 push	 edi
  0010c	e8 00 00 00 00	 call	 ?_Max@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@KAPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@PAU342@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Max
  00111	83 c4 04	 add	 esp, 4
  00114	89 43 08	 mov	 DWORD PTR [ebx+8], eax

; 632  : 			}
; 633  : 		else

  00117	eb 58		 jmp	 SHORT $L151279
$L120209:

; 634  : 			{	// erased has two subtrees, _Pnode is successor to erased
; 635  : 			_Parent(_Left(_Erasednode)) = _Pnode;	// link left up

  00119	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 636  : 			_Left(_Pnode) = _Left(_Erasednode);	// link successor down

  0011c	8b 13		 mov	 edx, DWORD PTR [ebx]
  0011e	89 11		 mov	 DWORD PTR [ecx], edx

; 637  : 
; 638  : 			if (_Pnode == _Right(_Erasednode))

  00120	3b 4b 08	 cmp	 ecx, DWORD PTR [ebx+8]
  00123	75 04		 jne	 SHORT $L120218

; 639  : 				_Fixnodeparent = _Pnode;	// successor is next to erased

  00125	8b f1		 mov	 esi, ecx

; 640  : 			else

  00127	eb 1b		 jmp	 SHORT $L120219
$L120218:

; 641  : 				{	// successor further down, link in place of erased
; 642  : 				_Fixnodeparent = _Parent(_Pnode);	// parent is successor's
; 643  : 				if (!_Isnil(_Fixnode))

  00129	8a 47 15	 mov	 al, BYTE PTR [edi+21]
  0012c	84 c0		 test	 al, al
  0012e	8b 71 04	 mov	 esi, DWORD PTR [ecx+4]
  00131	75 03		 jne	 SHORT $L120220

; 644  : 					_Parent(_Fixnode) = _Fixnodeparent;	// link fix up

  00133	89 77 04	 mov	 DWORD PTR [edi+4], esi
$L120220:

; 645  : 				_Left(_Fixnodeparent) = _Fixnode;	// link fix down

  00136	89 3e		 mov	 DWORD PTR [esi], edi

; 646  : 				_Right(_Pnode) = _Right(_Erasednode);	// link successor down

  00138	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  0013b	89 41 08	 mov	 DWORD PTR [ecx+8], eax

; 647  : 				_Parent(_Right(_Erasednode)) = _Pnode;	// link right up

  0013e	8b 53 08	 mov	 edx, DWORD PTR [ebx+8]
  00141	89 4a 04	 mov	 DWORD PTR [edx+4], ecx
$L120219:

; 648  : 				}
; 649  : 
; 650  : 			if (_Root() == _Erasednode)

  00144	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00147	39 58 04	 cmp	 DWORD PTR [eax+4], ebx
  0014a	75 05		 jne	 SHORT $L120221

; 651  : 				_Root() = _Pnode;	// link down from root

  0014c	89 48 04	 mov	 DWORD PTR [eax+4], ecx

; 652  : 			else if (_Left(_Parent(_Erasednode)) == _Erasednode)

  0014f	eb 0e		 jmp	 SHORT $L120224
$L120221:
  00151	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00154	39 18		 cmp	 DWORD PTR [eax], ebx
  00156	75 04		 jne	 SHORT $L120223

; 653  : 				_Left(_Parent(_Erasednode)) = _Pnode;	// link down to left

  00158	89 08		 mov	 DWORD PTR [eax], ecx

; 654  : 			else

  0015a	eb 03		 jmp	 SHORT $L120224
$L120223:

; 655  : 				_Right(_Parent(_Erasednode)) = _Pnode;	// link down to right

  0015c	89 48 08	 mov	 DWORD PTR [eax+8], ecx
$L120224:

; 656  : 
; 657  : 			_Parent(_Pnode) = _Parent(_Erasednode);	// link successor up

  0015f	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00162	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 658  : 			std::swap(_Color(_Pnode), _Color(_Erasednode));	// recolor it

  00165	8a 53 14	 mov	 dl, BYTE PTR [ebx+20]
  00168	8a 41 14	 mov	 al, BYTE PTR [ecx+20]
  0016b	88 51 14	 mov	 BYTE PTR [ecx+20], dl
  0016e	88 43 14	 mov	 BYTE PTR [ebx+20], al
$L151279:

; 659  : 			}
; 660  : 
; 661  : 		if (_Color(_Erasednode) == _Black)

  00171	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00175	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00178	b3 01		 mov	 bl, 1
  0017a	3a cb		 cmp	 cl, bl
  0017c	0f 85 ff 00 00
	00		 jne	 $L120230

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00182	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  00185	3b 79 04	 cmp	 edi, DWORD PTR [ecx+4]
  00188	0f 84 f0 00 00
	00		 je	 $L120233
  0018e	8b ff		 npad	 2
$L120231:
  00190	38 5f 14	 cmp	 BYTE PTR [edi+20], bl
  00193	0f 85 e5 00 00
	00		 jne	 $L120233

; 665  : 				if (_Fixnode == _Left(_Fixnodeparent))

  00199	8b 06		 mov	 eax, DWORD PTR [esi]
  0019b	3b f8		 cmp	 edi, eax
  0019d	75 67		 jne	 SHORT $L120234

; 666  : 					{	// fixup left subtree
; 667  : 					_Pnode = _Right(_Fixnodeparent);

  0019f	8b 46 08	 mov	 eax, DWORD PTR [esi+8]

; 668  : 					if (_Color(_Pnode) == _Red)

  001a2	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  001a5	84 c9		 test	 cl, cl
  001a7	75 12		 jne	 SHORT $L120235

; 669  : 						{	// rotate red up from right subtree
; 670  : 						_Color(_Pnode) = _Black;

  001a9	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 671  : 						_Color(_Fixnodeparent) = _Red;
; 672  : 						_Lrotate(_Fixnodeparent);

  001ac	56		 push	 esi
  001ad	8b cd		 mov	 ecx, ebp
  001af	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  001b3	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Lrotate

; 673  : 						_Pnode = _Right(_Fixnodeparent);

  001b8	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L120235:

; 674  : 						}
; 675  : 
; 676  : 					if (_Isnil(_Pnode))

  001bb	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  001be	84 c9		 test	 cl, cl

; 677  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 678  : 					else if (_Color(_Left(_Pnode)) == _Black

  001c0	75 76		 jne	 SHORT $L151449

; 679  : 						&& _Color(_Right(_Pnode)) == _Black)

  001c2	8b 10		 mov	 edx, DWORD PTR [eax]
  001c4	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  001c7	75 08		 jne	 SHORT $L120238
  001c9	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001cc	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001cf	74 63		 je	 SHORT $L151450
$L120238:

; 680  : 						{	// redden right subtree with black children
; 681  : 						_Color(_Pnode) = _Red;
; 682  : 						_Fixnode = _Fixnodeparent;
; 683  : 						}
; 684  : 					else
; 685  : 						{	// must rearrange right subtree
; 686  : 						if (_Color(_Right(_Pnode)) == _Black)

  001d1	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  001d4	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  001d7	75 14		 jne	 SHORT $L120240

; 687  : 							{	// rotate red up from left sub-subtree
; 688  : 							_Color(_Left(_Pnode)) = _Black;

  001d9	8b 10		 mov	 edx, DWORD PTR [eax]
  001db	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 689  : 							_Color(_Pnode) = _Red;
; 690  : 							_Rrotate(_Pnode);

  001de	50		 push	 eax
  001df	8b cd		 mov	 ecx, ebp
  001e1	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  001e5	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Rrotate

; 691  : 							_Pnode = _Right(_Fixnodeparent);

  001ea	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
$L120240:

; 692  : 							}
; 693  : 
; 694  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  001ed	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  001f0	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 695  : 						_Color(_Fixnodeparent) = _Black;

  001f3	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 696  : 						_Color(_Right(_Pnode)) = _Black;

  001f6	8b 50 08	 mov	 edx, DWORD PTR [eax+8]

; 697  : 						_Lrotate(_Fixnodeparent);

  001f9	56		 push	 esi
  001fa	8b cd		 mov	 ecx, ebp
  001fc	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  001ff	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Lrotate

; 698  : 						break;	// tree now recolored/rebalanced

  00204	eb 78		 jmp	 SHORT $L120233
$L120234:

; 699  : 						}
; 700  : 					}
; 701  : 				else
; 702  : 					{	// fixup right subtree
; 703  : 					_Pnode = _Left(_Fixnodeparent);
; 704  : 					if (_Color(_Pnode) == _Red)

  00206	8a 48 14	 mov	 cl, BYTE PTR [eax+20]
  00209	84 c9		 test	 cl, cl
  0020b	75 11		 jne	 SHORT $L120242

; 705  : 						{	// rotate red up from left subtree
; 706  : 						_Color(_Pnode) = _Black;

  0020d	88 58 14	 mov	 BYTE PTR [eax+20], bl

; 707  : 						_Color(_Fixnodeparent) = _Red;
; 708  : 						_Rrotate(_Fixnodeparent);

  00210	56		 push	 esi
  00211	8b cd		 mov	 ecx, ebp
  00213	c6 46 14 00	 mov	 BYTE PTR [esi+20], 0
  00217	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Rrotate

; 709  : 						_Pnode = _Left(_Fixnodeparent);

  0021c	8b 06		 mov	 eax, DWORD PTR [esi]
$L120242:

; 710  : 						}
; 711  : 					if (_Isnil(_Pnode))

  0021e	8a 48 15	 mov	 cl, BYTE PTR [eax+21]
  00221	84 c9		 test	 cl, cl

; 712  : 						_Fixnode = _Fixnodeparent;	// shouldn't happen
; 713  : 					else if (_Color(_Right(_Pnode)) == _Black

  00223	75 13		 jne	 SHORT $L151449

; 714  : 						&& _Color(_Left(_Pnode)) == _Black)

  00225	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00228	38 5a 14	 cmp	 BYTE PTR [edx+20], bl
  0022b	75 20		 jne	 SHORT $L120245
  0022d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0022f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00232	75 19		 jne	 SHORT $L120245
$L151450:

; 715  : 						{	// redden left subtree with black children
; 716  : 						_Color(_Pnode) = _Red;

  00234	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
$L151449:

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  00238	8b 55 04	 mov	 edx, DWORD PTR [ebp+4]
  0023b	8b 42 04	 mov	 eax, DWORD PTR [edx+4]

; 717  : 						_Fixnode = _Fixnodeparent;

  0023e	8b fe		 mov	 edi, esi
  00240	3b f8		 cmp	 edi, eax
  00242	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  00245	0f 85 45 ff ff
	ff		 jne	 $L120231

; 662  : 			{	// erasing black link, must recolor/rebalance tree
; 663  : 			for (; _Fixnode != _Root() && _Color(_Fixnode) == _Black;
; 664  : 				_Fixnodeparent = _Parent(_Fixnode))

  0024b	eb 31		 jmp	 SHORT $L120233
$L120245:

; 718  : 						}
; 719  : 					else
; 720  : 						{	// must rearrange left subtree
; 721  : 						if (_Color(_Left(_Pnode)) == _Black)

  0024d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0024f	38 59 14	 cmp	 BYTE PTR [ecx+20], bl
  00252	75 14		 jne	 SHORT $L120247

; 722  : 							{	// rotate red up from right sub-subtree
; 723  : 							_Color(_Right(_Pnode)) = _Black;

  00254	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  00257	88 5a 14	 mov	 BYTE PTR [edx+20], bl

; 724  : 							_Color(_Pnode) = _Red;
; 725  : 							_Lrotate(_Pnode);

  0025a	50		 push	 eax
  0025b	8b cd		 mov	 ecx, ebp
  0025d	c6 40 14 00	 mov	 BYTE PTR [eax+20], 0
  00261	e8 00 00 00 00	 call	 ?_Lrotate@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Lrotate

; 726  : 							_Pnode = _Left(_Fixnodeparent);

  00266	8b 06		 mov	 eax, DWORD PTR [esi]
$L120247:

; 727  : 							}
; 728  : 
; 729  : 						_Color(_Pnode) = _Color(_Fixnodeparent);

  00268	8a 4e 14	 mov	 cl, BYTE PTR [esi+20]
  0026b	88 48 14	 mov	 BYTE PTR [eax+20], cl

; 730  : 						_Color(_Fixnodeparent) = _Black;

  0026e	88 5e 14	 mov	 BYTE PTR [esi+20], bl

; 731  : 						_Color(_Left(_Pnode)) = _Black;

  00271	8b 10		 mov	 edx, DWORD PTR [eax]

; 732  : 						_Rrotate(_Fixnodeparent);

  00273	56		 push	 esi
  00274	8b cd		 mov	 ecx, ebp
  00276	88 5a 14	 mov	 BYTE PTR [edx+20], bl
  00279	e8 00 00 00 00	 call	 ?_Rrotate@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Rrotate
$L120233:

; 733  : 						break;	// tree now recolored/rebalanced
; 734  : 						}
; 735  : 					}
; 736  : 
; 737  : 			_Color(_Fixnode) = _Black;	// ensure stopping node is black

  0027e	88 5f 14	 mov	 BYTE PTR [edi+20], bl
$L120230:

; 738  : 			}
; 739  : 
; 740  : 		this->_Alnod.destroy(_Erasednode);	// destroy, free erased node
; 741  : 		this->_Alnod.deallocate(_Erasednode, 1);

  00281	8b 44 24 10	 mov	 eax, DWORD PTR __Erasednode$[esp+100]
  00285	50		 push	 eax
  00286	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete

; 742  : 
; 743  : 		if (0 < _Mysize)

  0028b	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0028e	83 c4 04	 add	 esp, 4
  00291	85 c0		 test	 eax, eax
  00293	5f		 pop	 edi
  00294	5b		 pop	 ebx
  00295	76 04		 jbe	 SHORT $L120248

; 744  : 			--_Mysize;

  00297	48		 dec	 eax
  00298	89 45 08	 mov	 DWORD PTR [ebp+8], eax
$L120248:

; 745  : 
; 746  : 		return (_Where);	// return successor iterator

  0029b	8b 4c 24 64	 mov	 ecx, DWORD PTR __Where$[esp+88]
  0029f	8b 44 24 60	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+88]
  002a3	89 08		 mov	 DWORD PTR [eax], ecx

; 747  : 		}

  002a5	8b 4c 24 50	 mov	 ecx, DWORD PTR __$EHRec$[esp+92]
  002a9	5e		 pop	 esi
  002aa	5d		 pop	 ebp
  002ab	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  002b2	83 c4 54	 add	 esp, 84			; 00000054H
  002b5	c2 08 00	 ret	 8
$L151448:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L150966:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T150961[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T151443
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::erase
;	COMDAT xdata$x
xdata$x	SEGMENT
$T151557 DD	0ffffffffH
	DD	FLAT:$L151458
$T151555 DD	019930520H
	DD	01H
	DD	FLAT:$T151557
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC NEAR		; std::logic_error::logic_error, COMDAT
; _this$ = ecx
  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV01@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b 7c 24 1c	 mov	 edi, DWORD PTR ___that$[esp+20]
  0001c	8b f1		 mov	 esi, ecx
  0001e	57		 push	 edi
  0001f	89 74 24 0c	 mov	 DWORD PTR _this$[esp+28], esi
  00023	e8 00 00 00 00	 call	 ??0exception@@QAE@ABV0@@Z ; exception::exception
  00028	33 c0		 xor	 eax, eax
  0002a	6a ff		 push	 -1
  0002c	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00035	50		 push	 eax
  00036	83 c7 0c	 add	 edi, 12			; 0000000cH
  00039	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00040	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00043	57		 push	 edi
  00044	89 44 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], eax
  00048	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0004b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00050	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00054	5f		 pop	 edi
  00055	8b c6		 mov	 eax, esi
  00057	5e		 pop	 esi
  00058	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005f	83 c4 10	 add	 esp, 16			; 00000010H
  00062	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L151458:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T151555
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
; Function compile flags: /Ogty
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC NEAR		; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	?SendMW_PARTYJOIN_REQ@CTServer@@QAEXKKGKGPAUtagTCHARACTER@@E@Z ; CTServer::SendMW_PARTYJOIN_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T151618 DD	0ffffffffH
	DD	FLAT:$L151575
	DD	0ffffffffH
	DD	FLAT:$L151577
$T151616 DD	019930520H
	DD	02H
	DD	FLAT:$T151618
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_PARTYJOIN_REQ@CTServer@@QAEXKKGKGPAUtagTCHARACTER@@E@Z
_TEXT	SEGMENT
$T151576 = -24						; size = 4
_this$ = -20						; size = 4
$T151568 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wPartyID$ = 16						; size = 2
_dwChief$ = 20						; size = 4
_wCommanderID$ = 24					; size = 2
$T151572 = 28						; size = 4
_pNew$ = 28						; size = 4
_bObtainType$ = 32					; size = 1
?SendMW_PARTYJOIN_REQ@CTServer@@QAEXKKGKGPAUtagTCHARACTER@@E@Z PROC NEAR ; CTServer::SendMW_PARTYJOIN_REQ, COMDAT
; _this$ = ecx

; 662  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_PARTYJOIN_REQ@CTServer@@QAEXKKGKGPAUtagTCHARACTER@@E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	33 db		 xor	 ebx, ebx

; 663  : 	CPacket * pMsg = new CPacket();

  0001e	6a 1c		 push	 28			; 0000001cH
  00020	89 4c 24 18	 mov	 DWORD PTR _this$[esp+44], ecx
  00024	89 5c 24 14	 mov	 DWORD PTR $T151576[esp+44], ebx
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 44 24 18	 mov	 DWORD PTR $T151568[esp+40], eax
  00034	3b c3		 cmp	 eax, ebx
  00036	89 5c 24 24	 mov	 DWORD PTR __$EHRec$[esp+48], ebx
  0003a	74 0b		 je	 SHORT $L151569
  0003c	8b c8		 mov	 ecx, eax
  0003e	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00043	8b f8		 mov	 edi, eax
  00045	eb 02		 jmp	 SHORT $L151570
$L151569:
  00047	33 ff		 xor	 edi, edi
$L151570:

; 664  : 
; 665  : 	pMsg->SetID(MW_PARTYJOIN_REQ)
; 666  : 		<< dwID
; 667  : 		<< dwKey
; 668  : 		<< wPartyID
; 669  : 		<< pNew->m_strNAME
; 670  : 		<< pNew->m_dwCharID
; 671  : 		<< dwChief
; 672  : 		<< wCommanderID
; 673  : 		<< (pNew->m_pGuild ? pNew->m_pGuild->m_strName : NAME_NULL)
; 674  : 		<< pNew->m_bLevel
; 675  : 		<< pNew->m_dwMaxHP
; 676  : 		<< pNew->m_dwHP
; 677  : 		<< pNew->m_dwMaxMP
; 678  : 		<< pNew->m_dwMP
; 679  : 		<< pNew->m_bRace
; 680  : 		<< pNew->m_bSex
; 681  : 		<< pNew->m_bFace
; 682  : 		<< pNew->m_bHair
; 683  : 		<< bObtainType
; 684  : 		<< pNew->m_bClass;

  00049	8b 74 24 40	 mov	 esi, DWORD PTR _pNew$[esp+36]
  0004d	8b 86 9c 00 00
	00		 mov	 eax, DWORD PTR [esi+156]
  00053	83 cd ff	 or	 ebp, -1
  00056	3b c3		 cmp	 eax, ebx
  00058	89 6c 24 24	 mov	 DWORD PTR __$EHRec$[esp+48], ebp
  0005c	74 05		 je	 SHORT $L151573
  0005e	83 c0 04	 add	 eax, 4
  00061	eb 1b		 jmp	 SHORT $L151574
$L151573:
  00063	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00068	8d 4c 24 44	 lea	 ecx, DWORD PTR $T151572[esp+40]
  0006c	e8 00 00 00 00	 call	 ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
  00071	bb 01 00 00 00	 mov	 ebx, 1
  00076	89 5c 24 24	 mov	 DWORD PTR __$EHRec$[esp+48], ebx
  0007a	89 5c 24 10	 mov	 DWORD PTR $T151576[esp+40], ebx
$L151574:
  0007e	33 d2		 xor	 edx, edx
  00080	8a 96 cc 00 00
	00		 mov	 dl, BYTE PTR [esi+204]
  00086	8b 00		 mov	 eax, DWORD PTR [eax]
  00088	8b 4e 6c	 mov	 ecx, DWORD PTR [esi+108]
  0008b	52		 push	 edx
  0008c	8b 54 24 48	 mov	 edx, DWORD PTR _bObtainType$[esp+40]
  00090	52		 push	 edx
  00091	33 d2		 xor	 edx, edx
  00093	8a 96 d0 00 00
	00		 mov	 dl, BYTE PTR [esi+208]
  00099	52		 push	 edx
  0009a	33 d2		 xor	 edx, edx
  0009c	8a 96 cf 00 00
	00		 mov	 dl, BYTE PTR [esi+207]
  000a2	52		 push	 edx
  000a3	33 d2		 xor	 edx, edx
  000a5	8a 96 d1 00 00
	00		 mov	 dl, BYTE PTR [esi+209]
  000ab	52		 push	 edx
  000ac	33 d2		 xor	 edx, edx
  000ae	8a 96 ce 00 00
	00		 mov	 dl, BYTE PTR [esi+206]
  000b4	52		 push	 edx
  000b5	8b 96 b8 00 00
	00		 mov	 edx, DWORD PTR [esi+184]
  000bb	52		 push	 edx
  000bc	8b 96 b4 00 00
	00		 mov	 edx, DWORD PTR [esi+180]
  000c2	52		 push	 edx
  000c3	8b 96 b0 00 00
	00		 mov	 edx, DWORD PTR [esi+176]
  000c9	52		 push	 edx
  000ca	8b 96 ac 00 00
	00		 mov	 edx, DWORD PTR [esi+172]
  000d0	52		 push	 edx
  000d1	33 d2		 xor	 edx, edx
  000d3	8a 96 cd 00 00
	00		 mov	 dl, BYTE PTR [esi+205]
  000d9	52		 push	 edx
  000da	8b 54 24 64	 mov	 edx, DWORD PTR _dwChief$[esp+80]
  000de	50		 push	 eax
  000df	8b 44 24 6c	 mov	 eax, DWORD PTR _wCommanderID$[esp+84]
  000e3	50		 push	 eax
  000e4	8b 46 70	 mov	 eax, DWORD PTR [esi+112]
  000e7	52		 push	 edx
  000e8	8b 54 24 68	 mov	 edx, DWORD PTR _dwKey$[esp+92]
  000ec	50		 push	 eax
  000ed	8b 44 24 68	 mov	 eax, DWORD PTR _dwID$[esp+96]
  000f1	51		 push	 ecx
  000f2	8b 4c 24 74	 mov	 ecx, DWORD PTR _wPartyID$[esp+100]
  000f6	51		 push	 ecx
  000f7	52		 push	 edx
  000f8	50		 push	 eax
  000f9	68 20 20 00 00	 push	 8224			; 00002020H
  000fe	8b cf		 mov	 ecx, edi
  00100	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00105	8b c8		 mov	 ecx, eax
  00107	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0010c	8b c8		 mov	 ecx, eax
  0010e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00113	8b c8		 mov	 ecx, eax
  00115	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0011a	8b c8		 mov	 ecx, eax
  0011c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00121	8b c8		 mov	 ecx, eax
  00123	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00128	8b c8		 mov	 ecx, eax
  0012a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0012f	8b c8		 mov	 ecx, eax
  00131	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00136	8b c8		 mov	 ecx, eax
  00138	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0013d	8b c8		 mov	 ecx, eax
  0013f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00144	8b c8		 mov	 ecx, eax
  00146	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0014b	8b c8		 mov	 ecx, eax
  0014d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00152	8b c8		 mov	 ecx, eax
  00154	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00159	8b c8		 mov	 ecx, eax
  0015b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00160	8b c8		 mov	 ecx, eax
  00162	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00167	8b c8		 mov	 ecx, eax
  00169	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0016e	8b c8		 mov	 ecx, eax
  00170	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00175	8b c8		 mov	 ecx, eax
  00177	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0017c	8b c8		 mov	 ecx, eax
  0017e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00183	8b c8		 mov	 ecx, eax
  00185	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0018a	f6 c3 01	 test	 bl, 1
  0018d	89 6c 24 24	 mov	 DWORD PTR __$EHRec$[esp+48], ebp
  00191	74 1b		 je	 SHORT $L151611
  00193	8b 44 24 40	 mov	 eax, DWORD PTR $T151572[esp+36]
  00197	83 c0 f0	 add	 eax, -16		; fffffff0H
  0019a	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0019d	f0 0f c1 29	 lock	  xadd	 DWORD PTR [ecx], ebp
  001a1	4d		 dec	 ebp
  001a2	85 ed		 test	 ebp, ebp
  001a4	7f 08		 jg	 SHORT $L151611
  001a6	8b 08		 mov	 ecx, DWORD PTR [eax]
  001a8	8b 11		 mov	 edx, DWORD PTR [ecx]
  001aa	50		 push	 eax
  001ab	ff 52 04	 call	 DWORD PTR [edx+4]
$L151611:

; 685  : 
; 686  : 	Say(pMsg);

  001ae	8b 4c 24 14	 mov	 ecx, DWORD PTR _this$[esp+40]
  001b2	8b 01		 mov	 eax, DWORD PTR [ecx]
  001b4	57		 push	 edi
  001b5	ff 10		 call	 DWORD PTR [eax]

; 687  : }

  001b7	8b 4c 24 1c	 mov	 ecx, DWORD PTR __$EHRec$[esp+40]
  001bb	5f		 pop	 edi
  001bc	5e		 pop	 esi
  001bd	5d		 pop	 ebp
  001be	5b		 pop	 ebx
  001bf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001c6	83 c4 18	 add	 esp, 24			; 00000018H
  001c9	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L151575:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T151568[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
$L151577:
  0000b	8b 45 e8	 mov	 eax, DWORD PTR $T151576[ebp]
  0000e	83 e0 01	 and	 eax, 1
  00011	0f 84 0c 00 00
	00		 je	 $L151578
  00017	83 65 e8 fe	 and	 DWORD PTR $T151576[ebp], -2 ; fffffffeH
  0001b	8d 4d 18	 lea	 ecx, DWORD PTR $T151572[ebp-4]
  0001e	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L151578:
  00023	c3		 ret	 0
__ehhandler$?SendMW_PARTYJOIN_REQ@CTServer@@QAEXKKGKGPAUtagTCHARACTER@@E@Z:
  00024	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T151616
  00029	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_PARTYJOIN_REQ@CTServer@@QAEXKKGKGPAUtagTCHARACTER@@E@Z ENDP ; CTServer::SendMW_PARTYJOIN_REQ
PUBLIC	?_Xran@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@IBEXXZ ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::_Xran
PUBLIC	??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ ; `string'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	SEGMENT
$T151740 DD	0ffffffffH
	DD	FLAT:$L151626
$T151737 DD	019930520H
	DD	01H
	DD	FLAT:$T151740
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
CONST	SEGMENT
??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ DB 'invalid v'
	DB	'ector<T> subscript', 00H			; `string'
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
CONST	ENDS
;	COMDAT ?_Xran@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T151625 = -80						; size = 28
$T151624 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xran@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@IBEXXZ PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::_Xran, COMDAT
; _this$ = ecx

; 888  : 		{	// report an out_of_range error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xran@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 889  : 		_THROW(out_of_range, "invalid vector<T> subscript");

  00018	6a 1b		 push	 27			; 0000001bH
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T151625[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T151625[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T151625[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T151625[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T151625[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T151624[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T151624[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T151624[esp+88], OFFSET FLAT:??_7out_of_range@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L151741:
$L151739:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L151626:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T151625[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xran@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T151737
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xran@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@IBEXXZ ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::_Xran
PUBLIC	__TI3?AVlength_error@std@@
PUBLIC	__CTA3?AVlength_error@std@@
PUBLIC	??_R0?AVlength_error@std@@@8			; std::length_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ ; `string'
PUBLIC	??0length_error@std@@QAE@ABV01@@Z		; std::length_error::length_error
PUBLIC	?_Xlen@?$vector@_JV?$allocator@_J@std@@@std@@IBEXXZ ; std::vector<__int64,std::allocator<__int64> >::_Xlen
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	SEGMENT
$T151863 DD	0ffffffffH
	DD	FLAT:$L151749
$T151860 DD	019930520H
	DD	01H
	DD	FLAT:$T151863
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@ DB 'vector<T> too long'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT __TI3?AVlength_error@std@@
xdata$x	SEGMENT
__TI3?AVlength_error@std@@ DD 00H
	DD	FLAT:??1length_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVlength_error@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVlength_error@std@@
xdata$x	SEGMENT
__CTA3?AVlength_error@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlength_error@std@@@8??0length_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlength_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0length_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlength_error@std@@@8
_DATA	SEGMENT
??_R0?AVlength_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::length_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlength_error@std@@', 00H
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
_DATA	ENDS
;	COMDAT ?_Xlen@?$vector@_JV?$allocator@_J@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T151748 = -80						; size = 28
$T151747 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xlen@?$vector@_JV?$allocator@_J@std@@@std@@IBEXXZ PROC NEAR ; std::vector<__int64,std::allocator<__int64> >::_Xlen, COMDAT
; _this$ = ecx

; 883  : 		{	// report a length_error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xlen@?$vector@_JV?$allocator@_J@std@@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 884  : 		_THROW(length_error, "vector<T> too long");

  00018	6a 12		 push	 18			; 00000012H
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T151748[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T151748[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T151748[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T151748[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T151748[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T151747[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVlength_error@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T151747[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T151747[esp+88], OFFSET FLAT:??_7length_error@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L151864:
$L151862:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L151749:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T151748[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xlen@?$vector@_JV?$allocator@_J@std@@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T151860
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xlen@?$vector@_JV?$allocator@_J@std@@@std@@IBEXXZ ENDP ; std::vector<__int64,std::allocator<__int64> >::_Xlen
; Function compile flags: /Ogty
;	COMDAT ??0length_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0length_error@std@@QAE@ABV01@@Z PROC NEAR		; std::length_error::length_error, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7length_error@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0length_error@std@@QAE@ABV01@@Z ENDP			; std::length_error::length_error
_TEXT	ENDS
PUBLIC	?erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::erase
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
$T151877 = 12						; size = 4
__First$ = 12						; size = 4
__Last$ = 16						; size = 4
?erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::erase, COMDAT
; _this$ = ecx

; 750  : 		{	// erase [_First, _Last)

  00000	53		 push	 ebx

; 751  : 		if (_First == begin() && _Last == end())

  00001	8b 5c 24 10	 mov	 ebx, DWORD PTR __Last$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR __First$[esp+4]
  0000a	57		 push	 edi
  0000b	8b f9		 mov	 edi, ecx
  0000d	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00010	3b 30		 cmp	 esi, DWORD PTR [eax]
  00012	75 38		 jne	 SHORT $L152209
  00014	3b d8		 cmp	 ebx, eax
  00016	75 34		 jne	 SHORT $L152209

; 752  : 			{	// erase all
; 753  : 			clear();

  00018	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0001b	50		 push	 eax
  0001c	8b cf		 mov	 ecx, edi
  0001e	e8 00 00 00 00	 call	 ?_Erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXPAU_Node@?$_Tree_nod@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@2@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Erase
  00023	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00026	89 40 04	 mov	 DWORD PTR [eax+4], eax
  00029	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  0002c	c7 47 08 00 00
	00 00		 mov	 DWORD PTR [edi+8], 0
  00033	89 00		 mov	 DWORD PTR [eax], eax
  00035	8b 47 04	 mov	 eax, DWORD PTR [edi+4]
  00038	89 40 08	 mov	 DWORD PTR [eax+8], eax

; 754  : 			return (begin());

  0003b	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0003e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00040	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  00044	5f		 pop	 edi
  00045	5e		 pop	 esi
  00046	89 10		 mov	 DWORD PTR [eax], edx
  00048	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  00049	c2 0c 00	 ret	 12			; 0000000cH
$L152209:

; 755  : 			}
; 756  : 		else
; 757  : 			{	// partial erase, one at a time
; 758  : 			while (_First != _Last)

  0004c	3b f3		 cmp	 esi, ebx
  0004e	74 5b		 je	 SHORT $L119156
$L119155:

; 759  : 				erase(_First++);

  00050	8a 46 15	 mov	 al, BYTE PTR [esi+21]
  00053	84 c0		 test	 al, al
  00055	8b ce		 mov	 ecx, esi
  00057	75 41		 jne	 SHORT $L152203
  00059	8b 46 08	 mov	 eax, DWORD PTR [esi+8]
  0005c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0005f	84 d2		 test	 dl, dl
  00061	75 1a		 jne	 SHORT $L152211
  00063	8b f0		 mov	 esi, eax
  00065	8b 06		 mov	 eax, DWORD PTR [esi]
  00067	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0006a	84 d2		 test	 dl, dl
  0006c	75 2c		 jne	 SHORT $L152203
  0006e	8b ff		 npad	 2
$L152184:
  00070	8b f0		 mov	 esi, eax
  00072	8b 06		 mov	 eax, DWORD PTR [esi]
  00074	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00077	84 d2		 test	 dl, dl
  00079	74 f5		 je	 SHORT $L152184
  0007b	eb 1d		 jmp	 SHORT $L152203
$L152211:
  0007d	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00080	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00083	84 d2		 test	 dl, dl
  00085	75 11		 jne	 SHORT $L152206
$L152205:
  00087	3b 70 08	 cmp	 esi, DWORD PTR [eax+8]
  0008a	75 0c		 jne	 SHORT $L152206
  0008c	8b f0		 mov	 esi, eax
  0008e	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  00091	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  00094	84 d2		 test	 dl, dl
  00096	74 ef		 je	 SHORT $L152205
$L152206:
  00098	8b f0		 mov	 esi, eax
$L152203:
  0009a	51		 push	 ecx
  0009b	8d 44 24 18	 lea	 eax, DWORD PTR $T151877[esp+12]
  0009f	50		 push	 eax
  000a0	8b cf		 mov	 ecx, edi
  000a2	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::erase
  000a7	3b f3		 cmp	 esi, ebx
  000a9	75 a5		 jne	 SHORT $L119155
$L119156:

; 760  : 			return (_First);

  000ab	8b 44 24 10	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp+8]
  000af	5f		 pop	 edi
  000b0	89 30		 mov	 DWORD PTR [eax], esi
  000b2	5e		 pop	 esi
  000b3	5b		 pop	 ebx

; 761  : 			}
; 762  : 		}

  000b4	c2 0c 00	 ret	 12			; 0000000cH
?erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::erase
_TEXT	ENDS
PUBLIC	?at@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAUtagTCASHITMSALE@@I@Z ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::at
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?at@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAUtagTCASHITMSALE@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
?at@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAUtagTCASHITMSALE@@I@Z PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::at, COMDAT
; _this$ = ecx

; 543  : 		if (size() <= _Pos)

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	56		 push	 esi
  00006	74 10		 je	 SHORT $L152260
  00008	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000b	8b 74 24 08	 mov	 esi, DWORD PTR __Pos$[esp]
  0000f	2b c2		 sub	 eax, edx
  00011	c1 f8 02	 sar	 eax, 2
  00014	3b c6		 cmp	 eax, esi
  00016	77 05		 ja	 SHORT $L128450
$L152260:

; 544  : 			_Xran();

  00018	e8 00 00 00 00	 call	 ?_Xran@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@IBEXXZ ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::_Xran
$L152262:
$L128450:

; 545  : 		return (*(begin() + _Pos));

  0001d	8d 04 b2	 lea	 eax, DWORD PTR [edx+esi*4]
  00020	5e		 pop	 esi

; 546  : 		}

  00021	c2 04 00	 ret	 4
$L152261:
?at@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAUtagTCASHITMSALE@@I@Z ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::at
_TEXT	ENDS
PUBLIC	?_Buy@?$vector@_JV?$allocator@_J@std@@@std@@IAE_NI@Z ; std::vector<__int64,std::allocator<__int64> >::_Buy
; Function compile flags: /Ogty
;	COMDAT ?_Buy@?$vector@_JV?$allocator@_J@std@@@std@@IAE_NI@Z
_TEXT	SEGMENT
__Capacity$ = 8						; size = 4
?_Buy@?$vector@_JV?$allocator@_J@std@@@std@@IAE_NI@Z PROC NEAR ; std::vector<__int64,std::allocator<__int64> >::_Buy, COMDAT
; _this$ = ecx

; 771  : 		_Myfirst = 0, _Mylast = 0, _Myend = 0;
; 772  : 		if (_Capacity == 0)

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Capacity$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	33 c9		 xor	 ecx, ecx
  00009	3b c1		 cmp	 eax, ecx
  0000b	89 4e 04	 mov	 DWORD PTR [esi+4], ecx
  0000e	89 4e 08	 mov	 DWORD PTR [esi+8], ecx
  00011	89 4e 0c	 mov	 DWORD PTR [esi+12], ecx
  00014	75 06		 jne	 SHORT $L129554

; 773  : 			return (false);

  00016	32 c0		 xor	 al, al
  00018	5e		 pop	 esi

; 783  : 		}

  00019	c2 04 00	 ret	 4
$L129554:

; 774  : 		else if (max_size() < _Capacity)

  0001c	3d ff ff ff 1f	 cmp	 eax, 536870911		; 1fffffffH
  00021	76 07		 jbe	 SHORT $L129556

; 775  : 			_Xlen();	// result too long

  00023	8b ce		 mov	 ecx, esi
  00025	e8 00 00 00 00	 call	 ?_Xlen@?$vector@_JV?$allocator@_J@std@@@std@@IBEXXZ ; std::vector<__int64,std::allocator<__int64> >::_Xlen
$L152291:
$L129556:
  0002a	57		 push	 edi

; 776  : 		else
; 777  : 			{	// nonempty array, allocate storage
; 778  : 			_Myfirst = this->_Alval.allocate(_Capacity);

  0002b	8d 3c c5 00 00
	00 00		 lea	 edi, DWORD PTR [eax*8]
  00032	57		 push	 edi
  00033	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 779  : 			_Mylast = _Myfirst;
; 780  : 			_Myend = _Myfirst + _Capacity;

  00038	03 f8		 add	 edi, eax
  0003a	83 c4 04	 add	 esp, 4
  0003d	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  00040	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00043	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00046	5f		 pop	 edi

; 781  : 			}
; 782  : 		return (true);

  00047	b0 01		 mov	 al, 1
  00049	5e		 pop	 esi

; 783  : 		}

  0004a	c2 04 00	 ret	 4
$L152290:
?_Buy@?$vector@_JV?$allocator@_J@std@@@std@@IAE_NI@Z ENDP ; std::vector<__int64,std::allocator<__int64> >::_Buy
_TEXT	ENDS
PUBLIC	?_Tidy@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ?_Tidy@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXXZ
_TEXT	SEGMENT
$T152297 = -4						; size = 4
?_Tidy@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXXZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Tidy, COMDAT
; _this$ = ecx

; 1142 : 		{	// free all storage

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 1143 : 		erase(begin(), end());

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T152297[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::erase

; 1144 : 		this->_Alptr.destroy(&_Left(_Myhead));
; 1145 : 		this->_Alptr.destroy(&_Parent(_Myhead));
; 1146 : 		this->_Alptr.destroy(&_Right(_Myhead));
; 1147 : 		this->_Alnod.deallocate(_Myhead, 1);

  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4

; 1148 : 		_Myhead = 0, _Mysize = 0;

  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 1149 : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
?_Tidy@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@IAEXXZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::_Tidy
_TEXT	ENDS
PUBLIC	?SendMW_CASHITEMSALE_REQ@CTServer@@QAEXKGPAV?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@@Z ; CTServer::SendMW_CASHITEMSALE_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	SEGMENT
$T152528 DD	0ffffffffH
	DD	FLAT:$L152364
$T152519 DD	019930520H
	DD	01H
	DD	FLAT:$T152528
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CASHITEMSALE_REQ@CTServer@@QAEXKGPAV?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@@Z
_TEXT	SEGMENT
$T152361 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwIndex$ = 8						; size = 4
_wValue$ = 12						; size = 2
_pvSaleItem$ = 16					; size = 4
?SendMW_CASHITEMSALE_REQ@CTServer@@QAEXKGPAV?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@@Z PROC NEAR ; CTServer::SendMW_CASHITEMSALE_REQ, COMDAT
; _this$ = ecx

; 3044 : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CASHITEMSALE_REQ@CTServer@@QAEXKGPAV?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi

; 3045 : 	CPacket* pMSG = new CPacket();

  0001a	6a 1c		 push	 28			; 0000001cH
  0001c	8b d9		 mov	 ebx, ecx
  0001e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00023	83 c4 04	 add	 esp, 4
  00026	89 44 24 10	 mov	 DWORD PTR $T152361[esp+32], eax
  0002a	33 f6		 xor	 esi, esi
  0002c	3b c6		 cmp	 eax, esi
  0002e	89 74 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], esi
  00032	74 0b		 je	 SHORT $L152362
  00034	8b c8		 mov	 ecx, eax
  00036	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003b	8b e8		 mov	 ebp, eax
  0003d	eb 02		 jmp	 SHORT $L152363
$L152362:
  0003f	33 ed		 xor	 ebp, ebp
$L152363:

; 3046 : 	pMSG->SetID(MW_CASHITEMSALE_REQ)
; 3047 : 		<< dwIndex
; 3048 : 		<< wValue
; 3049 :         << (WORD)pvSaleItem->size();

  00041	8b 7c 24 2c	 mov	 edi, DWORD PTR _pvSaleItem$[esp+28]
  00045	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00048	3b ce		 cmp	 ecx, esi
  0004a	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  00052	75 04		 jne	 SHORT $L152370
  00054	33 c0		 xor	 eax, eax
  00056	eb 08		 jmp	 SHORT $L152371
$L152370:
  00058	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0005b	2b c1		 sub	 eax, ecx
  0005d	c1 f8 02	 sar	 eax, 2
$L152371:
  00060	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwIndex$[esp+28]
  00064	50		 push	 eax
  00065	8b 44 24 2c	 mov	 eax, DWORD PTR _wValue$[esp+32]
  00069	50		 push	 eax
  0006a	51		 push	 ecx
  0006b	68 33 21 00 00	 push	 8499			; 00002133H
  00070	8b cd		 mov	 ecx, ebp
  00072	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0008c	8d 64 24 00	 npad	 4
$L127405:

; 3050 : 
; 3051 : 	for(WORD i = 0; i < (WORD)pvSaleItem->size(); i++)

  00090	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  00093	85 d2		 test	 edx, edx
  00095	74 38		 je	 SHORT $L127407
  00097	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0009a	2b c2		 sub	 eax, edx
  0009c	c1 f8 02	 sar	 eax, 2
  0009f	66 3b f0	 cmp	 si, ax
  000a2	73 2b		 jae	 SHORT $L127407

; 3052 : 	{
; 3053 : 		(*pMSG)
; 3054 : 			<< pvSaleItem->at(i).m_wID
; 3055 : 			<< pvSaleItem->at(i).m_bSaleValue;		

  000a4	0f b7 ce	 movzx	 ecx, si
  000a7	3b c1		 cmp	 eax, ecx
  000a9	76 1d		 jbe	 SHORT $L152521
  000ab	33 c0		 xor	 eax, eax
  000ad	8a 44 8a 02	 mov	 al, BYTE PTR [edx+ecx*4+2]
  000b1	0f b7 0c 8a	 movzx	 ecx, WORD PTR [edx+ecx*4]
  000b5	50		 push	 eax
  000b6	51		 push	 ecx
  000b7	8b cd		 mov	 ecx, ebp
  000b9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000be	8b c8		 mov	 ecx, eax
  000c0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c5	46		 inc	 esi
  000c6	eb c8		 jmp	 SHORT $L127405
$L152521:
  000c8	8b cf		 mov	 ecx, edi
  000ca	e8 00 00 00 00	 call	 ?_Xran@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@IBEXXZ ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::_Xran
$L152529:
$L127407:

; 3056 : 	}
; 3057 : 	
; 3058 : 	Say(pMSG);

  000cf	8b 13		 mov	 edx, DWORD PTR [ebx]
  000d1	55		 push	 ebp
  000d2	8b cb		 mov	 ecx, ebx
  000d4	ff 12		 call	 DWORD PTR [edx]

; 3059 : }

  000d6	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5d		 pop	 ebp
  000dd	5b		 pop	 ebx
  000de	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000e5	83 c4 10	 add	 esp, 16			; 00000010H
  000e8	c2 0c 00	 ret	 12			; 0000000cH
$L152527:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L152364:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T152361[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendMW_CASHITEMSALE_REQ@CTServer@@QAEXKGPAV?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T152519
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CASHITEMSALE_REQ@CTServer@@QAEXKGPAV?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@@Z ENDP ; CTServer::SendMW_CASHITEMSALE_REQ
PUBLIC	??0?$vector@_JV?$allocator@_J@std@@@std@@QAE@ABV01@@Z ; std::vector<__int64,std::allocator<__int64> >::vector<__int64,std::allocator<__int64> >
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xutility
xdata$x	SEGMENT
$T152653 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
$T152655 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L152539
$T152654 DD	00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:$T152655
$T152649 DD	019930520H
	DD	02H
	DD	FLAT:$T152653
	DD	01H
	DD	FLAT:$T152654
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
xdata$x	ENDS
;	COMDAT ??0?$vector@_JV?$allocator@_J@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Cat$152642 = 8					; size = 1
__Right$ = 8						; size = 4
??0?$vector@_JV?$allocator@_J@std@@@std@@QAE@ABV01@@Z PROC NEAR ; std::vector<__int64,std::allocator<__int64> >::vector<__int64,std::allocator<__int64> >, COMDAT
; _this$ = ecx

; 329  : 		{	// construct by copying _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$vector@_JV?$allocator@_J@std@@@std@@QAE@ABV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 08	 sub	 esp, 8
  0001b	53		 push	 ebx

; 330  : 		if (_Buy(_Right.size()))

  0001c	8b 5d 08	 mov	 ebx, DWORD PTR __Right$[ebp]
  0001f	56		 push	 esi
  00020	8b f1		 mov	 esi, ecx
  00022	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  00025	33 d2		 xor	 edx, edx
  00027	3b ca		 cmp	 ecx, edx
  00029	57		 push	 edi
  0002a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002d	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00030	75 04		 jne	 SHORT $L152557
  00032	33 c0		 xor	 eax, eax
  00034	eb 08		 jmp	 SHORT $L152558
$L152557:
  00036	8b 43 08	 mov	 eax, DWORD PTR [ebx+8]
  00039	2b c1		 sub	 eax, ecx
  0003b	c1 f8 03	 sar	 eax, 3
$L152558:
  0003e	3b c2		 cmp	 eax, edx
  00040	89 56 04	 mov	 DWORD PTR [esi+4], edx
  00043	89 56 08	 mov	 DWORD PTR [esi+8], edx
  00046	89 56 0c	 mov	 DWORD PTR [esi+12], edx
  00049	74 46		 je	 SHORT $L128706
  0004b	3d ff ff ff 1f	 cmp	 eax, 536870911		; 1fffffffH
  00050	76 07		 jbe	 SHORT $L152591
  00052	8b ce		 mov	 ecx, esi
  00054	e8 00 00 00 00	 call	 ?_Xlen@?$vector@_JV?$allocator@_J@std@@@std@@IBEXXZ ; std::vector<__int64,std::allocator<__int64> >::_Xlen
$L152656:
$L152591:
  00059	8d 3c c5 00 00
	00 00		 lea	 edi, DWORD PTR [eax*8]
  00060	57		 push	 edi
  00061	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new

; 331  : 			_TRY_BEGIN
; 332  : 			_Mylast = _Ucopy(_Right.begin(), _Right.end(), _Myfirst);

  00066	8b 55 08	 mov	 edx, DWORD PTR __Cat$152642[ebp]
  00069	52		 push	 edx
  0006a	03 f8		 add	 edi, eax
  0006c	56		 push	 esi
  0006d	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00070	89 46 08	 mov	 DWORD PTR [esi+8], eax
  00073	89 7e 0c	 mov	 DWORD PTR [esi+12], edi
  00076	8b 4b 08	 mov	 ecx, DWORD PTR [ebx+8]
  00079	8b 5b 04	 mov	 ebx, DWORD PTR [ebx+4]
  0007c	50		 push	 eax
  0007d	51		 push	 ecx
  0007e	53		 push	 ebx
  0007f	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00086	e8 00 00 00 00	 call	 ??$_Uninit_copy@Vconst_iterator@?$vector@_JV?$allocator@_J@std@@@std@@PA_JV?$allocator@_J@3@@std@@YAPA_JVconst_iterator@?$vector@_JV?$allocator@_J@std@@@0@0PA_JAAV?$allocator@_J@0@U_Nonscalar_ptr_iterator_tag@0@@Z ; std::_Uninit_copy<std::vector<__int64,std::allocator<__int64> >::const_iterator,__int64 *,std::allocator<__int64> >
  0008b	83 c4 18	 add	 esp, 24			; 00000018H
  0008e	89 46 08	 mov	 DWORD PTR [esi+8], eax
$L128706:

; 336  : 			_CATCH_END
; 337  : 		}

  00091	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  00094	5f		 pop	 edi
  00095	8b c6		 mov	 eax, esi
  00097	5e		 pop	 esi
  00098	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0009f	5b		 pop	 ebx
  000a0	8b e5		 mov	 esp, ebp
  000a2	5d		 pop	 ebp
  000a3	c2 04 00	 ret	 4
$L152539:

; 333  : 			_CATCH_ALL
; 334  : 			_Tidy();

  000a6	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000a9	e8 00 00 00 00	 call	 ?_Tidy@?$vector@_JV?$allocator@_J@std@@@std@@IAEXXZ ; std::vector<__int64,std::allocator<__int64> >::_Tidy

; 335  : 			_RERAISE;

  000ae	6a 00		 push	 0
  000b0	6a 00		 push	 0
  000b2	e8 00 00 00 00	 call	 __CxxThrowException@8
$L152657:
$L152652:
  000b7	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@_JV?$allocator@_J@std@@@std@@QAE@ABV01@@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T152649
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0?$vector@_JV?$allocator@_J@std@@@std@@QAE@ABV01@@Z ENDP ; std::vector<__int64,std::allocator<__int64> >::vector<__int64,std::allocator<__int64> >
PUBLIC	??1?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@XZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::~_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xtree
;	COMDAT ??1?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T152728 = -4						; size = 4
??1?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@XZ PROC NEAR ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::~_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >, COMDAT
; _this$ = ecx

; 391  : 		{	// destroy tree

  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx

; 392  : 		_Tidy();

  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T152728[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi

; 393  : 		}

  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE@XZ ENDP ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::~_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >
_TEXT	ENDS
PUBLIC	??0tagTRPSGAME@@QAE@ABU0@@Z			; tagTRPSGAME::tagTRPSGAME
; Function compile flags: /Ogty
;	COMDAT ??0tagTRPSGAME@@QAE@ABU0@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0tagTRPSGAME@@QAE@ABU0@@Z PROC NEAR			; tagTRPSGAME::tagTRPSGAME, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8a 08		 mov	 cl, BYTE PTR [eax]
  00009	88 0e		 mov	 BYTE PTR [esi], cl
  0000b	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  0000e	88 56 01	 mov	 BYTE PTR [esi+1], dl
  00011	8d 48 02	 lea	 ecx, DWORD PTR [eax+2]
  00014	57		 push	 edi
  00015	66 8b 39	 mov	 di, WORD PTR [ecx]
  00018	8d 56 02	 lea	 edx, DWORD PTR [esi+2]
  0001b	66 89 3a	 mov	 WORD PTR [edx], di
  0001e	8a 49 02	 mov	 cl, BYTE PTR [ecx+2]
  00021	88 4a 02	 mov	 BYTE PTR [edx+2], cl
  00024	66 8b 50 06	 mov	 dx, WORD PTR [eax+6]
  00028	66 89 56 06	 mov	 WORD PTR [esi+6], dx
  0002c	66 8b 48 08	 mov	 cx, WORD PTR [eax+8]
  00030	83 c0 0c	 add	 eax, 12			; 0000000cH
  00033	66 89 4e 08	 mov	 WORD PTR [esi+8], cx
  00037	50		 push	 eax
  00038	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0003b	e8 00 00 00 00	 call	 ??0?$vector@_JV?$allocator@_J@std@@@std@@QAE@ABV01@@Z ; std::vector<__int64,std::allocator<__int64> >::vector<__int64,std::allocator<__int64> >
  00040	5f		 pop	 edi
  00041	8b c6		 mov	 eax, esi
  00043	5e		 pop	 esi
  00044	c2 04 00	 ret	 4
??0tagTRPSGAME@@QAE@ABU0@@Z ENDP			; tagTRPSGAME::tagTRPSGAME
_TEXT	ENDS
PUBLIC	??1?$map@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@@std@@QAE@XZ ; std::map<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> > >::~map<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> > >
; Function compile flags: /Ogty
;	COMDAT ??1?$map@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@@std@@QAE@XZ
_TEXT	SEGMENT
$T152860 = -4						; size = 4
??1?$map@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@@std@@QAE@XZ PROC NEAR ; std::map<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> > >::~map<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> > >, COMDAT
; _this$ = ecx
  00000	51		 push	 ecx
  00001	56		 push	 esi
  00002	8b f1		 mov	 esi, ecx
  00004	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  00007	8b 08		 mov	 ecx, DWORD PTR [eax]
  00009	50		 push	 eax
  0000a	51		 push	 ecx
  0000b	8d 44 24 0c	 lea	 eax, DWORD PTR $T152860[esp+16]
  0000f	50		 push	 eax
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::erase
  00017	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0001a	51		 push	 ecx
  0001b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00020	83 c4 04	 add	 esp, 4
  00023	33 c0		 xor	 eax, eax
  00025	89 46 04	 mov	 DWORD PTR [esi+4], eax
  00028	89 46 08	 mov	 DWORD PTR [esi+8], eax
  0002b	5e		 pop	 esi
  0002c	59		 pop	 ecx
  0002d	c3		 ret	 0
??1?$map@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@@std@@QAE@XZ ENDP ; std::map<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> > >::~map<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> > >
_TEXT	ENDS
PUBLIC	?SendCT_RPSGAMEDATA_ACK@CTServer@@QAEXEEPAV?$map@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@@std@@@Z ; CTServer::SendCT_RPSGAMEDATA_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T153036 DD	0ffffffffH
	DD	FLAT:$L152897
	DD	0ffffffffH
	DD	FLAT:$L152898
$T153031 DD	019930520H
	DD	02H
	DD	FLAT:$T153036
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendCT_RPSGAMEDATA_ACK@CTServer@@QAEXEEPAV?$map@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@@std@@@Z
_TEXT	SEGMENT
_this$ = -52						; size = 4
$T152891 = -48						; size = 4
_rps$122996 = -44					; size = 28
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
__$ReturnAddr$ = 4					; size = 4
_bChange$ = 8						; size = 1
_bGroup$ = 12						; size = 1
_it$ = 16						; size = 4
_pRPS$ = 16						; size = 4
?SendCT_RPSGAMEDATA_ACK@CTServer@@QAEXEEPAV?$map@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@@std@@@Z PROC NEAR ; CTServer::SendCT_RPSGAMEDATA_ACK, COMDAT
; _this$ = ecx

; 73   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCT_RPSGAMEDATA_ACK@CTServer@@QAEXEEPAV?$map@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 28	 sub	 esp, 40			; 00000028H
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	55		 push	 ebp
  0001e	56		 push	 esi
  0001f	57		 push	 edi

; 74   : 	CPacket *pMSG = new CPacket();

  00020	6a 1c		 push	 28			; 0000001cH
  00022	89 44 24 34	 mov	 DWORD PTR __$ArrayPad$[esp+68], eax
  00026	89 4c 24 10	 mov	 DWORD PTR _this$[esp+68], ecx
  0002a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002f	83 c4 04	 add	 esp, 4
  00032	89 44 24 10	 mov	 DWORD PTR $T152891[esp+64], eax
  00036	33 ed		 xor	 ebp, ebp
  00038	3b c5		 cmp	 eax, ebp
  0003a	89 6c 24 3c	 mov	 DWORD PTR __$EHRec$[esp+72], ebp
  0003e	74 0b		 je	 SHORT $L152892
  00040	8b c8		 mov	 ecx, eax
  00042	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00047	8b f0		 mov	 esi, eax
  00049	eb 02		 jmp	 SHORT $L152893
$L152892:
  0004b	33 f6		 xor	 esi, esi
$L152893:

; 75   : 	pMSG->SetID(CT_RPSGAMEDATA_ACK)
; 76   : 		<< bChange
; 77   : 		<< bGroup
; 78   : 		<< WORD(pRPS->size());

  0004d	8b 7c 24 4c	 mov	 edi, DWORD PTR _pRPS$[esp+60]
  00051	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00054	8b 4c 24 44	 mov	 ecx, DWORD PTR _bChange$[esp+60]
  00058	50		 push	 eax
  00059	8b 44 24 4c	 mov	 eax, DWORD PTR _bGroup$[esp+64]
  0005d	50		 push	 eax
  0005e	51		 push	 ecx
  0005f	68 75 60 00 00	 push	 24693			; 00006075H
  00064	8b ce		 mov	 ecx, esi
  00066	c7 44 24 4c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+88], -1
  0006e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 79   : 
; 80   : 	MAPRPSGAME::iterator it;
; 81   : 	for(it=pRPS->begin(); it!=pRPS->end(); it++)

  00088	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0008b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0008d	3b c1		 cmp	 eax, ecx
  0008f	89 44 24 4c	 mov	 DWORD PTR _it$[esp+60], eax
  00093	0f 84 dd 00 00
	00		 je	 $L122995
  00099	8d a4 24 00 00
	00 00		 npad	 7
$L152949:

; 82   : 	{
; 83   : 		TRPSGAME rps = (*it).second;

  000a0	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  000a3	8a 48 11	 mov	 cl, BYTE PTR [eax+17]
  000a6	88 54 24 14	 mov	 BYTE PTR _rps$122996[esp+64], dl
  000aa	8d 50 12	 lea	 edx, DWORD PTR [eax+18]
  000ad	88 4c 24 15	 mov	 BYTE PTR _rps$122996[esp+65], cl
  000b1	66 8b 0a	 mov	 cx, WORD PTR [edx]
  000b4	8a 52 02	 mov	 dl, BYTE PTR [edx+2]
  000b7	66 89 4c 24 16	 mov	 WORD PTR _rps$122996[esp+66], cx
  000bc	66 8b 48 16	 mov	 cx, WORD PTR [eax+22]
  000c0	88 54 24 18	 mov	 BYTE PTR _rps$122996[esp+68], dl
  000c4	66 8b 50 18	 mov	 dx, WORD PTR [eax+24]
  000c8	83 c0 1c	 add	 eax, 28			; 0000001cH
  000cb	66 89 4c 24 1a	 mov	 WORD PTR _rps$122996[esp+70], cx
  000d0	50		 push	 eax
  000d1	8d 4c 24 24	 lea	 ecx, DWORD PTR _rps$122996[esp+80]
  000d5	66 89 54 24 20	 mov	 WORD PTR _rps$122996[esp+76], dx
  000da	e8 00 00 00 00	 call	 ??0?$vector@_JV?$allocator@_J@std@@@std@@QAE@ABV01@@Z ; std::vector<__int64,std::allocator<__int64> >::vector<__int64,std::allocator<__int64> >

; 84   : 		(*pMSG)
; 85   : 			<< rps.m_bType
; 86   : 			<< rps.m_bWinCount
; 87   : 			<< rps.m_bProb[0]
; 88   : 			<< rps.m_bProb[1]
; 89   : 			<< rps.m_bProb[2]
; 90   : 			<< rps.m_wWinKeep
; 91   : 			<< rps.m_wWinPeriod;

  000df	8b 44 24 1c	 mov	 eax, DWORD PTR _rps$122996[esp+72]
  000e3	8b 4c 24 1a	 mov	 ecx, DWORD PTR _rps$122996[esp+70]
  000e7	8b 54 24 18	 mov	 edx, DWORD PTR _rps$122996[esp+68]
  000eb	50		 push	 eax
  000ec	8b 44 24 1b	 mov	 eax, DWORD PTR _rps$122996[esp+71]
  000f0	51		 push	 ecx
  000f1	8b 4c 24 1e	 mov	 ecx, DWORD PTR _rps$122996[esp+74]
  000f5	52		 push	 edx
  000f6	8b 54 24 21	 mov	 edx, DWORD PTR _rps$122996[esp+77]
  000fa	50		 push	 eax
  000fb	8b 44 24 24	 mov	 eax, DWORD PTR _rps$122996[esp+80]
  000ff	51		 push	 ecx
  00100	52		 push	 edx
  00101	50		 push	 eax
  00102	8b ce		 mov	 ecx, esi
  00104	c7 44 24 58 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+100], 1
  0010c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00111	8b c8		 mov	 ecx, eax
  00113	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00118	8b c8		 mov	 ecx, eax
  0011a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0011f	8b c8		 mov	 ecx, eax
  00121	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00126	8b c8		 mov	 ecx, eax
  00128	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0012d	8b c8		 mov	 ecx, eax
  0012f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00134	8b c8		 mov	 ecx, eax
  00136	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 92   : 	}

  0013b	8b 44 24 24	 mov	 eax, DWORD PTR _rps$122996[esp+80]
  0013f	3b c5		 cmp	 eax, ebp
  00141	c7 44 24 3c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+72], -1
  00149	74 09		 je	 SHORT $L153026
  0014b	50		 push	 eax
  0014c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00151	83 c4 04	 add	 esp, 4
$L153026:
  00154	8d 4c 24 4c	 lea	 ecx, DWORD PTR _it$[esp+60]
  00158	89 6c 24 24	 mov	 DWORD PTR _rps$122996[esp+80], ebp
  0015c	89 6c 24 28	 mov	 DWORD PTR _rps$122996[esp+84], ebp
  00160	89 6c 24 2c	 mov	 DWORD PTR _rps$122996[esp+88], ebp
  00164	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned short,tagTRPSGAME,std::less<unsigned short>,std::allocator<std::pair<unsigned short const ,tagTRPSGAME> >,0> >::const_iterator::_Inc
  00169	8b 44 24 4c	 mov	 eax, DWORD PTR _it$[esp+60]
  0016d	3b 47 04	 cmp	 eax, DWORD PTR [edi+4]
  00170	0f 85 2a ff ff
	ff		 jne	 $L152949
$L122995:

; 93   : 
; 94   : 	Say(pMSG);

  00176	8b 4c 24 0c	 mov	 ecx, DWORD PTR _this$[esp+64]
  0017a	8b 11		 mov	 edx, DWORD PTR [ecx]
  0017c	56		 push	 esi
  0017d	ff 12		 call	 DWORD PTR [edx]

; 95   : }

  0017f	8b 4c 24 34	 mov	 ecx, DWORD PTR __$EHRec$[esp+64]
  00183	5f		 pop	 edi
  00184	5e		 pop	 esi
  00185	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0018c	8b 4c 24 28	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+56]
  00190	5d		 pop	 ebp
  00191	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00196	83 c4 34	 add	 esp, 52			; 00000034H
  00199	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L152897:
  00000	8b 45 d0	 mov	 eax, DWORD PTR $T152891[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
$L152898:
  0000b	8d 4d d4	 lea	 ecx, DWORD PTR _rps$122996[ebp]
  0000e	e9 00 00 00 00	 jmp	 ??1tagTRPSGAME@@QAE@XZ
__ehhandler$?SendCT_RPSGAMEDATA_ACK@CTServer@@QAEXEEPAV?$map@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@@std@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T153031
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCT_RPSGAMEDATA_ACK@CTServer@@QAEXEEPAV?$map@GUtagTRPSGAME@@U?$less@G@std@@V?$allocator@U?$pair@$$CBGUtagTRPSGAME@@@std@@@3@@std@@@Z ENDP ; CTServer::SendCT_RPSGAMEDATA_ACK
PUBLIC	?SendMW_CONRESULT_REQ@CTServer@@QAEXKKEV?$map@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@@std@@@Z ; CTServer::SendMW_CONRESULT_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
xdata$x	SEGMENT
$T153311 DD	0ffffffffH
	DD	FLAT:$L153049
	DD	00H
	DD	FLAT:$L153050
$T153307 DD	019930520H
	DD	02H
	DD	FLAT:$T153311
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\sssender.cpp
xdata$x	ENDS
;	COMDAT ?SendMW_CONRESULT_REQ@CTServer@@QAEXKKEV?$map@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@@std@@@Z
_TEXT	SEGMENT
$T153043 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
_bResult$ = 16						; size = 1
$T153281 = 16						; size = 4
_it$ = 16						; size = 4
_mapTCON$ = 20						; size = 12
?SendMW_CONRESULT_REQ@CTServer@@QAEXKKEV?$map@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@@std@@@Z PROC NEAR ; CTServer::SendMW_CONRESULT_REQ, COMDAT
; _this$ = ecx

; 404  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendMW_CONRESULT_REQ@CTServer@@QAEXKKEV?$map@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b f9		 mov	 edi, ecx

; 405  : 	CPacket *pMSG = new CPacket();

  0001a	6a 1c		 push	 28			; 0000001cH
  0001c	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+36], 0
  00024	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00029	83 c4 04	 add	 esp, 4
  0002c	89 44 24 08	 mov	 DWORD PTR $T153043[esp+24], eax
  00030	85 c0		 test	 eax, eax
  00032	c6 44 24 14 01	 mov	 BYTE PTR __$EHRec$[esp+32], 1
  00037	74 0b		 je	 SHORT $L153044
  00039	8b c8		 mov	 ecx, eax
  0003b	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00040	8b f0		 mov	 esi, eax
  00042	eb 02		 jmp	 SHORT $L153045
$L153044:
  00044	33 f6		 xor	 esi, esi
$L153045:

; 406  : 
; 407  : 	pMSG->SetID(MW_CONRESULT_REQ)
; 408  : 		<< dwCharID
; 409  : 		<< dwKEY
; 410  : 		<< bResult
; 411  : 		<< BYTE(mapTCON.size());

  00046	8b 44 24 30	 mov	 eax, DWORD PTR _mapTCON$[esp+28]
  0004a	8b 4c 24 24	 mov	 ecx, DWORD PTR _bResult$[esp+20]
  0004e	8b 54 24 20	 mov	 edx, DWORD PTR _dwKEY$[esp+20]
  00052	50		 push	 eax
  00053	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+24]
  00057	51		 push	 ecx
  00058	52		 push	 edx
  00059	50		 push	 eax
  0005a	68 0a 20 00 00	 push	 8202			; 0000200aH
  0005f	8b ce		 mov	 ecx, esi
  00061	c6 44 24 28 00	 mov	 BYTE PTR __$EHRec$[esp+52], 0
  00066	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006b	8b c8		 mov	 ecx, eax
  0006d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00072	8b c8		 mov	 ecx, eax
  00074	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 412  : 
; 413  : 	MAPTCHARCON::iterator it;
; 414  : 	for(it=mapTCON.begin(); it!=mapTCON.end(); it++)

  00087	8b 4c 24 2c	 mov	 ecx, DWORD PTR _mapTCON$[esp+24]
  0008b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0008d	3b c1		 cmp	 eax, ecx
  0008f	89 44 24 24	 mov	 DWORD PTR _it$[esp+20], eax
  00093	74 20		 je	 SHORT $L123213
$L153101:

; 415  : 	{
; 416  : 		(*pMSG)
; 417  : 			<< (*it).first;

  00095	33 c9		 xor	 ecx, ecx
  00097	8a 48 0c	 mov	 cl, BYTE PTR [eax+12]
  0009a	51		 push	 ecx
  0009b	8b ce		 mov	 ecx, esi
  0009d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a2	8d 4c 24 24	 lea	 ecx, DWORD PTR _it$[esp+20]
  000a6	e8 00 00 00 00	 call	 ?_Inc@const_iterator@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAEXXZ ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::const_iterator::_Inc
  000ab	8b 44 24 24	 mov	 eax, DWORD PTR _it$[esp+20]
  000af	3b 44 24 2c	 cmp	 eax, DWORD PTR _mapTCON$[esp+24]
  000b3	75 e0		 jne	 SHORT $L153101
$L123213:

; 418  : 	}
; 419  : 
; 420  : 	Say(pMSG);

  000b5	8b 17		 mov	 edx, DWORD PTR [edi]
  000b7	56		 push	 esi
  000b8	8b cf		 mov	 ecx, edi
  000ba	ff 12		 call	 DWORD PTR [edx]

; 421  : }

  000bc	8b 44 24 2c	 mov	 eax, DWORD PTR _mapTCON$[esp+24]
  000c0	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c2	50		 push	 eax
  000c3	51		 push	 ecx
  000c4	8d 44 24 2c	 lea	 eax, DWORD PTR $T153281[esp+28]
  000c8	50		 push	 eax
  000c9	8d 4c 24 34	 lea	 ecx, DWORD PTR _mapTCON$[esp+32]
  000cd	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  000d5	e8 00 00 00 00	 call	 ?erase@?$_Tree@V?$_Tmap_traits@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@$0A@@std@@@std@@QAE?AViterator@12@V312@0@Z ; std::_Tree<std::_Tmap_traits<unsigned char,tagTCHARCON *,std::less<unsigned char>,std::allocator<std::pair<unsigned char const ,tagTCHARCON *> >,0> >::erase
  000da	8b 4c 24 2c	 mov	 ecx, DWORD PTR _mapTCON$[esp+24]
  000de	51		 push	 ecx
  000df	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000e4	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  000e8	83 c4 04	 add	 esp, 4
  000eb	5f		 pop	 edi
  000ec	5e		 pop	 esi
  000ed	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000f4	83 c4 10	 add	 esp, 16			; 00000010H
  000f7	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L153049:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _mapTCON$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$map@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@@std@@QAE@XZ
$L153050:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T153043[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendMW_CONRESULT_REQ@CTServer@@QAEXKKEV?$map@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@@std@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T153307
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendMW_CONRESULT_REQ@CTServer@@QAEXKKEV?$map@EPAUtagTCHARCON@@U?$less@E@std@@V?$allocator@U?$pair@$$CBEPAUtagTCHARCON@@@std@@@3@@std@@@Z ENDP ; CTServer::SendMW_CONRESULT_REQ
END
