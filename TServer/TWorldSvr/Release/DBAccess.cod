; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\DBAccess.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_0P@HNOJALKC@CTBLGuildChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09ILEIJAMI@CTBLGuild?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@FKMKEJMM@CTBLGuildArticle?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@CDNBPAGO@CTBLGuildItem?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@EAIJAFAN@CTBLGuildVolunteer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@EBAACLOB@CTBLGuildMember?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@MGHNIDEO@CTBLGuildTactics?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@NKCOCKMP@CTBLGuildRelation?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@FPEIFNOB@CTBLFriend?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@BAEFACHF@CTBLFriendTarget?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@JDAFODJ@CTBLFriendGroupTable?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@OPCLOBJG@CTBLSoulmate?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@BIANAOEM@CTBLMySoulmate?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@DCCCNCDJ@CTBLOperatorChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@CDBIMFOD@CTBLEventQuarterChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@LKOCLMBF@CTBLGuildLoad?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@BAHNCKAE@CTBLBattleTimeChart?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@LMFKOODM@CTBLSvrMsg?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@CAJJGKHC@CTBLItemFind?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@HIKOINBC@CTBLGuildPvPointReward?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@EHMHJLFH@CTBLGuildPvPRecord?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@KMMBIDKP@CTBLCastleApplicant?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@DHHFGNDD@CTBLGuildWanted?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@GHGLGBKE@CTBLGuildTacticsWanted?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@MBMBFJIH@CTBLMonthPvPointTable?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@OEFDDMHH@CTBLMonthPvPointChar?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@GBJJHOCB@CTBLPvPointTable?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@GFPDNAOE@CTBLStopMap?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@IHFKOAID@CTBLProtectChar?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@EJOCOGDN@CTBLDeleteLevel?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@OFNOMJPO@CTBLEventQuarterList?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@OFBOJDHF@CTBLTournament?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@HPLHLCBE@CTBLTournamentSchedule?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@KCDCDILN@CTBLGetCharInfo?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@KAFJCLAG@CTBLTournamentReward?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@GPDFHGJH@CTBLTournamentPlayer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@IMHJOJNN@CTBLFirstGradeGroup?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BK@MHEGHOKH@CTBLTournamentCurrentStep?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@BOLHCPBB@CTBLTnmtEventTime?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@EELCEGBI@CTBLTnmtEventSchedule?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@IHJDHLHP@CTBLTournamentEvent?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@BPMMPPFG@CTBLTnmtEventReward?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@JGGEIMGE@CTBLTotalRank?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@ONDPKNK@CTBLMonthRank?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@CGFJGBED@CTBLRPSGame?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@KABLMCGH@CTBLRPSGameRecord?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@HHFFLCPK@CSPGuildUpdate?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@HCBLBPOO@CSPGuildEstablish?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@JGIBFEEC@CSPGuildDisorg?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@FKPFGKDO@CSPGuildDelete?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@POIFDAAP@CSPGuildMemberAdd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@JOONNEKA@CSPGuildLeave?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@EJIFPHNK@CSPGuildDuty?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@HCOMIBIL@CSPGuildPeer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@EBLAFDLB@CSPGuildKickout?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@OIJCLCPF@CSPFriendInsert?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@EIOEANNK@CSPFriendErase?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@FNGBOGEE@CSPFriendGroupMake?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@CKCHBEJG@CSPFriendGroupDelete?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@GCOPGHFP@CSPFriendGroupChange?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@BOEMOACG@CSPFriendGroupName?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@DFHELEIA@CSPProtectedSearch?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@EOMPGPJC@CSPLoadService?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@PKBAFGDB@CSPGuildArticleAdd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@ENFEGDM@CSPGuildArticleDel?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@BHMBFCLD@CSPGuildArticleUpdate?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@BJLOKBNA@CSPGuildFame?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@JMIBBNOG@CSPGuildLevel?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@GJCFCJMB@CSPGuildMaxCabinet?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@KLNPGACF@CSPGuildContribution?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@MCBOHLID@CSPGuildVolunteerAdd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@DMNLGLIO@CSPGuildVolunteerDel?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@HMLBIAKI@CSPGuildTacticsAdd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@ICHEJAKF@CSPGuildTacticsDel?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@CBFOJEBG@CSPSoulmateReg?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@MLOIEHBC@CSPSoulmateEnd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@LHNIEFJO@CSPSoulmateDel?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@JPPBOFPA@CSPGetReservedPost?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@NFPLBBEB@CSPClearMapCurrentUser?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@KEAKLAPB@CSPGetNation?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@HEBAMJJB@CSPItemStateChange?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@LOKJEBEN@CSPSaveGuildPvPoint?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@NDBGPMLM@CSPSaveGuildPvPRecord?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@MDGHDNAF@CSPSaveGuildPointReward?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@JLINGJDI@CSPSaveCastleApplicant?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@EAKFNGNN@CSPGetRecallID?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@CIPMMDCL@CSPCashItemSale?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@PGMELMBH@CSPGuildWantedAdd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@IABKMBK@CSPGuildWantedDel?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MCAHKKJ@CSPGuildTacticsWantedAdd?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PCOFGKKE@CSPGuildTacticsWantedDel?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@IBCCCKEH@CSPGuildVolunteering?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@FMPMPEAC@CSPGuildVolunteeringDel?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@JPBEDNLG@CSPSaveTacticsGainPoint?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@OBEJAKAN@CSPSaveMonthRank?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@NJGPKFKL@CSPInitMonthPvPoint?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@GDEIFAEJ@CSPInitMonthRank?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@MCCLKMPC@CSPEventQuarterUpdate?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@DAIDJBOD@CSPGetItemName?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@KNNLENBO@CSPTournamentPayback?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@OAIONDMH@CSPTournamentResult?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@BHOHNFON@CSPTournamentApply?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@HDNEODFA@CSPTournamentClear?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@HAFJKEPC@CSPTournamentStatus?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@JOFDMAHB@CSPTnmtEventTime?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@KIAJDEO@CSPTnmtEventSchedule?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BA@EKJFNIGK@CSPTnmtEventDel?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@JHLDHABL@CSPTnmtEventEntry?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@EKIEOLPM@CSPTnmtEventReward?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0P@DIEGLFL@CSPHelpMessage?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BB@CAPPCNAH@CSPRPSGameRecord?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@CAGAKGIN@CSPGetLimitedLevel?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?InitQueryTWorldSvr@@YAHPAVCSqlDatabase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTCASHITMSALE@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTCASHITMSALE@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagTCASHITMSALE@@IU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@IABU1@AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@GIG@std@@YAXPAGIABGAAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagMONREGEN@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagMONREGEN@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagMONREGEN@@IU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@IABU1@AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagLOTTERY@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagLOTTERY@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagLOTTERY@@IU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@IABU1@AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTENTRYRECORD@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTENTRYRECORD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@YAXPAUtagTENTRYRECORD@@0AAV?$allocator@UtagTENTRYRECORD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@0AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagTCASHITMSALE@@PAU1@@std@@YAPAUtagTCASHITMSALE@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAGPAGV?$allocator@G@std@@@std@@YAPAGPAG00AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAGPAG@std@@YAPAGPAG00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@0AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagMONREGEN@@PAU1@@std@@YAPAUtagMONREGEN@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@0AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagLOTTERY@@PAU1@@std@@YAPAUtagLOTTERY@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTNMTREWARD@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTNMTREWARD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@YAXPAUtagTNMTREWARD@@0AAV?$allocator@UtagTNMTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTENTRYRECORD@@@std@@QAEXPAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTNMTREWARD@@@std@@QAEXPAUtagTNMTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAGIG@std@@YAXPAGIABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@GG@std@@YAPAGPAG00AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTENTRYRECORD@@@std@@YAXPAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagTCASHITMSALE@@U1@@std@@YAXPAUtagTCASHITMSALE@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTCASHITMSALE@@@std@@YAXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagMONREGEN@@U1@@std@@YAXPAUtagMONREGEN@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagMONREGEN@@@std@@YAXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagLOTTERY@@U1@@std@@YAXPAUtagLOTTERY@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagLOTTERY@@@std@@YAXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTNMTREWARD@@@std@@YAXPAUtagTNMTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAGI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGetLimitedLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BM@GKCNHNAL@?$HL?5CALL?5TGetLimitedLevel?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGetLimitedLevel@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGetLimitedLevel@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGetLimitedLevel@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGetLimitedLevel@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetLimitedLevel@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPRPSGameRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@DBMGFAOH@?$HLCALL?5TRPSGameRecord?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPRPSGameRecord@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPRPSGameRecord@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPRPSGameRecord@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPRPSGameRecord@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPRPSGameRecord@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPHelpMessage@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BN@NCNGDIFG@?$HLCALL?5THelpMessage?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPHelpMessage@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPHelpMessage@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPHelpMessage@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPHelpMessage@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPHelpMessage@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPTnmtEventReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CH@PCHOHFMJ@?$HLCALL?5TTnmtEventReward?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPTnmtEventReward@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPTnmtEventReward@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPTnmtEventReward@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPTnmtEventReward@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTnmtEventReward@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPTnmtEventEntry@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CO@EOGPAECE@?$HLCALL?5TTnmtEventEntry?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPTnmtEventEntry@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPTnmtEventEntry@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPTnmtEventEntry@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPTnmtEventEntry@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTnmtEventEntry@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPTnmtEventDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BI@PJKAELJP@?$HLCALL?5TTnmtEventDel?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPTnmtEventDel@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPTnmtEventDel@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPTnmtEventDel@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPTnmtEventDel@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTnmtEventDel@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPTnmtEventSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@BKIFDKEM@?$HLCALL?5TTnmtEventSchedule?$CI?$DP?0?$DP?0?$DP?$CJ?$HN@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPTnmtEventSchedule@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPTnmtEventSchedule@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPTnmtEventSchedule@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPTnmtEventSchedule@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTnmtEventSchedule@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPTnmtEventTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BP@ICGHNJIN@?$HLCALL?5TTnmtEventTime?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPTnmtEventTime@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPTnmtEventTime@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPTnmtEventTime@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPTnmtEventTime@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTnmtEventTime@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPTournamentStatus@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CA@MDINOHEO@?$HLCALL?5TTournamentStatus?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPTournamentStatus@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPTournamentStatus@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPTournamentStatus@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPTournamentStatus@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTournamentStatus@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPTournamentClear@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BL@OCKMDMDK@?$HLCALL?5TTournamentClear?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPTournamentClear@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPTournamentClear@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPTournamentClear@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPTournamentClear@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTournamentClear@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPTournamentApply@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CB@ODBJGAOP@?$HLCALL?5TTournamentApply?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPTournamentApply@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPTournamentApply@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPTournamentApply@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPTournamentApply@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTournamentApply@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPTournamentResult@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CC@PNGMFNJG@?$HLCALL?5TTournamentResult?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPTournamentResult@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPTournamentResult@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPTournamentResult@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPTournamentResult@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTournamentResult@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPTournamentPayback@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CF@PCBHMNHK@?$HLCALL?5TTournamentPayback?$CI?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPTournamentPayback@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPTournamentPayback@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPTournamentPayback@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPTournamentPayback@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTournamentPayback@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGetItemName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CJ@FPHBGKNJ@?$HLCALL?5TGetItemName?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGetItemName@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGetItemName@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGetItemName@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGetItemName@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetItemName@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPEventQuarterUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EK@HDBLJMHG@?$HL?$DP?5?$DN?5CALL?5TEventQuarterUpdate?$CI?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPEventQuarterUpdate@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPEventQuarterUpdate@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPEventQuarterUpdate@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPEventQuarterUpdate@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPEventQuarterUpdate@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPInitMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BJ@HKLHIECF@?$HLCALL?5TInitMonthRank?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPInitMonthRank@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPInitMonthRank@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPInitMonthRank@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPInitMonthRank@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPInitMonthRank@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPInitMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0ED@OOCEJMB@?$HL?$DP?5?$DN?5CALL?5TInitMonthPvPoint?$CI?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPInitMonthPvPoint@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPInitMonthPvPoint@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPInitMonthPvPoint@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPInitMonthPvPoint@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPInitMonthPvPoint@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EA@GFNNMJNG@?$HL?5CALL?5TSaveMonthRank?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveMonthRank@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveMonthRank@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveMonthRank@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveMonthRank@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveMonthRank@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveTacticsGainPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CD@MGEAGIHA@?$HL?5CALL?5TSaveTacticsGainPoint?$CI?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveTacticsGainPoint@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveTacticsGainPoint@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveTacticsGainPoint@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveTacticsGainPoint@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveTacticsGainPoint@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildVolunteeringDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CD@CDDMPCHH@?$HL?5CALL?5TGuildVolunteeringDel?$CI?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildVolunteeringDel@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildVolunteeringDel@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildVolunteeringDel@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildVolunteeringDel@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildVolunteeringDel@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildVolunteering@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CC@EMNIENCD@?$HL?5CALL?5TGuildVolunteering?$CI?$DP?0?$DP?0?$DP?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildVolunteering@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildVolunteering@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildVolunteering@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildVolunteering@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildVolunteering@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildTacticsWantedDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CC@FICJKIBN@?$HL?5CALL?5TGuildTacticsWantedDel?$CI?$DP?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildTacticsWantedDel@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildTacticsWantedDel@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildTacticsWantedDel@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildTacticsWantedDel@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildTacticsWantedDel@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildTacticsWantedAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DI@JMJHECPN@?$HL?5CALL?5TGuildTacticsWantedAdd?$CI?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildTacticsWantedAdd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildTacticsWantedAdd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildTacticsWantedAdd@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildTacticsWantedAdd@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildTacticsWantedAdd@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildWantedDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BL@ONOOOAKJ@?$HL?5CALL?5TGuildWantedDel?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildWantedDel@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildWantedDel@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildWantedDel@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildWantedDel@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildWantedDel@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildWantedAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CF@JLHNLNJG@?$HL?5CALL?5TGuildWantedAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildWantedAdd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildWantedAdd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildWantedAdd@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildWantedAdd@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildWantedAdd@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPCashItemSale@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BL@NACGPHNP@?$HL?5CALL?5TCashItemSale?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPCashItemSale@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPCashItemSale@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPCashItemSale@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPCashItemSale@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPCashItemSale@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGetRecallID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BK@LADMJPJF@?5?$HL?5CALL?5TGetRecallID?$CI?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGetRecallID@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGetRecallID@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGetRecallID@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGetRecallID@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetRecallID@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveCastleApplicant@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CG@KADBKDI@?5?$HL?5CALL?5TSaveCastleApplicant?$CI?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveCastleApplicant@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveCastleApplicant@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveCastleApplicant@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveCastleApplicant@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveCastleApplicant@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveGuildPointReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CJ@PLFELCAG@?$HL?5CALL?5TSaveGuildPointReward?$CI?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveGuildPointReward@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveGuildPointReward@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveGuildPointReward@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveGuildPointReward@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveGuildPointReward@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveGuildPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DH@MNLJPKCK@?$HL?5CALL?5TSaveGuildPvPRecord?$CI?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveGuildPvPRecord@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveGuildPvPRecord@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveGuildPvPRecord@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveGuildPvPRecord@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveGuildPvPRecord@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSaveGuildPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CD@HEHDCLHG@?$HL?5CALL?5TSaveGuildPvPoint?$CI?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSaveGuildPvPoint@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSaveGuildPvPoint@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSaveGuildPvPoint@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSaveGuildPvPoint@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveGuildPvPoint@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPItemStateChange@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CC@FPFMIJGD@?$HL?5?$DP?5?$DN?5CALL?5TItemStateChange?$CI?$DP?0?$DP?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPItemStateChange@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPItemStateChange@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPItemStateChange@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPItemStateChange@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPItemStateChange@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGetNation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BF@MGHBOKLC@?$HLCALL?5TGetNation?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGetNation@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGetNation@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGetNation@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGetNation@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetNation@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPClearMapCurrentUser@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CG@JDFMGLJO@?5?$HL?5CALL?5TClearMapCurrentUser?$CI?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPClearMapCurrentUser@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPClearMapCurrentUser@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPClearMapCurrentUser@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPClearMapCurrentUser@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPClearMapCurrentUser@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGetReservedPost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0GG@GCKALGDN@?$HL?5?$DP?5?$DN?5CALL?5TGetReservedPost?$CI?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGetReservedPost@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGetReservedPost@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGetReservedPost@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGetReservedPost@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetReservedPost@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0tagTITEM@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSoulmateDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BJ@HEHMPFGH@?$HLCALL?5TSoulmateDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSoulmateDel@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSoulmateDel@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSoulmateDel@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSoulmateDel@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSoulmateDel@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSoulmateEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BJ@MKAOBLDB@?$HLCALL?5TSoulmateEnd?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSoulmateEnd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSoulmateEnd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSoulmateEnd@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSoulmateEnd@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSoulmateEnd@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPSoulmateReg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BJ@DKGBIJO@?$HLCALL?5TSoulmateReg?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPSoulmateReg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPSoulmateReg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPSoulmateReg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPSoulmateReg@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSoulmateReg@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildTacticsDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BO@FJKJFIMO@?$HL?5CALL?5TGuildTacticsDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildTacticsDel@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildTacticsDel@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildTacticsDel@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildTacticsDel@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildTacticsDel@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildTacticsAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CI@FHOOKLPN@?$HL?5CALL?5TGuildTacticsAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildTacticsAdd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildTacticsAdd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildTacticsAdd@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildTacticsAdd@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildTacticsAdd@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildVolunteerDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BP@DIMJHPON@?$HLCALL?5TGuildVolunteerDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildVolunteerDel@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildVolunteerDel@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildVolunteerDel@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildVolunteerDel@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildVolunteerDel@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildVolunteerAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CJ@OIDOBLKO@?$HLCALL?5TGuildVolunteerAdd?$CI?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildVolunteerAdd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildVolunteerAdd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildVolunteerAdd@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildVolunteerAdd@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildVolunteerAdd@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildContribution@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CH@JPPKBNJK@?$HLCALL?5TGuildContribution?$CI?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildContribution@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildContribution@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildContribution@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildContribution@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildContribution@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildMaxCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BN@EMCEHLI@?$HLCALL?5TGuildMaxCabinet?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildMaxCabinet@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildMaxCabinet@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildMaxCabinet@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildMaxCabinet@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildMaxCabinet@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BI@LBOBLBIE@?$HLCALL?5TGuildLevel?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildLevel@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildLevel@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildLevel@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildLevel@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildLevel@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildFame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BJ@NLIIEAMH@?$HLCALL?5TGuildFame?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildFame@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildFame@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildFame@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildFame@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildFame@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildArticleUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CE@EEDGBJL@?$HLCALL?5TGuildArticleUpdate?$CI?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildArticleUpdate@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildArticleUpdate@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildArticleUpdate@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildArticleUpdate@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildArticleUpdate@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildArticleDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BN@HAMFODDH@?$HLCALL?5TGuildArticleDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildArticleDel@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildArticleDel@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildArticleDel@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildArticleDel@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildArticleDel@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildArticleAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CH@KMOHJLFF@?$HLCALL?5TGuildArticleAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildArticleAdd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildArticleAdd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildArticleAdd@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildArticleAdd@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildArticleAdd@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPLoadService@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BN@FKLLIGDD@?$HLCALL?5TLoadService?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPLoadService@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPLoadService@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPLoadService@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPLoadService@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPLoadService@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPProtectedSearch@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CE@LGMJACNE@?$HL?5?$DP?5?$DN?5Call?5TProtectedSearch?$CI?$DP?0?5?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPProtectedSearch@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPProtectedSearch@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPProtectedSearch@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPProtectedSearch@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPProtectedSearch@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPFriendGroupName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CD@NLBCIBEB@?$HL?5Call?5TFriendGroupName?$CI?$DP?0?5?$DP?0?5?$DP?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPFriendGroupName@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPFriendGroupName@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPFriendGroupName@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPFriendGroupName@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPFriendGroupName@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPFriendGroupChange@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CF@HIOKNFNM@?$HL?5Call?5TFriendGroupChange?$CI?$DP?0?5?$DP?0?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPFriendGroupChange@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPFriendGroupChange@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPFriendGroupChange@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPFriendGroupChange@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPFriendGroupChange@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPFriendGroupDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CC@LGNOMMGE@?$HL?5Call?5TFriendGroupDelete?$CI?$DP?0?5?$DP?$CJ?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPFriendGroupDelete@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPFriendGroupDelete@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPFriendGroupDelete@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPFriendGroupDelete@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPFriendGroupDelete@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPFriendGroupMake@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CD@KBIHOAF@?$HL?5Call?5TFriendGroupMake?$CI?$DP?0?5?$DP?0?5?$DP?$CJ@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPFriendGroupMake@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPFriendGroupMake@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPFriendGroupMake@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPFriendGroupMake@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPFriendGroupMake@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPFriendErase@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BM@FHIDPFIC@?$HL?5Call?5TFriendDelete?$CI?$DP?0?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPFriendErase@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPFriendErase@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPFriendErase@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPFriendErase@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPFriendErase@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPFriendInsert@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BM@MPJJGOIC@?$HL?5Call?5TFriendInsert?$CI?$DP?0?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPFriendInsert@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPFriendInsert@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPFriendInsert@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPFriendInsert@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPFriendInsert@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildKickout@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BM@CJKHNNCE@?$HL?5Call?5TGuildKickout?$CI?$DP?0?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildKickout@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildKickout@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildKickout@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildKickout@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildKickout@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildPeer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BL@BNMCACON@?$HL?5Call?5TGuildPeer?$CI?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildPeer@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildPeer@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildPeer@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildPeer@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildPeer@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildDuty@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BL@GCEHDBJH@?$HL?5Call?5TGuildDuty?$CI?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildDuty@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildDuty@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildDuty@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildDuty@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildDuty@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildLeave@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BO@MHDDHPBG@?$HL?5Call?5TGuildLeave?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildLeave@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildLeave@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildLeave@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildLeave@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildLeave@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildMemberAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CC@ILPPFALI@?$HL?5Call?5TGuildMemberAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildMemberAdd@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildMemberAdd@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildMemberAdd@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildMemberAdd@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildMemberAdd@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BN@MMKAKDIM@?$HL?5?$DP?5?$DN?5Call?5TGuildDelete?$CI?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildDelete@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildDelete@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildDelete@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildDelete@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildDelete@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildDisorg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BN@FGHCPNPE@?$HL?5Call?5TGuildDisorg?$CI?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildDisorg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildDisorg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildDisorg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildDisorg@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildDisorg@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildEstablish@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CG@IKNFCHGE@?$HL?5?$DP?5?$DN?5Call?5TGuildEstablish?$CI?$DP?0?$DP?0?$DP@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildEstablish@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildEstablish@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildEstablish@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildEstablish@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildEstablish@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CSPGuildUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CN@NGFJGNFN@?$HL?5Call?5TGuildUpdate?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CSPGuildUpdate@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCSPGuildUpdate@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSPGuildUpdate@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSPGuildUpdate@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildUpdate@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLRPSGameRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EK@KICHMDLI@SELECT?5?7bType?0?5?7bWinCount?0?5?7dWin@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLRPSGameRecord@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLRPSGameRecord@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLRPSGameRecord@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLRPSGameRecord@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLRPSGameRecord@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLRPSGame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0GM@JFEMLDKE@SELECT?5?7bType?0?5?7bWinCount?0?5?7bPro@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLRPSGame@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLRPSGame@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLRPSGame@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLRPSGame@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLRPSGame@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DC@DAKCEDBE@SELECT?5dwCharID?0?5dwRank?5FROM?5TLA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLMonthRank@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLMonthRank@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLMonthRank@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLMonthRank@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonthRank@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLTotalRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DC@BFFFLLBF@SELECT?5dwCharID?0?5dwRank?5FROM?5TLA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLTotalRank@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLTotalRank@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLTotalRank@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLTotalRank@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTotalRank@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLTnmtEventReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0ID@PGNHLCLN@SELECT?5?7bEntryID?0?5?7dwClass?0?5?7bCh@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLTnmtEventReward@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLTnmtEventReward@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLTnmtEventReward@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLTnmtEventReward@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLTnmtEventReward@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTnmtEventReward@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLTnmtEventReward@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLTournamentEvent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0KA@JKJOIAJ@SELECT?5?7bEntryID?0?5?7szName?0?5?7bTyp@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLTournamentEvent@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLTournamentEvent@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLTournamentEvent@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLTournamentEvent@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLTournamentEvent@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTournamentEvent@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLTournamentEvent@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLTnmtEventSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FA@GBDFLFJJ@SELECT?5?7bStep?0?5?7dwPeriod?5?7FROM?5T@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLTnmtEventSchedule@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLTnmtEventSchedule@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLTnmtEventSchedule@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLTnmtEventSchedule@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLTnmtEventSchedule@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTnmtEventSchedule@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLTnmtEventSchedule@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLTnmtEventTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EJ@BFOOBBKI@SELECT?5?7wTournamentID?0?5?7bWeek?0?5?7@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLTnmtEventTime@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLTnmtEventTime@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLTnmtEventTime@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLTnmtEventTime@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTnmtEventTime@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLTournamentCurrentStep@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DG@CDEKFPLG@SELECT?5wID?0?5bGroup?0?5bStep?5FROM?5T@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLTournamentCurrentStep@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLTournamentCurrentStep@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLTournamentCurrentStep@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLTournamentCurrentStep@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTournamentCurrentStep@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLFirstGradeGroup@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BAB@HGCAMCMO@SELECT?5?7bRank?0?5?7dwCharID?0?5?7szNam@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLFirstGradeGroup@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLFirstGradeGroup@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLFirstGradeGroup@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLFirstGradeGroup@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLFirstGradeGroup@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLFirstGradeGroup@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLFirstGradeGroup@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLTournamentPlayer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0HL@DGIDOGBA@SELECT?5?7dwCharID?0?5?7szName?0?5?7dwCh@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLTournamentPlayer@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLTournamentPlayer@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLTournamentPlayer@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLTournamentPlayer@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTournamentPlayer@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLTournamentReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0IA@FPCLDDP@SELECT?5?7bEntryID?0?5?7dwClass?0?5?7bCh@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLTournamentReward@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLTournamentReward@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLTournamentReward@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLTournamentReward@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTournamentReward@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLGetCharInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FJ@CNECFINB@SELECT?5?7dwCharID?0?5?7szName?0?5?7bCou@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLGetCharInfo@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLGetCharInfo@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLGetCharInfo@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLGetCharInfo@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLGetCharInfo@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGetCharInfo@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLGetCharInfo@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLTournamentSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0JF@GDHKLCMG@SELECT?5?7bGroup?0?5?7bStep?0?5?7dwPerio@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLTournamentSchedule@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLTournamentSchedule@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLTournamentSchedule@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLTournamentSchedule@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTournamentSchedule@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLTournament@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0IJ@MOLIBCIA@SELECT?5?7bGroup?0?5?7bEntryID?0?5?7szNa@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLTournament@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLTournament@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLTournament@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLTournament@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTournament@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLEventQuarterList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0NE@IPOLPCBP@SELECT?5?7wID?0?5?7bDay?0?5?7bHour?0?7bMin@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLEventQuarterList@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLEventQuarterList@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLEventQuarterList@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLEventQuarterList@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLEventQuarterList@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLEventQuarterList@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLEventQuarterList@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLDeleteLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BD@DKDCEIPH@DELETE?5TLEVELCHART?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLDeleteLevel@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLDeleteLevel@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLDeleteLevel@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLProtectChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DG@PLBMBCAK@UPDATE?5TCHARTABLE?5SET?5wMapID?5?$DN?52@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLProtectChar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLProtectChar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLProtectChar@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLStopMap@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BJ@PFLLMIAJ@DELETE?5TDBITEMINDEXTABLE?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLStopMap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLStopMap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLStopMap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLPvPointTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CJG@LOJMFGII@SELECT?5TOP?51?5?7P?4dwCharID?0?5?7C?4szN@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLPvPointTable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLPvPointTable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLPvPointTable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLPvPointTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLPvPointTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLPvPointTable@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLPvPointTable@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLMonthPvPointChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FE@HGGDCALF@SELECT?5?7dwPoint?0?5?7wWin?0?5?7wLose?0?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLMonthPvPointChar@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLMonthPvPointChar@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLMonthPvPointChar@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLMonthPvPointChar@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLMonthPvPointChar@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonthPvPointChar@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLMonthPvPointChar@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLMonthPvPointTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DDA@IPJNIIGP@SELECT?5TOP?516?5?7M?4dwCharID?0?5?5?7C?4s@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLMonthPvPointTable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLMonthPvPointTable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLMonthPvPointTable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLMonthPvPointTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLMonthPvPointTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonthPvPointTable@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLMonthPvPointTable@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLGuildTacticsWanted@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BCD@PPNIDOPJ@SELECT?5?7?7?7?7?7?7?7?7?7?5dwID?0?5?7?7?7?7?7?7?7?7?7@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLGuildTacticsWanted@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLGuildTacticsWanted@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLGuildTacticsWanted@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLGuildTacticsWanted@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildTacticsWanted@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLGuildWanted@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FJ@LKGOFDAP@SELECT?5dwGuildID?0?5bMinLevel?0?5bMa@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLGuildWanted@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLGuildWanted@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLGuildWanted@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLGuildWanted@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildWanted@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLCastleApplicant@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DN@GNOGADJ@SELECT?5wCastleID?0?5dwCharID?0?5bCam@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLCastleApplicant@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLCastleApplicant@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLCastleApplicant@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLCastleApplicant@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLCastleApplicant@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLGuildPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0MD@KDLNDHPD@SELECT?5?7dwCharID?0?5?7dwDate?0?5?7wKil@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLGuildPvPRecord@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLGuildPvPRecord@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLGuildPvPRecord@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLGuildPvPRecord@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLGuildPvPRecord@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildPvPRecord@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLGuildPvPRecord@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLGuildPvPointReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0GN@FDBMPMFI@SELECT?5TOP?550?5szName?0?5dwPoint?0?5d@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLGuildPvPointReward@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLGuildPvPointReward@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLGuildPvPointReward@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLGuildPvPointReward@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLGuildPvPointReward@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildPvPointReward@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLGuildPvPointReward@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLItemFind@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FF@JAAGBAMG@SELECT?5wItemID?0bInitState?0szName@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLItemFind@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLItemFind@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLItemFind@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLItemFind@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLItemFind@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLItemFind@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLItemFind@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLSvrMsg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CJ@JJBDOFJM@SELECT?5dwID?0?5szMessage?5FROM?5TSVR@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLSvrMsg@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLSvrMsg@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLSvrMsg@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLSvrMsg@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSvrMsg@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLBattleTimeChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0HC@DGIPDPHL@SELECT?5bType?0?5dwBattleDur?0?5dwBat@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLBattleTimeChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLBattleTimeChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLBattleTimeChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLBattleTimeChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLBattleTimeChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLGuildLoad@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BDG@GIFBJBOF@SELECT?5?7?7?5?5dwID?0?5?7?7?5?5szName?0?5?7?7?5@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLGuildLoad@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLGuildLoad@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLGuildLoad@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLGuildLoad@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLGuildLoad@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildLoad@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLGuildLoad@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLEventQuarterChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FA@NKOANNBJ@SELECT?5wID?0?5bDay?0?5bHour?0?5bMinute@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLEventQuarterChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLEventQuarterChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLEventQuarterChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLEventQuarterChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLEventQuarterChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLOperatorChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0CI@BMBMLPNP@SELECT?5dwOperatorID?5FROM?5TOPERAT@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLOperatorChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLOperatorChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLOperatorChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLOperatorChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLOperatorChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLMySoulmate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0HD@GNEALDAJ@SELECT?5dwCharID?0?5dwTarget?0?5szNAM@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLMySoulmate@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLMySoulmate@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLMySoulmate@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLMySoulmate@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLMySoulmate@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMySoulmate@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLMySoulmate@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLSoulmate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0HD@LLOJFMDF@SELECT?5dwCharID?0?5dwTarget?0?5szNAM@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLSoulmate@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLSoulmate@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLSoulmate@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLSoulmate@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLSoulmate@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSoulmate@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLSoulmate@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLFriendGroupTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0EA@HKHOMLJJ@SELECT?5bGroup?0?5szName?5FROM?5TFRIE@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLFriendGroupTable@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLFriendGroupTable@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLFriendGroupTable@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLFriendGroupTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLFriendGroupTable@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLFriendGroupTable@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLFriendGroupTable@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLFriendTarget@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0MB@KFOGBJIF@SELECT?5F?4dwCharID?0?5C?4szName?5?7?7?7?7@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLFriendTarget@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLFriendTarget@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLFriendTarget@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLFriendTarget@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLFriendTarget@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLFriendTarget@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLFriendTarget@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLFriend@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0NM@KCBLABNK@SELECT?5F?4dwFriendID?0?5C?4szName?0?5F@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLFriend@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLFriend@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLFriend@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLFriend@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLFriend@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLFriend@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLFriend@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLGuildRelation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0DJ@IBNNGDGH@SELECT?5bType?0?5dwGuildOne?0?5dwGuil@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLGuildRelation@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLGuildRelation@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLGuildRelation@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLGuildRelation@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildRelation@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLGuildTactics@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0JE@HLFMBCDJ@SELECT?5dwCharID?0?5szName?0?5bLevel?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLGuildTactics@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLGuildTactics@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLGuildTactics@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLGuildTactics@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLGuildTactics@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildTactics@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLGuildTactics@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLGuildMember@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0IA@CLCBNOJM@SELECT?5dwCharID?0?5szName?0?5bCountr@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLGuildMember@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLGuildMember@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLGuildMember@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLGuildMember@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLGuildMember@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildMember@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLGuildMember@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLGuildVolunteer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0FE@IKMGHBCP@SELECT?5bType?0?5dwID?0?5dwCharID?0?5sz@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLGuildVolunteer@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLGuildVolunteer@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLGuildVolunteer@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLGuildVolunteer@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildVolunteer@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLGuildItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0BHO@KCMBCIML@SELECT?5?7dlID?0?5?7dwStorageID?0?5?7wIt@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLGuildItem@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLGuildItem@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLGuildItem@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLGuildItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLGuildItem@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildItem@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLGuildItem@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLGuildArticle@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0GG@OGPLJBDP@SELECT?5dwID?0?5bDuty?0?5szWritter?0?5s@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLGuildArticle@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLGuildArticle@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLGuildArticle@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLGuildArticle@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLGuildArticle@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildArticle@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLGuildArticle@@UAEFH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLGuild@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0PN@CNPJMODI@SELECT?5?7dwID?0?5?7szName?0?5?7dwChief?0@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLGuild@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLGuild@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLGuild@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLGuild@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuild@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CTBLGuildChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_0LA@NGEIOEAO@SELECT?5bLevel?0?5dwEXP?0?5bMaxCnt?0?5b@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_7CTBLGuildChart@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_GCTBLGuildChart@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CTBLGuildChart@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CTBLGuildChart@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildChart@@UAEFXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC NEAR	; std::char_traits<char>::assign, COMDAT

; 331  : 		_Left = _Right;

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Right$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	8b 54 24 04	 mov	 edx, DWORD PTR __Left$[esp-4]
  0000a	88 0a		 mov	 BYTE PTR [edx], cl

; 332  : 		}

  0000c	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogty
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC NEAR		; std::char_traits<char>::length, COMDAT

; 352  : 		return (::strlen(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L124676:
  00007	8a 08		 mov	 cl, BYTE PTR [eax]
  00009	40		 inc	 eax
  0000a	84 c9		 test	 cl, cl
  0000c	75 f9		 jne	 SHORT $L124676
  0000e	2b c2		 sub	 eax, edx

; 353  : 		}

  00010	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
; Function compile flags: /Ogty
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::copy, COMDAT

; 358  : 		return ((_Elem *)::memcpy(_First1, _First2, _Count));

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR __First2$[esp]
  00009	57		 push	 edi
  0000a	8b 7c 24 0c	 mov	 edi, DWORD PTR __First1$[esp+4]
  0000e	8b c1		 mov	 eax, ecx
  00010	8b d7		 mov	 edx, edi
  00012	c1 e9 02	 shr	 ecx, 2
  00015	f3 a5		 rep movsd
  00017	8b c8		 mov	 ecx, eax
  00019	83 e1 03	 and	 ecx, 3
  0001c	f3 a4		 rep movsb
  0001e	5f		 pop	 edi
  0001f	8b c2		 mov	 eax, edx
  00021	5e		 pop	 esi

; 359  : 		}

  00022	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
EXTRN	_memmove:NEAR
; Function compile flags: /Ogty
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::move, COMDAT

; 370  : 		return ((_Elem *)::memmove(_First1, _First2, _Count));

  00000	e9 00 00 00 00	 jmp	 _memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	??0tagTITEM@@QAE@XZ				; tagTITEM::tagTITEM
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tworldtype.h
;	COMDAT ??0tagTITEM@@QAE@XZ
_TEXT	SEGMENT
??0tagTITEM@@QAE@XZ PROC NEAR				; tagTITEM::tagTITEM, COMDAT
; _this$ = ecx

; 555  : 	tagTITEM()

  00000	8b c1		 mov	 eax, ecx
  00002	53		 push	 ebx

; 556  : 	{
; 557  : 		m_dlID = 0;

  00003	33 db		 xor	 ebx, ebx
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	89 18		 mov	 DWORD PTR [eax], ebx
  00009	89 58 04	 mov	 DWORD PTR [eax+4], ebx

; 558  : 		m_dwItemID = 0;

  0000c	89 58 08	 mov	 DWORD PTR [eax+8], ebx

; 559  : 		m_bType = 0;

  0000f	88 58 10	 mov	 BYTE PTR [eax+16], bl

; 560  : 		m_bKind = 0;

  00012	88 58 11	 mov	 BYTE PTR [eax+17], bl

; 561  : 		m_dEndTime = 0;

  00015	89 58 28	 mov	 DWORD PTR [eax+40], ebx
  00018	89 58 2c	 mov	 DWORD PTR [eax+44], ebx

; 562  : 		m_bMagicCount = 0;

  0001b	88 58 31	 mov	 BYTE PTR [eax+49], bl

; 563  : 		m_bGradeEffect = 0;

  0001e	88 58 30	 mov	 BYTE PTR [eax+48], bl
  00021	8d 70 32	 lea	 esi, DWORD PTR [eax+50]
  00024	8d 50 44	 lea	 edx, DWORD PTR [eax+68]
  00027	8d 48 38	 lea	 ecx, DWORD PTR [eax+56]
  0002a	bf 06 00 00 00	 mov	 edi, 6
  0002f	90		 npad	 1
$L99528:

; 564  : 
; 565  : 		for(BYTE i=0; i<TMAGIC_MAX; i++)
; 566  : 		{
; 567  : 			m_bMagic[i] = 0;

  00030	88 1e		 mov	 BYTE PTR [esi], bl

; 568  : 			m_wValue[i] = 0;

  00032	66 89 19	 mov	 WORD PTR [ecx], bx

; 569  : 			m_dwExtValue[i] = 0;

  00035	89 1a		 mov	 DWORD PTR [edx], ebx
  00037	83 c1 02	 add	 ecx, 2
  0003a	83 c2 04	 add	 edx, 4
  0003d	46		 inc	 esi
  0003e	4f		 dec	 edi
  0003f	75 ef		 jne	 SHORT $L99528
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5b		 pop	 ebx

; 570  : 		}
; 571  : 	};

  00044	c3		 ret	 0
??0tagTITEM@@QAE@XZ ENDP				; tagTITEM::tagTITEM
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1109 : 		return (_Mysize);

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]

; 1110 : 		}

  00003	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L124695
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  00009	c3		 ret	 0
$L124695:

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L124703
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  00009	c3		 ret	 0
$L124703:

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC NEAR	; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 1494 : 		{	// test if _Ptr points inside string

  00000	56		 push	 esi

; 1495 : 		if (_Ptr < _Myptr() || _Myptr() + _Mysize <= _Ptr)

  00001	8b 71 18	 mov	 esi, DWORD PTR [ecx+24]
  00004	83 fe 10	 cmp	 esi, 16			; 00000010H
  00007	57		 push	 edi
  00008	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0000b	72 04		 jb	 SHORT $L124716
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	eb 02		 jmp	 SHORT $L124717
$L124716:
  00011	8b d0		 mov	 edx, eax
$L124717:
  00013	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  00017	3b fa		 cmp	 edi, edx
  00019	72 17		 jb	 SHORT $L120182
  0001b	83 fe 10	 cmp	 esi, 16			; 00000010H
  0001e	72 02		 jb	 SHORT $L124724
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L124724:
  00022	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00025	03 c8		 add	 ecx, eax
  00027	3b cf		 cmp	 ecx, edi
  00029	76 07		 jbe	 SHORT $L120182
  0002b	5f		 pop	 edi

; 1497 : 		else
; 1498 : 			return (true);

  0002c	b0 01		 mov	 al, 1
  0002e	5e		 pop	 esi

; 1499 : 		}

  0002f	c2 04 00	 ret	 4
$L120182:
  00032	5f		 pop	 edi

; 1496 : 			return (false);	// don't ask

  00033	32 c0		 xor	 al, al
  00035	5e		 pop	 esi

; 1499 : 		}

  00036	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC NEAR			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC NEAR		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	83 c8 ff	 or	 eax, -1

; 159  : 		}

  00003	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC NEAR		; std::_Allocate<char>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 35   : 	}

  0000d	c3		 ret	 0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z PROC NEAR ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 34   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 35   : 		}

  00002	c2 04 00	 ret	 4
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogty
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	8b 44 24 04	 mov	 eax, DWORD PTR __Newsize$[esp-4]
  00008	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0000b	72 0a		 jb	 SHORT $L124751
  0000d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00010	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1476 : 		}

  00014	c2 04 00	 ret	 4

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

$L124751:
  00017	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 1476 : 		}

  0001c	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1114 : 		size_type _Num = _Mybase::_Alval.max_size();
; 1115 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH

; 1116 : 		}

  00005	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC NEAR	; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 138  : 		}

  0000d	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1510 : 		if (!_Built)

  00000	8a 44 24 04	 mov	 al, BYTE PTR __Built$[esp-4]
  00004	84 c0		 test	 al, al
  00006	53		 push	 ebx
  00007	55		 push	 ebp
  00008	8b 6c 24 10	 mov	 ebp, DWORD PTR __Newsize$[esp+4]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	74 2f		 je	 SHORT $L124782

; 1511 : 			;
; 1512 : 		else if (_BUF_SIZE <= _Myres)

  00010	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  00014	72 29		 jb	 SHORT $L124782

; 1513 : 			{	// copy any leftovers to small buffer and deallocate
; 1514 : 			_Elem *_Ptr = _Bx._Ptr;
; 1515 : 			if (0 < _Newsize)

  00016	85 ed		 test	 ebp, ebp
  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	57		 push	 edi
  0001c	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  0001f	76 14		 jbe	 SHORT $L124779
  00021	56		 push	 esi

; 1516 : 				_Traits::copy(_Bx._Buf, _Ptr, _Newsize);

  00022	8b cd		 mov	 ecx, ebp
  00024	8b d1		 mov	 edx, ecx
  00026	c1 e9 02	 shr	 ecx, 2
  00029	8b f0		 mov	 esi, eax
  0002b	f3 a5		 rep movsd
  0002d	8b ca		 mov	 ecx, edx
  0002f	83 e1 03	 and	 ecx, 3
  00032	f3 a4		 rep movsb
  00034	5e		 pop	 esi
$L124779:

; 1517 : 			_Mybase::_Alval.deallocate(_Ptr, _Myres + 1);

  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003b	83 c4 04	 add	 esp, 4
  0003e	5f		 pop	 edi
$L124782:

; 1518 : 			}
; 1519 : 		_Myres = _BUF_SIZE - 1;
; 1520 : 		_Eos(_Newsize);

  0003f	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00042	c7 43 18 0f 00
	00 00		 mov	 DWORD PTR [ebx+24], 15	; 0000000fH
  00049	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0004e	5d		 pop	 ebp
  0004f	5b		 pop	 ebx

; 1521 : 		}

  00050	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
EXTRN	?_Xran@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xran
; Function compile flags: /Ogty
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 792  : 		{	// erase elements [_Off, _Off + _Count)

  00000	55		 push	 ebp

; 793  : 		if (_Mysize < _Off)

  00001	8b 6c 24 08	 mov	 ebp, DWORD PTR __Off$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	39 6e 14	 cmp	 DWORD PTR [esi+20], ebp
  0000b	57		 push	 edi
  0000c	73 05		 jae	 SHORT $L119054

; 794  : 			_String_base::_Xran();	// _Off off end

  0000e	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L119054:

; 795  : 		if (_Mysize - _Off < _Count)

  00013	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00016	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  0001a	2b c5		 sub	 eax, ebp
  0001c	3b c7		 cmp	 eax, edi
  0001e	73 02		 jae	 SHORT $L119055

; 796  : 			_Count = _Mysize - _Off;	// trim _Count

  00020	8b f8		 mov	 edi, eax
$L119055:

; 797  : 		if (0 < _Count)

  00022	85 ff		 test	 edi, edi
  00024	76 47		 jbe	 SHORT $L124848

; 798  : 			{	// move elements down
; 799  : 			_Traits::move(_Myptr() + _Off, _Myptr() + _Off + _Count,
; 800  : 				_Mysize - _Off - _Count);

  00026	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00029	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0002c	53		 push	 ebx
  0002d	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00030	72 04		 jb	 SHORT $L124814
  00032	8b 13		 mov	 edx, DWORD PTR [ebx]
  00034	eb 02		 jmp	 SHORT $L124815
$L124814:
  00036	8b d3		 mov	 edx, ebx
$L124815:
  00038	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0003b	72 04		 jb	 SHORT $L124821
  0003d	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0003f	eb 02		 jmp	 SHORT $L124822
$L124821:
  00041	8b cb		 mov	 ecx, ebx
$L124822:
  00043	2b c7		 sub	 eax, edi

; 803  : 			}
; 804  : 		return (*this);

  00045	03 d5		 add	 edx, ebp
  00047	50		 push	 eax
  00048	03 d7		 add	 edx, edi
  0004a	52		 push	 edx
  0004b	03 cd		 add	 ecx, ebp
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 _memmove
  00053	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00056	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00059	2b c7		 sub	 eax, edi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00061	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00064	72 02		 jb	 SHORT $L124845

; 801  : 			size_type _Newsize = _Mysize - _Count;
; 802  : 			_Eos(_Newsize);

  00066	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$L124845:
  00068	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0
  0006c	5b		 pop	 ebx
$L124848:
  0006d	5f		 pop	 edi

; 803  : 			}
; 804  : 		return (*this);

  0006e	8b c6		 mov	 eax, esi
  00070	5e		 pop	 esi
  00071	5d		 pop	 ebp

; 805  : 		}

  00072	c2 08 00	 ret	 8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	__CxxThrowException@8:NEAR
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T125056 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
$T125058 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L124856
$T125059 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L124854
$T125057 DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:$T125058
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:$T125059
$T125050 DD	019930520H
	DD	04H
	DD	FLAT:$T125056
	DD	02H
	DD	FLAT:$T125057
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 1444 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1445 : 		size_type _Newres = _Newsize | _ALLOC_MASK;

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	8b d8		 mov	 ebx, eax
  00022	83 cb 0f	 or	 ebx, 15			; 0000000fH

; 1446 : 		if (max_size() < _Newres)

  00025	83 fb fe	 cmp	 ebx, -2			; fffffffeH
  00028	57		 push	 edi
  00029	8b f1		 mov	 esi, ecx
  0002b	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00031	76 04		 jbe	 SHORT $L120172

; 1447 : 			_Newres = _Newsize;	// undo roundup if too big

  00033	8b d8		 mov	 ebx, eax

; 1448 : 		else if (_Newres / 3 < _Myres / 2

  00035	eb 22		 jmp	 SHORT $L120174
$L120172:

; 1449 : 			&& _Myres <= max_size() - _Myres / 2)

  00037	8b 7e 18	 mov	 edi, DWORD PTR [esi+24]
  0003a	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  0003f	f7 e3		 mul	 ebx
  00041	8b cf		 mov	 ecx, edi
  00043	d1 e9		 shr	 ecx, 1
  00045	d1 ea		 shr	 edx, 1
  00047	3b d1		 cmp	 edx, ecx
  00049	73 0e		 jae	 SHORT $L120174
  0004b	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00050	2b c1		 sub	 eax, ecx
  00052	3b f8		 cmp	 edi, eax
  00054	77 03		 ja	 SHORT $L120174

; 1450 : 			_Newres = _Myres + _Myres / 2;	// grow exponentially if possible

  00056	8d 1c 39	 lea	 ebx, DWORD PTR [ecx+edi]
$L120174:

; 1451 : 		_Elem *_Ptr;
; 1452 : 
; 1453 : 		_TRY_BEGIN
; 1454 : 			_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00059	8d 4b 01	 lea	 ecx, DWORD PTR [ebx+1]
  0005c	51		 push	 ecx
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00064	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00069	8b d0		 mov	 edx, eax
  0006b	83 c4 04	 add	 esp, 4
  0006e	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
  00071	eb 29		 jmp	 SHORT $L120176
$L124854:

; 1455 : 		_CATCH_ALL
; 1456 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  00073	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00076	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax

; 1457 : 			_TRY_BEGIN
; 1458 : 				_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00079	40		 inc	 eax
  0007a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0007d	50		 push	 eax
  0007e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00082	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00087	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  0008a	83 c4 04	 add	 esp, 4

; 1462 : 			_CATCH_END
; 1463 : 		_CATCH_END

  0008d	b8 00 00 00 00	 mov	 eax, $L125051
  00092	c3		 ret	 0
$L125051:
  00093	8b 5d e8	 mov	 ebx, DWORD PTR __Newres$[ebp]
  00096	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  00099	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$L120176:

; 1464 : 
; 1465 : 		if (0 < _Oldlen)

  0009c	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  0009f	85 c9		 test	 ecx, ecx
  000a1	76 24		 jbe	 SHORT $L124974

; 1466 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

  000a3	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000a7	72 05		 jb	 SHORT $L124969
  000a9	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  000ac	eb 03		 jmp	 SHORT $L124970
$L124969:
  000ae	83 c6 04	 add	 esi, 4
$L124970:
  000b1	8b c1		 mov	 eax, ecx
  000b3	c1 e9 02	 shr	 ecx, 2
  000b6	8b fa		 mov	 edi, edx
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb
  000c1	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  000c4	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
$L124974:

; 1467 : 		_Tidy(true);

  000c7	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000cb	72 12		 jb	 SHORT $L125010
  000cd	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000d0	51		 push	 ecx
  000d1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000d6	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  000d9	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  000dc	83 c4 04	 add	 esp, 4
$L125010:

; 1468 : 		_Bx._Ptr = _Ptr;
; 1469 : 		_Myres = _Newres;
; 1470 : 		_Eos(_Oldlen);

  000df	83 fb 10	 cmp	 ebx, 16			; 00000010H
  000e2	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000e5	c6 00 00	 mov	 BYTE PTR [eax], 0
  000e8	89 10		 mov	 DWORD PTR [eax], edx
  000ea	89 5e 18	 mov	 DWORD PTR [esi+24], ebx
  000ed	89 4e 14	 mov	 DWORD PTR [esi+20], ecx
  000f0	72 02		 jb	 SHORT $L125042
  000f2	8b c2		 mov	 eax, edx
$L125042:

; 1471 : 		}

  000f4	5f		 pop	 edi
  000f5	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0
  000f9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000fc	5e		 pop	 esi
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00104	5b		 pop	 ebx
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c2 08 00	 ret	 8
$L124856:

; 1459 : 			_CATCH_ALL
; 1460 : 			_Tidy(true);	// failed again, discard storage and reraise

  0010b	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  0010e	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00112	72 0c		 jb	 SHORT $L124963
  00114	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00117	52		 push	 edx
  00118	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0011d	83 c4 04	 add	 esp, 4
$L124963:

; 1461 : 			_RERAISE;

  00120	6a 00		 push	 0
  00122	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00129	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00130	6a 00		 push	 0
  00132	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00136	e8 00 00 00 00	 call	 __CxxThrowException@8
$L125061:
$L125055:
  0013b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T125050
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 456  : 		{	// destroy the string

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 457  : 		_Tidy(true);

  00003	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00007	72 0c		 jb	 SHORT $L125106
  00009	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	83 c4 04	 add	 esp, 4
$L125106:
  00015	33 c0		 xor	 eax, eax
  00017	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  0001e	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00021	88 46 04	 mov	 BYTE PTR [esi+4], al
  00024	5e		 pop	 esi

; 458  : 		}

  00025	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
EXTRN	?_Xlen@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xlen
; Function compile flags: /Ogty
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 1480 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	56		 push	 esi

; 1481 : 		if (max_size() < _Newsize)

  00002	8b 74 24 0c	 mov	 esi, DWORD PTR __Newsize$[esp+4]
  00006	83 fe fe	 cmp	 esi, -2			; fffffffeH
  00009	8b e9		 mov	 ebp, ecx
  0000b	76 05		 jbe	 SHORT $L119063

; 1482 : 			_String_base::_Xlen();	// result too long

  0000d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L119063:

; 1483 : 		if (_Myres < _Newsize)

  00012	8b 45 18	 mov	 eax, DWORD PTR [ebp+24]
  00015	3b c6		 cmp	 eax, esi
  00017	73 19		 jae	 SHORT $L119064

; 1484 : 			_Copy(_Newsize, _Mysize);	// reallocate to grow

  00019	8b 45 14	 mov	 eax, DWORD PTR [ebp+20]
  0001c	50		 push	 eax
  0001d	56		 push	 esi
  0001e	8b cd		 mov	 ecx, ebp
  00020	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  00025	33 c0		 xor	 eax, eax
  00027	3b c6		 cmp	 eax, esi
  00029	1b c0		 sbb	 eax, eax
  0002b	5e		 pop	 esi
  0002c	f7 d8		 neg	 eax
  0002e	5d		 pop	 ebp

; 1491 : 		}

  0002f	c2 08 00	 ret	 8
$L119064:

; 1485 : 		else if (_Trim && _Newsize < _BUF_SIZE)

  00032	8a 4c 24 10	 mov	 cl, BYTE PTR __Trim$[esp+4]
  00036	84 c9		 test	 cl, cl
  00038	74 5c		 je	 SHORT $L119066
  0003a	83 fe 10	 cmp	 esi, 16			; 00000010H
  0003d	73 57		 jae	 SHORT $L119066
  0003f	53		 push	 ebx

; 1486 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1487 : 				_Newsize < _Mysize ? _Newsize : _Mysize);

  00040	8b 5d 14	 mov	 ebx, DWORD PTR [ebp+20]
  00043	3b f3		 cmp	 esi, ebx
  00045	73 02		 jae	 SHORT $L125120
  00047	8b de		 mov	 ebx, esi
$L125120:
  00049	83 f8 10	 cmp	 eax, 16			; 00000010H
  0004c	72 2b		 jb	 SHORT $L125181
  0004e	85 db		 test	 ebx, ebx
  00050	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00053	57		 push	 edi
  00054	8d 7d 04	 lea	 edi, DWORD PTR [ebp+4]
  00057	76 16		 jbe	 SHORT $L125179
  00059	8b cb		 mov	 ecx, ebx
  0005b	8b d1		 mov	 edx, ecx
  0005d	c1 e9 02	 shr	 ecx, 2
  00060	8b f0		 mov	 esi, eax
  00062	f3 a5		 rep movsd
  00064	8b ca		 mov	 ecx, edx
  00066	83 e1 03	 and	 ecx, 3
  00069	f3 a4		 rep movsb
  0006b	8b 74 24 14	 mov	 esi, DWORD PTR __Newsize$[esp+12]
$L125179:
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00075	83 c4 04	 add	 esp, 4
  00078	5f		 pop	 edi
$L125181:
  00079	89 5d 14	 mov	 DWORD PTR [ebp+20], ebx

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  0007c	33 c0		 xor	 eax, eax
  0007e	c7 45 18 0f 00
	00 00		 mov	 DWORD PTR [ebp+24], 15	; 0000000fH
  00085	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0008a	3b c6		 cmp	 eax, esi
  0008c	5b		 pop	 ebx
  0008d	1b c0		 sbb	 eax, eax
  0008f	5e		 pop	 esi
  00090	f7 d8		 neg	 eax
  00092	5d		 pop	 ebp

; 1491 : 		}

  00093	c2 08 00	 ret	 8
$L119066:

; 1488 : 		else if (_Newsize == 0)

  00096	85 f6		 test	 esi, esi
  00098	75 23		 jne	 SHORT $L125211

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

  0009a	83 f8 10	 cmp	 eax, 16			; 00000010H
  0009d	89 75 14	 mov	 DWORD PTR [ebp+20], esi
  000a0	72 14		 jb	 SHORT $L125207
  000a2	8b 6d 04	 mov	 ebp, DWORD PTR [ebp+4]

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000a5	33 c0		 xor	 eax, eax
  000a7	3b c6		 cmp	 eax, esi
  000a9	1b c0		 sbb	 eax, eax
  000ab	5e		 pop	 esi
  000ac	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
  000b0	f7 d8		 neg	 eax
  000b2	5d		 pop	 ebp

; 1491 : 		}

  000b3	c2 08 00	 ret	 8

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

$L125207:
  000b6	83 c5 04	 add	 ebp, 4
  000b9	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
$L125211:

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000bd	33 c0		 xor	 eax, eax
  000bf	3b c6		 cmp	 eax, esi
  000c1	1b c0		 sbb	 eax, eax
  000c3	5e		 pop	 esi
  000c4	f7 d8		 neg	 eax
  000c6	5d		 pop	 ebp

; 1491 : 		}

  000c7	c2 08 00	 ret	 8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 590  : 		{	// assign _Right [_Roff, _Roff + _Count)

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi

; 591  : 		if (_Right.size() < _Roff)

  00003	8b 74 24 14	 mov	 esi, DWORD PTR __Roff$[esp+8]
  00007	57		 push	 edi
  00008	8b 7c 24 14	 mov	 edi, DWORD PTR __Right$[esp+12]
  0000c	39 77 14	 cmp	 DWORD PTR [edi+20], esi
  0000f	8b d9		 mov	 ebx, ecx
  00011	73 05		 jae	 SHORT $L117696

; 592  : 			_String_base::_Xran();	// _Roff off end

  00013	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L117696:

; 593  : 		size_type _Num = _Right.size() - _Roff;

  00018	8b 6f 14	 mov	 ebp, DWORD PTR [edi+20]

; 594  : 		if (_Count < _Num)

  0001b	8b 44 24 1c	 mov	 eax, DWORD PTR __Count$[esp+12]
  0001f	2b ee		 sub	 ebp, esi
  00021	3b c5		 cmp	 eax, ebp
  00023	73 02		 jae	 SHORT $L117698

; 595  : 			_Num = _Count;	// trim _Num to size

  00025	8b e8		 mov	 ebp, eax
$L117698:

; 596  : 
; 597  : 		if (this == &_Right)

  00027	3b df		 cmp	 ebx, edi
  00029	75 1f		 jne	 SHORT $L117699

; 598  : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

  0002b	6a ff		 push	 -1
  0002d	03 ee		 add	 ebp, esi
  0002f	55		 push	 ebp
  00030	8b cb		 mov	 ecx, ebx
  00032	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00037	56		 push	 esi
  00038	6a 00		 push	 0
  0003a	8b cb		 mov	 ecx, ebx
  0003c	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00044	8b c3		 mov	 eax, ebx
  00046	5b		 pop	 ebx

; 605  : 		}

  00047	c2 0c 00	 ret	 12			; 0000000cH
$L117699:

; 599  : 		else if (_Grow(_Num))

  0004a	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  0004d	76 07		 jbe	 SHORT $L125322
  0004f	8b cb		 mov	 ecx, ebx
  00051	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L125322:
  00056	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00059	3b c5		 cmp	 eax, ebp
  0005b	73 21		 jae	 SHORT $L125323
  0005d	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00060	50		 push	 eax
  00061	55		 push	 ebp
  00062	8b cb		 mov	 ecx, ebx
  00064	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00069	85 ed		 test	 ebp, ebp
$L125410:
  0006b	76 6d		 jbe	 SHORT $L125409

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

  0006d	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00070	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00075	3b c8		 cmp	 ecx, eax
  00077	72 2f		 jb	 SHORT $L125375
  00079	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0007c	eb 2d		 jmp	 SHORT $L125376

; 599  : 		else if (_Grow(_Num))

$L125323:
  0007e	85 ed		 test	 ebp, ebp
  00080	75 e9		 jne	 SHORT $L125410
  00082	83 f8 10	 cmp	 eax, 16			; 00000010H
  00085	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00088	72 0f		 jb	 SHORT $L125366
  0008a	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	c6 00 00	 mov	 BYTE PTR [eax], 0
  00092	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00093	8b c3		 mov	 eax, ebx
  00095	5b		 pop	 ebx

; 605  : 		}

  00096	c2 0c 00	 ret	 12			; 0000000cH

; 599  : 		else if (_Grow(_Num))

$L125366:
  00099	5f		 pop	 edi
  0009a	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0009d	5e		 pop	 esi
  0009e	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a1	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000a2	8b c3		 mov	 eax, ebx
  000a4	5b		 pop	 ebx

; 605  : 		}

  000a5	c2 0c 00	 ret	 12			; 0000000cH

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

$L125375:
  000a8	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
$L125376:
  000ab	39 43 18	 cmp	 DWORD PTR [ebx+24], eax
  000ae	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000b1	72 04		 jb	 SHORT $L125382
  000b3	8b 38		 mov	 edi, DWORD PTR [eax]
  000b5	eb 02		 jmp	 SHORT $L125383
$L125382:
  000b7	8b f8		 mov	 edi, eax
$L125383:
  000b9	03 f2		 add	 esi, edx
  000bb	8b cd		 mov	 ecx, ebp
  000bd	8b d1		 mov	 edx, ecx
  000bf	c1 e9 02	 shr	 ecx, 2
  000c2	f3 a5		 rep movsd
  000c4	8b ca		 mov	 ecx, edx
  000c6	83 e1 03	 and	 ecx, 3
  000c9	f3 a4		 rep movsb

; 602  : 			_Eos(_Num);

  000cb	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000cf	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000d2	72 02		 jb	 SHORT $L125406
  000d4	8b 00		 mov	 eax, DWORD PTR [eax]
$L125406:
  000d6	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L125409:
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000dd	8b c3		 mov	 eax, ebx
  000df	5b		 pop	 ebx

; 605  : 		}

  000e0	c2 0c 00	 ret	 12			; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Num$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 608  : 		{	// assign [_Ptr, _Ptr + _Num)

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx

; 609  : 		if (_Inside(_Ptr))

  00003	8b 53 18	 mov	 edx, DWORD PTR [ebx+24]
  00006	83 fa 10	 cmp	 edx, 16			; 00000010H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	72 05		 jb	 SHORT $L125436
  0000d	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00010	eb 03		 jmp	 SHORT $L125437
$L125436:
  00012	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$L125437:
  00015	8b 74 24 10	 mov	 esi, DWORD PTR __Ptr$[esp+8]
  00019	3b f0		 cmp	 esi, eax
  0001b	72 34		 jb	 SHORT $L119050
  0001d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00020	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00023	72 04		 jb	 SHORT $L125440
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	eb 02		 jmp	 SHORT $L125441
$L125440:
  00029	8b c8		 mov	 ecx, eax
$L125441:
  0002b	8b 7b 14	 mov	 edi, DWORD PTR [ebx+20]
  0002e	03 f9		 add	 edi, ecx
  00030	3b fe		 cmp	 edi, esi
  00032	76 1d		 jbe	 SHORT $L119050

; 610  : 			return (assign(*this, _Ptr - _Myptr(), _Num));	// substring

  00034	83 fa 10	 cmp	 edx, 16			; 00000010H
  00037	72 02		 jb	 SHORT $L125449
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$L125449:
  0003b	8b 4c 24 14	 mov	 ecx, DWORD PTR __Num$[esp+8]
  0003f	51		 push	 ecx
  00040	2b f0		 sub	 esi, eax
  00042	56		 push	 esi
  00043	53		 push	 ebx
  00044	8b cb		 mov	 ecx, ebx
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx

; 618  : 		}

  0004e	c2 08 00	 ret	 8
$L119050:
  00051	55		 push	 ebp

; 611  : 
; 612  : 		if (_Grow(_Num))

  00052	8b 6c 24 18	 mov	 ebp, DWORD PTR __Num$[esp+12]
  00056	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  00059	76 07		 jbe	 SHORT $L125547
  0005b	8b cb		 mov	 ecx, ebx
  0005d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L125547:
  00062	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00065	3b c5		 cmp	 eax, ebp
  00067	73 1b		 jae	 SHORT $L125548
  00069	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  0006c	52		 push	 edx
  0006d	55		 push	 ebp
  0006e	8b cb		 mov	 ecx, ebx
  00070	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00075	85 ed		 test	 ebp, ebp
$L125628:
  00077	76 68		 jbe	 SHORT $L125625

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

  00079	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  0007d	72 2f		 jb	 SHORT $L125600
  0007f	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
  00082	eb 2d		 jmp	 SHORT $L125601

; 611  : 
; 612  : 		if (_Grow(_Num))

$L125548:
  00084	85 ed		 test	 ebp, ebp
  00086	75 ef		 jne	 SHORT $L125628
  00088	83 f8 10	 cmp	 eax, 16			; 00000010H
  0008b	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  0008e	72 0f		 jb	 SHORT $L125591
  00090	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00093	5d		 pop	 ebp
  00094	5f		 pop	 edi
  00095	c6 00 00	 mov	 BYTE PTR [eax], 0
  00098	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  00099	8b c3		 mov	 eax, ebx
  0009b	5b		 pop	 ebx

; 618  : 		}

  0009c	c2 08 00	 ret	 8

; 611  : 
; 612  : 		if (_Grow(_Num))

$L125591:
  0009f	5d		 pop	 ebp
  000a0	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000a3	5f		 pop	 edi
  000a4	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a7	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000a8	8b c3		 mov	 eax, ebx
  000aa	5b		 pop	 ebx

; 618  : 		}

  000ab	c2 08 00	 ret	 8

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

$L125600:
  000ae	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
$L125601:
  000b1	8b cd		 mov	 ecx, ebp
  000b3	8b c1		 mov	 eax, ecx
  000b5	c1 e9 02	 shr	 ecx, 2
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb

; 615  : 			_Eos(_Num);

  000c1	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000c5	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000c8	72 10		 jb	 SHORT $L125623
  000ca	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000cd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
  000d1	5d		 pop	 ebp
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000d4	8b c3		 mov	 eax, ebx
  000d6	5b		 pop	 ebx

; 618  : 		}

  000d7	c2 08 00	 ret	 8

; 615  : 			_Eos(_Num);

$L125623:
  000da	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000dd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L125625:
  000e1	5d		 pop	 ebp
  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000e4	8b c3		 mov	 eax, ebx
  000e6	5b		 pop	 ebx

; 618  : 		}

  000e7	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 323  : 		{	// construct by copying _Right

  00000	56		 push	 esi

; 324  : 		_Tidy();

  00001	33 c0		 xor	 eax, eax
  00003	8b f1		 mov	 esi, ecx

; 325  : 		assign(_Right, 0, npos);

  00005	6a ff		 push	 -1
  00007	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	50		 push	 eax
  00012	88 46 04	 mov	 BYTE PTR [esi+4], al
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Right$[esp+8]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 326  : 		}

  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 621  : 		{	// assign [_Ptr, <null>)

  00000	56		 push	 esi

; 622  : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __Ptr$[esp]
  00005	8b c6		 mov	 eax, esi
  00007	57		 push	 edi
  00008	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000b	eb 03 8d 49 00	 npad	 5
$L125701:
  00010	8a 10		 mov	 dl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 d2		 test	 dl, dl
  00015	75 f9		 jne	 SHORT $L125701
  00017	2b c7		 sub	 eax, edi
  00019	50		 push	 eax
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi

; 623  : 		}

  00022	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 361  : 		_Tidy();
; 362  : 		assign(_Ptr);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Ptr$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b c2		 mov	 eax, edx
  00009	57		 push	 edi
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00018	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  0001c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0001f	90		 npad	 1
$L125776:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L125776
  00027	2b c7		 sub	 eax, edi
  00029	50		 push	 eax
  0002a	52		 push	 edx
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00032	5f		 pop	 edi

; 363  : 		}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0CTBLGuildChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildChart::CTBLGuildChart
PUBLIC	?GetNumCol@CTBLGuildChart@@UAEHXZ		; CTBLGuildChart::GetNumCol
PUBLIC	?BindColumns@CTBLGuildChart@@UAEFXZ		; CTBLGuildChart::BindColumns
PUBLIC	??_7CTBLGuildChart@@6B@				; CTBLGuildChart::`vftable'
PUBLIC	??_GCTBLGuildChart@@UAEPAXI@Z			; CTBLGuildChart::`scalar deleting destructor'
PUBLIC	??_C@_0LA@NGEIOEAO@SELECT?5bLevel?0?5dwEXP?0?5bMaxCnt?0?5b@ ; `string'
EXTRN	??_ECTBLGuildChart@@UAEPAXI@Z:NEAR		; CTBLGuildChart::`vector deleting destructor'
EXTRN	?GetNumParam@CSqlBase@@UAEHXZ:NEAR		; CSqlBase::GetNumParam
EXTRN	??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z:NEAR ; CSqlQuery::CSqlQuery
EXTRN	?AllocStatement@CSqlQuery@@UAEHXZ:NEAR		; CSqlQuery::AllocStatement
EXTRN	?BindParameters@CSqlQuery@@UAEFH@Z:NEAR		; CSqlQuery::BindParameters
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T125955 DD	0ffffffffH
	DD	FLAT:$L125781
$T125952 DD	019930520H
	DD	01H
	DD	FLAT:$T125955
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0LA@NGEIOEAO@SELECT?5bLevel?0?5dwEXP?0?5bMaxCnt?0?5b@
CONST	SEGMENT
??_C@_0LA@NGEIOEAO@SELECT?5bLevel?0?5dwEXP?0?5bMaxCnt?0?5b@ DB 'SELECT bL'
	DB	'evel, dwEXP, bMaxCnt, bMinCnt, bCabinetCnt, bTacticsCnt, bBat'
	DB	'tleSetCnt, bGuardCnt, bRoyalGuardCnt, bTurretCnt, bPeer1, bPe'
	DB	'er2, bPeer3, bPeer4, bPeer5 FROM TGUILDCHART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLGuildChart@@6B@
CONST	SEGMENT
??_7CTBLGuildChart@@6B@ DD FLAT:??_ECTBLGuildChart@@UAEPAXI@Z ; CTBLGuildChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLGuildChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLGuildChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLGuildChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T125780 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLGuildChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLGuildChart::CTBLGuildChart, COMDAT
; _this$ = ecx

; 21   : DEF_QUERY( CTBLGuildChart, _T("SELECT bLevel, dwEXP, bMaxCnt, bMinCnt, bCabinetCnt, bTacticsCnt, bBattleSetCnt, bGuardCnt, bRoyalGuardCnt, bTurretCnt, bPeer1, bPeer2, bPeer3, bPeer4, bPeer5 FROM TGUILDCHART"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLGuildChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0LA@NGEIOEAO@SELECT?5bLevel?0?5dwEXP?0?5bMaxCnt?0?5b@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T125780[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLGuildChart@@6B@
  0005e	72 0d		 jb	 SHORT $L125953
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L125953:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L125781:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLGuildChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T125952
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLGuildChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLGuildChart::CTBLGuildChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLGuildChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLGuildChart@@UAEHXZ PROC NEAR		; CTBLGuildChart::GetNumCol, COMDAT
; _this$ = ecx

; 23   : BEGIN_COLUMN(15)

  00000	b8 0f 00 00 00	 mov	 eax, 15			; 0000000fH
  00005	c3		 ret	 0
?GetNumCol@CTBLGuildChart@@UAEHXZ ENDP			; CTBLGuildChart::GetNumCol
_TEXT	ENDS
EXTRN	?BindCol@CSqlBase@@QAEFFPAK@Z:NEAR		; CSqlBase::BindCol
EXTRN	?BindCol@CSqlBase@@QAEFFPAE@Z:NEAR		; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindColumns@CTBLGuildChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLGuildChart@@UAEFXZ PROC NEAR		; CTBLGuildChart::BindColumns, COMDAT
; _this$ = ecx

; 23   : BEGIN_COLUMN(15)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 24   : 	COLUMN_ENTRY(m_bLevel)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L109724
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 38 01 00
	00		 jne	 $L109720
$L109724:

; 25   : 	COLUMN_ENTRY(m_dwEXP)

  00020	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L109725
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 19 01 00
	00		 jne	 $L109720
$L109725:

; 26   : 	COLUMN_ENTRY(m_bMaxCnt)

  0003f	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L109726
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 fa 00 00
	00		 jne	 $L109720
$L109726:

; 27   : 	COLUMN_ENTRY(m_bMinCnt)

  0005e	8d 86 35 0c 00
	00		 lea	 eax, DWORD PTR [esi+3125]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L109727
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 db 00 00
	00		 jne	 $L109720
$L109727:

; 28   : 	COLUMN_ENTRY(m_bCabinetCnt)

  0007d	8d 8e 36 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3126]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L109728
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 bc 00 00
	00		 jne	 $L109720
$L109728:

; 29   : 	COLUMN_ENTRY(m_bTacticsCnt)

  0009c	8d 96 37 0c 00
	00		 lea	 edx, DWORD PTR [esi+3127]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L109729
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 9d 00 00
	00		 jne	 $L109720
$L109729:

; 30   : 	COLUMN_ENTRY(m_bBattleSetCnt)

  000bb	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 0a		 je	 SHORT $L109730
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	0f 85 7e 00 00
	00		 jne	 $L109720
$L109730:

; 31   : 	COLUMN_ENTRY(m_bGuardCnt)

  000da	8d 8e 39 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3129]
  000e0	51		 push	 ecx
  000e1	6a 08		 push	 8
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ea	66 85 c0	 test	 ax, ax
  000ed	74 06		 je	 SHORT $L109731
  000ef	66 3d 01 00	 cmp	 ax, 1
  000f3	75 63		 jne	 SHORT $L109720
$L109731:

; 32   : 	COLUMN_ENTRY(m_bRoyalGuardCnt)

  000f5	8d 96 3a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3130]
  000fb	52		 push	 edx
  000fc	6a 09		 push	 9
  000fe	8b ce		 mov	 ecx, esi
  00100	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00105	66 85 c0	 test	 ax, ax
  00108	74 06		 je	 SHORT $L109732
  0010a	66 3d 01 00	 cmp	 ax, 1
  0010e	75 48		 jne	 SHORT $L109720
$L109732:
  00110	53		 push	 ebx

; 33   : 	COLUMN_ENTRY(m_bTurretCnt)

  00111	8d 86 3b 0c 00
	00		 lea	 eax, DWORD PTR [esi+3131]
  00117	50		 push	 eax
  00118	6a 0a		 push	 10			; 0000000aH
  0011a	8b ce		 mov	 ecx, esi
  0011c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00121	66 85 c0	 test	 ax, ax
  00124	bb 0b 00 00 00	 mov	 ebx, 11			; 0000000bH
  00129	74 06		 je	 SHORT $L109733
  0012b	66 3d 01 00	 cmp	 ax, 1
  0012f	75 26		 jne	 SHORT $L125967
$L109733:
  00131	57		 push	 edi

; 34   : 	for(int i=0; i<MAX_GUILD_PEER_COUNT; i++)

  00132	33 ff		 xor	 edi, edi
$L109736:
  00134	8d 8c 3e 3c 0c
	00 00		 lea	 ecx, DWORD PTR [esi+edi+3132]

; 35   : 	{
; 36   : 		COLUMN_ENTRY(m_bPeer[i])

  0013b	51		 push	 ecx
  0013c	53		 push	 ebx
  0013d	8b ce		 mov	 ecx, esi
  0013f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00144	43		 inc	 ebx
  00145	66 85 c0	 test	 ax, ax
  00148	74 06		 je	 SHORT $L109737
  0014a	66 3d 01 00	 cmp	 ax, 1
  0014e	75 06		 jne	 SHORT $L125968
$L109737:

; 34   : 	for(int i=0; i<MAX_GUILD_PEER_COUNT; i++)

  00150	47		 inc	 edi
  00151	83 ff 05	 cmp	 edi, 5
  00154	7c de		 jl	 SHORT $L109736
$L125968:
  00156	5f		 pop	 edi
$L125967:
  00157	5b		 pop	 ebx
$L109720:
  00158	5e		 pop	 esi

; 37   : 	}
; 38   : END_COL()

  00159	c3		 ret	 0
?BindColumns@CTBLGuildChart@@UAEFXZ ENDP		; CTBLGuildChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLGuildChart@@UAE@XZ			; CTBLGuildChart::~CTBLGuildChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLGuildChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLGuildChart@@UAEPAXI@Z PROC NEAR			; CTBLGuildChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLGuildChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L125972
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L125972:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLGuildChart@@UAEPAXI@Z ENDP			; CTBLGuildChart::`scalar deleting destructor'
_TEXT	ENDS
EXTRN	??1CSqlQuery@@UAE@XZ:NEAR			; CSqlQuery::~CSqlQuery
; Function compile flags: /Ogty
;	COMDAT ??1CTBLGuildChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLGuildChart@@UAE@XZ PROC NEAR			; CTBLGuildChart::~CTBLGuildChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLGuildChart@@UAE@XZ ENDP				; CTBLGuildChart::~CTBLGuildChart
_TEXT	ENDS
PUBLIC	??0CTBLGuild@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuild::CTBLGuild
PUBLIC	?GetNumCol@CTBLGuild@@UAEHXZ			; CTBLGuild::GetNumCol
PUBLIC	?BindColumns@CTBLGuild@@UAEFXZ			; CTBLGuild::BindColumns
PUBLIC	??_7CTBLGuild@@6B@				; CTBLGuild::`vftable'
PUBLIC	??_GCTBLGuild@@UAEPAXI@Z			; CTBLGuild::`scalar deleting destructor'
PUBLIC	??_C@_0PN@CNPJMODI@SELECT?5?7dwID?0?5?7szName?0?5?7dwChief?0@ ; `string'
EXTRN	??_ECTBLGuild@@UAEPAXI@Z:NEAR			; CTBLGuild::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T126155 DD	0ffffffffH
	DD	FLAT:$L125981
$T126152 DD	019930520H
	DD	01H
	DD	FLAT:$T126155
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0PN@CNPJMODI@SELECT?5?7dwID?0?5?7szName?0?5?7dwChief?0@
CONST	SEGMENT
??_C@_0PN@CNPJMODI@SELECT?5?7dwID?0?5?7szName?0?5?7dwChief?0@ DB 'SELECT '
	DB	09H, 'dwID, ', 09H, 'szName, ', 09H, 'dwChief, ', 09H, 'bLevel'
	DB	', ', 09H, 'dwFame, ', 09H, 'dwFameColor, ', 09H, 'bMaxCabinet'
	DB	', ', 09H, 'dwGI, ', 09H, 'dwExp, ', 09H, 'bGPoint, ', 09H, 'b'
	DB	'Status, ', 09H, 'dwGold, ', 09H, 'dwSilver, ', 09H, 'dwCooper'
	DB	', ', 09H, 'bDisorg, ', 09H, 'dwTime, ', 09H, 'timeEstablish, '
	DB	09H, 'dwPvPTotalPoint, ', 09H, 'dwPvPUseablePoint, ', 09H, 'dw'
	DB	'PvPMonthPoint ', 09H, 'FROM TGUILDTABLE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLGuild@@6B@
CONST	SEGMENT
??_7CTBLGuild@@6B@ DD FLAT:??_ECTBLGuild@@UAEPAXI@Z	; CTBLGuild::`vftable'
	DD	FLAT:?GetNumCol@CTBLGuild@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLGuild@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLGuild@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T125980 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLGuild@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLGuild::CTBLGuild, COMDAT
; _this$ = ecx

; 86   : 	FROM TGUILDTABLE"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLGuild@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0PN@CNPJMODI@SELECT?5?7dwID?0?5?7szName?0?5?7dwChief?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T125980[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLGuild@@6B@
  0005e	72 0d		 jb	 SHORT $L126153
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L126153:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L125981:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLGuild@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T126152
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLGuild@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLGuild::CTBLGuild
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLGuild@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLGuild@@UAEHXZ PROC NEAR			; CTBLGuild::GetNumCol, COMDAT
; _this$ = ecx

; 88   : BEGIN_COLUMN(20)

  00000	b8 14 00 00 00	 mov	 eax, 20			; 00000014H
  00005	c3		 ret	 0
?GetNumCol@CTBLGuild@@UAEHXZ ENDP			; CTBLGuild::GetNumCol
_TEXT	ENDS
EXTRN	?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z:NEAR ; CSqlBase::BindCol
EXTRN	?BindColStr@CSqlBase@@QAEFFPADJ@Z:NEAR		; CSqlBase::BindColStr
; Function compile flags: /Ogty
;	COMDAT ?BindColumns@CTBLGuild@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLGuild@@UAEFXZ PROC NEAR		; CTBLGuild::BindColumns, COMDAT
; _this$ = ecx

; 88   : BEGIN_COLUMN(20)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 89   : 	COLUMN_ENTRY(m_dwID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L109799
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 2c 02 00
	00		 jne	 $L109795
$L109799:

; 90   : 	COLUMN_ENTRY_STR(m_szName)

  00020	6a 33		 push	 51			; 00000033H
  00022	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00028	51		 push	 ecx
  00029	6a 02		 push	 2
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00032	66 85 c0	 test	 ax, ax
  00035	74 0a		 je	 SHORT $L109800
  00037	66 3d 01 00	 cmp	 ax, 1
  0003b	0f 85 0b 02 00
	00		 jne	 $L109795
$L109800:

; 91   : 	COLUMN_ENTRY(m_dwChief)

  00041	8d 96 64 0c 00
	00		 lea	 edx, DWORD PTR [esi+3172]
  00047	52		 push	 edx
  00048	6a 03		 push	 3
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00051	66 85 c0	 test	 ax, ax
  00054	74 0a		 je	 SHORT $L109801
  00056	66 3d 01 00	 cmp	 ax, 1
  0005a	0f 85 ec 01 00
	00		 jne	 $L109795
$L109801:

; 92   : 	COLUMN_ENTRY(m_bLevel)

  00060	8d 86 68 0c 00
	00		 lea	 eax, DWORD PTR [esi+3176]
  00066	50		 push	 eax
  00067	6a 04		 push	 4
  00069	8b ce		 mov	 ecx, esi
  0006b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00070	66 85 c0	 test	 ax, ax
  00073	74 0a		 je	 SHORT $L109802
  00075	66 3d 01 00	 cmp	 ax, 1
  00079	0f 85 cd 01 00
	00		 jne	 $L109795
$L109802:

; 93   : 	COLUMN_ENTRY(m_dwFame)

  0007f	8d 8e 6c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3180]
  00085	51		 push	 ecx
  00086	6a 05		 push	 5
  00088	8b ce		 mov	 ecx, esi
  0008a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0008f	66 85 c0	 test	 ax, ax
  00092	74 0a		 je	 SHORT $L109803
  00094	66 3d 01 00	 cmp	 ax, 1
  00098	0f 85 ae 01 00
	00		 jne	 $L109795
$L109803:

; 94   : 	COLUMN_ENTRY(m_dwFameColor)

  0009e	8d 96 70 0c 00
	00		 lea	 edx, DWORD PTR [esi+3184]
  000a4	52		 push	 edx
  000a5	6a 06		 push	 6
  000a7	8b ce		 mov	 ecx, esi
  000a9	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000ae	66 85 c0	 test	 ax, ax
  000b1	74 0a		 je	 SHORT $L109804
  000b3	66 3d 01 00	 cmp	 ax, 1
  000b7	0f 85 8f 01 00
	00		 jne	 $L109795
$L109804:

; 95   : 	COLUMN_ENTRY(m_bMaxCabinet)

  000bd	8d 86 74 0c 00
	00		 lea	 eax, DWORD PTR [esi+3188]
  000c3	50		 push	 eax
  000c4	6a 07		 push	 7
  000c6	8b ce		 mov	 ecx, esi
  000c8	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000cd	66 85 c0	 test	 ax, ax
  000d0	74 0a		 je	 SHORT $L109805
  000d2	66 3d 01 00	 cmp	 ax, 1
  000d6	0f 85 70 01 00
	00		 jne	 $L109795
$L109805:

; 96   : 	COLUMN_ENTRY(m_dwGI)

  000dc	8d 8e 78 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3192]
  000e2	51		 push	 ecx
  000e3	6a 08		 push	 8
  000e5	8b ce		 mov	 ecx, esi
  000e7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000ec	66 85 c0	 test	 ax, ax
  000ef	74 0a		 je	 SHORT $L109806
  000f1	66 3d 01 00	 cmp	 ax, 1
  000f5	0f 85 51 01 00
	00		 jne	 $L109795
$L109806:

; 97   : 	COLUMN_ENTRY(m_dwExp)

  000fb	8d 96 7c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3196]
  00101	52		 push	 edx
  00102	6a 09		 push	 9
  00104	8b ce		 mov	 ecx, esi
  00106	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0010b	66 85 c0	 test	 ax, ax
  0010e	74 0a		 je	 SHORT $L109807
  00110	66 3d 01 00	 cmp	 ax, 1
  00114	0f 85 32 01 00
	00		 jne	 $L109795
$L109807:

; 98   : 	COLUMN_ENTRY(m_bGPoint)

  0011a	8d 86 80 0c 00
	00		 lea	 eax, DWORD PTR [esi+3200]
  00120	50		 push	 eax
  00121	6a 0a		 push	 10			; 0000000aH
  00123	8b ce		 mov	 ecx, esi
  00125	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0012a	66 85 c0	 test	 ax, ax
  0012d	74 0a		 je	 SHORT $L109808
  0012f	66 3d 01 00	 cmp	 ax, 1
  00133	0f 85 13 01 00
	00		 jne	 $L109795
$L109808:

; 99   : 	COLUMN_ENTRY(m_bStatus)

  00139	8d 8e 81 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3201]
  0013f	51		 push	 ecx
  00140	6a 0b		 push	 11			; 0000000bH
  00142	8b ce		 mov	 ecx, esi
  00144	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00149	66 85 c0	 test	 ax, ax
  0014c	74 0a		 je	 SHORT $L109809
  0014e	66 3d 01 00	 cmp	 ax, 1
  00152	0f 85 f4 00 00
	00		 jne	 $L109795
$L109809:

; 100  : 	COLUMN_ENTRY(m_dwGold)

  00158	8d 96 84 0c 00
	00		 lea	 edx, DWORD PTR [esi+3204]
  0015e	52		 push	 edx
  0015f	6a 0c		 push	 12			; 0000000cH
  00161	8b ce		 mov	 ecx, esi
  00163	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00168	66 85 c0	 test	 ax, ax
  0016b	74 0a		 je	 SHORT $L109810
  0016d	66 3d 01 00	 cmp	 ax, 1
  00171	0f 85 d5 00 00
	00		 jne	 $L109795
$L109810:

; 101  : 	COLUMN_ENTRY(m_dwSilver)

  00177	8d 86 88 0c 00
	00		 lea	 eax, DWORD PTR [esi+3208]
  0017d	50		 push	 eax
  0017e	6a 0d		 push	 13			; 0000000dH
  00180	8b ce		 mov	 ecx, esi
  00182	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00187	66 85 c0	 test	 ax, ax
  0018a	74 0a		 je	 SHORT $L109811
  0018c	66 3d 01 00	 cmp	 ax, 1
  00190	0f 85 b6 00 00
	00		 jne	 $L109795
$L109811:

; 102  : 	COLUMN_ENTRY(m_dwCooper)

  00196	8d 8e 8c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3212]
  0019c	51		 push	 ecx
  0019d	6a 0e		 push	 14			; 0000000eH
  0019f	8b ce		 mov	 ecx, esi
  001a1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  001a6	66 85 c0	 test	 ax, ax
  001a9	74 0a		 je	 SHORT $L109812
  001ab	66 3d 01 00	 cmp	 ax, 1
  001af	0f 85 97 00 00
	00		 jne	 $L109795
$L109812:

; 103  : 	COLUMN_ENTRY(m_bDisorg)

  001b5	8d 96 90 0c 00
	00		 lea	 edx, DWORD PTR [esi+3216]
  001bb	52		 push	 edx
  001bc	6a 0f		 push	 15			; 0000000fH
  001be	8b ce		 mov	 ecx, esi
  001c0	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001c5	66 85 c0	 test	 ax, ax
  001c8	74 06		 je	 SHORT $L109813
  001ca	66 3d 01 00	 cmp	 ax, 1
  001ce	75 7c		 jne	 SHORT $L109795
$L109813:

; 104  : 	COLUMN_ENTRY(m_dwTime)

  001d0	8d 86 94 0c 00
	00		 lea	 eax, DWORD PTR [esi+3220]
  001d6	50		 push	 eax
  001d7	6a 10		 push	 16			; 00000010H
  001d9	8b ce		 mov	 ecx, esi
  001db	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  001e0	66 85 c0	 test	 ax, ax
  001e3	74 06		 je	 SHORT $L109814
  001e5	66 3d 01 00	 cmp	 ax, 1
  001e9	75 61		 jne	 SHORT $L109795
$L109814:

; 105  : 	COLUMN_ENTRY(m_timeEstablish)

  001eb	8d 8e 98 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3224]
  001f1	51		 push	 ecx
  001f2	6a 11		 push	 17			; 00000011H
  001f4	8b ce		 mov	 ecx, esi
  001f6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
  001fb	66 85 c0	 test	 ax, ax
  001fe	74 06		 je	 SHORT $L109815
  00200	66 3d 01 00	 cmp	 ax, 1
  00204	75 46		 jne	 SHORT $L109795
$L109815:

; 106  : 	COLUMN_ENTRY(m_dwPvPTotalPoint)

  00206	8d 96 a8 0c 00
	00		 lea	 edx, DWORD PTR [esi+3240]
  0020c	52		 push	 edx
  0020d	6a 12		 push	 18			; 00000012H
  0020f	8b ce		 mov	 ecx, esi
  00211	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00216	66 85 c0	 test	 ax, ax
  00219	74 06		 je	 SHORT $L109816
  0021b	66 3d 01 00	 cmp	 ax, 1
  0021f	75 2b		 jne	 SHORT $L109795
$L109816:

; 107  : 	COLUMN_ENTRY(m_dwPvPUseablePoint)

  00221	8d 86 ac 0c 00
	00		 lea	 eax, DWORD PTR [esi+3244]
  00227	50		 push	 eax
  00228	6a 13		 push	 19			; 00000013H
  0022a	8b ce		 mov	 ecx, esi
  0022c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00231	66 85 c0	 test	 ax, ax
  00234	74 06		 je	 SHORT $L109817
  00236	66 3d 01 00	 cmp	 ax, 1
  0023a	75 10		 jne	 SHORT $L109795
$L109817:

; 108  : 	COLUMN_ENTRY(m_dwPvPMonthPoint)

  0023c	8d 8e b0 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3248]
  00242	51		 push	 ecx
  00243	6a 14		 push	 20			; 00000014H
  00245	8b ce		 mov	 ecx, esi
  00247	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L109795:
  0024c	5e		 pop	 esi

; 109  : END_COL()

  0024d	c3		 ret	 0
?BindColumns@CTBLGuild@@UAEFXZ ENDP			; CTBLGuild::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLGuild@@UAE@XZ				; CTBLGuild::~CTBLGuild
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLGuild@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLGuild@@UAEPAXI@Z PROC NEAR			; CTBLGuild::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLGuild@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L126167
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L126167:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLGuild@@UAEPAXI@Z ENDP				; CTBLGuild::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLGuild@@UAE@XZ
_TEXT	SEGMENT
??1CTBLGuild@@UAE@XZ PROC NEAR				; CTBLGuild::~CTBLGuild, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLGuild@@UAE@XZ ENDP				; CTBLGuild::~CTBLGuild
_TEXT	ENDS
PUBLIC	??0CTBLGuildLoad@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildLoad::CTBLGuildLoad
PUBLIC	?GetNumCol@CTBLGuildLoad@@UAEHXZ		; CTBLGuildLoad::GetNumCol
PUBLIC	?BindColumns@CTBLGuildLoad@@UAEFXZ		; CTBLGuildLoad::BindColumns
PUBLIC	?GetNumParam@CTBLGuildLoad@@UAEHXZ		; CTBLGuildLoad::GetNumParam
PUBLIC	?BindParameters@CTBLGuildLoad@@UAEFH@Z		; CTBLGuildLoad::BindParameters
PUBLIC	??_7CTBLGuildLoad@@6B@				; CTBLGuildLoad::`vftable'
PUBLIC	??_GCTBLGuildLoad@@UAEPAXI@Z			; CTBLGuildLoad::`scalar deleting destructor'
PUBLIC	??_C@_0BDG@GIFBJBOF@SELECT?5?7?7?5?5dwID?0?5?7?7?5?5szName?0?5?7?7?5@ ; `string'
EXTRN	??_ECTBLGuildLoad@@UAEPAXI@Z:NEAR		; CTBLGuildLoad::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T126350 DD	0ffffffffH
	DD	FLAT:$L126176
$T126347 DD	019930520H
	DD	01H
	DD	FLAT:$T126350
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BDG@GIFBJBOF@SELECT?5?7?7?5?5dwID?0?5?7?7?5?5szName?0?5?7?7?5@
CONST	SEGMENT
??_C@_0BDG@GIFBJBOF@SELECT?5?7?7?5?5dwID?0?5?7?7?5?5szName?0?5?7?7?5@ DB 'S'
	DB	'ELECT ', 09H, 09H, '  dwID, ', 09H, 09H, '  szName, ', 09H, 09H
	DB	'  dwChief, ', 09H, 09H, '  bLevel, ', 09H, 09H, '  dwFame, ', 09H
	DB	09H, '  dwFameColor, ', 09H, 09H, '  bMaxCabinet, ', 09H, 09H, ' '
	DB	' dwGI, ', 09H, 09H, '  dwExp, ', 09H, 09H, '  bGPoint, ', 09H
	DB	09H, '  bStatus, ', 09H, 09H, '  dwGold, ', 09H, 09H, '  dwSil'
	DB	'ver, ', 09H, 09H, '  dwCooper, ', 09H, 09H, '  bDisorg, ', 09H
	DB	09H, '  dwTime, ', 09H, 09H, '  timeEstablish, ', 09H, 09H, ' '
	DB	' dwPvPTotalPoint, ', 09H, 09H, '  dwPvPUseablePoint ', 09H, 09H
	DB	'  FROM TGUILDTABLE WHERE dwID = ?', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLGuildLoad@@6B@
CONST	SEGMENT
??_7CTBLGuildLoad@@6B@ DD FLAT:??_ECTBLGuildLoad@@UAEPAXI@Z ; CTBLGuildLoad::`vftable'
	DD	FLAT:?GetNumCol@CTBLGuildLoad@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLGuildLoad@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLGuildLoad@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLGuildLoad@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLGuildLoad@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T126175 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLGuildLoad@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLGuildLoad::CTBLGuildLoad, COMDAT
; _this$ = ecx

; 156  : 		  FROM TGUILDTABLE WHERE dwID = ?"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLGuildLoad@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BDG@GIFBJBOF@SELECT?5?7?7?5?5dwID?0?5?7?7?5?5szName?0?5?7?7?5@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T126175[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLGuildLoad@@6B@
  0005e	72 0d		 jb	 SHORT $L126348
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L126348:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L126176:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLGuildLoad@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T126347
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLGuildLoad@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLGuildLoad::CTBLGuildLoad
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLGuildLoad@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLGuildLoad@@UAEHXZ PROC NEAR		; CTBLGuildLoad::GetNumCol, COMDAT
; _this$ = ecx

; 158  : BEGIN_COLUMN(19)

  00000	b8 13 00 00 00	 mov	 eax, 19			; 00000013H
  00005	c3		 ret	 0
?GetNumCol@CTBLGuildLoad@@UAEHXZ ENDP			; CTBLGuildLoad::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildLoad@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLGuildLoad@@UAEFXZ PROC NEAR		; CTBLGuildLoad::BindColumns, COMDAT
; _this$ = ecx

; 158  : BEGIN_COLUMN(19)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 159  : 	COLUMN_ENTRY(m_dwID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L109881
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 0d 02 00
	00		 jne	 $L109877
$L109881:

; 160  : 	COLUMN_ENTRY_STR(m_szName)

  00020	6a 33		 push	 51			; 00000033H
  00022	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00028	51		 push	 ecx
  00029	6a 02		 push	 2
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00032	66 85 c0	 test	 ax, ax
  00035	74 0a		 je	 SHORT $L109882
  00037	66 3d 01 00	 cmp	 ax, 1
  0003b	0f 85 ec 01 00
	00		 jne	 $L109877
$L109882:

; 161  : 	COLUMN_ENTRY(m_dwChief)

  00041	8d 96 68 0c 00
	00		 lea	 edx, DWORD PTR [esi+3176]
  00047	52		 push	 edx
  00048	6a 03		 push	 3
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00051	66 85 c0	 test	 ax, ax
  00054	74 0a		 je	 SHORT $L109883
  00056	66 3d 01 00	 cmp	 ax, 1
  0005a	0f 85 cd 01 00
	00		 jne	 $L109877
$L109883:

; 162  : 	COLUMN_ENTRY(m_bLevel)

  00060	8d 86 6c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3180]
  00066	50		 push	 eax
  00067	6a 04		 push	 4
  00069	8b ce		 mov	 ecx, esi
  0006b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00070	66 85 c0	 test	 ax, ax
  00073	74 0a		 je	 SHORT $L109884
  00075	66 3d 01 00	 cmp	 ax, 1
  00079	0f 85 ae 01 00
	00		 jne	 $L109877
$L109884:

; 163  : 	COLUMN_ENTRY(m_dwFame)

  0007f	8d 8e 70 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3184]
  00085	51		 push	 ecx
  00086	6a 05		 push	 5
  00088	8b ce		 mov	 ecx, esi
  0008a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0008f	66 85 c0	 test	 ax, ax
  00092	74 0a		 je	 SHORT $L109885
  00094	66 3d 01 00	 cmp	 ax, 1
  00098	0f 85 8f 01 00
	00		 jne	 $L109877
$L109885:

; 164  : 	COLUMN_ENTRY(m_dwFameColor)

  0009e	8d 96 74 0c 00
	00		 lea	 edx, DWORD PTR [esi+3188]
  000a4	52		 push	 edx
  000a5	6a 06		 push	 6
  000a7	8b ce		 mov	 ecx, esi
  000a9	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000ae	66 85 c0	 test	 ax, ax
  000b1	74 0a		 je	 SHORT $L109886
  000b3	66 3d 01 00	 cmp	 ax, 1
  000b7	0f 85 70 01 00
	00		 jne	 $L109877
$L109886:

; 165  : 	COLUMN_ENTRY(m_bMaxCabinet)

  000bd	8d 86 78 0c 00
	00		 lea	 eax, DWORD PTR [esi+3192]
  000c3	50		 push	 eax
  000c4	6a 07		 push	 7
  000c6	8b ce		 mov	 ecx, esi
  000c8	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000cd	66 85 c0	 test	 ax, ax
  000d0	74 0a		 je	 SHORT $L109887
  000d2	66 3d 01 00	 cmp	 ax, 1
  000d6	0f 85 51 01 00
	00		 jne	 $L109877
$L109887:

; 166  : 	COLUMN_ENTRY(m_dwGI)

  000dc	8d 8e 7c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3196]
  000e2	51		 push	 ecx
  000e3	6a 08		 push	 8
  000e5	8b ce		 mov	 ecx, esi
  000e7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000ec	66 85 c0	 test	 ax, ax
  000ef	74 0a		 je	 SHORT $L109888
  000f1	66 3d 01 00	 cmp	 ax, 1
  000f5	0f 85 32 01 00
	00		 jne	 $L109877
$L109888:

; 167  : 	COLUMN_ENTRY(m_dwExp)

  000fb	8d 96 80 0c 00
	00		 lea	 edx, DWORD PTR [esi+3200]
  00101	52		 push	 edx
  00102	6a 09		 push	 9
  00104	8b ce		 mov	 ecx, esi
  00106	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0010b	66 85 c0	 test	 ax, ax
  0010e	74 0a		 je	 SHORT $L109889
  00110	66 3d 01 00	 cmp	 ax, 1
  00114	0f 85 13 01 00
	00		 jne	 $L109877
$L109889:

; 168  : 	COLUMN_ENTRY(m_bGPoint)

  0011a	8d 86 84 0c 00
	00		 lea	 eax, DWORD PTR [esi+3204]
  00120	50		 push	 eax
  00121	6a 0a		 push	 10			; 0000000aH
  00123	8b ce		 mov	 ecx, esi
  00125	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0012a	66 85 c0	 test	 ax, ax
  0012d	74 0a		 je	 SHORT $L109890
  0012f	66 3d 01 00	 cmp	 ax, 1
  00133	0f 85 f4 00 00
	00		 jne	 $L109877
$L109890:

; 169  : 	COLUMN_ENTRY(m_bStatus)

  00139	8d 8e 85 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3205]
  0013f	51		 push	 ecx
  00140	6a 0b		 push	 11			; 0000000bH
  00142	8b ce		 mov	 ecx, esi
  00144	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00149	66 85 c0	 test	 ax, ax
  0014c	74 0a		 je	 SHORT $L109891
  0014e	66 3d 01 00	 cmp	 ax, 1
  00152	0f 85 d5 00 00
	00		 jne	 $L109877
$L109891:

; 170  : 	COLUMN_ENTRY(m_dwGold)

  00158	8d 96 88 0c 00
	00		 lea	 edx, DWORD PTR [esi+3208]
  0015e	52		 push	 edx
  0015f	6a 0c		 push	 12			; 0000000cH
  00161	8b ce		 mov	 ecx, esi
  00163	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00168	66 85 c0	 test	 ax, ax
  0016b	74 0a		 je	 SHORT $L109892
  0016d	66 3d 01 00	 cmp	 ax, 1
  00171	0f 85 b6 00 00
	00		 jne	 $L109877
$L109892:

; 171  : 	COLUMN_ENTRY(m_dwSilver)

  00177	8d 86 8c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3212]
  0017d	50		 push	 eax
  0017e	6a 0d		 push	 13			; 0000000dH
  00180	8b ce		 mov	 ecx, esi
  00182	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00187	66 85 c0	 test	 ax, ax
  0018a	74 0a		 je	 SHORT $L109893
  0018c	66 3d 01 00	 cmp	 ax, 1
  00190	0f 85 97 00 00
	00		 jne	 $L109877
$L109893:

; 172  : 	COLUMN_ENTRY(m_dwCooper)

  00196	8d 8e 90 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3216]
  0019c	51		 push	 ecx
  0019d	6a 0e		 push	 14			; 0000000eH
  0019f	8b ce		 mov	 ecx, esi
  001a1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  001a6	66 85 c0	 test	 ax, ax
  001a9	74 06		 je	 SHORT $L109894
  001ab	66 3d 01 00	 cmp	 ax, 1
  001af	75 7c		 jne	 SHORT $L109877
$L109894:

; 173  : 	COLUMN_ENTRY(m_bDisorg)

  001b1	8d 96 94 0c 00
	00		 lea	 edx, DWORD PTR [esi+3220]
  001b7	52		 push	 edx
  001b8	6a 0f		 push	 15			; 0000000fH
  001ba	8b ce		 mov	 ecx, esi
  001bc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001c1	66 85 c0	 test	 ax, ax
  001c4	74 06		 je	 SHORT $L109895
  001c6	66 3d 01 00	 cmp	 ax, 1
  001ca	75 61		 jne	 SHORT $L109877
$L109895:

; 174  : 	COLUMN_ENTRY(m_dwTime)

  001cc	8d 86 98 0c 00
	00		 lea	 eax, DWORD PTR [esi+3224]
  001d2	50		 push	 eax
  001d3	6a 10		 push	 16			; 00000010H
  001d5	8b ce		 mov	 ecx, esi
  001d7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  001dc	66 85 c0	 test	 ax, ax
  001df	74 06		 je	 SHORT $L109896
  001e1	66 3d 01 00	 cmp	 ax, 1
  001e5	75 46		 jne	 SHORT $L109877
$L109896:

; 175  : 	COLUMN_ENTRY(m_timeEstablish)

  001e7	8d 8e 9c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3228]
  001ed	51		 push	 ecx
  001ee	6a 11		 push	 17			; 00000011H
  001f0	8b ce		 mov	 ecx, esi
  001f2	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
  001f7	66 85 c0	 test	 ax, ax
  001fa	74 06		 je	 SHORT $L109897
  001fc	66 3d 01 00	 cmp	 ax, 1
  00200	75 2b		 jne	 SHORT $L109877
$L109897:

; 176  : 	COLUMN_ENTRY(m_dwPvPTotalPoint)

  00202	8d 96 ac 0c 00
	00		 lea	 edx, DWORD PTR [esi+3244]
  00208	52		 push	 edx
  00209	6a 12		 push	 18			; 00000012H
  0020b	8b ce		 mov	 ecx, esi
  0020d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00212	66 85 c0	 test	 ax, ax
  00215	74 06		 je	 SHORT $L109898
  00217	66 3d 01 00	 cmp	 ax, 1
  0021b	75 10		 jne	 SHORT $L109877
$L109898:

; 177  : 	COLUMN_ENTRY(m_dwPvPUseablePoint)

  0021d	8d 86 b0 0c 00
	00		 lea	 eax, DWORD PTR [esi+3248]
  00223	50		 push	 eax
  00224	6a 13		 push	 19			; 00000013H
  00226	8b ce		 mov	 ecx, esi
  00228	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L109877:
  0022d	5e		 pop	 esi

; 178  : END_COL()

  0022e	c3		 ret	 0
?BindColumns@CTBLGuildLoad@@UAEFXZ ENDP			; CTBLGuildLoad::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLGuildLoad@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLGuildLoad@@UAEHXZ PROC NEAR		; CTBLGuildLoad::GetNumParam, COMDAT
; _this$ = ecx

; 180  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLGuildLoad@@UAEHXZ ENDP			; CTBLGuildLoad::GetNumParam
_TEXT	ENDS
EXTRN	?BindParam@CSqlBase@@QAEFFFPAK@Z:NEAR		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParameters@CTBLGuildLoad@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLGuildLoad@@UAEFH@Z PROC NEAR	; CTBLGuildLoad::BindParameters, COMDAT
; _this$ = ecx

; 181  : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L109904
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L109904:

; 182  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLGuildLoad@@UAEFH@Z ENDP		; CTBLGuildLoad::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLGuildLoad@@UAE@XZ			; CTBLGuildLoad::~CTBLGuildLoad
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLGuildLoad@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLGuildLoad@@UAEPAXI@Z PROC NEAR			; CTBLGuildLoad::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLGuildLoad@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L126368
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L126368:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLGuildLoad@@UAEPAXI@Z ENDP			; CTBLGuildLoad::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLGuildLoad@@UAE@XZ
_TEXT	SEGMENT
??1CTBLGuildLoad@@UAE@XZ PROC NEAR			; CTBLGuildLoad::~CTBLGuildLoad, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLGuildLoad@@UAE@XZ ENDP				; CTBLGuildLoad::~CTBLGuildLoad
_TEXT	ENDS
PUBLIC	??0CTBLGuildArticle@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildArticle::CTBLGuildArticle
PUBLIC	?GetNumCol@CTBLGuildArticle@@UAEHXZ		; CTBLGuildArticle::GetNumCol
PUBLIC	?BindColumns@CTBLGuildArticle@@UAEFXZ		; CTBLGuildArticle::BindColumns
PUBLIC	?GetNumParam@CTBLGuildArticle@@UAEHXZ		; CTBLGuildArticle::GetNumParam
PUBLIC	?BindParameters@CTBLGuildArticle@@UAEFH@Z	; CTBLGuildArticle::BindParameters
PUBLIC	??_7CTBLGuildArticle@@6B@			; CTBLGuildArticle::`vftable'
PUBLIC	??_GCTBLGuildArticle@@UAEPAXI@Z			; CTBLGuildArticle::`scalar deleting destructor'
PUBLIC	??_C@_0GG@OGPLJBDP@SELECT?5dwID?0?5bDuty?0?5szWritter?0?5s@ ; `string'
EXTRN	??_ECTBLGuildArticle@@UAEPAXI@Z:NEAR		; CTBLGuildArticle::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T126551 DD	0ffffffffH
	DD	FLAT:$L126377
$T126548 DD	019930520H
	DD	01H
	DD	FLAT:$T126551
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0GG@OGPLJBDP@SELECT?5dwID?0?5bDuty?0?5szWritter?0?5s@
CONST	SEGMENT
??_C@_0GG@OGPLJBDP@SELECT?5dwID?0?5bDuty?0?5szWritter?0?5s@ DB 'SELECT dw'
	DB	'ID, bDuty, szWritter, szTitle, szArticle, dwTime FROM TGUILDA'
	DB	'RTICLETABLE WHERE dwGuildID = ?', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLGuildArticle@@6B@
CONST	SEGMENT
??_7CTBLGuildArticle@@6B@ DD FLAT:??_ECTBLGuildArticle@@UAEPAXI@Z ; CTBLGuildArticle::`vftable'
	DD	FLAT:?GetNumCol@CTBLGuildArticle@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLGuildArticle@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLGuildArticle@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLGuildArticle@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLGuildArticle@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T126376 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLGuildArticle@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLGuildArticle::CTBLGuildArticle, COMDAT
; _this$ = ecx

; 196  : DEF_QUERY( CTBLGuildArticle, _T("SELECT dwID, bDuty, szWritter, szTitle, szArticle, dwTime FROM TGUILDARTICLETABLE WHERE dwGuildID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLGuildArticle@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0GG@OGPLJBDP@SELECT?5dwID?0?5bDuty?0?5szWritter?0?5s@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T126376[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLGuildArticle@@6B@
  0005e	72 0d		 jb	 SHORT $L126549
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L126549:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L126377:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLGuildArticle@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T126548
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLGuildArticle@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLGuildArticle::CTBLGuildArticle
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLGuildArticle@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLGuildArticle@@UAEHXZ PROC NEAR		; CTBLGuildArticle::GetNumCol, COMDAT
; _this$ = ecx

; 198  : BEGIN_COLUMN(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumCol@CTBLGuildArticle@@UAEHXZ ENDP		; CTBLGuildArticle::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildArticle@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLGuildArticle@@UAEFXZ PROC NEAR		; CTBLGuildArticle::BindColumns, COMDAT
; _this$ = ecx

; 198  : BEGIN_COLUMN(6)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 199  : 	COLUMN_ENTRY(m_dwID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L109959
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 88 00 00
	00		 jne	 $L109955
$L109959:

; 200  : 	COLUMN_ENTRY(m_bDuty)

  00020	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 06		 je	 SHORT $L109960
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	75 6d		 jne	 SHORT $L109955
$L109960:

; 201  : 	COLUMN_ENTRY_STR(m_szWritter)

  0003b	6a 33		 push	 51			; 00000033H
  0003d	8d 96 35 0c 00
	00		 lea	 edx, DWORD PTR [esi+3125]
  00043	52		 push	 edx
  00044	6a 03		 push	 3
  00046	8b ce		 mov	 ecx, esi
  00048	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  0004d	66 85 c0	 test	 ax, ax
  00050	74 06		 je	 SHORT $L109961
  00052	66 3d 01 00	 cmp	 ax, 1
  00056	75 50		 jne	 SHORT $L109955
$L109961:

; 202  : 	COLUMN_ENTRY_STR(m_szTitle)

  00058	68 01 01 00 00	 push	 257			; 00000101H
  0005d	8d 86 68 0c 00
	00		 lea	 eax, DWORD PTR [esi+3176]
  00063	50		 push	 eax
  00064	6a 04		 push	 4
  00066	8b ce		 mov	 ecx, esi
  00068	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  0006d	66 85 c0	 test	 ax, ax
  00070	74 06		 je	 SHORT $L109962
  00072	66 3d 01 00	 cmp	 ax, 1
  00076	75 30		 jne	 SHORT $L109955
$L109962:

; 203  : 	COLUMN_ENTRY_STR(m_szArticle)

  00078	68 01 08 00 00	 push	 2049			; 00000801H
  0007d	8d 8e 69 0d 00
	00		 lea	 ecx, DWORD PTR [esi+3433]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  0008d	66 85 c0	 test	 ax, ax
  00090	74 06		 je	 SHORT $L109963
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	75 10		 jne	 SHORT $L109955
$L109963:

; 204  : 	COLUMN_ENTRY(m_dwTime)

  00098	8d 96 6c 15 00
	00		 lea	 edx, DWORD PTR [esi+5484]
  0009e	52		 push	 edx
  0009f	6a 06		 push	 6
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L109955:
  000a8	5e		 pop	 esi

; 205  : END_COL()

  000a9	c3		 ret	 0
?BindColumns@CTBLGuildArticle@@UAEFXZ ENDP		; CTBLGuildArticle::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLGuildArticle@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLGuildArticle@@UAEHXZ PROC NEAR		; CTBLGuildArticle::GetNumParam, COMDAT
; _this$ = ecx

; 207  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLGuildArticle@@UAEHXZ ENDP		; CTBLGuildArticle::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLGuildArticle@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLGuildArticle@@UAEFH@Z PROC NEAR	; CTBLGuildArticle::BindParameters, COMDAT
; _this$ = ecx

; 208  : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L109969
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L109969:

; 209  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLGuildArticle@@UAEFH@Z ENDP		; CTBLGuildArticle::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLGuildArticle@@UAE@XZ			; CTBLGuildArticle::~CTBLGuildArticle
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLGuildArticle@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLGuildArticle@@UAEPAXI@Z PROC NEAR		; CTBLGuildArticle::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLGuildArticle@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L126569
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L126569:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLGuildArticle@@UAEPAXI@Z ENDP			; CTBLGuildArticle::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLGuildArticle@@UAE@XZ
_TEXT	SEGMENT
??1CTBLGuildArticle@@UAE@XZ PROC NEAR			; CTBLGuildArticle::~CTBLGuildArticle, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLGuildArticle@@UAE@XZ ENDP			; CTBLGuildArticle::~CTBLGuildArticle
_TEXT	ENDS
PUBLIC	??0CTBLGuildItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildItem::CTBLGuildItem
PUBLIC	?GetNumCol@CTBLGuildItem@@UAEHXZ		; CTBLGuildItem::GetNumCol
PUBLIC	?BindColumns@CTBLGuildItem@@UAEFXZ		; CTBLGuildItem::BindColumns
PUBLIC	?GetNumParam@CTBLGuildItem@@UAEHXZ		; CTBLGuildItem::GetNumParam
PUBLIC	?BindParameters@CTBLGuildItem@@UAEFH@Z		; CTBLGuildItem::BindParameters
PUBLIC	??_7CTBLGuildItem@@6B@				; CTBLGuildItem::`vftable'
PUBLIC	??_GCTBLGuildItem@@UAEPAXI@Z			; CTBLGuildItem::`scalar deleting destructor'
PUBLIC	??_C@_0BHO@KCMBCIML@SELECT?5?7dlID?0?5?7dwStorageID?0?5?7wIt@ ; `string'
EXTRN	??_ECTBLGuildItem@@UAEPAXI@Z:NEAR		; CTBLGuildItem::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T126752 DD	0ffffffffH
	DD	FLAT:$L126578
$T126749 DD	019930520H
	DD	01H
	DD	FLAT:$T126752
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BHO@KCMBCIML@SELECT?5?7dlID?0?5?7dwStorageID?0?5?7wIt@
CONST	SEGMENT
??_C@_0BHO@KCMBCIML@SELECT?5?7dlID?0?5?7dwStorageID?0?5?7wIt@ DB 'SELECT '
	DB	09H, 'dlID, ', 09H, 'dwStorageID, ', 09H, 'wItemID, ', 09H, 'b'
	DB	'Level, ', 09H, 'bCount, ', 09H, 'bGLevel, ', 09H, 'dwDuraMax,'
	DB	' ', 09H, 'dwDuraCur, ', 09H, 'bRefineCur, ', 09H, 'dEndTime, '
	DB	09H, 'bGradeEffect, ', 09H, 'bMagic1, ', 09H, 'bMagic2, ', 09H
	DB	'bMagic3, ', 09H, 'bMagic4, ', 09H, 'bMagic5, ', 09H, 'bMagic6'
	DB	', ', 09H, 'wValue1, ', 09H, 'wValue2, ', 09H, 'wValue3, ', 09H
	DB	'wValue4, ', 09H, 'wValue5, ', 09H, 'wValue6, ', 09H, 'dwTime1'
	DB	', ', 09H, 'dwTime2, ', 09H, 'dwTime3, ', 09H, 'dwTime4, ', 09H
	DB	'dwTime5, ', 09H, 'dwTime6 ', 09H, 'FROM TITEMTABLE ', 09H, 'W'
	DB	'HERE dwOwnerID = ? AND bOwnerType=? AND bStorageType=?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLGuildItem@@6B@
CONST	SEGMENT
??_7CTBLGuildItem@@6B@ DD FLAT:??_ECTBLGuildItem@@UAEPAXI@Z ; CTBLGuildItem::`vftable'
	DD	FLAT:?GetNumCol@CTBLGuildItem@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLGuildItem@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLGuildItem@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLGuildItem@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLGuildItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T126577 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLGuildItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLGuildItem::CTBLGuildItem, COMDAT
; _this$ = ecx

; 252  : 	WHERE dwOwnerID = ? AND bOwnerType=? AND bStorageType=?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLGuildItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BHO@KCMBCIML@SELECT?5?7dlID?0?5?7dwStorageID?0?5?7wIt@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T126577[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	8d 8e 48 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3144]
  00059	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLGuildItem@@6B@
  0005f	e8 00 00 00 00	 call	 ??0tagTITEM@@QAE@XZ	; tagTITEM::tagTITEM
  00064	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00069	72 0d		 jb	 SHORT $L126750
  0006b	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  0006f	52		 push	 edx
  00070	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00075	83 c4 04	 add	 esp, 4
$L126750:
  00078	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0007c	8b c6		 mov	 eax, esi
  0007e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00085	5e		 pop	 esi
  00086	83 c4 10	 add	 esp, 16			; 00000010H
  00089	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L126578:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLGuildItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T126749
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLGuildItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLGuildItem::CTBLGuildItem
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLGuildItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLGuildItem@@UAEHXZ PROC NEAR		; CTBLGuildItem::GetNumCol, COMDAT
; _this$ = ecx

; 254  : BEGIN_COLUMN(29)

  00000	b8 1d 00 00 00	 mov	 eax, 29			; 0000001dH
  00005	c3		 ret	 0
?GetNumCol@CTBLGuildItem@@UAEHXZ ENDP			; CTBLGuildItem::GetNumCol
_TEXT	ENDS
EXTRN	?BindCol@CSqlBase@@QAEFFPA_J@Z:NEAR		; CSqlBase::BindCol
EXTRN	?BindCol@CSqlBase@@QAEFFPAG@Z:NEAR		; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindColumns@CTBLGuildItem@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLGuildItem@@UAEFXZ PROC NEAR		; CTBLGuildItem::BindColumns, COMDAT
; _this$ = ecx

; 254  : BEGIN_COLUMN(29)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 255  : 	COLUMN_ENTRY(m_item.m_dlID)

  00003	8d 86 48 0c 00
	00		 lea	 eax, DWORD PTR [esi+3144]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPA_J@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L110022
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 41 03 00
	00		 jne	 $L110018
$L110022:

; 256  : 	COLUMN_ENTRY(m_item.m_dwItemID)

  00020	8d 8e 50 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3152]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L110023
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 22 03 00
	00		 jne	 $L110018
$L110023:

; 257  : 	COLUMN_ENTRY(m_item.m_wItemID)

  0003f	8d 96 56 0c 00
	00		 lea	 edx, DWORD PTR [esi+3158]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L110024
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 03 03 00
	00		 jne	 $L110018
$L110024:

; 258  : 	COLUMN_ENTRY(m_item.m_bLevel)

  0005e	8d 86 5a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3162]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L110025
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 e4 02 00
	00		 jne	 $L110018
$L110025:

; 259  : 	COLUMN_ENTRY(m_item.m_bCount)

  0007d	8d 8e 5b 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3163]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L110026
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 c5 02 00
	00		 jne	 $L110018
$L110026:

; 260  : 	COLUMN_ENTRY(m_item.m_bGLevel)

  0009c	8d 96 5c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3164]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L110027
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 a6 02 00
	00		 jne	 $L110018
$L110027:

; 261  : 	COLUMN_ENTRY(m_item.m_dwDuraMax)

  000bb	8d 86 60 0c 00
	00		 lea	 eax, DWORD PTR [esi+3168]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 0a		 je	 SHORT $L110028
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	0f 85 87 02 00
	00		 jne	 $L110018
$L110028:

; 262  : 	COLUMN_ENTRY(m_item.m_dwDuraCur)

  000da	8d 8e 64 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3172]
  000e0	51		 push	 ecx
  000e1	6a 08		 push	 8
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000ea	66 85 c0	 test	 ax, ax
  000ed	74 0a		 je	 SHORT $L110029
  000ef	66 3d 01 00	 cmp	 ax, 1
  000f3	0f 85 68 02 00
	00		 jne	 $L110018
$L110029:

; 263  : 	COLUMN_ENTRY(m_item.m_bRefineCur)

  000f9	8d 96 68 0c 00
	00		 lea	 edx, DWORD PTR [esi+3176]
  000ff	52		 push	 edx
  00100	6a 09		 push	 9
  00102	8b ce		 mov	 ecx, esi
  00104	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00109	66 85 c0	 test	 ax, ax
  0010c	74 0a		 je	 SHORT $L110030
  0010e	66 3d 01 00	 cmp	 ax, 1
  00112	0f 85 49 02 00
	00		 jne	 $L110018
$L110030:

; 264  : 	COLUMN_ENTRY(m_dEndTime)

  00118	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  0011e	50		 push	 eax
  0011f	6a 0a		 push	 10			; 0000000aH
  00121	8b ce		 mov	 ecx, esi
  00123	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
  00128	66 85 c0	 test	 ax, ax
  0012b	74 0a		 je	 SHORT $L110031
  0012d	66 3d 01 00	 cmp	 ax, 1
  00131	0f 85 2a 02 00
	00		 jne	 $L110018
$L110031:

; 265  : 	COLUMN_ENTRY(m_item.m_bGradeEffect)

  00137	8d 8e 78 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3192]
  0013d	51		 push	 ecx
  0013e	6a 0b		 push	 11			; 0000000bH
  00140	8b ce		 mov	 ecx, esi
  00142	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00147	66 85 c0	 test	 ax, ax
  0014a	74 0a		 je	 SHORT $L110032
  0014c	66 3d 01 00	 cmp	 ax, 1
  00150	0f 85 0b 02 00
	00		 jne	 $L110018
$L110032:

; 266  : 	COLUMN_ENTRY(m_item.m_bMagic[0])

  00156	8d 96 7a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3194]
  0015c	52		 push	 edx
  0015d	6a 0c		 push	 12			; 0000000cH
  0015f	8b ce		 mov	 ecx, esi
  00161	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00166	66 85 c0	 test	 ax, ax
  00169	74 0a		 je	 SHORT $L110033
  0016b	66 3d 01 00	 cmp	 ax, 1
  0016f	0f 85 ec 01 00
	00		 jne	 $L110018
$L110033:

; 267  : 	COLUMN_ENTRY(m_item.m_bMagic[1])

  00175	8d 86 7b 0c 00
	00		 lea	 eax, DWORD PTR [esi+3195]
  0017b	50		 push	 eax
  0017c	6a 0d		 push	 13			; 0000000dH
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00185	66 85 c0	 test	 ax, ax
  00188	74 0a		 je	 SHORT $L110034
  0018a	66 3d 01 00	 cmp	 ax, 1
  0018e	0f 85 cd 01 00
	00		 jne	 $L110018
$L110034:

; 268  : 	COLUMN_ENTRY(m_item.m_bMagic[2])

  00194	8d 8e 7c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3196]
  0019a	51		 push	 ecx
  0019b	6a 0e		 push	 14			; 0000000eH
  0019d	8b ce		 mov	 ecx, esi
  0019f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001a4	66 85 c0	 test	 ax, ax
  001a7	74 0a		 je	 SHORT $L110035
  001a9	66 3d 01 00	 cmp	 ax, 1
  001ad	0f 85 ae 01 00
	00		 jne	 $L110018
$L110035:

; 269  : 	COLUMN_ENTRY(m_item.m_bMagic[3])

  001b3	8d 96 7d 0c 00
	00		 lea	 edx, DWORD PTR [esi+3197]
  001b9	52		 push	 edx
  001ba	6a 0f		 push	 15			; 0000000fH
  001bc	8b ce		 mov	 ecx, esi
  001be	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001c3	66 85 c0	 test	 ax, ax
  001c6	74 0a		 je	 SHORT $L110036
  001c8	66 3d 01 00	 cmp	 ax, 1
  001cc	0f 85 8f 01 00
	00		 jne	 $L110018
$L110036:

; 270  : 	COLUMN_ENTRY(m_item.m_bMagic[4])

  001d2	8d 86 7e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3198]
  001d8	50		 push	 eax
  001d9	6a 10		 push	 16			; 00000010H
  001db	8b ce		 mov	 ecx, esi
  001dd	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001e2	66 85 c0	 test	 ax, ax
  001e5	74 0a		 je	 SHORT $L110037
  001e7	66 3d 01 00	 cmp	 ax, 1
  001eb	0f 85 70 01 00
	00		 jne	 $L110018
$L110037:

; 271  : 	COLUMN_ENTRY(m_item.m_bMagic[5])

  001f1	8d 8e 7f 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3199]
  001f7	51		 push	 ecx
  001f8	6a 11		 push	 17			; 00000011H
  001fa	8b ce		 mov	 ecx, esi
  001fc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00201	66 85 c0	 test	 ax, ax
  00204	74 0a		 je	 SHORT $L110038
  00206	66 3d 01 00	 cmp	 ax, 1
  0020a	0f 85 51 01 00
	00		 jne	 $L110018
$L110038:

; 272  : 	COLUMN_ENTRY(m_item.m_wValue[0])

  00210	8d 96 80 0c 00
	00		 lea	 edx, DWORD PTR [esi+3200]
  00216	52		 push	 edx
  00217	6a 12		 push	 18			; 00000012H
  00219	8b ce		 mov	 ecx, esi
  0021b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00220	66 85 c0	 test	 ax, ax
  00223	74 0a		 je	 SHORT $L110039
  00225	66 3d 01 00	 cmp	 ax, 1
  00229	0f 85 32 01 00
	00		 jne	 $L110018
$L110039:

; 273  : 	COLUMN_ENTRY(m_item.m_wValue[1])

  0022f	8d 86 82 0c 00
	00		 lea	 eax, DWORD PTR [esi+3202]
  00235	50		 push	 eax
  00236	6a 13		 push	 19			; 00000013H
  00238	8b ce		 mov	 ecx, esi
  0023a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0023f	66 85 c0	 test	 ax, ax
  00242	74 0a		 je	 SHORT $L110040
  00244	66 3d 01 00	 cmp	 ax, 1
  00248	0f 85 13 01 00
	00		 jne	 $L110018
$L110040:

; 274  : 	COLUMN_ENTRY(m_item.m_wValue[2])

  0024e	8d 8e 84 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3204]
  00254	51		 push	 ecx
  00255	6a 14		 push	 20			; 00000014H
  00257	8b ce		 mov	 ecx, esi
  00259	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0025e	66 85 c0	 test	 ax, ax
  00261	74 0a		 je	 SHORT $L110041
  00263	66 3d 01 00	 cmp	 ax, 1
  00267	0f 85 f4 00 00
	00		 jne	 $L110018
$L110041:

; 275  : 	COLUMN_ENTRY(m_item.m_wValue[3])

  0026d	8d 96 86 0c 00
	00		 lea	 edx, DWORD PTR [esi+3206]
  00273	52		 push	 edx
  00274	6a 15		 push	 21			; 00000015H
  00276	8b ce		 mov	 ecx, esi
  00278	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0027d	66 85 c0	 test	 ax, ax
  00280	74 0a		 je	 SHORT $L110042
  00282	66 3d 01 00	 cmp	 ax, 1
  00286	0f 85 d5 00 00
	00		 jne	 $L110018
$L110042:

; 276  : 	COLUMN_ENTRY(m_item.m_wValue[4])

  0028c	8d 86 88 0c 00
	00		 lea	 eax, DWORD PTR [esi+3208]
  00292	50		 push	 eax
  00293	6a 16		 push	 22			; 00000016H
  00295	8b ce		 mov	 ecx, esi
  00297	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0029c	66 85 c0	 test	 ax, ax
  0029f	74 0a		 je	 SHORT $L110043
  002a1	66 3d 01 00	 cmp	 ax, 1
  002a5	0f 85 b6 00 00
	00		 jne	 $L110018
$L110043:

; 277  : 	COLUMN_ENTRY(m_item.m_wValue[5])

  002ab	8d 8e 8a 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3210]
  002b1	51		 push	 ecx
  002b2	6a 17		 push	 23			; 00000017H
  002b4	8b ce		 mov	 ecx, esi
  002b6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  002bb	66 85 c0	 test	 ax, ax
  002be	74 0a		 je	 SHORT $L110044
  002c0	66 3d 01 00	 cmp	 ax, 1
  002c4	0f 85 97 00 00
	00		 jne	 $L110018
$L110044:

; 278  : 	COLUMN_ENTRY(m_item.m_dwExtValue[0])

  002ca	8d 96 8c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3212]
  002d0	52		 push	 edx
  002d1	6a 18		 push	 24			; 00000018H
  002d3	8b ce		 mov	 ecx, esi
  002d5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  002da	66 85 c0	 test	 ax, ax
  002dd	74 06		 je	 SHORT $L110045
  002df	66 3d 01 00	 cmp	 ax, 1
  002e3	75 7c		 jne	 SHORT $L110018
$L110045:

; 279  : 	COLUMN_ENTRY(m_item.m_dwExtValue[1])

  002e5	8d 86 90 0c 00
	00		 lea	 eax, DWORD PTR [esi+3216]
  002eb	50		 push	 eax
  002ec	6a 19		 push	 25			; 00000019H
  002ee	8b ce		 mov	 ecx, esi
  002f0	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  002f5	66 85 c0	 test	 ax, ax
  002f8	74 06		 je	 SHORT $L110046
  002fa	66 3d 01 00	 cmp	 ax, 1
  002fe	75 61		 jne	 SHORT $L110018
$L110046:

; 280  : 	COLUMN_ENTRY(m_item.m_dwExtValue[2])

  00300	8d 8e 94 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3220]
  00306	51		 push	 ecx
  00307	6a 1a		 push	 26			; 0000001aH
  00309	8b ce		 mov	 ecx, esi
  0030b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00310	66 85 c0	 test	 ax, ax
  00313	74 06		 je	 SHORT $L110047
  00315	66 3d 01 00	 cmp	 ax, 1
  00319	75 46		 jne	 SHORT $L110018
$L110047:

; 281  : 	COLUMN_ENTRY(m_item.m_dwExtValue[3])

  0031b	8d 96 98 0c 00
	00		 lea	 edx, DWORD PTR [esi+3224]
  00321	52		 push	 edx
  00322	6a 1b		 push	 27			; 0000001bH
  00324	8b ce		 mov	 ecx, esi
  00326	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0032b	66 85 c0	 test	 ax, ax
  0032e	74 06		 je	 SHORT $L110048
  00330	66 3d 01 00	 cmp	 ax, 1
  00334	75 2b		 jne	 SHORT $L110018
$L110048:

; 282  : 	COLUMN_ENTRY(m_item.m_dwExtValue[4])

  00336	8d 86 9c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3228]
  0033c	50		 push	 eax
  0033d	6a 1c		 push	 28			; 0000001cH
  0033f	8b ce		 mov	 ecx, esi
  00341	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00346	66 85 c0	 test	 ax, ax
  00349	74 06		 je	 SHORT $L110049
  0034b	66 3d 01 00	 cmp	 ax, 1
  0034f	75 10		 jne	 SHORT $L110018
$L110049:

; 283  : 	COLUMN_ENTRY(m_item.m_dwExtValue[5])

  00351	8d 8e a0 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3232]
  00357	51		 push	 ecx
  00358	6a 1d		 push	 29			; 0000001dH
  0035a	8b ce		 mov	 ecx, esi
  0035c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L110018:
  00361	5e		 pop	 esi

; 284  : END_COL()

  00362	c3		 ret	 0
?BindColumns@CTBLGuildItem@@UAEFXZ ENDP			; CTBLGuildItem::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLGuildItem@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLGuildItem@@UAEHXZ PROC NEAR		; CTBLGuildItem::GetNumParam, COMDAT
; _this$ = ecx

; 286  : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CTBLGuildItem@@UAEHXZ ENDP			; CTBLGuildItem::GetNumParam
_TEXT	ENDS
EXTRN	?BindParam@CSqlBase@@QAEFFFPAE@Z:NEAR		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParameters@CTBLGuildItem@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLGuildItem@@UAEFH@Z PROC NEAR	; CTBLGuildItem::BindParameters, COMDAT
; _this$ = ecx

; 286  : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 287  : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_dwOwnerID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L110060
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L110060
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L110055
$L110060:

; 288  : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bOwnerType)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L110061
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L110061:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L110062
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L110055
$L110062:

; 289  : 	PARAM_ENTRY( SQL_PARAM_INPUT, m_bStorageType)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L110055
  00068	8d 96 31 0c 00
	00		 lea	 edx, DWORD PTR [esi+3121]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L110055:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 290  : END_PARAM()

  0007c	c2 04 00	 ret	 4
?BindParameters@CTBLGuildItem@@UAEFH@Z ENDP		; CTBLGuildItem::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLGuildItem@@UAE@XZ			; CTBLGuildItem::~CTBLGuildItem
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLGuildItem@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLGuildItem@@UAEPAXI@Z PROC NEAR			; CTBLGuildItem::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLGuildItem@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L126770
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L126770:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLGuildItem@@UAEPAXI@Z ENDP			; CTBLGuildItem::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLGuildItem@@UAE@XZ
_TEXT	SEGMENT
??1CTBLGuildItem@@UAE@XZ PROC NEAR			; CTBLGuildItem::~CTBLGuildItem, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLGuildItem@@UAE@XZ ENDP				; CTBLGuildItem::~CTBLGuildItem
_TEXT	ENDS
PUBLIC	??0CTBLGuildVolunteer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildVolunteer::CTBLGuildVolunteer
PUBLIC	?GetNumCol@CTBLGuildVolunteer@@UAEHXZ		; CTBLGuildVolunteer::GetNumCol
PUBLIC	?BindColumns@CTBLGuildVolunteer@@UAEFXZ		; CTBLGuildVolunteer::BindColumns
PUBLIC	??_7CTBLGuildVolunteer@@6B@			; CTBLGuildVolunteer::`vftable'
PUBLIC	??_GCTBLGuildVolunteer@@UAEPAXI@Z		; CTBLGuildVolunteer::`scalar deleting destructor'
PUBLIC	??_C@_0FE@IKMGHBCP@SELECT?5bType?0?5dwID?0?5dwCharID?0?5sz@ ; `string'
EXTRN	??_ECTBLGuildVolunteer@@UAEPAXI@Z:NEAR		; CTBLGuildVolunteer::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T126953 DD	0ffffffffH
	DD	FLAT:$L126779
$T126950 DD	019930520H
	DD	01H
	DD	FLAT:$T126953
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FE@IKMGHBCP@SELECT?5bType?0?5dwID?0?5dwCharID?0?5sz@
CONST	SEGMENT
??_C@_0FE@IKMGHBCP@SELECT?5bType?0?5dwID?0?5dwCharID?0?5sz@ DB 'SELECT bT'
	DB	'ype, dwID, dwCharID, szName, bLevel, bClass FROM TVIEW_GUILDV'
	DB	'OLUNTEERTABLE', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLGuildVolunteer@@6B@
CONST	SEGMENT
??_7CTBLGuildVolunteer@@6B@ DD FLAT:??_ECTBLGuildVolunteer@@UAEPAXI@Z ; CTBLGuildVolunteer::`vftable'
	DD	FLAT:?GetNumCol@CTBLGuildVolunteer@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLGuildVolunteer@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLGuildVolunteer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T126778 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLGuildVolunteer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLGuildVolunteer::CTBLGuildVolunteer, COMDAT
; _this$ = ecx

; 303  : DEF_QUERY(CTBLGuildVolunteer, _T("SELECT bType, dwID, dwCharID, szName, bLevel, bClass FROM TVIEW_GUILDVOLUNTEERTABLE"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLGuildVolunteer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FE@IKMGHBCP@SELECT?5bType?0?5dwID?0?5dwCharID?0?5sz@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T126778[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLGuildVolunteer@@6B@
  0005e	72 0d		 jb	 SHORT $L126951
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L126951:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L126779:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLGuildVolunteer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T126950
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLGuildVolunteer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLGuildVolunteer::CTBLGuildVolunteer
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLGuildVolunteer@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLGuildVolunteer@@UAEHXZ PROC NEAR		; CTBLGuildVolunteer::GetNumCol, COMDAT
; _this$ = ecx

; 305  : BEGIN_COLUMN(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumCol@CTBLGuildVolunteer@@UAEHXZ ENDP		; CTBLGuildVolunteer::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildVolunteer@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLGuildVolunteer@@UAEFXZ PROC NEAR	; CTBLGuildVolunteer::BindColumns, COMDAT
; _this$ = ecx

; 305  : BEGIN_COLUMN(6)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 306  : 	COLUMN_ENTRY(m_bType)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L110110
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 7e		 jne	 SHORT $L110106
$L110110:

; 307  : 	COLUMN_ENTRY(m_dwID)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L110111
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 63		 jne	 SHORT $L110106
$L110111:

; 308  : 	COLUMN_ENTRY(m_dwCharID)

  00037	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L110112
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 48		 jne	 SHORT $L110106
$L110112:

; 309  : 	COLUMN_ENTRY_STR(m_szName)

  00052	6a 33		 push	 51			; 00000033H
  00054	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0005a	50		 push	 eax
  0005b	6a 04		 push	 4
  0005d	8b ce		 mov	 ecx, esi
  0005f	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00064	66 85 c0	 test	 ax, ax
  00067	74 06		 je	 SHORT $L110113
  00069	66 3d 01 00	 cmp	 ax, 1
  0006d	75 2b		 jne	 SHORT $L110106
$L110113:

; 310  : 	COLUMN_ENTRY(m_bLevel)

  0006f	8d 8e 6b 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3179]
  00075	51		 push	 ecx
  00076	6a 05		 push	 5
  00078	8b ce		 mov	 ecx, esi
  0007a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0007f	66 85 c0	 test	 ax, ax
  00082	74 06		 je	 SHORT $L110114
  00084	66 3d 01 00	 cmp	 ax, 1
  00088	75 10		 jne	 SHORT $L110106
$L110114:

; 311  : 	COLUMN_ENTRY(m_bClass)

  0008a	8d 96 6c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3180]
  00090	52		 push	 edx
  00091	6a 06		 push	 6
  00093	8b ce		 mov	 ecx, esi
  00095	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L110106:
  0009a	5e		 pop	 esi

; 312  : END_COL()

  0009b	c3		 ret	 0
?BindColumns@CTBLGuildVolunteer@@UAEFXZ ENDP		; CTBLGuildVolunteer::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLGuildVolunteer@@UAE@XZ			; CTBLGuildVolunteer::~CTBLGuildVolunteer
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLGuildVolunteer@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLGuildVolunteer@@UAEPAXI@Z PROC NEAR		; CTBLGuildVolunteer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLGuildVolunteer@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L126965
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L126965:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLGuildVolunteer@@UAEPAXI@Z ENDP			; CTBLGuildVolunteer::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLGuildVolunteer@@UAE@XZ
_TEXT	SEGMENT
??1CTBLGuildVolunteer@@UAE@XZ PROC NEAR			; CTBLGuildVolunteer::~CTBLGuildVolunteer, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLGuildVolunteer@@UAE@XZ ENDP			; CTBLGuildVolunteer::~CTBLGuildVolunteer
_TEXT	ENDS
PUBLIC	??0CTBLGuildMember@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildMember::CTBLGuildMember
PUBLIC	?GetNumCol@CTBLGuildMember@@UAEHXZ		; CTBLGuildMember::GetNumCol
PUBLIC	?BindColumns@CTBLGuildMember@@UAEFXZ		; CTBLGuildMember::BindColumns
PUBLIC	?GetNumParam@CTBLGuildMember@@UAEHXZ		; CTBLGuildMember::GetNumParam
PUBLIC	?BindParameters@CTBLGuildMember@@UAEFH@Z	; CTBLGuildMember::BindParameters
PUBLIC	??_7CTBLGuildMember@@6B@			; CTBLGuildMember::`vftable'
PUBLIC	??_GCTBLGuildMember@@UAEPAXI@Z			; CTBLGuildMember::`scalar deleting destructor'
PUBLIC	??_C@_0IA@CLCBNOJM@SELECT?5dwCharID?0?5szName?0?5bCountr@ ; `string'
EXTRN	??_ECTBLGuildMember@@UAEPAXI@Z:NEAR		; CTBLGuildMember::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T127148 DD	0ffffffffH
	DD	FLAT:$L126974
$T127145 DD	019930520H
	DD	01H
	DD	FLAT:$T127148
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0IA@CLCBNOJM@SELECT?5dwCharID?0?5szName?0?5bCountr@
CONST	SEGMENT
??_C@_0IA@CLCBNOJM@SELECT?5dwCharID?0?5szName?0?5bCountr@ DB 'SELECT dwCh'
	DB	'arID, szName, bCountry, bWarCountry, bLevel, bClass, bDuty, b'
	DB	'Peer, dLogoutDate FROM TGUILDMEMBER WHERE dwGuildID = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLGuildMember@@6B@
CONST	SEGMENT
??_7CTBLGuildMember@@6B@ DD FLAT:??_ECTBLGuildMember@@UAEPAXI@Z ; CTBLGuildMember::`vftable'
	DD	FLAT:?GetNumCol@CTBLGuildMember@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLGuildMember@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLGuildMember@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLGuildMember@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLGuildMember@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T126973 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLGuildMember@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLGuildMember::CTBLGuildMember, COMDAT
; _this$ = ecx

; 329  : DEF_QUERY(CTBLGuildMember, _T("SELECT dwCharID, szName, bCountry, bWarCountry, bLevel, bClass, bDuty, bPeer, dLogoutDate FROM TGUILDMEMBER WHERE dwGuildID = ?"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLGuildMember@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0IA@CLCBNOJM@SELECT?5dwCharID?0?5szName?0?5bCountr@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T126973[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLGuildMember@@6B@
  0005e	72 0d		 jb	 SHORT $L127146
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L127146:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L126974:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLGuildMember@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T127145
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLGuildMember@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLGuildMember::CTBLGuildMember
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLGuildMember@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLGuildMember@@UAEHXZ PROC NEAR		; CTBLGuildMember::GetNumCol, COMDAT
; _this$ = ecx

; 331  : BEGIN_COLUMN(9)

  00000	b8 09 00 00 00	 mov	 eax, 9
  00005	c3		 ret	 0
?GetNumCol@CTBLGuildMember@@UAEHXZ ENDP			; CTBLGuildMember::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildMember@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLGuildMember@@UAEFXZ PROC NEAR		; CTBLGuildMember::BindColumns, COMDAT
; _this$ = ecx

; 331  : BEGIN_COLUMN(9)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 332  : 	COLUMN_ENTRY(m_dwMemberID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L110168
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 d7 00 00
	00		 jne	 $L110164
$L110168:

; 333  : 	COLUMN_ENTRY_STR(m_szName)

  00020	6a 33		 push	 51			; 00000033H
  00022	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00028	51		 push	 ecx
  00029	6a 02		 push	 2
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00032	66 85 c0	 test	 ax, ax
  00035	74 0a		 je	 SHORT $L110169
  00037	66 3d 01 00	 cmp	 ax, 1
  0003b	0f 85 b6 00 00
	00		 jne	 $L110164
$L110169:

; 334  : 	COLUMN_ENTRY(m_bCountry)

  00041	8d 96 6b 0c 00
	00		 lea	 edx, DWORD PTR [esi+3179]
  00047	52		 push	 edx
  00048	6a 03		 push	 3
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00051	66 85 c0	 test	 ax, ax
  00054	74 0a		 je	 SHORT $L110170
  00056	66 3d 01 00	 cmp	 ax, 1
  0005a	0f 85 97 00 00
	00		 jne	 $L110164
$L110170:

; 335  : 	COLUMN_ENTRY(m_bWarCountry)

  00060	8d 86 6c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3180]
  00066	50		 push	 eax
  00067	6a 04		 push	 4
  00069	8b ce		 mov	 ecx, esi
  0006b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00070	66 85 c0	 test	 ax, ax
  00073	74 06		 je	 SHORT $L110171
  00075	66 3d 01 00	 cmp	 ax, 1
  00079	75 7c		 jne	 SHORT $L110164
$L110171:

; 336  : 	COLUMN_ENTRY(m_bLevel)

  0007b	8d 8e 67 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3175]
  00081	51		 push	 ecx
  00082	6a 05		 push	 5
  00084	8b ce		 mov	 ecx, esi
  00086	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0008b	66 85 c0	 test	 ax, ax
  0008e	74 06		 je	 SHORT $L110172
  00090	66 3d 01 00	 cmp	 ax, 1
  00094	75 61		 jne	 SHORT $L110164
$L110172:

; 337  : 	COLUMN_ENTRY(m_bClass)

  00096	8d 96 68 0c 00
	00		 lea	 edx, DWORD PTR [esi+3176]
  0009c	52		 push	 edx
  0009d	6a 06		 push	 6
  0009f	8b ce		 mov	 ecx, esi
  000a1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000a6	66 85 c0	 test	 ax, ax
  000a9	74 06		 je	 SHORT $L110173
  000ab	66 3d 01 00	 cmp	 ax, 1
  000af	75 46		 jne	 SHORT $L110164
$L110173:

; 338  : 	COLUMN_ENTRY(m_bDuty)

  000b1	8d 86 69 0c 00
	00		 lea	 eax, DWORD PTR [esi+3177]
  000b7	50		 push	 eax
  000b8	6a 07		 push	 7
  000ba	8b ce		 mov	 ecx, esi
  000bc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000c1	66 85 c0	 test	 ax, ax
  000c4	74 06		 je	 SHORT $L110174
  000c6	66 3d 01 00	 cmp	 ax, 1
  000ca	75 2b		 jne	 SHORT $L110164
$L110174:

; 339  : 	COLUMN_ENTRY(m_bPeer)

  000cc	8d 8e 6a 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3178]
  000d2	51		 push	 ecx
  000d3	6a 08		 push	 8
  000d5	8b ce		 mov	 ecx, esi
  000d7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000dc	66 85 c0	 test	 ax, ax
  000df	74 06		 je	 SHORT $L110175
  000e1	66 3d 01 00	 cmp	 ax, 1
  000e5	75 10		 jne	 SHORT $L110164
$L110175:

; 340  : 	COLUMN_ENTRY(m_dConnectedDate);

  000e7	8d 96 70 0c 00
	00		 lea	 edx, DWORD PTR [esi+3184]
  000ed	52		 push	 edx
  000ee	6a 09		 push	 9
  000f0	8b ce		 mov	 ecx, esi
  000f2	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
$L110164:
  000f7	5e		 pop	 esi

; 341  : END_COL()

  000f8	c3		 ret	 0
?BindColumns@CTBLGuildMember@@UAEFXZ ENDP		; CTBLGuildMember::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLGuildMember@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLGuildMember@@UAEHXZ PROC NEAR		; CTBLGuildMember::GetNumParam, COMDAT
; _this$ = ecx

; 343  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLGuildMember@@UAEHXZ ENDP		; CTBLGuildMember::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLGuildMember@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLGuildMember@@UAEFH@Z PROC NEAR	; CTBLGuildMember::BindParameters, COMDAT
; _this$ = ecx

; 344  : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L110181
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L110181:

; 345  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLGuildMember@@UAEFH@Z ENDP		; CTBLGuildMember::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLGuildMember@@UAE@XZ			; CTBLGuildMember::~CTBLGuildMember
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLGuildMember@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLGuildMember@@UAEPAXI@Z PROC NEAR		; CTBLGuildMember::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLGuildMember@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L127166
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L127166:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLGuildMember@@UAEPAXI@Z ENDP			; CTBLGuildMember::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLGuildMember@@UAE@XZ
_TEXT	SEGMENT
??1CTBLGuildMember@@UAE@XZ PROC NEAR			; CTBLGuildMember::~CTBLGuildMember, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLGuildMember@@UAE@XZ ENDP				; CTBLGuildMember::~CTBLGuildMember
_TEXT	ENDS
PUBLIC	??0CTBLGuildTactics@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildTactics::CTBLGuildTactics
PUBLIC	?GetNumCol@CTBLGuildTactics@@UAEHXZ		; CTBLGuildTactics::GetNumCol
PUBLIC	?BindColumns@CTBLGuildTactics@@UAEFXZ		; CTBLGuildTactics::BindColumns
PUBLIC	?GetNumParam@CTBLGuildTactics@@UAEHXZ		; CTBLGuildTactics::GetNumParam
PUBLIC	?BindParameters@CTBLGuildTactics@@UAEFH@Z	; CTBLGuildTactics::BindParameters
PUBLIC	??_7CTBLGuildTactics@@6B@			; CTBLGuildTactics::`vftable'
PUBLIC	??_GCTBLGuildTactics@@UAEPAXI@Z			; CTBLGuildTactics::`scalar deleting destructor'
PUBLIC	??_C@_0JE@HLFMBCDJ@SELECT?5dwCharID?0?5szName?0?5bLevel?0@ ; `string'
EXTRN	??_ECTBLGuildTactics@@UAEPAXI@Z:NEAR		; CTBLGuildTactics::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T127349 DD	0ffffffffH
	DD	FLAT:$L127175
$T127346 DD	019930520H
	DD	01H
	DD	FLAT:$T127349
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0JE@HLFMBCDJ@SELECT?5dwCharID?0?5szName?0?5bLevel?0@
CONST	SEGMENT
??_C@_0JE@HLFMBCDJ@SELECT?5dwCharID?0?5szName?0?5bLevel?0@ DB 'SELECT dwC'
	DB	'harID, szName, bLevel, bClass, dwRewardPoint, dlRewardMoney, '
	DB	'dwGainPoint, bDay, dEndTime FROM TVIEW_GUILDTACTICSTABLE WHER'
	DB	'E dwGuildID = ?', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CTBLGuildTactics@@6B@
CONST	SEGMENT
??_7CTBLGuildTactics@@6B@ DD FLAT:??_ECTBLGuildTactics@@UAEPAXI@Z ; CTBLGuildTactics::`vftable'
	DD	FLAT:?GetNumCol@CTBLGuildTactics@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLGuildTactics@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLGuildTactics@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLGuildTactics@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLGuildTactics@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T127174 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLGuildTactics@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLGuildTactics::CTBLGuildTactics, COMDAT
; _this$ = ecx

; 362  : DEF_QUERY(CTBLGuildTactics, _T("SELECT dwCharID, szName, bLevel, bClass, dwRewardPoint, dlRewardMoney, dwGainPoint, bDay, dEndTime FROM TVIEW_GUILDTACTICSTABLE WHERE dwGuildID = ?"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLGuildTactics@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0JE@HLFMBCDJ@SELECT?5dwCharID?0?5szName?0?5bLevel?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T127174[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLGuildTactics@@6B@
  0005e	72 0d		 jb	 SHORT $L127347
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L127347:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L127175:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLGuildTactics@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T127346
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLGuildTactics@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLGuildTactics::CTBLGuildTactics
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLGuildTactics@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLGuildTactics@@UAEHXZ PROC NEAR		; CTBLGuildTactics::GetNumCol, COMDAT
; _this$ = ecx

; 364  : BEGIN_COLUMN(9)

  00000	b8 09 00 00 00	 mov	 eax, 9
  00005	c3		 ret	 0
?GetNumCol@CTBLGuildTactics@@UAEHXZ ENDP		; CTBLGuildTactics::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildTactics@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLGuildTactics@@UAEFXZ PROC NEAR		; CTBLGuildTactics::BindColumns, COMDAT
; _this$ = ecx

; 364  : BEGIN_COLUMN(9)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 365  : 	COLUMN_ENTRY(m_dwMemberID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L110239
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 d7 00 00
	00		 jne	 $L110235
$L110239:

; 366  : 	COLUMN_ENTRY_STR(m_szName)

  00020	6a 33		 push	 51			; 00000033H
  00022	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00028	51		 push	 ecx
  00029	6a 02		 push	 2
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00032	66 85 c0	 test	 ax, ax
  00035	74 0a		 je	 SHORT $L110240
  00037	66 3d 01 00	 cmp	 ax, 1
  0003b	0f 85 b6 00 00
	00		 jne	 $L110235
$L110240:

; 367  : 	COLUMN_ENTRY(m_bLevel)

  00041	8d 96 67 0c 00
	00		 lea	 edx, DWORD PTR [esi+3175]
  00047	52		 push	 edx
  00048	6a 03		 push	 3
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00051	66 85 c0	 test	 ax, ax
  00054	74 0a		 je	 SHORT $L110241
  00056	66 3d 01 00	 cmp	 ax, 1
  0005a	0f 85 97 00 00
	00		 jne	 $L110235
$L110241:

; 368  : 	COLUMN_ENTRY(m_bClass)

  00060	8d 86 68 0c 00
	00		 lea	 eax, DWORD PTR [esi+3176]
  00066	50		 push	 eax
  00067	6a 04		 push	 4
  00069	8b ce		 mov	 ecx, esi
  0006b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00070	66 85 c0	 test	 ax, ax
  00073	74 06		 je	 SHORT $L110242
  00075	66 3d 01 00	 cmp	 ax, 1
  00079	75 7c		 jne	 SHORT $L110235
$L110242:

; 369  : 	COLUMN_ENTRY(m_dwRewardPoint)

  0007b	8d 8e 6c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3180]
  00081	51		 push	 ecx
  00082	6a 05		 push	 5
  00084	8b ce		 mov	 ecx, esi
  00086	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0008b	66 85 c0	 test	 ax, ax
  0008e	74 06		 je	 SHORT $L110243
  00090	66 3d 01 00	 cmp	 ax, 1
  00094	75 61		 jne	 SHORT $L110235
$L110243:

; 370  : 	COLUMN_ENTRY(m_dlRewardMoney)

  00096	8d 96 70 0c 00
	00		 lea	 edx, DWORD PTR [esi+3184]
  0009c	52		 push	 edx
  0009d	6a 06		 push	 6
  0009f	8b ce		 mov	 ecx, esi
  000a1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPA_J@Z ; CSqlBase::BindCol
  000a6	66 85 c0	 test	 ax, ax
  000a9	74 06		 je	 SHORT $L110244
  000ab	66 3d 01 00	 cmp	 ax, 1
  000af	75 46		 jne	 SHORT $L110235
$L110244:

; 371  : 	COLUMN_ENTRY(m_dwGainPoint)

  000b1	8d 86 78 0c 00
	00		 lea	 eax, DWORD PTR [esi+3192]
  000b7	50		 push	 eax
  000b8	6a 07		 push	 7
  000ba	8b ce		 mov	 ecx, esi
  000bc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000c1	66 85 c0	 test	 ax, ax
  000c4	74 06		 je	 SHORT $L110245
  000c6	66 3d 01 00	 cmp	 ax, 1
  000ca	75 2b		 jne	 SHORT $L110235
$L110245:

; 372  : 	COLUMN_ENTRY(m_bDay)

  000cc	8d 8e 7c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3196]
  000d2	51		 push	 ecx
  000d3	6a 08		 push	 8
  000d5	8b ce		 mov	 ecx, esi
  000d7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000dc	66 85 c0	 test	 ax, ax
  000df	74 06		 je	 SHORT $L110246
  000e1	66 3d 01 00	 cmp	 ax, 1
  000e5	75 10		 jne	 SHORT $L110235
$L110246:

; 373  : 	COLUMN_ENTRY(m_timeEnd)

  000e7	8d 96 80 0c 00
	00		 lea	 edx, DWORD PTR [esi+3200]
  000ed	52		 push	 edx
  000ee	6a 09		 push	 9
  000f0	8b ce		 mov	 ecx, esi
  000f2	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
$L110235:
  000f7	5e		 pop	 esi

; 374  : END_COL()

  000f8	c3		 ret	 0
?BindColumns@CTBLGuildTactics@@UAEFXZ ENDP		; CTBLGuildTactics::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLGuildTactics@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLGuildTactics@@UAEHXZ PROC NEAR		; CTBLGuildTactics::GetNumParam, COMDAT
; _this$ = ecx

; 376  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLGuildTactics@@UAEHXZ ENDP		; CTBLGuildTactics::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLGuildTactics@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLGuildTactics@@UAEFH@Z PROC NEAR	; CTBLGuildTactics::BindParameters, COMDAT
; _this$ = ecx

; 377  : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L110252
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L110252:

; 378  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLGuildTactics@@UAEFH@Z ENDP		; CTBLGuildTactics::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLGuildTactics@@UAE@XZ			; CTBLGuildTactics::~CTBLGuildTactics
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLGuildTactics@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLGuildTactics@@UAEPAXI@Z PROC NEAR		; CTBLGuildTactics::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLGuildTactics@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L127367
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L127367:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLGuildTactics@@UAEPAXI@Z ENDP			; CTBLGuildTactics::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLGuildTactics@@UAE@XZ
_TEXT	SEGMENT
??1CTBLGuildTactics@@UAE@XZ PROC NEAR			; CTBLGuildTactics::~CTBLGuildTactics, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLGuildTactics@@UAE@XZ ENDP			; CTBLGuildTactics::~CTBLGuildTactics
_TEXT	ENDS
PUBLIC	??0CTBLGuildWanted@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildWanted::CTBLGuildWanted
PUBLIC	?GetNumCol@CTBLGuildWanted@@UAEHXZ		; CTBLGuildWanted::GetNumCol
PUBLIC	?BindColumns@CTBLGuildWanted@@UAEFXZ		; CTBLGuildWanted::BindColumns
PUBLIC	??_7CTBLGuildWanted@@6B@			; CTBLGuildWanted::`vftable'
PUBLIC	??_GCTBLGuildWanted@@UAEPAXI@Z			; CTBLGuildWanted::`scalar deleting destructor'
PUBLIC	??_C@_0FJ@LKGOFDAP@SELECT?5dwGuildID?0?5bMinLevel?0?5bMa@ ; `string'
EXTRN	??_ECTBLGuildWanted@@UAEPAXI@Z:NEAR		; CTBLGuildWanted::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T127550 DD	0ffffffffH
	DD	FLAT:$L127376
$T127547 DD	019930520H
	DD	01H
	DD	FLAT:$T127550
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FJ@LKGOFDAP@SELECT?5dwGuildID?0?5bMinLevel?0?5bMa@
CONST	SEGMENT
??_C@_0FJ@LKGOFDAP@SELECT?5dwGuildID?0?5bMinLevel?0?5bMa@ DB 'SELECT dwGu'
	DB	'ildID, bMinLevel, bMaxLevel, dEndTime, szTitle, szText FROM T'
	DB	'GUILDWANTEDTABLE', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CTBLGuildWanted@@6B@
CONST	SEGMENT
??_7CTBLGuildWanted@@6B@ DD FLAT:??_ECTBLGuildWanted@@UAEPAXI@Z ; CTBLGuildWanted::`vftable'
	DD	FLAT:?GetNumCol@CTBLGuildWanted@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLGuildWanted@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLGuildWanted@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T127375 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLGuildWanted@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLGuildWanted::CTBLGuildWanted, COMDAT
; _this$ = ecx

; 391  : DEF_QUERY(CTBLGuildWanted, _T("SELECT dwGuildID, bMinLevel, bMaxLevel, dEndTime, szTitle, szText FROM TGUILDWANTEDTABLE"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLGuildWanted@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FJ@LKGOFDAP@SELECT?5dwGuildID?0?5bMinLevel?0?5bMa@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T127375[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLGuildWanted@@6B@
  0005e	72 0d		 jb	 SHORT $L127548
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L127548:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L127376:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLGuildWanted@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T127547
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLGuildWanted@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLGuildWanted::CTBLGuildWanted
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLGuildWanted@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLGuildWanted@@UAEHXZ PROC NEAR		; CTBLGuildWanted::GetNumCol, COMDAT
; _this$ = ecx

; 393  : BEGIN_COLUMN(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumCol@CTBLGuildWanted@@UAEHXZ ENDP			; CTBLGuildWanted::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildWanted@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLGuildWanted@@UAEFXZ PROC NEAR		; CTBLGuildWanted::BindColumns, COMDAT
; _this$ = ecx

; 393  : BEGIN_COLUMN(6)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 394  : 	COLUMN_ENTRY(m_dwGuildID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L110303
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 86 00 00
	00		 jne	 $L110299
$L110303:

; 395  : 	COLUMN_ENTRY(m_bMinLevel)

  00020	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 06		 je	 SHORT $L110304
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	75 6b		 jne	 SHORT $L110299
$L110304:

; 396  : 	COLUMN_ENTRY(m_bMaxLevel)

  0003b	8d 96 31 0c 00
	00		 lea	 edx, DWORD PTR [esi+3121]
  00041	52		 push	 edx
  00042	6a 03		 push	 3
  00044	8b ce		 mov	 ecx, esi
  00046	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004b	66 85 c0	 test	 ax, ax
  0004e	74 06		 je	 SHORT $L110305
  00050	66 3d 01 00	 cmp	 ax, 1
  00054	75 50		 jne	 SHORT $L110299
$L110305:

; 397  : 	COLUMN_ENTRY(m_timeEnd)

  00056	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  0005c	50		 push	 eax
  0005d	6a 04		 push	 4
  0005f	8b ce		 mov	 ecx, esi
  00061	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
  00066	66 85 c0	 test	 ax, ax
  00069	74 06		 je	 SHORT $L110306
  0006b	66 3d 01 00	 cmp	 ax, 1
  0006f	75 35		 jne	 SHORT $L110299
$L110306:

; 398  : 	COLUMN_ENTRY_STR(m_szTitle)

  00071	68 01 01 00 00	 push	 257			; 00000101H
  00076	8d 8e 44 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3140]
  0007c	51		 push	 ecx
  0007d	6a 05		 push	 5
  0007f	8b ce		 mov	 ecx, esi
  00081	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00086	66 85 c0	 test	 ax, ax
  00089	74 06		 je	 SHORT $L110307
  0008b	66 3d 01 00	 cmp	 ax, 1
  0008f	75 15		 jne	 SHORT $L110299
$L110307:

; 399  : 	COLUMN_ENTRY_STR(m_szText)

  00091	68 01 08 00 00	 push	 2049			; 00000801H
  00096	8d 96 45 0d 00
	00		 lea	 edx, DWORD PTR [esi+3397]
  0009c	52		 push	 edx
  0009d	6a 06		 push	 6
  0009f	8b ce		 mov	 ecx, esi
  000a1	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
$L110299:
  000a6	5e		 pop	 esi

; 400  : END_COL()

  000a7	c3		 ret	 0
?BindColumns@CTBLGuildWanted@@UAEFXZ ENDP		; CTBLGuildWanted::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLGuildWanted@@UAE@XZ			; CTBLGuildWanted::~CTBLGuildWanted
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLGuildWanted@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLGuildWanted@@UAEPAXI@Z PROC NEAR		; CTBLGuildWanted::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLGuildWanted@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L127562
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L127562:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLGuildWanted@@UAEPAXI@Z ENDP			; CTBLGuildWanted::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLGuildWanted@@UAE@XZ
_TEXT	SEGMENT
??1CTBLGuildWanted@@UAE@XZ PROC NEAR			; CTBLGuildWanted::~CTBLGuildWanted, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLGuildWanted@@UAE@XZ ENDP				; CTBLGuildWanted::~CTBLGuildWanted
_TEXT	ENDS
PUBLIC	??0CTBLGuildTacticsWanted@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildTacticsWanted::CTBLGuildTacticsWanted
PUBLIC	?GetNumCol@CTBLGuildTacticsWanted@@UAEHXZ	; CTBLGuildTacticsWanted::GetNumCol
PUBLIC	?BindColumns@CTBLGuildTacticsWanted@@UAEFXZ	; CTBLGuildTacticsWanted::BindColumns
PUBLIC	??_7CTBLGuildTacticsWanted@@6B@			; CTBLGuildTacticsWanted::`vftable'
PUBLIC	??_GCTBLGuildTacticsWanted@@UAEPAXI@Z		; CTBLGuildTacticsWanted::`scalar deleting destructor'
PUBLIC	??_C@_0BCD@PPNIDOPJ@SELECT?5?7?7?7?7?7?7?7?7?7?5dwID?0?5?7?7?7?7?7?7?7?7?7@ ; `string'
EXTRN	??_ECTBLGuildTacticsWanted@@UAEPAXI@Z:NEAR	; CTBLGuildTacticsWanted::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T127745 DD	0ffffffffH
	DD	FLAT:$L127571
$T127742 DD	019930520H
	DD	01H
	DD	FLAT:$T127745
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BCD@PPNIDOPJ@SELECT?5?7?7?7?7?7?7?7?7?7?5dwID?0?5?7?7?7?7?7?7?7?7?7@
CONST	SEGMENT
??_C@_0BCD@PPNIDOPJ@SELECT?5?7?7?7?7?7?7?7?7?7?5dwID?0?5?7?7?7?7?7?7?7?7?7@ DB 'S'
	DB	'ELECT ', 09H, 09H, 09H, 09H, 09H, 09H, 09H, 09H, 09H, ' dwID,'
	DB	' ', 09H, 09H, 09H, 09H, 09H, 09H, 09H, 09H, 09H, ' dwGuildID,'
	DB	' ', 09H, 09H, 09H, 09H, 09H, 09H, 09H, 09H, 09H, ' bMinLevel,'
	DB	' ', 09H, 09H, 09H, 09H, 09H, 09H, 09H, 09H, 09H, ' bMaxLevel,'
	DB	' ', 09H, 09H, 09H, 09H, 09H, 09H, 09H, 09H, 09H, ' dEndTime, '
	DB	09H, 09H, 09H, 09H, 09H, 09H, 09H, 09H, 09H, ' szTitle, ', 09H
	DB	09H, 09H, 09H, 09H, 09H, 09H, 09H, 09H, ' szText, ', 09H, 09H, 09H
	DB	09H, 09H, 09H, 09H, 09H, 09H, ' bDay, ', 09H, 09H, 09H, 09H, 09H
	DB	09H, 09H, 09H, 09H, ' dwGold, ', 09H, 09H, 09H, 09H, 09H, 09H, 09H
	DB	09H, 09H, ' dwSilver, ', 09H, 09H, 09H, 09H, 09H, 09H, 09H, 09H
	DB	09H, ' dwCooper, ', 09H, 09H, 09H, 09H, 09H, 09H, 09H, 09H, 09H
	DB	' dwPvPoint ', 09H, 09H, 09H, 09H, 09H, 09H, 09H, 09H, 09H, ' '
	DB	'FROM TGUILDTACTICSWANTEDTABLE ORDER BY dwID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLGuildTacticsWanted@@6B@
CONST	SEGMENT
??_7CTBLGuildTacticsWanted@@6B@ DD FLAT:??_ECTBLGuildTacticsWanted@@UAEPAXI@Z ; CTBLGuildTacticsWanted::`vftable'
	DD	FLAT:?GetNumCol@CTBLGuildTacticsWanted@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLGuildTacticsWanted@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLGuildTacticsWanted@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T127570 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLGuildTacticsWanted@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLGuildTacticsWanted::CTBLGuildTacticsWanted, COMDAT
; _this$ = ecx

; 432  : 									 FROM TGUILDTACTICSWANTEDTABLE ORDER BY dwID"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLGuildTacticsWanted@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BCD@PPNIDOPJ@SELECT?5?7?7?7?7?7?7?7?7?7?5dwID?0?5?7?7?7?7?7?7?7?7?7@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T127570[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLGuildTacticsWanted@@6B@
  0005e	72 0d		 jb	 SHORT $L127743
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L127743:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L127571:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLGuildTacticsWanted@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T127742
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLGuildTacticsWanted@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLGuildTacticsWanted::CTBLGuildTacticsWanted
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLGuildTacticsWanted@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLGuildTacticsWanted@@UAEHXZ PROC NEAR	; CTBLGuildTacticsWanted::GetNumCol, COMDAT
; _this$ = ecx

; 434  : BEGIN_COLUMN(12)

  00000	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00005	c3		 ret	 0
?GetNumCol@CTBLGuildTacticsWanted@@UAEHXZ ENDP		; CTBLGuildTacticsWanted::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildTacticsWanted@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLGuildTacticsWanted@@UAEFXZ PROC NEAR	; CTBLGuildTacticsWanted::BindColumns, COMDAT
; _this$ = ecx

; 434  : BEGIN_COLUMN(12)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 435  : 	COLUMN_ENTRY(m_dwID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L110360
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 3c 01 00
	00		 jne	 $L110356
$L110360:

; 436  : 	COLUMN_ENTRY(m_dwGuildID)

  00020	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L110361
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 1d 01 00
	00		 jne	 $L110356
$L110361:

; 437  : 	COLUMN_ENTRY(m_bMinLevel)

  0003f	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L110362
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 fe 00 00
	00		 jne	 $L110356
$L110362:

; 438  : 	COLUMN_ENTRY(m_bMaxLevel)

  0005e	8d 86 35 0c 00
	00		 lea	 eax, DWORD PTR [esi+3125]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L110363
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 df 00 00
	00		 jne	 $L110356
$L110363:

; 439  : 	COLUMN_ENTRY(m_timeEnd)

  0007d	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L110364
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 c0 00 00
	00		 jne	 $L110356
$L110364:

; 440  : 	COLUMN_ENTRY_STR(m_szTitle)

  0009c	68 01 01 00 00	 push	 257			; 00000101H
  000a1	8d 96 48 0c 00
	00		 lea	 edx, DWORD PTR [esi+3144]
  000a7	52		 push	 edx
  000a8	6a 06		 push	 6
  000aa	8b ce		 mov	 ecx, esi
  000ac	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  000b1	66 85 c0	 test	 ax, ax
  000b4	74 0a		 je	 SHORT $L110365
  000b6	66 3d 01 00	 cmp	 ax, 1
  000ba	0f 85 9c 00 00
	00		 jne	 $L110356
$L110365:

; 441  : 	COLUMN_ENTRY_STR(m_szText)

  000c0	68 01 08 00 00	 push	 2049			; 00000801H
  000c5	8d 86 49 0d 00
	00		 lea	 eax, DWORD PTR [esi+3401]
  000cb	50		 push	 eax
  000cc	6a 07		 push	 7
  000ce	8b ce		 mov	 ecx, esi
  000d0	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  000d5	66 85 c0	 test	 ax, ax
  000d8	74 06		 je	 SHORT $L110366
  000da	66 3d 01 00	 cmp	 ax, 1
  000de	75 7c		 jne	 SHORT $L110356
$L110366:

; 442  : 	COLUMN_ENTRY(m_bDay)

  000e0	8d 8e 4a 15 00
	00		 lea	 ecx, DWORD PTR [esi+5450]
  000e6	51		 push	 ecx
  000e7	6a 08		 push	 8
  000e9	8b ce		 mov	 ecx, esi
  000eb	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000f0	66 85 c0	 test	 ax, ax
  000f3	74 06		 je	 SHORT $L110367
  000f5	66 3d 01 00	 cmp	 ax, 1
  000f9	75 61		 jne	 SHORT $L110356
$L110367:

; 443  : 	COLUMN_ENTRY(m_dwGold)

  000fb	8d 96 4c 15 00
	00		 lea	 edx, DWORD PTR [esi+5452]
  00101	52		 push	 edx
  00102	6a 09		 push	 9
  00104	8b ce		 mov	 ecx, esi
  00106	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0010b	66 85 c0	 test	 ax, ax
  0010e	74 06		 je	 SHORT $L110368
  00110	66 3d 01 00	 cmp	 ax, 1
  00114	75 46		 jne	 SHORT $L110356
$L110368:

; 444  : 	COLUMN_ENTRY(m_dwSilver)

  00116	8d 86 50 15 00
	00		 lea	 eax, DWORD PTR [esi+5456]
  0011c	50		 push	 eax
  0011d	6a 0a		 push	 10			; 0000000aH
  0011f	8b ce		 mov	 ecx, esi
  00121	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00126	66 85 c0	 test	 ax, ax
  00129	74 06		 je	 SHORT $L110369
  0012b	66 3d 01 00	 cmp	 ax, 1
  0012f	75 2b		 jne	 SHORT $L110356
$L110369:

; 445  : 	COLUMN_ENTRY(m_dwCooper)

  00131	8d 8e 54 15 00
	00		 lea	 ecx, DWORD PTR [esi+5460]
  00137	51		 push	 ecx
  00138	6a 0b		 push	 11			; 0000000bH
  0013a	8b ce		 mov	 ecx, esi
  0013c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00141	66 85 c0	 test	 ax, ax
  00144	74 06		 je	 SHORT $L110370
  00146	66 3d 01 00	 cmp	 ax, 1
  0014a	75 10		 jne	 SHORT $L110356
$L110370:

; 446  : 	COLUMN_ENTRY(m_dwPvPoint)

  0014c	8d 96 58 15 00
	00		 lea	 edx, DWORD PTR [esi+5464]
  00152	52		 push	 edx
  00153	6a 0c		 push	 12			; 0000000cH
  00155	8b ce		 mov	 ecx, esi
  00157	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L110356:
  0015c	5e		 pop	 esi

; 447  : END_COL()

  0015d	c3		 ret	 0
?BindColumns@CTBLGuildTacticsWanted@@UAEFXZ ENDP	; CTBLGuildTacticsWanted::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLGuildTacticsWanted@@UAE@XZ		; CTBLGuildTacticsWanted::~CTBLGuildTacticsWanted
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLGuildTacticsWanted@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLGuildTacticsWanted@@UAEPAXI@Z PROC NEAR		; CTBLGuildTacticsWanted::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLGuildTacticsWanted@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L127757
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L127757:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLGuildTacticsWanted@@UAEPAXI@Z ENDP		; CTBLGuildTacticsWanted::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLGuildTacticsWanted@@UAE@XZ
_TEXT	SEGMENT
??1CTBLGuildTacticsWanted@@UAE@XZ PROC NEAR		; CTBLGuildTacticsWanted::~CTBLGuildTacticsWanted, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLGuildTacticsWanted@@UAE@XZ ENDP			; CTBLGuildTacticsWanted::~CTBLGuildTacticsWanted
_TEXT	ENDS
PUBLIC	??0CTBLGuildRelation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildRelation::CTBLGuildRelation
PUBLIC	?GetNumCol@CTBLGuildRelation@@UAEHXZ		; CTBLGuildRelation::GetNumCol
PUBLIC	?BindColumns@CTBLGuildRelation@@UAEFXZ		; CTBLGuildRelation::BindColumns
PUBLIC	??_7CTBLGuildRelation@@6B@			; CTBLGuildRelation::`vftable'
PUBLIC	??_GCTBLGuildRelation@@UAEPAXI@Z		; CTBLGuildRelation::`scalar deleting destructor'
PUBLIC	??_C@_0DJ@IBNNGDGH@SELECT?5bType?0?5dwGuildOne?0?5dwGuil@ ; `string'
EXTRN	??_ECTBLGuildRelation@@UAEPAXI@Z:NEAR		; CTBLGuildRelation::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T127940 DD	0ffffffffH
	DD	FLAT:$L127766
$T127937 DD	019930520H
	DD	01H
	DD	FLAT:$T127940
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DJ@IBNNGDGH@SELECT?5bType?0?5dwGuildOne?0?5dwGuil@
CONST	SEGMENT
??_C@_0DJ@IBNNGDGH@SELECT?5bType?0?5dwGuildOne?0?5dwGuil@ DB 'SELECT bTyp'
	DB	'e, dwGuildOne, dwGuildTwo FROM TGUILDRELATION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLGuildRelation@@6B@
CONST	SEGMENT
??_7CTBLGuildRelation@@6B@ DD FLAT:??_ECTBLGuildRelation@@UAEPAXI@Z ; CTBLGuildRelation::`vftable'
	DD	FLAT:?GetNumCol@CTBLGuildRelation@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLGuildRelation@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLGuildRelation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T127765 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLGuildRelation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLGuildRelation::CTBLGuildRelation, COMDAT
; _this$ = ecx

; 457  : DEF_QUERY(CTBLGuildRelation, _T("SELECT bType, dwGuildOne, dwGuildTwo FROM TGUILDRELATION"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLGuildRelation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DJ@IBNNGDGH@SELECT?5bType?0?5dwGuildOne?0?5dwGuil@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T127765[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLGuildRelation@@6B@
  0005e	72 0d		 jb	 SHORT $L127938
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L127938:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L127766:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLGuildRelation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T127937
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLGuildRelation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLGuildRelation::CTBLGuildRelation
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLGuildRelation@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLGuildRelation@@UAEHXZ PROC NEAR		; CTBLGuildRelation::GetNumCol, COMDAT
; _this$ = ecx

; 459  : BEGIN_COLUMN(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumCol@CTBLGuildRelation@@UAEHXZ ENDP		; CTBLGuildRelation::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildRelation@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLGuildRelation@@UAEFXZ PROC NEAR	; CTBLGuildRelation::BindColumns, COMDAT
; _this$ = ecx

; 459  : BEGIN_COLUMN(3)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 460  : 	COLUMN_ENTRY(m_bType)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L110414
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 2b		 jne	 SHORT $L110410
$L110414:

; 461  : 	COLUMN_ENTRY(m_dwGuildOne)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L110415
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 10		 jne	 SHORT $L110410
$L110415:

; 462  : 	COLUMN_ENTRY(m_dwGuildTwo)

  00037	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L110410:
  00047	5e		 pop	 esi

; 463  : END_COL()

  00048	c3		 ret	 0
?BindColumns@CTBLGuildRelation@@UAEFXZ ENDP		; CTBLGuildRelation::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLGuildRelation@@UAE@XZ			; CTBLGuildRelation::~CTBLGuildRelation
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLGuildRelation@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLGuildRelation@@UAEPAXI@Z PROC NEAR		; CTBLGuildRelation::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLGuildRelation@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L127952
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L127952:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLGuildRelation@@UAEPAXI@Z ENDP			; CTBLGuildRelation::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLGuildRelation@@UAE@XZ
_TEXT	SEGMENT
??1CTBLGuildRelation@@UAE@XZ PROC NEAR			; CTBLGuildRelation::~CTBLGuildRelation, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLGuildRelation@@UAE@XZ ENDP			; CTBLGuildRelation::~CTBLGuildRelation
_TEXT	ENDS
PUBLIC	??0CTBLFriendGroupTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLFriendGroupTable::CTBLFriendGroupTable
PUBLIC	?GetNumCol@CTBLFriendGroupTable@@UAEHXZ		; CTBLFriendGroupTable::GetNumCol
PUBLIC	?BindColumns@CTBLFriendGroupTable@@UAEFXZ	; CTBLFriendGroupTable::BindColumns
PUBLIC	?GetNumParam@CTBLFriendGroupTable@@UAEHXZ	; CTBLFriendGroupTable::GetNumParam
PUBLIC	?BindParameters@CTBLFriendGroupTable@@UAEFH@Z	; CTBLFriendGroupTable::BindParameters
PUBLIC	??_7CTBLFriendGroupTable@@6B@			; CTBLFriendGroupTable::`vftable'
PUBLIC	??_GCTBLFriendGroupTable@@UAEPAXI@Z		; CTBLFriendGroupTable::`scalar deleting destructor'
PUBLIC	??_C@_0EA@HKHOMLJJ@SELECT?5bGroup?0?5szName?5FROM?5TFRIE@ ; `string'
EXTRN	??_ECTBLFriendGroupTable@@UAEPAXI@Z:NEAR	; CTBLFriendGroupTable::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T128135 DD	0ffffffffH
	DD	FLAT:$L127961
$T128132 DD	019930520H
	DD	01H
	DD	FLAT:$T128135
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EA@HKHOMLJJ@SELECT?5bGroup?0?5szName?5FROM?5TFRIE@
CONST	SEGMENT
??_C@_0EA@HKHOMLJJ@SELECT?5bGroup?0?5szName?5FROM?5TFRIE@ DB 'SELECT bGro'
	DB	'up, szName FROM TFRIENDGROUPTABLE WHERE dwCharID = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLFriendGroupTable@@6B@
CONST	SEGMENT
??_7CTBLFriendGroupTable@@6B@ DD FLAT:??_ECTBLFriendGroupTable@@UAEPAXI@Z ; CTBLFriendGroupTable::`vftable'
	DD	FLAT:?GetNumCol@CTBLFriendGroupTable@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLFriendGroupTable@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLFriendGroupTable@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLFriendGroupTable@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLFriendGroupTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T127960 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLFriendGroupTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLFriendGroupTable::CTBLFriendGroupTable, COMDAT
; _this$ = ecx

; 473  : DEF_QUERY(CTBLFriendGroupTable, _T("SELECT bGroup, szName FROM TFRIENDGROUPTABLE WHERE dwCharID = ?"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLFriendGroupTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@HKHOMLJJ@SELECT?5bGroup?0?5szName?5FROM?5TFRIE@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T127960[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLFriendGroupTable@@6B@
  0005e	72 0d		 jb	 SHORT $L128133
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L128133:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L127961:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLFriendGroupTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T128132
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLFriendGroupTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLFriendGroupTable::CTBLFriendGroupTable
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLFriendGroupTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLFriendGroupTable@@UAEHXZ PROC NEAR	; CTBLFriendGroupTable::GetNumCol, COMDAT
; _this$ = ecx

; 474  : BEGIN_COLUMN(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumCol@CTBLFriendGroupTable@@UAEHXZ ENDP		; CTBLFriendGroupTable::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLFriendGroupTable@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLFriendGroupTable@@UAEFXZ PROC NEAR	; CTBLFriendGroupTable::BindColumns, COMDAT
; _this$ = ecx

; 474  : BEGIN_COLUMN(2)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 475  : 	COLUMN_ENTRY(m_bGroup)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L110462
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 12		 jne	 SHORT $L110458
$L110462:

; 476  : 	COLUMN_ENTRY_STR(m_szName)

  0001c	6a 15		 push	 21			; 00000015H
  0001e	8d 8e 31 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3121]
  00024	51		 push	 ecx
  00025	6a 02		 push	 2
  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
$L110458:
  0002e	5e		 pop	 esi

; 477  : END_COL()

  0002f	c3		 ret	 0
?BindColumns@CTBLFriendGroupTable@@UAEFXZ ENDP		; CTBLFriendGroupTable::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLFriendGroupTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLFriendGroupTable@@UAEHXZ PROC NEAR	; CTBLFriendGroupTable::GetNumParam, COMDAT
; _this$ = ecx

; 479  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLFriendGroupTable@@UAEHXZ ENDP		; CTBLFriendGroupTable::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLFriendGroupTable@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLFriendGroupTable@@UAEFH@Z PROC NEAR	; CTBLFriendGroupTable::BindParameters, COMDAT
; _this$ = ecx

; 480  : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L110468
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L110468:

; 481  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLFriendGroupTable@@UAEFH@Z ENDP	; CTBLFriendGroupTable::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLFriendGroupTable@@UAE@XZ			; CTBLFriendGroupTable::~CTBLFriendGroupTable
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLFriendGroupTable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLFriendGroupTable@@UAEPAXI@Z PROC NEAR		; CTBLFriendGroupTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLFriendGroupTable@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L128153
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L128153:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLFriendGroupTable@@UAEPAXI@Z ENDP		; CTBLFriendGroupTable::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLFriendGroupTable@@UAE@XZ
_TEXT	SEGMENT
??1CTBLFriendGroupTable@@UAE@XZ PROC NEAR		; CTBLFriendGroupTable::~CTBLFriendGroupTable, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLFriendGroupTable@@UAE@XZ ENDP			; CTBLFriendGroupTable::~CTBLFriendGroupTable
_TEXT	ENDS
PUBLIC	??0CTBLFriend@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLFriend::CTBLFriend
PUBLIC	?GetNumCol@CTBLFriend@@UAEHXZ			; CTBLFriend::GetNumCol
PUBLIC	?BindColumns@CTBLFriend@@UAEFXZ			; CTBLFriend::BindColumns
PUBLIC	?GetNumParam@CTBLFriend@@UAEHXZ			; CTBLFriend::GetNumParam
PUBLIC	?BindParameters@CTBLFriend@@UAEFH@Z		; CTBLFriend::BindParameters
PUBLIC	??_7CTBLFriend@@6B@				; CTBLFriend::`vftable'
PUBLIC	??_GCTBLFriend@@UAEPAXI@Z			; CTBLFriend::`scalar deleting destructor'
PUBLIC	??_C@_0NM@KCBLABNK@SELECT?5F?4dwFriendID?0?5C?4szName?0?5F@ ; `string'
EXTRN	??_ECTBLFriend@@UAEPAXI@Z:NEAR			; CTBLFriend::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T128336 DD	0ffffffffH
	DD	FLAT:$L128162
$T128333 DD	019930520H
	DD	01H
	DD	FLAT:$T128336
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0NM@KCBLABNK@SELECT?5F?4dwFriendID?0?5C?4szName?0?5F@
CONST	SEGMENT
??_C@_0NM@KCBLABNK@SELECT?5F?4dwFriendID?0?5C?4szName?0?5F@ DB 'SELECT F.'
	DB	'dwFriendID, C.szName, F.bGroup, C.bClass, C.bLevel ', 09H, 09H
	DB	09H, 09H, 09H, 09H, ' FROM TFRIENDTABLE AS F INNER JOIN TCHART'
	DB	'ABLE AS C ON F.dwFriendID=C.dwCharID ', 09H, 09H, 09H, 09H, 09H
	DB	09H, ' WHERE F.dwCharID = ? AND F.dwFriendID = C.dwCharID AND '
	DB	'C.bDelete = 0', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLFriend@@6B@
CONST	SEGMENT
??_7CTBLFriend@@6B@ DD FLAT:??_ECTBLFriend@@UAEPAXI@Z	; CTBLFriend::`vftable'
	DD	FLAT:?GetNumCol@CTBLFriend@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLFriend@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLFriend@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLFriend@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLFriend@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T128161 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLFriend@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLFriend::CTBLFriend, COMDAT
; _this$ = ecx

; 496  : 						 WHERE F.dwCharID = ? AND F.dwFriendID = C.dwCharID AND C.bDelete = 0"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLFriend@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0NM@KCBLABNK@SELECT?5F?4dwFriendID?0?5C?4szName?0?5F@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T128161[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLFriend@@6B@
  0005e	72 0d		 jb	 SHORT $L128334
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L128334:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L128162:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLFriend@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T128333
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLFriend@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLFriend::CTBLFriend
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLFriend@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLFriend@@UAEHXZ PROC NEAR			; CTBLFriend::GetNumCol, COMDAT
; _this$ = ecx

; 498  : BEGIN_COLUMN(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumCol@CTBLFriend@@UAEHXZ ENDP			; CTBLFriend::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLFriend@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLFriend@@UAEFXZ PROC NEAR		; CTBLFriend::BindColumns, COMDAT
; _this$ = ecx

; 498  : BEGIN_COLUMN(5)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 499  : 	COLUMN_ENTRY(m_dwFriendID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L110522
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 63		 jne	 SHORT $L110518
$L110522:

; 500  : 	COLUMN_ENTRY_STR(m_szName)

  0001c	6a 33		 push	 51			; 00000033H
  0001e	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00024	51		 push	 ecx
  00025	6a 02		 push	 2
  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  0002e	66 85 c0	 test	 ax, ax
  00031	74 06		 je	 SHORT $L110523
  00033	66 3d 01 00	 cmp	 ax, 1
  00037	75 46		 jne	 SHORT $L110518
$L110523:

; 501  : 	COLUMN_ENTRY(m_bGroup)

  00039	8d 96 67 0c 00
	00		 lea	 edx, DWORD PTR [esi+3175]
  0003f	52		 push	 edx
  00040	6a 03		 push	 3
  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00049	66 85 c0	 test	 ax, ax
  0004c	74 06		 je	 SHORT $L110524
  0004e	66 3d 01 00	 cmp	 ax, 1
  00052	75 2b		 jne	 SHORT $L110518
$L110524:

; 502  : 	COLUMN_ENTRY(m_bClass)

  00054	8d 86 68 0c 00
	00		 lea	 eax, DWORD PTR [esi+3176]
  0005a	50		 push	 eax
  0005b	6a 04		 push	 4
  0005d	8b ce		 mov	 ecx, esi
  0005f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00064	66 85 c0	 test	 ax, ax
  00067	74 06		 je	 SHORT $L110525
  00069	66 3d 01 00	 cmp	 ax, 1
  0006d	75 10		 jne	 SHORT $L110518
$L110525:

; 503  : 	COLUMN_ENTRY(m_bLevel)

  0006f	8d 8e 69 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3177]
  00075	51		 push	 ecx
  00076	6a 05		 push	 5
  00078	8b ce		 mov	 ecx, esi
  0007a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L110518:
  0007f	5e		 pop	 esi

; 504  : END_COL()

  00080	c3		 ret	 0
?BindColumns@CTBLFriend@@UAEFXZ ENDP			; CTBLFriend::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLFriend@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLFriend@@UAEHXZ PROC NEAR		; CTBLFriend::GetNumParam, COMDAT
; _this$ = ecx

; 506  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLFriend@@UAEHXZ ENDP			; CTBLFriend::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLFriend@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLFriend@@UAEFH@Z PROC NEAR		; CTBLFriend::BindParameters, COMDAT
; _this$ = ecx

; 507  : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L110531
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L110531:

; 508  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLFriend@@UAEFH@Z ENDP		; CTBLFriend::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLFriend@@UAE@XZ				; CTBLFriend::~CTBLFriend
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLFriend@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLFriend@@UAEPAXI@Z PROC NEAR			; CTBLFriend::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLFriend@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L128354
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L128354:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLFriend@@UAEPAXI@Z ENDP				; CTBLFriend::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLFriend@@UAE@XZ
_TEXT	SEGMENT
??1CTBLFriend@@UAE@XZ PROC NEAR				; CTBLFriend::~CTBLFriend, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLFriend@@UAE@XZ ENDP				; CTBLFriend::~CTBLFriend
_TEXT	ENDS
PUBLIC	??0CTBLFriendTarget@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLFriendTarget::CTBLFriendTarget
PUBLIC	?GetNumCol@CTBLFriendTarget@@UAEHXZ		; CTBLFriendTarget::GetNumCol
PUBLIC	?BindColumns@CTBLFriendTarget@@UAEFXZ		; CTBLFriendTarget::BindColumns
PUBLIC	?GetNumParam@CTBLFriendTarget@@UAEHXZ		; CTBLFriendTarget::GetNumParam
PUBLIC	?BindParameters@CTBLFriendTarget@@UAEFH@Z	; CTBLFriendTarget::BindParameters
PUBLIC	??_7CTBLFriendTarget@@6B@			; CTBLFriendTarget::`vftable'
PUBLIC	??_GCTBLFriendTarget@@UAEPAXI@Z			; CTBLFriendTarget::`scalar deleting destructor'
PUBLIC	??_C@_0MB@KFOGBJIF@SELECT?5F?4dwCharID?0?5C?4szName?5?7?7?7?7@ ; `string'
EXTRN	??_ECTBLFriendTarget@@UAEPAXI@Z:NEAR		; CTBLFriendTarget::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T128537 DD	0ffffffffH
	DD	FLAT:$L128363
$T128534 DD	019930520H
	DD	01H
	DD	FLAT:$T128537
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0MB@KFOGBJIF@SELECT?5F?4dwCharID?0?5C?4szName?5?7?7?7?7@
CONST	SEGMENT
??_C@_0MB@KFOGBJIF@SELECT?5F?4dwCharID?0?5C?4szName?5?7?7?7?7@ DB 'SELECT'
	DB	' F.dwCharID, C.szName ', 09H, 09H, 09H, 09H, 09H, 09H, 09H, ' '
	DB	'  FROM TFRIENDTABLE AS F INNER JOIN TCHARTABLE AS C ON F.dwCh'
	DB	'arID=C.dwCharID ', 09H, 09H, 09H, 09H, 09H, 09H, 09H, '   WHE'
	DB	'RE F.dwFriendID = ? AND  F.dwCharID = C.dwCharID AND C.bDelet'
	DB	'e = 0', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7CTBLFriendTarget@@6B@
CONST	SEGMENT
??_7CTBLFriendTarget@@6B@ DD FLAT:??_ECTBLFriendTarget@@UAEPAXI@Z ; CTBLFriendTarget::`vftable'
	DD	FLAT:?GetNumCol@CTBLFriendTarget@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLFriendTarget@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLFriendTarget@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLFriendTarget@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLFriendTarget@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T128362 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLFriendTarget@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLFriendTarget::CTBLFriendTarget, COMDAT
; _this$ = ecx

; 520  : 							   WHERE F.dwFriendID = ? AND  F.dwCharID = C.dwCharID AND C.bDelete = 0"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLFriendTarget@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0MB@KFOGBJIF@SELECT?5F?4dwCharID?0?5C?4szName?5?7?7?7?7@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T128362[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLFriendTarget@@6B@
  0005e	72 0d		 jb	 SHORT $L128535
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L128535:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L128363:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLFriendTarget@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T128534
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLFriendTarget@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLFriendTarget::CTBLFriendTarget
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLFriendTarget@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLFriendTarget@@UAEHXZ PROC NEAR		; CTBLFriendTarget::GetNumCol, COMDAT
; _this$ = ecx

; 522  : BEGIN_COLUMN(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumCol@CTBLFriendTarget@@UAEHXZ ENDP		; CTBLFriendTarget::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLFriendTarget@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLFriendTarget@@UAEFXZ PROC NEAR		; CTBLFriendTarget::BindColumns, COMDAT
; _this$ = ecx

; 522  : BEGIN_COLUMN(2)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 523  : 	COLUMN_ENTRY(m_dwFriendID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L110582
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 12		 jne	 SHORT $L110578
$L110582:

; 524  : 	COLUMN_ENTRY_STR(m_szName)

  0001c	6a 33		 push	 51			; 00000033H
  0001e	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00024	51		 push	 ecx
  00025	6a 02		 push	 2
  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
$L110578:
  0002e	5e		 pop	 esi

; 525  : END_COL()

  0002f	c3		 ret	 0
?BindColumns@CTBLFriendTarget@@UAEFXZ ENDP		; CTBLFriendTarget::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLFriendTarget@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLFriendTarget@@UAEHXZ PROC NEAR		; CTBLFriendTarget::GetNumParam, COMDAT
; _this$ = ecx

; 527  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLFriendTarget@@UAEHXZ ENDP		; CTBLFriendTarget::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLFriendTarget@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLFriendTarget@@UAEFH@Z PROC NEAR	; CTBLFriendTarget::BindParameters, COMDAT
; _this$ = ecx

; 528  : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L110588
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L110588:

; 529  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLFriendTarget@@UAEFH@Z ENDP		; CTBLFriendTarget::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLFriendTarget@@UAE@XZ			; CTBLFriendTarget::~CTBLFriendTarget
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLFriendTarget@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLFriendTarget@@UAEPAXI@Z PROC NEAR		; CTBLFriendTarget::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLFriendTarget@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L128555
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L128555:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLFriendTarget@@UAEPAXI@Z ENDP			; CTBLFriendTarget::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLFriendTarget@@UAE@XZ
_TEXT	SEGMENT
??1CTBLFriendTarget@@UAE@XZ PROC NEAR			; CTBLFriendTarget::~CTBLFriendTarget, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLFriendTarget@@UAE@XZ ENDP			; CTBLFriendTarget::~CTBLFriendTarget
_TEXT	ENDS
PUBLIC	??0CTBLSoulmate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSoulmate::CTBLSoulmate
PUBLIC	?GetNumCol@CTBLSoulmate@@UAEHXZ			; CTBLSoulmate::GetNumCol
PUBLIC	?BindColumns@CTBLSoulmate@@UAEFXZ		; CTBLSoulmate::BindColumns
PUBLIC	?GetNumParam@CTBLSoulmate@@UAEHXZ		; CTBLSoulmate::GetNumParam
PUBLIC	?BindParameters@CTBLSoulmate@@UAEFH@Z		; CTBLSoulmate::BindParameters
PUBLIC	??_7CTBLSoulmate@@6B@				; CTBLSoulmate::`vftable'
PUBLIC	??_GCTBLSoulmate@@UAEPAXI@Z			; CTBLSoulmate::`scalar deleting destructor'
PUBLIC	??_C@_0HD@LLOJFMDF@SELECT?5dwCharID?0?5dwTarget?0?5szNAM@ ; `string'
EXTRN	??_ECTBLSoulmate@@UAEPAXI@Z:NEAR		; CTBLSoulmate::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T128738 DD	0ffffffffH
	DD	FLAT:$L128564
$T128735 DD	019930520H
	DD	01H
	DD	FLAT:$T128738
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0HD@LLOJFMDF@SELECT?5dwCharID?0?5dwTarget?0?5szNAM@
CONST	SEGMENT
??_C@_0HD@LLOJFMDF@SELECT?5dwCharID?0?5dwTarget?0?5szNAM@ DB 'SELECT dwCh'
	DB	'arID, dwTarget, szNAME, bLevel, bClass, dwTime ', 09H, 09H, 09H
	DB	09H, 09H, 09H, '   FROM TVIEW_SOULMATE ', 09H, 09H, 09H, 09H, 09H
	DB	09H, '   WHERE dwTarget = ?', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CTBLSoulmate@@6B@
CONST	SEGMENT
??_7CTBLSoulmate@@6B@ DD FLAT:??_ECTBLSoulmate@@UAEPAXI@Z ; CTBLSoulmate::`vftable'
	DD	FLAT:?GetNumCol@CTBLSoulmate@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLSoulmate@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLSoulmate@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLSoulmate@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLSoulmate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T128563 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLSoulmate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLSoulmate::CTBLSoulmate, COMDAT
; _this$ = ecx

; 544  : 						   WHERE dwTarget = ?"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLSoulmate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0HD@LLOJFMDF@SELECT?5dwCharID?0?5dwTarget?0?5szNAM@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T128563[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLSoulmate@@6B@
  0005e	72 0d		 jb	 SHORT $L128736
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L128736:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L128564:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLSoulmate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T128735
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLSoulmate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLSoulmate::CTBLSoulmate
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLSoulmate@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLSoulmate@@UAEHXZ PROC NEAR		; CTBLSoulmate::GetNumCol, COMDAT
; _this$ = ecx

; 546  : BEGIN_COLUMN(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumCol@CTBLSoulmate@@UAEHXZ ENDP			; CTBLSoulmate::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSoulmate@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLSoulmate@@UAEFXZ PROC NEAR		; CTBLSoulmate::BindColumns, COMDAT
; _this$ = ecx

; 546  : BEGIN_COLUMN(6)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 547  : 	COLUMN_ENTRY(m_dwCharID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L110642
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 7e		 jne	 SHORT $L110638
$L110642:

; 548  : 	COLUMN_ENTRY(m_dwTarget)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L110643
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 63		 jne	 SHORT $L110638
$L110643:

; 549  : 	COLUMN_ENTRY_STR(m_szName)

  00037	6a 33		 push	 51			; 00000033H
  00039	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0003f	52		 push	 edx
  00040	6a 03		 push	 3
  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00049	66 85 c0	 test	 ax, ax
  0004c	74 06		 je	 SHORT $L110644
  0004e	66 3d 01 00	 cmp	 ax, 1
  00052	75 46		 jne	 SHORT $L110638
$L110644:

; 550  : 	COLUMN_ENTRY(m_bLevel)

  00054	8d 86 67 0c 00
	00		 lea	 eax, DWORD PTR [esi+3175]
  0005a	50		 push	 eax
  0005b	6a 04		 push	 4
  0005d	8b ce		 mov	 ecx, esi
  0005f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00064	66 85 c0	 test	 ax, ax
  00067	74 06		 je	 SHORT $L110645
  00069	66 3d 01 00	 cmp	 ax, 1
  0006d	75 2b		 jne	 SHORT $L110638
$L110645:

; 551  : 	COLUMN_ENTRY(m_bClass)

  0006f	8d 8e 68 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3176]
  00075	51		 push	 ecx
  00076	6a 05		 push	 5
  00078	8b ce		 mov	 ecx, esi
  0007a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0007f	66 85 c0	 test	 ax, ax
  00082	74 06		 je	 SHORT $L110646
  00084	66 3d 01 00	 cmp	 ax, 1
  00088	75 10		 jne	 SHORT $L110638
$L110646:

; 552  : 	COLUMN_ENTRY(m_dwTime)

  0008a	8d 96 6c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3180]
  00090	52		 push	 edx
  00091	6a 06		 push	 6
  00093	8b ce		 mov	 ecx, esi
  00095	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L110638:
  0009a	5e		 pop	 esi

; 553  : END_COL()

  0009b	c3		 ret	 0
?BindColumns@CTBLSoulmate@@UAEFXZ ENDP			; CTBLSoulmate::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLSoulmate@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLSoulmate@@UAEHXZ PROC NEAR		; CTBLSoulmate::GetNumParam, COMDAT
; _this$ = ecx

; 555  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLSoulmate@@UAEHXZ ENDP			; CTBLSoulmate::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLSoulmate@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLSoulmate@@UAEFH@Z PROC NEAR		; CTBLSoulmate::BindParameters, COMDAT
; _this$ = ecx

; 556  : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L110652
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L110652:

; 557  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLSoulmate@@UAEFH@Z ENDP		; CTBLSoulmate::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLSoulmate@@UAE@XZ				; CTBLSoulmate::~CTBLSoulmate
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLSoulmate@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLSoulmate@@UAEPAXI@Z PROC NEAR			; CTBLSoulmate::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLSoulmate@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L128756
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L128756:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLSoulmate@@UAEPAXI@Z ENDP			; CTBLSoulmate::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLSoulmate@@UAE@XZ
_TEXT	SEGMENT
??1CTBLSoulmate@@UAE@XZ PROC NEAR			; CTBLSoulmate::~CTBLSoulmate, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLSoulmate@@UAE@XZ ENDP				; CTBLSoulmate::~CTBLSoulmate
_TEXT	ENDS
PUBLIC	??0CTBLMySoulmate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMySoulmate::CTBLMySoulmate
PUBLIC	?GetNumCol@CTBLMySoulmate@@UAEHXZ		; CTBLMySoulmate::GetNumCol
PUBLIC	?BindColumns@CTBLMySoulmate@@UAEFXZ		; CTBLMySoulmate::BindColumns
PUBLIC	?GetNumParam@CTBLMySoulmate@@UAEHXZ		; CTBLMySoulmate::GetNumParam
PUBLIC	?BindParameters@CTBLMySoulmate@@UAEFH@Z		; CTBLMySoulmate::BindParameters
PUBLIC	??_7CTBLMySoulmate@@6B@				; CTBLMySoulmate::`vftable'
PUBLIC	??_GCTBLMySoulmate@@UAEPAXI@Z			; CTBLMySoulmate::`scalar deleting destructor'
PUBLIC	??_C@_0HD@GNEALDAJ@SELECT?5dwCharID?0?5dwTarget?0?5szNAM@ ; `string'
EXTRN	??_ECTBLMySoulmate@@UAEPAXI@Z:NEAR		; CTBLMySoulmate::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T128939 DD	0ffffffffH
	DD	FLAT:$L128765
$T128936 DD	019930520H
	DD	01H
	DD	FLAT:$T128939
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0HD@GNEALDAJ@SELECT?5dwCharID?0?5dwTarget?0?5szNAM@
CONST	SEGMENT
??_C@_0HD@GNEALDAJ@SELECT?5dwCharID?0?5dwTarget?0?5szNAM@ DB 'SELECT dwCh'
	DB	'arID, dwTarget, szNAME, bLevel, bClass, dwTime ', 09H, 09H, 09H
	DB	09H, 09H, 09H, '   FROM TVIEW_SOULMATE ', 09H, 09H, 09H, 09H, 09H
	DB	09H, '   WHERE dwCharID = ?', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CTBLMySoulmate@@6B@
CONST	SEGMENT
??_7CTBLMySoulmate@@6B@ DD FLAT:??_ECTBLMySoulmate@@UAEPAXI@Z ; CTBLMySoulmate::`vftable'
	DD	FLAT:?GetNumCol@CTBLMySoulmate@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLMySoulmate@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLMySoulmate@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLMySoulmate@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLMySoulmate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T128764 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLMySoulmate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLMySoulmate::CTBLMySoulmate, COMDAT
; _this$ = ecx

; 572  : 						   WHERE dwCharID = ?"));

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLMySoulmate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0HD@GNEALDAJ@SELECT?5dwCharID?0?5dwTarget?0?5szNAM@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T128764[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLMySoulmate@@6B@
  0005e	72 0d		 jb	 SHORT $L128937
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L128937:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L128765:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLMySoulmate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T128936
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLMySoulmate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLMySoulmate::CTBLMySoulmate
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLMySoulmate@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLMySoulmate@@UAEHXZ PROC NEAR		; CTBLMySoulmate::GetNumCol, COMDAT
; _this$ = ecx

; 574  : BEGIN_COLUMN(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumCol@CTBLMySoulmate@@UAEHXZ ENDP			; CTBLMySoulmate::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMySoulmate@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLMySoulmate@@UAEFXZ PROC NEAR		; CTBLMySoulmate::BindColumns, COMDAT
; _this$ = ecx

; 574  : BEGIN_COLUMN(6)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 575  : 	COLUMN_ENTRY(m_dwCharID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L110706
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 7e		 jne	 SHORT $L110702
$L110706:

; 576  : 	COLUMN_ENTRY(m_dwTarget)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L110707
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 63		 jne	 SHORT $L110702
$L110707:

; 577  : 	COLUMN_ENTRY_STR(m_szName)

  00037	6a 33		 push	 51			; 00000033H
  00039	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0003f	52		 push	 edx
  00040	6a 03		 push	 3
  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00049	66 85 c0	 test	 ax, ax
  0004c	74 06		 je	 SHORT $L110708
  0004e	66 3d 01 00	 cmp	 ax, 1
  00052	75 46		 jne	 SHORT $L110702
$L110708:

; 578  : 	COLUMN_ENTRY(m_bLevel)

  00054	8d 86 67 0c 00
	00		 lea	 eax, DWORD PTR [esi+3175]
  0005a	50		 push	 eax
  0005b	6a 04		 push	 4
  0005d	8b ce		 mov	 ecx, esi
  0005f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00064	66 85 c0	 test	 ax, ax
  00067	74 06		 je	 SHORT $L110709
  00069	66 3d 01 00	 cmp	 ax, 1
  0006d	75 2b		 jne	 SHORT $L110702
$L110709:

; 579  : 	COLUMN_ENTRY(m_bClass)

  0006f	8d 8e 68 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3176]
  00075	51		 push	 ecx
  00076	6a 05		 push	 5
  00078	8b ce		 mov	 ecx, esi
  0007a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0007f	66 85 c0	 test	 ax, ax
  00082	74 06		 je	 SHORT $L110710
  00084	66 3d 01 00	 cmp	 ax, 1
  00088	75 10		 jne	 SHORT $L110702
$L110710:

; 580  : 	COLUMN_ENTRY(m_dwTime)

  0008a	8d 96 6c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3180]
  00090	52		 push	 edx
  00091	6a 06		 push	 6
  00093	8b ce		 mov	 ecx, esi
  00095	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L110702:
  0009a	5e		 pop	 esi

; 581  : END_COL()

  0009b	c3		 ret	 0
?BindColumns@CTBLMySoulmate@@UAEFXZ ENDP		; CTBLMySoulmate::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLMySoulmate@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLMySoulmate@@UAEHXZ PROC NEAR		; CTBLMySoulmate::GetNumParam, COMDAT
; _this$ = ecx

; 583  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLMySoulmate@@UAEHXZ ENDP		; CTBLMySoulmate::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLMySoulmate@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLMySoulmate@@UAEFH@Z PROC NEAR	; CTBLMySoulmate::BindParameters, COMDAT
; _this$ = ecx

; 584  : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L110716
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L110716:

; 585  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLMySoulmate@@UAEFH@Z ENDP		; CTBLMySoulmate::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLMySoulmate@@UAE@XZ			; CTBLMySoulmate::~CTBLMySoulmate
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLMySoulmate@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLMySoulmate@@UAEPAXI@Z PROC NEAR			; CTBLMySoulmate::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLMySoulmate@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L128957
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L128957:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLMySoulmate@@UAEPAXI@Z ENDP			; CTBLMySoulmate::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLMySoulmate@@UAE@XZ
_TEXT	SEGMENT
??1CTBLMySoulmate@@UAE@XZ PROC NEAR			; CTBLMySoulmate::~CTBLMySoulmate, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLMySoulmate@@UAE@XZ ENDP				; CTBLMySoulmate::~CTBLMySoulmate
_TEXT	ENDS
PUBLIC	??0CTBLOperatorChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLOperatorChart::CTBLOperatorChart
PUBLIC	?GetNumCol@CTBLOperatorChart@@UAEHXZ		; CTBLOperatorChart::GetNumCol
PUBLIC	?BindColumns@CTBLOperatorChart@@UAEFXZ		; CTBLOperatorChart::BindColumns
PUBLIC	??_7CTBLOperatorChart@@6B@			; CTBLOperatorChart::`vftable'
PUBLIC	??_GCTBLOperatorChart@@UAEPAXI@Z		; CTBLOperatorChart::`scalar deleting destructor'
PUBLIC	??_C@_0CI@BMBMLPNP@SELECT?5dwOperatorID?5FROM?5TOPERAT@ ; `string'
EXTRN	??_ECTBLOperatorChart@@UAEPAXI@Z:NEAR		; CTBLOperatorChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T129140 DD	0ffffffffH
	DD	FLAT:$L128966
$T129137 DD	019930520H
	DD	01H
	DD	FLAT:$T129140
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CI@BMBMLPNP@SELECT?5dwOperatorID?5FROM?5TOPERAT@
CONST	SEGMENT
??_C@_0CI@BMBMLPNP@SELECT?5dwOperatorID?5FROM?5TOPERAT@ DB 'SELECT dwOper'
	DB	'atorID FROM TOPERATORTABLE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CTBLOperatorChart@@6B@
CONST	SEGMENT
??_7CTBLOperatorChart@@6B@ DD FLAT:??_ECTBLOperatorChart@@UAEPAXI@Z ; CTBLOperatorChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLOperatorChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLOperatorChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLOperatorChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T128965 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLOperatorChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLOperatorChart::CTBLOperatorChart, COMDAT
; _this$ = ecx

; 593  : DEF_QUERY(CTBLOperatorChart, _T("SELECT dwOperatorID FROM TOPERATORTABLE"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLOperatorChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CI@BMBMLPNP@SELECT?5dwOperatorID?5FROM?5TOPERAT@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T128965[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLOperatorChart@@6B@
  0005e	72 0d		 jb	 SHORT $L129138
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L129138:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L128966:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLOperatorChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T129137
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLOperatorChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLOperatorChart::CTBLOperatorChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLOperatorChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLOperatorChart@@UAEHXZ PROC NEAR		; CTBLOperatorChart::GetNumCol, COMDAT
; _this$ = ecx

; 595  : BEGIN_COLUMN(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumCol@CTBLOperatorChart@@UAEHXZ ENDP		; CTBLOperatorChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLOperatorChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLOperatorChart@@UAEFXZ PROC NEAR	; CTBLOperatorChart::BindColumns, COMDAT
; _this$ = ecx

; 596  : 	COLUMN_ENTRY(m_dwOperator)

  00000	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00006	50		 push	 eax
  00007	6a 01		 push	 1
  00009	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol

; 597  : END_COL()

  0000e	c3		 ret	 0
?BindColumns@CTBLOperatorChart@@UAEFXZ ENDP		; CTBLOperatorChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLOperatorChart@@UAE@XZ			; CTBLOperatorChart::~CTBLOperatorChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLOperatorChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLOperatorChart@@UAEPAXI@Z PROC NEAR		; CTBLOperatorChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLOperatorChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L129152
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L129152:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLOperatorChart@@UAEPAXI@Z ENDP			; CTBLOperatorChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLOperatorChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLOperatorChart@@UAE@XZ PROC NEAR			; CTBLOperatorChart::~CTBLOperatorChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLOperatorChart@@UAE@XZ ENDP			; CTBLOperatorChart::~CTBLOperatorChart
_TEXT	ENDS
PUBLIC	??0CTBLEventQuarterChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLEventQuarterChart::CTBLEventQuarterChart
PUBLIC	?GetNumCol@CTBLEventQuarterChart@@UAEHXZ	; CTBLEventQuarterChart::GetNumCol
PUBLIC	?BindColumns@CTBLEventQuarterChart@@UAEFXZ	; CTBLEventQuarterChart::BindColumns
PUBLIC	??_7CTBLEventQuarterChart@@6B@			; CTBLEventQuarterChart::`vftable'
PUBLIC	??_GCTBLEventQuarterChart@@UAEPAXI@Z		; CTBLEventQuarterChart::`scalar deleting destructor'
PUBLIC	??_C@_0FA@NKOANNBJ@SELECT?5wID?0?5bDay?0?5bHour?0?5bMinute@ ; `string'
EXTRN	??_ECTBLEventQuarterChart@@UAEPAXI@Z:NEAR	; CTBLEventQuarterChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T129335 DD	0ffffffffH
	DD	FLAT:$L129161
$T129332 DD	019930520H
	DD	01H
	DD	FLAT:$T129335
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FA@NKOANNBJ@SELECT?5wID?0?5bDay?0?5bHour?0?5bMinute@
CONST	SEGMENT
??_C@_0FA@NKOANNBJ@SELECT?5wID?0?5bDay?0?5bHour?0?5bMinute@ DB 'SELECT wI'
	DB	'D, bDay, bHour, bMinute, szPresent, szAnnounce FROM TEVENTQUA'
	DB	'RTERCHART', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLEventQuarterChart@@6B@
CONST	SEGMENT
??_7CTBLEventQuarterChart@@6B@ DD FLAT:??_ECTBLEventQuarterChart@@UAEPAXI@Z ; CTBLEventQuarterChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLEventQuarterChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLEventQuarterChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLEventQuarterChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T129160 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLEventQuarterChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLEventQuarterChart::CTBLEventQuarterChart, COMDAT
; _this$ = ecx

; 610  : DEF_QUERY(CTBLEventQuarterChart, _T("SELECT wID, bDay, bHour, bMinute, szPresent, szAnnounce FROM TEVENTQUARTERCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLEventQuarterChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FA@NKOANNBJ@SELECT?5wID?0?5bDay?0?5bHour?0?5bMinute@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T129160[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLEventQuarterChart@@6B@
  0005e	72 0d		 jb	 SHORT $L129333
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L129333:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L129161:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLEventQuarterChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T129332
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLEventQuarterChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLEventQuarterChart::CTBLEventQuarterChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLEventQuarterChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLEventQuarterChart@@UAEHXZ PROC NEAR	; CTBLEventQuarterChart::GetNumCol, COMDAT
; _this$ = ecx

; 612  : BEGIN_COLUMN(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumCol@CTBLEventQuarterChart@@UAEHXZ ENDP		; CTBLEventQuarterChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLEventQuarterChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLEventQuarterChart@@UAEFXZ PROC NEAR	; CTBLEventQuarterChart::BindColumns, COMDAT
; _this$ = ecx

; 612  : BEGIN_COLUMN(5)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 613  : 	COLUMN_ENTRY(m_wID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L110808
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 83 00 00
	00		 jne	 $L110804
$L110808:

; 614  : 	COLUMN_ENTRY(m_bDay)

  00020	8d 8e 2c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3116]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 06		 je	 SHORT $L110809
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	75 68		 jne	 SHORT $L110804
$L110809:

; 615  : 	COLUMN_ENTRY(m_bHour)

  0003b	8d 96 2d 0c 00
	00		 lea	 edx, DWORD PTR [esi+3117]
  00041	52		 push	 edx
  00042	6a 03		 push	 3
  00044	8b ce		 mov	 ecx, esi
  00046	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004b	66 85 c0	 test	 ax, ax
  0004e	74 06		 je	 SHORT $L110810
  00050	66 3d 01 00	 cmp	 ax, 1
  00054	75 4d		 jne	 SHORT $L110804
$L110810:

; 616  : 	COLUMN_ENTRY(m_bMinute)

  00056	8d 86 2e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3118]
  0005c	50		 push	 eax
  0005d	6a 04		 push	 4
  0005f	8b ce		 mov	 ecx, esi
  00061	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00066	66 85 c0	 test	 ax, ax
  00069	74 06		 je	 SHORT $L110811
  0006b	66 3d 01 00	 cmp	 ax, 1
  0006f	75 32		 jne	 SHORT $L110804
$L110811:

; 617  : 	COLUMN_ENTRY_STR(m_szPresent)

  00071	6a 33		 push	 51			; 00000033H
  00073	8d 8e 32 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3122]
  00079	51		 push	 ecx
  0007a	6a 05		 push	 5
  0007c	8b ce		 mov	 ecx, esi
  0007e	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00083	66 85 c0	 test	 ax, ax
  00086	74 06		 je	 SHORT $L110812
  00088	66 3d 01 00	 cmp	 ax, 1
  0008c	75 15		 jne	 SHORT $L110804
$L110812:

; 618  : 	COLUMN_ENTRY_STR(m_szAnnounce)

  0008e	68 01 04 00 00	 push	 1025			; 00000401H
  00093	8d 96 65 0c 00
	00		 lea	 edx, DWORD PTR [esi+3173]
  00099	52		 push	 edx
  0009a	6a 06		 push	 6
  0009c	8b ce		 mov	 ecx, esi
  0009e	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
$L110804:
  000a3	5e		 pop	 esi

; 619  : END_COL()

  000a4	c3		 ret	 0
?BindColumns@CTBLEventQuarterChart@@UAEFXZ ENDP		; CTBLEventQuarterChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLEventQuarterChart@@UAE@XZ		; CTBLEventQuarterChart::~CTBLEventQuarterChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLEventQuarterChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLEventQuarterChart@@UAEPAXI@Z PROC NEAR		; CTBLEventQuarterChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLEventQuarterChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L129347
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L129347:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLEventQuarterChart@@UAEPAXI@Z ENDP		; CTBLEventQuarterChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLEventQuarterChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLEventQuarterChart@@UAE@XZ PROC NEAR		; CTBLEventQuarterChart::~CTBLEventQuarterChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLEventQuarterChart@@UAE@XZ ENDP			; CTBLEventQuarterChart::~CTBLEventQuarterChart
_TEXT	ENDS
PUBLIC	??0CTBLBattleTimeChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLBattleTimeChart::CTBLBattleTimeChart
PUBLIC	?GetNumCol@CTBLBattleTimeChart@@UAEHXZ		; CTBLBattleTimeChart::GetNumCol
PUBLIC	?BindColumns@CTBLBattleTimeChart@@UAEFXZ	; CTBLBattleTimeChart::BindColumns
PUBLIC	??_7CTBLBattleTimeChart@@6B@			; CTBLBattleTimeChart::`vftable'
PUBLIC	??_GCTBLBattleTimeChart@@UAEPAXI@Z		; CTBLBattleTimeChart::`scalar deleting destructor'
PUBLIC	??_C@_0HC@DGIPDPHL@SELECT?5bType?0?5dwBattleDur?0?5dwBat@ ; `string'
EXTRN	??_ECTBLBattleTimeChart@@UAEPAXI@Z:NEAR		; CTBLBattleTimeChart::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T129530 DD	0ffffffffH
	DD	FLAT:$L129356
$T129527 DD	019930520H
	DD	01H
	DD	FLAT:$T129530
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0HC@DGIPDPHL@SELECT?5bType?0?5dwBattleDur?0?5dwBat@
CONST	SEGMENT
??_C@_0HC@DGIPDPHL@SELECT?5bType?0?5dwBattleDur?0?5dwBat@ DB 'SELECT bTyp'
	DB	'e, dwBattleDur, dwBattleStart, dwAlarmStart, dwAlarmEnd, dwPe'
	DB	'aceDur, bDay, bWeek FROM TBATTLETIMECHART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLBattleTimeChart@@6B@
CONST	SEGMENT
??_7CTBLBattleTimeChart@@6B@ DD FLAT:??_ECTBLBattleTimeChart@@UAEPAXI@Z ; CTBLBattleTimeChart::`vftable'
	DD	FLAT:?GetNumCol@CTBLBattleTimeChart@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLBattleTimeChart@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLBattleTimeChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T129355 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLBattleTimeChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLBattleTimeChart::CTBLBattleTimeChart, COMDAT
; _this$ = ecx

; 634  : DEF_QUERY(CTBLBattleTimeChart, _T("SELECT bType, dwBattleDur, dwBattleStart, dwAlarmStart, dwAlarmEnd, dwPeaceDur, bDay, bWeek FROM TBATTLETIMECHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLBattleTimeChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0HC@DGIPDPHL@SELECT?5bType?0?5dwBattleDur?0?5dwBat@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T129355[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLBattleTimeChart@@6B@
  0005e	72 0d		 jb	 SHORT $L129528
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L129528:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L129356:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLBattleTimeChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T129527
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLBattleTimeChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLBattleTimeChart::CTBLBattleTimeChart
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLBattleTimeChart@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLBattleTimeChart@@UAEHXZ PROC NEAR	; CTBLBattleTimeChart::GetNumCol, COMDAT
; _this$ = ecx

; 636  : BEGIN_COLUMN(8)

  00000	b8 08 00 00 00	 mov	 eax, 8
  00005	c3		 ret	 0
?GetNumCol@CTBLBattleTimeChart@@UAEHXZ ENDP		; CTBLBattleTimeChart::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLBattleTimeChart@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLBattleTimeChart@@UAEFXZ PROC NEAR	; CTBLBattleTimeChart::BindColumns, COMDAT
; _this$ = ecx

; 636  : BEGIN_COLUMN(8)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 637  : 	COLUMN_ENTRY(m_bType)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L110861
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 b6 00 00
	00		 jne	 $L110857
$L110861:

; 638  : 	COLUMN_ENTRY(m_dwBattleDur)

  00020	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L110862
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 97 00 00
	00		 jne	 $L110857
$L110862:

; 639  : 	COLUMN_ENTRY(m_dwBattleStart)

  0003f	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L110863
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 7c		 jne	 SHORT $L110857
$L110863:

; 640  : 	COLUMN_ENTRY(m_dwAlarmStart)

  0005a	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00060	50		 push	 eax
  00061	6a 04		 push	 4
  00063	8b ce		 mov	 ecx, esi
  00065	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0006a	66 85 c0	 test	 ax, ax
  0006d	74 06		 je	 SHORT $L110864
  0006f	66 3d 01 00	 cmp	 ax, 1
  00073	75 61		 jne	 SHORT $L110857
$L110864:

; 641  : 	COLUMN_ENTRY(m_dwAlarmEnd)

  00075	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  0007b	51		 push	 ecx
  0007c	6a 05		 push	 5
  0007e	8b ce		 mov	 ecx, esi
  00080	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00085	66 85 c0	 test	 ax, ax
  00088	74 06		 je	 SHORT $L110865
  0008a	66 3d 01 00	 cmp	 ax, 1
  0008e	75 46		 jne	 SHORT $L110857
$L110865:

; 642  : 	COLUMN_ENTRY(m_dwPeaceDur)

  00090	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  00096	52		 push	 edx
  00097	6a 06		 push	 6
  00099	8b ce		 mov	 ecx, esi
  0009b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000a0	66 85 c0	 test	 ax, ax
  000a3	74 06		 je	 SHORT $L110866
  000a5	66 3d 01 00	 cmp	 ax, 1
  000a9	75 2b		 jne	 SHORT $L110857
$L110866:

; 643  : 	COLUMN_ENTRY(m_bDay)

  000ab	8d 86 44 0c 00
	00		 lea	 eax, DWORD PTR [esi+3140]
  000b1	50		 push	 eax
  000b2	6a 07		 push	 7
  000b4	8b ce		 mov	 ecx, esi
  000b6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000bb	66 85 c0	 test	 ax, ax
  000be	74 06		 je	 SHORT $L110867
  000c0	66 3d 01 00	 cmp	 ax, 1
  000c4	75 10		 jne	 SHORT $L110857
$L110867:

; 644  : 	COLUMN_ENTRY(m_bWeek)

  000c6	8d 8e 45 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3141]
  000cc	51		 push	 ecx
  000cd	6a 08		 push	 8
  000cf	8b ce		 mov	 ecx, esi
  000d1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L110857:
  000d6	5e		 pop	 esi

; 645  : END_COL()

  000d7	c3		 ret	 0
?BindColumns@CTBLBattleTimeChart@@UAEFXZ ENDP		; CTBLBattleTimeChart::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLBattleTimeChart@@UAE@XZ			; CTBLBattleTimeChart::~CTBLBattleTimeChart
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLBattleTimeChart@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLBattleTimeChart@@UAEPAXI@Z PROC NEAR		; CTBLBattleTimeChart::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLBattleTimeChart@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L129542
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L129542:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLBattleTimeChart@@UAEPAXI@Z ENDP			; CTBLBattleTimeChart::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLBattleTimeChart@@UAE@XZ
_TEXT	SEGMENT
??1CTBLBattleTimeChart@@UAE@XZ PROC NEAR		; CTBLBattleTimeChart::~CTBLBattleTimeChart, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLBattleTimeChart@@UAE@XZ ENDP			; CTBLBattleTimeChart::~CTBLBattleTimeChart
_TEXT	ENDS
PUBLIC	??0CTBLSvrMsg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSvrMsg::CTBLSvrMsg
PUBLIC	?GetNumCol@CTBLSvrMsg@@UAEHXZ			; CTBLSvrMsg::GetNumCol
PUBLIC	?BindColumns@CTBLSvrMsg@@UAEFXZ			; CTBLSvrMsg::BindColumns
PUBLIC	??_7CTBLSvrMsg@@6B@				; CTBLSvrMsg::`vftable'
PUBLIC	??_GCTBLSvrMsg@@UAEPAXI@Z			; CTBLSvrMsg::`scalar deleting destructor'
PUBLIC	??_C@_0CJ@JJBDOFJM@SELECT?5dwID?0?5szMessage?5FROM?5TSVR@ ; `string'
EXTRN	??_ECTBLSvrMsg@@UAEPAXI@Z:NEAR			; CTBLSvrMsg::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T129725 DD	0ffffffffH
	DD	FLAT:$L129551
$T129722 DD	019930520H
	DD	01H
	DD	FLAT:$T129725
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CJ@JJBDOFJM@SELECT?5dwID?0?5szMessage?5FROM?5TSVR@
CONST	SEGMENT
??_C@_0CJ@JJBDOFJM@SELECT?5dwID?0?5szMessage?5FROM?5TSVR@ DB 'SELECT dwID'
	DB	', szMessage FROM TSVRMSGCHART', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CTBLSvrMsg@@6B@
CONST	SEGMENT
??_7CTBLSvrMsg@@6B@ DD FLAT:??_ECTBLSvrMsg@@UAEPAXI@Z	; CTBLSvrMsg::`vftable'
	DD	FLAT:?GetNumCol@CTBLSvrMsg@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLSvrMsg@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLSvrMsg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T129550 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLSvrMsg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLSvrMsg::CTBLSvrMsg, COMDAT
; _this$ = ecx

; 654  : DEF_QUERY(CTBLSvrMsg, _T("SELECT dwID, szMessage FROM TSVRMSGCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLSvrMsg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CJ@JJBDOFJM@SELECT?5dwID?0?5szMessage?5FROM?5TSVR@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T129550[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLSvrMsg@@6B@
  0005e	72 0d		 jb	 SHORT $L129723
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L129723:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L129551:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLSvrMsg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T129722
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLSvrMsg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLSvrMsg::CTBLSvrMsg
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLSvrMsg@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLSvrMsg@@UAEHXZ PROC NEAR			; CTBLSvrMsg::GetNumCol, COMDAT
; _this$ = ecx

; 656  : BEGIN_COLUMN(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumCol@CTBLSvrMsg@@UAEHXZ ENDP			; CTBLSvrMsg::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLSvrMsg@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLSvrMsg@@UAEFXZ PROC NEAR		; CTBLSvrMsg::BindColumns, COMDAT
; _this$ = ecx

; 656  : BEGIN_COLUMN(2)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 657  : 	COLUMN_ENTRY(m_dwID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L110910
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 15		 jne	 SHORT $L110906
$L110910:

; 658  : 	COLUMN_ENTRY_STR(m_szMessage)

  0001c	68 01 01 00 00	 push	 257			; 00000101H
  00021	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00027	51		 push	 ecx
  00028	6a 02		 push	 2
  0002a	8b ce		 mov	 ecx, esi
  0002c	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
$L110906:
  00031	5e		 pop	 esi

; 659  : END_COL()

  00032	c3		 ret	 0
?BindColumns@CTBLSvrMsg@@UAEFXZ ENDP			; CTBLSvrMsg::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLSvrMsg@@UAE@XZ				; CTBLSvrMsg::~CTBLSvrMsg
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLSvrMsg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLSvrMsg@@UAEPAXI@Z PROC NEAR			; CTBLSvrMsg::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLSvrMsg@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L129737
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L129737:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLSvrMsg@@UAEPAXI@Z ENDP				; CTBLSvrMsg::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLSvrMsg@@UAE@XZ
_TEXT	SEGMENT
??1CTBLSvrMsg@@UAE@XZ PROC NEAR				; CTBLSvrMsg::~CTBLSvrMsg, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLSvrMsg@@UAE@XZ ENDP				; CTBLSvrMsg::~CTBLSvrMsg
_TEXT	ENDS
PUBLIC	??0CTBLItemFind@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLItemFind::CTBLItemFind
PUBLIC	?GetNumCol@CTBLItemFind@@UAEHXZ			; CTBLItemFind::GetNumCol
PUBLIC	?BindColumns@CTBLItemFind@@UAEFXZ		; CTBLItemFind::BindColumns
PUBLIC	?GetNumParam@CTBLItemFind@@UAEHXZ		; CTBLItemFind::GetNumParam
PUBLIC	?BindParameters@CTBLItemFind@@UAEFH@Z		; CTBLItemFind::BindParameters
PUBLIC	??_7CTBLItemFind@@6B@				; CTBLItemFind::`vftable'
PUBLIC	??_GCTBLItemFind@@UAEPAXI@Z			; CTBLItemFind::`scalar deleting destructor'
PUBLIC	??_C@_0FF@JAAGBAMG@SELECT?5wItemID?0bInitState?0szName@ ; `string'
EXTRN	??_ECTBLItemFind@@UAEPAXI@Z:NEAR		; CTBLItemFind::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T129920 DD	0ffffffffH
	DD	FLAT:$L129746
$T129917 DD	019930520H
	DD	01H
	DD	FLAT:$T129920
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FF@JAAGBAMG@SELECT?5wItemID?0bInitState?0szName@
CONST	SEGMENT
??_C@_0FF@JAAGBAMG@SELECT?5wItemID?0bInitState?0szName@ DB 'SELECT wItemI'
	DB	'D,bInitState,szName FROM TITEMCHART WHERE szName LIKE ? OR wI'
	DB	'temID = ? ', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLItemFind@@6B@
CONST	SEGMENT
??_7CTBLItemFind@@6B@ DD FLAT:??_ECTBLItemFind@@UAEPAXI@Z ; CTBLItemFind::`vftable'
	DD	FLAT:?GetNumCol@CTBLItemFind@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLItemFind@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLItemFind@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLItemFind@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLItemFind@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T129745 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLItemFind@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLItemFind::CTBLItemFind, COMDAT
; _this$ = ecx

; 671  : DEF_QUERY(CTBLItemFind, _T("SELECT wItemID,bInitState,szName FROM TITEMCHART WHERE szName LIKE ? OR wItemID = ? "))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLItemFind@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FF@JAAGBAMG@SELECT?5wItemID?0bInitState?0szName@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T129745[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLItemFind@@6B@
  0005e	72 0d		 jb	 SHORT $L129918
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L129918:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L129746:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLItemFind@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T129917
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLItemFind@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLItemFind::CTBLItemFind
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLItemFind@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLItemFind@@UAEHXZ PROC NEAR		; CTBLItemFind::GetNumCol, COMDAT
; _this$ = ecx

; 673  : BEGIN_COLUMN(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumCol@CTBLItemFind@@UAEHXZ ENDP			; CTBLItemFind::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLItemFind@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLItemFind@@UAEFXZ PROC NEAR		; CTBLItemFind::BindColumns, COMDAT
; _this$ = ecx

; 673  : BEGIN_COLUMN(3)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 674  : 	COLUMN_ENTRY(m_wItemID)

  00003	8d 86 2e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3118]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L110959
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 2d		 jne	 SHORT $L110955
$L110959:

; 675  : 	COLUMN_ENTRY(m_bInitState)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L110960
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 12		 jne	 SHORT $L110955
$L110960:

; 676  : 	COLUMN_ENTRY_STR(m_szName)

  00037	6a 33		 push	 51			; 00000033H
  00039	8d 96 31 0c 00
	00		 lea	 edx, DWORD PTR [esi+3121]
  0003f	52		 push	 edx
  00040	6a 03		 push	 3
  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
$L110955:
  00049	5e		 pop	 esi

; 677  : END_COL()

  0004a	c3		 ret	 0
?BindColumns@CTBLItemFind@@UAEFXZ ENDP			; CTBLItemFind::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLItemFind@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLItemFind@@UAEHXZ PROC NEAR		; CTBLItemFind::GetNumParam, COMDAT
; _this$ = ecx

; 679  : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CTBLItemFind@@UAEHXZ ENDP			; CTBLItemFind::GetNumParam
_TEXT	ENDS
EXTRN	?BindParam@CSqlBase@@QAEFFFPAG@Z:NEAR		; CSqlBase::BindParam
EXTRN	?BindParamStr@CSqlBase@@QAEFFFPADJ@Z:NEAR	; CSqlBase::BindParamStr
; Function compile flags: /Ogty
;	COMDAT ?BindParameters@CTBLItemFind@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLItemFind@@UAEFH@Z PROC NEAR		; CTBLItemFind::BindParameters, COMDAT
; _this$ = ecx

; 679  : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 680  : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT,m_szFindName)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	8b f1		 mov	 esi, ecx
  00008	33 c0		 xor	 eax, eax
  0000a	85 ff		 test	 edi, edi
  0000c	c7 86 10 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2064], -3 ; fffffffdH
  00016	75 1d		 jne	 SHORT $L110971
  00018	6a 33		 push	 51			; 00000033H
  0001a	8d 86 64 0c 00
	00		 lea	 eax, DWORD PTR [esi+3172]
  00020	50		 push	 eax
  00021	6a 01		 push	 1
  00023	6a 01		 push	 1
  00025	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
  0002a	66 85 c0	 test	 ax, ax
  0002d	74 06		 je	 SHORT $L110971
  0002f	66 3d 01 00	 cmp	 ax, 1
  00033	75 20		 jne	 SHORT $L110966
$L110971:

; 681  : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wFindID)	

  00035	85 ff		 test	 edi, edi
  00037	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  00041	75 12		 jne	 SHORT $L110966
  00043	8d 8e 2c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3116]
  00049	51		 push	 ecx
  0004a	6a 02		 push	 2
  0004c	6a 01		 push	 1
  0004e	8b ce		 mov	 ecx, esi
  00050	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L110966:
  00055	5f		 pop	 edi
  00056	5e		 pop	 esi

; 682  : END_PARAM()

  00057	c2 04 00	 ret	 4
?BindParameters@CTBLItemFind@@UAEFH@Z ENDP		; CTBLItemFind::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLItemFind@@UAE@XZ				; CTBLItemFind::~CTBLItemFind
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLItemFind@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLItemFind@@UAEPAXI@Z PROC NEAR			; CTBLItemFind::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLItemFind@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L129938
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L129938:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLItemFind@@UAEPAXI@Z ENDP			; CTBLItemFind::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLItemFind@@UAE@XZ
_TEXT	SEGMENT
??1CTBLItemFind@@UAE@XZ PROC NEAR			; CTBLItemFind::~CTBLItemFind, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLItemFind@@UAE@XZ ENDP				; CTBLItemFind::~CTBLItemFind
_TEXT	ENDS
PUBLIC	??0CTBLGuildPvPointReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildPvPointReward::CTBLGuildPvPointReward
PUBLIC	?GetNumCol@CTBLGuildPvPointReward@@UAEHXZ	; CTBLGuildPvPointReward::GetNumCol
PUBLIC	?BindColumns@CTBLGuildPvPointReward@@UAEFXZ	; CTBLGuildPvPointReward::BindColumns
PUBLIC	?GetNumParam@CTBLGuildPvPointReward@@UAEHXZ	; CTBLGuildPvPointReward::GetNumParam
PUBLIC	?BindParameters@CTBLGuildPvPointReward@@UAEFH@Z	; CTBLGuildPvPointReward::BindParameters
PUBLIC	??_7CTBLGuildPvPointReward@@6B@			; CTBLGuildPvPointReward::`vftable'
PUBLIC	??_GCTBLGuildPvPointReward@@UAEPAXI@Z		; CTBLGuildPvPointReward::`scalar deleting destructor'
PUBLIC	??_C@_0GN@FDBMPMFI@SELECT?5TOP?550?5szName?0?5dwPoint?0?5d@ ; `string'
EXTRN	??_ECTBLGuildPvPointReward@@UAEPAXI@Z:NEAR	; CTBLGuildPvPointReward::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T130121 DD	0ffffffffH
	DD	FLAT:$L129947
$T130118 DD	019930520H
	DD	01H
	DD	FLAT:$T130121
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0GN@FDBMPMFI@SELECT?5TOP?550?5szName?0?5dwPoint?0?5d@
CONST	SEGMENT
??_C@_0GN@FDBMPMFI@SELECT?5TOP?550?5szName?0?5dwPoint?0?5d@ DB 'SELECT TO'
	DB	'P 50 szName, dwPoint, dlDate FROM TGUILDPVPOINTREWARDTABLE WH'
	DB	'ERE dwGuildID = ? ORDER BY dlDate DESC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLGuildPvPointReward@@6B@
CONST	SEGMENT
??_7CTBLGuildPvPointReward@@6B@ DD FLAT:??_ECTBLGuildPvPointReward@@UAEPAXI@Z ; CTBLGuildPvPointReward::`vftable'
	DD	FLAT:?GetNumCol@CTBLGuildPvPointReward@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLGuildPvPointReward@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLGuildPvPointReward@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLGuildPvPointReward@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLGuildPvPointReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T129946 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLGuildPvPointReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLGuildPvPointReward::CTBLGuildPvPointReward, COMDAT
; _this$ = ecx

; 693  : DEF_QUERY(CTBLGuildPvPointReward, _T("SELECT TOP 50 szName, dwPoint, dlDate FROM TGUILDPVPOINTREWARDTABLE WHERE dwGuildID = ? ORDER BY dlDate DESC"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLGuildPvPointReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0GN@FDBMPMFI@SELECT?5TOP?550?5szName?0?5dwPoint?0?5d@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T129946[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLGuildPvPointReward@@6B@
  0005e	72 0d		 jb	 SHORT $L130119
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L130119:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L129947:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLGuildPvPointReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T130118
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLGuildPvPointReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLGuildPvPointReward::CTBLGuildPvPointReward
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLGuildPvPointReward@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLGuildPvPointReward@@UAEHXZ PROC NEAR	; CTBLGuildPvPointReward::GetNumCol, COMDAT
; _this$ = ecx

; 695  : BEGIN_COLUMN(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumCol@CTBLGuildPvPointReward@@UAEHXZ ENDP		; CTBLGuildPvPointReward::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildPvPointReward@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLGuildPvPointReward@@UAEFXZ PROC NEAR	; CTBLGuildPvPointReward::BindColumns, COMDAT
; _this$ = ecx

; 695  : BEGIN_COLUMN(3)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 696  : 	COLUMN_ENTRY_STR(m_szName)

  00003	6a 32		 push	 50			; 00000032H
  00005	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  0000b	50		 push	 eax
  0000c	6a 01		 push	 1
  0000e	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00013	66 85 c0	 test	 ax, ax
  00016	74 06		 je	 SHORT $L111020
  00018	66 3d 01 00	 cmp	 ax, 1
  0001c	75 2b		 jne	 SHORT $L111016
$L111020:

; 697  : 	COLUMN_ENTRY(m_dwPoint)

  0001e	8d 8e 64 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3172]
  00024	51		 push	 ecx
  00025	6a 02		 push	 2
  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0002e	66 85 c0	 test	 ax, ax
  00031	74 06		 je	 SHORT $L111021
  00033	66 3d 01 00	 cmp	 ax, 1
  00037	75 10		 jne	 SHORT $L111016
$L111021:

; 698  : 	COLUMN_ENTRY(m_dlDate)

  00039	8d 96 68 0c 00
	00		 lea	 edx, DWORD PTR [esi+3176]
  0003f	52		 push	 edx
  00040	6a 03		 push	 3
  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
$L111016:
  00049	5e		 pop	 esi

; 699  : END_COL()

  0004a	c3		 ret	 0
?BindColumns@CTBLGuildPvPointReward@@UAEFXZ ENDP	; CTBLGuildPvPointReward::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLGuildPvPointReward@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLGuildPvPointReward@@UAEHXZ PROC NEAR	; CTBLGuildPvPointReward::GetNumParam, COMDAT
; _this$ = ecx

; 701  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLGuildPvPointReward@@UAEHXZ ENDP	; CTBLGuildPvPointReward::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLGuildPvPointReward@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLGuildPvPointReward@@UAEFH@Z PROC NEAR ; CTBLGuildPvPointReward::BindParameters, COMDAT
; _this$ = ecx

; 702  : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L111027
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L111027:

; 703  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLGuildPvPointReward@@UAEFH@Z ENDP	; CTBLGuildPvPointReward::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLGuildPvPointReward@@UAE@XZ		; CTBLGuildPvPointReward::~CTBLGuildPvPointReward
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLGuildPvPointReward@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLGuildPvPointReward@@UAEPAXI@Z PROC NEAR		; CTBLGuildPvPointReward::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLGuildPvPointReward@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L130139
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L130139:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLGuildPvPointReward@@UAEPAXI@Z ENDP		; CTBLGuildPvPointReward::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLGuildPvPointReward@@UAE@XZ
_TEXT	SEGMENT
??1CTBLGuildPvPointReward@@UAE@XZ PROC NEAR		; CTBLGuildPvPointReward::~CTBLGuildPvPointReward, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLGuildPvPointReward@@UAE@XZ ENDP			; CTBLGuildPvPointReward::~CTBLGuildPvPointReward
_TEXT	ENDS
PUBLIC	??0CTBLGuildPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildPvPRecord::CTBLGuildPvPRecord
PUBLIC	?GetNumCol@CTBLGuildPvPRecord@@UAEHXZ		; CTBLGuildPvPRecord::GetNumCol
PUBLIC	?BindColumns@CTBLGuildPvPRecord@@UAEFXZ		; CTBLGuildPvPRecord::BindColumns
PUBLIC	?GetNumParam@CTBLGuildPvPRecord@@UAEHXZ		; CTBLGuildPvPRecord::GetNumParam
PUBLIC	?BindParameters@CTBLGuildPvPRecord@@UAEFH@Z	; CTBLGuildPvPRecord::BindParameters
PUBLIC	??_7CTBLGuildPvPRecord@@6B@			; CTBLGuildPvPRecord::`vftable'
PUBLIC	??_GCTBLGuildPvPRecord@@UAEPAXI@Z		; CTBLGuildPvPRecord::`scalar deleting destructor'
PUBLIC	??_C@_0MD@KDLNDHPD@SELECT?5?7dwCharID?0?5?7dwDate?0?5?7wKil@ ; `string'
EXTRN	??_ECTBLGuildPvPRecord@@UAEPAXI@Z:NEAR		; CTBLGuildPvPRecord::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T130322 DD	0ffffffffH
	DD	FLAT:$L130148
$T130319 DD	019930520H
	DD	01H
	DD	FLAT:$T130322
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0MD@KDLNDHPD@SELECT?5?7dwCharID?0?5?7dwDate?0?5?7wKil@
CONST	SEGMENT
??_C@_0MD@KDLNDHPD@SELECT?5?7dwCharID?0?5?7dwDate?0?5?7wKil@ DB 'SELECT ', 09H
	DB	'dwCharID, ', 09H, 'dwDate, ', 09H, 'wKillCount, ', 09H, 'wDie'
	DB	'Count, ', 09H, 'dwPoint_1, ', 09H, 'dwPoint_2, ', 09H, 'dwPoi'
	DB	'nt_3, ', 09H, 'dwPoint_4, ', 09H, 'dwPoint_5, ', 09H, 'dwPoin'
	DB	't_6, ', 09H, 'dwPoint_7, ', 09H, 'dwPoint_8 ', 09H, 'FROM TGU'
	DB	'ILDPVPRECORDTABLE WHERE dwGuildID = ? ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLGuildPvPRecord@@6B@
CONST	SEGMENT
??_7CTBLGuildPvPRecord@@6B@ DD FLAT:??_ECTBLGuildPvPRecord@@UAEPAXI@Z ; CTBLGuildPvPRecord::`vftable'
	DD	FLAT:?GetNumCol@CTBLGuildPvPRecord@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLGuildPvPRecord@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLGuildPvPRecord@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLGuildPvPRecord@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLGuildPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T130147 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLGuildPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLGuildPvPRecord::CTBLGuildPvPRecord, COMDAT
; _this$ = ecx

; 729  : 	FROM TGUILDPVPRECORDTABLE WHERE dwGuildID = ? "))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLGuildPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0MD@KDLNDHPD@SELECT?5?7dwCharID?0?5?7dwDate?0?5?7wKil@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T130147[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLGuildPvPRecord@@6B@
  0005e	72 0d		 jb	 SHORT $L130320
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L130320:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L130148:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLGuildPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T130319
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLGuildPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLGuildPvPRecord::CTBLGuildPvPRecord
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLGuildPvPRecord@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLGuildPvPRecord@@UAEHXZ PROC NEAR		; CTBLGuildPvPRecord::GetNumCol, COMDAT
; _this$ = ecx

; 731  : BEGIN_COLUMN(12)

  00000	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00005	c3		 ret	 0
?GetNumCol@CTBLGuildPvPRecord@@UAEHXZ ENDP		; CTBLGuildPvPRecord::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGuildPvPRecord@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLGuildPvPRecord@@UAEFXZ PROC NEAR	; CTBLGuildPvPRecord::BindColumns, COMDAT
; _this$ = ecx

; 731  : BEGIN_COLUMN(12)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 732  : 	COLUMN_ENTRY(m_dwCharID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L111081
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 88 00 00
	00		 jne	 $L111077
$L111081:

; 733  : 	COLUMN_ENTRY(m_dwDate)

  00020	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 06		 je	 SHORT $L111082
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	75 6d		 jne	 SHORT $L111077
$L111082:

; 734  : 	COLUMN_ENTRY(m_wKillCount)

  0003b	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  00041	52		 push	 edx
  00042	6a 03		 push	 3
  00044	8b ce		 mov	 ecx, esi
  00046	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0004b	66 85 c0	 test	 ax, ax
  0004e	74 06		 je	 SHORT $L111083
  00050	66 3d 01 00	 cmp	 ax, 1
  00054	75 52		 jne	 SHORT $L111077
$L111083:
  00056	57		 push	 edi

; 735  : 	COLUMN_ENTRY(m_wDieCount)

  00057	8d 86 3a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3130]
  0005d	50		 push	 eax
  0005e	6a 04		 push	 4
  00060	8b ce		 mov	 ecx, esi
  00062	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00067	66 85 c0	 test	 ax, ax
  0006a	bf 05 00 00 00	 mov	 edi, 5
  0006f	74 06		 je	 SHORT $L111084
  00071	66 3d 01 00	 cmp	 ax, 1
  00075	75 30		 jne	 SHORT $L130334
$L111084:
  00077	53		 push	 ebx

; 736  : 	for(BYTE i=0; i<PVPE_COUNT; i++)

  00078	32 db		 xor	 bl, bl
  0007a	8d 9b 00 00 00
	00		 npad	 6
$L111086:

; 737  : 	{
; 738  : 		COLUMN_ENTRY(m_aPoint[i]);

  00080	0f b6 cb	 movzx	 ecx, bl
  00083	8d 94 8e 3c 0c
	00 00		 lea	 edx, DWORD PTR [esi+ecx*4+3132]
  0008a	52		 push	 edx
  0008b	57		 push	 edi
  0008c	8b ce		 mov	 ecx, esi
  0008e	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00093	47		 inc	 edi
  00094	66 85 c0	 test	 ax, ax
  00097	74 06		 je	 SHORT $L111087
  00099	66 3d 01 00	 cmp	 ax, 1
  0009d	75 07		 jne	 SHORT $L130335
$L111087:

; 736  : 	for(BYTE i=0; i<PVPE_COUNT; i++)

  0009f	fe c3		 inc	 bl
  000a1	80 fb 08	 cmp	 bl, 8
  000a4	72 da		 jb	 SHORT $L111086
$L130335:
  000a6	5b		 pop	 ebx
$L130334:
  000a7	5f		 pop	 edi
$L111077:
  000a8	5e		 pop	 esi

; 739  : 	}
; 740  : END_COL()

  000a9	c3		 ret	 0
?BindColumns@CTBLGuildPvPRecord@@UAEFXZ ENDP		; CTBLGuildPvPRecord::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLGuildPvPRecord@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLGuildPvPRecord@@UAEHXZ PROC NEAR	; CTBLGuildPvPRecord::GetNumParam, COMDAT
; _this$ = ecx

; 742  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLGuildPvPRecord@@UAEHXZ ENDP		; CTBLGuildPvPRecord::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLGuildPvPRecord@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLGuildPvPRecord@@UAEFH@Z PROC NEAR	; CTBLGuildPvPRecord::BindParameters, COMDAT
; _this$ = ecx

; 743  : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L111094
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L111094:

; 744  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLGuildPvPRecord@@UAEFH@Z ENDP	; CTBLGuildPvPRecord::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLGuildPvPRecord@@UAE@XZ			; CTBLGuildPvPRecord::~CTBLGuildPvPRecord
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLGuildPvPRecord@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLGuildPvPRecord@@UAEPAXI@Z PROC NEAR		; CTBLGuildPvPRecord::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLGuildPvPRecord@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L130345
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L130345:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLGuildPvPRecord@@UAEPAXI@Z ENDP			; CTBLGuildPvPRecord::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLGuildPvPRecord@@UAE@XZ
_TEXT	SEGMENT
??1CTBLGuildPvPRecord@@UAE@XZ PROC NEAR			; CTBLGuildPvPRecord::~CTBLGuildPvPRecord, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLGuildPvPRecord@@UAE@XZ ENDP			; CTBLGuildPvPRecord::~CTBLGuildPvPRecord
_TEXT	ENDS
PUBLIC	??0CTBLCastleApplicant@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCastleApplicant::CTBLCastleApplicant
PUBLIC	?GetNumCol@CTBLCastleApplicant@@UAEHXZ		; CTBLCastleApplicant::GetNumCol
PUBLIC	?BindColumns@CTBLCastleApplicant@@UAEFXZ	; CTBLCastleApplicant::BindColumns
PUBLIC	??_7CTBLCastleApplicant@@6B@			; CTBLCastleApplicant::`vftable'
PUBLIC	??_GCTBLCastleApplicant@@UAEPAXI@Z		; CTBLCastleApplicant::`scalar deleting destructor'
PUBLIC	??_C@_0DN@GNOGADJ@SELECT?5wCastleID?0?5dwCharID?0?5bCam@ ; `string'
EXTRN	??_ECTBLCastleApplicant@@UAEPAXI@Z:NEAR		; CTBLCastleApplicant::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T130528 DD	0ffffffffH
	DD	FLAT:$L130354
$T130525 DD	019930520H
	DD	01H
	DD	FLAT:$T130528
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DN@GNOGADJ@SELECT?5wCastleID?0?5dwCharID?0?5bCam@
CONST	SEGMENT
??_C@_0DN@GNOGADJ@SELECT?5wCastleID?0?5dwCharID?0?5bCam@ DB 'SELECT wCast'
	DB	'leID, dwCharID, bCamp FROM TCASTLEAPPLICANTTABLE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLCastleApplicant@@6B@
CONST	SEGMENT
??_7CTBLCastleApplicant@@6B@ DD FLAT:??_ECTBLCastleApplicant@@UAEPAXI@Z ; CTBLCastleApplicant::`vftable'
	DD	FLAT:?GetNumCol@CTBLCastleApplicant@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLCastleApplicant@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLCastleApplicant@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T130353 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLCastleApplicant@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLCastleApplicant::CTBLCastleApplicant, COMDAT
; _this$ = ecx

; 754  : DEF_QUERY(CTBLCastleApplicant, _T("SELECT wCastleID, dwCharID, bCamp FROM TCASTLEAPPLICANTTABLE"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLCastleApplicant@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DN@GNOGADJ@SELECT?5wCastleID?0?5dwCharID?0?5bCam@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T130353[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLCastleApplicant@@6B@
  0005e	72 0d		 jb	 SHORT $L130526
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L130526:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L130354:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLCastleApplicant@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T130525
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLCastleApplicant@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLCastleApplicant::CTBLCastleApplicant
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLCastleApplicant@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLCastleApplicant@@UAEHXZ PROC NEAR	; CTBLCastleApplicant::GetNumCol, COMDAT
; _this$ = ecx

; 756  : BEGIN_COLUMN(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumCol@CTBLCastleApplicant@@UAEHXZ ENDP		; CTBLCastleApplicant::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLCastleApplicant@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLCastleApplicant@@UAEFXZ PROC NEAR	; CTBLCastleApplicant::BindColumns, COMDAT
; _this$ = ecx

; 756  : BEGIN_COLUMN(3)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 757  : 	COLUMN_ENTRY(m_wCastle)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L111142
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 2b		 jne	 SHORT $L111138
$L111142:

; 758  : 	COLUMN_ENTRY(m_dwCharID)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L111143
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 10		 jne	 SHORT $L111138
$L111143:

; 759  : 	COLUMN_ENTRY(m_bCamp)

  00037	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L111138:
  00047	5e		 pop	 esi

; 760  : END_COL()

  00048	c3		 ret	 0
?BindColumns@CTBLCastleApplicant@@UAEFXZ ENDP		; CTBLCastleApplicant::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLCastleApplicant@@UAE@XZ			; CTBLCastleApplicant::~CTBLCastleApplicant
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLCastleApplicant@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLCastleApplicant@@UAEPAXI@Z PROC NEAR		; CTBLCastleApplicant::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLCastleApplicant@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L130540
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L130540:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLCastleApplicant@@UAEPAXI@Z ENDP			; CTBLCastleApplicant::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLCastleApplicant@@UAE@XZ
_TEXT	SEGMENT
??1CTBLCastleApplicant@@UAE@XZ PROC NEAR		; CTBLCastleApplicant::~CTBLCastleApplicant, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLCastleApplicant@@UAE@XZ ENDP			; CTBLCastleApplicant::~CTBLCastleApplicant
_TEXT	ENDS
PUBLIC	??0CTBLMonthPvPointTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonthPvPointTable::CTBLMonthPvPointTable
PUBLIC	?GetNumCol@CTBLMonthPvPointTable@@UAEHXZ	; CTBLMonthPvPointTable::GetNumCol
PUBLIC	?BindColumns@CTBLMonthPvPointTable@@UAEFXZ	; CTBLMonthPvPointTable::BindColumns
PUBLIC	?GetNumParam@CTBLMonthPvPointTable@@UAEHXZ	; CTBLMonthPvPointTable::GetNumParam
PUBLIC	?BindParameters@CTBLMonthPvPointTable@@UAEFH@Z	; CTBLMonthPvPointTable::BindParameters
PUBLIC	??_7CTBLMonthPvPointTable@@6B@			; CTBLMonthPvPointTable::`vftable'
PUBLIC	??_GCTBLMonthPvPointTable@@UAEPAXI@Z		; CTBLMonthPvPointTable::`scalar deleting destructor'
PUBLIC	??_C@_0DDA@IPJNIIGP@SELECT?5TOP?516?5?7M?4dwCharID?0?5?5?7C?4s@ ; `string'
EXTRN	??_ECTBLMonthPvPointTable@@UAEPAXI@Z:NEAR	; CTBLMonthPvPointTable::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T130723 DD	0ffffffffH
	DD	FLAT:$L130549
$T130720 DD	019930520H
	DD	01H
	DD	FLAT:$T130723
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DDA@IPJNIIGP@SELECT?5TOP?516?5?7M?4dwCharID?0?5?5?7C?4s@
CONST	SEGMENT
??_C@_0DDA@IPJNIIGP@SELECT?5TOP?516?5?7M?4dwCharID?0?5?5?7C?4s@ DB 'SELEC'
	DB	'T TOP 16 ', 09H, 'M.dwCharID,  ', 09H, 'C.szName, ', 09H, 'P.'
	DB	'dwTotalPoint,  ', 09H, 'M.dwPoint,  ', 09H, 'M.wWin,  ', 09H, 'M'
	DB	'.wLose, ', 09H, 'R.dwWarrior_win + R.dwRanger_win + R.dwArche'
	DB	'r_win + R.dwWizard_win + R.dwPriest_win + R.dwSorcerer_win, ', 09H
	DB	'R.dwWarrior_lose + R.dwRanger_lose + R.dwArcher_lose + R.dwWi'
	DB	'zard_lose + R.dwPriest_lose + R.dwSorcerer_lose, ', 09H, 'C.b'
	DB	'Level,  ', 09H, 'C.bClass,  ', 09H, 'C.bRace,  ', 09H, 'C.bSe'
	DB	'x,  ', 09H, 'C.bHair,  ', 09H, 'C.bFace,  ', 09H, 'M.szSay, ', 09H
	DB	'U.szName ', 09H, 'FROM TMONTHPVPOINTTABLE AS M  ', 09H, 'INNE'
	DB	'R JOIN TCHARTABLE AS C ON C.dwCharID = M.dwCharID  ', 09H, 'I'
	DB	'NNER JOIN TPVPOINTTABLE AS P ON  P.dwCharID = M.dwCharID ', 09H
	DB	'INNER JOIN TPVPRECORDTABLE AS R ON R.dwCharID = M.dwCharID  ', 09H
	DB	'LEFT JOIN TGUILDMEMBERTABLE AS G ON M.dwCharID = G.dwCharID  '
	DB	09H, 'LEFT JOIN TGUILDTABLE AS U ON G.dwGuildID = U.dwID ', 09H
	DB	'WHERE C.bCountry = ? AND M.dwPoint > 0 ', 09H, 'ORDER BY dwPo'
	DB	'int DESC, wWin DESC, wLose DESC, C.dwCharID ASC', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLMonthPvPointTable@@6B@
CONST	SEGMENT
??_7CTBLMonthPvPointTable@@6B@ DD FLAT:??_ECTBLMonthPvPointTable@@UAEPAXI@Z ; CTBLMonthPvPointTable::`vftable'
	DD	FLAT:?GetNumCol@CTBLMonthPvPointTable@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLMonthPvPointTable@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLMonthPvPointTable@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLMonthPvPointTable@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLMonthPvPointTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T130548 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLMonthPvPointTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLMonthPvPointTable::CTBLMonthPvPointTable, COMDAT
; _this$ = ecx

; 808  : 	ORDER BY dwPoint DESC, wWin DESC, wLose DESC, C.dwCharID ASC"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLMonthPvPointTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DDA@IPJNIIGP@SELECT?5TOP?516?5?7M?4dwCharID?0?5?5?7C?4s@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T130548[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLMonthPvPointTable@@6B@
  0005e	72 0d		 jb	 SHORT $L130721
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L130721:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L130549:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLMonthPvPointTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T130720
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLMonthPvPointTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLMonthPvPointTable::CTBLMonthPvPointTable
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLMonthPvPointTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLMonthPvPointTable@@UAEHXZ PROC NEAR	; CTBLMonthPvPointTable::GetNumCol, COMDAT
; _this$ = ecx

; 810  : BEGIN_COLUMN(16)

  00000	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00005	c3		 ret	 0
?GetNumCol@CTBLMonthPvPointTable@@UAEHXZ ENDP		; CTBLMonthPvPointTable::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonthPvPointTable@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLMonthPvPointTable@@UAEFXZ PROC NEAR	; CTBLMonthPvPointTable::BindColumns, COMDAT
; _this$ = ecx

; 810  : BEGIN_COLUMN(16)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 811  : 	COLUMN_ENTRY(m_dwCharID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L111204
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 bb 01 00
	00		 jne	 $L111200
$L111204:

; 812  : 	COLUMN_ENTRY_STR(m_szName)

  00020	6a 33		 push	 51			; 00000033H
  00022	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00028	51		 push	 ecx
  00029	6a 02		 push	 2
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00032	66 85 c0	 test	 ax, ax
  00035	74 0a		 je	 SHORT $L111205
  00037	66 3d 01 00	 cmp	 ax, 1
  0003b	0f 85 9a 01 00
	00		 jne	 $L111200
$L111205:

; 813  : 	COLUMN_ENTRY(m_dwTotalPoint)

  00041	8d 96 64 0c 00
	00		 lea	 edx, DWORD PTR [esi+3172]
  00047	52		 push	 edx
  00048	6a 03		 push	 3
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00051	66 85 c0	 test	 ax, ax
  00054	74 0a		 je	 SHORT $L111206
  00056	66 3d 01 00	 cmp	 ax, 1
  0005a	0f 85 7b 01 00
	00		 jne	 $L111200
$L111206:

; 814  : 	COLUMN_ENTRY(m_dwMonthPoint)

  00060	8d 86 68 0c 00
	00		 lea	 eax, DWORD PTR [esi+3176]
  00066	50		 push	 eax
  00067	6a 04		 push	 4
  00069	8b ce		 mov	 ecx, esi
  0006b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00070	66 85 c0	 test	 ax, ax
  00073	74 0a		 je	 SHORT $L111207
  00075	66 3d 01 00	 cmp	 ax, 1
  00079	0f 85 5c 01 00
	00		 jne	 $L111200
$L111207:

; 815  : 	COLUMN_ENTRY(m_wMonthWin)

  0007f	8d 8e 6c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3180]
  00085	51		 push	 ecx
  00086	6a 05		 push	 5
  00088	8b ce		 mov	 ecx, esi
  0008a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0008f	66 85 c0	 test	 ax, ax
  00092	74 0a		 je	 SHORT $L111208
  00094	66 3d 01 00	 cmp	 ax, 1
  00098	0f 85 3d 01 00
	00		 jne	 $L111200
$L111208:

; 816  : 	COLUMN_ENTRY(m_wMonthLose)

  0009e	8d 96 6e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3182]
  000a4	52		 push	 edx
  000a5	6a 06		 push	 6
  000a7	8b ce		 mov	 ecx, esi
  000a9	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000ae	66 85 c0	 test	 ax, ax
  000b1	74 0a		 je	 SHORT $L111209
  000b3	66 3d 01 00	 cmp	 ax, 1
  000b7	0f 85 1e 01 00
	00		 jne	 $L111200
$L111209:

; 817  : 	COLUMN_ENTRY(m_dwTotalWin)

  000bd	8d 86 70 0c 00
	00		 lea	 eax, DWORD PTR [esi+3184]
  000c3	50		 push	 eax
  000c4	6a 07		 push	 7
  000c6	8b ce		 mov	 ecx, esi
  000c8	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000cd	66 85 c0	 test	 ax, ax
  000d0	74 0a		 je	 SHORT $L111210
  000d2	66 3d 01 00	 cmp	 ax, 1
  000d6	0f 85 ff 00 00
	00		 jne	 $L111200
$L111210:

; 818  : 	COLUMN_ENTRY(m_dwTotalLose)

  000dc	8d 8e 74 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3188]
  000e2	51		 push	 ecx
  000e3	6a 08		 push	 8
  000e5	8b ce		 mov	 ecx, esi
  000e7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000ec	66 85 c0	 test	 ax, ax
  000ef	74 0a		 je	 SHORT $L111211
  000f1	66 3d 01 00	 cmp	 ax, 1
  000f5	0f 85 e0 00 00
	00		 jne	 $L111200
$L111211:

; 819  : 	COLUMN_ENTRY(m_bLevel)

  000fb	8d 96 79 0c 00
	00		 lea	 edx, DWORD PTR [esi+3193]
  00101	52		 push	 edx
  00102	6a 09		 push	 9
  00104	8b ce		 mov	 ecx, esi
  00106	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0010b	66 85 c0	 test	 ax, ax
  0010e	74 0a		 je	 SHORT $L111212
  00110	66 3d 01 00	 cmp	 ax, 1
  00114	0f 85 c1 00 00
	00		 jne	 $L111200
$L111212:

; 820  : 	COLUMN_ENTRY(m_bClass)

  0011a	8d 86 7a 0c 00
	00		 lea	 eax, DWORD PTR [esi+3194]
  00120	50		 push	 eax
  00121	6a 0a		 push	 10			; 0000000aH
  00123	8b ce		 mov	 ecx, esi
  00125	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0012a	66 85 c0	 test	 ax, ax
  0012d	74 0a		 je	 SHORT $L111213
  0012f	66 3d 01 00	 cmp	 ax, 1
  00133	0f 85 a2 00 00
	00		 jne	 $L111200
$L111213:

; 821  : 	COLUMN_ENTRY(m_bRace)

  00139	8d 8e 7b 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3195]
  0013f	51		 push	 ecx
  00140	6a 0b		 push	 11			; 0000000bH
  00142	8b ce		 mov	 ecx, esi
  00144	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00149	66 85 c0	 test	 ax, ax
  0014c	74 0a		 je	 SHORT $L111214
  0014e	66 3d 01 00	 cmp	 ax, 1
  00152	0f 85 83 00 00
	00		 jne	 $L111200
$L111214:

; 822  : 	COLUMN_ENTRY(m_bSex)

  00158	8d 96 7c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3196]
  0015e	52		 push	 edx
  0015f	6a 0c		 push	 12			; 0000000cH
  00161	8b ce		 mov	 ecx, esi
  00163	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00168	66 85 c0	 test	 ax, ax
  0016b	74 06		 je	 SHORT $L111215
  0016d	66 3d 01 00	 cmp	 ax, 1
  00171	75 68		 jne	 SHORT $L111200
$L111215:

; 823  : 	COLUMN_ENTRY(m_bHair)

  00173	8d 86 7d 0c 00
	00		 lea	 eax, DWORD PTR [esi+3197]
  00179	50		 push	 eax
  0017a	6a 0d		 push	 13			; 0000000dH
  0017c	8b ce		 mov	 ecx, esi
  0017e	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00183	66 85 c0	 test	 ax, ax
  00186	74 06		 je	 SHORT $L111216
  00188	66 3d 01 00	 cmp	 ax, 1
  0018c	75 4d		 jne	 SHORT $L111200
$L111216:

; 824  : 	COLUMN_ENTRY(m_bFace)

  0018e	8d 8e 7e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3198]
  00194	51		 push	 ecx
  00195	6a 0e		 push	 14			; 0000000eH
  00197	8b ce		 mov	 ecx, esi
  00199	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0019e	66 85 c0	 test	 ax, ax
  001a1	74 06		 je	 SHORT $L111217
  001a3	66 3d 01 00	 cmp	 ax, 1
  001a7	75 32		 jne	 SHORT $L111200
$L111217:

; 825  : 	COLUMN_ENTRY_STR(m_szSay)

  001a9	68 01 01 00 00	 push	 257			; 00000101H
  001ae	8d 96 7f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3199]
  001b4	52		 push	 edx
  001b5	6a 0f		 push	 15			; 0000000fH
  001b7	8b ce		 mov	 ecx, esi
  001b9	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  001be	66 85 c0	 test	 ax, ax
  001c1	74 06		 je	 SHORT $L111218
  001c3	66 3d 01 00	 cmp	 ax, 1
  001c7	75 12		 jne	 SHORT $L111200
$L111218:

; 826  : 	COLUMN_ENTRY_STR(m_szGuild)

  001c9	6a 33		 push	 51			; 00000033H
  001cb	8d 86 80 0d 00
	00		 lea	 eax, DWORD PTR [esi+3456]
  001d1	50		 push	 eax
  001d2	6a 10		 push	 16			; 00000010H
  001d4	8b ce		 mov	 ecx, esi
  001d6	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
$L111200:
  001db	5e		 pop	 esi

; 827  : END_COL()

  001dc	c3		 ret	 0
?BindColumns@CTBLMonthPvPointTable@@UAEFXZ ENDP		; CTBLMonthPvPointTable::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLMonthPvPointTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLMonthPvPointTable@@UAEHXZ PROC NEAR	; CTBLMonthPvPointTable::GetNumParam, COMDAT
; _this$ = ecx

; 829  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLMonthPvPointTable@@UAEHXZ ENDP		; CTBLMonthPvPointTable::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLMonthPvPointTable@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLMonthPvPointTable@@UAEFH@Z PROC NEAR ; CTBLMonthPvPointTable::BindParameters, COMDAT
; _this$ = ecx

; 830  : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bCountry)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L111224
  00010	8d 81 78 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3192]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L111224:

; 831  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLMonthPvPointTable@@UAEFH@Z ENDP	; CTBLMonthPvPointTable::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLMonthPvPointTable@@UAE@XZ		; CTBLMonthPvPointTable::~CTBLMonthPvPointTable
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLMonthPvPointTable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLMonthPvPointTable@@UAEPAXI@Z PROC NEAR		; CTBLMonthPvPointTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLMonthPvPointTable@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L130741
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L130741:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLMonthPvPointTable@@UAEPAXI@Z ENDP		; CTBLMonthPvPointTable::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLMonthPvPointTable@@UAE@XZ
_TEXT	SEGMENT
??1CTBLMonthPvPointTable@@UAE@XZ PROC NEAR		; CTBLMonthPvPointTable::~CTBLMonthPvPointTable, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLMonthPvPointTable@@UAE@XZ ENDP			; CTBLMonthPvPointTable::~CTBLMonthPvPointTable
_TEXT	ENDS
PUBLIC	??0CTBLMonthPvPointChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonthPvPointChar::CTBLMonthPvPointChar
PUBLIC	?GetNumCol@CTBLMonthPvPointChar@@UAEHXZ		; CTBLMonthPvPointChar::GetNumCol
PUBLIC	?BindColumns@CTBLMonthPvPointChar@@UAEFXZ	; CTBLMonthPvPointChar::BindColumns
PUBLIC	?GetNumParam@CTBLMonthPvPointChar@@UAEHXZ	; CTBLMonthPvPointChar::GetNumParam
PUBLIC	?BindParameters@CTBLMonthPvPointChar@@UAEFH@Z	; CTBLMonthPvPointChar::BindParameters
PUBLIC	??_7CTBLMonthPvPointChar@@6B@			; CTBLMonthPvPointChar::`vftable'
PUBLIC	??_GCTBLMonthPvPointChar@@UAEPAXI@Z		; CTBLMonthPvPointChar::`scalar deleting destructor'
PUBLIC	??_C@_0FE@HGGDCALF@SELECT?5?7dwPoint?0?5?7wWin?0?5?7wLose?0?5@ ; `string'
EXTRN	??_ECTBLMonthPvPointChar@@UAEPAXI@Z:NEAR	; CTBLMonthPvPointChar::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T130924 DD	0ffffffffH
	DD	FLAT:$L130750
$T130921 DD	019930520H
	DD	01H
	DD	FLAT:$T130924
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FE@HGGDCALF@SELECT?5?7dwPoint?0?5?7wWin?0?5?7wLose?0?5@
CONST	SEGMENT
??_C@_0FE@HGGDCALF@SELECT?5?7dwPoint?0?5?7wWin?0?5?7wLose?0?5@ DB 'SELECT'
	DB	' ', 09H, 'dwPoint, ', 09H, 'wWin, ', 09H, 'wLose, ', 09H, 'sz'
	DB	'Say ', 09H, 'FROM TMONTHPVPOINTTABLE ', 09H, 'WHERE dwCharID '
	DB	'= ?', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7CTBLMonthPvPointChar@@6B@
CONST	SEGMENT
??_7CTBLMonthPvPointChar@@6B@ DD FLAT:??_ECTBLMonthPvPointChar@@UAEPAXI@Z ; CTBLMonthPvPointChar::`vftable'
	DD	FLAT:?GetNumCol@CTBLMonthPvPointChar@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLMonthPvPointChar@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLMonthPvPointChar@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLMonthPvPointChar@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLMonthPvPointChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T130749 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLMonthPvPointChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLMonthPvPointChar::CTBLMonthPvPointChar, COMDAT
; _this$ = ecx

; 849  : 	WHERE dwCharID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLMonthPvPointChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FE@HGGDCALF@SELECT?5?7dwPoint?0?5?7wWin?0?5?7wLose?0?5@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T130749[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLMonthPvPointChar@@6B@
  0005e	72 0d		 jb	 SHORT $L130922
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L130922:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L130750:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLMonthPvPointChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T130921
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLMonthPvPointChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLMonthPvPointChar::CTBLMonthPvPointChar
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLMonthPvPointChar@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLMonthPvPointChar@@UAEHXZ PROC NEAR	; CTBLMonthPvPointChar::GetNumCol, COMDAT
; _this$ = ecx

; 851  : BEGIN_COLUMN(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumCol@CTBLMonthPvPointChar@@UAEHXZ ENDP		; CTBLMonthPvPointChar::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonthPvPointChar@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLMonthPvPointChar@@UAEFXZ PROC NEAR	; CTBLMonthPvPointChar::BindColumns, COMDAT
; _this$ = ecx

; 851  : BEGIN_COLUMN(4)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 852  : 	COLUMN_ENTRY(m_dwMonthPoint)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L111277
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 4b		 jne	 SHORT $L111273
$L111277:

; 853  : 	COLUMN_ENTRY(m_wMonthWin)

  0001c	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L111278
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 30		 jne	 SHORT $L111273
$L111278:

; 854  : 	COLUMN_ENTRY(m_wMonthLose)

  00037	8d 96 36 0c 00
	00		 lea	 edx, DWORD PTR [esi+3126]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L111279
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 15		 jne	 SHORT $L111273
$L111279:

; 855  : 	COLUMN_ENTRY_STR(m_szSay)

  00052	68 01 01 00 00	 push	 257			; 00000101H
  00057	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0005d	50		 push	 eax
  0005e	6a 04		 push	 4
  00060	8b ce		 mov	 ecx, esi
  00062	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
$L111273:
  00067	5e		 pop	 esi

; 856  : END_COL()

  00068	c3		 ret	 0
?BindColumns@CTBLMonthPvPointChar@@UAEFXZ ENDP		; CTBLMonthPvPointChar::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLMonthPvPointChar@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLMonthPvPointChar@@UAEHXZ PROC NEAR	; CTBLMonthPvPointChar::GetNumParam, COMDAT
; _this$ = ecx

; 858  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLMonthPvPointChar@@UAEHXZ ENDP		; CTBLMonthPvPointChar::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLMonthPvPointChar@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLMonthPvPointChar@@UAEFH@Z PROC NEAR	; CTBLMonthPvPointChar::BindParameters, COMDAT
; _this$ = ecx

; 859  : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCharID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L111285
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L111285:

; 860  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLMonthPvPointChar@@UAEFH@Z ENDP	; CTBLMonthPvPointChar::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLMonthPvPointChar@@UAE@XZ			; CTBLMonthPvPointChar::~CTBLMonthPvPointChar
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLMonthPvPointChar@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLMonthPvPointChar@@UAEPAXI@Z PROC NEAR		; CTBLMonthPvPointChar::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLMonthPvPointChar@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L130942
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L130942:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLMonthPvPointChar@@UAEPAXI@Z ENDP		; CTBLMonthPvPointChar::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLMonthPvPointChar@@UAE@XZ
_TEXT	SEGMENT
??1CTBLMonthPvPointChar@@UAE@XZ PROC NEAR		; CTBLMonthPvPointChar::~CTBLMonthPvPointChar, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLMonthPvPointChar@@UAE@XZ ENDP			; CTBLMonthPvPointChar::~CTBLMonthPvPointChar
_TEXT	ENDS
PUBLIC	??0CTBLPvPointTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLPvPointTable::CTBLPvPointTable
PUBLIC	?GetNumCol@CTBLPvPointTable@@UAEHXZ		; CTBLPvPointTable::GetNumCol
PUBLIC	?BindColumns@CTBLPvPointTable@@UAEFXZ		; CTBLPvPointTable::BindColumns
PUBLIC	?GetNumParam@CTBLPvPointTable@@UAEHXZ		; CTBLPvPointTable::GetNumParam
PUBLIC	?BindParameters@CTBLPvPointTable@@UAEFH@Z	; CTBLPvPointTable::BindParameters
PUBLIC	??_7CTBLPvPointTable@@6B@			; CTBLPvPointTable::`vftable'
PUBLIC	??_GCTBLPvPointTable@@UAEPAXI@Z			; CTBLPvPointTable::`scalar deleting destructor'
PUBLIC	??_C@_0CJG@LOJMFGII@SELECT?5TOP?51?5?7P?4dwCharID?0?5?7C?4szN@ ; `string'
EXTRN	??_ECTBLPvPointTable@@UAEPAXI@Z:NEAR		; CTBLPvPointTable::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T131125 DD	0ffffffffH
	DD	FLAT:$L130951
$T131122 DD	019930520H
	DD	01H
	DD	FLAT:$T131125
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CJG@LOJMFGII@SELECT?5TOP?51?5?7P?4dwCharID?0?5?7C?4szN@
CONST	SEGMENT
??_C@_0CJG@LOJMFGII@SELECT?5TOP?51?5?7P?4dwCharID?0?5?7C?4szN@ DB 'SELECT'
	DB	' TOP 1 ', 09H, 'P.dwCharID, ', 09H, 'C.szName, ', 09H, 'P.dwT'
	DB	'otalPoint, ', 09H, 'C.bLevel, ', 09H, 'C.bClass, ', 09H, 'C.b'
	DB	'Race, ', 09H, 'C.bSex, ', 09H, 'C.bHair, ', 09H, 'C.bFace, ', 09H
	DB	'R.dwWarrior_win + R.dwRanger_win + R.dwArcher_win + R.dwWizar'
	DB	'd_win + R.dwPriest_win + R.dwSorcerer_win, ', 09H, 'R.dwWarri'
	DB	'or_lose + R.dwRanger_lose + R.dwArcher_lose + R.dwWizard_lose'
	DB	' + R.dwPriest_lose + R.dwSorcerer_lose, ', 09H, 'U.szName ', 09H
	DB	'FROM TPVPOINTTABLE AS P ', 09H, 'INNER JOIN TCHARTABLE AS C O'
	DB	'N C.dwCharID = P.dwCharID ', 09H, 'INNER JOIN TPVPRECORDTABLE'
	DB	' AS R ON P.dwCharID = R.dwCharID ', 09H, 'LEFT JOIN TGUILDMEM'
	DB	'BERTABLE AS G ON P.dwCharID = G.dwCharID ', 09H, 'LEFT JOIN T'
	DB	'GUILDTABLE AS U ON G.dwGuildID = U.dwID ', 09H, 'WHERE C.bCou'
	DB	'ntry = ? ', 09H, 'ORDER BY P.dwTotalPoint DESC, P.dwCharID AS'
	DB	'C', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7CTBLPvPointTable@@6B@
CONST	SEGMENT
??_7CTBLPvPointTable@@6B@ DD FLAT:??_ECTBLPvPointTable@@UAEPAXI@Z ; CTBLPvPointTable::`vftable'
	DD	FLAT:?GetNumCol@CTBLPvPointTable@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLPvPointTable@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLPvPointTable@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLPvPointTable@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLPvPointTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T130950 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLPvPointTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLPvPointTable::CTBLPvPointTable, COMDAT
; _this$ = ecx

; 900  : 	ORDER BY P.dwTotalPoint DESC, P.dwCharID ASC"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLPvPointTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CJG@LOJMFGII@SELECT?5TOP?51?5?7P?4dwCharID?0?5?7C?4szN@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T130950[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLPvPointTable@@6B@
  0005e	72 0d		 jb	 SHORT $L131123
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L131123:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L130951:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLPvPointTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131122
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLPvPointTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLPvPointTable::CTBLPvPointTable
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLPvPointTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLPvPointTable@@UAEHXZ PROC NEAR		; CTBLPvPointTable::GetNumCol, COMDAT
; _this$ = ecx

; 902  : BEGIN_COLUMN(12)

  00000	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00005	c3		 ret	 0
?GetNumCol@CTBLPvPointTable@@UAEHXZ ENDP		; CTBLPvPointTable::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLPvPointTable@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLPvPointTable@@UAEFXZ PROC NEAR		; CTBLPvPointTable::BindColumns, COMDAT
; _this$ = ecx

; 902  : BEGIN_COLUMN(12)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 903  : 	COLUMN_ENTRY(m_dwCharID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L111346
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 36 01 00
	00		 jne	 $L111342
$L111346:

; 904  : 	COLUMN_ENTRY_STR(m_szName)

  00020	6a 33		 push	 51			; 00000033H
  00022	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00028	51		 push	 ecx
  00029	6a 02		 push	 2
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00032	66 85 c0	 test	 ax, ax
  00035	74 0a		 je	 SHORT $L111347
  00037	66 3d 01 00	 cmp	 ax, 1
  0003b	0f 85 15 01 00
	00		 jne	 $L111342
$L111347:

; 905  : 	COLUMN_ENTRY(m_dwTotalPoint)

  00041	8d 96 64 0c 00
	00		 lea	 edx, DWORD PTR [esi+3172]
  00047	52		 push	 edx
  00048	6a 03		 push	 3
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00051	66 85 c0	 test	 ax, ax
  00054	74 0a		 je	 SHORT $L111348
  00056	66 3d 01 00	 cmp	 ax, 1
  0005a	0f 85 f6 00 00
	00		 jne	 $L111342
$L111348:

; 906  : 	COLUMN_ENTRY(m_bLevel)

  00060	8d 86 69 0c 00
	00		 lea	 eax, DWORD PTR [esi+3177]
  00066	50		 push	 eax
  00067	6a 04		 push	 4
  00069	8b ce		 mov	 ecx, esi
  0006b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00070	66 85 c0	 test	 ax, ax
  00073	74 0a		 je	 SHORT $L111349
  00075	66 3d 01 00	 cmp	 ax, 1
  00079	0f 85 d7 00 00
	00		 jne	 $L111342
$L111349:

; 907  : 	COLUMN_ENTRY(m_bClass)

  0007f	8d 8e 6a 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3178]
  00085	51		 push	 ecx
  00086	6a 05		 push	 5
  00088	8b ce		 mov	 ecx, esi
  0008a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0008f	66 85 c0	 test	 ax, ax
  00092	74 0a		 je	 SHORT $L111350
  00094	66 3d 01 00	 cmp	 ax, 1
  00098	0f 85 b8 00 00
	00		 jne	 $L111342
$L111350:

; 908  : 	COLUMN_ENTRY(m_bRace)

  0009e	8d 96 6b 0c 00
	00		 lea	 edx, DWORD PTR [esi+3179]
  000a4	52		 push	 edx
  000a5	6a 06		 push	 6
  000a7	8b ce		 mov	 ecx, esi
  000a9	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000ae	66 85 c0	 test	 ax, ax
  000b1	74 0a		 je	 SHORT $L111351
  000b3	66 3d 01 00	 cmp	 ax, 1
  000b7	0f 85 99 00 00
	00		 jne	 $L111342
$L111351:

; 909  : 	COLUMN_ENTRY(m_bSex)

  000bd	8d 86 6c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3180]
  000c3	50		 push	 eax
  000c4	6a 07		 push	 7
  000c6	8b ce		 mov	 ecx, esi
  000c8	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000cd	66 85 c0	 test	 ax, ax
  000d0	74 06		 je	 SHORT $L111352
  000d2	66 3d 01 00	 cmp	 ax, 1
  000d6	75 7e		 jne	 SHORT $L111342
$L111352:

; 910  : 	COLUMN_ENTRY(m_bHair)

  000d8	8d 8e 6d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3181]
  000de	51		 push	 ecx
  000df	6a 08		 push	 8
  000e1	8b ce		 mov	 ecx, esi
  000e3	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000e8	66 85 c0	 test	 ax, ax
  000eb	74 06		 je	 SHORT $L111353
  000ed	66 3d 01 00	 cmp	 ax, 1
  000f1	75 63		 jne	 SHORT $L111342
$L111353:

; 911  : 	COLUMN_ENTRY(m_bFace)

  000f3	8d 96 6e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3182]
  000f9	52		 push	 edx
  000fa	6a 09		 push	 9
  000fc	8b ce		 mov	 ecx, esi
  000fe	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00103	66 85 c0	 test	 ax, ax
  00106	74 06		 je	 SHORT $L111354
  00108	66 3d 01 00	 cmp	 ax, 1
  0010c	75 48		 jne	 SHORT $L111342
$L111354:

; 912  : 	COLUMN_ENTRY(m_dwTotalWin)

  0010e	8d 86 70 0c 00
	00		 lea	 eax, DWORD PTR [esi+3184]
  00114	50		 push	 eax
  00115	6a 0a		 push	 10			; 0000000aH
  00117	8b ce		 mov	 ecx, esi
  00119	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0011e	66 85 c0	 test	 ax, ax
  00121	74 06		 je	 SHORT $L111355
  00123	66 3d 01 00	 cmp	 ax, 1
  00127	75 2d		 jne	 SHORT $L111342
$L111355:

; 913  : 	COLUMN_ENTRY(m_dwTotalLose)

  00129	8d 8e 74 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3188]
  0012f	51		 push	 ecx
  00130	6a 0b		 push	 11			; 0000000bH
  00132	8b ce		 mov	 ecx, esi
  00134	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00139	66 85 c0	 test	 ax, ax
  0013c	74 06		 je	 SHORT $L111356
  0013e	66 3d 01 00	 cmp	 ax, 1
  00142	75 12		 jne	 SHORT $L111342
$L111356:

; 914  : 	COLUMN_ENTRY_STR(m_szGuild)

  00144	6a 33		 push	 51			; 00000033H
  00146	8d 96 78 0c 00
	00		 lea	 edx, DWORD PTR [esi+3192]
  0014c	52		 push	 edx
  0014d	6a 0c		 push	 12			; 0000000cH
  0014f	8b ce		 mov	 ecx, esi
  00151	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
$L111342:
  00156	5e		 pop	 esi

; 915  : END_COL()

  00157	c3		 ret	 0
?BindColumns@CTBLPvPointTable@@UAEFXZ ENDP		; CTBLPvPointTable::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLPvPointTable@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLPvPointTable@@UAEHXZ PROC NEAR		; CTBLPvPointTable::GetNumParam, COMDAT
; _this$ = ecx

; 917  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLPvPointTable@@UAEHXZ ENDP		; CTBLPvPointTable::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLPvPointTable@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLPvPointTable@@UAEFH@Z PROC NEAR	; CTBLPvPointTable::BindParameters, COMDAT
; _this$ = ecx

; 918  : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bCountry)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L111362
  00010	8d 81 68 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3176]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L111362:

; 919  : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLPvPointTable@@UAEFH@Z ENDP		; CTBLPvPointTable::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLPvPointTable@@UAE@XZ			; CTBLPvPointTable::~CTBLPvPointTable
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLPvPointTable@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLPvPointTable@@UAEPAXI@Z PROC NEAR		; CTBLPvPointTable::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLPvPointTable@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L131143
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L131143:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLPvPointTable@@UAEPAXI@Z ENDP			; CTBLPvPointTable::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLPvPointTable@@UAE@XZ
_TEXT	SEGMENT
??1CTBLPvPointTable@@UAE@XZ PROC NEAR			; CTBLPvPointTable::~CTBLPvPointTable, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLPvPointTable@@UAE@XZ ENDP			; CTBLPvPointTable::~CTBLPvPointTable
_TEXT	ENDS
PUBLIC	??0CTBLStopMap@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLStopMap::CTBLStopMap
PUBLIC	??_7CTBLStopMap@@6B@				; CTBLStopMap::`vftable'
PUBLIC	??_GCTBLStopMap@@UAEPAXI@Z			; CTBLStopMap::`scalar deleting destructor'
PUBLIC	??_C@_0BJ@PFLLMIAJ@DELETE?5TDBITEMINDEXTABLE?$AA@ ; `string'
EXTRN	?GetNumCol@CSqlBase@@UAEHXZ:NEAR		; CSqlBase::GetNumCol
EXTRN	?BindColumns@CSqlQuery@@UAEFXZ:NEAR		; CSqlQuery::BindColumns
EXTRN	??_ECTBLStopMap@@UAEPAXI@Z:NEAR			; CTBLStopMap::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T131326 DD	0ffffffffH
	DD	FLAT:$L131152
$T131323 DD	019930520H
	DD	01H
	DD	FLAT:$T131326
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BJ@PFLLMIAJ@DELETE?5TDBITEMINDEXTABLE?$AA@
CONST	SEGMENT
??_C@_0BJ@PFLLMIAJ@DELETE?5TDBITEMINDEXTABLE?$AA@ DB 'DELETE TDBITEMINDEX'
	DB	'TABLE', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7CTBLStopMap@@6B@
CONST	SEGMENT
??_7CTBLStopMap@@6B@ DD FLAT:??_ECTBLStopMap@@UAEPAXI@Z	; CTBLStopMap::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLStopMap@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T131151 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLStopMap@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLStopMap::CTBLStopMap, COMDAT
; _this$ = ecx

; 925  : DEF_QUERY(CTBLStopMap, _T("DELETE TDBITEMINDEXTABLE"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLStopMap@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@PFLLMIAJ@DELETE?5TDBITEMINDEXTABLE?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T131151[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLStopMap@@6B@
  0005e	72 0d		 jb	 SHORT $L131324
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L131324:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131152:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLStopMap@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131323
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLStopMap@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLStopMap::CTBLStopMap
PUBLIC	??1CTBLStopMap@@UAE@XZ				; CTBLStopMap::~CTBLStopMap
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLStopMap@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLStopMap@@UAEPAXI@Z PROC NEAR			; CTBLStopMap::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLStopMap@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L131332
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L131332:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLStopMap@@UAEPAXI@Z ENDP				; CTBLStopMap::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLStopMap@@UAE@XZ
_TEXT	SEGMENT
??1CTBLStopMap@@UAE@XZ PROC NEAR			; CTBLStopMap::~CTBLStopMap, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLStopMap@@UAE@XZ ENDP				; CTBLStopMap::~CTBLStopMap
_TEXT	ENDS
PUBLIC	??0CTBLProtectChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLProtectChar::CTBLProtectChar
PUBLIC	??_7CTBLProtectChar@@6B@			; CTBLProtectChar::`vftable'
PUBLIC	??_GCTBLProtectChar@@UAEPAXI@Z			; CTBLProtectChar::`scalar deleting destructor'
PUBLIC	??_C@_0DG@PLBMBCAK@UPDATE?5TCHARTABLE?5SET?5wMapID?5?$DN?52@ ; `string'
EXTRN	??_ECTBLProtectChar@@UAEPAXI@Z:NEAR		; CTBLProtectChar::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T131515 DD	0ffffffffH
	DD	FLAT:$L131341
$T131512 DD	019930520H
	DD	01H
	DD	FLAT:$T131515
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DG@PLBMBCAK@UPDATE?5TCHARTABLE?5SET?5wMapID?5?$DN?52@
CONST	SEGMENT
??_C@_0DG@PLBMBCAK@UPDATE?5TCHARTABLE?5SET?5wMapID?5?$DN?52@ DB 'UPDATE T'
	DB	'CHARTABLE SET wMapID = 2048, wSpawnID = 30000', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLProtectChar@@6B@
CONST	SEGMENT
??_7CTBLProtectChar@@6B@ DD FLAT:??_ECTBLProtectChar@@UAEPAXI@Z ; CTBLProtectChar::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLProtectChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T131340 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLProtectChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLProtectChar::CTBLProtectChar, COMDAT
; _this$ = ecx

; 931  : DEF_QUERY(CTBLProtectChar, _T("UPDATE TCHARTABLE SET wMapID = 2048, wSpawnID = 30000"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLProtectChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DG@PLBMBCAK@UPDATE?5TCHARTABLE?5SET?5wMapID?5?$DN?52@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T131340[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLProtectChar@@6B@
  0005e	72 0d		 jb	 SHORT $L131513
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L131513:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131341:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLProtectChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131512
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLProtectChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLProtectChar::CTBLProtectChar
PUBLIC	??1CTBLProtectChar@@UAE@XZ			; CTBLProtectChar::~CTBLProtectChar
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLProtectChar@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLProtectChar@@UAEPAXI@Z PROC NEAR		; CTBLProtectChar::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLProtectChar@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L131521
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L131521:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLProtectChar@@UAEPAXI@Z ENDP			; CTBLProtectChar::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLProtectChar@@UAE@XZ
_TEXT	SEGMENT
??1CTBLProtectChar@@UAE@XZ PROC NEAR			; CTBLProtectChar::~CTBLProtectChar, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLProtectChar@@UAE@XZ ENDP				; CTBLProtectChar::~CTBLProtectChar
_TEXT	ENDS
PUBLIC	??0CTBLDeleteLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLDeleteLevel::CTBLDeleteLevel
PUBLIC	??_7CTBLDeleteLevel@@6B@			; CTBLDeleteLevel::`vftable'
PUBLIC	??_GCTBLDeleteLevel@@UAEPAXI@Z			; CTBLDeleteLevel::`scalar deleting destructor'
PUBLIC	??_C@_0BD@DKDCEIPH@DELETE?5TLEVELCHART?$AA@	; `string'
EXTRN	??_ECTBLDeleteLevel@@UAEPAXI@Z:NEAR		; CTBLDeleteLevel::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T131704 DD	0ffffffffH
	DD	FLAT:$L131530
$T131701 DD	019930520H
	DD	01H
	DD	FLAT:$T131704
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BD@DKDCEIPH@DELETE?5TLEVELCHART?$AA@
CONST	SEGMENT
??_C@_0BD@DKDCEIPH@DELETE?5TLEVELCHART?$AA@ DB 'DELETE TLEVELCHART', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLDeleteLevel@@6B@
CONST	SEGMENT
??_7CTBLDeleteLevel@@6B@ DD FLAT:??_ECTBLDeleteLevel@@UAEPAXI@Z ; CTBLDeleteLevel::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLDeleteLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T131529 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLDeleteLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLDeleteLevel::CTBLDeleteLevel, COMDAT
; _this$ = ecx

; 937  : DEF_QUERY(CTBLDeleteLevel, _T("DELETE TLEVELCHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLDeleteLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@DKDCEIPH@DELETE?5TLEVELCHART?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T131529[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLDeleteLevel@@6B@
  0005e	72 0d		 jb	 SHORT $L131702
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L131702:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131530:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLDeleteLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131701
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLDeleteLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLDeleteLevel::CTBLDeleteLevel
PUBLIC	??1CTBLDeleteLevel@@UAE@XZ			; CTBLDeleteLevel::~CTBLDeleteLevel
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLDeleteLevel@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLDeleteLevel@@UAEPAXI@Z PROC NEAR		; CTBLDeleteLevel::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLDeleteLevel@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L131710
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L131710:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLDeleteLevel@@UAEPAXI@Z ENDP			; CTBLDeleteLevel::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLDeleteLevel@@UAE@XZ
_TEXT	SEGMENT
??1CTBLDeleteLevel@@UAE@XZ PROC NEAR			; CTBLDeleteLevel::~CTBLDeleteLevel, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLDeleteLevel@@UAE@XZ ENDP				; CTBLDeleteLevel::~CTBLDeleteLevel
_TEXT	ENDS
PUBLIC	??0CTBLEventQuarterList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLEventQuarterList::CTBLEventQuarterList
PUBLIC	?GetNumCol@CTBLEventQuarterList@@UAEHXZ		; CTBLEventQuarterList::GetNumCol
PUBLIC	?BindColumns@CTBLEventQuarterList@@UAEFXZ	; CTBLEventQuarterList::BindColumns
PUBLIC	?GetNumParam@CTBLEventQuarterList@@UAEHXZ	; CTBLEventQuarterList::GetNumParam
PUBLIC	?BindParameters@CTBLEventQuarterList@@UAEFH@Z	; CTBLEventQuarterList::BindParameters
PUBLIC	??_7CTBLEventQuarterList@@6B@			; CTBLEventQuarterList::`vftable'
PUBLIC	??_GCTBLEventQuarterList@@UAEPAXI@Z		; CTBLEventQuarterList::`scalar deleting destructor'
PUBLIC	??_C@_0NE@IPOLPCBP@SELECT?5?7wID?0?5?7bDay?0?5?7bHour?0?7bMin@ ; `string'
EXTRN	??_ECTBLEventQuarterList@@UAEPAXI@Z:NEAR	; CTBLEventQuarterList::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T131893 DD	0ffffffffH
	DD	FLAT:$L131719
$T131890 DD	019930520H
	DD	01H
	DD	FLAT:$T131893
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0NE@IPOLPCBP@SELECT?5?7wID?0?5?7bDay?0?5?7bHour?0?7bMin@
CONST	SEGMENT
??_C@_0NE@IPOLPCBP@SELECT?5?7wID?0?5?7bDay?0?5?7bHour?0?7bMin@ DB 'SELECT'
	DB	' ', 09H, 'wID, ', 09H, 'bDay, ', 09H, 'bHour,', 09H, 'bMinute'
	DB	', ', 09H, 'wItemID1, ', 09H, 'wItemID2, ', 09H, 'wItemID3, ', 09H
	DB	'wItemID4, ', 09H, 'wItemID5, ', 09H, 'bCount, ', 09H, 'szPres'
	DB	'ent, ', 09H, 'szAnnounce, ', 09H, 'szTitle, ', 09H, 'szMessag'
	DB	'e ', 09H, 'FROM TEVENTQUARTERCHART WHERE bDay = ? ', 09H, 'OR'
	DB	'DER BY bHour, bMinute', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CTBLEventQuarterList@@6B@
CONST	SEGMENT
??_7CTBLEventQuarterList@@6B@ DD FLAT:??_ECTBLEventQuarterList@@UAEPAXI@Z ; CTBLEventQuarterList::`vftable'
	DD	FLAT:?GetNumCol@CTBLEventQuarterList@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLEventQuarterList@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLEventQuarterList@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLEventQuarterList@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLEventQuarterList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T131718 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLEventQuarterList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLEventQuarterList::CTBLEventQuarterList, COMDAT
; _this$ = ecx

; 980  : 	ORDER BY bHour, bMinute"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLEventQuarterList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0NE@IPOLPCBP@SELECT?5?7wID?0?5?7bDay?0?5?7bHour?0?7bMin@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T131718[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLEventQuarterList@@6B@
  0005e	72 0d		 jb	 SHORT $L131891
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L131891:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131719:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLEventQuarterList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T131890
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLEventQuarterList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLEventQuarterList::CTBLEventQuarterList
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLEventQuarterList@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLEventQuarterList@@UAEHXZ PROC NEAR	; CTBLEventQuarterList::GetNumCol, COMDAT
; _this$ = ecx

; 982  : BEGIN_COLUMN(14)

  00000	b8 0e 00 00 00	 mov	 eax, 14			; 0000000eH
  00005	c3		 ret	 0
?GetNumCol@CTBLEventQuarterList@@UAEHXZ ENDP		; CTBLEventQuarterList::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLEventQuarterList@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLEventQuarterList@@UAEFXZ PROC NEAR	; CTBLEventQuarterList::BindColumns, COMDAT
; _this$ = ecx

; 982  : BEGIN_COLUMN(14)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 983  : 	COLUMN_ENTRY(m_wID)

  00003	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L111517
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 82 01 00
	00		 jne	 $L111513
$L111517:

; 984  : 	COLUMN_ENTRY(m_bDay)

  00020	8d 8e 2d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3117]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L111518
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 63 01 00
	00		 jne	 $L111513
$L111518:

; 985  : 	COLUMN_ENTRY(m_bHour)

  0003f	8d 96 2e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3118]
  00045	52		 push	 edx
  00046	6a 03		 push	 3
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004f	66 85 c0	 test	 ax, ax
  00052	74 0a		 je	 SHORT $L111519
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	0f 85 44 01 00
	00		 jne	 $L111513
$L111519:

; 986  : 	COLUMN_ENTRY(m_bMinute)

  0005e	8d 86 2f 0c 00
	00		 lea	 eax, DWORD PTR [esi+3119]
  00064	50		 push	 eax
  00065	6a 04		 push	 4
  00067	8b ce		 mov	 ecx, esi
  00069	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0006e	66 85 c0	 test	 ax, ax
  00071	74 0a		 je	 SHORT $L111520
  00073	66 3d 01 00	 cmp	 ax, 1
  00077	0f 85 25 01 00
	00		 jne	 $L111513
$L111520:

; 987  : 	COLUMN_ENTRY(m_wItemID1)

  0007d	8d 8e 32 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3122]
  00083	51		 push	 ecx
  00084	6a 05		 push	 5
  00086	8b ce		 mov	 ecx, esi
  00088	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0008d	66 85 c0	 test	 ax, ax
  00090	74 0a		 je	 SHORT $L111521
  00092	66 3d 01 00	 cmp	 ax, 1
  00096	0f 85 06 01 00
	00		 jne	 $L111513
$L111521:

; 988  : 	COLUMN_ENTRY(m_wItemID2)

  0009c	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  000a2	52		 push	 edx
  000a3	6a 06		 push	 6
  000a5	8b ce		 mov	 ecx, esi
  000a7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000ac	66 85 c0	 test	 ax, ax
  000af	74 0a		 je	 SHORT $L111522
  000b1	66 3d 01 00	 cmp	 ax, 1
  000b5	0f 85 e7 00 00
	00		 jne	 $L111513
$L111522:

; 989  : 	COLUMN_ENTRY(m_wItemID3)

  000bb	8d 86 36 0c 00
	00		 lea	 eax, DWORD PTR [esi+3126]
  000c1	50		 push	 eax
  000c2	6a 07		 push	 7
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000cb	66 85 c0	 test	 ax, ax
  000ce	74 0a		 je	 SHORT $L111523
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	0f 85 c8 00 00
	00		 jne	 $L111513
$L111523:

; 990  : 	COLUMN_ENTRY(m_wItemID4)

  000da	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  000e0	51		 push	 ecx
  000e1	6a 08		 push	 8
  000e3	8b ce		 mov	 ecx, esi
  000e5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000ea	66 85 c0	 test	 ax, ax
  000ed	74 0a		 je	 SHORT $L111524
  000ef	66 3d 01 00	 cmp	 ax, 1
  000f3	0f 85 a9 00 00
	00		 jne	 $L111513
$L111524:

; 991  : 	COLUMN_ENTRY(m_wItemID5)

  000f9	8d 96 3a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3130]
  000ff	52		 push	 edx
  00100	6a 09		 push	 9
  00102	8b ce		 mov	 ecx, esi
  00104	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00109	66 85 c0	 test	 ax, ax
  0010c	74 0a		 je	 SHORT $L111525
  0010e	66 3d 01 00	 cmp	 ax, 1
  00112	0f 85 8a 00 00
	00		 jne	 $L111513
$L111525:

; 992  : 	COLUMN_ENTRY(m_bCount)

  00118	8d 86 3c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3132]
  0011e	50		 push	 eax
  0011f	6a 0a		 push	 10			; 0000000aH
  00121	8b ce		 mov	 ecx, esi
  00123	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00128	66 85 c0	 test	 ax, ax
  0012b	74 06		 je	 SHORT $L111526
  0012d	66 3d 01 00	 cmp	 ax, 1
  00131	75 6f		 jne	 SHORT $L111513
$L111526:

; 993  : 	COLUMN_ENTRY_STR(m_szPresent)

  00133	6a 33		 push	 51			; 00000033H
  00135	8d 8e 3d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3133]
  0013b	51		 push	 ecx
  0013c	6a 0b		 push	 11			; 0000000bH
  0013e	8b ce		 mov	 ecx, esi
  00140	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00145	66 85 c0	 test	 ax, ax
  00148	74 06		 je	 SHORT $L111527
  0014a	66 3d 01 00	 cmp	 ax, 1
  0014e	75 52		 jne	 SHORT $L111513
$L111527:

; 994  : 	COLUMN_ENTRY_STR(m_szAnnounce)

  00150	68 01 04 00 00	 push	 1025			; 00000401H
  00155	8d 96 70 0c 00
	00		 lea	 edx, DWORD PTR [esi+3184]
  0015b	52		 push	 edx
  0015c	6a 0c		 push	 12			; 0000000cH
  0015e	8b ce		 mov	 ecx, esi
  00160	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00165	66 85 c0	 test	 ax, ax
  00168	74 06		 je	 SHORT $L111528
  0016a	66 3d 01 00	 cmp	 ax, 1
  0016e	75 32		 jne	 SHORT $L111513
$L111528:

; 995  : 	COLUMN_ENTRY_STR(m_szTitle)

  00170	6a 33		 push	 51			; 00000033H
  00172	8d 86 71 10 00
	00		 lea	 eax, DWORD PTR [esi+4209]
  00178	50		 push	 eax
  00179	6a 0d		 push	 13			; 0000000dH
  0017b	8b ce		 mov	 ecx, esi
  0017d	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00182	66 85 c0	 test	 ax, ax
  00185	74 06		 je	 SHORT $L111529
  00187	66 3d 01 00	 cmp	 ax, 1
  0018b	75 15		 jne	 SHORT $L111513
$L111529:

; 996  : 	COLUMN_ENTRY_STR(m_szMessage)

  0018d	68 f5 01 00 00	 push	 501			; 000001f5H
  00192	8d 8e a4 10 00
	00		 lea	 ecx, DWORD PTR [esi+4260]
  00198	51		 push	 ecx
  00199	6a 0e		 push	 14			; 0000000eH
  0019b	8b ce		 mov	 ecx, esi
  0019d	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
$L111513:
  001a2	5e		 pop	 esi

; 997  : END_COL()

  001a3	c3		 ret	 0
?BindColumns@CTBLEventQuarterList@@UAEFXZ ENDP		; CTBLEventQuarterList::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLEventQuarterList@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLEventQuarterList@@UAEHXZ PROC NEAR	; CTBLEventQuarterList::GetNumParam, COMDAT
; _this$ = ecx

; 999  : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLEventQuarterList@@UAEHXZ ENDP		; CTBLEventQuarterList::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLEventQuarterList@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLEventQuarterList@@UAEFH@Z PROC NEAR	; CTBLEventQuarterList::BindParameters, COMDAT
; _this$ = ecx

; 1000 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bFindDay)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L111535
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L111535:

; 1001 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLEventQuarterList@@UAEFH@Z ENDP	; CTBLEventQuarterList::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLEventQuarterList@@UAE@XZ			; CTBLEventQuarterList::~CTBLEventQuarterList
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLEventQuarterList@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLEventQuarterList@@UAEPAXI@Z PROC NEAR		; CTBLEventQuarterList::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLEventQuarterList@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L131911
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L131911:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLEventQuarterList@@UAEPAXI@Z ENDP		; CTBLEventQuarterList::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLEventQuarterList@@UAE@XZ
_TEXT	SEGMENT
??1CTBLEventQuarterList@@UAE@XZ PROC NEAR		; CTBLEventQuarterList::~CTBLEventQuarterList, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLEventQuarterList@@UAE@XZ ENDP			; CTBLEventQuarterList::~CTBLEventQuarterList
_TEXT	ENDS
PUBLIC	??0CTBLTournamentCurrentStep@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTournamentCurrentStep::CTBLTournamentCurrentStep
PUBLIC	?GetNumCol@CTBLTournamentCurrentStep@@UAEHXZ	; CTBLTournamentCurrentStep::GetNumCol
PUBLIC	?BindColumns@CTBLTournamentCurrentStep@@UAEFXZ	; CTBLTournamentCurrentStep::BindColumns
PUBLIC	??_7CTBLTournamentCurrentStep@@6B@		; CTBLTournamentCurrentStep::`vftable'
PUBLIC	??_GCTBLTournamentCurrentStep@@UAEPAXI@Z	; CTBLTournamentCurrentStep::`scalar deleting destructor'
PUBLIC	??_C@_0DG@CDEKFPLG@SELECT?5wID?0?5bGroup?0?5bStep?5FROM?5T@ ; `string'
EXTRN	??_ECTBLTournamentCurrentStep@@UAEPAXI@Z:NEAR	; CTBLTournamentCurrentStep::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T132094 DD	0ffffffffH
	DD	FLAT:$L131920
$T132091 DD	019930520H
	DD	01H
	DD	FLAT:$T132094
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DG@CDEKFPLG@SELECT?5wID?0?5bGroup?0?5bStep?5FROM?5T@
CONST	SEGMENT
??_C@_0DG@CDEKFPLG@SELECT?5wID?0?5bGroup?0?5bStep?5FROM?5T@ DB 'SELECT wI'
	DB	'D, bGroup, bStep FROM TTOURNAMENTSTATUSTABLE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLTournamentCurrentStep@@6B@
CONST	SEGMENT
??_7CTBLTournamentCurrentStep@@6B@ DD FLAT:??_ECTBLTournamentCurrentStep@@UAEPAXI@Z ; CTBLTournamentCurrentStep::`vftable'
	DD	FLAT:?GetNumCol@CTBLTournamentCurrentStep@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLTournamentCurrentStep@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLTournamentCurrentStep@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T131919 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLTournamentCurrentStep@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLTournamentCurrentStep::CTBLTournamentCurrentStep, COMDAT
; _this$ = ecx

; 1010 : DEF_QUERY(CTBLTournamentCurrentStep, _T("SELECT wID, bGroup, bStep FROM TTOURNAMENTSTATUSTABLE"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLTournamentCurrentStep@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DG@CDEKFPLG@SELECT?5wID?0?5bGroup?0?5bStep?5FROM?5T@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T131919[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLTournamentCurrentStep@@6B@
  0005e	72 0d		 jb	 SHORT $L132092
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L132092:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L131920:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLTournamentCurrentStep@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132091
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLTournamentCurrentStep@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLTournamentCurrentStep::CTBLTournamentCurrentStep
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLTournamentCurrentStep@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLTournamentCurrentStep@@UAEHXZ PROC NEAR	; CTBLTournamentCurrentStep::GetNumCol, COMDAT
; _this$ = ecx

; 1012 : BEGIN_COLUMN(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumCol@CTBLTournamentCurrentStep@@UAEHXZ ENDP	; CTBLTournamentCurrentStep::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTournamentCurrentStep@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLTournamentCurrentStep@@UAEFXZ PROC NEAR ; CTBLTournamentCurrentStep::BindColumns, COMDAT
; _this$ = ecx

; 1012 : BEGIN_COLUMN(3)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1013 : 	COLUMN_ENTRY(m_wID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L111583
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 2b		 jne	 SHORT $L111579
$L111583:

; 1014 : 	COLUMN_ENTRY(m_bGroup)

  0001c	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L111584
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 10		 jne	 SHORT $L111579
$L111584:

; 1015 : 	COLUMN_ENTRY(m_bStep)

  00037	8d 96 2f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3119]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L111579:
  00047	5e		 pop	 esi

; 1016 : END_COL()

  00048	c3		 ret	 0
?BindColumns@CTBLTournamentCurrentStep@@UAEFXZ ENDP	; CTBLTournamentCurrentStep::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLTournamentCurrentStep@@UAE@XZ		; CTBLTournamentCurrentStep::~CTBLTournamentCurrentStep
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLTournamentCurrentStep@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLTournamentCurrentStep@@UAEPAXI@Z PROC NEAR	; CTBLTournamentCurrentStep::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLTournamentCurrentStep@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L132106
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L132106:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLTournamentCurrentStep@@UAEPAXI@Z ENDP		; CTBLTournamentCurrentStep::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLTournamentCurrentStep@@UAE@XZ
_TEXT	SEGMENT
??1CTBLTournamentCurrentStep@@UAE@XZ PROC NEAR		; CTBLTournamentCurrentStep::~CTBLTournamentCurrentStep, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLTournamentCurrentStep@@UAE@XZ ENDP		; CTBLTournamentCurrentStep::~CTBLTournamentCurrentStep
_TEXT	ENDS
PUBLIC	??_C@_0JF@GDHKLCMG@SELECT?5?7bGroup?0?5?7bStep?0?5?7dwPerio@ ; `string'
PUBLIC	??0CTBLTournamentSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTournamentSchedule::CTBLTournamentSchedule
PUBLIC	?GetNumCol@CTBLTournamentSchedule@@UAEHXZ	; CTBLTournamentSchedule::GetNumCol
PUBLIC	?BindColumns@CTBLTournamentSchedule@@UAEFXZ	; CTBLTournamentSchedule::BindColumns
PUBLIC	??_7CTBLTournamentSchedule@@6B@			; CTBLTournamentSchedule::`vftable'
PUBLIC	??_GCTBLTournamentSchedule@@UAEPAXI@Z		; CTBLTournamentSchedule::`scalar deleting destructor'
EXTRN	??_ECTBLTournamentSchedule@@UAEPAXI@Z:NEAR	; CTBLTournamentSchedule::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T132289 DD	0ffffffffH
	DD	FLAT:$L132115
$T132286 DD	019930520H
	DD	01H
	DD	FLAT:$T132289
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0JF@GDHKLCMG@SELECT?5?7bGroup?0?5?7bStep?0?5?7dwPerio@
CONST	SEGMENT
??_C@_0JF@GDHKLCMG@SELECT?5?7bGroup?0?5?7bStep?0?5?7dwPerio@ DB 'SELECT ', 09H
	DB	'bGroup, ', 09H, 'bStep, ', 09H, 'dwPeriod ', 09H, 'FROM TTOUR'
	DB	'NAMENTSCHEDULECHART ', 09H, 'WHERE bGroup = 0 OR bGroup IN(SE'
	DB	'LECT bGroup FROM TTOURNAMENTCHART WHERE bEnable=1)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLTournamentSchedule@@6B@
CONST	SEGMENT
??_7CTBLTournamentSchedule@@6B@ DD FLAT:??_ECTBLTournamentSchedule@@UAEPAXI@Z ; CTBLTournamentSchedule::`vftable'
	DD	FLAT:?GetNumCol@CTBLTournamentSchedule@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLTournamentSchedule@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLTournamentSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T132114 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLTournamentSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLTournamentSchedule::CTBLTournamentSchedule, COMDAT
; _this$ = ecx

; 1031 : 	WHERE bGroup = 0 OR bGroup IN(SELECT bGroup FROM TTOURNAMENTCHART WHERE bEnable=1)"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLTournamentSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0JF@GDHKLCMG@SELECT?5?7bGroup?0?5?7bStep?0?5?7dwPerio@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T132114[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLTournamentSchedule@@6B@
  0005e	72 0d		 jb	 SHORT $L132287
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L132287:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132115:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLTournamentSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132286
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLTournamentSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLTournamentSchedule::CTBLTournamentSchedule
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLTournamentSchedule@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLTournamentSchedule@@UAEHXZ PROC NEAR	; CTBLTournamentSchedule::GetNumCol, COMDAT
; _this$ = ecx

; 1033 : BEGIN_COLUMN(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumCol@CTBLTournamentSchedule@@UAEHXZ ENDP		; CTBLTournamentSchedule::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTournamentSchedule@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLTournamentSchedule@@UAEFXZ PROC NEAR	; CTBLTournamentSchedule::BindColumns, COMDAT
; _this$ = ecx

; 1033 : BEGIN_COLUMN(3)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1034 : 	COLUMN_ENTRY(m_bGroup)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L111628
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 2b		 jne	 SHORT $L111624
$L111628:

; 1035 : 	COLUMN_ENTRY(m_bStep)

  0001c	8d 8e 2d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3117]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L111629
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 10		 jne	 SHORT $L111624
$L111629:

; 1036 : 	COLUMN_ENTRY(m_dwPeriod)

  00037	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L111624:
  00047	5e		 pop	 esi

; 1037 : END_COL()

  00048	c3		 ret	 0
?BindColumns@CTBLTournamentSchedule@@UAEFXZ ENDP	; CTBLTournamentSchedule::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLTournamentSchedule@@UAE@XZ		; CTBLTournamentSchedule::~CTBLTournamentSchedule
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLTournamentSchedule@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLTournamentSchedule@@UAEPAXI@Z PROC NEAR		; CTBLTournamentSchedule::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLTournamentSchedule@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L132301
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L132301:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLTournamentSchedule@@UAEPAXI@Z ENDP		; CTBLTournamentSchedule::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLTournamentSchedule@@UAE@XZ
_TEXT	SEGMENT
??1CTBLTournamentSchedule@@UAE@XZ PROC NEAR		; CTBLTournamentSchedule::~CTBLTournamentSchedule, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLTournamentSchedule@@UAE@XZ ENDP			; CTBLTournamentSchedule::~CTBLTournamentSchedule
_TEXT	ENDS
PUBLIC	??0CTBLTournament@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTournament::CTBLTournament
PUBLIC	?GetNumCol@CTBLTournament@@UAEHXZ		; CTBLTournament::GetNumCol
PUBLIC	?BindColumns@CTBLTournament@@UAEFXZ		; CTBLTournament::BindColumns
PUBLIC	??_7CTBLTournament@@6B@				; CTBLTournament::`vftable'
PUBLIC	??_GCTBLTournament@@UAEPAXI@Z			; CTBLTournament::`scalar deleting destructor'
PUBLIC	??_C@_0IJ@MOLIBCIA@SELECT?5?7bGroup?0?5?7bEntryID?0?5?7szNa@ ; `string'
EXTRN	??_ECTBLTournament@@UAEPAXI@Z:NEAR		; CTBLTournament::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T132484 DD	0ffffffffH
	DD	FLAT:$L132310
$T132481 DD	019930520H
	DD	01H
	DD	FLAT:$T132484
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0IJ@MOLIBCIA@SELECT?5?7bGroup?0?5?7bEntryID?0?5?7szNa@
CONST	SEGMENT
??_C@_0IJ@MOLIBCIA@SELECT?5?7bGroup?0?5?7bEntryID?0?5?7szNa@ DB 'SELECT ', 09H
	DB	'bGroup, ', 09H, 'bEntryID, ', 09H, 'szName, ', 09H, 'bType, ', 09H
	DB	'dwClass, ', 09H, 'dwFee, ', 09H, 'dwFeeBack, ', 09H, 'wItemID'
	DB	', ', 09H, 'bItemCount ', 09H, 'FROM TTOURNAMENTCHART WHERE bE'
	DB	'nable = 1', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CTBLTournament@@6B@
CONST	SEGMENT
??_7CTBLTournament@@6B@ DD FLAT:??_ECTBLTournament@@UAEPAXI@Z ; CTBLTournament::`vftable'
	DD	FLAT:?GetNumCol@CTBLTournament@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLTournament@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLTournament@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T132309 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLTournament@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLTournament::CTBLTournament, COMDAT
; _this$ = ecx

; 1063 : 	FROM TTOURNAMENTCHART WHERE bEnable = 1"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLTournament@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0IJ@MOLIBCIA@SELECT?5?7bGroup?0?5?7bEntryID?0?5?7szNa@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T132309[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLTournament@@6B@
  0005e	72 0d		 jb	 SHORT $L132482
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L132482:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132310:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLTournament@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132481
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLTournament@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLTournament::CTBLTournament
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLTournament@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLTournament@@UAEHXZ PROC NEAR		; CTBLTournament::GetNumCol, COMDAT
; _this$ = ecx

; 1065 : BEGIN_COLUMN(9)

  00000	b8 09 00 00 00	 mov	 eax, 9
  00005	c3		 ret	 0
?GetNumCol@CTBLTournament@@UAEHXZ ENDP			; CTBLTournament::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTournament@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLTournament@@UAEFXZ PROC NEAR		; CTBLTournament::BindColumns, COMDAT
; _this$ = ecx

; 1065 : BEGIN_COLUMN(9)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1066 : 	COLUMN_ENTRY(m_bGroup)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L111679
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 d7 00 00
	00		 jne	 $L111675
$L111679:

; 1067 : 	COLUMN_ENTRY(m_bEntryID)

  00020	8d 8e 2d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3117]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L111680
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 b8 00 00
	00		 jne	 $L111675
$L111680:

; 1068 : 	COLUMN_ENTRY_STR(m_szName)

  0003f	6a 33		 push	 51			; 00000033H
  00041	8d 96 2e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3118]
  00047	52		 push	 edx
  00048	6a 03		 push	 3
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00051	66 85 c0	 test	 ax, ax
  00054	74 0a		 je	 SHORT $L111681
  00056	66 3d 01 00	 cmp	 ax, 1
  0005a	0f 85 97 00 00
	00		 jne	 $L111675
$L111681:

; 1069 : 	COLUMN_ENTRY(m_bType)

  00060	8d 86 61 0c 00
	00		 lea	 eax, DWORD PTR [esi+3169]
  00066	50		 push	 eax
  00067	6a 04		 push	 4
  00069	8b ce		 mov	 ecx, esi
  0006b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00070	66 85 c0	 test	 ax, ax
  00073	74 06		 je	 SHORT $L111682
  00075	66 3d 01 00	 cmp	 ax, 1
  00079	75 7c		 jne	 SHORT $L111675
$L111682:

; 1070 : 	COLUMN_ENTRY(m_dwClass)

  0007b	8d 8e 64 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3172]
  00081	51		 push	 ecx
  00082	6a 05		 push	 5
  00084	8b ce		 mov	 ecx, esi
  00086	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0008b	66 85 c0	 test	 ax, ax
  0008e	74 06		 je	 SHORT $L111683
  00090	66 3d 01 00	 cmp	 ax, 1
  00094	75 61		 jne	 SHORT $L111675
$L111683:

; 1071 : 	COLUMN_ENTRY(m_dwFee)

  00096	8d 96 68 0c 00
	00		 lea	 edx, DWORD PTR [esi+3176]
  0009c	52		 push	 edx
  0009d	6a 06		 push	 6
  0009f	8b ce		 mov	 ecx, esi
  000a1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000a6	66 85 c0	 test	 ax, ax
  000a9	74 06		 je	 SHORT $L111684
  000ab	66 3d 01 00	 cmp	 ax, 1
  000af	75 46		 jne	 SHORT $L111675
$L111684:

; 1072 : 	COLUMN_ENTRY(m_dwFeeBack)

  000b1	8d 86 6c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3180]
  000b7	50		 push	 eax
  000b8	6a 07		 push	 7
  000ba	8b ce		 mov	 ecx, esi
  000bc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000c1	66 85 c0	 test	 ax, ax
  000c4	74 06		 je	 SHORT $L111685
  000c6	66 3d 01 00	 cmp	 ax, 1
  000ca	75 2b		 jne	 SHORT $L111675
$L111685:

; 1073 : 	COLUMN_ENTRY(m_wPermitItemID)

  000cc	8d 8e 70 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3184]
  000d2	51		 push	 ecx
  000d3	6a 08		 push	 8
  000d5	8b ce		 mov	 ecx, esi
  000d7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000dc	66 85 c0	 test	 ax, ax
  000df	74 06		 je	 SHORT $L111686
  000e1	66 3d 01 00	 cmp	 ax, 1
  000e5	75 10		 jne	 SHORT $L111675
$L111686:

; 1074 : 	COLUMN_ENTRY(m_bPermitCount)

  000e7	8d 96 72 0c 00
	00		 lea	 edx, DWORD PTR [esi+3186]
  000ed	52		 push	 edx
  000ee	6a 09		 push	 9
  000f0	8b ce		 mov	 ecx, esi
  000f2	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L111675:
  000f7	5e		 pop	 esi

; 1075 : END_COL()

  000f8	c3		 ret	 0
?BindColumns@CTBLTournament@@UAEFXZ ENDP		; CTBLTournament::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLTournament@@UAE@XZ			; CTBLTournament::~CTBLTournament
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLTournament@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLTournament@@UAEPAXI@Z PROC NEAR			; CTBLTournament::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLTournament@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L132496
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L132496:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLTournament@@UAEPAXI@Z ENDP			; CTBLTournament::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLTournament@@UAE@XZ
_TEXT	SEGMENT
??1CTBLTournament@@UAE@XZ PROC NEAR			; CTBLTournament::~CTBLTournament, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLTournament@@UAE@XZ ENDP				; CTBLTournament::~CTBLTournament
_TEXT	ENDS
PUBLIC	??0CTBLTournamentReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTournamentReward::CTBLTournamentReward
PUBLIC	?GetNumCol@CTBLTournamentReward@@UAEHXZ		; CTBLTournamentReward::GetNumCol
PUBLIC	?BindColumns@CTBLTournamentReward@@UAEFXZ	; CTBLTournamentReward::BindColumns
PUBLIC	??_7CTBLTournamentReward@@6B@			; CTBLTournamentReward::`vftable'
PUBLIC	??_GCTBLTournamentReward@@UAEPAXI@Z		; CTBLTournamentReward::`scalar deleting destructor'
PUBLIC	??_C@_0IA@FPCLDDP@SELECT?5?7bEntryID?0?5?7dwClass?0?5?7bCh@ ; `string'
EXTRN	??_ECTBLTournamentReward@@UAEPAXI@Z:NEAR	; CTBLTournamentReward::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T132679 DD	0ffffffffH
	DD	FLAT:$L132505
$T132676 DD	019930520H
	DD	01H
	DD	FLAT:$T132679
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0IA@FPCLDDP@SELECT?5?7bEntryID?0?5?7dwClass?0?5?7bCh@
CONST	SEGMENT
??_C@_0IA@FPCLDDP@SELECT?5?7bEntryID?0?5?7dwClass?0?5?7bCh@ DB 'SELECT ', 09H
	DB	'bEntryID, ', 09H, 'dwClass, ', 09H, 'bCheckShield, ', 09H, 'b'
	DB	'ChartType, ', 09H, 'wItemID, ', 09H, 'bItemCount ', 09H, 'FRO'
	DB	'M TTOURNAMENTREWARDCHART WHERE bItemCount > 0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLTournamentReward@@6B@
CONST	SEGMENT
??_7CTBLTournamentReward@@6B@ DD FLAT:??_ECTBLTournamentReward@@UAEPAXI@Z ; CTBLTournamentReward::`vftable'
	DD	FLAT:?GetNumCol@CTBLTournamentReward@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLTournamentReward@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLTournamentReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T132504 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLTournamentReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLTournamentReward::CTBLTournamentReward, COMDAT
; _this$ = ecx

; 1095 : 	FROM TTOURNAMENTREWARDCHART WHERE bItemCount > 0"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLTournamentReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0IA@FPCLDDP@SELECT?5?7bEntryID?0?5?7dwClass?0?5?7bCh@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T132504[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLTournamentReward@@6B@
  0005e	72 0d		 jb	 SHORT $L132677
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L132677:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132505:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLTournamentReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132676
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLTournamentReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLTournamentReward::CTBLTournamentReward
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLTournamentReward@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLTournamentReward@@UAEHXZ PROC NEAR	; CTBLTournamentReward::GetNumCol, COMDAT
; _this$ = ecx

; 1097 : BEGIN_COLUMN(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumCol@CTBLTournamentReward@@UAEHXZ ENDP		; CTBLTournamentReward::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTournamentReward@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLTournamentReward@@UAEFXZ PROC NEAR	; CTBLTournamentReward::BindColumns, COMDAT
; _this$ = ecx

; 1097 : BEGIN_COLUMN(6)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1098 : 	COLUMN_ENTRY(m_bEntryID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L111733
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 7c		 jne	 SHORT $L111729
$L111733:

; 1099 : 	COLUMN_ENTRY(m_dwClass)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L111734
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 61		 jne	 SHORT $L111729
$L111734:

; 1100 : 	COLUMN_ENTRY(m_bCheckShield)

  00037	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L111735
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 46		 jne	 SHORT $L111729
$L111735:

; 1101 : 	COLUMN_ENTRY(m_bChartType)

  00052	8d 86 35 0c 00
	00		 lea	 eax, DWORD PTR [esi+3125]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00062	66 85 c0	 test	 ax, ax
  00065	74 06		 je	 SHORT $L111736
  00067	66 3d 01 00	 cmp	 ax, 1
  0006b	75 2b		 jne	 SHORT $L111729
$L111736:

; 1102 : 	COLUMN_ENTRY(m_wItemID)

  0006d	8d 8e 36 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3126]
  00073	51		 push	 ecx
  00074	6a 05		 push	 5
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0007d	66 85 c0	 test	 ax, ax
  00080	74 06		 je	 SHORT $L111737
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 10		 jne	 SHORT $L111729
$L111737:

; 1103 : 	COLUMN_ENTRY(m_bCount)

  00088	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  0008e	52		 push	 edx
  0008f	6a 06		 push	 6
  00091	8b ce		 mov	 ecx, esi
  00093	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L111729:
  00098	5e		 pop	 esi

; 1104 : END_COL()

  00099	c3		 ret	 0
?BindColumns@CTBLTournamentReward@@UAEFXZ ENDP		; CTBLTournamentReward::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLTournamentReward@@UAE@XZ			; CTBLTournamentReward::~CTBLTournamentReward
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLTournamentReward@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLTournamentReward@@UAEPAXI@Z PROC NEAR		; CTBLTournamentReward::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLTournamentReward@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L132691
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L132691:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLTournamentReward@@UAEPAXI@Z ENDP		; CTBLTournamentReward::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLTournamentReward@@UAE@XZ
_TEXT	SEGMENT
??1CTBLTournamentReward@@UAE@XZ PROC NEAR		; CTBLTournamentReward::~CTBLTournamentReward, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLTournamentReward@@UAE@XZ ENDP			; CTBLTournamentReward::~CTBLTournamentReward
_TEXT	ENDS
PUBLIC	??0CTBLTnmtEventTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTnmtEventTime::CTBLTnmtEventTime
PUBLIC	?GetNumCol@CTBLTnmtEventTime@@UAEHXZ		; CTBLTnmtEventTime::GetNumCol
PUBLIC	?BindColumns@CTBLTnmtEventTime@@UAEFXZ		; CTBLTnmtEventTime::BindColumns
PUBLIC	??_7CTBLTnmtEventTime@@6B@			; CTBLTnmtEventTime::`vftable'
PUBLIC	??_GCTBLTnmtEventTime@@UAEPAXI@Z		; CTBLTnmtEventTime::`scalar deleting destructor'
PUBLIC	??_C@_0EJ@BFOOBBKI@SELECT?5?7wTournamentID?0?5?7bWeek?0?5?7@ ; `string'
EXTRN	??_ECTBLTnmtEventTime@@UAEPAXI@Z:NEAR		; CTBLTnmtEventTime::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T132874 DD	0ffffffffH
	DD	FLAT:$L132700
$T132871 DD	019930520H
	DD	01H
	DD	FLAT:$T132874
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EJ@BFOOBBKI@SELECT?5?7wTournamentID?0?5?7bWeek?0?5?7@
CONST	SEGMENT
??_C@_0EJ@BFOOBBKI@SELECT?5?7wTournamentID?0?5?7bWeek?0?5?7@ DB 'SELECT ', 09H
	DB	'wTournamentID, ', 09H, 'bWeek, ', 09H, 'bDay, ', 09H, 'dwStar'
	DB	't ', 09H, 'FROM TTNMTEVENTTIMETABLE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLTnmtEventTime@@6B@
CONST	SEGMENT
??_7CTBLTnmtEventTime@@6B@ DD FLAT:??_ECTBLTnmtEventTime@@UAEPAXI@Z ; CTBLTnmtEventTime::`vftable'
	DD	FLAT:?GetNumCol@CTBLTnmtEventTime@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLTnmtEventTime@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLTnmtEventTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T132699 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLTnmtEventTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLTnmtEventTime::CTBLTnmtEventTime, COMDAT
; _this$ = ecx

; 1120 : 	FROM TTNMTEVENTTIMETABLE"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLTnmtEventTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EJ@BFOOBBKI@SELECT?5?7wTournamentID?0?5?7bWeek?0?5?7@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T132699[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLTnmtEventTime@@6B@
  0005e	72 0d		 jb	 SHORT $L132872
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L132872:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132700:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLTnmtEventTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T132871
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLTnmtEventTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLTnmtEventTime::CTBLTnmtEventTime
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLTnmtEventTime@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLTnmtEventTime@@UAEHXZ PROC NEAR		; CTBLTnmtEventTime::GetNumCol, COMDAT
; _this$ = ecx

; 1122 : BEGIN_COLUMN(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumCol@CTBLTnmtEventTime@@UAEHXZ ENDP		; CTBLTnmtEventTime::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTnmtEventTime@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLTnmtEventTime@@UAEFXZ PROC NEAR	; CTBLTnmtEventTime::BindColumns, COMDAT
; _this$ = ecx

; 1122 : BEGIN_COLUMN(4)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1123 : 	COLUMN_ENTRY(m_wTourID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L111782
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 46		 jne	 SHORT $L111778
$L111782:

; 1124 : 	COLUMN_ENTRY(m_bWeek)

  0001c	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L111783
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 2b		 jne	 SHORT $L111778
$L111783:

; 1125 : 	COLUMN_ENTRY(m_bDay)

  00037	8d 96 2f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3119]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L111784
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 10		 jne	 SHORT $L111778
$L111784:

; 1126 : 	COLUMN_ENTRY(m_dwStart)

  00052	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L111778:
  00062	5e		 pop	 esi

; 1127 : END_COL()

  00063	c3		 ret	 0
?BindColumns@CTBLTnmtEventTime@@UAEFXZ ENDP		; CTBLTnmtEventTime::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLTnmtEventTime@@UAE@XZ			; CTBLTnmtEventTime::~CTBLTnmtEventTime
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLTnmtEventTime@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLTnmtEventTime@@UAEPAXI@Z PROC NEAR		; CTBLTnmtEventTime::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLTnmtEventTime@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L132886
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L132886:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLTnmtEventTime@@UAEPAXI@Z ENDP			; CTBLTnmtEventTime::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLTnmtEventTime@@UAE@XZ
_TEXT	SEGMENT
??1CTBLTnmtEventTime@@UAE@XZ PROC NEAR			; CTBLTnmtEventTime::~CTBLTnmtEventTime, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLTnmtEventTime@@UAE@XZ ENDP			; CTBLTnmtEventTime::~CTBLTnmtEventTime
_TEXT	ENDS
PUBLIC	??0CTBLTnmtEventSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTnmtEventSchedule::CTBLTnmtEventSchedule
PUBLIC	?GetNumCol@CTBLTnmtEventSchedule@@UAEHXZ	; CTBLTnmtEventSchedule::GetNumCol
PUBLIC	?BindColumns@CTBLTnmtEventSchedule@@UAEFXZ	; CTBLTnmtEventSchedule::BindColumns
PUBLIC	?GetNumParam@CTBLTnmtEventSchedule@@UAEHXZ	; CTBLTnmtEventSchedule::GetNumParam
PUBLIC	?BindParameters@CTBLTnmtEventSchedule@@UAEFH@Z	; CTBLTnmtEventSchedule::BindParameters
PUBLIC	??_7CTBLTnmtEventSchedule@@6B@			; CTBLTnmtEventSchedule::`vftable'
PUBLIC	??_GCTBLTnmtEventSchedule@@UAEPAXI@Z		; CTBLTnmtEventSchedule::`scalar deleting destructor'
PUBLIC	??_C@_0FA@GBDFLFJJ@SELECT?5?7bStep?0?5?7dwPeriod?5?7FROM?5T@ ; `string'
EXTRN	??_ECTBLTnmtEventSchedule@@UAEPAXI@Z:NEAR	; CTBLTnmtEventSchedule::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T133069 DD	0ffffffffH
	DD	FLAT:$L132895
$T133066 DD	019930520H
	DD	01H
	DD	FLAT:$T133069
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FA@GBDFLFJJ@SELECT?5?7bStep?0?5?7dwPeriod?5?7FROM?5T@
CONST	SEGMENT
??_C@_0FA@GBDFLFJJ@SELECT?5?7bStep?0?5?7dwPeriod?5?7FROM?5T@ DB 'SELECT ', 09H
	DB	'bStep, ', 09H, 'dwPeriod ', 09H, 'FROM TTNMTEVENTSCHEDULETABL'
	DB	'E ', 09H, 'WHERE wTournamentID = ?', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLTnmtEventSchedule@@6B@
CONST	SEGMENT
??_7CTBLTnmtEventSchedule@@6B@ DD FLAT:??_ECTBLTnmtEventSchedule@@UAEPAXI@Z ; CTBLTnmtEventSchedule::`vftable'
	DD	FLAT:?GetNumCol@CTBLTnmtEventSchedule@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLTnmtEventSchedule@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLTnmtEventSchedule@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLTnmtEventSchedule@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLTnmtEventSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T132894 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLTnmtEventSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLTnmtEventSchedule::CTBLTnmtEventSchedule, COMDAT
; _this$ = ecx

; 1141 : 	WHERE wTournamentID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLTnmtEventSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FA@GBDFLFJJ@SELECT?5?7bStep?0?5?7dwPeriod?5?7FROM?5T@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T132894[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLTnmtEventSchedule@@6B@
  0005e	72 0d		 jb	 SHORT $L133067
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L133067:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L132895:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLTnmtEventSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T133066
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLTnmtEventSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLTnmtEventSchedule::CTBLTnmtEventSchedule
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLTnmtEventSchedule@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLTnmtEventSchedule@@UAEHXZ PROC NEAR	; CTBLTnmtEventSchedule::GetNumCol, COMDAT
; _this$ = ecx

; 1143 : BEGIN_COLUMN(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumCol@CTBLTnmtEventSchedule@@UAEHXZ ENDP		; CTBLTnmtEventSchedule::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTnmtEventSchedule@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLTnmtEventSchedule@@UAEFXZ PROC NEAR	; CTBLTnmtEventSchedule::BindColumns, COMDAT
; _this$ = ecx

; 1143 : BEGIN_COLUMN(2)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1144 : 	COLUMN_ENTRY(m_bStep)

  00003	8d 86 2e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3118]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L111831
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 10		 jne	 SHORT $L111827
$L111831:

; 1145 : 	COLUMN_ENTRY(m_dwPeriod)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L111827:
  0002c	5e		 pop	 esi

; 1146 : END_COL()

  0002d	c3		 ret	 0
?BindColumns@CTBLTnmtEventSchedule@@UAEFXZ ENDP		; CTBLTnmtEventSchedule::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLTnmtEventSchedule@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLTnmtEventSchedule@@UAEHXZ PROC NEAR	; CTBLTnmtEventSchedule::GetNumParam, COMDAT
; _this$ = ecx

; 1148 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLTnmtEventSchedule@@UAEHXZ ENDP		; CTBLTnmtEventSchedule::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLTnmtEventSchedule@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLTnmtEventSchedule@@UAEFH@Z PROC NEAR ; CTBLTnmtEventSchedule::BindParameters, COMDAT
; _this$ = ecx

; 1149 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wTourID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L111837
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L111837:

; 1150 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLTnmtEventSchedule@@UAEFH@Z ENDP	; CTBLTnmtEventSchedule::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLTnmtEventSchedule@@UAE@XZ		; CTBLTnmtEventSchedule::~CTBLTnmtEventSchedule
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLTnmtEventSchedule@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLTnmtEventSchedule@@UAEPAXI@Z PROC NEAR		; CTBLTnmtEventSchedule::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLTnmtEventSchedule@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L133087
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L133087:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLTnmtEventSchedule@@UAEPAXI@Z ENDP		; CTBLTnmtEventSchedule::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLTnmtEventSchedule@@UAE@XZ
_TEXT	SEGMENT
??1CTBLTnmtEventSchedule@@UAE@XZ PROC NEAR		; CTBLTnmtEventSchedule::~CTBLTnmtEventSchedule, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLTnmtEventSchedule@@UAE@XZ ENDP			; CTBLTnmtEventSchedule::~CTBLTnmtEventSchedule
_TEXT	ENDS
PUBLIC	??0CTBLTournamentEvent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTournamentEvent::CTBLTournamentEvent
PUBLIC	?GetNumCol@CTBLTournamentEvent@@UAEHXZ		; CTBLTournamentEvent::GetNumCol
PUBLIC	?BindColumns@CTBLTournamentEvent@@UAEFXZ	; CTBLTournamentEvent::BindColumns
PUBLIC	?GetNumParam@CTBLTournamentEvent@@UAEHXZ	; CTBLTournamentEvent::GetNumParam
PUBLIC	?BindParameters@CTBLTournamentEvent@@UAEFH@Z	; CTBLTournamentEvent::BindParameters
PUBLIC	??_7CTBLTournamentEvent@@6B@			; CTBLTournamentEvent::`vftable'
PUBLIC	??_GCTBLTournamentEvent@@UAEPAXI@Z		; CTBLTournamentEvent::`scalar deleting destructor'
PUBLIC	??_C@_0KA@JKJOIAJ@SELECT?5?7bEntryID?0?5?7szName?0?5?7bTyp@ ; `string'
EXTRN	??_ECTBLTournamentEvent@@UAEPAXI@Z:NEAR		; CTBLTournamentEvent::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T133270 DD	0ffffffffH
	DD	FLAT:$L133096
$T133267 DD	019930520H
	DD	01H
	DD	FLAT:$T133270
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0KA@JKJOIAJ@SELECT?5?7bEntryID?0?5?7szName?0?5?7bTyp@
CONST	SEGMENT
??_C@_0KA@JKJOIAJ@SELECT?5?7bEntryID?0?5?7szName?0?5?7bTyp@ DB 'SELECT ', 09H
	DB	'bEntryID, ', 09H, 'szName, ', 09H, 'bType, ', 09H, 'dwClass, '
	DB	09H, 'dwFee, ', 09H, 'dwFeeBack, ', 09H, 'wItemID, ', 09H, 'bI'
	DB	'temCount, ', 09H, 'bMinLevel,  ', 09H, 'bMaxLevel  ', 09H, 'F'
	DB	'ROM TTNMTEVENTTABLE ', 09H, 'WHERE wTournamentID = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLTournamentEvent@@6B@
CONST	SEGMENT
??_7CTBLTournamentEvent@@6B@ DD FLAT:??_ECTBLTournamentEvent@@UAEPAXI@Z ; CTBLTournamentEvent::`vftable'
	DD	FLAT:?GetNumCol@CTBLTournamentEvent@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLTournamentEvent@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLTournamentEvent@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLTournamentEvent@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLTournamentEvent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T133095 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLTournamentEvent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLTournamentEvent::CTBLTournamentEvent, COMDAT
; _this$ = ecx

; 1180 : 	WHERE wTournamentID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLTournamentEvent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0KA@JKJOIAJ@SELECT?5?7bEntryID?0?5?7szName?0?5?7bTyp@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T133095[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLTournamentEvent@@6B@
  0005e	72 0d		 jb	 SHORT $L133268
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L133268:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L133096:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLTournamentEvent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T133267
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLTournamentEvent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLTournamentEvent::CTBLTournamentEvent
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLTournamentEvent@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLTournamentEvent@@UAEHXZ PROC NEAR	; CTBLTournamentEvent::GetNumCol, COMDAT
; _this$ = ecx

; 1182 : BEGIN_COLUMN(10)

  00000	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  00005	c3		 ret	 0
?GetNumCol@CTBLTournamentEvent@@UAEHXZ ENDP		; CTBLTournamentEvent::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTournamentEvent@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLTournamentEvent@@UAEFXZ PROC NEAR	; CTBLTournamentEvent::BindColumns, COMDAT
; _this$ = ecx

; 1182 : BEGIN_COLUMN(10)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1183 : 	COLUMN_ENTRY(m_bEntryID)

  00003	8d 86 2e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3118]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L111896
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 f6 00 00
	00		 jne	 $L111892
$L111896:

; 1184 : 	COLUMN_ENTRY_STR(m_szName)

  00020	6a 33		 push	 51			; 00000033H
  00022	8d 8e 2f 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3119]
  00028	51		 push	 ecx
  00029	6a 02		 push	 2
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00032	66 85 c0	 test	 ax, ax
  00035	74 0a		 je	 SHORT $L111897
  00037	66 3d 01 00	 cmp	 ax, 1
  0003b	0f 85 d5 00 00
	00		 jne	 $L111892
$L111897:

; 1185 : 	COLUMN_ENTRY(m_bType)

  00041	8d 96 62 0c 00
	00		 lea	 edx, DWORD PTR [esi+3170]
  00047	52		 push	 edx
  00048	6a 03		 push	 3
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00051	66 85 c0	 test	 ax, ax
  00054	74 0a		 je	 SHORT $L111898
  00056	66 3d 01 00	 cmp	 ax, 1
  0005a	0f 85 b6 00 00
	00		 jne	 $L111892
$L111898:

; 1186 : 	COLUMN_ENTRY(m_dwClass)

  00060	8d 86 64 0c 00
	00		 lea	 eax, DWORD PTR [esi+3172]
  00066	50		 push	 eax
  00067	6a 04		 push	 4
  00069	8b ce		 mov	 ecx, esi
  0006b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00070	66 85 c0	 test	 ax, ax
  00073	74 0a		 je	 SHORT $L111899
  00075	66 3d 01 00	 cmp	 ax, 1
  00079	0f 85 97 00 00
	00		 jne	 $L111892
$L111899:

; 1187 : 	COLUMN_ENTRY(m_dwFee)

  0007f	8d 8e 68 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3176]
  00085	51		 push	 ecx
  00086	6a 05		 push	 5
  00088	8b ce		 mov	 ecx, esi
  0008a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0008f	66 85 c0	 test	 ax, ax
  00092	74 06		 je	 SHORT $L111900
  00094	66 3d 01 00	 cmp	 ax, 1
  00098	75 7c		 jne	 SHORT $L111892
$L111900:

; 1188 : 	COLUMN_ENTRY(m_dwFeeBack)

  0009a	8d 96 6c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3180]
  000a0	52		 push	 edx
  000a1	6a 06		 push	 6
  000a3	8b ce		 mov	 ecx, esi
  000a5	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000aa	66 85 c0	 test	 ax, ax
  000ad	74 06		 je	 SHORT $L111901
  000af	66 3d 01 00	 cmp	 ax, 1
  000b3	75 61		 jne	 SHORT $L111892
$L111901:

; 1189 : 	COLUMN_ENTRY(m_wPermitItemID)

  000b5	8d 86 70 0c 00
	00		 lea	 eax, DWORD PTR [esi+3184]
  000bb	50		 push	 eax
  000bc	6a 07		 push	 7
  000be	8b ce		 mov	 ecx, esi
  000c0	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000c5	66 85 c0	 test	 ax, ax
  000c8	74 06		 je	 SHORT $L111902
  000ca	66 3d 01 00	 cmp	 ax, 1
  000ce	75 46		 jne	 SHORT $L111892
$L111902:

; 1190 : 	COLUMN_ENTRY(m_bPermitCount)

  000d0	8d 8e 72 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3186]
  000d6	51		 push	 ecx
  000d7	6a 08		 push	 8
  000d9	8b ce		 mov	 ecx, esi
  000db	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000e0	66 85 c0	 test	 ax, ax
  000e3	74 06		 je	 SHORT $L111903
  000e5	66 3d 01 00	 cmp	 ax, 1
  000e9	75 2b		 jne	 SHORT $L111892
$L111903:

; 1191 : 	COLUMN_ENTRY(m_bMinLevel)

  000eb	8d 96 73 0c 00
	00		 lea	 edx, DWORD PTR [esi+3187]
  000f1	52		 push	 edx
  000f2	6a 09		 push	 9
  000f4	8b ce		 mov	 ecx, esi
  000f6	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000fb	66 85 c0	 test	 ax, ax
  000fe	74 06		 je	 SHORT $L111904
  00100	66 3d 01 00	 cmp	 ax, 1
  00104	75 10		 jne	 SHORT $L111892
$L111904:

; 1192 : 	COLUMN_ENTRY(m_bMaxLevel)

  00106	8d 86 74 0c 00
	00		 lea	 eax, DWORD PTR [esi+3188]
  0010c	50		 push	 eax
  0010d	6a 0a		 push	 10			; 0000000aH
  0010f	8b ce		 mov	 ecx, esi
  00111	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L111892:
  00116	5e		 pop	 esi

; 1193 : END_COL()

  00117	c3		 ret	 0
?BindColumns@CTBLTournamentEvent@@UAEFXZ ENDP		; CTBLTournamentEvent::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLTournamentEvent@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLTournamentEvent@@UAEHXZ PROC NEAR	; CTBLTournamentEvent::GetNumParam, COMDAT
; _this$ = ecx

; 1195 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLTournamentEvent@@UAEHXZ ENDP		; CTBLTournamentEvent::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLTournamentEvent@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLTournamentEvent@@UAEFH@Z PROC NEAR	; CTBLTournamentEvent::BindParameters, COMDAT
; _this$ = ecx

; 1196 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wTourID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L111910
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L111910:

; 1197 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLTournamentEvent@@UAEFH@Z ENDP	; CTBLTournamentEvent::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLTournamentEvent@@UAE@XZ			; CTBLTournamentEvent::~CTBLTournamentEvent
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLTournamentEvent@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLTournamentEvent@@UAEPAXI@Z PROC NEAR		; CTBLTournamentEvent::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLTournamentEvent@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L133288
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L133288:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLTournamentEvent@@UAEPAXI@Z ENDP			; CTBLTournamentEvent::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLTournamentEvent@@UAE@XZ
_TEXT	SEGMENT
??1CTBLTournamentEvent@@UAE@XZ PROC NEAR		; CTBLTournamentEvent::~CTBLTournamentEvent, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLTournamentEvent@@UAE@XZ ENDP			; CTBLTournamentEvent::~CTBLTournamentEvent
_TEXT	ENDS
PUBLIC	??0CTBLTnmtEventReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTnmtEventReward::CTBLTnmtEventReward
PUBLIC	?GetNumCol@CTBLTnmtEventReward@@UAEHXZ		; CTBLTnmtEventReward::GetNumCol
PUBLIC	?BindColumns@CTBLTnmtEventReward@@UAEFXZ	; CTBLTnmtEventReward::BindColumns
PUBLIC	?GetNumParam@CTBLTnmtEventReward@@UAEHXZ	; CTBLTnmtEventReward::GetNumParam
PUBLIC	?BindParameters@CTBLTnmtEventReward@@UAEFH@Z	; CTBLTnmtEventReward::BindParameters
PUBLIC	??_7CTBLTnmtEventReward@@6B@			; CTBLTnmtEventReward::`vftable'
PUBLIC	??_GCTBLTnmtEventReward@@UAEPAXI@Z		; CTBLTnmtEventReward::`scalar deleting destructor'
PUBLIC	??_C@_0ID@PGNHLCLN@SELECT?5?7bEntryID?0?5?7dwClass?0?5?7bCh@ ; `string'
EXTRN	??_ECTBLTnmtEventReward@@UAEPAXI@Z:NEAR		; CTBLTnmtEventReward::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T133471 DD	0ffffffffH
	DD	FLAT:$L133297
$T133468 DD	019930520H
	DD	01H
	DD	FLAT:$T133471
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0ID@PGNHLCLN@SELECT?5?7bEntryID?0?5?7dwClass?0?5?7bCh@
CONST	SEGMENT
??_C@_0ID@PGNHLCLN@SELECT?5?7bEntryID?0?5?7dwClass?0?5?7bCh@ DB 'SELECT ', 09H
	DB	'bEntryID, ', 09H, 'dwClass, ', 09H, 'bCheckShield, ', 09H, 'b'
	DB	'ChartType, ', 09H, 'wItemID, ', 09H, 'bItemCount ', 09H, 'FRO'
	DB	'M TTNMTEVENTREWARDTABLE ', 09H, 'WHERE wTournamentID = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLTnmtEventReward@@6B@
CONST	SEGMENT
??_7CTBLTnmtEventReward@@6B@ DD FLAT:??_ECTBLTnmtEventReward@@UAEPAXI@Z ; CTBLTnmtEventReward::`vftable'
	DD	FLAT:?GetNumCol@CTBLTnmtEventReward@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLTnmtEventReward@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLTnmtEventReward@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLTnmtEventReward@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLTnmtEventReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T133296 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLTnmtEventReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLTnmtEventReward::CTBLTnmtEventReward, COMDAT
; _this$ = ecx

; 1219 : 	WHERE wTournamentID = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLTnmtEventReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0ID@PGNHLCLN@SELECT?5?7bEntryID?0?5?7dwClass?0?5?7bCh@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T133296[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLTnmtEventReward@@6B@
  0005e	72 0d		 jb	 SHORT $L133469
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L133469:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L133297:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLTnmtEventReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T133468
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLTnmtEventReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLTnmtEventReward::CTBLTnmtEventReward
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLTnmtEventReward@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLTnmtEventReward@@UAEHXZ PROC NEAR	; CTBLTnmtEventReward::GetNumCol, COMDAT
; _this$ = ecx

; 1221 : BEGIN_COLUMN(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumCol@CTBLTnmtEventReward@@UAEHXZ ENDP		; CTBLTnmtEventReward::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTnmtEventReward@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLTnmtEventReward@@UAEFXZ PROC NEAR	; CTBLTnmtEventReward::BindColumns, COMDAT
; _this$ = ecx

; 1221 : BEGIN_COLUMN(6)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1222 : 	COLUMN_ENTRY(m_bEntryID)

  00003	8d 86 2e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3118]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L111965
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 7c		 jne	 SHORT $L111961
$L111965:

; 1223 : 	COLUMN_ENTRY(m_dwClass)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L111966
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 61		 jne	 SHORT $L111961
$L111966:

; 1224 : 	COLUMN_ENTRY(m_bCheckShield)

  00037	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L111967
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 46		 jne	 SHORT $L111961
$L111967:

; 1225 : 	COLUMN_ENTRY(m_bChartType)

  00052	8d 86 35 0c 00
	00		 lea	 eax, DWORD PTR [esi+3125]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00062	66 85 c0	 test	 ax, ax
  00065	74 06		 je	 SHORT $L111968
  00067	66 3d 01 00	 cmp	 ax, 1
  0006b	75 2b		 jne	 SHORT $L111961
$L111968:

; 1226 : 	COLUMN_ENTRY(m_wItemID)

  0006d	8d 8e 36 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3126]
  00073	51		 push	 ecx
  00074	6a 05		 push	 5
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0007d	66 85 c0	 test	 ax, ax
  00080	74 06		 je	 SHORT $L111969
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 10		 jne	 SHORT $L111961
$L111969:

; 1227 : 	COLUMN_ENTRY(m_bCount)

  00088	8d 96 38 0c 00
	00		 lea	 edx, DWORD PTR [esi+3128]
  0008e	52		 push	 edx
  0008f	6a 06		 push	 6
  00091	8b ce		 mov	 ecx, esi
  00093	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L111961:
  00098	5e		 pop	 esi

; 1228 : END_COL()

  00099	c3		 ret	 0
?BindColumns@CTBLTnmtEventReward@@UAEFXZ ENDP		; CTBLTnmtEventReward::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLTnmtEventReward@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLTnmtEventReward@@UAEHXZ PROC NEAR	; CTBLTnmtEventReward::GetNumParam, COMDAT
; _this$ = ecx

; 1230 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLTnmtEventReward@@UAEHXZ ENDP		; CTBLTnmtEventReward::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLTnmtEventReward@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLTnmtEventReward@@UAEFH@Z PROC NEAR	; CTBLTnmtEventReward::BindParameters, COMDAT
; _this$ = ecx

; 1231 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wTourID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L111975
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L111975:

; 1232 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLTnmtEventReward@@UAEFH@Z ENDP	; CTBLTnmtEventReward::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLTnmtEventReward@@UAE@XZ			; CTBLTnmtEventReward::~CTBLTnmtEventReward
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLTnmtEventReward@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLTnmtEventReward@@UAEPAXI@Z PROC NEAR		; CTBLTnmtEventReward::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLTnmtEventReward@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L133489
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L133489:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLTnmtEventReward@@UAEPAXI@Z ENDP			; CTBLTnmtEventReward::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLTnmtEventReward@@UAE@XZ
_TEXT	SEGMENT
??1CTBLTnmtEventReward@@UAE@XZ PROC NEAR		; CTBLTnmtEventReward::~CTBLTnmtEventReward, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLTnmtEventReward@@UAE@XZ ENDP			; CTBLTnmtEventReward::~CTBLTnmtEventReward
_TEXT	ENDS
PUBLIC	??0CTBLGetCharInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGetCharInfo::CTBLGetCharInfo
PUBLIC	?GetNumCol@CTBLGetCharInfo@@UAEHXZ		; CTBLGetCharInfo::GetNumCol
PUBLIC	?BindColumns@CTBLGetCharInfo@@UAEFXZ		; CTBLGetCharInfo::BindColumns
PUBLIC	?GetNumParam@CTBLGetCharInfo@@UAEHXZ		; CTBLGetCharInfo::GetNumParam
PUBLIC	?BindParameters@CTBLGetCharInfo@@UAEFH@Z	; CTBLGetCharInfo::BindParameters
PUBLIC	??_7CTBLGetCharInfo@@6B@			; CTBLGetCharInfo::`vftable'
PUBLIC	??_GCTBLGetCharInfo@@UAEPAXI@Z			; CTBLGetCharInfo::`scalar deleting destructor'
PUBLIC	??_C@_0FJ@CNECFINB@SELECT?5?7dwCharID?0?5?7szName?0?5?7bCou@ ; `string'
EXTRN	??_ECTBLGetCharInfo@@UAEPAXI@Z:NEAR		; CTBLGetCharInfo::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T133672 DD	0ffffffffH
	DD	FLAT:$L133498
$T133669 DD	019930520H
	DD	01H
	DD	FLAT:$T133672
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0FJ@CNECFINB@SELECT?5?7dwCharID?0?5?7szName?0?5?7bCou@
CONST	SEGMENT
??_C@_0FJ@CNECFINB@SELECT?5?7dwCharID?0?5?7szName?0?5?7bCou@ DB 'SELECT ', 09H
	DB	'dwCharID, ', 09H, 'szName, ', 09H, 'bCountry, ', 09H, 'bLevel'
	DB	', ', 09H, 'bClass ', 09H, 'FROM TCHARTABLE WHERE szName = ?', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLGetCharInfo@@6B@
CONST	SEGMENT
??_7CTBLGetCharInfo@@6B@ DD FLAT:??_ECTBLGetCharInfo@@UAEPAXI@Z ; CTBLGetCharInfo::`vftable'
	DD	FLAT:?GetNumCol@CTBLGetCharInfo@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLGetCharInfo@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLGetCharInfo@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLGetCharInfo@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLGetCharInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T133497 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLGetCharInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLGetCharInfo::CTBLGetCharInfo, COMDAT
; _this$ = ecx

; 1251 : 	FROM TCHARTABLE WHERE szName = ?"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLGetCharInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0FJ@CNECFINB@SELECT?5?7dwCharID?0?5?7szName?0?5?7bCou@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T133497[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLGetCharInfo@@6B@
  0005e	72 0d		 jb	 SHORT $L133670
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L133670:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L133498:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLGetCharInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T133669
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLGetCharInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLGetCharInfo::CTBLGetCharInfo
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLGetCharInfo@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLGetCharInfo@@UAEHXZ PROC NEAR		; CTBLGetCharInfo::GetNumCol, COMDAT
; _this$ = ecx

; 1253 : BEGIN_COLUMN(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumCol@CTBLGetCharInfo@@UAEHXZ ENDP			; CTBLGetCharInfo::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLGetCharInfo@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLGetCharInfo@@UAEFXZ PROC NEAR		; CTBLGetCharInfo::BindColumns, COMDAT
; _this$ = ecx

; 1253 : BEGIN_COLUMN(5)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1254 : 	COLUMN_ENTRY(m_dwCharID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L112029
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 63		 jne	 SHORT $L112025
$L112029:

; 1255 : 	COLUMN_ENTRY_STR(m_szName)

  0001c	6a 33		 push	 51			; 00000033H
  0001e	8d 8e 66 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3174]
  00024	51		 push	 ecx
  00025	6a 02		 push	 2
  00027	8b ce		 mov	 ecx, esi
  00029	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  0002e	66 85 c0	 test	 ax, ax
  00031	74 06		 je	 SHORT $L112030
  00033	66 3d 01 00	 cmp	 ax, 1
  00037	75 46		 jne	 SHORT $L112025
$L112030:

; 1256 : 	COLUMN_ENTRY(m_bCountry)

  00039	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  0003f	52		 push	 edx
  00040	6a 03		 push	 3
  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00049	66 85 c0	 test	 ax, ax
  0004c	74 06		 je	 SHORT $L112031
  0004e	66 3d 01 00	 cmp	 ax, 1
  00052	75 2b		 jne	 SHORT $L112025
$L112031:

; 1257 : 	COLUMN_ENTRY(m_bLevel)

  00054	8d 86 31 0c 00
	00		 lea	 eax, DWORD PTR [esi+3121]
  0005a	50		 push	 eax
  0005b	6a 04		 push	 4
  0005d	8b ce		 mov	 ecx, esi
  0005f	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00064	66 85 c0	 test	 ax, ax
  00067	74 06		 je	 SHORT $L112032
  00069	66 3d 01 00	 cmp	 ax, 1
  0006d	75 10		 jne	 SHORT $L112025
$L112032:

; 1258 : 	COLUMN_ENTRY(m_bClass)

  0006f	8d 8e 32 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3122]
  00075	51		 push	 ecx
  00076	6a 05		 push	 5
  00078	8b ce		 mov	 ecx, esi
  0007a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L112025:
  0007f	5e		 pop	 esi

; 1259 : END_COL()

  00080	c3		 ret	 0
?BindColumns@CTBLGetCharInfo@@UAEFXZ ENDP		; CTBLGetCharInfo::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLGetCharInfo@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLGetCharInfo@@UAEHXZ PROC NEAR		; CTBLGetCharInfo::GetNumParam, COMDAT
; _this$ = ecx

; 1261 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLGetCharInfo@@UAEHXZ ENDP		; CTBLGetCharInfo::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLGetCharInfo@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLGetCharInfo@@UAEFH@Z PROC NEAR	; CTBLGetCharInfo::BindParameters, COMDAT
; _this$ = ecx

; 1262 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szFindName)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	c7 81 10 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [ecx+2064], -3 ; fffffffdH
  00012	75 12		 jne	 SHORT $L112038
  00014	6a 33		 push	 51			; 00000033H
  00016	8d 81 33 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3123]
  0001c	50		 push	 eax
  0001d	6a 01		 push	 1
  0001f	6a 01		 push	 1
  00021	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L112038:

; 1263 : END_PARAM()

  00026	c2 04 00	 ret	 4
?BindParameters@CTBLGetCharInfo@@UAEFH@Z ENDP		; CTBLGetCharInfo::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLGetCharInfo@@UAE@XZ			; CTBLGetCharInfo::~CTBLGetCharInfo
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLGetCharInfo@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLGetCharInfo@@UAEPAXI@Z PROC NEAR		; CTBLGetCharInfo::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLGetCharInfo@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L133690
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L133690:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLGetCharInfo@@UAEPAXI@Z ENDP			; CTBLGetCharInfo::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLGetCharInfo@@UAE@XZ
_TEXT	SEGMENT
??1CTBLGetCharInfo@@UAE@XZ PROC NEAR			; CTBLGetCharInfo::~CTBLGetCharInfo, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLGetCharInfo@@UAE@XZ ENDP				; CTBLGetCharInfo::~CTBLGetCharInfo
_TEXT	ENDS
PUBLIC	??0CTBLTournamentPlayer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTournamentPlayer::CTBLTournamentPlayer
PUBLIC	?GetNumCol@CTBLTournamentPlayer@@UAEHXZ		; CTBLTournamentPlayer::GetNumCol
PUBLIC	?BindColumns@CTBLTournamentPlayer@@UAEFXZ	; CTBLTournamentPlayer::BindColumns
PUBLIC	??_7CTBLTournamentPlayer@@6B@			; CTBLTournamentPlayer::`vftable'
PUBLIC	??_GCTBLTournamentPlayer@@UAEPAXI@Z		; CTBLTournamentPlayer::`scalar deleting destructor'
PUBLIC	??_C@_0HL@DGIDOGBA@SELECT?5?7dwCharID?0?5?7szName?0?5?7dwCh@ ; `string'
EXTRN	??_ECTBLTournamentPlayer@@UAEPAXI@Z:NEAR	; CTBLTournamentPlayer::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T133873 DD	0ffffffffH
	DD	FLAT:$L133699
$T133870 DD	019930520H
	DD	01H
	DD	FLAT:$T133873
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0HL@DGIDOGBA@SELECT?5?7dwCharID?0?5?7szName?0?5?7dwCh@
CONST	SEGMENT
??_C@_0HL@DGIDOGBA@SELECT?5?7dwCharID?0?5?7szName?0?5?7dwCh@ DB 'SELECT ', 09H
	DB	'dwCharID, ', 09H, 'szName, ', 09H, 'dwChiefID, ', 09H, 'bClas'
	DB	's, ', 09H, 'bCountry, ', 09H, 'bLevel, ', 09H, 'bEntry, ', 09H
	DB	'bStep, ', 09H, 'bResult ', 09H, 'FROM TVIEW_TOURNAMENTPLAYER', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLTournamentPlayer@@6B@
CONST	SEGMENT
??_7CTBLTournamentPlayer@@6B@ DD FLAT:??_ECTBLTournamentPlayer@@UAEPAXI@Z ; CTBLTournamentPlayer::`vftable'
	DD	FLAT:?GetNumCol@CTBLTournamentPlayer@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLTournamentPlayer@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLTournamentPlayer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T133698 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLTournamentPlayer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLTournamentPlayer::CTBLTournamentPlayer, COMDAT
; _this$ = ecx

; 1289 : 	FROM TVIEW_TOURNAMENTPLAYER"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLTournamentPlayer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0HL@DGIDOGBA@SELECT?5?7dwCharID?0?5?7szName?0?5?7dwCh@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T133698[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLTournamentPlayer@@6B@
  0005e	72 0d		 jb	 SHORT $L133871
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L133871:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L133699:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLTournamentPlayer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T133870
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLTournamentPlayer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLTournamentPlayer::CTBLTournamentPlayer
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLTournamentPlayer@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLTournamentPlayer@@UAEHXZ PROC NEAR	; CTBLTournamentPlayer::GetNumCol, COMDAT
; _this$ = ecx

; 1291 : BEGIN_COLUMN(9)

  00000	b8 09 00 00 00	 mov	 eax, 9
  00005	c3		 ret	 0
?GetNumCol@CTBLTournamentPlayer@@UAEHXZ ENDP		; CTBLTournamentPlayer::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTournamentPlayer@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLTournamentPlayer@@UAEFXZ PROC NEAR	; CTBLTournamentPlayer::BindColumns, COMDAT
; _this$ = ecx

; 1291 : BEGIN_COLUMN(9)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1292 : 	COLUMN_ENTRY(m_dwCharID)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L112092
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 d7 00 00
	00		 jne	 $L112088
$L112092:

; 1293 : 	COLUMN_ENTRY_STR(m_szName)

  00020	6a 33		 push	 51			; 00000033H
  00022	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00028	51		 push	 ecx
  00029	6a 02		 push	 2
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00032	66 85 c0	 test	 ax, ax
  00035	74 0a		 je	 SHORT $L112093
  00037	66 3d 01 00	 cmp	 ax, 1
  0003b	0f 85 b6 00 00
	00		 jne	 $L112088
$L112093:

; 1294 : 	COLUMN_ENTRY(m_dwChiefID)

  00041	8d 96 64 0c 00
	00		 lea	 edx, DWORD PTR [esi+3172]
  00047	52		 push	 edx
  00048	6a 03		 push	 3
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00051	66 85 c0	 test	 ax, ax
  00054	74 0a		 je	 SHORT $L112094
  00056	66 3d 01 00	 cmp	 ax, 1
  0005a	0f 85 97 00 00
	00		 jne	 $L112088
$L112094:

; 1295 : 	COLUMN_ENTRY(m_bClass)

  00060	8d 86 68 0c 00
	00		 lea	 eax, DWORD PTR [esi+3176]
  00066	50		 push	 eax
  00067	6a 04		 push	 4
  00069	8b ce		 mov	 ecx, esi
  0006b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00070	66 85 c0	 test	 ax, ax
  00073	74 06		 je	 SHORT $L112095
  00075	66 3d 01 00	 cmp	 ax, 1
  00079	75 7c		 jne	 SHORT $L112088
$L112095:

; 1296 : 	COLUMN_ENTRY(m_bCountry)

  0007b	8d 8e 69 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3177]
  00081	51		 push	 ecx
  00082	6a 05		 push	 5
  00084	8b ce		 mov	 ecx, esi
  00086	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0008b	66 85 c0	 test	 ax, ax
  0008e	74 06		 je	 SHORT $L112096
  00090	66 3d 01 00	 cmp	 ax, 1
  00094	75 61		 jne	 SHORT $L112088
$L112096:

; 1297 : 	COLUMN_ENTRY(m_bLevel)

  00096	8d 96 6a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3178]
  0009c	52		 push	 edx
  0009d	6a 06		 push	 6
  0009f	8b ce		 mov	 ecx, esi
  000a1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000a6	66 85 c0	 test	 ax, ax
  000a9	74 06		 je	 SHORT $L112097
  000ab	66 3d 01 00	 cmp	 ax, 1
  000af	75 46		 jne	 SHORT $L112088
$L112097:

; 1298 : 	COLUMN_ENTRY(m_bEntry)

  000b1	8d 86 6b 0c 00
	00		 lea	 eax, DWORD PTR [esi+3179]
  000b7	50		 push	 eax
  000b8	6a 07		 push	 7
  000ba	8b ce		 mov	 ecx, esi
  000bc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000c1	66 85 c0	 test	 ax, ax
  000c4	74 06		 je	 SHORT $L112098
  000c6	66 3d 01 00	 cmp	 ax, 1
  000ca	75 2b		 jne	 SHORT $L112088
$L112098:

; 1299 : 	COLUMN_ENTRY(m_bStep)

  000cc	8d 8e 6c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3180]
  000d2	51		 push	 ecx
  000d3	6a 08		 push	 8
  000d5	8b ce		 mov	 ecx, esi
  000d7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  000dc	66 85 c0	 test	 ax, ax
  000df	74 06		 je	 SHORT $L112099
  000e1	66 3d 01 00	 cmp	 ax, 1
  000e5	75 10		 jne	 SHORT $L112088
$L112099:

; 1300 : 	COLUMN_ENTRY(m_bResult)

  000e7	8d 96 6d 0c 00
	00		 lea	 edx, DWORD PTR [esi+3181]
  000ed	52		 push	 edx
  000ee	6a 09		 push	 9
  000f0	8b ce		 mov	 ecx, esi
  000f2	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
$L112088:
  000f7	5e		 pop	 esi

; 1301 : END_COL()

  000f8	c3		 ret	 0
?BindColumns@CTBLTournamentPlayer@@UAEFXZ ENDP		; CTBLTournamentPlayer::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLTournamentPlayer@@UAE@XZ			; CTBLTournamentPlayer::~CTBLTournamentPlayer
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLTournamentPlayer@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLTournamentPlayer@@UAEPAXI@Z PROC NEAR		; CTBLTournamentPlayer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLTournamentPlayer@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L133885
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L133885:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLTournamentPlayer@@UAEPAXI@Z ENDP		; CTBLTournamentPlayer::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLTournamentPlayer@@UAE@XZ
_TEXT	SEGMENT
??1CTBLTournamentPlayer@@UAE@XZ PROC NEAR		; CTBLTournamentPlayer::~CTBLTournamentPlayer, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLTournamentPlayer@@UAE@XZ ENDP			; CTBLTournamentPlayer::~CTBLTournamentPlayer
_TEXT	ENDS
PUBLIC	??0CTBLFirstGradeGroup@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLFirstGradeGroup::CTBLFirstGradeGroup
PUBLIC	?GetNumCol@CTBLFirstGradeGroup@@UAEHXZ		; CTBLFirstGradeGroup::GetNumCol
PUBLIC	?BindColumns@CTBLFirstGradeGroup@@UAEFXZ	; CTBLFirstGradeGroup::BindColumns
PUBLIC	?GetNumParam@CTBLFirstGradeGroup@@UAEHXZ	; CTBLFirstGradeGroup::GetNumParam
PUBLIC	?BindParameters@CTBLFirstGradeGroup@@UAEFH@Z	; CTBLFirstGradeGroup::BindParameters
PUBLIC	??_7CTBLFirstGradeGroup@@6B@			; CTBLFirstGradeGroup::`vftable'
PUBLIC	??_GCTBLFirstGradeGroup@@UAEPAXI@Z		; CTBLFirstGradeGroup::`scalar deleting destructor'
PUBLIC	??_C@_0BAB@HGCAMCMO@SELECT?5?7bRank?0?5?7dwCharID?0?5?7szNam@ ; `string'
EXTRN	??_ECTBLFirstGradeGroup@@UAEPAXI@Z:NEAR		; CTBLFirstGradeGroup::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T134068 DD	0ffffffffH
	DD	FLAT:$L133894
$T134065 DD	019930520H
	DD	01H
	DD	FLAT:$T134068
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BAB@HGCAMCMO@SELECT?5?7bRank?0?5?7dwCharID?0?5?7szNam@
CONST	SEGMENT
??_C@_0BAB@HGCAMCMO@SELECT?5?7bRank?0?5?7dwCharID?0?5?7szNam@ DB 'SELECT '
	DB	09H, 'bRank, ', 09H, 'dwCharID, ', 09H, 'szName, ', 09H, 'dwTo'
	DB	'talPoint, ', 09H, 'dwMonthPoint, ', 09H, 'wMonthWin, ', 09H, 'w'
	DB	'MonthLose, ', 09H, 'dwTotalWin, ', 09H, 'dwTotalLose, ', 09H, 'b'
	DB	'Country, ', 09H, 'bLevel, ', 09H, 'bClass, ', 09H, 'bRace, ', 09H
	DB	'bSex, ', 09H, 'bHair, ', 09H, 'bFace, ', 09H, 'szSay, ', 09H, 's'
	DB	'zGuild ', 09H, 'FROM TMONTHRANKTABLE WHERE bMonth = ? ORDER B'
	DB	'Y bCountry,bRank', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CTBLFirstGradeGroup@@6B@
CONST	SEGMENT
??_7CTBLFirstGradeGroup@@6B@ DD FLAT:??_ECTBLFirstGradeGroup@@UAEPAXI@Z ; CTBLFirstGradeGroup::`vftable'
	DD	FLAT:?GetNumCol@CTBLFirstGradeGroup@@UAEHXZ
	DD	FLAT:?GetNumParam@CTBLFirstGradeGroup@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLFirstGradeGroup@@UAEFXZ
	DD	FLAT:?BindParameters@CTBLFirstGradeGroup@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLFirstGradeGroup@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T133893 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLFirstGradeGroup@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLFirstGradeGroup::CTBLFirstGradeGroup, COMDAT
; _this$ = ecx

; 1346 : 	FROM TMONTHRANKTABLE WHERE bMonth = ? ORDER BY bCountry,bRank"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLFirstGradeGroup@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BAB@HGCAMCMO@SELECT?5?7bRank?0?5?7dwCharID?0?5?7szNam@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T133893[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLFirstGradeGroup@@6B@
  0005e	72 0d		 jb	 SHORT $L134066
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L134066:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L133894:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLFirstGradeGroup@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T134065
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLFirstGradeGroup@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLFirstGradeGroup::CTBLFirstGradeGroup
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLFirstGradeGroup@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLFirstGradeGroup@@UAEHXZ PROC NEAR	; CTBLFirstGradeGroup::GetNumCol, COMDAT
; _this$ = ecx

; 1348 : BEGIN_COLUMN(18)

  00000	b8 12 00 00 00	 mov	 eax, 18			; 00000012H
  00005	c3		 ret	 0
?GetNumCol@CTBLFirstGradeGroup@@UAEHXZ ENDP		; CTBLFirstGradeGroup::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLFirstGradeGroup@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLFirstGradeGroup@@UAEFXZ PROC NEAR	; CTBLFirstGradeGroup::BindColumns, COMDAT
; _this$ = ecx

; 1348 : BEGIN_COLUMN(18)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1349 : 	COLUMN_ENTRY(m_bRank)	

  00003	8d 86 2d 0c 00
	00		 lea	 eax, DWORD PTR [esi+3117]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L112162
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 f9 01 00
	00		 jne	 $L112158
$L112162:

; 1350 : 	COLUMN_ENTRY(m_dwCharID)

  00020	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 0a		 je	 SHORT $L112163
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	0f 85 da 01 00
	00		 jne	 $L112158
$L112163:

; 1351 : 	COLUMN_ENTRY_STR(m_szName)

  0003f	6a 33		 push	 51			; 00000033H
  00041	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00047	52		 push	 edx
  00048	6a 03		 push	 3
  0004a	8b ce		 mov	 ecx, esi
  0004c	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  00051	66 85 c0	 test	 ax, ax
  00054	74 0a		 je	 SHORT $L112164
  00056	66 3d 01 00	 cmp	 ax, 1
  0005a	0f 85 b9 01 00
	00		 jne	 $L112158
$L112164:

; 1352 : 	COLUMN_ENTRY(m_dwTotalPoint)

  00060	8d 86 68 0c 00
	00		 lea	 eax, DWORD PTR [esi+3176]
  00066	50		 push	 eax
  00067	6a 04		 push	 4
  00069	8b ce		 mov	 ecx, esi
  0006b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00070	66 85 c0	 test	 ax, ax
  00073	74 0a		 je	 SHORT $L112165
  00075	66 3d 01 00	 cmp	 ax, 1
  00079	0f 85 9a 01 00
	00		 jne	 $L112158
$L112165:

; 1353 : 	COLUMN_ENTRY(m_dwMonthPoint)

  0007f	8d 8e 6c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3180]
  00085	51		 push	 ecx
  00086	6a 05		 push	 5
  00088	8b ce		 mov	 ecx, esi
  0008a	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0008f	66 85 c0	 test	 ax, ax
  00092	74 0a		 je	 SHORT $L112166
  00094	66 3d 01 00	 cmp	 ax, 1
  00098	0f 85 7b 01 00
	00		 jne	 $L112158
$L112166:

; 1354 : 	COLUMN_ENTRY(m_wMonthWin)

  0009e	8d 96 70 0c 00
	00		 lea	 edx, DWORD PTR [esi+3184]
  000a4	52		 push	 edx
  000a5	6a 06		 push	 6
  000a7	8b ce		 mov	 ecx, esi
  000a9	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000ae	66 85 c0	 test	 ax, ax
  000b1	74 0a		 je	 SHORT $L112167
  000b3	66 3d 01 00	 cmp	 ax, 1
  000b7	0f 85 5c 01 00
	00		 jne	 $L112158
$L112167:

; 1355 : 	COLUMN_ENTRY(m_wMonthLose)

  000bd	8d 86 72 0c 00
	00		 lea	 eax, DWORD PTR [esi+3186]
  000c3	50		 push	 eax
  000c4	6a 07		 push	 7
  000c6	8b ce		 mov	 ecx, esi
  000c8	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  000cd	66 85 c0	 test	 ax, ax
  000d0	74 0a		 je	 SHORT $L112168
  000d2	66 3d 01 00	 cmp	 ax, 1
  000d6	0f 85 3d 01 00
	00		 jne	 $L112158
$L112168:

; 1356 : 	COLUMN_ENTRY(m_dwTotalWin)

  000dc	8d 8e 74 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3188]
  000e2	51		 push	 ecx
  000e3	6a 08		 push	 8
  000e5	8b ce		 mov	 ecx, esi
  000e7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  000ec	66 85 c0	 test	 ax, ax
  000ef	74 0a		 je	 SHORT $L112169
  000f1	66 3d 01 00	 cmp	 ax, 1
  000f5	0f 85 1e 01 00
	00		 jne	 $L112158
$L112169:

; 1357 : 	COLUMN_ENTRY(m_dwTotalLose)

  000fb	8d 96 78 0c 00
	00		 lea	 edx, DWORD PTR [esi+3192]
  00101	52		 push	 edx
  00102	6a 09		 push	 9
  00104	8b ce		 mov	 ecx, esi
  00106	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  0010b	66 85 c0	 test	 ax, ax
  0010e	74 0a		 je	 SHORT $L112170
  00110	66 3d 01 00	 cmp	 ax, 1
  00114	0f 85 ff 00 00
	00		 jne	 $L112158
$L112170:

; 1358 : 	COLUMN_ENTRY(m_bCountry)

  0011a	8d 86 7c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3196]
  00120	50		 push	 eax
  00121	6a 0a		 push	 10			; 0000000aH
  00123	8b ce		 mov	 ecx, esi
  00125	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0012a	66 85 c0	 test	 ax, ax
  0012d	74 0a		 je	 SHORT $L112171
  0012f	66 3d 01 00	 cmp	 ax, 1
  00133	0f 85 e0 00 00
	00		 jne	 $L112158
$L112171:

; 1359 : 	COLUMN_ENTRY(m_bLevel)

  00139	8d 8e 7d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3197]
  0013f	51		 push	 ecx
  00140	6a 0b		 push	 11			; 0000000bH
  00142	8b ce		 mov	 ecx, esi
  00144	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00149	66 85 c0	 test	 ax, ax
  0014c	74 0a		 je	 SHORT $L112172
  0014e	66 3d 01 00	 cmp	 ax, 1
  00152	0f 85 c1 00 00
	00		 jne	 $L112158
$L112172:

; 1360 : 	COLUMN_ENTRY(m_bClass)

  00158	8d 96 7e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3198]
  0015e	52		 push	 edx
  0015f	6a 0c		 push	 12			; 0000000cH
  00161	8b ce		 mov	 ecx, esi
  00163	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00168	66 85 c0	 test	 ax, ax
  0016b	74 0a		 je	 SHORT $L112173
  0016d	66 3d 01 00	 cmp	 ax, 1
  00171	0f 85 a2 00 00
	00		 jne	 $L112158
$L112173:

; 1361 : 	COLUMN_ENTRY(m_bRace)

  00177	8d 86 7f 0c 00
	00		 lea	 eax, DWORD PTR [esi+3199]
  0017d	50		 push	 eax
  0017e	6a 0d		 push	 13			; 0000000dH
  00180	8b ce		 mov	 ecx, esi
  00182	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00187	66 85 c0	 test	 ax, ax
  0018a	74 0a		 je	 SHORT $L112174
  0018c	66 3d 01 00	 cmp	 ax, 1
  00190	0f 85 83 00 00
	00		 jne	 $L112158
$L112174:

; 1362 : 	COLUMN_ENTRY(m_bSex)

  00196	8d 8e 80 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3200]
  0019c	51		 push	 ecx
  0019d	6a 0e		 push	 14			; 0000000eH
  0019f	8b ce		 mov	 ecx, esi
  001a1	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001a6	66 85 c0	 test	 ax, ax
  001a9	74 06		 je	 SHORT $L112175
  001ab	66 3d 01 00	 cmp	 ax, 1
  001af	75 68		 jne	 SHORT $L112158
$L112175:

; 1363 : 	COLUMN_ENTRY(m_bHair)

  001b1	8d 96 81 0c 00
	00		 lea	 edx, DWORD PTR [esi+3201]
  001b7	52		 push	 edx
  001b8	6a 0f		 push	 15			; 0000000fH
  001ba	8b ce		 mov	 ecx, esi
  001bc	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001c1	66 85 c0	 test	 ax, ax
  001c4	74 06		 je	 SHORT $L112176
  001c6	66 3d 01 00	 cmp	 ax, 1
  001ca	75 4d		 jne	 SHORT $L112158
$L112176:

; 1364 : 	COLUMN_ENTRY(m_bFace)

  001cc	8d 86 82 0c 00
	00		 lea	 eax, DWORD PTR [esi+3202]
  001d2	50		 push	 eax
  001d3	6a 10		 push	 16			; 00000010H
  001d5	8b ce		 mov	 ecx, esi
  001d7	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  001dc	66 85 c0	 test	 ax, ax
  001df	74 06		 je	 SHORT $L112177
  001e1	66 3d 01 00	 cmp	 ax, 1
  001e5	75 32		 jne	 SHORT $L112158
$L112177:

; 1365 : 	COLUMN_ENTRY_STR(m_szSay)

  001e7	68 01 01 00 00	 push	 257			; 00000101H
  001ec	8d 8e 83 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3203]
  001f2	51		 push	 ecx
  001f3	6a 11		 push	 17			; 00000011H
  001f5	8b ce		 mov	 ecx, esi
  001f7	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
  001fc	66 85 c0	 test	 ax, ax
  001ff	74 06		 je	 SHORT $L112178
  00201	66 3d 01 00	 cmp	 ax, 1
  00205	75 12		 jne	 SHORT $L112158
$L112178:

; 1366 : 	COLUMN_ENTRY_STR(m_szGuild)

  00207	6a 33		 push	 51			; 00000033H
  00209	8d 96 84 0d 00
	00		 lea	 edx, DWORD PTR [esi+3460]
  0020f	52		 push	 edx
  00210	6a 12		 push	 18			; 00000012H
  00212	8b ce		 mov	 ecx, esi
  00214	e8 00 00 00 00	 call	 ?BindColStr@CSqlBase@@QAEFFPADJ@Z ; CSqlBase::BindColStr
$L112158:
  00219	5e		 pop	 esi

; 1367 : END_COL()

  0021a	c3		 ret	 0
?BindColumns@CTBLFirstGradeGroup@@UAEFXZ ENDP		; CTBLFirstGradeGroup::BindColumns
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?GetNumParam@CTBLFirstGradeGroup@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CTBLFirstGradeGroup@@UAEHXZ PROC NEAR	; CTBLFirstGradeGroup::GetNumParam, COMDAT
; _this$ = ecx

; 1369 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CTBLFirstGradeGroup@@UAEHXZ ENDP		; CTBLFirstGradeGroup::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CTBLFirstGradeGroup@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CTBLFirstGradeGroup@@UAEFH@Z PROC NEAR	; CTBLFirstGradeGroup::BindParameters, COMDAT
; _this$ = ecx

; 1370 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bMonth)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L112184
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L112184:

; 1371 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CTBLFirstGradeGroup@@UAEFH@Z ENDP	; CTBLFirstGradeGroup::BindParameters
_TEXT	ENDS
PUBLIC	??1CTBLFirstGradeGroup@@UAE@XZ			; CTBLFirstGradeGroup::~CTBLFirstGradeGroup
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLFirstGradeGroup@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLFirstGradeGroup@@UAEPAXI@Z PROC NEAR		; CTBLFirstGradeGroup::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLFirstGradeGroup@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L134086
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L134086:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLFirstGradeGroup@@UAEPAXI@Z ENDP			; CTBLFirstGradeGroup::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLFirstGradeGroup@@UAE@XZ
_TEXT	SEGMENT
??1CTBLFirstGradeGroup@@UAE@XZ PROC NEAR		; CTBLFirstGradeGroup::~CTBLFirstGradeGroup, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLFirstGradeGroup@@UAE@XZ ENDP			; CTBLFirstGradeGroup::~CTBLFirstGradeGroup
_TEXT	ENDS
PUBLIC	??0CTBLTotalRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTotalRank::CTBLTotalRank
PUBLIC	?GetNumCol@CTBLTotalRank@@UAEHXZ		; CTBLTotalRank::GetNumCol
PUBLIC	?BindColumns@CTBLTotalRank@@UAEFXZ		; CTBLTotalRank::BindColumns
PUBLIC	??_7CTBLTotalRank@@6B@				; CTBLTotalRank::`vftable'
PUBLIC	??_GCTBLTotalRank@@UAEPAXI@Z			; CTBLTotalRank::`scalar deleting destructor'
PUBLIC	??_C@_0DC@BFFFLLBF@SELECT?5dwCharID?0?5dwRank?5FROM?5TLA@ ; `string'
EXTRN	??_ECTBLTotalRank@@UAEPAXI@Z:NEAR		; CTBLTotalRank::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T134269 DD	0ffffffffH
	DD	FLAT:$L134095
$T134266 DD	019930520H
	DD	01H
	DD	FLAT:$T134269
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DC@BFFFLLBF@SELECT?5dwCharID?0?5dwRank?5FROM?5TLA@
CONST	SEGMENT
??_C@_0DC@BFFFLLBF@SELECT?5dwCharID?0?5dwRank?5FROM?5TLA@ DB 'SELECT dwCh'
	DB	'arID, dwRank FROM TLASTTOTALPOINTTABLE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLTotalRank@@6B@
CONST	SEGMENT
??_7CTBLTotalRank@@6B@ DD FLAT:??_ECTBLTotalRank@@UAEPAXI@Z ; CTBLTotalRank::`vftable'
	DD	FLAT:?GetNumCol@CTBLTotalRank@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLTotalRank@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLTotalRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T134094 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLTotalRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLTotalRank::CTBLTotalRank, COMDAT
; _this$ = ecx

; 1380 : DEF_QUERY(CTBLTotalRank, _T("SELECT dwCharID, dwRank FROM TLASTTOTALPOINTTABLE"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLTotalRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DC@BFFFLLBF@SELECT?5dwCharID?0?5dwRank?5FROM?5TLA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T134094[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLTotalRank@@6B@
  0005e	72 0d		 jb	 SHORT $L134267
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L134267:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L134095:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLTotalRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T134266
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLTotalRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLTotalRank::CTBLTotalRank
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLTotalRank@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLTotalRank@@UAEHXZ PROC NEAR		; CTBLTotalRank::GetNumCol, COMDAT
; _this$ = ecx

; 1382 : BEGIN_COLUMN(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumCol@CTBLTotalRank@@UAEHXZ ENDP			; CTBLTotalRank::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLTotalRank@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLTotalRank@@UAEFXZ PROC NEAR		; CTBLTotalRank::BindColumns, COMDAT
; _this$ = ecx

; 1382 : BEGIN_COLUMN(2)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1383 : 	COLUMN_ENTRY(m_dwCharID)	

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L112231
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 10		 jne	 SHORT $L112227
$L112231:

; 1384 : 	COLUMN_ENTRY(m_dwRank)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L112227:
  0002c	5e		 pop	 esi

; 1385 : END_COL()

  0002d	c3		 ret	 0
?BindColumns@CTBLTotalRank@@UAEFXZ ENDP			; CTBLTotalRank::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLTotalRank@@UAE@XZ			; CTBLTotalRank::~CTBLTotalRank
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLTotalRank@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLTotalRank@@UAEPAXI@Z PROC NEAR			; CTBLTotalRank::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLTotalRank@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L134281
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L134281:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLTotalRank@@UAEPAXI@Z ENDP			; CTBLTotalRank::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLTotalRank@@UAE@XZ
_TEXT	SEGMENT
??1CTBLTotalRank@@UAE@XZ PROC NEAR			; CTBLTotalRank::~CTBLTotalRank, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLTotalRank@@UAE@XZ ENDP				; CTBLTotalRank::~CTBLTotalRank
_TEXT	ENDS
PUBLIC	??0CTBLMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonthRank::CTBLMonthRank
PUBLIC	?GetNumCol@CTBLMonthRank@@UAEHXZ		; CTBLMonthRank::GetNumCol
PUBLIC	?BindColumns@CTBLMonthRank@@UAEFXZ		; CTBLMonthRank::BindColumns
PUBLIC	??_7CTBLMonthRank@@6B@				; CTBLMonthRank::`vftable'
PUBLIC	??_GCTBLMonthRank@@UAEPAXI@Z			; CTBLMonthRank::`scalar deleting destructor'
PUBLIC	??_C@_0DC@DAKCEDBE@SELECT?5dwCharID?0?5dwRank?5FROM?5TLA@ ; `string'
EXTRN	??_ECTBLMonthRank@@UAEPAXI@Z:NEAR		; CTBLMonthRank::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T134464 DD	0ffffffffH
	DD	FLAT:$L134290
$T134461 DD	019930520H
	DD	01H
	DD	FLAT:$T134464
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DC@DAKCEDBE@SELECT?5dwCharID?0?5dwRank?5FROM?5TLA@
CONST	SEGMENT
??_C@_0DC@DAKCEDBE@SELECT?5dwCharID?0?5dwRank?5FROM?5TLA@ DB 'SELECT dwCh'
	DB	'arID, dwRank FROM TLASTMONTHPOINTTABLE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CTBLMonthRank@@6B@
CONST	SEGMENT
??_7CTBLMonthRank@@6B@ DD FLAT:??_ECTBLMonthRank@@UAEPAXI@Z ; CTBLMonthRank::`vftable'
	DD	FLAT:?GetNumCol@CTBLMonthRank@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLMonthRank@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T134289 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLMonthRank::CTBLMonthRank, COMDAT
; _this$ = ecx

; 1394 : DEF_QUERY(CTBLMonthRank, _T("SELECT dwCharID, dwRank FROM TLASTMONTHPOINTTABLE"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DC@DAKCEDBE@SELECT?5dwCharID?0?5dwRank?5FROM?5TLA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T134289[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLMonthRank@@6B@
  0005e	72 0d		 jb	 SHORT $L134462
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L134462:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L134290:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T134461
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLMonthRank::CTBLMonthRank
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLMonthRank@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLMonthRank@@UAEHXZ PROC NEAR		; CTBLMonthRank::GetNumCol, COMDAT
; _this$ = ecx

; 1396 : BEGIN_COLUMN(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumCol@CTBLMonthRank@@UAEHXZ ENDP			; CTBLMonthRank::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLMonthRank@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLMonthRank@@UAEFXZ PROC NEAR		; CTBLMonthRank::BindColumns, COMDAT
; _this$ = ecx

; 1396 : BEGIN_COLUMN(2)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1397 : 	COLUMN_ENTRY(m_dwCharID)	

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L112274
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 10		 jne	 SHORT $L112270
$L112274:

; 1398 : 	COLUMN_ENTRY(m_dwRank)

  0001c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L112270:
  0002c	5e		 pop	 esi

; 1399 : END_COL()

  0002d	c3		 ret	 0
?BindColumns@CTBLMonthRank@@UAEFXZ ENDP			; CTBLMonthRank::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLMonthRank@@UAE@XZ			; CTBLMonthRank::~CTBLMonthRank
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLMonthRank@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLMonthRank@@UAEPAXI@Z PROC NEAR			; CTBLMonthRank::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLMonthRank@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L134476
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L134476:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLMonthRank@@UAEPAXI@Z ENDP			; CTBLMonthRank::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLMonthRank@@UAE@XZ
_TEXT	SEGMENT
??1CTBLMonthRank@@UAE@XZ PROC NEAR			; CTBLMonthRank::~CTBLMonthRank, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLMonthRank@@UAE@XZ ENDP				; CTBLMonthRank::~CTBLMonthRank
_TEXT	ENDS
PUBLIC	??0CTBLRPSGame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLRPSGame::CTBLRPSGame
PUBLIC	?GetNumCol@CTBLRPSGame@@UAEHXZ			; CTBLRPSGame::GetNumCol
PUBLIC	?BindColumns@CTBLRPSGame@@UAEFXZ		; CTBLRPSGame::BindColumns
PUBLIC	??_7CTBLRPSGame@@6B@				; CTBLRPSGame::`vftable'
PUBLIC	??_GCTBLRPSGame@@UAEPAXI@Z			; CTBLRPSGame::`scalar deleting destructor'
PUBLIC	??_C@_0GM@JFEMLDKE@SELECT?5?7bType?0?5?7bWinCount?0?5?7bPro@ ; `string'
EXTRN	??_ECTBLRPSGame@@UAEPAXI@Z:NEAR			; CTBLRPSGame::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T134659 DD	0ffffffffH
	DD	FLAT:$L134485
$T134656 DD	019930520H
	DD	01H
	DD	FLAT:$T134659
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0GM@JFEMLDKE@SELECT?5?7bType?0?5?7bWinCount?0?5?7bPro@
CONST	SEGMENT
??_C@_0GM@JFEMLDKE@SELECT?5?7bType?0?5?7bWinCount?0?5?7bPro@ DB 'SELECT ', 09H
	DB	'bType, ', 09H, 'bWinCount, ', 09H, 'bProb_Win, ', 09H, 'bProb'
	DB	'_Draw, ', 09H, 'bProb_Lose, ', 09H, 'wWinKeep, ', 09H, 'wWinP'
	DB	'eriod ', 09H, 'FROM TRPSGAMECHART', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLRPSGame@@6B@
CONST	SEGMENT
??_7CTBLRPSGame@@6B@ DD FLAT:??_ECTBLRPSGame@@UAEPAXI@Z	; CTBLRPSGame::`vftable'
	DD	FLAT:?GetNumCol@CTBLRPSGame@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLRPSGame@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLRPSGame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T134484 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLRPSGame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLRPSGame::CTBLRPSGame, COMDAT
; _this$ = ecx

; 1419 : 	FROM TRPSGAMECHART"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLRPSGame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0GM@JFEMLDKE@SELECT?5?7bType?0?5?7bWinCount?0?5?7bPro@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T134484[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLRPSGame@@6B@
  0005e	72 0d		 jb	 SHORT $L134657
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L134657:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L134485:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLRPSGame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T134656
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLRPSGame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLRPSGame::CTBLRPSGame
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLRPSGame@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLRPSGame@@UAEHXZ PROC NEAR		; CTBLRPSGame::GetNumCol, COMDAT
; _this$ = ecx

; 1421 : BEGIN_COLUMN(7)

  00000	b8 07 00 00 00	 mov	 eax, 7
  00005	c3		 ret	 0
?GetNumCol@CTBLRPSGame@@UAEHXZ ENDP			; CTBLRPSGame::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLRPSGame@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLRPSGame@@UAEFXZ PROC NEAR		; CTBLRPSGame::BindColumns, COMDAT
; _this$ = ecx

; 1421 : BEGIN_COLUMN(7)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1422 : 	COLUMN_ENTRY(m_bType)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 0a		 je	 SHORT $L112320
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	0f 85 97 00 00
	00		 jne	 $L112316
$L112320:

; 1423 : 	COLUMN_ENTRY(m_bWinCount)

  00020	8d 8e 2d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3117]
  00026	51		 push	 ecx
  00027	6a 02		 push	 2
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00030	66 85 c0	 test	 ax, ax
  00033	74 06		 je	 SHORT $L112321
  00035	66 3d 01 00	 cmp	 ax, 1
  00039	75 7c		 jne	 SHORT $L112316
$L112321:

; 1424 : 	COLUMN_ENTRY(m_bProb[0])

  0003b	8d 96 32 0c 00
	00		 lea	 edx, DWORD PTR [esi+3122]
  00041	52		 push	 edx
  00042	6a 03		 push	 3
  00044	8b ce		 mov	 ecx, esi
  00046	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0004b	66 85 c0	 test	 ax, ax
  0004e	74 06		 je	 SHORT $L112322
  00050	66 3d 01 00	 cmp	 ax, 1
  00054	75 61		 jne	 SHORT $L112316
$L112322:

; 1425 : 	COLUMN_ENTRY(m_bProb[1])

  00056	8d 86 33 0c 00
	00		 lea	 eax, DWORD PTR [esi+3123]
  0005c	50		 push	 eax
  0005d	6a 04		 push	 4
  0005f	8b ce		 mov	 ecx, esi
  00061	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00066	66 85 c0	 test	 ax, ax
  00069	74 06		 je	 SHORT $L112323
  0006b	66 3d 01 00	 cmp	 ax, 1
  0006f	75 46		 jne	 SHORT $L112316
$L112323:

; 1426 : 	COLUMN_ENTRY(m_bProb[2])

  00071	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  00077	51		 push	 ecx
  00078	6a 05		 push	 5
  0007a	8b ce		 mov	 ecx, esi
  0007c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00081	66 85 c0	 test	 ax, ax
  00084	74 06		 je	 SHORT $L112324
  00086	66 3d 01 00	 cmp	 ax, 1
  0008a	75 2b		 jne	 SHORT $L112316
$L112324:

; 1427 : 	COLUMN_ENTRY(m_wWinKeep)

  0008c	8d 96 2e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3118]
  00092	52		 push	 edx
  00093	6a 06		 push	 6
  00095	8b ce		 mov	 ecx, esi
  00097	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
  0009c	66 85 c0	 test	 ax, ax
  0009f	74 06		 je	 SHORT $L112325
  000a1	66 3d 01 00	 cmp	 ax, 1
  000a5	75 10		 jne	 SHORT $L112316
$L112325:

; 1428 : 	COLUMN_ENTRY(m_wWinPeriod)

  000a7	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  000ad	50		 push	 eax
  000ae	6a 07		 push	 7
  000b0	8b ce		 mov	 ecx, esi
  000b2	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAG@Z ; CSqlBase::BindCol
$L112316:
  000b7	5e		 pop	 esi

; 1429 : END_COL()

  000b8	c3		 ret	 0
?BindColumns@CTBLRPSGame@@UAEFXZ ENDP			; CTBLRPSGame::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLRPSGame@@UAE@XZ				; CTBLRPSGame::~CTBLRPSGame
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLRPSGame@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLRPSGame@@UAEPAXI@Z PROC NEAR			; CTBLRPSGame::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLRPSGame@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L134671
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L134671:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLRPSGame@@UAEPAXI@Z ENDP				; CTBLRPSGame::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLRPSGame@@UAE@XZ
_TEXT	SEGMENT
??1CTBLRPSGame@@UAE@XZ PROC NEAR			; CTBLRPSGame::~CTBLRPSGame, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLRPSGame@@UAE@XZ ENDP				; CTBLRPSGame::~CTBLRPSGame
_TEXT	ENDS
PUBLIC	??0CTBLRPSGameRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLRPSGameRecord::CTBLRPSGameRecord
PUBLIC	?GetNumCol@CTBLRPSGameRecord@@UAEHXZ		; CTBLRPSGameRecord::GetNumCol
PUBLIC	?BindColumns@CTBLRPSGameRecord@@UAEFXZ		; CTBLRPSGameRecord::BindColumns
PUBLIC	??_7CTBLRPSGameRecord@@6B@			; CTBLRPSGameRecord::`vftable'
PUBLIC	??_GCTBLRPSGameRecord@@UAEPAXI@Z		; CTBLRPSGameRecord::`scalar deleting destructor'
PUBLIC	??_C@_0EK@KICHMDLI@SELECT?5?7bType?0?5?7bWinCount?0?5?7dWin@ ; `string'
EXTRN	??_ECTBLRPSGameRecord@@UAEPAXI@Z:NEAR		; CTBLRPSGameRecord::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T134854 DD	0ffffffffH
	DD	FLAT:$L134680
$T134851 DD	019930520H
	DD	01H
	DD	FLAT:$T134854
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EK@KICHMDLI@SELECT?5?7bType?0?5?7bWinCount?0?5?7dWin@
CONST	SEGMENT
??_C@_0EK@KICHMDLI@SELECT?5?7bType?0?5?7bWinCount?0?5?7dWin@ DB 'SELECT ', 09H
	DB	'bType, ', 09H, 'bWinCount, ', 09H, 'dWinDate, ', 09H, 'dwChar'
	DB	'ID ', 09H, 'FROM TRPSGAMERECORDTABLE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CTBLRPSGameRecord@@6B@
CONST	SEGMENT
??_7CTBLRPSGameRecord@@6B@ DD FLAT:??_ECTBLRPSGameRecord@@UAEPAXI@Z ; CTBLRPSGameRecord::`vftable'
	DD	FLAT:?GetNumCol@CTBLRPSGameRecord@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CTBLRPSGameRecord@@UAEFXZ
	DD	FLAT:?BindParameters@CSqlQuery@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CTBLRPSGameRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T134679 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CTBLRPSGameRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CTBLRPSGameRecord::CTBLRPSGameRecord, COMDAT
; _this$ = ecx

; 1445 : 	FROM TRPSGAMERECORDTABLE"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CTBLRPSGameRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EK@KICHMDLI@SELECT?5?7bType?0?5?7bWinCount?0?5?7dWin@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T134679[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CTBLRPSGameRecord@@6B@
  0005e	72 0d		 jb	 SHORT $L134852
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L134852:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L134680:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CTBLRPSGameRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T134851
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CTBLRPSGameRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CTBLRPSGameRecord::CTBLRPSGameRecord
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CTBLRPSGameRecord@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CTBLRPSGameRecord@@UAEHXZ PROC NEAR		; CTBLRPSGameRecord::GetNumCol, COMDAT
; _this$ = ecx

; 1447 : BEGIN_COLUMN(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumCol@CTBLRPSGameRecord@@UAEHXZ ENDP		; CTBLRPSGameRecord::GetNumCol
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindColumns@CTBLRPSGameRecord@@UAEFXZ
_TEXT	SEGMENT
?BindColumns@CTBLRPSGameRecord@@UAEFXZ PROC NEAR	; CTBLRPSGameRecord::BindColumns, COMDAT
; _this$ = ecx

; 1447 : BEGIN_COLUMN(4)

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 1448 : 	COLUMN_ENTRY(m_bType)

  00003	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  00009	50		 push	 eax
  0000a	6a 01		 push	 1
  0000c	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  00011	66 85 c0	 test	 ax, ax
  00014	74 06		 je	 SHORT $L112370
  00016	66 3d 01 00	 cmp	 ax, 1
  0001a	75 46		 jne	 SHORT $L112366
$L112370:

; 1449 : 	COLUMN_ENTRY(m_bWinCount)

  0001c	8d 8e 2d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3117]
  00022	51		 push	 ecx
  00023	6a 02		 push	 2
  00025	8b ce		 mov	 ecx, esi
  00027	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAE@Z ; CSqlBase::BindCol
  0002c	66 85 c0	 test	 ax, ax
  0002f	74 06		 je	 SHORT $L112371
  00031	66 3d 01 00	 cmp	 ax, 1
  00035	75 2b		 jne	 SHORT $L112366
$L112371:

; 1450 : 	COLUMN_ENTRY(m_dWinDate)

  00037	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  0003d	52		 push	 edx
  0003e	6a 03		 push	 3
  00040	8b ce		 mov	 ecx, esi
  00042	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
  00047	66 85 c0	 test	 ax, ax
  0004a	74 06		 je	 SHORT $L112372
  0004c	66 3d 01 00	 cmp	 ax, 1
  00050	75 10		 jne	 SHORT $L112366
$L112372:

; 1451 : 	COLUMN_ENTRY(m_dwCharID)

  00052	8d 86 40 0c 00
	00		 lea	 eax, DWORD PTR [esi+3136]
  00058	50		 push	 eax
  00059	6a 04		 push	 4
  0005b	8b ce		 mov	 ecx, esi
  0005d	e8 00 00 00 00	 call	 ?BindCol@CSqlBase@@QAEFFPAK@Z ; CSqlBase::BindCol
$L112366:
  00062	5e		 pop	 esi

; 1452 : END_COL()

  00063	c3		 ret	 0
?BindColumns@CTBLRPSGameRecord@@UAEFXZ ENDP		; CTBLRPSGameRecord::BindColumns
_TEXT	ENDS
PUBLIC	??1CTBLRPSGameRecord@@UAE@XZ			; CTBLRPSGameRecord::~CTBLRPSGameRecord
; Function compile flags: /Ogty
;	COMDAT ??_GCTBLRPSGameRecord@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCTBLRPSGameRecord@@UAEPAXI@Z PROC NEAR		; CTBLRPSGameRecord::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CTBLRPSGameRecord@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L134866
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L134866:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCTBLRPSGameRecord@@UAEPAXI@Z ENDP			; CTBLRPSGameRecord::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CTBLRPSGameRecord@@UAE@XZ
_TEXT	SEGMENT
??1CTBLRPSGameRecord@@UAE@XZ PROC NEAR			; CTBLRPSGameRecord::~CTBLRPSGameRecord, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CTBLRPSGameRecord@@UAE@XZ ENDP			; CTBLRPSGameRecord::~CTBLRPSGameRecord
_TEXT	ENDS
PUBLIC	??0CSPGuildUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildUpdate::CSPGuildUpdate
PUBLIC	?GetNumParam@CSPGuildUpdate@@UAEHXZ		; CSPGuildUpdate::GetNumParam
PUBLIC	?BindParameters@CSPGuildUpdate@@UAEFH@Z		; CSPGuildUpdate::BindParameters
PUBLIC	??_7CSPGuildUpdate@@6B@				; CSPGuildUpdate::`vftable'
PUBLIC	??_GCSPGuildUpdate@@UAEPAXI@Z			; CSPGuildUpdate::`scalar deleting destructor'
PUBLIC	??_C@_0CN@NGFJGNFN@?$HL?5Call?5TGuildUpdate?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPGuildUpdate@@UAEPAXI@Z:NEAR		; CSPGuildUpdate::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T135049 DD	0ffffffffH
	DD	FLAT:$L134875
$T135046 DD	019930520H
	DD	01H
	DD	FLAT:$T135049
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CN@NGFJGNFN@?$HL?5Call?5TGuildUpdate?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0CN@NGFJGNFN@?$HL?5Call?5TGuildUpdate?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@ DB '{'
	DB	' Call TGuildUpdate(?,?,?,?,?,?,?,?,?,?,?) }', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildUpdate@@6B@
CONST	SEGMENT
??_7CSPGuildUpdate@@6B@ DD FLAT:??_ECSPGuildUpdate@@UAEPAXI@Z ; CSPGuildUpdate::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildUpdate@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildUpdate@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T134874 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildUpdate::CSPGuildUpdate, COMDAT
; _this$ = ecx

; 1509 : DEF_QUERY(CSPGuildUpdate, _T("{ Call TGuildUpdate(?,?,?,?,?,?,?,?,?,?,?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CN@NGFJGNFN@?$HL?5Call?5TGuildUpdate?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T134874[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildUpdate@@6B@
  0005e	72 0d		 jb	 SHORT $L135047
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L135047:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L134875:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T135046
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildUpdate::CSPGuildUpdate
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildUpdate@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildUpdate@@UAEHXZ PROC NEAR		; CSPGuildUpdate::GetNumParam, COMDAT
; _this$ = ecx

; 1511 : BEGIN_PARAM(11)

  00000	b8 0b 00 00 00	 mov	 eax, 11			; 0000000bH
  00005	c3		 ret	 0
?GetNumParam@CSPGuildUpdate@@UAEHXZ ENDP		; CSPGuildUpdate::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildUpdate@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildUpdate@@UAEFH@Z PROC NEAR	; CSPGuildUpdate::BindParameters, COMDAT
; _this$ = ecx

; 1511 : BEGIN_PARAM(11)

  00000	55		 push	 ebp
  00001	56		 push	 esi
  00002	57		 push	 edi

; 1512 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 ed		 xor	 ebp, ebp
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fd		 cmp	 edi, ebp
  0000f	89 ae 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebp
  00015	75 1f		 jne	 SHORT $L135058
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c5	 cmp	 ax, bp
  0002a	74 0a		 je	 SHORT $L135058
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 a5 01 00
	00		 jne	 $L112511
$L135058:

; 1513 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bFame)

  00036	3b fd		 cmp	 edi, ebp
  00038	89 ae 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebp
  0003e	75 12		 jne	 SHORT $L135060
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135060:
  00052	66 3b c5	 cmp	 ax, bp
  00055	74 0a		 je	 SHORT $L135061
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 7a 01 00
	00		 jne	 $L112511
$L135061:

; 1514 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bGPoint)

  00061	3b fd		 cmp	 edi, ebp
  00063	89 ae 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebp
  00069	75 12		 jne	 SHORT $L135062
  0006b	8d 96 31 0c 00
	00		 lea	 edx, DWORD PTR [esi+3121]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135062:
  0007d	66 3b c5	 cmp	 ax, bp
  00080	74 0a		 je	 SHORT $L135063
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 4f 01 00
	00		 jne	 $L112511
$L135063:

; 1515 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bLevel)

  0008c	3b fd		 cmp	 edi, ebp
  0008e	89 ae 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebp
  00094	75 12		 jne	 SHORT $L135064
  00096	8d 86 32 0c 00
	00		 lea	 eax, DWORD PTR [esi+3122]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135064:
  000a8	66 3b c5	 cmp	 ax, bp
  000ab	74 0a		 je	 SHORT $L135065
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 24 01 00
	00		 jne	 $L112511
$L135065:

; 1516 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bStatus)

  000b7	3b fd		 cmp	 edi, ebp
  000b9	89 ae 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebp
  000bf	75 12		 jne	 SHORT $L135066
  000c1	8d 8e 33 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3123]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 01		 push	 1
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L135066:
  000d3	66 3b c5	 cmp	 ax, bp
  000d6	74 0a		 je	 SHORT $L135067
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 f9 00 00
	00		 jne	 $L112511
$L135067:

; 1517 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwChief)

  000e2	3b fd		 cmp	 edi, ebp
  000e4	89 ae 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebp
  000ea	75 12		 jne	 SHORT $L135068
  000ec	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 01		 push	 1
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135068:
  000fe	66 3b c5	 cmp	 ax, bp
  00101	74 0a		 je	 SHORT $L135069
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	0f 85 ce 00 00
	00		 jne	 $L112511
$L135069:

; 1518 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGI)

  0010d	3b fd		 cmp	 edi, ebp
  0010f	89 ae 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebp
  00115	75 12		 jne	 SHORT $L135070
  00117	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 01		 push	 1
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135070:
  00129	66 3b c5	 cmp	 ax, bp
  0012c	74 0a		 je	 SHORT $L135071
  0012e	66 3d 01 00	 cmp	 ax, 1
  00132	0f 85 a3 00 00
	00		 jne	 $L112511
$L135071:

; 1519 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwExp)

  00138	3b fd		 cmp	 edi, ebp
  0013a	89 ae 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebp
  00140	75 12		 jne	 SHORT $L135072
  00142	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  00148	51		 push	 ecx
  00149	6a 08		 push	 8
  0014b	6a 01		 push	 1
  0014d	8b ce		 mov	 ecx, esi
  0014f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135072:
  00154	66 3b c5	 cmp	 ax, bp
  00157	74 06		 je	 SHORT $L135073
  00159	66 3d 01 00	 cmp	 ax, 1
  0015d	75 7c		 jne	 SHORT $L112511
$L135073:

; 1520 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwTime)

  0015f	3b fd		 cmp	 edi, ebp
  00161	89 ae 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebp
  00167	75 12		 jne	 SHORT $L135074
  00169	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  0016f	52		 push	 edx
  00170	6a 09		 push	 9
  00172	6a 01		 push	 1
  00174	8b ce		 mov	 ecx, esi
  00176	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L135074:
  0017b	66 3b c5	 cmp	 ax, bp
  0017e	74 06		 je	 SHORT $L112532
  00180	66 3d 01 00	 cmp	 ax, 1
  00184	75 55		 jne	 SHORT $L112511
$L112532:

; 1521 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szAllience)

  00186	3b fd		 cmp	 edi, ebp
  00188	c7 86 34 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2100], -3 ; fffffffdH
  00192	75 17		 jne	 SHORT $L112533
  00194	68 00 04 00 00	 push	 1024			; 00000400H
  00199	8d 86 44 0c 00
	00		 lea	 eax, DWORD PTR [esi+3140]
  0019f	50		 push	 eax
  001a0	6a 0a		 push	 10			; 0000000aH
  001a2	6a 01		 push	 1
  001a4	8b ce		 mov	 ecx, esi
  001a6	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L112533:
  001ab	66 3b c5	 cmp	 ax, bp
  001ae	74 06		 je	 SHORT $L135059
  001b0	66 3d 01 00	 cmp	 ax, 1
  001b4	75 25		 jne	 SHORT $L112511
$L135059:

; 1522 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szEnemy)

  001b6	3b fd		 cmp	 edi, ebp
  001b8	c7 86 38 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2104], -3 ; fffffffdH
  001c2	75 17		 jne	 SHORT $L112511
  001c4	68 00 04 00 00	 push	 1024			; 00000400H
  001c9	8d 8e 44 10 00
	00		 lea	 ecx, DWORD PTR [esi+4164]
  001cf	51		 push	 ecx
  001d0	6a 0b		 push	 11			; 0000000bH
  001d2	6a 01		 push	 1
  001d4	8b ce		 mov	 ecx, esi
  001d6	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L112511:
  001db	5f		 pop	 edi
  001dc	5e		 pop	 esi
  001dd	5d		 pop	 ebp

; 1523 : END_PARAM()

  001de	c2 04 00	 ret	 4
?BindParameters@CSPGuildUpdate@@UAEFH@Z ENDP		; CSPGuildUpdate::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildUpdate@@UAE@XZ			; CSPGuildUpdate::~CSPGuildUpdate
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildUpdate@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildUpdate@@UAEPAXI@Z PROC NEAR			; CSPGuildUpdate::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildUpdate@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L135078
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L135078:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildUpdate@@UAEPAXI@Z ENDP			; CSPGuildUpdate::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildUpdate@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildUpdate@@UAE@XZ PROC NEAR			; CSPGuildUpdate::~CSPGuildUpdate, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildUpdate@@UAE@XZ ENDP				; CSPGuildUpdate::~CSPGuildUpdate
_TEXT	ENDS
PUBLIC	??0CSPGuildEstablish@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildEstablish::CSPGuildEstablish
PUBLIC	?GetNumParam@CSPGuildEstablish@@UAEHXZ		; CSPGuildEstablish::GetNumParam
PUBLIC	?BindParameters@CSPGuildEstablish@@UAEFH@Z	; CSPGuildEstablish::BindParameters
PUBLIC	??_7CSPGuildEstablish@@6B@			; CSPGuildEstablish::`vftable'
PUBLIC	??_GCSPGuildEstablish@@UAEPAXI@Z		; CSPGuildEstablish::`scalar deleting destructor'
PUBLIC	??_C@_0CG@IKNFCHGE@?$HL?5?$DP?5?$DN?5Call?5TGuildEstablish?$CI?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPGuildEstablish@@UAEPAXI@Z:NEAR		; CSPGuildEstablish::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T135261 DD	0ffffffffH
	DD	FLAT:$L135087
$T135258 DD	019930520H
	DD	01H
	DD	FLAT:$T135261
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CG@IKNFCHGE@?$HL?5?$DP?5?$DN?5Call?5TGuildEstablish?$CI?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CG@IKNFCHGE@?$HL?5?$DP?5?$DN?5Call?5TGuildEstablish?$CI?$DP?0?$DP?0?$DP@ DB '{'
	DB	' ? = Call TGuildEstablish(?,?,?,?) }', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildEstablish@@6B@
CONST	SEGMENT
??_7CSPGuildEstablish@@6B@ DD FLAT:??_ECSPGuildEstablish@@UAEPAXI@Z ; CSPGuildEstablish::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildEstablish@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildEstablish@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildEstablish@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T135086 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildEstablish@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildEstablish::CSPGuildEstablish, COMDAT
; _this$ = ecx

; 1535 : DEF_QUERY(CSPGuildEstablish, _T("{ ? = Call TGuildEstablish(?,?,?,?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildEstablish@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CG@IKNFCHGE@?$HL?5?$DP?5?$DN?5Call?5TGuildEstablish?$CI?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T135086[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildEstablish@@6B@
  0005e	72 0d		 jb	 SHORT $L135259
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L135259:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L135087:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildEstablish@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T135258
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildEstablish@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildEstablish::CSPGuildEstablish
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildEstablish@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildEstablish@@UAEHXZ PROC NEAR	; CSPGuildEstablish::GetNumParam, COMDAT
; _this$ = ecx

; 1537 : BEGIN_PARAM(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumParam@CSPGuildEstablish@@UAEHXZ ENDP		; CSPGuildEstablish::GetNumParam
_TEXT	ENDS
EXTRN	?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z:NEAR ; CSqlBase::BindParam
EXTRN	?BindParam@CSqlBase@@QAEFFFPAH@Z:NEAR		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParameters@CSPGuildEstablish@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildEstablish@@UAEFH@Z PROC NEAR	; CSPGuildEstablish::BindParameters, COMDAT
; _this$ = ecx

; 1537 : BEGIN_PARAM(5)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 1538 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L112583
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L112583
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 97 00 00
	00		 jne	 $L112578
$L112583:

; 1539 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwGuildID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L112584
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 04		 push	 4
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L112584:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 06		 je	 SHORT $L112585
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	75 70		 jne	 SHORT $L112578
$L112585:

; 1540 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szName)

  0005d	3b fb		 cmp	 edi, ebx
  0005f	c7 86 18 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2072], -3 ; fffffffdH
  00069	75 14		 jne	 SHORT $L112586
  0006b	6a 33		 push	 51			; 00000033H
  0006d	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00073	52		 push	 edx
  00074	6a 03		 push	 3
  00076	6a 01		 push	 1
  00078	8b ce		 mov	 ecx, esi
  0007a	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L112586:
  0007f	66 3b c3	 cmp	 ax, bx
  00082	74 06		 je	 SHORT $L112587
  00084	66 3d 01 00	 cmp	 ax, 1
  00088	75 43		 jne	 SHORT $L112578
$L112587:

; 1541 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwChiefID)

  0008a	3b fb		 cmp	 edi, ebx
  0008c	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00092	75 12		 jne	 SHORT $L112588
  00094	8d 86 68 0c 00
	00		 lea	 eax, DWORD PTR [esi+3176]
  0009a	50		 push	 eax
  0009b	6a 04		 push	 4
  0009d	6a 01		 push	 1
  0009f	8b ce		 mov	 ecx, esi
  000a1	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L112588:
  000a6	66 3b c3	 cmp	 ax, bx
  000a9	74 06		 je	 SHORT $L112589
  000ab	66 3d 01 00	 cmp	 ax, 1
  000af	75 1c		 jne	 SHORT $L112578
$L112589:

; 1542 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_timeEstablish)

  000b1	3b fb		 cmp	 edi, ebx
  000b3	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b9	75 12		 jne	 SHORT $L112578
  000bb	8d 8e 6c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3180]
  000c1	51		 push	 ecx
  000c2	6a 05		 push	 5
  000c4	6a 01		 push	 1
  000c6	8b ce		 mov	 ecx, esi
  000c8	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L112578:
  000cd	5f		 pop	 edi
  000ce	5e		 pop	 esi
  000cf	5b		 pop	 ebx

; 1543 : END_PARAM();

  000d0	c2 04 00	 ret	 4
?BindParameters@CSPGuildEstablish@@UAEFH@Z ENDP		; CSPGuildEstablish::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildEstablish@@UAE@XZ			; CSPGuildEstablish::~CSPGuildEstablish
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildEstablish@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildEstablish@@UAEPAXI@Z PROC NEAR		; CSPGuildEstablish::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildEstablish@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L135273
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L135273:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildEstablish@@UAEPAXI@Z ENDP			; CSPGuildEstablish::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildEstablish@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildEstablish@@UAE@XZ PROC NEAR			; CSPGuildEstablish::~CSPGuildEstablish, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildEstablish@@UAE@XZ ENDP			; CSPGuildEstablish::~CSPGuildEstablish
_TEXT	ENDS
PUBLIC	??0CSPGuildDisorg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildDisorg::CSPGuildDisorg
PUBLIC	?GetNumParam@CSPGuildDisorg@@UAEHXZ		; CSPGuildDisorg::GetNumParam
PUBLIC	?BindParameters@CSPGuildDisorg@@UAEFH@Z		; CSPGuildDisorg::BindParameters
PUBLIC	??_7CSPGuildDisorg@@6B@				; CSPGuildDisorg::`vftable'
PUBLIC	??_GCSPGuildDisorg@@UAEPAXI@Z			; CSPGuildDisorg::`scalar deleting destructor'
PUBLIC	??_C@_0BN@FGHCPNPE@?$HL?5Call?5TGuildDisorg?$CI?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@ ; `string'
EXTRN	??_ECSPGuildDisorg@@UAEPAXI@Z:NEAR		; CSPGuildDisorg::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T135456 DD	0ffffffffH
	DD	FLAT:$L135282
$T135453 DD	019930520H
	DD	01H
	DD	FLAT:$T135456
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BN@FGHCPNPE@?$HL?5Call?5TGuildDisorg?$CI?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT
??_C@_0BN@FGHCPNPE@?$HL?5Call?5TGuildDisorg?$CI?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@ DB '{'
	DB	' Call TGuildDisorg(?,?,?) }', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildDisorg@@6B@
CONST	SEGMENT
??_7CSPGuildDisorg@@6B@ DD FLAT:??_ECSPGuildDisorg@@UAEPAXI@Z ; CSPGuildDisorg::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildDisorg@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildDisorg@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildDisorg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T135281 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildDisorg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildDisorg::CSPGuildDisorg, COMDAT
; _this$ = ecx

; 1553 : DEF_QUERY(CSPGuildDisorg, _T("{ Call TGuildDisorg(?,?,?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildDisorg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BN@FGHCPNPE@?$HL?5Call?5TGuildDisorg?$CI?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T135281[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildDisorg@@6B@
  0005e	72 0d		 jb	 SHORT $L135454
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L135454:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L135282:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildDisorg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T135453
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildDisorg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildDisorg::CSPGuildDisorg
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildDisorg@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildDisorg@@UAEHXZ PROC NEAR		; CSPGuildDisorg::GetNumParam, COMDAT
; _this$ = ecx

; 1555 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPGuildDisorg@@UAEHXZ ENDP		; CSPGuildDisorg::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildDisorg@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildDisorg@@UAEFH@Z PROC NEAR	; CSPGuildDisorg::BindParameters, COMDAT
; _this$ = ecx

; 1555 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1556 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L112636
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L112636
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L112631
$L112636:

; 1557 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bDisorg)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L112637
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L112637:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L112638
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L112631
$L112638:

; 1558 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwTime)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L112631
  00068	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L112631:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 1559 : END_PARAM();

  0007c	c2 04 00	 ret	 4
?BindParameters@CSPGuildDisorg@@UAEFH@Z ENDP		; CSPGuildDisorg::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildDisorg@@UAE@XZ			; CSPGuildDisorg::~CSPGuildDisorg
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildDisorg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildDisorg@@UAEPAXI@Z PROC NEAR			; CSPGuildDisorg::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildDisorg@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L135468
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L135468:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildDisorg@@UAEPAXI@Z ENDP			; CSPGuildDisorg::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildDisorg@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildDisorg@@UAE@XZ PROC NEAR			; CSPGuildDisorg::~CSPGuildDisorg, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildDisorg@@UAE@XZ ENDP				; CSPGuildDisorg::~CSPGuildDisorg
_TEXT	ENDS
PUBLIC	??0CSPGuildDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildDelete::CSPGuildDelete
PUBLIC	?GetNumParam@CSPGuildDelete@@UAEHXZ		; CSPGuildDelete::GetNumParam
PUBLIC	?BindParameters@CSPGuildDelete@@UAEFH@Z		; CSPGuildDelete::BindParameters
PUBLIC	??_7CSPGuildDelete@@6B@				; CSPGuildDelete::`vftable'
PUBLIC	??_GCSPGuildDelete@@UAEPAXI@Z			; CSPGuildDelete::`scalar deleting destructor'
PUBLIC	??_C@_0BN@MMKAKDIM@?$HL?5?$DP?5?$DN?5Call?5TGuildDelete?$CI?$DP?$CJ?5?$HN?$AA@ ; `string'
EXTRN	??_ECSPGuildDelete@@UAEPAXI@Z:NEAR		; CSPGuildDelete::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T135651 DD	0ffffffffH
	DD	FLAT:$L135477
$T135648 DD	019930520H
	DD	01H
	DD	FLAT:$T135651
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BN@MMKAKDIM@?$HL?5?$DP?5?$DN?5Call?5TGuildDelete?$CI?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT
??_C@_0BN@MMKAKDIM@?$HL?5?$DP?5?$DN?5Call?5TGuildDelete?$CI?$DP?$CJ?5?$HN?$AA@ DB '{'
	DB	' ? = Call TGuildDelete(?) }', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildDelete@@6B@
CONST	SEGMENT
??_7CSPGuildDelete@@6B@ DD FLAT:??_ECSPGuildDelete@@UAEPAXI@Z ; CSPGuildDelete::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildDelete@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildDelete@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T135476 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildDelete::CSPGuildDelete, COMDAT
; _this$ = ecx

; 1568 : DEF_QUERY(CSPGuildDelete, _T("{ ? = Call TGuildDelete(?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BN@MMKAKDIM@?$HL?5?$DP?5?$DN?5Call?5TGuildDelete?$CI?$DP?$CJ?5?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T135476[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildDelete@@6B@
  0005e	72 0d		 jb	 SHORT $L135649
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L135649:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L135477:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T135648
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildDelete::CSPGuildDelete
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildDelete@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildDelete@@UAEHXZ PROC NEAR		; CSPGuildDelete::GetNumParam, COMDAT
; _this$ = ecx

; 1570 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPGuildDelete@@UAEHXZ ENDP		; CSPGuildDelete::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildDelete@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildDelete@@UAEFH@Z PROC NEAR	; CSPGuildDelete::BindParameters, COMDAT
; _this$ = ecx

; 1570 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1571 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_nRET)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L112684
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 04		 push	 4
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L112684
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L112679
$L112684:

; 1572 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L112679
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L112679:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1573 : END_PARAM();

  00051	c2 04 00	 ret	 4
?BindParameters@CSPGuildDelete@@UAEFH@Z ENDP		; CSPGuildDelete::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildDelete@@UAE@XZ			; CSPGuildDelete::~CSPGuildDelete
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildDelete@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildDelete@@UAEPAXI@Z PROC NEAR			; CSPGuildDelete::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildDelete@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L135663
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L135663:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildDelete@@UAEPAXI@Z ENDP			; CSPGuildDelete::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildDelete@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildDelete@@UAE@XZ PROC NEAR			; CSPGuildDelete::~CSPGuildDelete, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildDelete@@UAE@XZ ENDP				; CSPGuildDelete::~CSPGuildDelete
_TEXT	ENDS
PUBLIC	??0CSPGuildMemberAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildMemberAdd::CSPGuildMemberAdd
PUBLIC	?GetNumParam@CSPGuildMemberAdd@@UAEHXZ		; CSPGuildMemberAdd::GetNumParam
PUBLIC	?BindParameters@CSPGuildMemberAdd@@UAEFH@Z	; CSPGuildMemberAdd::BindParameters
PUBLIC	??_7CSPGuildMemberAdd@@6B@			; CSPGuildMemberAdd::`vftable'
PUBLIC	??_GCSPGuildMemberAdd@@UAEPAXI@Z		; CSPGuildMemberAdd::`scalar deleting destructor'
PUBLIC	??_C@_0CC@ILPPFALI@?$HL?5Call?5TGuildMemberAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?5@ ; `string'
EXTRN	??_ECSPGuildMemberAdd@@UAEPAXI@Z:NEAR		; CSPGuildMemberAdd::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T135846 DD	0ffffffffH
	DD	FLAT:$L135672
$T135843 DD	019930520H
	DD	01H
	DD	FLAT:$T135846
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CC@ILPPFALI@?$HL?5Call?5TGuildMemberAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?5@
CONST	SEGMENT
??_C@_0CC@ILPPFALI@?$HL?5Call?5TGuildMemberAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?5@ DB '{'
	DB	' Call TGuildMemberAdd(?,?,?,?) }', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildMemberAdd@@6B@
CONST	SEGMENT
??_7CSPGuildMemberAdd@@6B@ DD FLAT:??_ECSPGuildMemberAdd@@UAEPAXI@Z ; CSPGuildMemberAdd::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildMemberAdd@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildMemberAdd@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildMemberAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T135671 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildMemberAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildMemberAdd::CSPGuildMemberAdd, COMDAT
; _this$ = ecx

; 1584 : DEF_QUERY(CSPGuildMemberAdd, _T("{ Call TGuildMemberAdd(?,?,?,?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildMemberAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CC@ILPPFALI@?$HL?5Call?5TGuildMemberAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?5@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T135671[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildMemberAdd@@6B@
  0005e	72 0d		 jb	 SHORT $L135844
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L135844:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L135672:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildMemberAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T135843
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildMemberAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildMemberAdd::CSPGuildMemberAdd
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildMemberAdd@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildMemberAdd@@UAEHXZ PROC NEAR	; CSPGuildMemberAdd::GetNumParam, COMDAT
; _this$ = ecx

; 1586 : BEGIN_PARAM(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumParam@CSPGuildMemberAdd@@UAEHXZ ENDP		; CSPGuildMemberAdd::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildMemberAdd@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildMemberAdd@@UAEFH@Z PROC NEAR	; CSPGuildMemberAdd::BindParameters, COMDAT
; _this$ = ecx

; 1586 : BEGIN_PARAM(4)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 1587 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1b		 jne	 SHORT $L112732
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 06		 je	 SHORT $L112732
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	75 6a		 jne	 SHORT $L112727
$L112732:

; 1588 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00032	3b fb		 cmp	 edi, ebx
  00034	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003a	75 12		 jne	 SHORT $L112733
  0003c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00042	51		 push	 ecx
  00043	6a 02		 push	 2
  00045	6a 01		 push	 1
  00047	8b ce		 mov	 ecx, esi
  00049	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L112733:
  0004e	66 3b c3	 cmp	 ax, bx
  00051	74 06		 je	 SHORT $L112734
  00053	66 3d 01 00	 cmp	 ax, 1
  00057	75 43		 jne	 SHORT $L112727
$L112734:

; 1589 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bLevel)

  00059	3b fb		 cmp	 edi, ebx
  0005b	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00061	75 12		 jne	 SHORT $L112735
  00063	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00069	52		 push	 edx
  0006a	6a 03		 push	 3
  0006c	6a 01		 push	 1
  0006e	8b ce		 mov	 ecx, esi
  00070	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L112735:
  00075	66 3b c3	 cmp	 ax, bx
  00078	74 06		 je	 SHORT $L112736
  0007a	66 3d 01 00	 cmp	 ax, 1
  0007e	75 1c		 jne	 SHORT $L112727
$L112736:

; 1590 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bDuty)

  00080	3b fb		 cmp	 edi, ebx
  00082	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00088	75 12		 jne	 SHORT $L112727
  0008a	8d 86 35 0c 00
	00		 lea	 eax, DWORD PTR [esi+3125]
  00090	50		 push	 eax
  00091	6a 04		 push	 4
  00093	6a 01		 push	 1
  00095	8b ce		 mov	 ecx, esi
  00097	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L112727:
  0009c	5f		 pop	 edi
  0009d	5e		 pop	 esi
  0009e	5b		 pop	 ebx

; 1591 : END_PARAM();

  0009f	c2 04 00	 ret	 4
?BindParameters@CSPGuildMemberAdd@@UAEFH@Z ENDP		; CSPGuildMemberAdd::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildMemberAdd@@UAE@XZ			; CSPGuildMemberAdd::~CSPGuildMemberAdd
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildMemberAdd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildMemberAdd@@UAEPAXI@Z PROC NEAR		; CSPGuildMemberAdd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildMemberAdd@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L135858
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L135858:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildMemberAdd@@UAEPAXI@Z ENDP			; CSPGuildMemberAdd::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildMemberAdd@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildMemberAdd@@UAE@XZ PROC NEAR			; CSPGuildMemberAdd::~CSPGuildMemberAdd, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildMemberAdd@@UAE@XZ ENDP			; CSPGuildMemberAdd::~CSPGuildMemberAdd
_TEXT	ENDS
PUBLIC	??0CSPGuildLeave@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildLeave::CSPGuildLeave
PUBLIC	?GetNumParam@CSPGuildLeave@@UAEHXZ		; CSPGuildLeave::GetNumParam
PUBLIC	?BindParameters@CSPGuildLeave@@UAEFH@Z		; CSPGuildLeave::BindParameters
PUBLIC	??_7CSPGuildLeave@@6B@				; CSPGuildLeave::`vftable'
PUBLIC	??_GCSPGuildLeave@@UAEPAXI@Z			; CSPGuildLeave::`scalar deleting destructor'
PUBLIC	??_C@_0BO@MHDDHPBG@?$HL?5Call?5TGuildLeave?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@ ; `string'
EXTRN	??_ECSPGuildLeave@@UAEPAXI@Z:NEAR		; CSPGuildLeave::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T136041 DD	0ffffffffH
	DD	FLAT:$L135867
$T136038 DD	019930520H
	DD	01H
	DD	FLAT:$T136041
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BO@MHDDHPBG@?$HL?5Call?5TGuildLeave?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT
??_C@_0BO@MHDDHPBG@?$HL?5Call?5TGuildLeave?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@ DB '{'
	DB	' Call TGuildLeave(?,?,?,?) }', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildLeave@@6B@
CONST	SEGMENT
??_7CSPGuildLeave@@6B@ DD FLAT:??_ECSPGuildLeave@@UAEPAXI@Z ; CSPGuildLeave::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildLeave@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildLeave@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildLeave@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T135866 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildLeave@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildLeave::CSPGuildLeave, COMDAT
; _this$ = ecx

; 1602 : DEF_QUERY(CSPGuildLeave, _T("{ Call TGuildLeave(?,?,?,?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildLeave@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BO@MHDDHPBG@?$HL?5Call?5TGuildLeave?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T135866[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildLeave@@6B@
  0005e	72 0d		 jb	 SHORT $L136039
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L136039:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L135867:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildLeave@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136038
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildLeave@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildLeave::CSPGuildLeave
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildLeave@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildLeave@@UAEHXZ PROC NEAR		; CSPGuildLeave::GetNumParam, COMDAT
; _this$ = ecx

; 1604 : BEGIN_PARAM(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumParam@CSPGuildLeave@@UAEHXZ ENDP			; CSPGuildLeave::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildLeave@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildLeave@@UAEFH@Z PROC NEAR	; CSPGuildLeave::BindParameters, COMDAT
; _this$ = ecx

; 1604 : BEGIN_PARAM(4)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 1605 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1b		 jne	 SHORT $L112784
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 06		 je	 SHORT $L112784
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	75 6a		 jne	 SHORT $L112779
$L112784:

; 1606 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00032	3b fb		 cmp	 edi, ebx
  00034	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003a	75 12		 jne	 SHORT $L112785
  0003c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00042	51		 push	 ecx
  00043	6a 02		 push	 2
  00045	6a 01		 push	 1
  00047	8b ce		 mov	 ecx, esi
  00049	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L112785:
  0004e	66 3b c3	 cmp	 ax, bx
  00051	74 06		 je	 SHORT $L112786
  00053	66 3d 01 00	 cmp	 ax, 1
  00057	75 43		 jne	 SHORT $L112779
$L112786:

; 1607 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bLeave)

  00059	3b fb		 cmp	 edi, ebx
  0005b	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00061	75 12		 jne	 SHORT $L112787
  00063	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00069	52		 push	 edx
  0006a	6a 03		 push	 3
  0006c	6a 01		 push	 1
  0006e	8b ce		 mov	 ecx, esi
  00070	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L112787:
  00075	66 3b c3	 cmp	 ax, bx
  00078	74 06		 je	 SHORT $L112788
  0007a	66 3d 01 00	 cmp	 ax, 1
  0007e	75 1c		 jne	 SHORT $L112779
$L112788:

; 1608 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwLeaveTime)

  00080	3b fb		 cmp	 edi, ebx
  00082	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00088	75 12		 jne	 SHORT $L112779
  0008a	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00090	50		 push	 eax
  00091	6a 04		 push	 4
  00093	6a 01		 push	 1
  00095	8b ce		 mov	 ecx, esi
  00097	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L112779:
  0009c	5f		 pop	 edi
  0009d	5e		 pop	 esi
  0009e	5b		 pop	 ebx

; 1609 : END_PARAM();

  0009f	c2 04 00	 ret	 4
?BindParameters@CSPGuildLeave@@UAEFH@Z ENDP		; CSPGuildLeave::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildLeave@@UAE@XZ			; CSPGuildLeave::~CSPGuildLeave
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildLeave@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildLeave@@UAEPAXI@Z PROC NEAR			; CSPGuildLeave::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildLeave@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L136053
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L136053:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildLeave@@UAEPAXI@Z ENDP			; CSPGuildLeave::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildLeave@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildLeave@@UAE@XZ PROC NEAR			; CSPGuildLeave::~CSPGuildLeave, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildLeave@@UAE@XZ ENDP				; CSPGuildLeave::~CSPGuildLeave
_TEXT	ENDS
PUBLIC	??0CSPGuildDuty@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildDuty::CSPGuildDuty
PUBLIC	?GetNumParam@CSPGuildDuty@@UAEHXZ		; CSPGuildDuty::GetNumParam
PUBLIC	?BindParameters@CSPGuildDuty@@UAEFH@Z		; CSPGuildDuty::BindParameters
PUBLIC	??_7CSPGuildDuty@@6B@				; CSPGuildDuty::`vftable'
PUBLIC	??_GCSPGuildDuty@@UAEPAXI@Z			; CSPGuildDuty::`scalar deleting destructor'
PUBLIC	??_C@_0BL@GCEHDBJH@?$HL?5Call?5TGuildDuty?$CI?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@ ; `string'
EXTRN	??_ECSPGuildDuty@@UAEPAXI@Z:NEAR		; CSPGuildDuty::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T136236 DD	0ffffffffH
	DD	FLAT:$L136062
$T136233 DD	019930520H
	DD	01H
	DD	FLAT:$T136236
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BL@GCEHDBJH@?$HL?5Call?5TGuildDuty?$CI?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT
??_C@_0BL@GCEHDBJH@?$HL?5Call?5TGuildDuty?$CI?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@ DB '{'
	DB	' Call TGuildDuty(?,?,?) }', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildDuty@@6B@
CONST	SEGMENT
??_7CSPGuildDuty@@6B@ DD FLAT:??_ECSPGuildDuty@@UAEPAXI@Z ; CSPGuildDuty::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildDuty@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildDuty@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildDuty@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T136061 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildDuty@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildDuty::CSPGuildDuty, COMDAT
; _this$ = ecx

; 1619 : DEF_QUERY(CSPGuildDuty, _T("{ Call TGuildDuty(?,?,?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildDuty@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@GCEHDBJH@?$HL?5Call?5TGuildDuty?$CI?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T136061[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildDuty@@6B@
  0005e	72 0d		 jb	 SHORT $L136234
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L136234:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136062:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildDuty@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136233
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildDuty@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildDuty::CSPGuildDuty
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildDuty@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildDuty@@UAEHXZ PROC NEAR		; CSPGuildDuty::GetNumParam, COMDAT
; _this$ = ecx

; 1621 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPGuildDuty@@UAEHXZ ENDP			; CSPGuildDuty::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildDuty@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildDuty@@UAEFH@Z PROC NEAR		; CSPGuildDuty::BindParameters, COMDAT
; _this$ = ecx

; 1621 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1622 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L112835
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L112835
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L112830
$L112835:

; 1623 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L112836
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L112836:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L112837
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L112830
$L112837:

; 1624 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bDuty)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L112830
  00068	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L112830:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 1625 : END_PARAM();

  0007c	c2 04 00	 ret	 4
?BindParameters@CSPGuildDuty@@UAEFH@Z ENDP		; CSPGuildDuty::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildDuty@@UAE@XZ				; CSPGuildDuty::~CSPGuildDuty
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildDuty@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildDuty@@UAEPAXI@Z PROC NEAR			; CSPGuildDuty::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildDuty@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L136248
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L136248:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildDuty@@UAEPAXI@Z ENDP			; CSPGuildDuty::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildDuty@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildDuty@@UAE@XZ PROC NEAR			; CSPGuildDuty::~CSPGuildDuty, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildDuty@@UAE@XZ ENDP				; CSPGuildDuty::~CSPGuildDuty
_TEXT	ENDS
PUBLIC	??0CSPGuildPeer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildPeer::CSPGuildPeer
PUBLIC	?GetNumParam@CSPGuildPeer@@UAEHXZ		; CSPGuildPeer::GetNumParam
PUBLIC	?BindParameters@CSPGuildPeer@@UAEFH@Z		; CSPGuildPeer::BindParameters
PUBLIC	??_7CSPGuildPeer@@6B@				; CSPGuildPeer::`vftable'
PUBLIC	??_GCSPGuildPeer@@UAEPAXI@Z			; CSPGuildPeer::`scalar deleting destructor'
PUBLIC	??_C@_0BL@BNMCACON@?$HL?5Call?5TGuildPeer?$CI?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@ ; `string'
EXTRN	??_ECSPGuildPeer@@UAEPAXI@Z:NEAR		; CSPGuildPeer::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T136431 DD	0ffffffffH
	DD	FLAT:$L136257
$T136428 DD	019930520H
	DD	01H
	DD	FLAT:$T136431
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BL@BNMCACON@?$HL?5Call?5TGuildPeer?$CI?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT
??_C@_0BL@BNMCACON@?$HL?5Call?5TGuildPeer?$CI?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@ DB '{'
	DB	' Call TGuildPeer(?,?,?) }', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildPeer@@6B@
CONST	SEGMENT
??_7CSPGuildPeer@@6B@ DD FLAT:??_ECSPGuildPeer@@UAEPAXI@Z ; CSPGuildPeer::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildPeer@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildPeer@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildPeer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T136256 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildPeer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildPeer::CSPGuildPeer, COMDAT
; _this$ = ecx

; 1635 : DEF_QUERY(CSPGuildPeer, _T("{ Call TGuildPeer(?,?,?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildPeer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@BNMCACON@?$HL?5Call?5TGuildPeer?$CI?$DP?0?$DP?0?$DP?$CJ?5?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T136256[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildPeer@@6B@
  0005e	72 0d		 jb	 SHORT $L136429
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L136429:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136257:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildPeer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136428
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildPeer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildPeer::CSPGuildPeer
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildPeer@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildPeer@@UAEHXZ PROC NEAR		; CSPGuildPeer::GetNumParam, COMDAT
; _this$ = ecx

; 1637 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPGuildPeer@@UAEHXZ ENDP			; CSPGuildPeer::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildPeer@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildPeer@@UAEFH@Z PROC NEAR		; CSPGuildPeer::BindParameters, COMDAT
; _this$ = ecx

; 1637 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1638 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L112884
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L112884
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L112879
$L112884:

; 1639 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L112885
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L112885:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L112886
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L112879
$L112886:

; 1640 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bPeer)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L112879
  00068	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L112879:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 1641 : END_PARAM();

  0007c	c2 04 00	 ret	 4
?BindParameters@CSPGuildPeer@@UAEFH@Z ENDP		; CSPGuildPeer::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildPeer@@UAE@XZ				; CSPGuildPeer::~CSPGuildPeer
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildPeer@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildPeer@@UAEPAXI@Z PROC NEAR			; CSPGuildPeer::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildPeer@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L136443
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L136443:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildPeer@@UAEPAXI@Z ENDP			; CSPGuildPeer::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildPeer@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildPeer@@UAE@XZ PROC NEAR			; CSPGuildPeer::~CSPGuildPeer, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildPeer@@UAE@XZ ENDP				; CSPGuildPeer::~CSPGuildPeer
_TEXT	ENDS
PUBLIC	??0CSPGuildKickout@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildKickout::CSPGuildKickout
PUBLIC	?GetNumParam@CSPGuildKickout@@UAEHXZ		; CSPGuildKickout::GetNumParam
PUBLIC	?BindParameters@CSPGuildKickout@@UAEFH@Z	; CSPGuildKickout::BindParameters
PUBLIC	??_7CSPGuildKickout@@6B@			; CSPGuildKickout::`vftable'
PUBLIC	??_GCSPGuildKickout@@UAEPAXI@Z			; CSPGuildKickout::`scalar deleting destructor'
PUBLIC	??_C@_0BM@CJKHNNCE@?$HL?5Call?5TGuildKickout?$CI?$DP?0?$DP?$CJ?5?$HN?$AA@ ; `string'
EXTRN	??_ECSPGuildKickout@@UAEPAXI@Z:NEAR		; CSPGuildKickout::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T136626 DD	0ffffffffH
	DD	FLAT:$L136452
$T136623 DD	019930520H
	DD	01H
	DD	FLAT:$T136626
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@CJKHNNCE@?$HL?5Call?5TGuildKickout?$CI?$DP?0?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT
??_C@_0BM@CJKHNNCE@?$HL?5Call?5TGuildKickout?$CI?$DP?0?$DP?$CJ?5?$HN?$AA@ DB '{'
	DB	' Call TGuildKickout(?,?) }', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildKickout@@6B@
CONST	SEGMENT
??_7CSPGuildKickout@@6B@ DD FLAT:??_ECSPGuildKickout@@UAEPAXI@Z ; CSPGuildKickout::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildKickout@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildKickout@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildKickout@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T136451 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildKickout@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildKickout::CSPGuildKickout, COMDAT
; _this$ = ecx

; 1651 : DEF_QUERY(CSPGuildKickout, _T("{ Call TGuildKickout(?,?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildKickout@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@CJKHNNCE@?$HL?5Call?5TGuildKickout?$CI?$DP?0?$DP?$CJ?5?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T136451[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildKickout@@6B@
  0005e	72 0d		 jb	 SHORT $L136624
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L136624:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136452:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildKickout@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136623
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildKickout@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildKickout::CSPGuildKickout
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildKickout@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildKickout@@UAEHXZ PROC NEAR		; CSPGuildKickout::GetNumParam, COMDAT
; _this$ = ecx

; 1653 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CSPGuildKickout@@UAEHXZ ENDP		; CSPGuildKickout::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildKickout@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildKickout@@UAEFH@Z PROC NEAR	; CSPGuildKickout::BindParameters, COMDAT
; _this$ = ecx

; 1653 : BEGIN_PARAM(1)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1654 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L112932
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L112932
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L112927
$L112932:

; 1655 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L112927
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L112927:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1656 : END_PARAM();

  00051	c2 04 00	 ret	 4
?BindParameters@CSPGuildKickout@@UAEFH@Z ENDP		; CSPGuildKickout::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildKickout@@UAE@XZ			; CSPGuildKickout::~CSPGuildKickout
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildKickout@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildKickout@@UAEPAXI@Z PROC NEAR		; CSPGuildKickout::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildKickout@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L136638
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L136638:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildKickout@@UAEPAXI@Z ENDP			; CSPGuildKickout::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildKickout@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildKickout@@UAE@XZ PROC NEAR			; CSPGuildKickout::~CSPGuildKickout, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildKickout@@UAE@XZ ENDP				; CSPGuildKickout::~CSPGuildKickout
_TEXT	ENDS
PUBLIC	??0CSPFriendInsert@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPFriendInsert::CSPFriendInsert
PUBLIC	?GetNumParam@CSPFriendInsert@@UAEHXZ		; CSPFriendInsert::GetNumParam
PUBLIC	?BindParameters@CSPFriendInsert@@UAEFH@Z	; CSPFriendInsert::BindParameters
PUBLIC	??_7CSPFriendInsert@@6B@			; CSPFriendInsert::`vftable'
PUBLIC	??_GCSPFriendInsert@@UAEPAXI@Z			; CSPFriendInsert::`scalar deleting destructor'
PUBLIC	??_C@_0BM@MPJJGOIC@?$HL?5Call?5TFriendInsert?$CI?$DP?0?$DP?$CJ?5?$HN?$AA@ ; `string'
EXTRN	??_ECSPFriendInsert@@UAEPAXI@Z:NEAR		; CSPFriendInsert::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T136821 DD	0ffffffffH
	DD	FLAT:$L136647
$T136818 DD	019930520H
	DD	01H
	DD	FLAT:$T136821
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@MPJJGOIC@?$HL?5Call?5TFriendInsert?$CI?$DP?0?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT
??_C@_0BM@MPJJGOIC@?$HL?5Call?5TFriendInsert?$CI?$DP?0?$DP?$CJ?5?$HN?$AA@ DB '{'
	DB	' Call TFriendInsert(?,?) }', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPFriendInsert@@6B@
CONST	SEGMENT
??_7CSPFriendInsert@@6B@ DD FLAT:??_ECSPFriendInsert@@UAEPAXI@Z ; CSPFriendInsert::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPFriendInsert@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPFriendInsert@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPFriendInsert@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T136646 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPFriendInsert@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPFriendInsert::CSPFriendInsert, COMDAT
; _this$ = ecx

; 1665 : DEF_QUERY(CSPFriendInsert, _T("{ Call TFriendInsert(?,?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPFriendInsert@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@MPJJGOIC@?$HL?5Call?5TFriendInsert?$CI?$DP?0?$DP?$CJ?5?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T136646[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPFriendInsert@@6B@
  0005e	72 0d		 jb	 SHORT $L136819
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L136819:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136647:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPFriendInsert@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136818
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPFriendInsert@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPFriendInsert::CSPFriendInsert
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPFriendInsert@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPFriendInsert@@UAEHXZ PROC NEAR		; CSPFriendInsert::GetNumParam, COMDAT
; _this$ = ecx

; 1667 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPFriendInsert@@UAEHXZ ENDP		; CSPFriendInsert::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPFriendInsert@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPFriendInsert@@UAEFH@Z PROC NEAR	; CSPFriendInsert::BindParameters, COMDAT
; _this$ = ecx

; 1667 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1668 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L112978
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L112978
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L112973
$L112978:

; 1669 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwFriendID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L112973
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L112973:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1670 : END_PARAM();

  00051	c2 04 00	 ret	 4
?BindParameters@CSPFriendInsert@@UAEFH@Z ENDP		; CSPFriendInsert::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPFriendInsert@@UAE@XZ			; CSPFriendInsert::~CSPFriendInsert
; Function compile flags: /Ogty
;	COMDAT ??_GCSPFriendInsert@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPFriendInsert@@UAEPAXI@Z PROC NEAR		; CSPFriendInsert::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPFriendInsert@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L136833
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L136833:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPFriendInsert@@UAEPAXI@Z ENDP			; CSPFriendInsert::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPFriendInsert@@UAE@XZ
_TEXT	SEGMENT
??1CSPFriendInsert@@UAE@XZ PROC NEAR			; CSPFriendInsert::~CSPFriendInsert, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPFriendInsert@@UAE@XZ ENDP				; CSPFriendInsert::~CSPFriendInsert
_TEXT	ENDS
PUBLIC	??0CSPFriendErase@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPFriendErase::CSPFriendErase
PUBLIC	?GetNumParam@CSPFriendErase@@UAEHXZ		; CSPFriendErase::GetNumParam
PUBLIC	?BindParameters@CSPFriendErase@@UAEFH@Z		; CSPFriendErase::BindParameters
PUBLIC	??_7CSPFriendErase@@6B@				; CSPFriendErase::`vftable'
PUBLIC	??_GCSPFriendErase@@UAEPAXI@Z			; CSPFriendErase::`scalar deleting destructor'
PUBLIC	??_C@_0BM@FHIDPFIC@?$HL?5Call?5TFriendDelete?$CI?$DP?0?$DP?$CJ?5?$HN?$AA@ ; `string'
EXTRN	??_ECSPFriendErase@@UAEPAXI@Z:NEAR		; CSPFriendErase::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T137016 DD	0ffffffffH
	DD	FLAT:$L136842
$T137013 DD	019930520H
	DD	01H
	DD	FLAT:$T137016
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@FHIDPFIC@?$HL?5Call?5TFriendDelete?$CI?$DP?0?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT
??_C@_0BM@FHIDPFIC@?$HL?5Call?5TFriendDelete?$CI?$DP?0?$DP?$CJ?5?$HN?$AA@ DB '{'
	DB	' Call TFriendDelete(?,?) }', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPFriendErase@@6B@
CONST	SEGMENT
??_7CSPFriendErase@@6B@ DD FLAT:??_ECSPFriendErase@@UAEPAXI@Z ; CSPFriendErase::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPFriendErase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPFriendErase@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPFriendErase@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T136841 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPFriendErase@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPFriendErase::CSPFriendErase, COMDAT
; _this$ = ecx

; 1679 : DEF_QUERY(CSPFriendErase, _T("{ Call TFriendDelete(?,?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPFriendErase@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@FHIDPFIC@?$HL?5Call?5TFriendDelete?$CI?$DP?0?$DP?$CJ?5?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T136841[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPFriendErase@@6B@
  0005e	72 0d		 jb	 SHORT $L137014
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L137014:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136842:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPFriendErase@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T137013
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPFriendErase@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPFriendErase::CSPFriendErase
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPFriendErase@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPFriendErase@@UAEHXZ PROC NEAR		; CSPFriendErase::GetNumParam, COMDAT
; _this$ = ecx

; 1681 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPFriendErase@@UAEHXZ ENDP		; CSPFriendErase::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPFriendErase@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPFriendErase@@UAEFH@Z PROC NEAR	; CSPFriendErase::BindParameters, COMDAT
; _this$ = ecx

; 1681 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1682 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L113024
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L113024
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L113019
$L113024:

; 1683 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwFriendID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L113019
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113019:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1684 : END_PARAM();

  00051	c2 04 00	 ret	 4
?BindParameters@CSPFriendErase@@UAEFH@Z ENDP		; CSPFriendErase::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPFriendErase@@UAE@XZ			; CSPFriendErase::~CSPFriendErase
; Function compile flags: /Ogty
;	COMDAT ??_GCSPFriendErase@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPFriendErase@@UAEPAXI@Z PROC NEAR			; CSPFriendErase::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPFriendErase@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L137028
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L137028:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPFriendErase@@UAEPAXI@Z ENDP			; CSPFriendErase::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPFriendErase@@UAE@XZ
_TEXT	SEGMENT
??1CSPFriendErase@@UAE@XZ PROC NEAR			; CSPFriendErase::~CSPFriendErase, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPFriendErase@@UAE@XZ ENDP				; CSPFriendErase::~CSPFriendErase
_TEXT	ENDS
PUBLIC	??0CSPFriendGroupMake@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPFriendGroupMake::CSPFriendGroupMake
PUBLIC	?GetNumParam@CSPFriendGroupMake@@UAEHXZ		; CSPFriendGroupMake::GetNumParam
PUBLIC	?BindParameters@CSPFriendGroupMake@@UAEFH@Z	; CSPFriendGroupMake::BindParameters
PUBLIC	??_7CSPFriendGroupMake@@6B@			; CSPFriendGroupMake::`vftable'
PUBLIC	??_GCSPFriendGroupMake@@UAEPAXI@Z		; CSPFriendGroupMake::`scalar deleting destructor'
PUBLIC	??_C@_0CD@KBIHOAF@?$HL?5Call?5TFriendGroupMake?$CI?$DP?0?5?$DP?0?5?$DP?$CJ@ ; `string'
EXTRN	??_ECSPFriendGroupMake@@UAEPAXI@Z:NEAR		; CSPFriendGroupMake::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T137211 DD	0ffffffffH
	DD	FLAT:$L137037
$T137208 DD	019930520H
	DD	01H
	DD	FLAT:$T137211
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CD@KBIHOAF@?$HL?5Call?5TFriendGroupMake?$CI?$DP?0?5?$DP?0?5?$DP?$CJ@
CONST	SEGMENT
??_C@_0CD@KBIHOAF@?$HL?5Call?5TFriendGroupMake?$CI?$DP?0?5?$DP?0?5?$DP?$CJ@ DB '{'
	DB	' Call TFriendGroupMake(?, ?, ?) }', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPFriendGroupMake@@6B@
CONST	SEGMENT
??_7CSPFriendGroupMake@@6B@ DD FLAT:??_ECSPFriendGroupMake@@UAEPAXI@Z ; CSPFriendGroupMake::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPFriendGroupMake@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPFriendGroupMake@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPFriendGroupMake@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T137036 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPFriendGroupMake@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPFriendGroupMake::CSPFriendGroupMake, COMDAT
; _this$ = ecx

; 1694 : DEF_QUERY(CSPFriendGroupMake, _T("{ Call TFriendGroupMake(?, ?, ?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPFriendGroupMake@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CD@KBIHOAF@?$HL?5Call?5TFriendGroupMake?$CI?$DP?0?5?$DP?0?5?$DP?$CJ@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T137036[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPFriendGroupMake@@6B@
  0005e	72 0d		 jb	 SHORT $L137209
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L137209:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L137037:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPFriendGroupMake@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T137208
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPFriendGroupMake@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPFriendGroupMake::CSPFriendGroupMake
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPFriendGroupMake@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPFriendGroupMake@@UAEHXZ PROC NEAR	; CSPFriendGroupMake::GetNumParam, COMDAT
; _this$ = ecx

; 1696 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPFriendGroupMake@@UAEHXZ ENDP		; CSPFriendGroupMake::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPFriendGroupMake@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPFriendGroupMake@@UAEFH@Z PROC NEAR	; CSPFriendGroupMake::BindParameters, COMDAT
; _this$ = ecx

; 1696 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1697 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L113071
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L113071
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4d		 jne	 SHORT $L113066
$L113071:

; 1698 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bGroup)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L113072
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L113072:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L113073
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 22		 jne	 SHORT $L113066
$L113073:

; 1699 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szName)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2072], -3 ; fffffffdH
  00066	75 14		 jne	 SHORT $L113066
  00068	6a 15		 push	 21			; 00000015H
  0006a	8d 96 31 0c 00
	00		 lea	 edx, DWORD PTR [esi+3121]
  00070	52		 push	 edx
  00071	6a 03		 push	 3
  00073	6a 01		 push	 1
  00075	8b ce		 mov	 ecx, esi
  00077	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L113066:
  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi

; 1700 : END_PARAM();

  0007e	c2 04 00	 ret	 4
?BindParameters@CSPFriendGroupMake@@UAEFH@Z ENDP	; CSPFriendGroupMake::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPFriendGroupMake@@UAE@XZ			; CSPFriendGroupMake::~CSPFriendGroupMake
; Function compile flags: /Ogty
;	COMDAT ??_GCSPFriendGroupMake@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPFriendGroupMake@@UAEPAXI@Z PROC NEAR		; CSPFriendGroupMake::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPFriendGroupMake@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L137223
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L137223:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPFriendGroupMake@@UAEPAXI@Z ENDP			; CSPFriendGroupMake::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPFriendGroupMake@@UAE@XZ
_TEXT	SEGMENT
??1CSPFriendGroupMake@@UAE@XZ PROC NEAR			; CSPFriendGroupMake::~CSPFriendGroupMake, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPFriendGroupMake@@UAE@XZ ENDP			; CSPFriendGroupMake::~CSPFriendGroupMake
_TEXT	ENDS
PUBLIC	??0CSPFriendGroupDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPFriendGroupDelete::CSPFriendGroupDelete
PUBLIC	?GetNumParam@CSPFriendGroupDelete@@UAEHXZ	; CSPFriendGroupDelete::GetNumParam
PUBLIC	?BindParameters@CSPFriendGroupDelete@@UAEFH@Z	; CSPFriendGroupDelete::BindParameters
PUBLIC	??_7CSPFriendGroupDelete@@6B@			; CSPFriendGroupDelete::`vftable'
PUBLIC	??_GCSPFriendGroupDelete@@UAEPAXI@Z		; CSPFriendGroupDelete::`scalar deleting destructor'
PUBLIC	??_C@_0CC@LGNOMMGE@?$HL?5Call?5TFriendGroupDelete?$CI?$DP?0?5?$DP?$CJ?5@ ; `string'
EXTRN	??_ECSPFriendGroupDelete@@UAEPAXI@Z:NEAR	; CSPFriendGroupDelete::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T137406 DD	0ffffffffH
	DD	FLAT:$L137232
$T137403 DD	019930520H
	DD	01H
	DD	FLAT:$T137406
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CC@LGNOMMGE@?$HL?5Call?5TFriendGroupDelete?$CI?$DP?0?5?$DP?$CJ?5@
CONST	SEGMENT
??_C@_0CC@LGNOMMGE@?$HL?5Call?5TFriendGroupDelete?$CI?$DP?0?5?$DP?$CJ?5@ DB '{'
	DB	' Call TFriendGroupDelete(?, ?) }', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPFriendGroupDelete@@6B@
CONST	SEGMENT
??_7CSPFriendGroupDelete@@6B@ DD FLAT:??_ECSPFriendGroupDelete@@UAEPAXI@Z ; CSPFriendGroupDelete::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPFriendGroupDelete@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPFriendGroupDelete@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPFriendGroupDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T137231 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPFriendGroupDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPFriendGroupDelete::CSPFriendGroupDelete, COMDAT
; _this$ = ecx

; 1709 : DEF_QUERY(CSPFriendGroupDelete, _T("{ Call TFriendGroupDelete(?, ?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPFriendGroupDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CC@LGNOMMGE@?$HL?5Call?5TFriendGroupDelete?$CI?$DP?0?5?$DP?$CJ?5@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T137231[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPFriendGroupDelete@@6B@
  0005e	72 0d		 jb	 SHORT $L137404
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L137404:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L137232:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPFriendGroupDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T137403
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPFriendGroupDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPFriendGroupDelete::CSPFriendGroupDelete
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPFriendGroupDelete@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPFriendGroupDelete@@UAEHXZ PROC NEAR	; CSPFriendGroupDelete::GetNumParam, COMDAT
; _this$ = ecx

; 1711 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPFriendGroupDelete@@UAEHXZ ENDP		; CSPFriendGroupDelete::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPFriendGroupDelete@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPFriendGroupDelete@@UAEFH@Z PROC NEAR	; CSPFriendGroupDelete::BindParameters, COMDAT
; _this$ = ecx

; 1711 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1712 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L113119
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L113119
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L113114
$L113119:

; 1713 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bGroup)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L113114
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L113114:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1714 : END_PARAM();

  00051	c2 04 00	 ret	 4
?BindParameters@CSPFriendGroupDelete@@UAEFH@Z ENDP	; CSPFriendGroupDelete::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPFriendGroupDelete@@UAE@XZ			; CSPFriendGroupDelete::~CSPFriendGroupDelete
; Function compile flags: /Ogty
;	COMDAT ??_GCSPFriendGroupDelete@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPFriendGroupDelete@@UAEPAXI@Z PROC NEAR		; CSPFriendGroupDelete::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPFriendGroupDelete@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L137418
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L137418:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPFriendGroupDelete@@UAEPAXI@Z ENDP		; CSPFriendGroupDelete::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPFriendGroupDelete@@UAE@XZ
_TEXT	SEGMENT
??1CSPFriendGroupDelete@@UAE@XZ PROC NEAR		; CSPFriendGroupDelete::~CSPFriendGroupDelete, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPFriendGroupDelete@@UAE@XZ ENDP			; CSPFriendGroupDelete::~CSPFriendGroupDelete
_TEXT	ENDS
PUBLIC	??0CSPFriendGroupChange@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPFriendGroupChange::CSPFriendGroupChange
PUBLIC	?GetNumParam@CSPFriendGroupChange@@UAEHXZ	; CSPFriendGroupChange::GetNumParam
PUBLIC	?BindParameters@CSPFriendGroupChange@@UAEFH@Z	; CSPFriendGroupChange::BindParameters
PUBLIC	??_7CSPFriendGroupChange@@6B@			; CSPFriendGroupChange::`vftable'
PUBLIC	??_GCSPFriendGroupChange@@UAEPAXI@Z		; CSPFriendGroupChange::`scalar deleting destructor'
PUBLIC	??_C@_0CF@HIOKNFNM@?$HL?5Call?5TFriendGroupChange?$CI?$DP?0?5?$DP?0?5@ ; `string'
EXTRN	??_ECSPFriendGroupChange@@UAEPAXI@Z:NEAR	; CSPFriendGroupChange::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T137601 DD	0ffffffffH
	DD	FLAT:$L137427
$T137598 DD	019930520H
	DD	01H
	DD	FLAT:$T137601
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CF@HIOKNFNM@?$HL?5Call?5TFriendGroupChange?$CI?$DP?0?5?$DP?0?5@
CONST	SEGMENT
??_C@_0CF@HIOKNFNM@?$HL?5Call?5TFriendGroupChange?$CI?$DP?0?5?$DP?0?5@ DB '{'
	DB	' Call TFriendGroupChange(?, ?, ?) }', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPFriendGroupChange@@6B@
CONST	SEGMENT
??_7CSPFriendGroupChange@@6B@ DD FLAT:??_ECSPFriendGroupChange@@UAEPAXI@Z ; CSPFriendGroupChange::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPFriendGroupChange@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPFriendGroupChange@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPFriendGroupChange@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T137426 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPFriendGroupChange@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPFriendGroupChange::CSPFriendGroupChange, COMDAT
; _this$ = ecx

; 1724 : DEF_QUERY(CSPFriendGroupChange, _T("{ Call TFriendGroupChange(?, ?, ?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPFriendGroupChange@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CF@HIOKNFNM@?$HL?5Call?5TFriendGroupChange?$CI?$DP?0?5?$DP?0?5@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T137426[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPFriendGroupChange@@6B@
  0005e	72 0d		 jb	 SHORT $L137599
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L137599:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L137427:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPFriendGroupChange@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T137598
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPFriendGroupChange@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPFriendGroupChange::CSPFriendGroupChange
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPFriendGroupChange@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPFriendGroupChange@@UAEHXZ PROC NEAR	; CSPFriendGroupChange::GetNumParam, COMDAT
; _this$ = ecx

; 1726 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPFriendGroupChange@@UAEHXZ ENDP		; CSPFriendGroupChange::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPFriendGroupChange@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPFriendGroupChange@@UAEFH@Z PROC NEAR	; CSPFriendGroupChange::BindParameters, COMDAT
; _this$ = ecx

; 1726 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1727 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L113166
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L113166
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L113161
$L113166:

; 1728 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bGroup)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L113167
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L113167:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L113168
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L113161
$L113168:

; 1729 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwFriendID)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L113161
  00068	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113161:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 1730 : END_PARAM();

  0007c	c2 04 00	 ret	 4
?BindParameters@CSPFriendGroupChange@@UAEFH@Z ENDP	; CSPFriendGroupChange::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPFriendGroupChange@@UAE@XZ			; CSPFriendGroupChange::~CSPFriendGroupChange
; Function compile flags: /Ogty
;	COMDAT ??_GCSPFriendGroupChange@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPFriendGroupChange@@UAEPAXI@Z PROC NEAR		; CSPFriendGroupChange::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPFriendGroupChange@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L137613
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L137613:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPFriendGroupChange@@UAEPAXI@Z ENDP		; CSPFriendGroupChange::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPFriendGroupChange@@UAE@XZ
_TEXT	SEGMENT
??1CSPFriendGroupChange@@UAE@XZ PROC NEAR		; CSPFriendGroupChange::~CSPFriendGroupChange, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPFriendGroupChange@@UAE@XZ ENDP			; CSPFriendGroupChange::~CSPFriendGroupChange
_TEXT	ENDS
PUBLIC	??0CSPFriendGroupName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPFriendGroupName::CSPFriendGroupName
PUBLIC	?GetNumParam@CSPFriendGroupName@@UAEHXZ		; CSPFriendGroupName::GetNumParam
PUBLIC	?BindParameters@CSPFriendGroupName@@UAEFH@Z	; CSPFriendGroupName::BindParameters
PUBLIC	??_7CSPFriendGroupName@@6B@			; CSPFriendGroupName::`vftable'
PUBLIC	??_GCSPFriendGroupName@@UAEPAXI@Z		; CSPFriendGroupName::`scalar deleting destructor'
PUBLIC	??_C@_0CD@NLBCIBEB@?$HL?5Call?5TFriendGroupName?$CI?$DP?0?5?$DP?0?5?$DP?$CJ@ ; `string'
EXTRN	??_ECSPFriendGroupName@@UAEPAXI@Z:NEAR		; CSPFriendGroupName::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T137796 DD	0ffffffffH
	DD	FLAT:$L137622
$T137793 DD	019930520H
	DD	01H
	DD	FLAT:$T137796
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CD@NLBCIBEB@?$HL?5Call?5TFriendGroupName?$CI?$DP?0?5?$DP?0?5?$DP?$CJ@
CONST	SEGMENT
??_C@_0CD@NLBCIBEB@?$HL?5Call?5TFriendGroupName?$CI?$DP?0?5?$DP?0?5?$DP?$CJ@ DB '{'
	DB	' Call TFriendGroupName(?, ?, ?) }', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPFriendGroupName@@6B@
CONST	SEGMENT
??_7CSPFriendGroupName@@6B@ DD FLAT:??_ECSPFriendGroupName@@UAEPAXI@Z ; CSPFriendGroupName::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPFriendGroupName@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPFriendGroupName@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPFriendGroupName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T137621 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPFriendGroupName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPFriendGroupName::CSPFriendGroupName, COMDAT
; _this$ = ecx

; 1740 : DEF_QUERY(CSPFriendGroupName, _T("{ Call TFriendGroupName(?, ?, ?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPFriendGroupName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CD@NLBCIBEB@?$HL?5Call?5TFriendGroupName?$CI?$DP?0?5?$DP?0?5?$DP?$CJ@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T137621[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPFriendGroupName@@6B@
  0005e	72 0d		 jb	 SHORT $L137794
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L137794:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L137622:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPFriendGroupName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T137793
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPFriendGroupName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPFriendGroupName::CSPFriendGroupName
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPFriendGroupName@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPFriendGroupName@@UAEHXZ PROC NEAR	; CSPFriendGroupName::GetNumParam, COMDAT
; _this$ = ecx

; 1742 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPFriendGroupName@@UAEHXZ ENDP		; CSPFriendGroupName::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPFriendGroupName@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPFriendGroupName@@UAEFH@Z PROC NEAR	; CSPFriendGroupName::BindParameters, COMDAT
; _this$ = ecx

; 1742 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1743 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L113215
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L113215
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4d		 jne	 SHORT $L113210
$L113215:

; 1744 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bGroup)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L113216
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L113216:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L113217
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 22		 jne	 SHORT $L113210
$L113217:

; 1745 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szName)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2072], -3 ; fffffffdH
  00066	75 14		 jne	 SHORT $L113210
  00068	6a 15		 push	 21			; 00000015H
  0006a	8d 96 31 0c 00
	00		 lea	 edx, DWORD PTR [esi+3121]
  00070	52		 push	 edx
  00071	6a 03		 push	 3
  00073	6a 01		 push	 1
  00075	8b ce		 mov	 ecx, esi
  00077	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L113210:
  0007c	5f		 pop	 edi
  0007d	5e		 pop	 esi

; 1746 : END_PARAM();

  0007e	c2 04 00	 ret	 4
?BindParameters@CSPFriendGroupName@@UAEFH@Z ENDP	; CSPFriendGroupName::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPFriendGroupName@@UAE@XZ			; CSPFriendGroupName::~CSPFriendGroupName
; Function compile flags: /Ogty
;	COMDAT ??_GCSPFriendGroupName@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPFriendGroupName@@UAEPAXI@Z PROC NEAR		; CSPFriendGroupName::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPFriendGroupName@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L137808
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L137808:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPFriendGroupName@@UAEPAXI@Z ENDP			; CSPFriendGroupName::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPFriendGroupName@@UAE@XZ
_TEXT	SEGMENT
??1CSPFriendGroupName@@UAE@XZ PROC NEAR			; CSPFriendGroupName::~CSPFriendGroupName, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPFriendGroupName@@UAE@XZ ENDP			; CSPFriendGroupName::~CSPFriendGroupName
_TEXT	ENDS
PUBLIC	??0CSPProtectedSearch@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPProtectedSearch::CSPProtectedSearch
PUBLIC	?GetNumParam@CSPProtectedSearch@@UAEHXZ		; CSPProtectedSearch::GetNumParam
PUBLIC	?BindParameters@CSPProtectedSearch@@UAEFH@Z	; CSPProtectedSearch::BindParameters
PUBLIC	??_7CSPProtectedSearch@@6B@			; CSPProtectedSearch::`vftable'
PUBLIC	??_GCSPProtectedSearch@@UAEPAXI@Z		; CSPProtectedSearch::`scalar deleting destructor'
PUBLIC	??_C@_0CE@LGMJACNE@?$HL?5?$DP?5?$DN?5Call?5TProtectedSearch?$CI?$DP?0?5?$DP@ ; `string'
EXTRN	??_ECSPProtectedSearch@@UAEPAXI@Z:NEAR		; CSPProtectedSearch::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T137991 DD	0ffffffffH
	DD	FLAT:$L137817
$T137988 DD	019930520H
	DD	01H
	DD	FLAT:$T137991
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CE@LGMJACNE@?$HL?5?$DP?5?$DN?5Call?5TProtectedSearch?$CI?$DP?0?5?$DP@
CONST	SEGMENT
??_C@_0CE@LGMJACNE@?$HL?5?$DP?5?$DN?5Call?5TProtectedSearch?$CI?$DP?0?5?$DP@ DB '{'
	DB	' ? = Call TProtectedSearch(?, ?) }', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPProtectedSearch@@6B@
CONST	SEGMENT
??_7CSPProtectedSearch@@6B@ DD FLAT:??_ECSPProtectedSearch@@UAEPAXI@Z ; CSPProtectedSearch::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPProtectedSearch@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPProtectedSearch@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPProtectedSearch@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T137816 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPProtectedSearch@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPProtectedSearch::CSPProtectedSearch, COMDAT
; _this$ = ecx

; 1756 : DEF_QUERY(CSPProtectedSearch, _T("{ ? = Call TProtectedSearch(?, ?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPProtectedSearch@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CE@LGMJACNE@?$HL?5?$DP?5?$DN?5Call?5TProtectedSearch?$CI?$DP?0?5?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T137816[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPProtectedSearch@@6B@
  0005e	72 0d		 jb	 SHORT $L137989
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L137989:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L137817:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPProtectedSearch@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T137988
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPProtectedSearch@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPProtectedSearch::CSPProtectedSearch
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPProtectedSearch@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPProtectedSearch@@UAEHXZ PROC NEAR	; CSPProtectedSearch::GetNumParam, COMDAT
; _this$ = ecx

; 1758 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPProtectedSearch@@UAEHXZ ENDP		; CSPProtectedSearch::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPProtectedSearch@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPProtectedSearch@@UAEFH@Z PROC NEAR	; CSPProtectedSearch::BindParameters, COMDAT
; _this$ = ecx

; 1758 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1759 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_nRET)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L113264
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 04		 push	 4
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L113264
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L113259
$L113264:

; 1760 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L113265
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113265:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L113266
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L113259
$L113266:

; 1761 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwProtected)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L113259
  00068	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113259:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 1762 : END_PARAM();

  0007c	c2 04 00	 ret	 4
?BindParameters@CSPProtectedSearch@@UAEFH@Z ENDP	; CSPProtectedSearch::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPProtectedSearch@@UAE@XZ			; CSPProtectedSearch::~CSPProtectedSearch
; Function compile flags: /Ogty
;	COMDAT ??_GCSPProtectedSearch@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPProtectedSearch@@UAEPAXI@Z PROC NEAR		; CSPProtectedSearch::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPProtectedSearch@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L138003
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L138003:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPProtectedSearch@@UAEPAXI@Z ENDP			; CSPProtectedSearch::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPProtectedSearch@@UAE@XZ
_TEXT	SEGMENT
??1CSPProtectedSearch@@UAE@XZ PROC NEAR			; CSPProtectedSearch::~CSPProtectedSearch, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPProtectedSearch@@UAE@XZ ENDP			; CSPProtectedSearch::~CSPProtectedSearch
_TEXT	ENDS
PUBLIC	??0CSPLoadService@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPLoadService::CSPLoadService
PUBLIC	?GetNumParam@CSPLoadService@@UAEHXZ		; CSPLoadService::GetNumParam
PUBLIC	?BindParameters@CSPLoadService@@UAEFH@Z		; CSPLoadService::BindParameters
PUBLIC	??_7CSPLoadService@@6B@				; CSPLoadService::`vftable'
PUBLIC	??_GCSPLoadService@@UAEPAXI@Z			; CSPLoadService::`scalar deleting destructor'
PUBLIC	??_C@_0BN@FKLLIGDD@?$HLCALL?5TLoadService?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPLoadService@@UAEPAXI@Z:NEAR		; CSPLoadService::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T138186 DD	0ffffffffH
	DD	FLAT:$L138012
$T138183 DD	019930520H
	DD	01H
	DD	FLAT:$T138186
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BN@FKLLIGDD@?$HLCALL?5TLoadService?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BN@FKLLIGDD@?$HLCALL?5TLoadService?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL TLoadService(?,?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPLoadService@@6B@
CONST	SEGMENT
??_7CSPLoadService@@6B@ DD FLAT:??_ECSPLoadService@@UAEPAXI@Z ; CSPLoadService::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPLoadService@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPLoadService@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPLoadService@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T138011 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPLoadService@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPLoadService::CSPLoadService, COMDAT
; _this$ = ecx

; 1773 : DEF_QUERY(CSPLoadService, _T("{CALL TLoadService(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPLoadService@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BN@FKLLIGDD@?$HLCALL?5TLoadService?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T138011[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPLoadService@@6B@
  0005e	72 0d		 jb	 SHORT $L138184
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L138184:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138012:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPLoadService@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138183
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPLoadService@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPLoadService::CSPLoadService
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPLoadService@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPLoadService@@UAEHXZ PROC NEAR		; CSPLoadService::GetNumParam, COMDAT
; _this$ = ecx

; 1775 : BEGIN_PARAM(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumParam@CSPLoadService@@UAEHXZ ENDP		; CSPLoadService::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPLoadService@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPLoadService@@UAEFH@Z PROC NEAR	; CSPLoadService::BindParameters, COMDAT
; _this$ = ecx

; 1775 : BEGIN_PARAM(4)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1776 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bWorld)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L113314
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L113314
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 78		 jne	 SHORT $L113309
$L113314:

; 1777 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bServiceGroup)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L113315
  0003d	8d 8e 2d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3117]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L113315:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L113316
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 4d		 jne	 SHORT $L113309
$L113316:

; 1778 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT, m_szIP)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2072], -3 ; fffffffdH
  00066	75 14		 jne	 SHORT $L113317
  00068	6a 33		 push	 51			; 00000033H
  0006a	8d 96 2e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3118]
  00070	52		 push	 edx
  00071	6a 03		 push	 3
  00073	6a 04		 push	 4
  00075	8b ce		 mov	 ecx, esi
  00077	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L113317:
  0007c	66 85 c0	 test	 ax, ax
  0007f	74 06		 je	 SHORT $L113318
  00081	66 3d 01 00	 cmp	 ax, 1
  00085	75 20		 jne	 SHORT $L113309
$L113318:

; 1779 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_wPort)

  00087	85 ff		 test	 edi, edi
  00089	c7 86 1c 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2076], 0
  00093	75 12		 jne	 SHORT $L113309
  00095	8d 86 62 0c 00
	00		 lea	 eax, DWORD PTR [esi+3170]
  0009b	50		 push	 eax
  0009c	6a 04		 push	 4
  0009e	6a 04		 push	 4
  000a0	8b ce		 mov	 ecx, esi
  000a2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L113309:
  000a7	5f		 pop	 edi
  000a8	5e		 pop	 esi

; 1780 : END_PARAM()

  000a9	c2 04 00	 ret	 4
?BindParameters@CSPLoadService@@UAEFH@Z ENDP		; CSPLoadService::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPLoadService@@UAE@XZ			; CSPLoadService::~CSPLoadService
; Function compile flags: /Ogty
;	COMDAT ??_GCSPLoadService@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPLoadService@@UAEPAXI@Z PROC NEAR			; CSPLoadService::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPLoadService@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L138198
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L138198:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPLoadService@@UAEPAXI@Z ENDP			; CSPLoadService::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPLoadService@@UAE@XZ
_TEXT	SEGMENT
??1CSPLoadService@@UAE@XZ PROC NEAR			; CSPLoadService::~CSPLoadService, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPLoadService@@UAE@XZ ENDP				; CSPLoadService::~CSPLoadService
_TEXT	ENDS
PUBLIC	??0CSPGuildArticleAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildArticleAdd::CSPGuildArticleAdd
PUBLIC	?GetNumParam@CSPGuildArticleAdd@@UAEHXZ		; CSPGuildArticleAdd::GetNumParam
PUBLIC	?BindParameters@CSPGuildArticleAdd@@UAEFH@Z	; CSPGuildArticleAdd::BindParameters
PUBLIC	??_7CSPGuildArticleAdd@@6B@			; CSPGuildArticleAdd::`vftable'
PUBLIC	??_GCSPGuildArticleAdd@@UAEPAXI@Z		; CSPGuildArticleAdd::`scalar deleting destructor'
PUBLIC	??_C@_0CH@KMOHJLFF@?$HLCALL?5TGuildArticleAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPGuildArticleAdd@@UAEPAXI@Z:NEAR		; CSPGuildArticleAdd::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T138381 DD	0ffffffffH
	DD	FLAT:$L138207
$T138378 DD	019930520H
	DD	01H
	DD	FLAT:$T138381
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CH@KMOHJLFF@?$HLCALL?5TGuildArticleAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CH@KMOHJLFF@?$HLCALL?5TGuildArticleAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	'CALL TGuildArticleAdd(?,?,?,?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildArticleAdd@@6B@
CONST	SEGMENT
??_7CSPGuildArticleAdd@@6B@ DD FLAT:??_ECSPGuildArticleAdd@@UAEPAXI@Z ; CSPGuildArticleAdd::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildArticleAdd@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildArticleAdd@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildArticleAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T138206 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildArticleAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildArticleAdd::CSPGuildArticleAdd, COMDAT
; _this$ = ecx

; 1794 : DEF_QUERY(CSPGuildArticleAdd, _T("{CALL TGuildArticleAdd(?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildArticleAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CH@KMOHJLFF@?$HLCALL?5TGuildArticleAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T138206[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildArticleAdd@@6B@
  0005e	72 0d		 jb	 SHORT $L138379
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L138379:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138207:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildArticleAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138378
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildArticleAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildArticleAdd::CSPGuildArticleAdd
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildArticleAdd@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildArticleAdd@@UAEHXZ PROC NEAR	; CSPGuildArticleAdd::GetNumParam, COMDAT
; _this$ = ecx

; 1796 : BEGIN_PARAM(7)

  00000	b8 07 00 00 00	 mov	 eax, 7
  00005	c3		 ret	 0
?GetNumParam@CSPGuildArticleAdd@@UAEHXZ ENDP		; CSPGuildArticleAdd::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildArticleAdd@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildArticleAdd@@UAEFH@Z PROC NEAR	; CSPGuildArticleAdd::BindParameters, COMDAT
; _this$ = ecx

; 1796 : BEGIN_PARAM(7)

  00000	55		 push	 ebp
  00001	56		 push	 esi
  00002	57		 push	 edi

; 1797 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 ed		 xor	 ebp, ebp
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fd		 cmp	 edi, ebp
  0000f	89 ae 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebp
  00015	75 1f		 jne	 SHORT $L138390
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c5	 cmp	 ax, bp
  0002a	74 0a		 je	 SHORT $L138390
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 ff 00 00
	00		 jne	 $L113364
$L138390:

; 1798 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwID)

  00036	3b fd		 cmp	 edi, ebp
  00038	89 ae 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebp
  0003e	75 12		 jne	 SHORT $L138392
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138392:
  00052	66 3b c5	 cmp	 ax, bp
  00055	74 0a		 je	 SHORT $L138395
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 d4 00 00
	00		 jne	 $L113364
$L138395:

; 1799 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bDuty)

  00061	3b fd		 cmp	 edi, ebp
  00063	89 ae 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebp
  00069	75 12		 jne	 SHORT $L138396
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L138396:
  0007d	66 3b c5	 cmp	 ax, bp
  00080	74 0a		 je	 SHORT $L113373
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 a9 00 00
	00		 jne	 $L113364
$L113373:

; 1800 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szWritter)

  0008c	3b fd		 cmp	 edi, ebp
  0008e	c7 86 1c 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2076], -3 ; fffffffdH
  00098	75 14		 jne	 SHORT $L113374
  0009a	6a 33		 push	 51			; 00000033H
  0009c	8d 86 35 0c 00
	00		 lea	 eax, DWORD PTR [esi+3125]
  000a2	50		 push	 eax
  000a3	6a 04		 push	 4
  000a5	6a 01		 push	 1
  000a7	8b ce		 mov	 ecx, esi
  000a9	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L113374:
  000ae	66 3b c5	 cmp	 ax, bp
  000b1	74 06		 je	 SHORT $L138391
  000b3	66 3d 01 00	 cmp	 ax, 1
  000b7	75 7c		 jne	 SHORT $L113364
$L138391:

; 1801 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szTitle)

  000b9	3b fd		 cmp	 edi, ebp
  000bb	c7 86 20 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2080], -3 ; fffffffdH
  000c5	75 17		 jne	 SHORT $L113376
  000c7	68 01 01 00 00	 push	 257			; 00000101H
  000cc	8d 8e 68 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3176]
  000d2	51		 push	 ecx
  000d3	6a 05		 push	 5
  000d5	6a 01		 push	 1
  000d7	8b ce		 mov	 ecx, esi
  000d9	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L113376:
  000de	66 3b c5	 cmp	 ax, bp
  000e1	74 06		 je	 SHORT $L138393
  000e3	66 3d 01 00	 cmp	 ax, 1
  000e7	75 4c		 jne	 SHORT $L113364
$L138393:

; 1802 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szArticle)

  000e9	3b fd		 cmp	 edi, ebp
  000eb	c7 86 24 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2084], -3 ; fffffffdH
  000f5	75 17		 jne	 SHORT $L113378
  000f7	68 01 08 00 00	 push	 2049			; 00000801H
  000fc	8d 96 69 0d 00
	00		 lea	 edx, DWORD PTR [esi+3433]
  00102	52		 push	 edx
  00103	6a 06		 push	 6
  00105	6a 01		 push	 1
  00107	8b ce		 mov	 ecx, esi
  00109	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L113378:
  0010e	66 3b c5	 cmp	 ax, bp
  00111	74 06		 je	 SHORT $L138394
  00113	66 3d 01 00	 cmp	 ax, 1
  00117	75 1c		 jne	 SHORT $L113364
$L138394:

; 1803 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwTime)

  00119	3b fd		 cmp	 edi, ebp
  0011b	89 ae 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebp
  00121	75 12		 jne	 SHORT $L113364
  00123	8d 86 6c 15 00
	00		 lea	 eax, DWORD PTR [esi+5484]
  00129	50		 push	 eax
  0012a	6a 07		 push	 7
  0012c	6a 01		 push	 1
  0012e	8b ce		 mov	 ecx, esi
  00130	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113364:
  00135	5f		 pop	 edi
  00136	5e		 pop	 esi
  00137	5d		 pop	 ebp

; 1804 : END_PARAM()

  00138	c2 04 00	 ret	 4
?BindParameters@CSPGuildArticleAdd@@UAEFH@Z ENDP	; CSPGuildArticleAdd::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildArticleAdd@@UAE@XZ			; CSPGuildArticleAdd::~CSPGuildArticleAdd
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildArticleAdd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildArticleAdd@@UAEPAXI@Z PROC NEAR		; CSPGuildArticleAdd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildArticleAdd@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L138400
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L138400:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildArticleAdd@@UAEPAXI@Z ENDP			; CSPGuildArticleAdd::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildArticleAdd@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildArticleAdd@@UAE@XZ PROC NEAR			; CSPGuildArticleAdd::~CSPGuildArticleAdd, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildArticleAdd@@UAE@XZ ENDP			; CSPGuildArticleAdd::~CSPGuildArticleAdd
_TEXT	ENDS
PUBLIC	??0CSPGuildArticleDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildArticleDel::CSPGuildArticleDel
PUBLIC	?GetNumParam@CSPGuildArticleDel@@UAEHXZ		; CSPGuildArticleDel::GetNumParam
PUBLIC	?BindParameters@CSPGuildArticleDel@@UAEFH@Z	; CSPGuildArticleDel::BindParameters
PUBLIC	??_7CSPGuildArticleDel@@6B@			; CSPGuildArticleDel::`vftable'
PUBLIC	??_GCSPGuildArticleDel@@UAEPAXI@Z		; CSPGuildArticleDel::`scalar deleting destructor'
PUBLIC	??_C@_0BN@HAMFODDH@?$HLCALL?5TGuildArticleDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPGuildArticleDel@@UAEPAXI@Z:NEAR		; CSPGuildArticleDel::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T138583 DD	0ffffffffH
	DD	FLAT:$L138409
$T138580 DD	019930520H
	DD	01H
	DD	FLAT:$T138583
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BN@HAMFODDH@?$HLCALL?5TGuildArticleDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BN@HAMFODDH@?$HLCALL?5TGuildArticleDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL TGuildArticleDel(?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildArticleDel@@6B@
CONST	SEGMENT
??_7CSPGuildArticleDel@@6B@ DD FLAT:??_ECSPGuildArticleDel@@UAEPAXI@Z ; CSPGuildArticleDel::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildArticleDel@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildArticleDel@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildArticleDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T138408 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildArticleDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildArticleDel::CSPGuildArticleDel, COMDAT
; _this$ = ecx

; 1813 : DEF_QUERY(CSPGuildArticleDel, _T("{CALL TGuildArticleDel(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildArticleDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BN@HAMFODDH@?$HLCALL?5TGuildArticleDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T138408[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildArticleDel@@6B@
  0005e	72 0d		 jb	 SHORT $L138581
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L138581:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138409:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildArticleDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138580
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildArticleDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildArticleDel::CSPGuildArticleDel
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildArticleDel@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildArticleDel@@UAEHXZ PROC NEAR	; CSPGuildArticleDel::GetNumParam, COMDAT
; _this$ = ecx

; 1815 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPGuildArticleDel@@UAEHXZ ENDP		; CSPGuildArticleDel::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildArticleDel@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildArticleDel@@UAEFH@Z PROC NEAR	; CSPGuildArticleDel::BindParameters, COMDAT
; _this$ = ecx

; 1815 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1816 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L113425
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L113425
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L113420
$L113425:

; 1817 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L113420
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113420:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1818 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CSPGuildArticleDel@@UAEFH@Z ENDP	; CSPGuildArticleDel::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildArticleDel@@UAE@XZ			; CSPGuildArticleDel::~CSPGuildArticleDel
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildArticleDel@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildArticleDel@@UAEPAXI@Z PROC NEAR		; CSPGuildArticleDel::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildArticleDel@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L138595
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L138595:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildArticleDel@@UAEPAXI@Z ENDP			; CSPGuildArticleDel::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildArticleDel@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildArticleDel@@UAE@XZ PROC NEAR			; CSPGuildArticleDel::~CSPGuildArticleDel, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildArticleDel@@UAE@XZ ENDP			; CSPGuildArticleDel::~CSPGuildArticleDel
_TEXT	ENDS
PUBLIC	??0CSPGuildArticleUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildArticleUpdate::CSPGuildArticleUpdate
PUBLIC	?GetNumParam@CSPGuildArticleUpdate@@UAEHXZ	; CSPGuildArticleUpdate::GetNumParam
PUBLIC	?BindParameters@CSPGuildArticleUpdate@@UAEFH@Z	; CSPGuildArticleUpdate::BindParameters
PUBLIC	??_7CSPGuildArticleUpdate@@6B@			; CSPGuildArticleUpdate::`vftable'
PUBLIC	??_GCSPGuildArticleUpdate@@UAEPAXI@Z		; CSPGuildArticleUpdate::`scalar deleting destructor'
PUBLIC	??_C@_0CE@EEDGBJL@?$HLCALL?5TGuildArticleUpdate?$CI?$DP?0?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPGuildArticleUpdate@@UAEPAXI@Z:NEAR	; CSPGuildArticleUpdate::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T138778 DD	0ffffffffH
	DD	FLAT:$L138604
$T138775 DD	019930520H
	DD	01H
	DD	FLAT:$T138778
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CE@EEDGBJL@?$HLCALL?5TGuildArticleUpdate?$CI?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0CE@EEDGBJL@?$HLCALL?5TGuildArticleUpdate?$CI?$DP?0?$DP?0?$DP?0@ DB '{'
	DB	'CALL TGuildArticleUpdate(?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildArticleUpdate@@6B@
CONST	SEGMENT
??_7CSPGuildArticleUpdate@@6B@ DD FLAT:??_ECSPGuildArticleUpdate@@UAEPAXI@Z ; CSPGuildArticleUpdate::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildArticleUpdate@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildArticleUpdate@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildArticleUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T138603 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildArticleUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildArticleUpdate::CSPGuildArticleUpdate, COMDAT
; _this$ = ecx

; 1829 : DEF_QUERY(CSPGuildArticleUpdate, _T("{CALL TGuildArticleUpdate(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildArticleUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CE@EEDGBJL@?$HLCALL?5TGuildArticleUpdate?$CI?$DP?0?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T138603[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildArticleUpdate@@6B@
  0005e	72 0d		 jb	 SHORT $L138776
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L138776:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138604:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildArticleUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138775
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildArticleUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildArticleUpdate::CSPGuildArticleUpdate
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildArticleUpdate@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildArticleUpdate@@UAEHXZ PROC NEAR	; CSPGuildArticleUpdate::GetNumParam, COMDAT
; _this$ = ecx

; 1831 : BEGIN_PARAM(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumParam@CSPGuildArticleUpdate@@UAEHXZ ENDP		; CSPGuildArticleUpdate::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildArticleUpdate@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildArticleUpdate@@UAEFH@Z PROC NEAR ; CSPGuildArticleUpdate::BindParameters, COMDAT
; _this$ = ecx

; 1831 : BEGIN_PARAM(4)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1832 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1f		 jne	 SHORT $L138787
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 0a		 je	 SHORT $L138787
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	0f 85 80 00 00
	00		 jne	 $L113468
$L138787:

; 1833 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwID)

  00033	85 ff		 test	 edi, edi
  00035	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003f	75 12		 jne	 SHORT $L138789
  00041	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00047	51		 push	 ecx
  00048	6a 02		 push	 2
  0004a	6a 01		 push	 1
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L138789:
  00053	66 85 c0	 test	 ax, ax
  00056	74 06		 je	 SHORT $L113475
  00058	66 3d 01 00	 cmp	 ax, 1
  0005c	75 55		 jne	 SHORT $L113468
$L113475:

; 1834 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szTitle)

  0005e	85 ff		 test	 edi, edi
  00060	c7 86 18 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2072], -3 ; fffffffdH
  0006a	75 17		 jne	 SHORT $L113476
  0006c	68 01 01 00 00	 push	 257			; 00000101H
  00071	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00077	52		 push	 edx
  00078	6a 03		 push	 3
  0007a	6a 01		 push	 1
  0007c	8b ce		 mov	 ecx, esi
  0007e	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L113476:
  00083	66 85 c0	 test	 ax, ax
  00086	74 06		 je	 SHORT $L138788
  00088	66 3d 01 00	 cmp	 ax, 1
  0008c	75 25		 jne	 SHORT $L113468
$L138788:

; 1835 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szArticle)

  0008e	85 ff		 test	 edi, edi
  00090	c7 86 1c 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2076], -3 ; fffffffdH
  0009a	75 17		 jne	 SHORT $L113468
  0009c	68 01 08 00 00	 push	 2049			; 00000801H
  000a1	8d 86 35 0d 00
	00		 lea	 eax, DWORD PTR [esi+3381]
  000a7	50		 push	 eax
  000a8	6a 04		 push	 4
  000aa	6a 01		 push	 1
  000ac	8b ce		 mov	 ecx, esi
  000ae	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L113468:
  000b3	5f		 pop	 edi
  000b4	5e		 pop	 esi

; 1836 : END_PARAM()

  000b5	c2 04 00	 ret	 4
?BindParameters@CSPGuildArticleUpdate@@UAEFH@Z ENDP	; CSPGuildArticleUpdate::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildArticleUpdate@@UAE@XZ		; CSPGuildArticleUpdate::~CSPGuildArticleUpdate
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildArticleUpdate@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildArticleUpdate@@UAEPAXI@Z PROC NEAR		; CSPGuildArticleUpdate::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildArticleUpdate@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L138793
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L138793:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildArticleUpdate@@UAEPAXI@Z ENDP		; CSPGuildArticleUpdate::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildArticleUpdate@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildArticleUpdate@@UAE@XZ PROC NEAR		; CSPGuildArticleUpdate::~CSPGuildArticleUpdate, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildArticleUpdate@@UAE@XZ ENDP			; CSPGuildArticleUpdate::~CSPGuildArticleUpdate
_TEXT	ENDS
PUBLIC	??0CSPGuildFame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildFame::CSPGuildFame
PUBLIC	?GetNumParam@CSPGuildFame@@UAEHXZ		; CSPGuildFame::GetNumParam
PUBLIC	?BindParameters@CSPGuildFame@@UAEFH@Z		; CSPGuildFame::BindParameters
PUBLIC	??_7CSPGuildFame@@6B@				; CSPGuildFame::`vftable'
PUBLIC	??_GCSPGuildFame@@UAEPAXI@Z			; CSPGuildFame::`scalar deleting destructor'
PUBLIC	??_C@_0BJ@NLIIEAMH@?$HLCALL?5TGuildFame?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPGuildFame@@UAEPAXI@Z:NEAR		; CSPGuildFame::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T138976 DD	0ffffffffH
	DD	FLAT:$L138802
$T138973 DD	019930520H
	DD	01H
	DD	FLAT:$T138976
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BJ@NLIIEAMH@?$HLCALL?5TGuildFame?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BJ@NLIIEAMH@?$HLCALL?5TGuildFame?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL TGuildFame(?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildFame@@6B@
CONST	SEGMENT
??_7CSPGuildFame@@6B@ DD FLAT:??_ECSPGuildFame@@UAEPAXI@Z ; CSPGuildFame::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildFame@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildFame@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildFame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T138801 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildFame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildFame::CSPGuildFame, COMDAT
; _this$ = ecx

; 1846 : DEF_QUERY(CSPGuildFame, _T("{CALL TGuildFame(?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildFame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@NLIIEAMH@?$HLCALL?5TGuildFame?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T138801[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildFame@@6B@
  0005e	72 0d		 jb	 SHORT $L138974
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L138974:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138802:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildFame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138973
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildFame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildFame::CSPGuildFame
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildFame@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildFame@@UAEHXZ PROC NEAR		; CSPGuildFame::GetNumParam, COMDAT
; _this$ = ecx

; 1848 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPGuildFame@@UAEHXZ ENDP			; CSPGuildFame::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildFame@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildFame@@UAEFH@Z PROC NEAR		; CSPGuildFame::BindParameters, COMDAT
; _this$ = ecx

; 1848 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1849 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L113524
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L113524
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L113519
$L113524:

; 1850 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwFame)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L113525
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113525:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L113526
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L113519
$L113526:

; 1851 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwFameColor)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L113519
  00068	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113519:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 1852 : END_PARAM()

  0007c	c2 04 00	 ret	 4
?BindParameters@CSPGuildFame@@UAEFH@Z ENDP		; CSPGuildFame::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildFame@@UAE@XZ				; CSPGuildFame::~CSPGuildFame
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildFame@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildFame@@UAEPAXI@Z PROC NEAR			; CSPGuildFame::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildFame@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L138988
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L138988:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildFame@@UAEPAXI@Z ENDP			; CSPGuildFame::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildFame@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildFame@@UAE@XZ PROC NEAR			; CSPGuildFame::~CSPGuildFame, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildFame@@UAE@XZ ENDP				; CSPGuildFame::~CSPGuildFame
_TEXT	ENDS
PUBLIC	??0CSPGuildLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildLevel::CSPGuildLevel
PUBLIC	?GetNumParam@CSPGuildLevel@@UAEHXZ		; CSPGuildLevel::GetNumParam
PUBLIC	?BindParameters@CSPGuildLevel@@UAEFH@Z		; CSPGuildLevel::BindParameters
PUBLIC	??_7CSPGuildLevel@@6B@				; CSPGuildLevel::`vftable'
PUBLIC	??_GCSPGuildLevel@@UAEPAXI@Z			; CSPGuildLevel::`scalar deleting destructor'
PUBLIC	??_C@_0BI@LBOBLBIE@?$HLCALL?5TGuildLevel?$CI?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPGuildLevel@@UAEPAXI@Z:NEAR		; CSPGuildLevel::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T139171 DD	0ffffffffH
	DD	FLAT:$L138997
$T139168 DD	019930520H
	DD	01H
	DD	FLAT:$T139171
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BI@LBOBLBIE@?$HLCALL?5TGuildLevel?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BI@LBOBLBIE@?$HLCALL?5TGuildLevel?$CI?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL TGuildLevel(?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildLevel@@6B@
CONST	SEGMENT
??_7CSPGuildLevel@@6B@ DD FLAT:??_ECSPGuildLevel@@UAEPAXI@Z ; CSPGuildLevel::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildLevel@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildLevel@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T138996 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildLevel::CSPGuildLevel, COMDAT
; _this$ = ecx

; 1861 : DEF_QUERY(CSPGuildLevel, _T("{CALL TGuildLevel(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@LBOBLBIE@?$HLCALL?5TGuildLevel?$CI?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T138996[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildLevel@@6B@
  0005e	72 0d		 jb	 SHORT $L139169
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L139169:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138997:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139168
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildLevel::CSPGuildLevel
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildLevel@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildLevel@@UAEHXZ PROC NEAR		; CSPGuildLevel::GetNumParam, COMDAT
; _this$ = ecx

; 1863 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPGuildLevel@@UAEHXZ ENDP			; CSPGuildLevel::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildLevel@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildLevel@@UAEFH@Z PROC NEAR	; CSPGuildLevel::BindParameters, COMDAT
; _this$ = ecx

; 1863 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1864 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L113572
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L113572
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L113567
$L113572:

; 1865 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bLevel)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L113567
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L113567:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1866 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CSPGuildLevel@@UAEFH@Z ENDP		; CSPGuildLevel::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildLevel@@UAE@XZ			; CSPGuildLevel::~CSPGuildLevel
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildLevel@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildLevel@@UAEPAXI@Z PROC NEAR			; CSPGuildLevel::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildLevel@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L139183
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L139183:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildLevel@@UAEPAXI@Z ENDP			; CSPGuildLevel::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildLevel@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildLevel@@UAE@XZ PROC NEAR			; CSPGuildLevel::~CSPGuildLevel, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildLevel@@UAE@XZ ENDP				; CSPGuildLevel::~CSPGuildLevel
_TEXT	ENDS
PUBLIC	??0CSPGuildMaxCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildMaxCabinet::CSPGuildMaxCabinet
PUBLIC	?GetNumParam@CSPGuildMaxCabinet@@UAEHXZ		; CSPGuildMaxCabinet::GetNumParam
PUBLIC	?BindParameters@CSPGuildMaxCabinet@@UAEFH@Z	; CSPGuildMaxCabinet::BindParameters
PUBLIC	??_7CSPGuildMaxCabinet@@6B@			; CSPGuildMaxCabinet::`vftable'
PUBLIC	??_GCSPGuildMaxCabinet@@UAEPAXI@Z		; CSPGuildMaxCabinet::`scalar deleting destructor'
PUBLIC	??_C@_0BN@EMCEHLI@?$HLCALL?5TGuildMaxCabinet?$CI?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPGuildMaxCabinet@@UAEPAXI@Z:NEAR		; CSPGuildMaxCabinet::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T139366 DD	0ffffffffH
	DD	FLAT:$L139192
$T139363 DD	019930520H
	DD	01H
	DD	FLAT:$T139366
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BN@EMCEHLI@?$HLCALL?5TGuildMaxCabinet?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BN@EMCEHLI@?$HLCALL?5TGuildMaxCabinet?$CI?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL TGuildMaxCabinet(?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildMaxCabinet@@6B@
CONST	SEGMENT
??_7CSPGuildMaxCabinet@@6B@ DD FLAT:??_ECSPGuildMaxCabinet@@UAEPAXI@Z ; CSPGuildMaxCabinet::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildMaxCabinet@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildMaxCabinet@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildMaxCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T139191 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildMaxCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildMaxCabinet::CSPGuildMaxCabinet, COMDAT
; _this$ = ecx

; 1875 : DEF_QUERY(CSPGuildMaxCabinet, _T("{CALL TGuildMaxCabinet(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildMaxCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BN@EMCEHLI@?$HLCALL?5TGuildMaxCabinet?$CI?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T139191[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildMaxCabinet@@6B@
  0005e	72 0d		 jb	 SHORT $L139364
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L139364:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139192:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildMaxCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139363
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildMaxCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildMaxCabinet::CSPGuildMaxCabinet
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildMaxCabinet@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildMaxCabinet@@UAEHXZ PROC NEAR	; CSPGuildMaxCabinet::GetNumParam, COMDAT
; _this$ = ecx

; 1877 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPGuildMaxCabinet@@UAEHXZ ENDP		; CSPGuildMaxCabinet::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildMaxCabinet@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildMaxCabinet@@UAEFH@Z PROC NEAR	; CSPGuildMaxCabinet::BindParameters, COMDAT
; _this$ = ecx

; 1877 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1878 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L113618
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L113618
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L113613
$L113618:

; 1879 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bMaxCabinet)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L113613
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L113613:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1880 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CSPGuildMaxCabinet@@UAEFH@Z ENDP	; CSPGuildMaxCabinet::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildMaxCabinet@@UAE@XZ			; CSPGuildMaxCabinet::~CSPGuildMaxCabinet
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildMaxCabinet@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildMaxCabinet@@UAEPAXI@Z PROC NEAR		; CSPGuildMaxCabinet::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildMaxCabinet@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L139378
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L139378:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildMaxCabinet@@UAEPAXI@Z ENDP			; CSPGuildMaxCabinet::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildMaxCabinet@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildMaxCabinet@@UAE@XZ PROC NEAR			; CSPGuildMaxCabinet::~CSPGuildMaxCabinet, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildMaxCabinet@@UAE@XZ ENDP			; CSPGuildMaxCabinet::~CSPGuildMaxCabinet
_TEXT	ENDS
PUBLIC	??0CSPGuildContribution@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildContribution::CSPGuildContribution
PUBLIC	?GetNumParam@CSPGuildContribution@@UAEHXZ	; CSPGuildContribution::GetNumParam
PUBLIC	?BindParameters@CSPGuildContribution@@UAEFH@Z	; CSPGuildContribution::BindParameters
PUBLIC	??_7CSPGuildContribution@@6B@			; CSPGuildContribution::`vftable'
PUBLIC	??_GCSPGuildContribution@@UAEPAXI@Z		; CSPGuildContribution::`scalar deleting destructor'
PUBLIC	??_C@_0CH@JPPKBNJK@?$HLCALL?5TGuildContribution?$CI?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPGuildContribution@@UAEPAXI@Z:NEAR	; CSPGuildContribution::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T139561 DD	0ffffffffH
	DD	FLAT:$L139387
$T139558 DD	019930520H
	DD	01H
	DD	FLAT:$T139561
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CH@JPPKBNJK@?$HLCALL?5TGuildContribution?$CI?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CH@JPPKBNJK@?$HLCALL?5TGuildContribution?$CI?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	'CALL TGuildContribution(?,?,?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildContribution@@6B@
CONST	SEGMENT
??_7CSPGuildContribution@@6B@ DD FLAT:??_ECSPGuildContribution@@UAEPAXI@Z ; CSPGuildContribution::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildContribution@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildContribution@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildContribution@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T139386 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildContribution@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildContribution::CSPGuildContribution, COMDAT
; _this$ = ecx

; 1893 : DEF_QUERY(CSPGuildContribution, _T("{CALL TGuildContribution(?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildContribution@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CH@JPPKBNJK@?$HLCALL?5TGuildContribution?$CI?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T139386[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildContribution@@6B@
  0005e	72 0d		 jb	 SHORT $L139559
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L139559:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139387:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildContribution@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139558
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildContribution@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildContribution::CSPGuildContribution
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildContribution@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildContribution@@UAEHXZ PROC NEAR	; CSPGuildContribution::GetNumParam, COMDAT
; _this$ = ecx

; 1895 : BEGIN_PARAM(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumParam@CSPGuildContribution@@UAEHXZ ENDP		; CSPGuildContribution::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildContribution@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildContribution@@UAEFH@Z PROC NEAR	; CSPGuildContribution::BindParameters, COMDAT
; _this$ = ecx

; 1895 : BEGIN_PARAM(6)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 1896 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L113668
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L113668
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 bc 00 00
	00		 jne	 $L113663
$L113668:

; 1897 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L113669
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113669:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L113670
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 91 00 00
	00		 jne	 $L113663
$L113670:

; 1898 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwExp)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L113671
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113671:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 06		 je	 SHORT $L113672
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 6a		 jne	 SHORT $L113663
$L113672:

; 1899 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGold)

  00088	3b fb		 cmp	 edi, ebx
  0008a	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00090	75 12		 jne	 SHORT $L113673
  00092	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00098	50		 push	 eax
  00099	6a 04		 push	 4
  0009b	6a 01		 push	 1
  0009d	8b ce		 mov	 ecx, esi
  0009f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113673:
  000a4	66 3b c3	 cmp	 ax, bx
  000a7	74 06		 je	 SHORT $L113674
  000a9	66 3d 01 00	 cmp	 ax, 1
  000ad	75 43		 jne	 SHORT $L113663
$L113674:

; 1900 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwSilver)

  000af	3b fb		 cmp	 edi, ebx
  000b1	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b7	75 12		 jne	 SHORT $L113675
  000b9	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  000bf	51		 push	 ecx
  000c0	6a 05		 push	 5
  000c2	6a 01		 push	 1
  000c4	8b ce		 mov	 ecx, esi
  000c6	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113675:
  000cb	66 3b c3	 cmp	 ax, bx
  000ce	74 06		 je	 SHORT $L113676
  000d0	66 3d 01 00	 cmp	 ax, 1
  000d4	75 1c		 jne	 SHORT $L113663
$L113676:

; 1901 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCooper)

  000d6	3b fb		 cmp	 edi, ebx
  000d8	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000de	75 12		 jne	 SHORT $L113663
  000e0	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  000e6	52		 push	 edx
  000e7	6a 06		 push	 6
  000e9	6a 01		 push	 1
  000eb	8b ce		 mov	 ecx, esi
  000ed	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113663:
  000f2	5f		 pop	 edi
  000f3	5e		 pop	 esi
  000f4	5b		 pop	 ebx

; 1902 : END_PARAM()

  000f5	c2 04 00	 ret	 4
?BindParameters@CSPGuildContribution@@UAEFH@Z ENDP	; CSPGuildContribution::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildContribution@@UAE@XZ			; CSPGuildContribution::~CSPGuildContribution
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildContribution@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildContribution@@UAEPAXI@Z PROC NEAR		; CSPGuildContribution::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildContribution@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L139573
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L139573:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildContribution@@UAEPAXI@Z ENDP		; CSPGuildContribution::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildContribution@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildContribution@@UAE@XZ PROC NEAR		; CSPGuildContribution::~CSPGuildContribution, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildContribution@@UAE@XZ ENDP			; CSPGuildContribution::~CSPGuildContribution
_TEXT	ENDS
PUBLIC	??0CSPGuildVolunteerAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildVolunteerAdd::CSPGuildVolunteerAdd
PUBLIC	?GetNumParam@CSPGuildVolunteerAdd@@UAEHXZ	; CSPGuildVolunteerAdd::GetNumParam
PUBLIC	?BindParameters@CSPGuildVolunteerAdd@@UAEFH@Z	; CSPGuildVolunteerAdd::BindParameters
PUBLIC	??_7CSPGuildVolunteerAdd@@6B@			; CSPGuildVolunteerAdd::`vftable'
PUBLIC	??_GCSPGuildVolunteerAdd@@UAEPAXI@Z		; CSPGuildVolunteerAdd::`scalar deleting destructor'
PUBLIC	??_C@_0CJ@OIDOBLKO@?$HLCALL?5TGuildVolunteerAdd?$CI?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPGuildVolunteerAdd@@UAEPAXI@Z:NEAR	; CSPGuildVolunteerAdd::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T139756 DD	0ffffffffH
	DD	FLAT:$L139582
$T139753 DD	019930520H
	DD	01H
	DD	FLAT:$T139756
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CJ@OIDOBLKO@?$HLCALL?5TGuildVolunteerAdd?$CI?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CJ@OIDOBLKO@?$HLCALL?5TGuildVolunteerAdd?$CI?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	'CALL TGuildVolunteerAdd(?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildVolunteerAdd@@6B@
CONST	SEGMENT
??_7CSPGuildVolunteerAdd@@6B@ DD FLAT:??_ECSPGuildVolunteerAdd@@UAEPAXI@Z ; CSPGuildVolunteerAdd::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildVolunteerAdd@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildVolunteerAdd@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildVolunteerAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T139581 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildVolunteerAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildVolunteerAdd::CSPGuildVolunteerAdd, COMDAT
; _this$ = ecx

; 1916 : DEF_QUERY(CSPGuildVolunteerAdd, _T("{CALL TGuildVolunteerAdd(?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildVolunteerAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CJ@OIDOBLKO@?$HLCALL?5TGuildVolunteerAdd?$CI?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T139581[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildVolunteerAdd@@6B@
  0005e	72 0d		 jb	 SHORT $L139754
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L139754:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139582:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildVolunteerAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139753
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildVolunteerAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildVolunteerAdd::CSPGuildVolunteerAdd
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildVolunteerAdd@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildVolunteerAdd@@UAEHXZ PROC NEAR	; CSPGuildVolunteerAdd::GetNumParam, COMDAT
; _this$ = ecx

; 1918 : BEGIN_PARAM(7)

  00000	b8 07 00 00 00	 mov	 eax, 7
  00005	c3		 ret	 0
?GetNumParam@CSPGuildVolunteerAdd@@UAEHXZ ENDP		; CSPGuildVolunteerAdd::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildVolunteerAdd@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildVolunteerAdd@@UAEFH@Z PROC NEAR	; CSPGuildVolunteerAdd::BindParameters, COMDAT
; _this$ = ecx

; 1918 : BEGIN_PARAM(7)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 1919 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L113727
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L113727
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 ed 00 00
	00		 jne	 $L113722
$L113727:

; 1920 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L113728
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113728:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L113729
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 c2 00 00
	00		 jne	 $L113722
$L113729:

; 1921 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szTime)

  00061	3b fb		 cmp	 edi, ebx
  00063	c7 86 18 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2072], -3 ; fffffffdH
  0006d	75 14		 jne	 SHORT $L113730
  0006f	6a 33		 push	 51			; 00000033H
  00071	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00077	52		 push	 edx
  00078	6a 03		 push	 3
  0007a	6a 01		 push	 1
  0007c	8b ce		 mov	 ecx, esi
  0007e	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L113730:
  00083	66 3b c3	 cmp	 ax, bx
  00086	74 0a		 je	 SHORT $L113731
  00088	66 3d 01 00	 cmp	 ax, 1
  0008c	0f 85 91 00 00
	00		 jne	 $L113722
$L113731:

; 1922 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bType)

  00092	3b fb		 cmp	 edi, ebx
  00094	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  0009a	75 12		 jne	 SHORT $L113732
  0009c	8d 86 67 0c 00
	00		 lea	 eax, DWORD PTR [esi+3175]
  000a2	50		 push	 eax
  000a3	6a 04		 push	 4
  000a5	6a 01		 push	 1
  000a7	8b ce		 mov	 ecx, esi
  000a9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L113732:
  000ae	66 3b c3	 cmp	 ax, bx
  000b1	74 06		 je	 SHORT $L113733
  000b3	66 3d 01 00	 cmp	 ax, 1
  000b7	75 6a		 jne	 SHORT $L113722
$L113733:

; 1923 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGold)

  000b9	3b fb		 cmp	 edi, ebx
  000bb	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000c1	75 12		 jne	 SHORT $L113734
  000c3	8d 8e 68 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3176]
  000c9	51		 push	 ecx
  000ca	6a 05		 push	 5
  000cc	6a 01		 push	 1
  000ce	8b ce		 mov	 ecx, esi
  000d0	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113734:
  000d5	66 3b c3	 cmp	 ax, bx
  000d8	74 06		 je	 SHORT $L113735
  000da	66 3d 01 00	 cmp	 ax, 1
  000de	75 43		 jne	 SHORT $L113722
$L113735:

; 1924 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwSilver)

  000e0	3b fb		 cmp	 edi, ebx
  000e2	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000e8	75 12		 jne	 SHORT $L113736
  000ea	8d 96 6c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3180]
  000f0	52		 push	 edx
  000f1	6a 06		 push	 6
  000f3	6a 01		 push	 1
  000f5	8b ce		 mov	 ecx, esi
  000f7	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113736:
  000fc	66 3b c3	 cmp	 ax, bx
  000ff	74 06		 je	 SHORT $L113737
  00101	66 3d 01 00	 cmp	 ax, 1
  00105	75 1c		 jne	 SHORT $L113722
$L113737:

; 1925 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCooper)

  00107	3b fb		 cmp	 edi, ebx
  00109	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  0010f	75 12		 jne	 SHORT $L113722
  00111	8d 86 70 0c 00
	00		 lea	 eax, DWORD PTR [esi+3184]
  00117	50		 push	 eax
  00118	6a 07		 push	 7
  0011a	6a 01		 push	 1
  0011c	8b ce		 mov	 ecx, esi
  0011e	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113722:
  00123	5f		 pop	 edi
  00124	5e		 pop	 esi
  00125	5b		 pop	 ebx

; 1926 : END_PARAM()

  00126	c2 04 00	 ret	 4
?BindParameters@CSPGuildVolunteerAdd@@UAEFH@Z ENDP	; CSPGuildVolunteerAdd::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildVolunteerAdd@@UAE@XZ			; CSPGuildVolunteerAdd::~CSPGuildVolunteerAdd
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildVolunteerAdd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildVolunteerAdd@@UAEPAXI@Z PROC NEAR		; CSPGuildVolunteerAdd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildVolunteerAdd@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L139768
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L139768:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildVolunteerAdd@@UAEPAXI@Z ENDP		; CSPGuildVolunteerAdd::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildVolunteerAdd@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildVolunteerAdd@@UAE@XZ PROC NEAR		; CSPGuildVolunteerAdd::~CSPGuildVolunteerAdd, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildVolunteerAdd@@UAE@XZ ENDP			; CSPGuildVolunteerAdd::~CSPGuildVolunteerAdd
_TEXT	ENDS
PUBLIC	??0CSPGuildVolunteerDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildVolunteerDel::CSPGuildVolunteerDel
PUBLIC	?GetNumParam@CSPGuildVolunteerDel@@UAEHXZ	; CSPGuildVolunteerDel::GetNumParam
PUBLIC	?BindParameters@CSPGuildVolunteerDel@@UAEFH@Z	; CSPGuildVolunteerDel::BindParameters
PUBLIC	??_7CSPGuildVolunteerDel@@6B@			; CSPGuildVolunteerDel::`vftable'
PUBLIC	??_GCSPGuildVolunteerDel@@UAEPAXI@Z		; CSPGuildVolunteerDel::`scalar deleting destructor'
PUBLIC	??_C@_0BP@DIMJHPON@?$HLCALL?5TGuildVolunteerDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPGuildVolunteerDel@@UAEPAXI@Z:NEAR	; CSPGuildVolunteerDel::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T139951 DD	0ffffffffH
	DD	FLAT:$L139777
$T139948 DD	019930520H
	DD	01H
	DD	FLAT:$T139951
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BP@DIMJHPON@?$HLCALL?5TGuildVolunteerDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BP@DIMJHPON@?$HLCALL?5TGuildVolunteerDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL TGuildVolunteerDel(?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildVolunteerDel@@6B@
CONST	SEGMENT
??_7CSPGuildVolunteerDel@@6B@ DD FLAT:??_ECSPGuildVolunteerDel@@UAEPAXI@Z ; CSPGuildVolunteerDel::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildVolunteerDel@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildVolunteerDel@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildVolunteerDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T139776 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildVolunteerDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildVolunteerDel::CSPGuildVolunteerDel, COMDAT
; _this$ = ecx

; 1935 : DEF_QUERY(CSPGuildVolunteerDel, _T("{CALL TGuildVolunteerDel(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildVolunteerDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@DIMJHPON@?$HLCALL?5TGuildVolunteerDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T139776[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildVolunteerDel@@6B@
  0005e	72 0d		 jb	 SHORT $L139949
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L139949:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139777:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildVolunteerDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139948
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildVolunteerDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildVolunteerDel::CSPGuildVolunteerDel
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildVolunteerDel@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildVolunteerDel@@UAEHXZ PROC NEAR	; CSPGuildVolunteerDel::GetNumParam, COMDAT
; _this$ = ecx

; 1937 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPGuildVolunteerDel@@UAEHXZ ENDP		; CSPGuildVolunteerDel::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildVolunteerDel@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildVolunteerDel@@UAEFH@Z PROC NEAR	; CSPGuildVolunteerDel::BindParameters, COMDAT
; _this$ = ecx

; 1937 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1938 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L113783
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L113783
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L113778
$L113783:

; 1939 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L113778
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113778:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1940 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CSPGuildVolunteerDel@@UAEFH@Z ENDP	; CSPGuildVolunteerDel::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildVolunteerDel@@UAE@XZ			; CSPGuildVolunteerDel::~CSPGuildVolunteerDel
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildVolunteerDel@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildVolunteerDel@@UAEPAXI@Z PROC NEAR		; CSPGuildVolunteerDel::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildVolunteerDel@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L139963
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L139963:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildVolunteerDel@@UAEPAXI@Z ENDP		; CSPGuildVolunteerDel::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildVolunteerDel@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildVolunteerDel@@UAE@XZ PROC NEAR		; CSPGuildVolunteerDel::~CSPGuildVolunteerDel, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildVolunteerDel@@UAE@XZ ENDP			; CSPGuildVolunteerDel::~CSPGuildVolunteerDel
_TEXT	ENDS
PUBLIC	??0CSPSoulmateReg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSoulmateReg::CSPSoulmateReg
PUBLIC	?GetNumParam@CSPSoulmateReg@@UAEHXZ		; CSPSoulmateReg::GetNumParam
PUBLIC	?BindParameters@CSPSoulmateReg@@UAEFH@Z		; CSPSoulmateReg::BindParameters
PUBLIC	??_7CSPSoulmateReg@@6B@				; CSPSoulmateReg::`vftable'
PUBLIC	??_GCSPSoulmateReg@@UAEPAXI@Z			; CSPSoulmateReg::`scalar deleting destructor'
PUBLIC	??_C@_0BJ@DKGBIJO@?$HLCALL?5TSoulmateReg?$CI?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPSoulmateReg@@UAEPAXI@Z:NEAR		; CSPSoulmateReg::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T140146 DD	0ffffffffH
	DD	FLAT:$L139972
$T140143 DD	019930520H
	DD	01H
	DD	FLAT:$T140146
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BJ@DKGBIJO@?$HLCALL?5TSoulmateReg?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BJ@DKGBIJO@?$HLCALL?5TSoulmateReg?$CI?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL TSoulmateReg(?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPSoulmateReg@@6B@
CONST	SEGMENT
??_7CSPSoulmateReg@@6B@ DD FLAT:??_ECSPSoulmateReg@@UAEPAXI@Z ; CSPSoulmateReg::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSoulmateReg@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSoulmateReg@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSoulmateReg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T139971 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSoulmateReg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSoulmateReg::CSPSoulmateReg, COMDAT
; _this$ = ecx

; 1949 : DEF_QUERY(CSPSoulmateReg, _T("{CALL TSoulmateReg(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSoulmateReg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@DKGBIJO@?$HLCALL?5TSoulmateReg?$CI?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T139971[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSoulmateReg@@6B@
  0005e	72 0d		 jb	 SHORT $L140144
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L140144:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139972:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSoulmateReg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T140143
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSoulmateReg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSoulmateReg::CSPSoulmateReg
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSoulmateReg@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSoulmateReg@@UAEHXZ PROC NEAR		; CSPSoulmateReg::GetNumParam, COMDAT
; _this$ = ecx

; 1951 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPSoulmateReg@@UAEHXZ ENDP		; CSPSoulmateReg::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSoulmateReg@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSoulmateReg@@UAEFH@Z PROC NEAR	; CSPSoulmateReg::BindParameters, COMDAT
; _this$ = ecx

; 1951 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1952 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L113829
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L113829
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L113824
$L113829:

; 1953 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwTarget)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L113824
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113824:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1954 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CSPSoulmateReg@@UAEFH@Z ENDP		; CSPSoulmateReg::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSoulmateReg@@UAE@XZ			; CSPSoulmateReg::~CSPSoulmateReg
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSoulmateReg@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSoulmateReg@@UAEPAXI@Z PROC NEAR			; CSPSoulmateReg::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSoulmateReg@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L140158
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L140158:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSoulmateReg@@UAEPAXI@Z ENDP			; CSPSoulmateReg::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSoulmateReg@@UAE@XZ
_TEXT	SEGMENT
??1CSPSoulmateReg@@UAE@XZ PROC NEAR			; CSPSoulmateReg::~CSPSoulmateReg, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSoulmateReg@@UAE@XZ ENDP				; CSPSoulmateReg::~CSPSoulmateReg
_TEXT	ENDS
PUBLIC	??0CSPSoulmateEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSoulmateEnd::CSPSoulmateEnd
PUBLIC	?GetNumParam@CSPSoulmateEnd@@UAEHXZ		; CSPSoulmateEnd::GetNumParam
PUBLIC	?BindParameters@CSPSoulmateEnd@@UAEFH@Z		; CSPSoulmateEnd::BindParameters
PUBLIC	??_7CSPSoulmateEnd@@6B@				; CSPSoulmateEnd::`vftable'
PUBLIC	??_GCSPSoulmateEnd@@UAEPAXI@Z			; CSPSoulmateEnd::`scalar deleting destructor'
PUBLIC	??_C@_0BJ@MKAOBLDB@?$HLCALL?5TSoulmateEnd?$CI?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPSoulmateEnd@@UAEPAXI@Z:NEAR		; CSPSoulmateEnd::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T140341 DD	0ffffffffH
	DD	FLAT:$L140167
$T140338 DD	019930520H
	DD	01H
	DD	FLAT:$T140341
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BJ@MKAOBLDB@?$HLCALL?5TSoulmateEnd?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BJ@MKAOBLDB@?$HLCALL?5TSoulmateEnd?$CI?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL TSoulmateEnd(?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPSoulmateEnd@@6B@
CONST	SEGMENT
??_7CSPSoulmateEnd@@6B@ DD FLAT:??_ECSPSoulmateEnd@@UAEPAXI@Z ; CSPSoulmateEnd::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSoulmateEnd@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSoulmateEnd@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSoulmateEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T140166 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSoulmateEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSoulmateEnd::CSPSoulmateEnd, COMDAT
; _this$ = ecx

; 1963 : DEF_QUERY(CSPSoulmateEnd, _T("{CALL TSoulmateEnd(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSoulmateEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@MKAOBLDB@?$HLCALL?5TSoulmateEnd?$CI?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T140166[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSoulmateEnd@@6B@
  0005e	72 0d		 jb	 SHORT $L140339
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L140339:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L140167:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSoulmateEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T140338
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSoulmateEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSoulmateEnd::CSPSoulmateEnd
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSoulmateEnd@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSoulmateEnd@@UAEHXZ PROC NEAR		; CSPSoulmateEnd::GetNumParam, COMDAT
; _this$ = ecx

; 1965 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPSoulmateEnd@@UAEHXZ ENDP		; CSPSoulmateEnd::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSoulmateEnd@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSoulmateEnd@@UAEFH@Z PROC NEAR	; CSPSoulmateEnd::BindParameters, COMDAT
; _this$ = ecx

; 1965 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1966 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L113875
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L113875
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L113870
$L113875:

; 1967 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwTime)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L113870
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113870:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1968 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CSPSoulmateEnd@@UAEFH@Z ENDP		; CSPSoulmateEnd::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSoulmateEnd@@UAE@XZ			; CSPSoulmateEnd::~CSPSoulmateEnd
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSoulmateEnd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSoulmateEnd@@UAEPAXI@Z PROC NEAR			; CSPSoulmateEnd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSoulmateEnd@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L140353
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L140353:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSoulmateEnd@@UAEPAXI@Z ENDP			; CSPSoulmateEnd::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSoulmateEnd@@UAE@XZ
_TEXT	SEGMENT
??1CSPSoulmateEnd@@UAE@XZ PROC NEAR			; CSPSoulmateEnd::~CSPSoulmateEnd, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSoulmateEnd@@UAE@XZ ENDP				; CSPSoulmateEnd::~CSPSoulmateEnd
_TEXT	ENDS
PUBLIC	??0CSPSoulmateDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSoulmateDel::CSPSoulmateDel
PUBLIC	?GetNumParam@CSPSoulmateDel@@UAEHXZ		; CSPSoulmateDel::GetNumParam
PUBLIC	?BindParameters@CSPSoulmateDel@@UAEFH@Z		; CSPSoulmateDel::BindParameters
PUBLIC	??_7CSPSoulmateDel@@6B@				; CSPSoulmateDel::`vftable'
PUBLIC	??_GCSPSoulmateDel@@UAEPAXI@Z			; CSPSoulmateDel::`scalar deleting destructor'
PUBLIC	??_C@_0BJ@HEHMPFGH@?$HLCALL?5TSoulmateDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPSoulmateDel@@UAEPAXI@Z:NEAR		; CSPSoulmateDel::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T140536 DD	0ffffffffH
	DD	FLAT:$L140362
$T140533 DD	019930520H
	DD	01H
	DD	FLAT:$T140536
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BJ@HEHMPFGH@?$HLCALL?5TSoulmateDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BJ@HEHMPFGH@?$HLCALL?5TSoulmateDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL TSoulmateDel(?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPSoulmateDel@@6B@
CONST	SEGMENT
??_7CSPSoulmateDel@@6B@ DD FLAT:??_ECSPSoulmateDel@@UAEPAXI@Z ; CSPSoulmateDel::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSoulmateDel@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSoulmateDel@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSoulmateDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T140361 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSoulmateDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSoulmateDel::CSPSoulmateDel, COMDAT
; _this$ = ecx

; 1977 : DEF_QUERY(CSPSoulmateDel, _T("{CALL TSoulmateDel(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSoulmateDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@HEHMPFGH@?$HLCALL?5TSoulmateDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T140361[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSoulmateDel@@6B@
  0005e	72 0d		 jb	 SHORT $L140534
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L140534:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L140362:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSoulmateDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T140533
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSoulmateDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSoulmateDel::CSPSoulmateDel
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSoulmateDel@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSoulmateDel@@UAEHXZ PROC NEAR		; CSPSoulmateDel::GetNumParam, COMDAT
; _this$ = ecx

; 1979 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPSoulmateDel@@UAEHXZ ENDP		; CSPSoulmateDel::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSoulmateDel@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSoulmateDel@@UAEFH@Z PROC NEAR	; CSPSoulmateDel::BindParameters, COMDAT
; _this$ = ecx

; 1979 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 1980 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L113921
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L113921
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L113916
$L113921:

; 1981 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwSoul)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L113916
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113916:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 1982 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CSPSoulmateDel@@UAEFH@Z ENDP		; CSPSoulmateDel::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSoulmateDel@@UAE@XZ			; CSPSoulmateDel::~CSPSoulmateDel
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSoulmateDel@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSoulmateDel@@UAEPAXI@Z PROC NEAR			; CSPSoulmateDel::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSoulmateDel@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L140548
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L140548:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSoulmateDel@@UAEPAXI@Z ENDP			; CSPSoulmateDel::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSoulmateDel@@UAE@XZ
_TEXT	SEGMENT
??1CSPSoulmateDel@@UAE@XZ PROC NEAR			; CSPSoulmateDel::~CSPSoulmateDel, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSoulmateDel@@UAE@XZ ENDP				; CSPSoulmateDel::~CSPSoulmateDel
_TEXT	ENDS
PUBLIC	??0CSPGetReservedPost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetReservedPost::CSPGetReservedPost
PUBLIC	?GetNumParam@CSPGetReservedPost@@UAEHXZ		; CSPGetReservedPost::GetNumParam
PUBLIC	?BindParameters@CSPGetReservedPost@@UAEFH@Z	; CSPGetReservedPost::BindParameters
PUBLIC	??_7CSPGetReservedPost@@6B@			; CSPGetReservedPost::`vftable'
PUBLIC	??_GCSPGetReservedPost@@UAEPAXI@Z		; CSPGetReservedPost::`scalar deleting destructor'
PUBLIC	??_C@_0GG@GCKALGDN@?$HL?5?$DP?5?$DN?5CALL?5TGetReservedPost?$CI?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPGetReservedPost@@UAEPAXI@Z:NEAR		; CSPGetReservedPost::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T140731 DD	0ffffffffH
	DD	FLAT:$L140557
$T140728 DD	019930520H
	DD	01H
	DD	FLAT:$T140731
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0GG@GCKALGDN@?$HL?5?$DP?5?$DN?5CALL?5TGetReservedPost?$CI?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0GG@GCKALGDN@?$HL?5?$DP?5?$DN?5CALL?5TGetReservedPost?$CI?$DP?0?$DP?0@ DB '{'
	DB	' ? = CALL TGetReservedPost(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,'
	DB	'?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPGetReservedPost@@6B@
CONST	SEGMENT
??_7CSPGetReservedPost@@6B@ DD FLAT:??_ECSPGetReservedPost@@UAEPAXI@Z ; CSPGetReservedPost::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGetReservedPost@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGetReservedPost@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGetReservedPost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T140556 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGetReservedPost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGetReservedPost::CSPGetReservedPost, COMDAT
; _this$ = ecx

; 1999 : DEF_QUERY(CSPGetReservedPost, _T("{ ? = CALL TGetReservedPost(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGetReservedPost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0GG@GCKALGDN@?$HL?5?$DP?5?$DN?5CALL?5TGetReservedPost?$CI?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T140556[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	8d 8e b8 15 00
	00		 lea	 ecx, DWORD PTR [esi+5560]
  00059	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGetReservedPost@@6B@
  0005f	e8 00 00 00 00	 call	 ??0tagTITEM@@QAE@XZ	; tagTITEM::tagTITEM
  00064	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00069	72 0d		 jb	 SHORT $L140729
  0006b	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  0006f	52		 push	 edx
  00070	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00075	83 c4 04	 add	 esp, 4
$L140729:
  00078	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0007c	8b c6		 mov	 eax, esi
  0007e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00085	5e		 pop	 esi
  00086	83 c4 10	 add	 esp, 16			; 00000010H
  00089	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L140557:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGetReservedPost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T140728
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGetReservedPost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGetReservedPost::CSPGetReservedPost
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGetReservedPost@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGetReservedPost@@UAEHXZ PROC NEAR	; CSPGetReservedPost::GetNumParam, COMDAT
; _this$ = ecx

; 2001 : BEGIN_PARAM(37)

  00000	b8 25 00 00 00	 mov	 eax, 37			; 00000025H
  00005	c3		 ret	 0
?GetNumParam@CSPGetReservedPost@@UAEHXZ ENDP		; CSPGetReservedPost::GetNumParam
_TEXT	ENDS
EXTRN	?BindParam@CSqlBase@@QAEFFFPA_J@Z:NEAR		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParameters@CSPGetReservedPost@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGetReservedPost@@UAEFH@Z PROC NEAR	; CSPGetReservedPost::BindParameters, COMDAT
; _this$ = ecx

; 2001 : BEGIN_PARAM(37)

  00000	53		 push	 ebx

; 2002 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_nRET)

  00001	8b 5c 24 08	 mov	 ebx, DWORD PTR _bRewind$[esp]
  00005	55		 push	 ebp
  00006	33 ed		 xor	 ebp, ebp
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b dd		 cmp	 ebx, ebp
  0000f	89 ae 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebp
  00015	75 1f		 jne	 SHORT $L113975
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c5	 cmp	 ax, bp
  0002a	74 0a		 je	 SHORT $L113975
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 06 06 00
	00		 jne	 $L113970
$L113975:

; 2003 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_dwPostID)

  00036	3b dd		 cmp	 ebx, ebp
  00038	89 ae 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebp
  0003e	75 12		 jne	 SHORT $L113976
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 04		 push	 4
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113976:
  00052	66 3b c5	 cmp	 ax, bp
  00055	74 0a		 je	 SHORT $L113977
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 db 05 00
	00		 jne	 $L113970
$L113977:

; 2004 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_dwSenderID)

  00061	3b dd		 cmp	 ebx, ebp
  00063	89 ae 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebp
  00069	75 12		 jne	 SHORT $L113978
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 04		 push	 4
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113978:
  0007d	66 3b c5	 cmp	 ax, bp
  00080	74 0a		 je	 SHORT $L113979
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 b0 05 00
	00		 jne	 $L113970
$L113979:

; 2005 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_dwRecverID)

  0008c	3b dd		 cmp	 ebx, ebp
  0008e	89 ae 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebp
  00094	75 12		 jne	 SHORT $L113980
  00096	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 04		 push	 4
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L113980:
  000a8	66 3b c5	 cmp	 ax, bp
  000ab	74 0a		 je	 SHORT $L113981
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 85 05 00
	00		 jne	 $L113970
$L113981:

; 2006 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szSender)

  000b7	3b dd		 cmp	 ebx, ebp
  000b9	57		 push	 edi
  000ba	bf fd ff ff ff	 mov	 edi, -3			; fffffffdH
  000bf	89 be 20 08 00
	00		 mov	 DWORD PTR [esi+2080], edi
  000c5	75 14		 jne	 SHORT $L113982
  000c7	6a 33		 push	 51			; 00000033H
  000c9	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  000cf	51		 push	 ecx
  000d0	6a 05		 push	 5
  000d2	6a 04		 push	 4
  000d4	8b ce		 mov	 ecx, esi
  000d6	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L113982:
  000db	66 3b c5	 cmp	 ax, bp
  000de	74 0a		 je	 SHORT $L140740
  000e0	66 3d 01 00	 cmp	 ax, 1
  000e4	0f 85 51 05 00
	00		 jne	 $L140741
$L140740:

; 2007 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szRecver)

  000ea	3b dd		 cmp	 ebx, ebp
  000ec	89 be 24 08 00
	00		 mov	 DWORD PTR [esi+2084], edi
  000f2	75 14		 jne	 SHORT $L113984
  000f4	6a 33		 push	 51			; 00000033H
  000f6	8d 96 6f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3183]
  000fc	52		 push	 edx
  000fd	6a 06		 push	 6
  000ff	6a 04		 push	 4
  00101	8b ce		 mov	 ecx, esi
  00103	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L113984:
  00108	66 3b c5	 cmp	 ax, bp
  0010b	74 0a		 je	 SHORT $L113985
  0010d	66 3d 01 00	 cmp	 ax, 1
  00111	0f 85 24 05 00
	00		 jne	 $L140741
$L113985:

; 2008 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szTitle)

  00117	3b dd		 cmp	 ebx, ebp
  00119	89 be 28 08 00
	00		 mov	 DWORD PTR [esi+2088], edi
  0011f	75 17		 jne	 SHORT $L113986
  00121	68 01 01 00 00	 push	 257			; 00000101H
  00126	8d 86 a2 0c 00
	00		 lea	 eax, DWORD PTR [esi+3234]
  0012c	50		 push	 eax
  0012d	6a 07		 push	 7
  0012f	6a 04		 push	 4
  00131	8b ce		 mov	 ecx, esi
  00133	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L113986:
  00138	66 3b c5	 cmp	 ax, bp
  0013b	74 0a		 je	 SHORT $L113987
  0013d	66 3d 01 00	 cmp	 ax, 1
  00141	0f 85 f4 04 00
	00		 jne	 $L140741
$L113987:

; 2009 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szMessage)

  00147	3b dd		 cmp	 ebx, ebp
  00149	89 be 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], edi
  0014f	75 17		 jne	 SHORT $L113988
  00151	68 01 08 00 00	 push	 2049			; 00000801H
  00156	8d 8e a3 0d 00
	00		 lea	 ecx, DWORD PTR [esi+3491]
  0015c	51		 push	 ecx
  0015d	6a 08		 push	 8
  0015f	6a 04		 push	 4
  00161	8b ce		 mov	 ecx, esi
  00163	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L113988:
  00168	66 3b c5	 cmp	 ax, bp
  0016b	74 0a		 je	 SHORT $L113989
  0016d	66 3d 01 00	 cmp	 ax, 1
  00171	0f 85 c4 04 00
	00		 jne	 $L140741
$L113989:

; 2010 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_dlID)

  00177	3b dd		 cmp	 ebx, ebp
  00179	89 ae 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebp
  0017f	75 12		 jne	 SHORT $L113990
  00181	8d 96 b8 15 00
	00		 lea	 edx, DWORD PTR [esi+5560]
  00187	52		 push	 edx
  00188	6a 09		 push	 9
  0018a	6a 04		 push	 4
  0018c	8b ce		 mov	 ecx, esi
  0018e	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
$L113990:
  00193	66 3b c5	 cmp	 ax, bp
  00196	74 0a		 je	 SHORT $L113991
  00198	66 3d 01 00	 cmp	 ax, 1
  0019c	0f 85 99 04 00
	00		 jne	 $L140741
$L113991:

; 2011 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_bItemID)

  001a2	3b dd		 cmp	 ebx, ebp
  001a4	89 ae 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebp
  001aa	75 12		 jne	 SHORT $L113992
  001ac	8d 86 c4 15 00
	00		 lea	 eax, DWORD PTR [esi+5572]
  001b2	50		 push	 eax
  001b3	6a 0a		 push	 10			; 0000000aH
  001b5	6a 04		 push	 4
  001b7	8b ce		 mov	 ecx, esi
  001b9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L113992:
  001be	66 3b c5	 cmp	 ax, bp
  001c1	74 0a		 je	 SHORT $L113993
  001c3	66 3d 01 00	 cmp	 ax, 1
  001c7	0f 85 6e 04 00
	00		 jne	 $L140741
$L113993:

; 2012 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_wItemID)

  001cd	3b dd		 cmp	 ebx, ebp
  001cf	89 ae 38 08 00
	00		 mov	 DWORD PTR [esi+2104], ebp
  001d5	75 12		 jne	 SHORT $L113994
  001d7	8d 8e c6 15 00
	00		 lea	 ecx, DWORD PTR [esi+5574]
  001dd	51		 push	 ecx
  001de	6a 0b		 push	 11			; 0000000bH
  001e0	6a 04		 push	 4
  001e2	8b ce		 mov	 ecx, esi
  001e4	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L113994:
  001e9	66 3b c5	 cmp	 ax, bp
  001ec	74 0a		 je	 SHORT $L113995
  001ee	66 3d 01 00	 cmp	 ax, 1
  001f2	0f 85 43 04 00
	00		 jne	 $L140741
$L113995:

; 2013 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_bLevel)

  001f8	3b dd		 cmp	 ebx, ebp
  001fa	89 ae 3c 08 00
	00		 mov	 DWORD PTR [esi+2108], ebp
  00200	75 12		 jne	 SHORT $L113996
  00202	8d 96 ca 15 00
	00		 lea	 edx, DWORD PTR [esi+5578]
  00208	52		 push	 edx
  00209	6a 0c		 push	 12			; 0000000cH
  0020b	6a 04		 push	 4
  0020d	8b ce		 mov	 ecx, esi
  0020f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L113996:
  00214	66 3b c5	 cmp	 ax, bp
  00217	74 0a		 je	 SHORT $L113997
  00219	66 3d 01 00	 cmp	 ax, 1
  0021d	0f 85 18 04 00
	00		 jne	 $L140741
$L113997:

; 2014 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_bCount)

  00223	3b dd		 cmp	 ebx, ebp
  00225	89 ae 40 08 00
	00		 mov	 DWORD PTR [esi+2112], ebp
  0022b	75 12		 jne	 SHORT $L113998
  0022d	8d 86 cb 15 00
	00		 lea	 eax, DWORD PTR [esi+5579]
  00233	50		 push	 eax
  00234	6a 0d		 push	 13			; 0000000dH
  00236	6a 04		 push	 4
  00238	8b ce		 mov	 ecx, esi
  0023a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L113998:
  0023f	66 3b c5	 cmp	 ax, bp
  00242	74 0a		 je	 SHORT $L113999
  00244	66 3d 01 00	 cmp	 ax, 1
  00248	0f 85 ed 03 00
	00		 jne	 $L140741
$L113999:

; 2015 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_bGLevel)

  0024e	3b dd		 cmp	 ebx, ebp
  00250	89 ae 44 08 00
	00		 mov	 DWORD PTR [esi+2116], ebp
  00256	75 12		 jne	 SHORT $L114000
  00258	8d 8e cc 15 00
	00		 lea	 ecx, DWORD PTR [esi+5580]
  0025e	51		 push	 ecx
  0025f	6a 0e		 push	 14			; 0000000eH
  00261	6a 04		 push	 4
  00263	8b ce		 mov	 ecx, esi
  00265	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L114000:
  0026a	66 3b c5	 cmp	 ax, bp
  0026d	74 0a		 je	 SHORT $L114001
  0026f	66 3d 01 00	 cmp	 ax, 1
  00273	0f 85 c2 03 00
	00		 jne	 $L140741
$L114001:

; 2016 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_dwDuraMax)

  00279	3b dd		 cmp	 ebx, ebp
  0027b	89 ae 48 08 00
	00		 mov	 DWORD PTR [esi+2120], ebp
  00281	75 12		 jne	 SHORT $L114002
  00283	8d 96 d0 15 00
	00		 lea	 edx, DWORD PTR [esi+5584]
  00289	52		 push	 edx
  0028a	6a 0f		 push	 15			; 0000000fH
  0028c	6a 04		 push	 4
  0028e	8b ce		 mov	 ecx, esi
  00290	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114002:
  00295	66 3b c5	 cmp	 ax, bp
  00298	74 0a		 je	 SHORT $L114003
  0029a	66 3d 01 00	 cmp	 ax, 1
  0029e	0f 85 97 03 00
	00		 jne	 $L140741
$L114003:

; 2017 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_dwDuraCur)

  002a4	3b dd		 cmp	 ebx, ebp
  002a6	89 ae 4c 08 00
	00		 mov	 DWORD PTR [esi+2124], ebp
  002ac	75 12		 jne	 SHORT $L114004
  002ae	8d 86 d4 15 00
	00		 lea	 eax, DWORD PTR [esi+5588]
  002b4	50		 push	 eax
  002b5	6a 10		 push	 16			; 00000010H
  002b7	6a 04		 push	 4
  002b9	8b ce		 mov	 ecx, esi
  002bb	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114004:
  002c0	66 3b c5	 cmp	 ax, bp
  002c3	74 0a		 je	 SHORT $L114005
  002c5	66 3d 01 00	 cmp	 ax, 1
  002c9	0f 85 6c 03 00
	00		 jne	 $L140741
$L114005:

; 2018 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_bRefineCur)

  002cf	3b dd		 cmp	 ebx, ebp
  002d1	89 ae 50 08 00
	00		 mov	 DWORD PTR [esi+2128], ebp
  002d7	75 12		 jne	 SHORT $L114006
  002d9	8d 8e d8 15 00
	00		 lea	 ecx, DWORD PTR [esi+5592]
  002df	51		 push	 ecx
  002e0	6a 11		 push	 17			; 00000011H
  002e2	6a 04		 push	 4
  002e4	8b ce		 mov	 ecx, esi
  002e6	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L114006:
  002eb	66 3b c5	 cmp	 ax, bp
  002ee	74 0a		 je	 SHORT $L114007
  002f0	66 3d 01 00	 cmp	 ax, 1
  002f4	0f 85 41 03 00
	00		 jne	 $L140741
$L114007:

; 2019 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_dEndTime)

  002fa	3b dd		 cmp	 ebx, ebp
  002fc	89 ae 54 08 00
	00		 mov	 DWORD PTR [esi+2132], ebp
  00302	75 12		 jne	 SHORT $L114008
  00304	8d 96 a4 15 00
	00		 lea	 edx, DWORD PTR [esi+5540]
  0030a	52		 push	 edx
  0030b	6a 12		 push	 18			; 00000012H
  0030d	6a 04		 push	 4
  0030f	8b ce		 mov	 ecx, esi
  00311	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L114008:
  00316	66 3b c5	 cmp	 ax, bp
  00319	74 0a		 je	 SHORT $L114009
  0031b	66 3d 01 00	 cmp	 ax, 1
  0031f	0f 85 16 03 00
	00		 jne	 $L140741
$L114009:

; 2020 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_bGradeEffect)

  00325	3b dd		 cmp	 ebx, ebp
  00327	89 ae 58 08 00
	00		 mov	 DWORD PTR [esi+2136], ebp
  0032d	75 12		 jne	 SHORT $L114010
  0032f	8d 86 e8 15 00
	00		 lea	 eax, DWORD PTR [esi+5608]
  00335	50		 push	 eax
  00336	6a 13		 push	 19			; 00000013H
  00338	6a 04		 push	 4
  0033a	8b ce		 mov	 ecx, esi
  0033c	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L114010:
  00341	66 3b c5	 cmp	 ax, bp
  00344	74 0a		 je	 SHORT $L114011
  00346	66 3d 01 00	 cmp	 ax, 1
  0034a	0f 85 eb 02 00
	00		 jne	 $L140741
$L114011:

; 2021 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_bMagic[0])

  00350	3b dd		 cmp	 ebx, ebp
  00352	89 ae 5c 08 00
	00		 mov	 DWORD PTR [esi+2140], ebp
  00358	75 12		 jne	 SHORT $L114012
  0035a	8d 8e ea 15 00
	00		 lea	 ecx, DWORD PTR [esi+5610]
  00360	51		 push	 ecx
  00361	6a 14		 push	 20			; 00000014H
  00363	6a 04		 push	 4
  00365	8b ce		 mov	 ecx, esi
  00367	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L114012:
  0036c	66 3b c5	 cmp	 ax, bp
  0036f	74 0a		 je	 SHORT $L114013
  00371	66 3d 01 00	 cmp	 ax, 1
  00375	0f 85 c0 02 00
	00		 jne	 $L140741
$L114013:

; 2022 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_bMagic[1])

  0037b	3b dd		 cmp	 ebx, ebp
  0037d	89 ae 60 08 00
	00		 mov	 DWORD PTR [esi+2144], ebp
  00383	75 12		 jne	 SHORT $L114014
  00385	8d 96 eb 15 00
	00		 lea	 edx, DWORD PTR [esi+5611]
  0038b	52		 push	 edx
  0038c	6a 15		 push	 21			; 00000015H
  0038e	6a 04		 push	 4
  00390	8b ce		 mov	 ecx, esi
  00392	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L114014:
  00397	66 3b c5	 cmp	 ax, bp
  0039a	74 0a		 je	 SHORT $L114015
  0039c	66 3d 01 00	 cmp	 ax, 1
  003a0	0f 85 95 02 00
	00		 jne	 $L140741
$L114015:

; 2023 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_bMagic[2])

  003a6	3b dd		 cmp	 ebx, ebp
  003a8	89 ae 64 08 00
	00		 mov	 DWORD PTR [esi+2148], ebp
  003ae	75 12		 jne	 SHORT $L114016
  003b0	8d 86 ec 15 00
	00		 lea	 eax, DWORD PTR [esi+5612]
  003b6	50		 push	 eax
  003b7	6a 16		 push	 22			; 00000016H
  003b9	6a 04		 push	 4
  003bb	8b ce		 mov	 ecx, esi
  003bd	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L114016:
  003c2	66 3b c5	 cmp	 ax, bp
  003c5	74 0a		 je	 SHORT $L114017
  003c7	66 3d 01 00	 cmp	 ax, 1
  003cb	0f 85 6a 02 00
	00		 jne	 $L140741
$L114017:

; 2024 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_bMagic[3])

  003d1	3b dd		 cmp	 ebx, ebp
  003d3	89 ae 68 08 00
	00		 mov	 DWORD PTR [esi+2152], ebp
  003d9	75 12		 jne	 SHORT $L114018
  003db	8d 8e ed 15 00
	00		 lea	 ecx, DWORD PTR [esi+5613]
  003e1	51		 push	 ecx
  003e2	6a 17		 push	 23			; 00000017H
  003e4	6a 04		 push	 4
  003e6	8b ce		 mov	 ecx, esi
  003e8	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L114018:
  003ed	66 3b c5	 cmp	 ax, bp
  003f0	74 0a		 je	 SHORT $L114019
  003f2	66 3d 01 00	 cmp	 ax, 1
  003f6	0f 85 3f 02 00
	00		 jne	 $L140741
$L114019:

; 2025 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_bMagic[4])

  003fc	3b dd		 cmp	 ebx, ebp
  003fe	89 ae 6c 08 00
	00		 mov	 DWORD PTR [esi+2156], ebp
  00404	75 12		 jne	 SHORT $L114020
  00406	8d 96 ee 15 00
	00		 lea	 edx, DWORD PTR [esi+5614]
  0040c	52		 push	 edx
  0040d	6a 18		 push	 24			; 00000018H
  0040f	6a 04		 push	 4
  00411	8b ce		 mov	 ecx, esi
  00413	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L114020:
  00418	66 3b c5	 cmp	 ax, bp
  0041b	74 0a		 je	 SHORT $L114021
  0041d	66 3d 01 00	 cmp	 ax, 1
  00421	0f 85 14 02 00
	00		 jne	 $L140741
$L114021:

; 2026 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_bMagic[5])

  00427	3b dd		 cmp	 ebx, ebp
  00429	89 ae 70 08 00
	00		 mov	 DWORD PTR [esi+2160], ebp
  0042f	75 12		 jne	 SHORT $L114022
  00431	8d 86 ef 15 00
	00		 lea	 eax, DWORD PTR [esi+5615]
  00437	50		 push	 eax
  00438	6a 19		 push	 25			; 00000019H
  0043a	6a 04		 push	 4
  0043c	8b ce		 mov	 ecx, esi
  0043e	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L114022:
  00443	66 3b c5	 cmp	 ax, bp
  00446	74 0a		 je	 SHORT $L114023
  00448	66 3d 01 00	 cmp	 ax, 1
  0044c	0f 85 e9 01 00
	00		 jne	 $L140741
$L114023:

; 2027 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_wValue[0])

  00452	3b dd		 cmp	 ebx, ebp
  00454	89 ae 74 08 00
	00		 mov	 DWORD PTR [esi+2164], ebp
  0045a	75 12		 jne	 SHORT $L114024
  0045c	8d 8e f0 15 00
	00		 lea	 ecx, DWORD PTR [esi+5616]
  00462	51		 push	 ecx
  00463	6a 1a		 push	 26			; 0000001aH
  00465	6a 04		 push	 4
  00467	8b ce		 mov	 ecx, esi
  00469	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L114024:
  0046e	66 3b c5	 cmp	 ax, bp
  00471	74 0a		 je	 SHORT $L114025
  00473	66 3d 01 00	 cmp	 ax, 1
  00477	0f 85 be 01 00
	00		 jne	 $L140741
$L114025:

; 2028 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_wValue[1])

  0047d	3b dd		 cmp	 ebx, ebp
  0047f	89 ae 78 08 00
	00		 mov	 DWORD PTR [esi+2168], ebp
  00485	75 12		 jne	 SHORT $L114026
  00487	8d 96 f2 15 00
	00		 lea	 edx, DWORD PTR [esi+5618]
  0048d	52		 push	 edx
  0048e	6a 1b		 push	 27			; 0000001bH
  00490	6a 04		 push	 4
  00492	8b ce		 mov	 ecx, esi
  00494	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L114026:
  00499	66 3b c5	 cmp	 ax, bp
  0049c	74 0a		 je	 SHORT $L114027
  0049e	66 3d 01 00	 cmp	 ax, 1
  004a2	0f 85 93 01 00
	00		 jne	 $L140741
$L114027:

; 2029 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_wValue[2])

  004a8	3b dd		 cmp	 ebx, ebp
  004aa	89 ae 7c 08 00
	00		 mov	 DWORD PTR [esi+2172], ebp
  004b0	75 12		 jne	 SHORT $L114028
  004b2	8d 86 f4 15 00
	00		 lea	 eax, DWORD PTR [esi+5620]
  004b8	50		 push	 eax
  004b9	6a 1c		 push	 28			; 0000001cH
  004bb	6a 04		 push	 4
  004bd	8b ce		 mov	 ecx, esi
  004bf	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L114028:
  004c4	66 3b c5	 cmp	 ax, bp
  004c7	74 0a		 je	 SHORT $L114029
  004c9	66 3d 01 00	 cmp	 ax, 1
  004cd	0f 85 68 01 00
	00		 jne	 $L140741
$L114029:

; 2030 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_wValue[3])

  004d3	3b dd		 cmp	 ebx, ebp
  004d5	89 ae 80 08 00
	00		 mov	 DWORD PTR [esi+2176], ebp
  004db	75 12		 jne	 SHORT $L114030
  004dd	8d 8e f6 15 00
	00		 lea	 ecx, DWORD PTR [esi+5622]
  004e3	51		 push	 ecx
  004e4	6a 1d		 push	 29			; 0000001dH
  004e6	6a 04		 push	 4
  004e8	8b ce		 mov	 ecx, esi
  004ea	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L114030:
  004ef	66 3b c5	 cmp	 ax, bp
  004f2	74 0a		 je	 SHORT $L114031
  004f4	66 3d 01 00	 cmp	 ax, 1
  004f8	0f 85 3d 01 00
	00		 jne	 $L140741
$L114031:

; 2031 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_wValue[4])

  004fe	3b dd		 cmp	 ebx, ebp
  00500	89 ae 84 08 00
	00		 mov	 DWORD PTR [esi+2180], ebp
  00506	75 12		 jne	 SHORT $L114032
  00508	8d 96 f8 15 00
	00		 lea	 edx, DWORD PTR [esi+5624]
  0050e	52		 push	 edx
  0050f	6a 1e		 push	 30			; 0000001eH
  00511	6a 04		 push	 4
  00513	8b ce		 mov	 ecx, esi
  00515	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L114032:
  0051a	66 3b c5	 cmp	 ax, bp
  0051d	74 0a		 je	 SHORT $L114033
  0051f	66 3d 01 00	 cmp	 ax, 1
  00523	0f 85 12 01 00
	00		 jne	 $L140741
$L114033:

; 2032 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_wValue[5])

  00529	3b dd		 cmp	 ebx, ebp
  0052b	89 ae 88 08 00
	00		 mov	 DWORD PTR [esi+2184], ebp
  00531	75 12		 jne	 SHORT $L114034
  00533	8d 86 fa 15 00
	00		 lea	 eax, DWORD PTR [esi+5626]
  00539	50		 push	 eax
  0053a	6a 1f		 push	 31			; 0000001fH
  0053c	6a 04		 push	 4
  0053e	8b ce		 mov	 ecx, esi
  00540	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L114034:
  00545	66 3b c5	 cmp	 ax, bp
  00548	74 0a		 je	 SHORT $L114035
  0054a	66 3d 01 00	 cmp	 ax, 1
  0054e	0f 85 e7 00 00
	00		 jne	 $L140741
$L114035:

; 2033 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_dwExtValue[0])

  00554	3b dd		 cmp	 ebx, ebp
  00556	89 ae 8c 08 00
	00		 mov	 DWORD PTR [esi+2188], ebp
  0055c	75 12		 jne	 SHORT $L114036
  0055e	8d 8e fc 15 00
	00		 lea	 ecx, DWORD PTR [esi+5628]
  00564	51		 push	 ecx
  00565	6a 20		 push	 32			; 00000020H
  00567	6a 04		 push	 4
  00569	8b ce		 mov	 ecx, esi
  0056b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114036:
  00570	66 3b c5	 cmp	 ax, bp
  00573	74 0a		 je	 SHORT $L114037
  00575	66 3d 01 00	 cmp	 ax, 1
  00579	0f 85 bc 00 00
	00		 jne	 $L140741
$L114037:

; 2034 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_dwExtValue[1])

  0057f	3b dd		 cmp	 ebx, ebp
  00581	89 ae 90 08 00
	00		 mov	 DWORD PTR [esi+2192], ebp
  00587	75 12		 jne	 SHORT $L114038
  00589	8d 96 00 16 00
	00		 lea	 edx, DWORD PTR [esi+5632]
  0058f	52		 push	 edx
  00590	6a 21		 push	 33			; 00000021H
  00592	6a 04		 push	 4
  00594	8b ce		 mov	 ecx, esi
  00596	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114038:
  0059b	66 3b c5	 cmp	 ax, bp
  0059e	74 0a		 je	 SHORT $L114039
  005a0	66 3d 01 00	 cmp	 ax, 1
  005a4	0f 85 91 00 00
	00		 jne	 $L140741
$L114039:

; 2035 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_dwExtValue[2])

  005aa	3b dd		 cmp	 ebx, ebp
  005ac	89 ae 94 08 00
	00		 mov	 DWORD PTR [esi+2196], ebp
  005b2	75 12		 jne	 SHORT $L114040
  005b4	8d 86 04 16 00
	00		 lea	 eax, DWORD PTR [esi+5636]
  005ba	50		 push	 eax
  005bb	6a 22		 push	 34			; 00000022H
  005bd	6a 04		 push	 4
  005bf	8b ce		 mov	 ecx, esi
  005c1	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114040:
  005c6	66 3b c5	 cmp	 ax, bp
  005c9	74 06		 je	 SHORT $L114041
  005cb	66 3d 01 00	 cmp	 ax, 1
  005cf	75 6a		 jne	 SHORT $L140741
$L114041:

; 2036 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_dwExtValue[3])

  005d1	3b dd		 cmp	 ebx, ebp
  005d3	89 ae 98 08 00
	00		 mov	 DWORD PTR [esi+2200], ebp
  005d9	75 12		 jne	 SHORT $L114042
  005db	8d 8e 08 16 00
	00		 lea	 ecx, DWORD PTR [esi+5640]
  005e1	51		 push	 ecx
  005e2	6a 23		 push	 35			; 00000023H
  005e4	6a 04		 push	 4
  005e6	8b ce		 mov	 ecx, esi
  005e8	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114042:
  005ed	66 3b c5	 cmp	 ax, bp
  005f0	74 06		 je	 SHORT $L114043
  005f2	66 3d 01 00	 cmp	 ax, 1
  005f6	75 43		 jne	 SHORT $L140741
$L114043:

; 2037 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_dwExtValue[4])

  005f8	3b dd		 cmp	 ebx, ebp
  005fa	89 ae 9c 08 00
	00		 mov	 DWORD PTR [esi+2204], ebp
  00600	75 12		 jne	 SHORT $L114044
  00602	8d 96 0c 16 00
	00		 lea	 edx, DWORD PTR [esi+5644]
  00608	52		 push	 edx
  00609	6a 24		 push	 36			; 00000024H
  0060b	6a 04		 push	 4
  0060d	8b ce		 mov	 ecx, esi
  0060f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114044:
  00614	66 3b c5	 cmp	 ax, bp
  00617	74 06		 je	 SHORT $L114045
  00619	66 3d 01 00	 cmp	 ax, 1
  0061d	75 1c		 jne	 SHORT $L140741
$L114045:

; 2038 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_item.m_dwExtValue[5])

  0061f	3b dd		 cmp	 ebx, ebp
  00621	89 ae a0 08 00
	00		 mov	 DWORD PTR [esi+2208], ebp
  00627	75 12		 jne	 SHORT $L140741
  00629	8d 86 10 16 00
	00		 lea	 eax, DWORD PTR [esi+5648]
  0062f	50		 push	 eax
  00630	6a 25		 push	 37			; 00000025H
  00632	6a 04		 push	 4
  00634	8b ce		 mov	 ecx, esi
  00636	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L140741:
  0063b	5f		 pop	 edi
$L113970:
  0063c	5e		 pop	 esi
  0063d	5d		 pop	 ebp
  0063e	5b		 pop	 ebx

; 2039 : END_PARAM()

  0063f	c2 04 00	 ret	 4
?BindParameters@CSPGetReservedPost@@UAEFH@Z ENDP	; CSPGetReservedPost::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGetReservedPost@@UAE@XZ			; CSPGetReservedPost::~CSPGetReservedPost
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGetReservedPost@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGetReservedPost@@UAEPAXI@Z PROC NEAR		; CSPGetReservedPost::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGetReservedPost@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L140745
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L140745:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGetReservedPost@@UAEPAXI@Z ENDP			; CSPGetReservedPost::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGetReservedPost@@UAE@XZ
_TEXT	SEGMENT
??1CSPGetReservedPost@@UAE@XZ PROC NEAR			; CSPGetReservedPost::~CSPGetReservedPost, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGetReservedPost@@UAE@XZ ENDP			; CSPGetReservedPost::~CSPGetReservedPost
_TEXT	ENDS
PUBLIC	??0CSPClearMapCurrentUser@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPClearMapCurrentUser::CSPClearMapCurrentUser
PUBLIC	?GetNumParam@CSPClearMapCurrentUser@@UAEHXZ	; CSPClearMapCurrentUser::GetNumParam
PUBLIC	?BindParameters@CSPClearMapCurrentUser@@UAEFH@Z	; CSPClearMapCurrentUser::BindParameters
PUBLIC	??_7CSPClearMapCurrentUser@@6B@			; CSPClearMapCurrentUser::`vftable'
PUBLIC	??_GCSPClearMapCurrentUser@@UAEPAXI@Z		; CSPClearMapCurrentUser::`scalar deleting destructor'
PUBLIC	??_C@_0CG@JDFMGLJO@?5?$HL?5CALL?5TClearMapCurrentUser?$CI?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPClearMapCurrentUser@@UAEPAXI@Z:NEAR	; CSPClearMapCurrentUser::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T140928 DD	0ffffffffH
	DD	FLAT:$L140754
$T140925 DD	019930520H
	DD	01H
	DD	FLAT:$T140928
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CG@JDFMGLJO@?5?$HL?5CALL?5TClearMapCurrentUser?$CI?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CG@JDFMGLJO@?5?$HL?5CALL?5TClearMapCurrentUser?$CI?$DP?0?$DP@ DB ' '
	DB	'{ CALL TClearMapCurrentUser(?,?,?) }', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPClearMapCurrentUser@@6B@
CONST	SEGMENT
??_7CSPClearMapCurrentUser@@6B@ DD FLAT:??_ECSPClearMapCurrentUser@@UAEPAXI@Z ; CSPClearMapCurrentUser::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPClearMapCurrentUser@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPClearMapCurrentUser@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPClearMapCurrentUser@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T140753 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPClearMapCurrentUser@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPClearMapCurrentUser::CSPClearMapCurrentUser, COMDAT
; _this$ = ecx

; 2050 : DEF_QUERY( CSPClearMapCurrentUser, _T( " { CALL TClearMapCurrentUser(?,?,?) }" ) )

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPClearMapCurrentUser@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CG@JDFMGLJO@?5?$HL?5CALL?5TClearMapCurrentUser?$CI?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T140753[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPClearMapCurrentUser@@6B@
  0005e	72 0d		 jb	 SHORT $L140926
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L140926:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L140754:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPClearMapCurrentUser@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T140925
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPClearMapCurrentUser@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPClearMapCurrentUser::CSPClearMapCurrentUser
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPClearMapCurrentUser@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPClearMapCurrentUser@@UAEHXZ PROC NEAR	; CSPClearMapCurrentUser::GetNumParam, COMDAT
; _this$ = ecx

; 2052 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPClearMapCurrentUser@@UAEHXZ ENDP	; CSPClearMapCurrentUser::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPClearMapCurrentUser@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPClearMapCurrentUser@@UAEFH@Z PROC NEAR ; CSPClearMapCurrentUser::BindParameters, COMDAT
; _this$ = ecx

; 2052 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 2053 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bGroupID )

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L114093
  00014	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L114093
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L114088
$L114093:

; 2054 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bServerID )

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L114094
  0003d	8d 8e 31 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3121]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L114094:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L114095
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L114088
$L114095:

; 2055 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bSvrType)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L114088
  00068	8d 96 32 0c 00
	00		 lea	 edx, DWORD PTR [esi+3122]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L114088:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 2056 : END_PARAM()

  0007c	c2 04 00	 ret	 4
?BindParameters@CSPClearMapCurrentUser@@UAEFH@Z ENDP	; CSPClearMapCurrentUser::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPClearMapCurrentUser@@UAE@XZ		; CSPClearMapCurrentUser::~CSPClearMapCurrentUser
; Function compile flags: /Ogty
;	COMDAT ??_GCSPClearMapCurrentUser@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPClearMapCurrentUser@@UAEPAXI@Z PROC NEAR		; CSPClearMapCurrentUser::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPClearMapCurrentUser@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L140940
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L140940:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPClearMapCurrentUser@@UAEPAXI@Z ENDP		; CSPClearMapCurrentUser::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPClearMapCurrentUser@@UAE@XZ
_TEXT	SEGMENT
??1CSPClearMapCurrentUser@@UAE@XZ PROC NEAR		; CSPClearMapCurrentUser::~CSPClearMapCurrentUser, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPClearMapCurrentUser@@UAE@XZ ENDP			; CSPClearMapCurrentUser::~CSPClearMapCurrentUser
_TEXT	ENDS
PUBLIC	??0CSPGetNation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetNation::CSPGetNation
PUBLIC	?GetNumParam@CSPGetNation@@UAEHXZ		; CSPGetNation::GetNumParam
PUBLIC	?BindParameters@CSPGetNation@@UAEFH@Z		; CSPGetNation::BindParameters
PUBLIC	??_7CSPGetNation@@6B@				; CSPGetNation::`vftable'
PUBLIC	??_GCSPGetNation@@UAEPAXI@Z			; CSPGetNation::`scalar deleting destructor'
PUBLIC	??_C@_0BF@MGHBOKLC@?$HLCALL?5TGetNation?$CI?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPGetNation@@UAEPAXI@Z:NEAR		; CSPGetNation::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T141123 DD	0ffffffffH
	DD	FLAT:$L140949
$T141120 DD	019930520H
	DD	01H
	DD	FLAT:$T141123
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BF@MGHBOKLC@?$HLCALL?5TGetNation?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BF@MGHBOKLC@?$HLCALL?5TGetNation?$CI?$DP?$CJ?$HN?$AA@ DB '{CALL TG'
	DB	'etNation(?)}', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CSPGetNation@@6B@
CONST	SEGMENT
??_7CSPGetNation@@6B@ DD FLAT:??_ECSPGetNation@@UAEPAXI@Z ; CSPGetNation::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGetNation@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGetNation@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGetNation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T140948 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGetNation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGetNation::CSPGetNation, COMDAT
; _this$ = ecx

; 2064 : DEF_QUERY(CSPGetNation, _T("{CALL TGetNation(?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGetNation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@MGHBOKLC@?$HLCALL?5TGetNation?$CI?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T140948[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGetNation@@6B@
  0005e	72 0d		 jb	 SHORT $L141121
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L141121:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L140949:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGetNation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T141120
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGetNation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGetNation::CSPGetNation
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGetNation@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGetNation@@UAEHXZ PROC NEAR		; CSPGetNation::GetNumParam, COMDAT
; _this$ = ecx

; 2066 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CSPGetNation@@UAEHXZ ENDP			; CSPGetNation::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetNation@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGetNation@@UAEFH@Z PROC NEAR		; CSPGetNation::BindParameters, COMDAT
; _this$ = ecx

; 2067 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_bNation)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L114135
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 04		 push	 4
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L114135:

; 2068 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CSPGetNation@@UAEFH@Z ENDP		; CSPGetNation::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGetNation@@UAE@XZ				; CSPGetNation::~CSPGetNation
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGetNation@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGetNation@@UAEPAXI@Z PROC NEAR			; CSPGetNation::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGetNation@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L141135
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L141135:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGetNation@@UAEPAXI@Z ENDP			; CSPGetNation::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGetNation@@UAE@XZ
_TEXT	SEGMENT
??1CSPGetNation@@UAE@XZ PROC NEAR			; CSPGetNation::~CSPGetNation, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGetNation@@UAE@XZ ENDP				; CSPGetNation::~CSPGetNation
_TEXT	ENDS
PUBLIC	??0CSPItemStateChange@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPItemStateChange::CSPItemStateChange
PUBLIC	?GetNumParam@CSPItemStateChange@@UAEHXZ		; CSPItemStateChange::GetNumParam
PUBLIC	?BindParameters@CSPItemStateChange@@UAEFH@Z	; CSPItemStateChange::BindParameters
PUBLIC	??_7CSPItemStateChange@@6B@			; CSPItemStateChange::`vftable'
PUBLIC	??_GCSPItemStateChange@@UAEPAXI@Z		; CSPItemStateChange::`scalar deleting destructor'
PUBLIC	??_C@_0CC@FPFMIJGD@?$HL?5?$DP?5?$DN?5CALL?5TItemStateChange?$CI?$DP?0?$DP?$CJ@ ; `string'
EXTRN	??_ECSPItemStateChange@@UAEPAXI@Z:NEAR		; CSPItemStateChange::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T141318 DD	0ffffffffH
	DD	FLAT:$L141144
$T141315 DD	019930520H
	DD	01H
	DD	FLAT:$T141318
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CC@FPFMIJGD@?$HL?5?$DP?5?$DN?5CALL?5TItemStateChange?$CI?$DP?0?$DP?$CJ@
CONST	SEGMENT
??_C@_0CC@FPFMIJGD@?$HL?5?$DP?5?$DN?5CALL?5TItemStateChange?$CI?$DP?0?$DP?$CJ@ DB '{'
	DB	' ? = CALL TItemStateChange(?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPItemStateChange@@6B@
CONST	SEGMENT
??_7CSPItemStateChange@@6B@ DD FLAT:??_ECSPItemStateChange@@UAEPAXI@Z ; CSPItemStateChange::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPItemStateChange@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPItemStateChange@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPItemStateChange@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T141143 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPItemStateChange@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPItemStateChange::CSPItemStateChange, COMDAT
; _this$ = ecx

; 2078 : DEF_QUERY(CSPItemStateChange, _T("{ ? = CALL TItemStateChange(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPItemStateChange@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CC@FPFMIJGD@?$HL?5?$DP?5?$DN?5CALL?5TItemStateChange?$CI?$DP?0?$DP?$CJ@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T141143[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPItemStateChange@@6B@
  0005e	72 0d		 jb	 SHORT $L141316
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L141316:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L141144:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPItemStateChange@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T141315
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPItemStateChange@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPItemStateChange::CSPItemStateChange
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPItemStateChange@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPItemStateChange@@UAEHXZ PROC NEAR	; CSPItemStateChange::GetNumParam, COMDAT
; _this$ = ecx

; 2080 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPItemStateChange@@UAEHXZ ENDP		; CSPItemStateChange::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPItemStateChange@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPItemStateChange@@UAEFH@Z PROC NEAR	; CSPItemStateChange::BindParameters, COMDAT
; _this$ = ecx

; 2080 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 2081 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_nRET)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L114185
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 04		 push	 4
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L114185
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L114180
$L114185:

; 2082 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wItemID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L114186
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L114186:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L114187
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L114180
$L114187:

; 2083 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bInitState)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L114180
  00068	8d 96 32 0c 00
	00		 lea	 edx, DWORD PTR [esi+3122]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L114180:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 2084 : END_PARAM()

  0007c	c2 04 00	 ret	 4
?BindParameters@CSPItemStateChange@@UAEFH@Z ENDP	; CSPItemStateChange::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPItemStateChange@@UAE@XZ			; CSPItemStateChange::~CSPItemStateChange
; Function compile flags: /Ogty
;	COMDAT ??_GCSPItemStateChange@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPItemStateChange@@UAEPAXI@Z PROC NEAR		; CSPItemStateChange::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPItemStateChange@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L141330
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L141330:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPItemStateChange@@UAEPAXI@Z ENDP			; CSPItemStateChange::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPItemStateChange@@UAE@XZ
_TEXT	SEGMENT
??1CSPItemStateChange@@UAE@XZ PROC NEAR			; CSPItemStateChange::~CSPItemStateChange, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPItemStateChange@@UAE@XZ ENDP			; CSPItemStateChange::~CSPItemStateChange
_TEXT	ENDS
PUBLIC	??0CSPSaveGuildPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveGuildPvPoint::CSPSaveGuildPvPoint
PUBLIC	?GetNumParam@CSPSaveGuildPvPoint@@UAEHXZ	; CSPSaveGuildPvPoint::GetNumParam
PUBLIC	?BindParameters@CSPSaveGuildPvPoint@@UAEFH@Z	; CSPSaveGuildPvPoint::BindParameters
PUBLIC	??_7CSPSaveGuildPvPoint@@6B@			; CSPSaveGuildPvPoint::`vftable'
PUBLIC	??_GCSPSaveGuildPvPoint@@UAEPAXI@Z		; CSPSaveGuildPvPoint::`scalar deleting destructor'
PUBLIC	??_C@_0CD@HEHDCLHG@?$HL?5CALL?5TSaveGuildPvPoint?$CI?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPSaveGuildPvPoint@@UAEPAXI@Z:NEAR		; CSPSaveGuildPvPoint::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T141513 DD	0ffffffffH
	DD	FLAT:$L141339
$T141510 DD	019930520H
	DD	01H
	DD	FLAT:$T141513
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CD@HEHDCLHG@?$HL?5CALL?5TSaveGuildPvPoint?$CI?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CD@HEHDCLHG@?$HL?5CALL?5TSaveGuildPvPoint?$CI?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	' CALL TSaveGuildPvPoint(?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveGuildPvPoint@@6B@
CONST	SEGMENT
??_7CSPSaveGuildPvPoint@@6B@ DD FLAT:??_ECSPSaveGuildPvPoint@@UAEPAXI@Z ; CSPSaveGuildPvPoint::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveGuildPvPoint@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveGuildPvPoint@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveGuildPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T141338 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveGuildPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveGuildPvPoint::CSPSaveGuildPvPoint, COMDAT
; _this$ = ecx

; 2095 : DEF_QUERY(CSPSaveGuildPvPoint, _T("{ CALL TSaveGuildPvPoint(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveGuildPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CD@HEHDCLHG@?$HL?5CALL?5TSaveGuildPvPoint?$CI?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T141338[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveGuildPvPoint@@6B@
  0005e	72 0d		 jb	 SHORT $L141511
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L141511:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L141339:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveGuildPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T141510
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveGuildPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveGuildPvPoint::CSPSaveGuildPvPoint
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveGuildPvPoint@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveGuildPvPoint@@UAEHXZ PROC NEAR	; CSPSaveGuildPvPoint::GetNumParam, COMDAT
; _this$ = ecx

; 2097 : BEGIN_PARAM(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumParam@CSPSaveGuildPvPoint@@UAEHXZ ENDP		; CSPSaveGuildPvPoint::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveGuildPvPoint@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveGuildPvPoint@@UAEFH@Z PROC NEAR	; CSPSaveGuildPvPoint::BindParameters, COMDAT
; _this$ = ecx

; 2097 : BEGIN_PARAM(4)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 2098 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1b		 jne	 SHORT $L114235
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 06		 je	 SHORT $L114235
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	75 6a		 jne	 SHORT $L114230
$L114235:

; 2099 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwTotalPoint)

  00032	3b fb		 cmp	 edi, ebx
  00034	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003a	75 12		 jne	 SHORT $L114236
  0003c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00042	51		 push	 ecx
  00043	6a 02		 push	 2
  00045	6a 01		 push	 1
  00047	8b ce		 mov	 ecx, esi
  00049	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114236:
  0004e	66 3b c3	 cmp	 ax, bx
  00051	74 06		 je	 SHORT $L114237
  00053	66 3d 01 00	 cmp	 ax, 1
  00057	75 43		 jne	 SHORT $L114230
$L114237:

; 2100 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwUseablePoint)

  00059	3b fb		 cmp	 edi, ebx
  0005b	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00061	75 12		 jne	 SHORT $L114238
  00063	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00069	52		 push	 edx
  0006a	6a 03		 push	 3
  0006c	6a 01		 push	 1
  0006e	8b ce		 mov	 ecx, esi
  00070	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114238:
  00075	66 3b c3	 cmp	 ax, bx
  00078	74 06		 je	 SHORT $L114239
  0007a	66 3d 01 00	 cmp	 ax, 1
  0007e	75 1c		 jne	 SHORT $L114230
$L114239:

; 2101 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwMonthPoint)

  00080	3b fb		 cmp	 edi, ebx
  00082	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00088	75 12		 jne	 SHORT $L114230
  0008a	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00090	50		 push	 eax
  00091	6a 04		 push	 4
  00093	6a 01		 push	 1
  00095	8b ce		 mov	 ecx, esi
  00097	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114230:
  0009c	5f		 pop	 edi
  0009d	5e		 pop	 esi
  0009e	5b		 pop	 ebx

; 2102 : END_PARAM()

  0009f	c2 04 00	 ret	 4
?BindParameters@CSPSaveGuildPvPoint@@UAEFH@Z ENDP	; CSPSaveGuildPvPoint::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveGuildPvPoint@@UAE@XZ			; CSPSaveGuildPvPoint::~CSPSaveGuildPvPoint
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveGuildPvPoint@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveGuildPvPoint@@UAEPAXI@Z PROC NEAR		; CSPSaveGuildPvPoint::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveGuildPvPoint@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L141525
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L141525:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveGuildPvPoint@@UAEPAXI@Z ENDP			; CSPSaveGuildPvPoint::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveGuildPvPoint@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveGuildPvPoint@@UAE@XZ PROC NEAR		; CSPSaveGuildPvPoint::~CSPSaveGuildPvPoint, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveGuildPvPoint@@UAE@XZ ENDP			; CSPSaveGuildPvPoint::~CSPSaveGuildPvPoint
_TEXT	ENDS
PUBLIC	??0CSPSaveGuildPointReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveGuildPointReward::CSPSaveGuildPointReward
PUBLIC	?GetNumParam@CSPSaveGuildPointReward@@UAEHXZ	; CSPSaveGuildPointReward::GetNumParam
PUBLIC	?BindParameters@CSPSaveGuildPointReward@@UAEFH@Z ; CSPSaveGuildPointReward::BindParameters
PUBLIC	??_7CSPSaveGuildPointReward@@6B@		; CSPSaveGuildPointReward::`vftable'
PUBLIC	??_GCSPSaveGuildPointReward@@UAEPAXI@Z		; CSPSaveGuildPointReward::`scalar deleting destructor'
PUBLIC	??_C@_0CJ@PLFELCAG@?$HL?5CALL?5TSaveGuildPointReward?$CI?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPSaveGuildPointReward@@UAEPAXI@Z:NEAR	; CSPSaveGuildPointReward::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T141708 DD	0ffffffffH
	DD	FLAT:$L141534
$T141705 DD	019930520H
	DD	01H
	DD	FLAT:$T141708
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CJ@PLFELCAG@?$HL?5CALL?5TSaveGuildPointReward?$CI?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CJ@PLFELCAG@?$HL?5CALL?5TSaveGuildPointReward?$CI?$DP?0?$DP@ DB '{'
	DB	' CALL TSaveGuildPointReward(?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveGuildPointReward@@6B@
CONST	SEGMENT
??_7CSPSaveGuildPointReward@@6B@ DD FLAT:??_ECSPSaveGuildPointReward@@UAEPAXI@Z ; CSPSaveGuildPointReward::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveGuildPointReward@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveGuildPointReward@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveGuildPointReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T141533 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveGuildPointReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveGuildPointReward::CSPSaveGuildPointReward, COMDAT
; _this$ = ecx

; 2114 : DEF_QUERY(CSPSaveGuildPointReward, _T("{ CALL TSaveGuildPointReward(?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveGuildPointReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CJ@PLFELCAG@?$HL?5CALL?5TSaveGuildPointReward?$CI?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T141533[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveGuildPointReward@@6B@
  0005e	72 0d		 jb	 SHORT $L141706
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L141706:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L141534:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveGuildPointReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T141705
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveGuildPointReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveGuildPointReward::CSPSaveGuildPointReward
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveGuildPointReward@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveGuildPointReward@@UAEHXZ PROC NEAR	; CSPSaveGuildPointReward::GetNumParam, COMDAT
; _this$ = ecx

; 2116 : BEGIN_PARAM(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumParam@CSPSaveGuildPointReward@@UAEHXZ ENDP	; CSPSaveGuildPointReward::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveGuildPointReward@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveGuildPointReward@@UAEFH@Z PROC NEAR ; CSPSaveGuildPointReward::BindParameters, COMDAT
; _this$ = ecx

; 2116 : BEGIN_PARAM(5)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 2117 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L114288
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L114288
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 97 00 00
	00		 jne	 $L114283
$L114288:

; 2118 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwPoint)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L114289
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114289:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 06		 je	 SHORT $L114290
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	75 70		 jne	 SHORT $L114283
$L114290:

; 2119 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szName)

  0005d	3b fb		 cmp	 edi, ebx
  0005f	c7 86 18 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2072], -3 ; fffffffdH
  00069	75 14		 jne	 SHORT $L114291
  0006b	6a 32		 push	 50			; 00000032H
  0006d	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00073	52		 push	 edx
  00074	6a 03		 push	 3
  00076	6a 01		 push	 1
  00078	8b ce		 mov	 ecx, esi
  0007a	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L114291:
  0007f	66 3b c3	 cmp	 ax, bx
  00082	74 06		 je	 SHORT $L114292
  00084	66 3d 01 00	 cmp	 ax, 1
  00088	75 43		 jne	 SHORT $L114283
$L114292:

; 2120 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwTotalPoint)

  0008a	3b fb		 cmp	 edi, ebx
  0008c	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00092	75 12		 jne	 SHORT $L114293
  00094	8d 86 68 0c 00
	00		 lea	 eax, DWORD PTR [esi+3176]
  0009a	50		 push	 eax
  0009b	6a 04		 push	 4
  0009d	6a 01		 push	 1
  0009f	8b ce		 mov	 ecx, esi
  000a1	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114293:
  000a6	66 3b c3	 cmp	 ax, bx
  000a9	74 06		 je	 SHORT $L114294
  000ab	66 3d 01 00	 cmp	 ax, 1
  000af	75 1c		 jne	 SHORT $L114283
$L114294:

; 2121 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwUseablePoint)

  000b1	3b fb		 cmp	 edi, ebx
  000b3	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b9	75 12		 jne	 SHORT $L114283
  000bb	8d 8e 6c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3180]
  000c1	51		 push	 ecx
  000c2	6a 05		 push	 5
  000c4	6a 01		 push	 1
  000c6	8b ce		 mov	 ecx, esi
  000c8	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114283:
  000cd	5f		 pop	 edi
  000ce	5e		 pop	 esi
  000cf	5b		 pop	 ebx

; 2122 : END_PARAM()

  000d0	c2 04 00	 ret	 4
?BindParameters@CSPSaveGuildPointReward@@UAEFH@Z ENDP	; CSPSaveGuildPointReward::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveGuildPointReward@@UAE@XZ		; CSPSaveGuildPointReward::~CSPSaveGuildPointReward
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveGuildPointReward@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveGuildPointReward@@UAEPAXI@Z PROC NEAR	; CSPSaveGuildPointReward::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveGuildPointReward@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L141720
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L141720:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveGuildPointReward@@UAEPAXI@Z ENDP		; CSPSaveGuildPointReward::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveGuildPointReward@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveGuildPointReward@@UAE@XZ PROC NEAR		; CSPSaveGuildPointReward::~CSPSaveGuildPointReward, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveGuildPointReward@@UAE@XZ ENDP			; CSPSaveGuildPointReward::~CSPSaveGuildPointReward
_TEXT	ENDS
PUBLIC	??0CSPSaveGuildPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveGuildPvPRecord::CSPSaveGuildPvPRecord
PUBLIC	?GetNumParam@CSPSaveGuildPvPRecord@@UAEHXZ	; CSPSaveGuildPvPRecord::GetNumParam
PUBLIC	?BindParameters@CSPSaveGuildPvPRecord@@UAEFH@Z	; CSPSaveGuildPvPRecord::BindParameters
PUBLIC	??_7CSPSaveGuildPvPRecord@@6B@			; CSPSaveGuildPvPRecord::`vftable'
PUBLIC	??_GCSPSaveGuildPvPRecord@@UAEPAXI@Z		; CSPSaveGuildPvPRecord::`scalar deleting destructor'
PUBLIC	??_C@_0DH@MNLJPKCK@?$HL?5CALL?5TSaveGuildPvPRecord?$CI?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPSaveGuildPvPRecord@@UAEPAXI@Z:NEAR	; CSPSaveGuildPvPRecord::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T141903 DD	0ffffffffH
	DD	FLAT:$L141729
$T141900 DD	019930520H
	DD	01H
	DD	FLAT:$T141903
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DH@MNLJPKCK@?$HL?5CALL?5TSaveGuildPvPRecord?$CI?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0DH@MNLJPKCK@?$HL?5CALL?5TSaveGuildPvPRecord?$CI?$DP?0?$DP?0?$DP@ DB '{'
	DB	' CALL TSaveGuildPvPRecord(?,?,?,?,?,?,?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveGuildPvPRecord@@6B@
CONST	SEGMENT
??_7CSPSaveGuildPvPRecord@@6B@ DD FLAT:??_ECSPSaveGuildPvPRecord@@UAEPAXI@Z ; CSPSaveGuildPvPRecord::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveGuildPvPRecord@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveGuildPvPRecord@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveGuildPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T141728 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveGuildPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveGuildPvPRecord::CSPSaveGuildPvPRecord, COMDAT
; _this$ = ecx

; 2135 : DEF_QUERY(CSPSaveGuildPvPRecord, _T("{ CALL TSaveGuildPvPRecord(?,?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveGuildPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DH@MNLJPKCK@?$HL?5CALL?5TSaveGuildPvPRecord?$CI?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T141728[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveGuildPvPRecord@@6B@
  0005e	72 0d		 jb	 SHORT $L141901
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L141901:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L141729:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveGuildPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T141900
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveGuildPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveGuildPvPRecord::CSPSaveGuildPvPRecord
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveGuildPvPRecord@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveGuildPvPRecord@@UAEHXZ PROC NEAR	; CSPSaveGuildPvPRecord::GetNumParam, COMDAT
; _this$ = ecx

; 2137 : BEGIN_PARAM(13)

  00000	b8 0d 00 00 00	 mov	 eax, 13			; 0000000dH
  00005	c3		 ret	 0
?GetNumParam@CSPSaveGuildPvPRecord@@UAEHXZ ENDP		; CSPSaveGuildPvPRecord::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveGuildPvPRecord@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveGuildPvPRecord@@UAEFH@Z PROC NEAR ; CSPSaveGuildPvPRecord::BindParameters, COMDAT
; _this$ = ecx

; 2137 : BEGIN_PARAM(13)

  00000	53		 push	 ebx
  00001	55		 push	 ebp

; 2138 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00002	8b 6c 24 0c	 mov	 ebp, DWORD PTR _bRewind$[esp+4]
  00006	33 db		 xor	 ebx, ebx
  00008	56		 push	 esi
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b eb		 cmp	 ebp, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L141915
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L141915
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 f5 00 00
	00		 jne	 $L114339
$L141915:

; 2139 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwMemberID)

  00036	3b eb		 cmp	 ebp, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L141916
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L141916:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L141917
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 ca 00 00
	00		 jne	 $L114339
$L141917:

; 2140 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwDate)

  00061	3b eb		 cmp	 ebp, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L141918
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L141918:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L141919
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 9f 00 00
	00		 jne	 $L114339
$L141919:

; 2141 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wKillCount)

  0008c	3b eb		 cmp	 ebp, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L141920
  00096	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L141920:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 06		 je	 SHORT $L141921
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	75 78		 jne	 SHORT $L114339
$L141921:

; 2142 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wDieCount)

  000b3	3b eb		 cmp	 ebp, ebx
  000b5	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bb	75 12		 jne	 SHORT $L114351
  000bd	8d 8e 3a 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3130]
  000c3	51		 push	 ecx
  000c4	6a 05		 push	 5
  000c6	6a 01		 push	 1
  000c8	8b ce		 mov	 ecx, esi
  000ca	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L114351:
  000cf	66 3b c3	 cmp	 ax, bx
  000d2	57		 push	 edi
  000d3	bf 06 00 00 00	 mov	 edi, 6
  000d8	74 06		 je	 SHORT $L114352
  000da	66 3d 01 00	 cmp	 ax, 1
  000de	75 4a		 jne	 SHORT $L141922
$L114352:

; 2143 : 	for(BYTE i=0; i<PVPE_COUNT; i++)

  000e0	32 db		 xor	 bl, bl
  000e2	eb 0c 8d a4 24
	00 00 00 00 eb
	03 8d 49 00	 npad	 14
$L114354:

; 2144 : 	{
; 2145 : 		PARAM_ENTRY(SQL_PARAM_INPUT, m_aPoint[i])

  000f0	85 ed		 test	 ebp, ebp
  000f2	0f bf d7	 movsx	 edx, di
  000f5	c7 84 96 0c 08
	00 00 00 00 00
	00		 mov	 DWORD PTR [esi+edx*4+2060], 0
  00100	75 15		 jne	 SHORT $L114357
  00102	0f b6 c3	 movzx	 eax, bl
  00105	8d 8c 86 3c 0c
	00 00		 lea	 ecx, DWORD PTR [esi+eax*4+3132]
  0010c	51		 push	 ecx
  0010d	57		 push	 edi
  0010e	6a 01		 push	 1
  00110	8b ce		 mov	 ecx, esi
  00112	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114357:
  00117	47		 inc	 edi
  00118	66 85 c0	 test	 ax, ax
  0011b	74 06		 je	 SHORT $L114355
  0011d	66 3d 01 00	 cmp	 ax, 1
  00121	75 07		 jne	 SHORT $L141922
$L114355:

; 2143 : 	for(BYTE i=0; i<PVPE_COUNT; i++)

  00123	fe c3		 inc	 bl
  00125	80 fb 08	 cmp	 bl, 8
  00128	72 c6		 jb	 SHORT $L114354
$L141922:
  0012a	5f		 pop	 edi
$L114339:
  0012b	5e		 pop	 esi
  0012c	5d		 pop	 ebp
  0012d	5b		 pop	 ebx

; 2146 : 	}
; 2147 : END_PARAM()

  0012e	c2 04 00	 ret	 4
?BindParameters@CSPSaveGuildPvPRecord@@UAEFH@Z ENDP	; CSPSaveGuildPvPRecord::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveGuildPvPRecord@@UAE@XZ		; CSPSaveGuildPvPRecord::~CSPSaveGuildPvPRecord
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveGuildPvPRecord@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveGuildPvPRecord@@UAEPAXI@Z PROC NEAR		; CSPSaveGuildPvPRecord::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveGuildPvPRecord@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L141926
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L141926:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveGuildPvPRecord@@UAEPAXI@Z ENDP		; CSPSaveGuildPvPRecord::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveGuildPvPRecord@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveGuildPvPRecord@@UAE@XZ PROC NEAR		; CSPSaveGuildPvPRecord::~CSPSaveGuildPvPRecord, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveGuildPvPRecord@@UAE@XZ ENDP			; CSPSaveGuildPvPRecord::~CSPSaveGuildPvPRecord
_TEXT	ENDS
PUBLIC	??0CSPSaveCastleApplicant@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveCastleApplicant::CSPSaveCastleApplicant
PUBLIC	?GetNumParam@CSPSaveCastleApplicant@@UAEHXZ	; CSPSaveCastleApplicant::GetNumParam
PUBLIC	?BindParameters@CSPSaveCastleApplicant@@UAEFH@Z	; CSPSaveCastleApplicant::BindParameters
PUBLIC	??_7CSPSaveCastleApplicant@@6B@			; CSPSaveCastleApplicant::`vftable'
PUBLIC	??_GCSPSaveCastleApplicant@@UAEPAXI@Z		; CSPSaveCastleApplicant::`scalar deleting destructor'
PUBLIC	??_C@_0CG@KADBKDI@?5?$HL?5CALL?5TSaveCastleApplicant?$CI?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPSaveCastleApplicant@@UAEPAXI@Z:NEAR	; CSPSaveCastleApplicant::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T142109 DD	0ffffffffH
	DD	FLAT:$L141935
$T142106 DD	019930520H
	DD	01H
	DD	FLAT:$T142109
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CG@KADBKDI@?5?$HL?5CALL?5TSaveCastleApplicant?$CI?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CG@KADBKDI@?5?$HL?5CALL?5TSaveCastleApplicant?$CI?$DP?0?$DP@ DB ' '
	DB	'{ CALL TSaveCastleApplicant(?,?,?) }', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveCastleApplicant@@6B@
CONST	SEGMENT
??_7CSPSaveCastleApplicant@@6B@ DD FLAT:??_ECSPSaveCastleApplicant@@UAEPAXI@Z ; CSPSaveCastleApplicant::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveCastleApplicant@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveCastleApplicant@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveCastleApplicant@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T141934 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveCastleApplicant@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveCastleApplicant::CSPSaveCastleApplicant, COMDAT
; _this$ = ecx

; 2157 : DEF_QUERY( CSPSaveCastleApplicant, _T(" { CALL TSaveCastleApplicant(?,?,?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveCastleApplicant@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CG@KADBKDI@?5?$HL?5CALL?5TSaveCastleApplicant?$CI?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T141934[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveCastleApplicant@@6B@
  0005e	72 0d		 jb	 SHORT $L142107
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L142107:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L141935:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveCastleApplicant@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T142106
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveCastleApplicant@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveCastleApplicant::CSPSaveCastleApplicant
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveCastleApplicant@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveCastleApplicant@@UAEHXZ PROC NEAR	; CSPSaveCastleApplicant::GetNumParam, COMDAT
; _this$ = ecx

; 2159 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPSaveCastleApplicant@@UAEHXZ ENDP	; CSPSaveCastleApplicant::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveCastleApplicant@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveCastleApplicant@@UAEFH@Z PROC NEAR ; CSPSaveCastleApplicant::BindParameters, COMDAT
; _this$ = ecx

; 2159 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 2160 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wCastle)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L114403
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L114403
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L114398
$L114403:

; 2161 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L114404
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114404:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L114405
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L114398
$L114405:

; 2162 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bCamp)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L114398
  00068	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L114398:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 2163 : END_PARAM()

  0007c	c2 04 00	 ret	 4
?BindParameters@CSPSaveCastleApplicant@@UAEFH@Z ENDP	; CSPSaveCastleApplicant::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveCastleApplicant@@UAE@XZ		; CSPSaveCastleApplicant::~CSPSaveCastleApplicant
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveCastleApplicant@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveCastleApplicant@@UAEPAXI@Z PROC NEAR		; CSPSaveCastleApplicant::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveCastleApplicant@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L142121
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L142121:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveCastleApplicant@@UAEPAXI@Z ENDP		; CSPSaveCastleApplicant::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveCastleApplicant@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveCastleApplicant@@UAE@XZ PROC NEAR		; CSPSaveCastleApplicant::~CSPSaveCastleApplicant, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveCastleApplicant@@UAE@XZ ENDP			; CSPSaveCastleApplicant::~CSPSaveCastleApplicant
_TEXT	ENDS
PUBLIC	??0CSPGetRecallID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetRecallID::CSPGetRecallID
PUBLIC	?GetNumParam@CSPGetRecallID@@UAEHXZ		; CSPGetRecallID::GetNumParam
PUBLIC	?BindParameters@CSPGetRecallID@@UAEFH@Z		; CSPGetRecallID::BindParameters
PUBLIC	??_7CSPGetRecallID@@6B@				; CSPGetRecallID::`vftable'
PUBLIC	??_GCSPGetRecallID@@UAEPAXI@Z			; CSPGetRecallID::`scalar deleting destructor'
PUBLIC	??_C@_0BK@LADMJPJF@?5?$HL?5CALL?5TGetRecallID?$CI?$DP?$CJ?5?$HN?$AA@ ; `string'
EXTRN	??_ECSPGetRecallID@@UAEPAXI@Z:NEAR		; CSPGetRecallID::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T142304 DD	0ffffffffH
	DD	FLAT:$L142130
$T142301 DD	019930520H
	DD	01H
	DD	FLAT:$T142304
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BK@LADMJPJF@?5?$HL?5CALL?5TGetRecallID?$CI?$DP?$CJ?5?$HN?$AA@
CONST	SEGMENT
??_C@_0BK@LADMJPJF@?5?$HL?5CALL?5TGetRecallID?$CI?$DP?$CJ?5?$HN?$AA@ DB ' '
	DB	'{ CALL TGetRecallID(?) }', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGetRecallID@@6B@
CONST	SEGMENT
??_7CSPGetRecallID@@6B@ DD FLAT:??_ECSPGetRecallID@@UAEPAXI@Z ; CSPGetRecallID::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGetRecallID@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGetRecallID@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGetRecallID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T142129 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGetRecallID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGetRecallID::CSPGetRecallID, COMDAT
; _this$ = ecx

; 2171 : DEF_QUERY(CSPGetRecallID, _T(" { CALL TGetRecallID(?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGetRecallID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BK@LADMJPJF@?5?$HL?5CALL?5TGetRecallID?$CI?$DP?$CJ?5?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T142129[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGetRecallID@@6B@
  0005e	72 0d		 jb	 SHORT $L142302
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L142302:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L142130:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGetRecallID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T142301
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGetRecallID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGetRecallID::CSPGetRecallID
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGetRecallID@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGetRecallID@@UAEHXZ PROC NEAR		; CSPGetRecallID::GetNumParam, COMDAT
; _this$ = ecx

; 2172 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CSPGetRecallID@@UAEHXZ ENDP		; CSPGetRecallID::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetRecallID@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGetRecallID@@UAEFH@Z PROC NEAR	; CSPGetRecallID::BindParameters, COMDAT
; _this$ = ecx

; 2173 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwGenID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L114445
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 04		 push	 4
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114445:

; 2174 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CSPGetRecallID@@UAEFH@Z ENDP		; CSPGetRecallID::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGetRecallID@@UAE@XZ			; CSPGetRecallID::~CSPGetRecallID
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGetRecallID@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGetRecallID@@UAEPAXI@Z PROC NEAR			; CSPGetRecallID::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGetRecallID@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L142316
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L142316:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGetRecallID@@UAEPAXI@Z ENDP			; CSPGetRecallID::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGetRecallID@@UAE@XZ
_TEXT	SEGMENT
??1CSPGetRecallID@@UAE@XZ PROC NEAR			; CSPGetRecallID::~CSPGetRecallID, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGetRecallID@@UAE@XZ ENDP				; CSPGetRecallID::~CSPGetRecallID
_TEXT	ENDS
PUBLIC	??0CSPCashItemSale@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPCashItemSale::CSPCashItemSale
PUBLIC	?GetNumParam@CSPCashItemSale@@UAEHXZ		; CSPCashItemSale::GetNumParam
PUBLIC	?BindParameters@CSPCashItemSale@@UAEFH@Z	; CSPCashItemSale::BindParameters
PUBLIC	??_7CSPCashItemSale@@6B@			; CSPCashItemSale::`vftable'
PUBLIC	??_GCSPCashItemSale@@UAEPAXI@Z			; CSPCashItemSale::`scalar deleting destructor'
PUBLIC	??_C@_0BL@NACGPHNP@?$HL?5CALL?5TCashItemSale?$CI?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPCashItemSale@@UAEPAXI@Z:NEAR		; CSPCashItemSale::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T142499 DD	0ffffffffH
	DD	FLAT:$L142325
$T142496 DD	019930520H
	DD	01H
	DD	FLAT:$T142499
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BL@NACGPHNP@?$HL?5CALL?5TCashItemSale?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BL@NACGPHNP@?$HL?5CALL?5TCashItemSale?$CI?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' CALL TCashItemSale(?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPCashItemSale@@6B@
CONST	SEGMENT
??_7CSPCashItemSale@@6B@ DD FLAT:??_ECSPCashItemSale@@UAEPAXI@Z ; CSPCashItemSale::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPCashItemSale@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPCashItemSale@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPCashItemSale@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T142324 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPCashItemSale@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPCashItemSale::CSPCashItemSale, COMDAT
; _this$ = ecx

; 2183 : DEF_QUERY(CSPCashItemSale,_T("{ CALL TCashItemSale(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPCashItemSale@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@NACGPHNP@?$HL?5CALL?5TCashItemSale?$CI?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T142324[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPCashItemSale@@6B@
  0005e	72 0d		 jb	 SHORT $L142497
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L142497:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L142325:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPCashItemSale@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T142496
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPCashItemSale@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPCashItemSale::CSPCashItemSale
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPCashItemSale@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPCashItemSale@@UAEHXZ PROC NEAR		; CSPCashItemSale::GetNumParam, COMDAT
; _this$ = ecx

; 2185 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPCashItemSale@@UAEHXZ ENDP		; CSPCashItemSale::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPCashItemSale@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPCashItemSale@@UAEFH@Z PROC NEAR	; CSPCashItemSale::BindParameters, COMDAT
; _this$ = ecx

; 2185 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 2186 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L114494
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L114494
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L114489
$L114494:

; 2187 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bValue)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L114489
  0003d	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L114489:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 2188 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CSPCashItemSale@@UAEFH@Z ENDP		; CSPCashItemSale::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPCashItemSale@@UAE@XZ			; CSPCashItemSale::~CSPCashItemSale
; Function compile flags: /Ogty
;	COMDAT ??_GCSPCashItemSale@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPCashItemSale@@UAEPAXI@Z PROC NEAR		; CSPCashItemSale::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPCashItemSale@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L142511
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L142511:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPCashItemSale@@UAEPAXI@Z ENDP			; CSPCashItemSale::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPCashItemSale@@UAE@XZ
_TEXT	SEGMENT
??1CSPCashItemSale@@UAE@XZ PROC NEAR			; CSPCashItemSale::~CSPCashItemSale, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPCashItemSale@@UAE@XZ ENDP				; CSPCashItemSale::~CSPCashItemSale
_TEXT	ENDS
PUBLIC	??0CSPGuildWantedAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildWantedAdd::CSPGuildWantedAdd
PUBLIC	?GetNumParam@CSPGuildWantedAdd@@UAEHXZ		; CSPGuildWantedAdd::GetNumParam
PUBLIC	?BindParameters@CSPGuildWantedAdd@@UAEFH@Z	; CSPGuildWantedAdd::BindParameters
PUBLIC	??_7CSPGuildWantedAdd@@6B@			; CSPGuildWantedAdd::`vftable'
PUBLIC	??_GCSPGuildWantedAdd@@UAEPAXI@Z		; CSPGuildWantedAdd::`scalar deleting destructor'
PUBLIC	??_C@_0CF@JLHNLNJG@?$HL?5CALL?5TGuildWantedAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPGuildWantedAdd@@UAEPAXI@Z:NEAR		; CSPGuildWantedAdd::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T142694 DD	0ffffffffH
	DD	FLAT:$L142520
$T142691 DD	019930520H
	DD	01H
	DD	FLAT:$T142694
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CF@JLHNLNJG@?$HL?5CALL?5TGuildWantedAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CF@JLHNLNJG@?$HL?5CALL?5TGuildWantedAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	' CALL TGuildWantedAdd(?,?,?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildWantedAdd@@6B@
CONST	SEGMENT
??_7CSPGuildWantedAdd@@6B@ DD FLAT:??_ECSPGuildWantedAdd@@UAEPAXI@Z ; CSPGuildWantedAdd::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildWantedAdd@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildWantedAdd@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildWantedAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T142519 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildWantedAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildWantedAdd::CSPGuildWantedAdd, COMDAT
; _this$ = ecx

; 2201 : DEF_QUERY(CSPGuildWantedAdd,_T("{ CALL TGuildWantedAdd(?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildWantedAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CF@JLHNLNJG@?$HL?5CALL?5TGuildWantedAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T142519[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildWantedAdd@@6B@
  0005e	72 0d		 jb	 SHORT $L142692
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L142692:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L142520:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildWantedAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T142691
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildWantedAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildWantedAdd::CSPGuildWantedAdd
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildWantedAdd@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildWantedAdd@@UAEHXZ PROC NEAR	; CSPGuildWantedAdd::GetNumParam, COMDAT
; _this$ = ecx

; 2203 : BEGIN_PARAM(6)

  00000	b8 06 00 00 00	 mov	 eax, 6
  00005	c3		 ret	 0
?GetNumParam@CSPGuildWantedAdd@@UAEHXZ ENDP		; CSPGuildWantedAdd::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildWantedAdd@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildWantedAdd@@UAEFH@Z PROC NEAR	; CSPGuildWantedAdd::BindParameters, COMDAT
; _this$ = ecx

; 2203 : BEGIN_PARAM(6)

  00000	55		 push	 ebp
  00001	56		 push	 esi
  00002	57		 push	 edi

; 2204 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 ed		 xor	 ebp, ebp
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fd		 cmp	 edi, ebp
  0000f	89 ae 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebp
  00015	75 1f		 jne	 SHORT $L142703
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c5	 cmp	 ax, bp
  0002a	74 0a		 je	 SHORT $L142703
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 ce 00 00
	00		 jne	 $L114539
$L142703:

; 2205 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bMinLevel)

  00036	3b fd		 cmp	 edi, ebp
  00038	89 ae 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebp
  0003e	75 12		 jne	 SHORT $L142705
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L142705:
  00052	66 3b c5	 cmp	 ax, bp
  00055	74 0a		 je	 SHORT $L142706
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 a3 00 00
	00		 jne	 $L114539
$L142706:

; 2206 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bMaxLevel)

  00061	3b fd		 cmp	 edi, ebp
  00063	89 ae 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebp
  00069	75 12		 jne	 SHORT $L142707
  0006b	8d 96 31 0c 00
	00		 lea	 edx, DWORD PTR [esi+3121]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L142707:
  0007d	66 3b c5	 cmp	 ax, bp
  00080	74 06		 je	 SHORT $L142708
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	75 7c		 jne	 SHORT $L114539
$L142708:

; 2207 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_timeEnd)

  00088	3b fd		 cmp	 edi, ebp
  0008a	89 ae 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebp
  00090	75 12		 jne	 SHORT $L142709
  00092	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  00098	50		 push	 eax
  00099	6a 04		 push	 4
  0009b	6a 01		 push	 1
  0009d	8b ce		 mov	 ecx, esi
  0009f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L142709:
  000a4	66 3b c5	 cmp	 ax, bp
  000a7	74 06		 je	 SHORT $L114550
  000a9	66 3d 01 00	 cmp	 ax, 1
  000ad	75 55		 jne	 SHORT $L114539
$L114550:

; 2208 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szTitle)

  000af	3b fd		 cmp	 edi, ebp
  000b1	c7 86 20 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2080], -3 ; fffffffdH
  000bb	75 17		 jne	 SHORT $L114551
  000bd	68 01 01 00 00	 push	 257			; 00000101H
  000c2	8d 8e 44 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3140]
  000c8	51		 push	 ecx
  000c9	6a 05		 push	 5
  000cb	6a 01		 push	 1
  000cd	8b ce		 mov	 ecx, esi
  000cf	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L114551:
  000d4	66 3b c5	 cmp	 ax, bp
  000d7	74 06		 je	 SHORT $L142704
  000d9	66 3d 01 00	 cmp	 ax, 1
  000dd	75 25		 jne	 SHORT $L114539
$L142704:

; 2209 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szText)

  000df	3b fd		 cmp	 edi, ebp
  000e1	c7 86 24 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2084], -3 ; fffffffdH
  000eb	75 17		 jne	 SHORT $L114539
  000ed	68 01 08 00 00	 push	 2049			; 00000801H
  000f2	8d 96 45 0d 00
	00		 lea	 edx, DWORD PTR [esi+3397]
  000f8	52		 push	 edx
  000f9	6a 06		 push	 6
  000fb	6a 01		 push	 1
  000fd	8b ce		 mov	 ecx, esi
  000ff	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L114539:
  00104	5f		 pop	 edi
  00105	5e		 pop	 esi
  00106	5d		 pop	 ebp

; 2210 : END_PARAM()

  00107	c2 04 00	 ret	 4
?BindParameters@CSPGuildWantedAdd@@UAEFH@Z ENDP		; CSPGuildWantedAdd::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildWantedAdd@@UAE@XZ			; CSPGuildWantedAdd::~CSPGuildWantedAdd
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildWantedAdd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildWantedAdd@@UAEPAXI@Z PROC NEAR		; CSPGuildWantedAdd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildWantedAdd@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L142713
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L142713:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildWantedAdd@@UAEPAXI@Z ENDP			; CSPGuildWantedAdd::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildWantedAdd@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildWantedAdd@@UAE@XZ PROC NEAR			; CSPGuildWantedAdd::~CSPGuildWantedAdd, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildWantedAdd@@UAE@XZ ENDP			; CSPGuildWantedAdd::~CSPGuildWantedAdd
_TEXT	ENDS
PUBLIC	??0CSPGuildWantedDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildWantedDel::CSPGuildWantedDel
PUBLIC	?GetNumParam@CSPGuildWantedDel@@UAEHXZ		; CSPGuildWantedDel::GetNumParam
PUBLIC	?BindParameters@CSPGuildWantedDel@@UAEFH@Z	; CSPGuildWantedDel::BindParameters
PUBLIC	??_7CSPGuildWantedDel@@6B@			; CSPGuildWantedDel::`vftable'
PUBLIC	??_GCSPGuildWantedDel@@UAEPAXI@Z		; CSPGuildWantedDel::`scalar deleting destructor'
PUBLIC	??_C@_0BL@ONOOOAKJ@?$HL?5CALL?5TGuildWantedDel?$CI?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPGuildWantedDel@@UAEPAXI@Z:NEAR		; CSPGuildWantedDel::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T142896 DD	0ffffffffH
	DD	FLAT:$L142722
$T142893 DD	019930520H
	DD	01H
	DD	FLAT:$T142896
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BL@ONOOOAKJ@?$HL?5CALL?5TGuildWantedDel?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BL@ONOOOAKJ@?$HL?5CALL?5TGuildWantedDel?$CI?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' CALL TGuildWantedDel(?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildWantedDel@@6B@
CONST	SEGMENT
??_7CSPGuildWantedDel@@6B@ DD FLAT:??_ECSPGuildWantedDel@@UAEPAXI@Z ; CSPGuildWantedDel::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildWantedDel@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildWantedDel@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildWantedDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T142721 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildWantedDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildWantedDel::CSPGuildWantedDel, COMDAT
; _this$ = ecx

; 2218 : DEF_QUERY(CSPGuildWantedDel, _T("{ CALL TGuildWantedDel(?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildWantedDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@ONOOOAKJ@?$HL?5CALL?5TGuildWantedDel?$CI?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T142721[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildWantedDel@@6B@
  0005e	72 0d		 jb	 SHORT $L142894
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L142894:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L142722:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildWantedDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T142893
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildWantedDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildWantedDel::CSPGuildWantedDel
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildWantedDel@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildWantedDel@@UAEHXZ PROC NEAR	; CSPGuildWantedDel::GetNumParam, COMDAT
; _this$ = ecx

; 2220 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CSPGuildWantedDel@@UAEHXZ ENDP		; CSPGuildWantedDel::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildWantedDel@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildWantedDel@@UAEFH@Z PROC NEAR	; CSPGuildWantedDel::BindParameters, COMDAT
; _this$ = ecx

; 2221 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L114592
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114592:

; 2222 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CSPGuildWantedDel@@UAEFH@Z ENDP		; CSPGuildWantedDel::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildWantedDel@@UAE@XZ			; CSPGuildWantedDel::~CSPGuildWantedDel
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildWantedDel@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildWantedDel@@UAEPAXI@Z PROC NEAR		; CSPGuildWantedDel::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildWantedDel@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L142908
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L142908:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildWantedDel@@UAEPAXI@Z ENDP			; CSPGuildWantedDel::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildWantedDel@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildWantedDel@@UAE@XZ PROC NEAR			; CSPGuildWantedDel::~CSPGuildWantedDel, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildWantedDel@@UAE@XZ ENDP			; CSPGuildWantedDel::~CSPGuildWantedDel
_TEXT	ENDS
PUBLIC	??0CSPGuildVolunteering@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildVolunteering::CSPGuildVolunteering
PUBLIC	?GetNumParam@CSPGuildVolunteering@@UAEHXZ	; CSPGuildVolunteering::GetNumParam
PUBLIC	?BindParameters@CSPGuildVolunteering@@UAEFH@Z	; CSPGuildVolunteering::BindParameters
PUBLIC	??_7CSPGuildVolunteering@@6B@			; CSPGuildVolunteering::`vftable'
PUBLIC	??_GCSPGuildVolunteering@@UAEPAXI@Z		; CSPGuildVolunteering::`scalar deleting destructor'
PUBLIC	??_C@_0CC@EMNIENCD@?$HL?5CALL?5TGuildVolunteering?$CI?$DP?0?$DP?0?$DP?$CJ@ ; `string'
EXTRN	??_ECSPGuildVolunteering@@UAEPAXI@Z:NEAR	; CSPGuildVolunteering::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T143091 DD	0ffffffffH
	DD	FLAT:$L142917
$T143088 DD	019930520H
	DD	01H
	DD	FLAT:$T143091
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CC@EMNIENCD@?$HL?5CALL?5TGuildVolunteering?$CI?$DP?0?$DP?0?$DP?$CJ@
CONST	SEGMENT
??_C@_0CC@EMNIENCD@?$HL?5CALL?5TGuildVolunteering?$CI?$DP?0?$DP?0?$DP?$CJ@ DB '{'
	DB	' CALL TGuildVolunteering(?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildVolunteering@@6B@
CONST	SEGMENT
??_7CSPGuildVolunteering@@6B@ DD FLAT:??_ECSPGuildVolunteering@@UAEPAXI@Z ; CSPGuildVolunteering::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildVolunteering@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildVolunteering@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildVolunteering@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T142916 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildVolunteering@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildVolunteering::CSPGuildVolunteering, COMDAT
; _this$ = ecx

; 2232 : DEF_QUERY(CSPGuildVolunteering, _T("{ CALL TGuildVolunteering(?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildVolunteering@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CC@EMNIENCD@?$HL?5CALL?5TGuildVolunteering?$CI?$DP?0?$DP?0?$DP?$CJ@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T142916[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildVolunteering@@6B@
  0005e	72 0d		 jb	 SHORT $L143089
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L143089:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L142917:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildVolunteering@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T143088
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildVolunteering@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildVolunteering::CSPGuildVolunteering
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildVolunteering@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildVolunteering@@UAEHXZ PROC NEAR	; CSPGuildVolunteering::GetNumParam, COMDAT
; _this$ = ecx

; 2234 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPGuildVolunteering@@UAEHXZ ENDP		; CSPGuildVolunteering::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildVolunteering@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildVolunteering@@UAEFH@Z PROC NEAR	; CSPGuildVolunteering::BindParameters, COMDAT
; _this$ = ecx

; 2234 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 2235 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bType)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L114642
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L114642
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L114637
$L114642:

; 2236 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L114643
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114643:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L114644
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L114637
$L114644:

; 2237 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwID)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L114637
  00068	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114637:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 2238 : END_PARAM()

  0007c	c2 04 00	 ret	 4
?BindParameters@CSPGuildVolunteering@@UAEFH@Z ENDP	; CSPGuildVolunteering::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildVolunteering@@UAE@XZ			; CSPGuildVolunteering::~CSPGuildVolunteering
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildVolunteering@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildVolunteering@@UAEPAXI@Z PROC NEAR		; CSPGuildVolunteering::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildVolunteering@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L143103
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L143103:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildVolunteering@@UAEPAXI@Z ENDP		; CSPGuildVolunteering::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildVolunteering@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildVolunteering@@UAE@XZ PROC NEAR		; CSPGuildVolunteering::~CSPGuildVolunteering, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildVolunteering@@UAE@XZ ENDP			; CSPGuildVolunteering::~CSPGuildVolunteering
_TEXT	ENDS
PUBLIC	??0CSPGuildVolunteeringDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildVolunteeringDel::CSPGuildVolunteeringDel
PUBLIC	?GetNumParam@CSPGuildVolunteeringDel@@UAEHXZ	; CSPGuildVolunteeringDel::GetNumParam
PUBLIC	?BindParameters@CSPGuildVolunteeringDel@@UAEFH@Z ; CSPGuildVolunteeringDel::BindParameters
PUBLIC	??_7CSPGuildVolunteeringDel@@6B@		; CSPGuildVolunteeringDel::`vftable'
PUBLIC	??_GCSPGuildVolunteeringDel@@UAEPAXI@Z		; CSPGuildVolunteeringDel::`scalar deleting destructor'
PUBLIC	??_C@_0CD@CDDMPCHH@?$HL?5CALL?5TGuildVolunteeringDel?$CI?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPGuildVolunteeringDel@@UAEPAXI@Z:NEAR	; CSPGuildVolunteeringDel::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T143286 DD	0ffffffffH
	DD	FLAT:$L143112
$T143283 DD	019930520H
	DD	01H
	DD	FLAT:$T143286
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CD@CDDMPCHH@?$HL?5CALL?5TGuildVolunteeringDel?$CI?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CD@CDDMPCHH@?$HL?5CALL?5TGuildVolunteeringDel?$CI?$DP?0?$DP@ DB '{'
	DB	' CALL TGuildVolunteeringDel(?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildVolunteeringDel@@6B@
CONST	SEGMENT
??_7CSPGuildVolunteeringDel@@6B@ DD FLAT:??_ECSPGuildVolunteeringDel@@UAEPAXI@Z ; CSPGuildVolunteeringDel::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildVolunteeringDel@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildVolunteeringDel@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildVolunteeringDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T143111 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildVolunteeringDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildVolunteeringDel::CSPGuildVolunteeringDel, COMDAT
; _this$ = ecx

; 2247 : DEF_QUERY(CSPGuildVolunteeringDel, _T("{ CALL TGuildVolunteeringDel(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildVolunteeringDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CD@CDDMPCHH@?$HL?5CALL?5TGuildVolunteeringDel?$CI?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T143111[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildVolunteeringDel@@6B@
  0005e	72 0d		 jb	 SHORT $L143284
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L143284:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L143112:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildVolunteeringDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T143283
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildVolunteeringDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildVolunteeringDel::CSPGuildVolunteeringDel
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildVolunteeringDel@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildVolunteeringDel@@UAEHXZ PROC NEAR	; CSPGuildVolunteeringDel::GetNumParam, COMDAT
; _this$ = ecx

; 2249 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPGuildVolunteeringDel@@UAEHXZ ENDP	; CSPGuildVolunteeringDel::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildVolunteeringDel@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildVolunteeringDel@@UAEFH@Z PROC NEAR ; CSPGuildVolunteeringDel::BindParameters, COMDAT
; _this$ = ecx

; 2249 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 2250 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bType)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L114690
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L114690
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L114685
$L114690:

; 2251 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L114685
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114685:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 2252 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CSPGuildVolunteeringDel@@UAEFH@Z ENDP	; CSPGuildVolunteeringDel::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildVolunteeringDel@@UAE@XZ		; CSPGuildVolunteeringDel::~CSPGuildVolunteeringDel
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildVolunteeringDel@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildVolunteeringDel@@UAEPAXI@Z PROC NEAR	; CSPGuildVolunteeringDel::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildVolunteeringDel@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L143298
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L143298:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildVolunteeringDel@@UAEPAXI@Z ENDP		; CSPGuildVolunteeringDel::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildVolunteeringDel@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildVolunteeringDel@@UAE@XZ PROC NEAR		; CSPGuildVolunteeringDel::~CSPGuildVolunteeringDel, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildVolunteeringDel@@UAE@XZ ENDP			; CSPGuildVolunteeringDel::~CSPGuildVolunteeringDel
_TEXT	ENDS
PUBLIC	??0CSPGuildTacticsWantedAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildTacticsWantedAdd::CSPGuildTacticsWantedAdd
PUBLIC	?GetNumParam@CSPGuildTacticsWantedAdd@@UAEHXZ	; CSPGuildTacticsWantedAdd::GetNumParam
PUBLIC	?BindParameters@CSPGuildTacticsWantedAdd@@UAEFH@Z ; CSPGuildTacticsWantedAdd::BindParameters
PUBLIC	??_7CSPGuildTacticsWantedAdd@@6B@		; CSPGuildTacticsWantedAdd::`vftable'
PUBLIC	??_GCSPGuildTacticsWantedAdd@@UAEPAXI@Z		; CSPGuildTacticsWantedAdd::`scalar deleting destructor'
PUBLIC	??_C@_0DI@JMJHECPN@?$HL?5CALL?5TGuildTacticsWantedAdd?$CI?$DP?0@ ; `string'
EXTRN	??_ECSPGuildTacticsWantedAdd@@UAEPAXI@Z:NEAR	; CSPGuildTacticsWantedAdd::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T143481 DD	0ffffffffH
	DD	FLAT:$L143307
$T143478 DD	019930520H
	DD	01H
	DD	FLAT:$T143481
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0DI@JMJHECPN@?$HL?5CALL?5TGuildTacticsWantedAdd?$CI?$DP?0@
CONST	SEGMENT
??_C@_0DI@JMJHECPN@?$HL?5CALL?5TGuildTacticsWantedAdd?$CI?$DP?0@ DB '{ CA'
	DB	'LL TGuildTacticsWantedAdd(?,?,?,?,?,?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildTacticsWantedAdd@@6B@
CONST	SEGMENT
??_7CSPGuildTacticsWantedAdd@@6B@ DD FLAT:??_ECSPGuildTacticsWantedAdd@@UAEPAXI@Z ; CSPGuildTacticsWantedAdd::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildTacticsWantedAdd@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildTacticsWantedAdd@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildTacticsWantedAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T143306 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildTacticsWantedAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildTacticsWantedAdd::CSPGuildTacticsWantedAdd, COMDAT
; _this$ = ecx

; 2271 : DEF_QUERY(CSPGuildTacticsWantedAdd,_T("{ CALL TGuildTacticsWantedAdd(?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildTacticsWantedAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0DI@JMJHECPN@?$HL?5CALL?5TGuildTacticsWantedAdd?$CI?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T143306[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildTacticsWantedAdd@@6B@
  0005e	72 0d		 jb	 SHORT $L143479
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L143479:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L143307:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildTacticsWantedAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T143478
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildTacticsWantedAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildTacticsWantedAdd::CSPGuildTacticsWantedAdd
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildTacticsWantedAdd@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildTacticsWantedAdd@@UAEHXZ PROC NEAR	; CSPGuildTacticsWantedAdd::GetNumParam, COMDAT
; _this$ = ecx

; 2273 : BEGIN_PARAM(12)

  00000	b8 0c 00 00 00	 mov	 eax, 12			; 0000000cH
  00005	c3		 ret	 0
?GetNumParam@CSPGuildTacticsWantedAdd@@UAEHXZ ENDP	; CSPGuildTacticsWantedAdd::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildTacticsWantedAdd@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildTacticsWantedAdd@@UAEFH@Z PROC NEAR ; CSPGuildTacticsWantedAdd::BindParameters, COMDAT
; _this$ = ecx

; 2273 : BEGIN_PARAM(12)

  00000	55		 push	 ebp
  00001	56		 push	 esi
  00002	57		 push	 edi

; 2274 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 ed		 xor	 ebp, ebp
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fd		 cmp	 edi, ebp
  0000f	89 ae 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebp
  00015	75 1f		 jne	 SHORT $L143490
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c5	 cmp	 ax, bp
  0002a	74 0a		 je	 SHORT $L143490
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 d0 01 00
	00		 jne	 $L114741
$L143490:

; 2275 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00036	3b fd		 cmp	 edi, ebp
  00038	89 ae 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebp
  0003e	75 12		 jne	 SHORT $L143492
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L143492:
  00052	66 3b c5	 cmp	 ax, bp
  00055	74 0a		 je	 SHORT $L143493
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 a5 01 00
	00		 jne	 $L114741
$L143493:

; 2276 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwPoint)

  00061	3b fd		 cmp	 edi, ebp
  00063	89 ae 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebp
  00069	75 12		 jne	 SHORT $L143494
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L143494:
  0007d	66 3b c5	 cmp	 ax, bp
  00080	74 0a		 je	 SHORT $L143495
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 7a 01 00
	00		 jne	 $L114741
$L143495:

; 2277 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGold)

  0008c	3b fd		 cmp	 edi, ebp
  0008e	89 ae 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebp
  00094	75 12		 jne	 SHORT $L143496
  00096	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L143496:
  000a8	66 3b c5	 cmp	 ax, bp
  000ab	74 0a		 je	 SHORT $L143497
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 4f 01 00
	00		 jne	 $L114741
$L143497:

; 2278 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwSilver)

  000b7	3b fd		 cmp	 edi, ebp
  000b9	89 ae 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebp
  000bf	75 12		 jne	 SHORT $L143498
  000c1	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 01		 push	 1
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L143498:
  000d3	66 3b c5	 cmp	 ax, bp
  000d6	74 0a		 je	 SHORT $L143499
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 24 01 00
	00		 jne	 $L114741
$L143499:

; 2279 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCooper)

  000e2	3b fd		 cmp	 edi, ebp
  000e4	89 ae 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebp
  000ea	75 12		 jne	 SHORT $L143500
  000ec	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 01		 push	 1
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L143500:
  000fe	66 3b c5	 cmp	 ax, bp
  00101	74 0a		 je	 SHORT $L143501
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	0f 85 f9 00 00
	00		 jne	 $L114741
$L143501:

; 2280 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bDay)

  0010d	3b fd		 cmp	 edi, ebp
  0010f	89 ae 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebp
  00115	75 12		 jne	 SHORT $L143502
  00117	8d 86 44 0c 00
	00		 lea	 eax, DWORD PTR [esi+3140]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 01		 push	 1
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L143502:
  00129	66 3b c5	 cmp	 ax, bp
  0012c	74 0a		 je	 SHORT $L143503
  0012e	66 3d 01 00	 cmp	 ax, 1
  00132	0f 85 ce 00 00
	00		 jne	 $L114741
$L143503:

; 2281 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bMinLevel)

  00138	3b fd		 cmp	 edi, ebp
  0013a	89 ae 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebp
  00140	75 12		 jne	 SHORT $L143504
  00142	8d 8e 45 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3141]
  00148	51		 push	 ecx
  00149	6a 08		 push	 8
  0014b	6a 01		 push	 1
  0014d	8b ce		 mov	 ecx, esi
  0014f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L143504:
  00154	66 3b c5	 cmp	 ax, bp
  00157	74 0a		 je	 SHORT $L143505
  00159	66 3d 01 00	 cmp	 ax, 1
  0015d	0f 85 a3 00 00
	00		 jne	 $L114741
$L143505:

; 2282 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bMaxLevel)

  00163	3b fd		 cmp	 edi, ebp
  00165	89 ae 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebp
  0016b	75 12		 jne	 SHORT $L143506
  0016d	8d 96 46 0c 00
	00		 lea	 edx, DWORD PTR [esi+3142]
  00173	52		 push	 edx
  00174	6a 09		 push	 9
  00176	6a 01		 push	 1
  00178	8b ce		 mov	 ecx, esi
  0017a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L143506:
  0017f	66 3b c5	 cmp	 ax, bp
  00182	74 06		 je	 SHORT $L143507
  00184	66 3d 01 00	 cmp	 ax, 1
  00188	75 7c		 jne	 SHORT $L114741
$L143507:

; 2283 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_timeEnd)

  0018a	3b fd		 cmp	 edi, ebp
  0018c	89 ae 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebp
  00192	75 12		 jne	 SHORT $L143508
  00194	8d 86 48 0c 00
	00		 lea	 eax, DWORD PTR [esi+3144]
  0019a	50		 push	 eax
  0019b	6a 0a		 push	 10			; 0000000aH
  0019d	6a 01		 push	 1
  0019f	8b ce		 mov	 ecx, esi
  001a1	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L143508:
  001a6	66 3b c5	 cmp	 ax, bp
  001a9	74 06		 je	 SHORT $L114764
  001ab	66 3d 01 00	 cmp	 ax, 1
  001af	75 55		 jne	 SHORT $L114741
$L114764:

; 2284 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szTitle)

  001b1	3b fd		 cmp	 edi, ebp
  001b3	c7 86 38 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2104], -3 ; fffffffdH
  001bd	75 17		 jne	 SHORT $L114765
  001bf	68 01 01 00 00	 push	 257			; 00000101H
  001c4	8d 8e 58 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3160]
  001ca	51		 push	 ecx
  001cb	6a 0b		 push	 11			; 0000000bH
  001cd	6a 01		 push	 1
  001cf	8b ce		 mov	 ecx, esi
  001d1	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L114765:
  001d6	66 3b c5	 cmp	 ax, bp
  001d9	74 06		 je	 SHORT $L143491
  001db	66 3d 01 00	 cmp	 ax, 1
  001df	75 25		 jne	 SHORT $L114741
$L143491:

; 2285 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szText)

  001e1	3b fd		 cmp	 edi, ebp
  001e3	c7 86 3c 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2108], -3 ; fffffffdH
  001ed	75 17		 jne	 SHORT $L114741
  001ef	68 01 08 00 00	 push	 2049			; 00000801H
  001f4	8d 96 59 0d 00
	00		 lea	 edx, DWORD PTR [esi+3417]
  001fa	52		 push	 edx
  001fb	6a 0c		 push	 12			; 0000000cH
  001fd	6a 01		 push	 1
  001ff	8b ce		 mov	 ecx, esi
  00201	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L114741:
  00206	5f		 pop	 edi
  00207	5e		 pop	 esi
  00208	5d		 pop	 ebp

; 2286 : END_PARAM()

  00209	c2 04 00	 ret	 4
?BindParameters@CSPGuildTacticsWantedAdd@@UAEFH@Z ENDP	; CSPGuildTacticsWantedAdd::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildTacticsWantedAdd@@UAE@XZ		; CSPGuildTacticsWantedAdd::~CSPGuildTacticsWantedAdd
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildTacticsWantedAdd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildTacticsWantedAdd@@UAEPAXI@Z PROC NEAR	; CSPGuildTacticsWantedAdd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildTacticsWantedAdd@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L143512
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L143512:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildTacticsWantedAdd@@UAEPAXI@Z ENDP		; CSPGuildTacticsWantedAdd::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildTacticsWantedAdd@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildTacticsWantedAdd@@UAE@XZ PROC NEAR		; CSPGuildTacticsWantedAdd::~CSPGuildTacticsWantedAdd, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildTacticsWantedAdd@@UAE@XZ ENDP		; CSPGuildTacticsWantedAdd::~CSPGuildTacticsWantedAdd
_TEXT	ENDS
PUBLIC	??0CSPGuildTacticsWantedDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildTacticsWantedDel::CSPGuildTacticsWantedDel
PUBLIC	?GetNumParam@CSPGuildTacticsWantedDel@@UAEHXZ	; CSPGuildTacticsWantedDel::GetNumParam
PUBLIC	?BindParameters@CSPGuildTacticsWantedDel@@UAEFH@Z ; CSPGuildTacticsWantedDel::BindParameters
PUBLIC	??_7CSPGuildTacticsWantedDel@@6B@		; CSPGuildTacticsWantedDel::`vftable'
PUBLIC	??_GCSPGuildTacticsWantedDel@@UAEPAXI@Z		; CSPGuildTacticsWantedDel::`scalar deleting destructor'
PUBLIC	??_C@_0CC@FICJKIBN@?$HL?5CALL?5TGuildTacticsWantedDel?$CI?$DP?$CJ@ ; `string'
EXTRN	??_ECSPGuildTacticsWantedDel@@UAEPAXI@Z:NEAR	; CSPGuildTacticsWantedDel::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T143695 DD	0ffffffffH
	DD	FLAT:$L143521
$T143692 DD	019930520H
	DD	01H
	DD	FLAT:$T143695
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CC@FICJKIBN@?$HL?5CALL?5TGuildTacticsWantedDel?$CI?$DP?$CJ@
CONST	SEGMENT
??_C@_0CC@FICJKIBN@?$HL?5CALL?5TGuildTacticsWantedDel?$CI?$DP?$CJ@ DB '{ '
	DB	'CALL TGuildTacticsWantedDel(?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildTacticsWantedDel@@6B@
CONST	SEGMENT
??_7CSPGuildTacticsWantedDel@@6B@ DD FLAT:??_ECSPGuildTacticsWantedDel@@UAEPAXI@Z ; CSPGuildTacticsWantedDel::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildTacticsWantedDel@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildTacticsWantedDel@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildTacticsWantedDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T143520 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildTacticsWantedDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildTacticsWantedDel::CSPGuildTacticsWantedDel, COMDAT
; _this$ = ecx

; 2294 : DEF_QUERY(CSPGuildTacticsWantedDel, _T("{ CALL TGuildTacticsWantedDel(?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildTacticsWantedDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CC@FICJKIBN@?$HL?5CALL?5TGuildTacticsWantedDel?$CI?$DP?$CJ@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T143520[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildTacticsWantedDel@@6B@
  0005e	72 0d		 jb	 SHORT $L143693
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L143693:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L143521:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildTacticsWantedDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T143692
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildTacticsWantedDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildTacticsWantedDel::CSPGuildTacticsWantedDel
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildTacticsWantedDel@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildTacticsWantedDel@@UAEHXZ PROC NEAR	; CSPGuildTacticsWantedDel::GetNumParam, COMDAT
; _this$ = ecx

; 2296 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CSPGuildTacticsWantedDel@@UAEHXZ ENDP	; CSPGuildTacticsWantedDel::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildTacticsWantedDel@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildTacticsWantedDel@@UAEFH@Z PROC NEAR ; CSPGuildTacticsWantedDel::BindParameters, COMDAT
; _this$ = ecx

; 2297 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L114806
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114806:

; 2298 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CSPGuildTacticsWantedDel@@UAEFH@Z ENDP	; CSPGuildTacticsWantedDel::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildTacticsWantedDel@@UAE@XZ		; CSPGuildTacticsWantedDel::~CSPGuildTacticsWantedDel
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildTacticsWantedDel@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildTacticsWantedDel@@UAEPAXI@Z PROC NEAR	; CSPGuildTacticsWantedDel::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildTacticsWantedDel@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L143707
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L143707:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildTacticsWantedDel@@UAEPAXI@Z ENDP		; CSPGuildTacticsWantedDel::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildTacticsWantedDel@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildTacticsWantedDel@@UAE@XZ PROC NEAR		; CSPGuildTacticsWantedDel::~CSPGuildTacticsWantedDel, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildTacticsWantedDel@@UAE@XZ ENDP		; CSPGuildTacticsWantedDel::~CSPGuildTacticsWantedDel
_TEXT	ENDS
PUBLIC	??0CSPGuildTacticsAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildTacticsAdd::CSPGuildTacticsAdd
PUBLIC	?GetNumParam@CSPGuildTacticsAdd@@UAEHXZ		; CSPGuildTacticsAdd::GetNumParam
PUBLIC	?BindParameters@CSPGuildTacticsAdd@@UAEFH@Z	; CSPGuildTacticsAdd::BindParameters
PUBLIC	??_7CSPGuildTacticsAdd@@6B@			; CSPGuildTacticsAdd::`vftable'
PUBLIC	??_GCSPGuildTacticsAdd@@UAEPAXI@Z		; CSPGuildTacticsAdd::`scalar deleting destructor'
PUBLIC	??_C@_0CI@FHOOKLPN@?$HL?5CALL?5TGuildTacticsAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPGuildTacticsAdd@@UAEPAXI@Z:NEAR		; CSPGuildTacticsAdd::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T143890 DD	0ffffffffH
	DD	FLAT:$L143716
$T143887 DD	019930520H
	DD	01H
	DD	FLAT:$T143890
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CI@FHOOKLPN@?$HL?5CALL?5TGuildTacticsAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0CI@FHOOKLPN@?$HL?5CALL?5TGuildTacticsAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0@ DB '{'
	DB	' CALL TGuildTacticsAdd(?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildTacticsAdd@@6B@
CONST	SEGMENT
??_7CSPGuildTacticsAdd@@6B@ DD FLAT:??_ECSPGuildTacticsAdd@@UAEPAXI@Z ; CSPGuildTacticsAdd::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildTacticsAdd@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildTacticsAdd@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildTacticsAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T143715 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildTacticsAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildTacticsAdd::CSPGuildTacticsAdd, COMDAT
; _this$ = ecx

; 2312 : DEF_QUERY(CSPGuildTacticsAdd, _T("{ CALL TGuildTacticsAdd(?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildTacticsAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CI@FHOOKLPN@?$HL?5CALL?5TGuildTacticsAdd?$CI?$DP?0?$DP?0?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T143715[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildTacticsAdd@@6B@
  0005e	72 0d		 jb	 SHORT $L143888
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L143888:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L143716:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildTacticsAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T143887
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildTacticsAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildTacticsAdd::CSPGuildTacticsAdd
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildTacticsAdd@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildTacticsAdd@@UAEHXZ PROC NEAR	; CSPGuildTacticsAdd::GetNumParam, COMDAT
; _this$ = ecx

; 2314 : BEGIN_PARAM(7)

  00000	b8 07 00 00 00	 mov	 eax, 7
  00005	c3		 ret	 0
?GetNumParam@CSPGuildTacticsAdd@@UAEHXZ ENDP		; CSPGuildTacticsAdd::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildTacticsAdd@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildTacticsAdd@@UAEFH@Z PROC NEAR	; CSPGuildTacticsAdd::BindParameters, COMDAT
; _this$ = ecx

; 2314 : BEGIN_PARAM(7)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 2315 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGuildID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L114860
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L114860
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 e7 00 00
	00		 jne	 $L114855
$L114860:

; 2316 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L114861
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114861:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L114862
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 bc 00 00
	00		 jne	 $L114855
$L114862:

; 2317 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwPoint)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L114863
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114863:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L114864
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 91 00 00
	00		 jne	 $L114855
$L114864:

; 2318 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dlMoney)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L114865
  00096	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPA_J@Z ; CSqlBase::BindParam
$L114865:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 06		 je	 SHORT $L114866
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	75 6a		 jne	 SHORT $L114855
$L114866:

; 2319 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bDay)

  000b3	3b fb		 cmp	 edi, ebx
  000b5	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bb	75 12		 jne	 SHORT $L114867
  000bd	8d 8e 40 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3136]
  000c3	51		 push	 ecx
  000c4	6a 05		 push	 5
  000c6	6a 01		 push	 1
  000c8	8b ce		 mov	 ecx, esi
  000ca	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L114867:
  000cf	66 3b c3	 cmp	 ax, bx
  000d2	74 06		 je	 SHORT $L114868
  000d4	66 3d 01 00	 cmp	 ax, 1
  000d8	75 43		 jne	 SHORT $L114855
$L114868:

; 2320 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_timeEnd)

  000da	3b fb		 cmp	 edi, ebx
  000dc	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000e2	75 12		 jne	 SHORT $L114869
  000e4	8d 96 44 0c 00
	00		 lea	 edx, DWORD PTR [esi+3140]
  000ea	52		 push	 edx
  000eb	6a 06		 push	 6
  000ed	6a 01		 push	 1
  000ef	8b ce		 mov	 ecx, esi
  000f1	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L114869:
  000f6	66 3b c3	 cmp	 ax, bx
  000f9	74 06		 je	 SHORT $L114870
  000fb	66 3d 01 00	 cmp	 ax, 1
  000ff	75 1c		 jne	 SHORT $L114855
$L114870:

; 2321 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwCharGuildID)

  00101	3b fb		 cmp	 edi, ebx
  00103	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00109	75 12		 jne	 SHORT $L114855
  0010b	8d 86 54 0c 00
	00		 lea	 eax, DWORD PTR [esi+3156]
  00111	50		 push	 eax
  00112	6a 07		 push	 7
  00114	6a 04		 push	 4
  00116	8b ce		 mov	 ecx, esi
  00118	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114855:
  0011d	5f		 pop	 edi
  0011e	5e		 pop	 esi
  0011f	5b		 pop	 ebx

; 2322 : END_PARAM()

  00120	c2 04 00	 ret	 4
?BindParameters@CSPGuildTacticsAdd@@UAEFH@Z ENDP	; CSPGuildTacticsAdd::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildTacticsAdd@@UAE@XZ			; CSPGuildTacticsAdd::~CSPGuildTacticsAdd
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildTacticsAdd@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildTacticsAdd@@UAEPAXI@Z PROC NEAR		; CSPGuildTacticsAdd::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildTacticsAdd@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L143902
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L143902:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildTacticsAdd@@UAEPAXI@Z ENDP			; CSPGuildTacticsAdd::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildTacticsAdd@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildTacticsAdd@@UAE@XZ PROC NEAR			; CSPGuildTacticsAdd::~CSPGuildTacticsAdd, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildTacticsAdd@@UAE@XZ ENDP			; CSPGuildTacticsAdd::~CSPGuildTacticsAdd
_TEXT	ENDS
PUBLIC	??0CSPGuildTacticsDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildTacticsDel::CSPGuildTacticsDel
PUBLIC	?GetNumParam@CSPGuildTacticsDel@@UAEHXZ		; CSPGuildTacticsDel::GetNumParam
PUBLIC	?BindParameters@CSPGuildTacticsDel@@UAEFH@Z	; CSPGuildTacticsDel::BindParameters
PUBLIC	??_7CSPGuildTacticsDel@@6B@			; CSPGuildTacticsDel::`vftable'
PUBLIC	??_GCSPGuildTacticsDel@@UAEPAXI@Z		; CSPGuildTacticsDel::`scalar deleting destructor'
PUBLIC	??_C@_0BO@FJKJFIMO@?$HL?5CALL?5TGuildTacticsDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPGuildTacticsDel@@UAEPAXI@Z:NEAR		; CSPGuildTacticsDel::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T144085 DD	0ffffffffH
	DD	FLAT:$L143911
$T144082 DD	019930520H
	DD	01H
	DD	FLAT:$T144085
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BO@FJKJFIMO@?$HL?5CALL?5TGuildTacticsDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BO@FJKJFIMO@?$HL?5CALL?5TGuildTacticsDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' CALL TGuildTacticsDel(?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGuildTacticsDel@@6B@
CONST	SEGMENT
??_7CSPGuildTacticsDel@@6B@ DD FLAT:??_ECSPGuildTacticsDel@@UAEPAXI@Z ; CSPGuildTacticsDel::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGuildTacticsDel@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGuildTacticsDel@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGuildTacticsDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T143910 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGuildTacticsDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGuildTacticsDel::CSPGuildTacticsDel, COMDAT
; _this$ = ecx

; 2331 : DEF_QUERY(CSPGuildTacticsDel, _T("{ CALL TGuildTacticsDel(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGuildTacticsDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BO@FJKJFIMO@?$HL?5CALL?5TGuildTacticsDel?$CI?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T143910[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGuildTacticsDel@@6B@
  0005e	72 0d		 jb	 SHORT $L144083
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L144083:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L143911:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGuildTacticsDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T144082
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGuildTacticsDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGuildTacticsDel::CSPGuildTacticsDel
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGuildTacticsDel@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGuildTacticsDel@@UAEHXZ PROC NEAR	; CSPGuildTacticsDel::GetNumParam, COMDAT
; _this$ = ecx

; 2333 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPGuildTacticsDel@@UAEHXZ ENDP		; CSPGuildTacticsDel::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGuildTacticsDel@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGuildTacticsDel@@UAEFH@Z PROC NEAR	; CSPGuildTacticsDel::BindParameters, COMDAT
; _this$ = ecx

; 2333 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 2334 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L114916
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L114916
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L114911
$L114916:

; 2335 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_dwCharGuildID)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L114911
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 04		 push	 4
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114911:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 2336 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CSPGuildTacticsDel@@UAEFH@Z ENDP	; CSPGuildTacticsDel::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGuildTacticsDel@@UAE@XZ			; CSPGuildTacticsDel::~CSPGuildTacticsDel
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGuildTacticsDel@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGuildTacticsDel@@UAEPAXI@Z PROC NEAR		; CSPGuildTacticsDel::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGuildTacticsDel@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L144097
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L144097:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGuildTacticsDel@@UAEPAXI@Z ENDP			; CSPGuildTacticsDel::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGuildTacticsDel@@UAE@XZ
_TEXT	SEGMENT
??1CSPGuildTacticsDel@@UAE@XZ PROC NEAR			; CSPGuildTacticsDel::~CSPGuildTacticsDel, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGuildTacticsDel@@UAE@XZ ENDP			; CSPGuildTacticsDel::~CSPGuildTacticsDel
_TEXT	ENDS
PUBLIC	??0CSPSaveTacticsGainPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveTacticsGainPoint::CSPSaveTacticsGainPoint
PUBLIC	?GetNumParam@CSPSaveTacticsGainPoint@@UAEHXZ	; CSPSaveTacticsGainPoint::GetNumParam
PUBLIC	?BindParameters@CSPSaveTacticsGainPoint@@UAEFH@Z ; CSPSaveTacticsGainPoint::BindParameters
PUBLIC	??_7CSPSaveTacticsGainPoint@@6B@		; CSPSaveTacticsGainPoint::`vftable'
PUBLIC	??_GCSPSaveTacticsGainPoint@@UAEPAXI@Z		; CSPSaveTacticsGainPoint::`scalar deleting destructor'
PUBLIC	??_C@_0CD@MGEAGIHA@?$HL?5CALL?5TSaveTacticsGainPoint?$CI?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPSaveTacticsGainPoint@@UAEPAXI@Z:NEAR	; CSPSaveTacticsGainPoint::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T144280 DD	0ffffffffH
	DD	FLAT:$L144106
$T144277 DD	019930520H
	DD	01H
	DD	FLAT:$T144280
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CD@MGEAGIHA@?$HL?5CALL?5TSaveTacticsGainPoint?$CI?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CD@MGEAGIHA@?$HL?5CALL?5TSaveTacticsGainPoint?$CI?$DP?0?$DP@ DB '{'
	DB	' CALL TSaveTacticsGainPoint(?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveTacticsGainPoint@@6B@
CONST	SEGMENT
??_7CSPSaveTacticsGainPoint@@6B@ DD FLAT:??_ECSPSaveTacticsGainPoint@@UAEPAXI@Z ; CSPSaveTacticsGainPoint::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveTacticsGainPoint@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveTacticsGainPoint@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveTacticsGainPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T144105 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveTacticsGainPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveTacticsGainPoint::CSPSaveTacticsGainPoint, COMDAT
; _this$ = ecx

; 2345 : DEF_QUERY(CSPSaveTacticsGainPoint, _T("{ CALL TSaveTacticsGainPoint(?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveTacticsGainPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CD@MGEAGIHA@?$HL?5CALL?5TSaveTacticsGainPoint?$CI?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T144105[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveTacticsGainPoint@@6B@
  0005e	72 0d		 jb	 SHORT $L144278
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L144278:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L144106:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveTacticsGainPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T144277
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveTacticsGainPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveTacticsGainPoint::CSPSaveTacticsGainPoint
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveTacticsGainPoint@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveTacticsGainPoint@@UAEHXZ PROC NEAR	; CSPSaveTacticsGainPoint::GetNumParam, COMDAT
; _this$ = ecx

; 2347 : BEGIN_PARAM(2)

  00000	b8 02 00 00 00	 mov	 eax, 2
  00005	c3		 ret	 0
?GetNumParam@CSPSaveTacticsGainPoint@@UAEHXZ ENDP	; CSPSaveTacticsGainPoint::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveTacticsGainPoint@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveTacticsGainPoint@@UAEFH@Z PROC NEAR ; CSPSaveTacticsGainPoint::BindParameters, COMDAT
; _this$ = ecx

; 2347 : BEGIN_PARAM(2)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 2348 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwCharID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L114962
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L114962
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 20		 jne	 SHORT $L114957
$L114962:

; 2349 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_dwGainPoint)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L114957
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L114957:
  0004f	5f		 pop	 edi
  00050	5e		 pop	 esi

; 2350 : END_PARAM()

  00051	c2 04 00	 ret	 4
?BindParameters@CSPSaveTacticsGainPoint@@UAEFH@Z ENDP	; CSPSaveTacticsGainPoint::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveTacticsGainPoint@@UAE@XZ		; CSPSaveTacticsGainPoint::~CSPSaveTacticsGainPoint
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveTacticsGainPoint@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveTacticsGainPoint@@UAEPAXI@Z PROC NEAR	; CSPSaveTacticsGainPoint::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveTacticsGainPoint@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L144292
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L144292:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveTacticsGainPoint@@UAEPAXI@Z ENDP		; CSPSaveTacticsGainPoint::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveTacticsGainPoint@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveTacticsGainPoint@@UAE@XZ PROC NEAR		; CSPSaveTacticsGainPoint::~CSPSaveTacticsGainPoint, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveTacticsGainPoint@@UAE@XZ ENDP			; CSPSaveTacticsGainPoint::~CSPSaveTacticsGainPoint
_TEXT	ENDS
PUBLIC	??0CSPSaveMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveMonthRank::CSPSaveMonthRank
PUBLIC	?GetNumParam@CSPSaveMonthRank@@UAEHXZ		; CSPSaveMonthRank::GetNumParam
PUBLIC	?BindParameters@CSPSaveMonthRank@@UAEFH@Z	; CSPSaveMonthRank::BindParameters
PUBLIC	??_7CSPSaveMonthRank@@6B@			; CSPSaveMonthRank::`vftable'
PUBLIC	??_GCSPSaveMonthRank@@UAEPAXI@Z			; CSPSaveMonthRank::`scalar deleting destructor'
PUBLIC	??_C@_0EA@GFNNMJNG@?$HL?5CALL?5TSaveMonthRank?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPSaveMonthRank@@UAEPAXI@Z:NEAR		; CSPSaveMonthRank::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T144475 DD	0ffffffffH
	DD	FLAT:$L144301
$T144472 DD	019930520H
	DD	01H
	DD	FLAT:$T144475
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EA@GFNNMJNG@?$HL?5CALL?5TSaveMonthRank?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0EA@GFNNMJNG@?$HL?5CALL?5TSaveMonthRank?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@ DB '{'
	DB	' CALL TSaveMonthRank(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)'
	DB	'}', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7CSPSaveMonthRank@@6B@
CONST	SEGMENT
??_7CSPSaveMonthRank@@6B@ DD FLAT:??_ECSPSaveMonthRank@@UAEPAXI@Z ; CSPSaveMonthRank::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPSaveMonthRank@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPSaveMonthRank@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPSaveMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T144300 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPSaveMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPSaveMonthRank::CSPSaveMonthRank, COMDAT
; _this$ = ecx

; 2377 : DEF_QUERY(CSPSaveMonthRank,_T("{ CALL TSaveMonthRank(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPSaveMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EA@GFNNMJNG@?$HL?5CALL?5TSaveMonthRank?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T144300[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPSaveMonthRank@@6B@
  0005e	72 0d		 jb	 SHORT $L144473
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L144473:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L144301:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPSaveMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T144472
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPSaveMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPSaveMonthRank::CSPSaveMonthRank
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPSaveMonthRank@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPSaveMonthRank@@UAEHXZ PROC NEAR		; CSPSaveMonthRank::GetNumParam, COMDAT
; _this$ = ecx

; 2379 : BEGIN_PARAM(20)

  00000	b8 14 00 00 00	 mov	 eax, 20			; 00000014H
  00005	c3		 ret	 0
?GetNumParam@CSPSaveMonthRank@@UAEHXZ ENDP		; CSPSaveMonthRank::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPSaveMonthRank@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPSaveMonthRank@@UAEFH@Z PROC NEAR	; CSPSaveMonthRank::BindParameters, COMDAT
; _this$ = ecx

; 2379 : BEGIN_PARAM(20)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 2380 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bMonth)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L144484
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L144484
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 2b 03 00
	00		 jne	 $L115021
$L144484:

; 2381 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bRank)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L144486
  00040	8d 8e 2d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3117]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L144486:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L144501
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 00 03 00
	00		 jne	 $L115021
$L144501:

; 2382 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bMonthRank)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L144502
  0006b	8d 96 2e 0c 00
	00		 lea	 edx, DWORD PTR [esi+3118]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L144502:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L144503
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 d5 02 00
	00		 jne	 $L115021
$L144503:

; 2383 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwChaID)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L144504
  00096	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L144504:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 0a		 je	 SHORT $L115032
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 aa 02 00
	00		 jne	 $L115021
$L115032:

; 2384 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szName)

  000b7	3b fb		 cmp	 edi, ebx
  000b9	c7 86 20 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2080], -3 ; fffffffdH
  000c3	75 14		 jne	 SHORT $L115033
  000c5	6a 33		 push	 51			; 00000033H
  000c7	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  000cd	51		 push	 ecx
  000ce	6a 05		 push	 5
  000d0	6a 01		 push	 1
  000d2	8b ce		 mov	 ecx, esi
  000d4	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L115033:
  000d9	66 3b c3	 cmp	 ax, bx
  000dc	74 0a		 je	 SHORT $L144485
  000de	66 3d 01 00	 cmp	 ax, 1
  000e2	0f 85 79 02 00
	00		 jne	 $L115021
$L144485:

; 2385 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwTotalPoint)

  000e8	3b fb		 cmp	 edi, ebx
  000ea	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000f0	75 12		 jne	 SHORT $L115035
  000f2	8d 96 68 0c 00
	00		 lea	 edx, DWORD PTR [esi+3176]
  000f8	52		 push	 edx
  000f9	6a 06		 push	 6
  000fb	6a 01		 push	 1
  000fd	8b ce		 mov	 ecx, esi
  000ff	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115035:
  00104	66 3b c3	 cmp	 ax, bx
  00107	74 0a		 je	 SHORT $L144487
  00109	66 3d 01 00	 cmp	 ax, 1
  0010d	0f 85 4e 02 00
	00		 jne	 $L115021
$L144487:

; 2386 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwMonthPoint)

  00113	3b fb		 cmp	 edi, ebx
  00115	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  0011b	75 12		 jne	 SHORT $L115037
  0011d	8d 86 6c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3180]
  00123	50		 push	 eax
  00124	6a 07		 push	 7
  00126	6a 01		 push	 1
  00128	8b ce		 mov	 ecx, esi
  0012a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115037:
  0012f	66 3b c3	 cmp	 ax, bx
  00132	74 0a		 je	 SHORT $L144488
  00134	66 3d 01 00	 cmp	 ax, 1
  00138	0f 85 23 02 00
	00		 jne	 $L115021
$L144488:

; 2387 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wMonthWin)

  0013e	3b fb		 cmp	 edi, ebx
  00140	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  00146	75 12		 jne	 SHORT $L115039
  00148	8d 8e 70 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3184]
  0014e	51		 push	 ecx
  0014f	6a 08		 push	 8
  00151	6a 01		 push	 1
  00153	8b ce		 mov	 ecx, esi
  00155	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L115039:
  0015a	66 3b c3	 cmp	 ax, bx
  0015d	74 0a		 je	 SHORT $L144489
  0015f	66 3d 01 00	 cmp	 ax, 1
  00163	0f 85 f8 01 00
	00		 jne	 $L115021
$L144489:

; 2388 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wMonthLose)

  00169	3b fb		 cmp	 edi, ebx
  0016b	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  00171	75 12		 jne	 SHORT $L115041
  00173	8d 96 72 0c 00
	00		 lea	 edx, DWORD PTR [esi+3186]
  00179	52		 push	 edx
  0017a	6a 09		 push	 9
  0017c	6a 01		 push	 1
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L115041:
  00185	66 3b c3	 cmp	 ax, bx
  00188	74 0a		 je	 SHORT $L144490
  0018a	66 3d 01 00	 cmp	 ax, 1
  0018e	0f 85 cd 01 00
	00		 jne	 $L115021
$L144490:

; 2389 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwTotalWin)

  00194	3b fb		 cmp	 edi, ebx
  00196	89 9e 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebx
  0019c	75 12		 jne	 SHORT $L115043
  0019e	8d 86 74 0c 00
	00		 lea	 eax, DWORD PTR [esi+3188]
  001a4	50		 push	 eax
  001a5	6a 0a		 push	 10			; 0000000aH
  001a7	6a 01		 push	 1
  001a9	8b ce		 mov	 ecx, esi
  001ab	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115043:
  001b0	66 3b c3	 cmp	 ax, bx
  001b3	74 0a		 je	 SHORT $L144491
  001b5	66 3d 01 00	 cmp	 ax, 1
  001b9	0f 85 a2 01 00
	00		 jne	 $L115021
$L144491:

; 2390 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwTotalLose)

  001bf	3b fb		 cmp	 edi, ebx
  001c1	89 9e 38 08 00
	00		 mov	 DWORD PTR [esi+2104], ebx
  001c7	75 12		 jne	 SHORT $L115045
  001c9	8d 8e 78 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3192]
  001cf	51		 push	 ecx
  001d0	6a 0b		 push	 11			; 0000000bH
  001d2	6a 01		 push	 1
  001d4	8b ce		 mov	 ecx, esi
  001d6	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115045:
  001db	66 3b c3	 cmp	 ax, bx
  001de	74 0a		 je	 SHORT $L144492
  001e0	66 3d 01 00	 cmp	 ax, 1
  001e4	0f 85 77 01 00
	00		 jne	 $L115021
$L144492:

; 2391 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bCountry)

  001ea	3b fb		 cmp	 edi, ebx
  001ec	89 9e 3c 08 00
	00		 mov	 DWORD PTR [esi+2108], ebx
  001f2	75 12		 jne	 SHORT $L115047
  001f4	8d 96 7c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3196]
  001fa	52		 push	 edx
  001fb	6a 0c		 push	 12			; 0000000cH
  001fd	6a 01		 push	 1
  001ff	8b ce		 mov	 ecx, esi
  00201	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115047:
  00206	66 3b c3	 cmp	 ax, bx
  00209	74 0a		 je	 SHORT $L144493
  0020b	66 3d 01 00	 cmp	 ax, 1
  0020f	0f 85 4c 01 00
	00		 jne	 $L115021
$L144493:

; 2392 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bLevel)

  00215	3b fb		 cmp	 edi, ebx
  00217	89 9e 40 08 00
	00		 mov	 DWORD PTR [esi+2112], ebx
  0021d	75 12		 jne	 SHORT $L115049
  0021f	8d 86 7d 0c 00
	00		 lea	 eax, DWORD PTR [esi+3197]
  00225	50		 push	 eax
  00226	6a 0d		 push	 13			; 0000000dH
  00228	6a 01		 push	 1
  0022a	8b ce		 mov	 ecx, esi
  0022c	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115049:
  00231	66 3b c3	 cmp	 ax, bx
  00234	74 0a		 je	 SHORT $L144494
  00236	66 3d 01 00	 cmp	 ax, 1
  0023a	0f 85 21 01 00
	00		 jne	 $L115021
$L144494:

; 2393 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bClass)

  00240	3b fb		 cmp	 edi, ebx
  00242	89 9e 44 08 00
	00		 mov	 DWORD PTR [esi+2116], ebx
  00248	75 12		 jne	 SHORT $L115051
  0024a	8d 8e 7e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3198]
  00250	51		 push	 ecx
  00251	6a 0e		 push	 14			; 0000000eH
  00253	6a 01		 push	 1
  00255	8b ce		 mov	 ecx, esi
  00257	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115051:
  0025c	66 3b c3	 cmp	 ax, bx
  0025f	74 0a		 je	 SHORT $L144495
  00261	66 3d 01 00	 cmp	 ax, 1
  00265	0f 85 f6 00 00
	00		 jne	 $L115021
$L144495:

; 2394 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bRace)

  0026b	3b fb		 cmp	 edi, ebx
  0026d	89 9e 48 08 00
	00		 mov	 DWORD PTR [esi+2120], ebx
  00273	75 12		 jne	 SHORT $L115053
  00275	8d 96 7f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3199]
  0027b	52		 push	 edx
  0027c	6a 0f		 push	 15			; 0000000fH
  0027e	6a 01		 push	 1
  00280	8b ce		 mov	 ecx, esi
  00282	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115053:
  00287	66 3b c3	 cmp	 ax, bx
  0028a	74 0a		 je	 SHORT $L144496
  0028c	66 3d 01 00	 cmp	 ax, 1
  00290	0f 85 cb 00 00
	00		 jne	 $L115021
$L144496:

; 2395 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bSex)

  00296	3b fb		 cmp	 edi, ebx
  00298	89 9e 4c 08 00
	00		 mov	 DWORD PTR [esi+2124], ebx
  0029e	75 12		 jne	 SHORT $L115055
  002a0	8d 86 80 0c 00
	00		 lea	 eax, DWORD PTR [esi+3200]
  002a6	50		 push	 eax
  002a7	6a 10		 push	 16			; 00000010H
  002a9	6a 01		 push	 1
  002ab	8b ce		 mov	 ecx, esi
  002ad	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115055:
  002b2	66 3b c3	 cmp	 ax, bx
  002b5	74 0a		 je	 SHORT $L144497
  002b7	66 3d 01 00	 cmp	 ax, 1
  002bb	0f 85 a0 00 00
	00		 jne	 $L115021
$L144497:

; 2396 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bHair)

  002c1	3b fb		 cmp	 edi, ebx
  002c3	89 9e 50 08 00
	00		 mov	 DWORD PTR [esi+2128], ebx
  002c9	75 12		 jne	 SHORT $L115057
  002cb	8d 8e 81 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3201]
  002d1	51		 push	 ecx
  002d2	6a 11		 push	 17			; 00000011H
  002d4	6a 01		 push	 1
  002d6	8b ce		 mov	 ecx, esi
  002d8	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115057:
  002dd	66 3b c3	 cmp	 ax, bx
  002e0	74 06		 je	 SHORT $L144498
  002e2	66 3d 01 00	 cmp	 ax, 1
  002e6	75 79		 jne	 SHORT $L115021
$L144498:

; 2397 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bFace)

  002e8	3b fb		 cmp	 edi, ebx
  002ea	89 9e 54 08 00
	00		 mov	 DWORD PTR [esi+2132], ebx
  002f0	75 12		 jne	 SHORT $L115059
  002f2	8d 96 82 0c 00
	00		 lea	 edx, DWORD PTR [esi+3202]
  002f8	52		 push	 edx
  002f9	6a 12		 push	 18			; 00000012H
  002fb	6a 01		 push	 1
  002fd	8b ce		 mov	 ecx, esi
  002ff	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115059:
  00304	66 3b c3	 cmp	 ax, bx
  00307	74 06		 je	 SHORT $L144499
  00309	66 3d 01 00	 cmp	 ax, 1
  0030d	75 52		 jne	 SHORT $L115021
$L144499:

; 2398 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szSay)

  0030f	3b fb		 cmp	 edi, ebx
  00311	c7 86 58 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2136], -3 ; fffffffdH
  0031b	75 17		 jne	 SHORT $L115061
  0031d	68 01 01 00 00	 push	 257			; 00000101H
  00322	8d 86 83 0c 00
	00		 lea	 eax, DWORD PTR [esi+3203]
  00328	50		 push	 eax
  00329	6a 13		 push	 19			; 00000013H
  0032b	6a 01		 push	 1
  0032d	8b ce		 mov	 ecx, esi
  0032f	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L115061:
  00334	66 3b c3	 cmp	 ax, bx
  00337	74 06		 je	 SHORT $L144500
  00339	66 3d 01 00	 cmp	 ax, 1
  0033d	75 22		 jne	 SHORT $L115021
$L144500:

; 2399 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szGuild)

  0033f	3b fb		 cmp	 edi, ebx
  00341	c7 86 5c 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2140], -3 ; fffffffdH
  0034b	75 14		 jne	 SHORT $L115021
  0034d	6a 33		 push	 51			; 00000033H
  0034f	8d 8e 84 0d 00
	00		 lea	 ecx, DWORD PTR [esi+3460]
  00355	51		 push	 ecx
  00356	6a 14		 push	 20			; 00000014H
  00358	6a 01		 push	 1
  0035a	8b ce		 mov	 ecx, esi
  0035c	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L115021:
  00361	5f		 pop	 edi
  00362	5e		 pop	 esi
  00363	5b		 pop	 ebx

; 2400 : END_PARAM()

  00364	c2 04 00	 ret	 4
?BindParameters@CSPSaveMonthRank@@UAEFH@Z ENDP		; CSPSaveMonthRank::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPSaveMonthRank@@UAE@XZ			; CSPSaveMonthRank::~CSPSaveMonthRank
; Function compile flags: /Ogty
;	COMDAT ??_GCSPSaveMonthRank@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPSaveMonthRank@@UAEPAXI@Z PROC NEAR		; CSPSaveMonthRank::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPSaveMonthRank@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L144508
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L144508:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPSaveMonthRank@@UAEPAXI@Z ENDP			; CSPSaveMonthRank::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPSaveMonthRank@@UAE@XZ
_TEXT	SEGMENT
??1CSPSaveMonthRank@@UAE@XZ PROC NEAR			; CSPSaveMonthRank::~CSPSaveMonthRank, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPSaveMonthRank@@UAE@XZ ENDP			; CSPSaveMonthRank::~CSPSaveMonthRank
_TEXT	ENDS
PUBLIC	??0CSPInitMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPInitMonthPvPoint::CSPInitMonthPvPoint
PUBLIC	?GetNumParam@CSPInitMonthPvPoint@@UAEHXZ	; CSPInitMonthPvPoint::GetNumParam
PUBLIC	?BindParameters@CSPInitMonthPvPoint@@UAEFH@Z	; CSPInitMonthPvPoint::BindParameters
PUBLIC	??_7CSPInitMonthPvPoint@@6B@			; CSPInitMonthPvPoint::`vftable'
PUBLIC	??_GCSPInitMonthPvPoint@@UAEPAXI@Z		; CSPInitMonthPvPoint::`scalar deleting destructor'
PUBLIC	??_C@_0ED@OOCEJMB@?$HL?$DP?5?$DN?5CALL?5TInitMonthPvPoint?$CI?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPInitMonthPvPoint@@UAEPAXI@Z:NEAR		; CSPInitMonthPvPoint::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T144691 DD	0ffffffffH
	DD	FLAT:$L144517
$T144688 DD	019930520H
	DD	01H
	DD	FLAT:$T144691
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0ED@OOCEJMB@?$HL?$DP?5?$DN?5CALL?5TInitMonthPvPoint?$CI?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0ED@OOCEJMB@?$HL?$DP?5?$DN?5CALL?5TInitMonthPvPoint?$CI?$DP?0?$DP?0@ DB '{'
	DB	'? = CALL TInitMonthPvPoint(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,'
	DB	'?) }', 00H					; `string'
CONST	ENDS
;	COMDAT ??_7CSPInitMonthPvPoint@@6B@
CONST	SEGMENT
??_7CSPInitMonthPvPoint@@6B@ DD FLAT:??_ECSPInitMonthPvPoint@@UAEPAXI@Z ; CSPInitMonthPvPoint::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPInitMonthPvPoint@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPInitMonthPvPoint@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPInitMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T144516 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPInitMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPInitMonthPvPoint::CSPInitMonthPvPoint, COMDAT
; _this$ = ecx

; 2426 : DEF_QUERY(CSPInitMonthPvPoint, _T("{? = CALL TInitMonthPvPoint(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) }"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPInitMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0ED@OOCEJMB@?$HL?$DP?5?$DN?5CALL?5TInitMonthPvPoint?$CI?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T144516[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPInitMonthPvPoint@@6B@
  0005e	72 0d		 jb	 SHORT $L144689
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L144689:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L144517:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPInitMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T144688
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPInitMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPInitMonthPvPoint::CSPInitMonthPvPoint
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPInitMonthPvPoint@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPInitMonthPvPoint@@UAEHXZ PROC NEAR	; CSPInitMonthPvPoint::GetNumParam, COMDAT
; _this$ = ecx

; 2428 : BEGIN_PARAM(19)

  00000	b8 13 00 00 00	 mov	 eax, 19			; 00000013H
  00005	c3		 ret	 0
?GetNumParam@CSPInitMonthPvPoint@@UAEHXZ ENDP		; CSPInitMonthPvPoint::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPInitMonthPvPoint@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPInitMonthPvPoint@@UAEFH@Z PROC NEAR	; CSPInitMonthPvPoint::BindParameters, COMDAT
; _this$ = ecx

; 2428 : BEGIN_PARAM(19)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 2429 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L144700
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L144700
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 f7 02 00
	00		 jne	 $L115120
$L144700:

; 2430 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bMonth)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L144702
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L144702:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L144703
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 cc 02 00
	00		 jne	 $L115120
$L144703:

; 2431 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwMTotalPoint)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L144704
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L144704:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L144705
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 a1 02 00
	00		 jne	 $L115120
$L144705:

; 2432 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_dwCharID)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L115130
  00096	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 04		 push	 4
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115130:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 0a		 je	 SHORT $L115131
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 76 02 00
	00		 jne	 $L115120
$L115131:

; 2433 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szName)

  000b7	3b fb		 cmp	 edi, ebx
  000b9	c7 86 20 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2080], -3 ; fffffffdH
  000c3	75 14		 jne	 SHORT $L115132
  000c5	6a 33		 push	 51			; 00000033H
  000c7	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  000cd	51		 push	 ecx
  000ce	6a 05		 push	 5
  000d0	6a 04		 push	 4
  000d2	8b ce		 mov	 ecx, esi
  000d4	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L115132:
  000d9	66 3b c3	 cmp	 ax, bx
  000dc	74 0a		 je	 SHORT $L144701
  000de	66 3d 01 00	 cmp	 ax, 1
  000e2	0f 85 45 02 00
	00		 jne	 $L115120
$L144701:

; 2434 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_dwTotalPoint)

  000e8	3b fb		 cmp	 edi, ebx
  000ea	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000f0	75 12		 jne	 SHORT $L115134
  000f2	8d 96 70 0c 00
	00		 lea	 edx, DWORD PTR [esi+3184]
  000f8	52		 push	 edx
  000f9	6a 06		 push	 6
  000fb	6a 04		 push	 4
  000fd	8b ce		 mov	 ecx, esi
  000ff	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115134:
  00104	66 3b c3	 cmp	 ax, bx
  00107	74 0a		 je	 SHORT $L115135
  00109	66 3d 01 00	 cmp	 ax, 1
  0010d	0f 85 1a 02 00
	00		 jne	 $L115120
$L115135:

; 2435 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_dwMonthPoint)

  00113	3b fb		 cmp	 edi, ebx
  00115	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  0011b	75 12		 jne	 SHORT $L115136
  0011d	8d 86 74 0c 00
	00		 lea	 eax, DWORD PTR [esi+3188]
  00123	50		 push	 eax
  00124	6a 07		 push	 7
  00126	6a 04		 push	 4
  00128	8b ce		 mov	 ecx, esi
  0012a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115136:
  0012f	66 3b c3	 cmp	 ax, bx
  00132	74 0a		 je	 SHORT $L115137
  00134	66 3d 01 00	 cmp	 ax, 1
  00138	0f 85 ef 01 00
	00		 jne	 $L115120
$L115137:

; 2436 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_wMonthWin)

  0013e	3b fb		 cmp	 edi, ebx
  00140	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  00146	75 12		 jne	 SHORT $L115138
  00148	8d 8e 78 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3192]
  0014e	51		 push	 ecx
  0014f	6a 08		 push	 8
  00151	6a 04		 push	 4
  00153	8b ce		 mov	 ecx, esi
  00155	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L115138:
  0015a	66 3b c3	 cmp	 ax, bx
  0015d	74 0a		 je	 SHORT $L115139
  0015f	66 3d 01 00	 cmp	 ax, 1
  00163	0f 85 c4 01 00
	00		 jne	 $L115120
$L115139:

; 2437 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_wMonthLose)

  00169	3b fb		 cmp	 edi, ebx
  0016b	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  00171	75 12		 jne	 SHORT $L115140
  00173	8d 96 7a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3194]
  00179	52		 push	 edx
  0017a	6a 09		 push	 9
  0017c	6a 04		 push	 4
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L115140:
  00185	66 3b c3	 cmp	 ax, bx
  00188	74 0a		 je	 SHORT $L115141
  0018a	66 3d 01 00	 cmp	 ax, 1
  0018e	0f 85 99 01 00
	00		 jne	 $L115120
$L115141:

; 2438 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_dwTotalWin)

  00194	3b fb		 cmp	 edi, ebx
  00196	89 9e 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebx
  0019c	75 12		 jne	 SHORT $L115142
  0019e	8d 86 7c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3196]
  001a4	50		 push	 eax
  001a5	6a 0a		 push	 10			; 0000000aH
  001a7	6a 04		 push	 4
  001a9	8b ce		 mov	 ecx, esi
  001ab	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115142:
  001b0	66 3b c3	 cmp	 ax, bx
  001b3	74 0a		 je	 SHORT $L115143
  001b5	66 3d 01 00	 cmp	 ax, 1
  001b9	0f 85 6e 01 00
	00		 jne	 $L115120
$L115143:

; 2439 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_dwTotalLose)

  001bf	3b fb		 cmp	 edi, ebx
  001c1	89 9e 38 08 00
	00		 mov	 DWORD PTR [esi+2104], ebx
  001c7	75 12		 jne	 SHORT $L115144
  001c9	8d 8e 80 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3200]
  001cf	51		 push	 ecx
  001d0	6a 0b		 push	 11			; 0000000bH
  001d2	6a 04		 push	 4
  001d4	8b ce		 mov	 ecx, esi
  001d6	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115144:
  001db	66 3b c3	 cmp	 ax, bx
  001de	74 0a		 je	 SHORT $L115145
  001e0	66 3d 01 00	 cmp	 ax, 1
  001e4	0f 85 43 01 00
	00		 jne	 $L115120
$L115145:

; 2440 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_bCountry)

  001ea	3b fb		 cmp	 edi, ebx
  001ec	89 9e 3c 08 00
	00		 mov	 DWORD PTR [esi+2108], ebx
  001f2	75 12		 jne	 SHORT $L115146
  001f4	8d 96 84 0c 00
	00		 lea	 edx, DWORD PTR [esi+3204]
  001fa	52		 push	 edx
  001fb	6a 0c		 push	 12			; 0000000cH
  001fd	6a 04		 push	 4
  001ff	8b ce		 mov	 ecx, esi
  00201	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115146:
  00206	66 3b c3	 cmp	 ax, bx
  00209	74 0a		 je	 SHORT $L115147
  0020b	66 3d 01 00	 cmp	 ax, 1
  0020f	0f 85 18 01 00
	00		 jne	 $L115120
$L115147:

; 2441 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_bLevel)

  00215	3b fb		 cmp	 edi, ebx
  00217	89 9e 40 08 00
	00		 mov	 DWORD PTR [esi+2112], ebx
  0021d	75 12		 jne	 SHORT $L115148
  0021f	8d 86 85 0c 00
	00		 lea	 eax, DWORD PTR [esi+3205]
  00225	50		 push	 eax
  00226	6a 0d		 push	 13			; 0000000dH
  00228	6a 04		 push	 4
  0022a	8b ce		 mov	 ecx, esi
  0022c	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115148:
  00231	66 3b c3	 cmp	 ax, bx
  00234	74 0a		 je	 SHORT $L115149
  00236	66 3d 01 00	 cmp	 ax, 1
  0023a	0f 85 ed 00 00
	00		 jne	 $L115120
$L115149:

; 2442 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_bClass)

  00240	3b fb		 cmp	 edi, ebx
  00242	89 9e 44 08 00
	00		 mov	 DWORD PTR [esi+2116], ebx
  00248	75 12		 jne	 SHORT $L115150
  0024a	8d 8e 86 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3206]
  00250	51		 push	 ecx
  00251	6a 0e		 push	 14			; 0000000eH
  00253	6a 04		 push	 4
  00255	8b ce		 mov	 ecx, esi
  00257	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115150:
  0025c	66 3b c3	 cmp	 ax, bx
  0025f	74 0a		 je	 SHORT $L115151
  00261	66 3d 01 00	 cmp	 ax, 1
  00265	0f 85 c2 00 00
	00		 jne	 $L115120
$L115151:

; 2443 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_bRace)

  0026b	3b fb		 cmp	 edi, ebx
  0026d	89 9e 48 08 00
	00		 mov	 DWORD PTR [esi+2120], ebx
  00273	75 12		 jne	 SHORT $L115152
  00275	8d 96 87 0c 00
	00		 lea	 edx, DWORD PTR [esi+3207]
  0027b	52		 push	 edx
  0027c	6a 0f		 push	 15			; 0000000fH
  0027e	6a 04		 push	 4
  00280	8b ce		 mov	 ecx, esi
  00282	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115152:
  00287	66 3b c3	 cmp	 ax, bx
  0028a	74 0a		 je	 SHORT $L115153
  0028c	66 3d 01 00	 cmp	 ax, 1
  00290	0f 85 97 00 00
	00		 jne	 $L115120
$L115153:

; 2444 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_bSex)

  00296	3b fb		 cmp	 edi, ebx
  00298	89 9e 4c 08 00
	00		 mov	 DWORD PTR [esi+2124], ebx
  0029e	75 12		 jne	 SHORT $L115154
  002a0	8d 86 88 0c 00
	00		 lea	 eax, DWORD PTR [esi+3208]
  002a6	50		 push	 eax
  002a7	6a 10		 push	 16			; 00000010H
  002a9	6a 04		 push	 4
  002ab	8b ce		 mov	 ecx, esi
  002ad	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115154:
  002b2	66 3b c3	 cmp	 ax, bx
  002b5	74 06		 je	 SHORT $L115155
  002b7	66 3d 01 00	 cmp	 ax, 1
  002bb	75 70		 jne	 SHORT $L115120
$L115155:

; 2445 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_bHair)

  002bd	3b fb		 cmp	 edi, ebx
  002bf	89 9e 50 08 00
	00		 mov	 DWORD PTR [esi+2128], ebx
  002c5	75 12		 jne	 SHORT $L115156
  002c7	8d 8e 89 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3209]
  002cd	51		 push	 ecx
  002ce	6a 11		 push	 17			; 00000011H
  002d0	6a 04		 push	 4
  002d2	8b ce		 mov	 ecx, esi
  002d4	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115156:
  002d9	66 3b c3	 cmp	 ax, bx
  002dc	74 06		 je	 SHORT $L115157
  002de	66 3d 01 00	 cmp	 ax, 1
  002e2	75 49		 jne	 SHORT $L115120
$L115157:

; 2446 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_bFace)

  002e4	3b fb		 cmp	 edi, ebx
  002e6	89 9e 54 08 00
	00		 mov	 DWORD PTR [esi+2132], ebx
  002ec	75 12		 jne	 SHORT $L115158
  002ee	8d 96 8a 0c 00
	00		 lea	 edx, DWORD PTR [esi+3210]
  002f4	52		 push	 edx
  002f5	6a 12		 push	 18			; 00000012H
  002f7	6a 04		 push	 4
  002f9	8b ce		 mov	 ecx, esi
  002fb	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115158:
  00300	66 3b c3	 cmp	 ax, bx
  00303	74 06		 je	 SHORT $L115159
  00305	66 3d 01 00	 cmp	 ax, 1
  00309	75 22		 jne	 SHORT $L115120
$L115159:

; 2447 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szGuild)

  0030b	3b fb		 cmp	 edi, ebx
  0030d	c7 86 58 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2136], -3 ; fffffffdH
  00317	75 14		 jne	 SHORT $L115120
  00319	6a 33		 push	 51			; 00000033H
  0031b	8d 86 8b 0c 00
	00		 lea	 eax, DWORD PTR [esi+3211]
  00321	50		 push	 eax
  00322	6a 13		 push	 19			; 00000013H
  00324	6a 04		 push	 4
  00326	8b ce		 mov	 ecx, esi
  00328	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L115120:
  0032d	5f		 pop	 edi
  0032e	5e		 pop	 esi
  0032f	5b		 pop	 ebx

; 2448 : END_PARAM()

  00330	c2 04 00	 ret	 4
?BindParameters@CSPInitMonthPvPoint@@UAEFH@Z ENDP	; CSPInitMonthPvPoint::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPInitMonthPvPoint@@UAE@XZ			; CSPInitMonthPvPoint::~CSPInitMonthPvPoint
; Function compile flags: /Ogty
;	COMDAT ??_GCSPInitMonthPvPoint@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPInitMonthPvPoint@@UAEPAXI@Z PROC NEAR		; CSPInitMonthPvPoint::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPInitMonthPvPoint@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L144709
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L144709:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPInitMonthPvPoint@@UAEPAXI@Z ENDP			; CSPInitMonthPvPoint::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPInitMonthPvPoint@@UAE@XZ
_TEXT	SEGMENT
??1CSPInitMonthPvPoint@@UAE@XZ PROC NEAR		; CSPInitMonthPvPoint::~CSPInitMonthPvPoint, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPInitMonthPvPoint@@UAE@XZ ENDP			; CSPInitMonthPvPoint::~CSPInitMonthPvPoint
_TEXT	ENDS
PUBLIC	??0CSPInitMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPInitMonthRank::CSPInitMonthRank
PUBLIC	?GetNumParam@CSPInitMonthRank@@UAEHXZ		; CSPInitMonthRank::GetNumParam
PUBLIC	?BindParameters@CSPInitMonthRank@@UAEFH@Z	; CSPInitMonthRank::BindParameters
PUBLIC	??_7CSPInitMonthRank@@6B@			; CSPInitMonthRank::`vftable'
PUBLIC	??_GCSPInitMonthRank@@UAEPAXI@Z			; CSPInitMonthRank::`scalar deleting destructor'
PUBLIC	??_C@_0BJ@HKLHIECF@?$HLCALL?5TInitMonthRank?$CI?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPInitMonthRank@@UAEPAXI@Z:NEAR		; CSPInitMonthRank::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T144892 DD	0ffffffffH
	DD	FLAT:$L144718
$T144889 DD	019930520H
	DD	01H
	DD	FLAT:$T144892
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BJ@HKLHIECF@?$HLCALL?5TInitMonthRank?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BJ@HKLHIECF@?$HLCALL?5TInitMonthRank?$CI?$DP?$CJ?$HN?$AA@ DB '{CAL'
	DB	'L TInitMonthRank(?)}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CSPInitMonthRank@@6B@
CONST	SEGMENT
??_7CSPInitMonthRank@@6B@ DD FLAT:??_ECSPInitMonthRank@@UAEPAXI@Z ; CSPInitMonthRank::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPInitMonthRank@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPInitMonthRank@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPInitMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T144717 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPInitMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPInitMonthRank::CSPInitMonthRank, COMDAT
; _this$ = ecx

; 2456 : DEF_QUERY(CSPInitMonthRank, _T("{CALL TInitMonthRank(?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPInitMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@HKLHIECF@?$HLCALL?5TInitMonthRank?$CI?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T144717[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPInitMonthRank@@6B@
  0005e	72 0d		 jb	 SHORT $L144890
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L144890:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L144718:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPInitMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T144889
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPInitMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPInitMonthRank::CSPInitMonthRank
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPInitMonthRank@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPInitMonthRank@@UAEHXZ PROC NEAR		; CSPInitMonthRank::GetNumParam, COMDAT
; _this$ = ecx

; 2458 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CSPInitMonthRank@@UAEHXZ ENDP		; CSPInitMonthRank::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPInitMonthRank@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPInitMonthRank@@UAEFH@Z PROC NEAR	; CSPInitMonthRank::BindParameters, COMDAT
; _this$ = ecx

; 2459 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bMonth)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L115199
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115199:

; 2460 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CSPInitMonthRank@@UAEFH@Z ENDP		; CSPInitMonthRank::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPInitMonthRank@@UAE@XZ			; CSPInitMonthRank::~CSPInitMonthRank
; Function compile flags: /Ogty
;	COMDAT ??_GCSPInitMonthRank@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPInitMonthRank@@UAEPAXI@Z PROC NEAR		; CSPInitMonthRank::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPInitMonthRank@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L144904
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L144904:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPInitMonthRank@@UAEPAXI@Z ENDP			; CSPInitMonthRank::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPInitMonthRank@@UAE@XZ
_TEXT	SEGMENT
??1CSPInitMonthRank@@UAE@XZ PROC NEAR			; CSPInitMonthRank::~CSPInitMonthRank, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPInitMonthRank@@UAE@XZ ENDP			; CSPInitMonthRank::~CSPInitMonthRank
_TEXT	ENDS
PUBLIC	??0CSPEventQuarterUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPEventQuarterUpdate::CSPEventQuarterUpdate
PUBLIC	?GetNumParam@CSPEventQuarterUpdate@@UAEHXZ	; CSPEventQuarterUpdate::GetNumParam
PUBLIC	?BindParameters@CSPEventQuarterUpdate@@UAEFH@Z	; CSPEventQuarterUpdate::BindParameters
PUBLIC	??_7CSPEventQuarterUpdate@@6B@			; CSPEventQuarterUpdate::`vftable'
PUBLIC	??_GCSPEventQuarterUpdate@@UAEPAXI@Z		; CSPEventQuarterUpdate::`scalar deleting destructor'
PUBLIC	??_C@_0EK@HDBLJMHG@?$HL?$DP?5?$DN?5CALL?5TEventQuarterUpdate?$CI?$DP?0@ ; `string'
EXTRN	??_ECSPEventQuarterUpdate@@UAEPAXI@Z:NEAR	; CSPEventQuarterUpdate::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T145087 DD	0ffffffffH
	DD	FLAT:$L144913
$T145084 DD	019930520H
	DD	01H
	DD	FLAT:$T145087
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0EK@HDBLJMHG@?$HL?$DP?5?$DN?5CALL?5TEventQuarterUpdate?$CI?$DP?0@
CONST	SEGMENT
??_C@_0EK@HDBLJMHG@?$HL?$DP?5?$DN?5CALL?5TEventQuarterUpdate?$CI?$DP?0@ DB '{'
	DB	'? = CALL TEventQuarterUpdate(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,'
	DB	'?,?,?,?,?)}', 00H				; `string'
CONST	ENDS
;	COMDAT ??_7CSPEventQuarterUpdate@@6B@
CONST	SEGMENT
??_7CSPEventQuarterUpdate@@6B@ DD FLAT:??_ECSPEventQuarterUpdate@@UAEPAXI@Z ; CSPEventQuarterUpdate::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPEventQuarterUpdate@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPEventQuarterUpdate@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPEventQuarterUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T144912 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPEventQuarterUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPEventQuarterUpdate::CSPEventQuarterUpdate, COMDAT
; _this$ = ecx

; 2489 : DEF_QUERY(CSPEventQuarterUpdate,_T("{? = CALL TEventQuarterUpdate(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPEventQuarterUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0EK@HDBLJMHG@?$HL?$DP?5?$DN?5CALL?5TEventQuarterUpdate?$CI?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T144912[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPEventQuarterUpdate@@6B@
  0005e	72 0d		 jb	 SHORT $L145085
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L145085:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L144913:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPEventQuarterUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T145084
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPEventQuarterUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPEventQuarterUpdate::CSPEventQuarterUpdate
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPEventQuarterUpdate@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPEventQuarterUpdate@@UAEHXZ PROC NEAR	; CSPEventQuarterUpdate::GetNumParam, COMDAT
; _this$ = ecx

; 2491 : BEGIN_PARAM(22)

  00000	b8 16 00 00 00	 mov	 eax, 22			; 00000016H
  00005	c3		 ret	 0
?GetNumParam@CSPEventQuarterUpdate@@UAEHXZ ENDP		; CSPEventQuarterUpdate::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPEventQuarterUpdate@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPEventQuarterUpdate@@UAEFH@Z PROC NEAR ; CSPEventQuarterUpdate::BindParameters, COMDAT
; _this$ = ecx

; 2491 : BEGIN_PARAM(22)

  00000	55		 push	 ebp
  00001	56		 push	 esi
  00002	57		 push	 edi

; 2492 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_nRET)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 ed		 xor	 ebp, ebp
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fd		 cmp	 edi, ebp
  0000f	89 ae 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebp
  00015	75 1f		 jne	 SHORT $L115268
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAH@Z ; CSqlBase::BindParam
  00027	66 3b c5	 cmp	 ax, bp
  0002a	74 0a		 je	 SHORT $L115268
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 8b 03 00
	00		 jne	 $L115263
$L115268:

; 2493 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bType)

  00036	3b fd		 cmp	 edi, ebp
  00038	89 ae 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebp
  0003e	75 12		 jne	 SHORT $L115269
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115269:
  00052	66 3b c5	 cmp	 ax, bp
  00055	74 0a		 je	 SHORT $L115270
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 60 03 00
	00		 jne	 $L115263
$L115270:

; 2494 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wID)

  00061	3b fd		 cmp	 edi, ebp
  00063	89 ae 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebp
  00069	75 12		 jne	 SHORT $L115271
  0006b	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L115271:
  0007d	66 3b c5	 cmp	 ax, bp
  00080	74 0a		 je	 SHORT $L115272
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 35 03 00
	00		 jne	 $L115263
$L115272:

; 2495 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bDay)

  0008c	3b fd		 cmp	 edi, ebp
  0008e	89 ae 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebp
  00094	75 12		 jne	 SHORT $L115273
  00096	8d 86 31 0c 00
	00		 lea	 eax, DWORD PTR [esi+3121]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115273:
  000a8	66 3b c5	 cmp	 ax, bp
  000ab	74 0a		 je	 SHORT $L115274
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 0a 03 00
	00		 jne	 $L115263
$L115274:

; 2496 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bHour)

  000b7	3b fd		 cmp	 edi, ebp
  000b9	89 ae 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebp
  000bf	75 12		 jne	 SHORT $L115275
  000c1	8d 8e 32 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3122]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 01		 push	 1
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115275:
  000d3	66 3b c5	 cmp	 ax, bp
  000d6	74 0a		 je	 SHORT $L115276
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 df 02 00
	00		 jne	 $L115263
$L115276:

; 2497 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bMinute)

  000e2	3b fd		 cmp	 edi, ebp
  000e4	89 ae 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebp
  000ea	75 12		 jne	 SHORT $L115277
  000ec	8d 96 33 0c 00
	00		 lea	 edx, DWORD PTR [esi+3123]
  000f2	52		 push	 edx
  000f3	6a 06		 push	 6
  000f5	6a 01		 push	 1
  000f7	8b ce		 mov	 ecx, esi
  000f9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115277:
  000fe	66 3b c5	 cmp	 ax, bp
  00101	74 0a		 je	 SHORT $L115278
  00103	66 3d 01 00	 cmp	 ax, 1
  00107	0f 85 b4 02 00
	00		 jne	 $L115263
$L115278:

; 2498 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wItemID1)

  0010d	3b fd		 cmp	 edi, ebp
  0010f	89 ae 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebp
  00115	75 12		 jne	 SHORT $L115279
  00117	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  0011d	50		 push	 eax
  0011e	6a 07		 push	 7
  00120	6a 01		 push	 1
  00122	8b ce		 mov	 ecx, esi
  00124	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L115279:
  00129	66 3b c5	 cmp	 ax, bp
  0012c	74 0a		 je	 SHORT $L115280
  0012e	66 3d 01 00	 cmp	 ax, 1
  00132	0f 85 89 02 00
	00		 jne	 $L115263
$L115280:

; 2499 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wItemID2)

  00138	3b fd		 cmp	 edi, ebp
  0013a	89 ae 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebp
  00140	75 12		 jne	 SHORT $L115281
  00142	8d 8e 3a 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3130]
  00148	51		 push	 ecx
  00149	6a 08		 push	 8
  0014b	6a 01		 push	 1
  0014d	8b ce		 mov	 ecx, esi
  0014f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L115281:
  00154	66 3b c5	 cmp	 ax, bp
  00157	74 0a		 je	 SHORT $L115282
  00159	66 3d 01 00	 cmp	 ax, 1
  0015d	0f 85 5e 02 00
	00		 jne	 $L115263
$L115282:

; 2500 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wItemID3)

  00163	3b fd		 cmp	 edi, ebp
  00165	89 ae 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebp
  0016b	75 12		 jne	 SHORT $L115283
  0016d	8d 96 3c 0c 00
	00		 lea	 edx, DWORD PTR [esi+3132]
  00173	52		 push	 edx
  00174	6a 09		 push	 9
  00176	6a 01		 push	 1
  00178	8b ce		 mov	 ecx, esi
  0017a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L115283:
  0017f	66 3b c5	 cmp	 ax, bp
  00182	74 0a		 je	 SHORT $L115284
  00184	66 3d 01 00	 cmp	 ax, 1
  00188	0f 85 33 02 00
	00		 jne	 $L115263
$L115284:

; 2501 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wItemID4)

  0018e	3b fd		 cmp	 edi, ebp
  00190	89 ae 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebp
  00196	75 12		 jne	 SHORT $L115285
  00198	8d 86 3e 0c 00
	00		 lea	 eax, DWORD PTR [esi+3134]
  0019e	50		 push	 eax
  0019f	6a 0a		 push	 10			; 0000000aH
  001a1	6a 01		 push	 1
  001a3	8b ce		 mov	 ecx, esi
  001a5	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L115285:
  001aa	66 3b c5	 cmp	 ax, bp
  001ad	74 0a		 je	 SHORT $L115286
  001af	66 3d 01 00	 cmp	 ax, 1
  001b3	0f 85 08 02 00
	00		 jne	 $L115263
$L115286:

; 2502 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_wItemID5)

  001b9	3b fd		 cmp	 edi, ebp
  001bb	89 ae 38 08 00
	00		 mov	 DWORD PTR [esi+2104], ebp
  001c1	75 12		 jne	 SHORT $L115287
  001c3	8d 8e 40 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3136]
  001c9	51		 push	 ecx
  001ca	6a 0b		 push	 11			; 0000000bH
  001cc	6a 01		 push	 1
  001ce	8b ce		 mov	 ecx, esi
  001d0	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L115287:
  001d5	66 3b c5	 cmp	 ax, bp
  001d8	74 0a		 je	 SHORT $L115288
  001da	66 3d 01 00	 cmp	 ax, 1
  001de	0f 85 dd 01 00
	00		 jne	 $L115263
$L115288:

; 2503 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bCount)

  001e4	3b fd		 cmp	 edi, ebp
  001e6	89 ae 3c 08 00
	00		 mov	 DWORD PTR [esi+2108], ebp
  001ec	75 12		 jne	 SHORT $L115289
  001ee	8d 96 42 0c 00
	00		 lea	 edx, DWORD PTR [esi+3138]
  001f4	52		 push	 edx
  001f5	6a 0c		 push	 12			; 0000000cH
  001f7	6a 01		 push	 1
  001f9	8b ce		 mov	 ecx, esi
  001fb	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115289:
  00200	66 3b c5	 cmp	 ax, bp
  00203	74 0a		 je	 SHORT $L115290
  00205	66 3d 01 00	 cmp	 ax, 1
  00209	0f 85 b2 01 00
	00		 jne	 $L115263
$L115290:

; 2504 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szPresent)

  0020f	3b fd		 cmp	 edi, ebp
  00211	53		 push	 ebx
  00212	bb fd ff ff ff	 mov	 ebx, -3			; fffffffdH
  00217	89 9e 40 08 00
	00		 mov	 DWORD PTR [esi+2112], ebx
  0021d	75 14		 jne	 SHORT $L115291
  0021f	6a 33		 push	 51			; 00000033H
  00221	8d 86 43 0c 00
	00		 lea	 eax, DWORD PTR [esi+3139]
  00227	50		 push	 eax
  00228	6a 0d		 push	 13			; 0000000dH
  0022a	6a 01		 push	 1
  0022c	8b ce		 mov	 ecx, esi
  0022e	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L115291:
  00233	66 3b c5	 cmp	 ax, bp
  00236	74 0a		 je	 SHORT $L145096
  00238	66 3d 01 00	 cmp	 ax, 1
  0023c	0f 85 7e 01 00
	00		 jne	 $L145097
$L145096:

; 2505 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szAnnounce)

  00242	3b fd		 cmp	 edi, ebp
  00244	89 9e 44 08 00
	00		 mov	 DWORD PTR [esi+2116], ebx
  0024a	75 17		 jne	 SHORT $L115293
  0024c	68 01 04 00 00	 push	 1025			; 00000401H
  00251	8d 8e 76 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3190]
  00257	51		 push	 ecx
  00258	6a 0e		 push	 14			; 0000000eH
  0025a	6a 01		 push	 1
  0025c	8b ce		 mov	 ecx, esi
  0025e	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L115293:
  00263	66 3b c5	 cmp	 ax, bp
  00266	74 0a		 je	 SHORT $L115294
  00268	66 3d 01 00	 cmp	 ax, 1
  0026c	0f 85 4e 01 00
	00		 jne	 $L145097
$L115294:

; 2506 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szTitle)

  00272	3b fd		 cmp	 edi, ebp
  00274	89 9e 48 08 00
	00		 mov	 DWORD PTR [esi+2120], ebx
  0027a	75 14		 jne	 SHORT $L115295
  0027c	6a 33		 push	 51			; 00000033H
  0027e	8d 96 77 10 00
	00		 lea	 edx, DWORD PTR [esi+4215]
  00284	52		 push	 edx
  00285	6a 0f		 push	 15			; 0000000fH
  00287	6a 01		 push	 1
  00289	8b ce		 mov	 ecx, esi
  0028b	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L115295:
  00290	66 3b c5	 cmp	 ax, bp
  00293	74 0a		 je	 SHORT $L115296
  00295	66 3d 01 00	 cmp	 ax, 1
  00299	0f 85 21 01 00
	00		 jne	 $L145097
$L115296:

; 2507 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT, m_szMessage)

  0029f	3b fd		 cmp	 edi, ebp
  002a1	89 9e 4c 08 00
	00		 mov	 DWORD PTR [esi+2124], ebx
  002a7	75 17		 jne	 SHORT $L115297
  002a9	68 f5 01 00 00	 push	 501			; 000001f5H
  002ae	8d 86 aa 10 00
	00		 lea	 eax, DWORD PTR [esi+4266]
  002b4	50		 push	 eax
  002b5	6a 10		 push	 16			; 00000010H
  002b7	6a 01		 push	 1
  002b9	8b ce		 mov	 ecx, esi
  002bb	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L115297:
  002c0	66 3b c5	 cmp	 ax, bp
  002c3	74 0a		 je	 SHORT $L115298
  002c5	66 3d 01 00	 cmp	 ax, 1
  002c9	0f 85 f1 00 00
	00		 jne	 $L145097
$L115298:

; 2508 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_wOutID)

  002cf	3b fd		 cmp	 edi, ebp
  002d1	89 ae 50 08 00
	00		 mov	 DWORD PTR [esi+2128], ebp
  002d7	75 12		 jne	 SHORT $L115299
  002d9	8d 8e 36 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3126]
  002df	51		 push	 ecx
  002e0	6a 11		 push	 17			; 00000011H
  002e2	6a 04		 push	 4
  002e4	8b ce		 mov	 ecx, esi
  002e6	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L115299:
  002eb	66 3b c5	 cmp	 ax, bp
  002ee	74 0a		 je	 SHORT $L115300
  002f0	66 3d 01 00	 cmp	 ax, 1
  002f4	0f 85 c6 00 00
	00		 jne	 $L145097
$L115300:

; 2509 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT, m_szName1)

  002fa	3b fd		 cmp	 edi, ebp
  002fc	89 9e 54 08 00
	00		 mov	 DWORD PTR [esi+2132], ebx
  00302	75 14		 jne	 SHORT $L115301
  00304	6a 33		 push	 51			; 00000033H
  00306	8d 96 9f 12 00
	00		 lea	 edx, DWORD PTR [esi+4767]
  0030c	52		 push	 edx
  0030d	6a 12		 push	 18			; 00000012H
  0030f	6a 04		 push	 4
  00311	8b ce		 mov	 ecx, esi
  00313	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L115301:
  00318	66 3b c5	 cmp	 ax, bp
  0031b	74 0a		 je	 SHORT $L115302
  0031d	66 3d 01 00	 cmp	 ax, 1
  00321	0f 85 99 00 00
	00		 jne	 $L145097
$L115302:

; 2510 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT, m_szName2)

  00327	3b fd		 cmp	 edi, ebp
  00329	89 9e 58 08 00
	00		 mov	 DWORD PTR [esi+2136], ebx
  0032f	75 14		 jne	 SHORT $L115303
  00331	6a 33		 push	 51			; 00000033H
  00333	8d 86 d2 12 00
	00		 lea	 eax, DWORD PTR [esi+4818]
  00339	50		 push	 eax
  0033a	6a 13		 push	 19			; 00000013H
  0033c	6a 04		 push	 4
  0033e	8b ce		 mov	 ecx, esi
  00340	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L115303:
  00345	66 3b c5	 cmp	 ax, bp
  00348	74 06		 je	 SHORT $L115304
  0034a	66 3d 01 00	 cmp	 ax, 1
  0034e	75 70		 jne	 SHORT $L145097
$L115304:

; 2511 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT, m_szName3)

  00350	3b fd		 cmp	 edi, ebp
  00352	89 9e 5c 08 00
	00		 mov	 DWORD PTR [esi+2140], ebx
  00358	75 14		 jne	 SHORT $L115305
  0035a	6a 33		 push	 51			; 00000033H
  0035c	8d 8e 05 13 00
	00		 lea	 ecx, DWORD PTR [esi+4869]
  00362	51		 push	 ecx
  00363	6a 14		 push	 20			; 00000014H
  00365	6a 04		 push	 4
  00367	8b ce		 mov	 ecx, esi
  00369	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L115305:
  0036e	66 3b c5	 cmp	 ax, bp
  00371	74 06		 je	 SHORT $L115306
  00373	66 3d 01 00	 cmp	 ax, 1
  00377	75 47		 jne	 SHORT $L145097
$L115306:

; 2512 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT, m_szName4)

  00379	3b fd		 cmp	 edi, ebp
  0037b	89 9e 60 08 00
	00		 mov	 DWORD PTR [esi+2144], ebx
  00381	75 14		 jne	 SHORT $L115307
  00383	6a 33		 push	 51			; 00000033H
  00385	8d 96 38 13 00
	00		 lea	 edx, DWORD PTR [esi+4920]
  0038b	52		 push	 edx
  0038c	6a 15		 push	 21			; 00000015H
  0038e	6a 04		 push	 4
  00390	8b ce		 mov	 ecx, esi
  00392	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L115307:
  00397	66 3b c5	 cmp	 ax, bp
  0039a	74 06		 je	 SHORT $L115308
  0039c	66 3d 01 00	 cmp	 ax, 1
  003a0	75 1e		 jne	 SHORT $L145097
$L115308:

; 2513 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT, m_szName5)

  003a2	3b fd		 cmp	 edi, ebp
  003a4	89 9e 64 08 00
	00		 mov	 DWORD PTR [esi+2148], ebx
  003aa	75 14		 jne	 SHORT $L145097
  003ac	6a 33		 push	 51			; 00000033H
  003ae	8d 86 6b 13 00
	00		 lea	 eax, DWORD PTR [esi+4971]
  003b4	50		 push	 eax
  003b5	6a 16		 push	 22			; 00000016H
  003b7	6a 04		 push	 4
  003b9	8b ce		 mov	 ecx, esi
  003bb	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L145097:
  003c0	5b		 pop	 ebx
$L115263:
  003c1	5f		 pop	 edi
  003c2	5e		 pop	 esi
  003c3	5d		 pop	 ebp

; 2514 : END_PARAM()

  003c4	c2 04 00	 ret	 4
?BindParameters@CSPEventQuarterUpdate@@UAEFH@Z ENDP	; CSPEventQuarterUpdate::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPEventQuarterUpdate@@UAE@XZ		; CSPEventQuarterUpdate::~CSPEventQuarterUpdate
; Function compile flags: /Ogty
;	COMDAT ??_GCSPEventQuarterUpdate@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPEventQuarterUpdate@@UAEPAXI@Z PROC NEAR		; CSPEventQuarterUpdate::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPEventQuarterUpdate@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L145101
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L145101:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPEventQuarterUpdate@@UAEPAXI@Z ENDP		; CSPEventQuarterUpdate::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPEventQuarterUpdate@@UAE@XZ
_TEXT	SEGMENT
??1CSPEventQuarterUpdate@@UAE@XZ PROC NEAR		; CSPEventQuarterUpdate::~CSPEventQuarterUpdate, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPEventQuarterUpdate@@UAE@XZ ENDP			; CSPEventQuarterUpdate::~CSPEventQuarterUpdate
_TEXT	ENDS
PUBLIC	??0CSPGetItemName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetItemName::CSPGetItemName
PUBLIC	?GetNumParam@CSPGetItemName@@UAEHXZ		; CSPGetItemName::GetNumParam
PUBLIC	?BindParameters@CSPGetItemName@@UAEFH@Z		; CSPGetItemName::BindParameters
PUBLIC	??_7CSPGetItemName@@6B@				; CSPGetItemName::`vftable'
PUBLIC	??_GCSPGetItemName@@UAEPAXI@Z			; CSPGetItemName::`scalar deleting destructor'
PUBLIC	??_C@_0CJ@FPHBGKNJ@?$HLCALL?5TGetItemName?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPGetItemName@@UAEPAXI@Z:NEAR		; CSPGetItemName::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T145284 DD	0ffffffffH
	DD	FLAT:$L145110
$T145281 DD	019930520H
	DD	01H
	DD	FLAT:$T145284
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CJ@FPHBGKNJ@?$HLCALL?5TGetItemName?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CJ@FPHBGKNJ@?$HLCALL?5TGetItemName?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	'CALL TGetItemName(?,?,?,?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPGetItemName@@6B@
CONST	SEGMENT
??_7CSPGetItemName@@6B@ DD FLAT:??_ECSPGetItemName@@UAEPAXI@Z ; CSPGetItemName::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGetItemName@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGetItemName@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGetItemName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T145109 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGetItemName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGetItemName::CSPGetItemName, COMDAT
; _this$ = ecx

; 2531 : DEF_QUERY(CSPGetItemName,_T("{CALL TGetItemName(?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGetItemName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CJ@FPHBGKNJ@?$HLCALL?5TGetItemName?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T145109[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGetItemName@@6B@
  0005e	72 0d		 jb	 SHORT $L145282
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L145282:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L145110:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGetItemName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T145281
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGetItemName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGetItemName::CSPGetItemName
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGetItemName@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGetItemName@@UAEHXZ PROC NEAR		; CSPGetItemName::GetNumParam, COMDAT
; _this$ = ecx

; 2533 : BEGIN_PARAM(10)

  00000	b8 0a 00 00 00	 mov	 eax, 10			; 0000000aH
  00005	c3		 ret	 0
?GetNumParam@CSPGetItemName@@UAEHXZ ENDP		; CSPGetItemName::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetItemName@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGetItemName@@UAEFH@Z PROC NEAR	; CSPGetItemName::BindParameters, COMDAT
; _this$ = ecx

; 2533 : BEGIN_PARAM(10)

  00000	55		 push	 ebp
  00001	56		 push	 esi
  00002	57		 push	 edi

; 2534 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wItemID1)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 ed		 xor	 ebp, ebp
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fd		 cmp	 edi, ebp
  0000f	89 ae 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebp
  00015	75 1f		 jne	 SHORT $L145293
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
  00027	66 3b c5	 cmp	 ax, bp
  0002a	74 0a		 je	 SHORT $L145293
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 79 01 00
	00		 jne	 $L115357
$L145293:

; 2535 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wItemID2)

  00036	3b fd		 cmp	 edi, ebp
  00038	89 ae 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebp
  0003e	75 12		 jne	 SHORT $L145295
  00040	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L145295:
  00052	66 3b c5	 cmp	 ax, bp
  00055	74 0a		 je	 SHORT $L145296
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 4e 01 00
	00		 jne	 $L115357
$L145296:

; 2536 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wItemID3)

  00061	3b fd		 cmp	 edi, ebp
  00063	89 ae 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebp
  00069	75 12		 jne	 SHORT $L145297
  0006b	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L145297:
  0007d	66 3b c5	 cmp	 ax, bp
  00080	74 0a		 je	 SHORT $L145298
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 23 01 00
	00		 jne	 $L115357
$L145298:

; 2537 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wItemID4)

  0008c	3b fd		 cmp	 edi, ebp
  0008e	89 ae 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebp
  00094	75 12		 jne	 SHORT $L145299
  00096	8d 86 32 0c 00
	00		 lea	 eax, DWORD PTR [esi+3122]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L145299:
  000a8	66 3b c5	 cmp	 ax, bp
  000ab	74 0a		 je	 SHORT $L145300
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	0f 85 f8 00 00
	00		 jne	 $L115357
$L145300:

; 2538 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wItemID5)

  000b7	3b fd		 cmp	 edi, ebp
  000b9	89 ae 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebp
  000bf	75 12		 jne	 SHORT $L145301
  000c1	8d 8e 34 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3124]
  000c7	51		 push	 ecx
  000c8	6a 05		 push	 5
  000ca	6a 01		 push	 1
  000cc	8b ce		 mov	 ecx, esi
  000ce	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L145301:
  000d3	66 3b c5	 cmp	 ax, bp
  000d6	74 0a		 je	 SHORT $L115370
  000d8	66 3d 01 00	 cmp	 ax, 1
  000dc	0f 85 cd 00 00
	00		 jne	 $L115357
$L115370:

; 2539 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szName1)

  000e2	3b fd		 cmp	 edi, ebp
  000e4	53		 push	 ebx
  000e5	bb fd ff ff ff	 mov	 ebx, -3			; fffffffdH
  000ea	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000f0	75 14		 jne	 SHORT $L115371
  000f2	6a 33		 push	 51			; 00000033H
  000f4	8d 96 36 0c 00
	00		 lea	 edx, DWORD PTR [esi+3126]
  000fa	52		 push	 edx
  000fb	6a 06		 push	 6
  000fd	6a 04		 push	 4
  000ff	8b ce		 mov	 ecx, esi
  00101	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L115371:
  00106	66 3b c5	 cmp	 ax, bp
  00109	74 0a		 je	 SHORT $L145294
  0010b	66 3d 01 00	 cmp	 ax, 1
  0010f	0f 85 99 00 00
	00		 jne	 $L145302
$L145294:

; 2540 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szName2)

  00115	3b fd		 cmp	 edi, ebp
  00117	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  0011d	75 14		 jne	 SHORT $L115373
  0011f	6a 33		 push	 51			; 00000033H
  00121	8d 86 69 0c 00
	00		 lea	 eax, DWORD PTR [esi+3177]
  00127	50		 push	 eax
  00128	6a 07		 push	 7
  0012a	6a 04		 push	 4
  0012c	8b ce		 mov	 ecx, esi
  0012e	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L115373:
  00133	66 3b c5	 cmp	 ax, bp
  00136	74 06		 je	 SHORT $L115374
  00138	66 3d 01 00	 cmp	 ax, 1
  0013c	75 70		 jne	 SHORT $L145302
$L115374:

; 2541 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szName3)

  0013e	3b fd		 cmp	 edi, ebp
  00140	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  00146	75 14		 jne	 SHORT $L115375
  00148	6a 33		 push	 51			; 00000033H
  0014a	8d 8e 9c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3228]
  00150	51		 push	 ecx
  00151	6a 08		 push	 8
  00153	6a 04		 push	 4
  00155	8b ce		 mov	 ecx, esi
  00157	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L115375:
  0015c	66 3b c5	 cmp	 ax, bp
  0015f	74 06		 je	 SHORT $L115376
  00161	66 3d 01 00	 cmp	 ax, 1
  00165	75 47		 jne	 SHORT $L145302
$L115376:

; 2542 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szName4)

  00167	3b fd		 cmp	 edi, ebp
  00169	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  0016f	75 14		 jne	 SHORT $L115377
  00171	6a 33		 push	 51			; 00000033H
  00173	8d 96 cf 0c 00
	00		 lea	 edx, DWORD PTR [esi+3279]
  00179	52		 push	 edx
  0017a	6a 09		 push	 9
  0017c	6a 04		 push	 4
  0017e	8b ce		 mov	 ecx, esi
  00180	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L115377:
  00185	66 3b c5	 cmp	 ax, bp
  00188	74 06		 je	 SHORT $L115378
  0018a	66 3d 01 00	 cmp	 ax, 1
  0018e	75 1e		 jne	 SHORT $L145302
$L115378:

; 2543 : 	PARAM_ENTRY_STR(SQL_PARAM_OUTPUT,m_szName5)

  00190	3b fd		 cmp	 edi, ebp
  00192	89 9e 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebx
  00198	75 14		 jne	 SHORT $L145302
  0019a	6a 33		 push	 51			; 00000033H
  0019c	8d 86 02 0d 00
	00		 lea	 eax, DWORD PTR [esi+3330]
  001a2	50		 push	 eax
  001a3	6a 0a		 push	 10			; 0000000aH
  001a5	6a 04		 push	 4
  001a7	8b ce		 mov	 ecx, esi
  001a9	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L145302:
  001ae	5b		 pop	 ebx
$L115357:
  001af	5f		 pop	 edi
  001b0	5e		 pop	 esi
  001b1	5d		 pop	 ebp

; 2544 : END_PARAM()

  001b2	c2 04 00	 ret	 4
?BindParameters@CSPGetItemName@@UAEFH@Z ENDP		; CSPGetItemName::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGetItemName@@UAE@XZ			; CSPGetItemName::~CSPGetItemName
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGetItemName@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGetItemName@@UAEPAXI@Z PROC NEAR			; CSPGetItemName::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGetItemName@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L145306
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L145306:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGetItemName@@UAEPAXI@Z ENDP			; CSPGetItemName::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGetItemName@@UAE@XZ
_TEXT	SEGMENT
??1CSPGetItemName@@UAE@XZ PROC NEAR			; CSPGetItemName::~CSPGetItemName, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGetItemName@@UAE@XZ ENDP				; CSPGetItemName::~CSPGetItemName
_TEXT	ENDS
PUBLIC	??0CSPTournamentPayback@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTournamentPayback::CSPTournamentPayback
PUBLIC	?GetNumParam@CSPTournamentPayback@@UAEHXZ	; CSPTournamentPayback::GetNumParam
PUBLIC	?BindParameters@CSPTournamentPayback@@UAEFH@Z	; CSPTournamentPayback::BindParameters
PUBLIC	??_7CSPTournamentPayback@@6B@			; CSPTournamentPayback::`vftable'
PUBLIC	??_GCSPTournamentPayback@@UAEPAXI@Z		; CSPTournamentPayback::`scalar deleting destructor'
PUBLIC	??_C@_0CF@PCBHMNHK@?$HLCALL?5TTournamentPayback?$CI?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPTournamentPayback@@UAEPAXI@Z:NEAR	; CSPTournamentPayback::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T145489 DD	0ffffffffH
	DD	FLAT:$L145315
$T145486 DD	019930520H
	DD	01H
	DD	FLAT:$T145489
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CF@PCBHMNHK@?$HLCALL?5TTournamentPayback?$CI?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CF@PCBHMNHK@?$HLCALL?5TTournamentPayback?$CI?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	'CALL TTournamentPayback(?,?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPTournamentPayback@@6B@
CONST	SEGMENT
??_7CSPTournamentPayback@@6B@ DD FLAT:??_ECSPTournamentPayback@@UAEPAXI@Z ; CSPTournamentPayback::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPTournamentPayback@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPTournamentPayback@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPTournamentPayback@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T145314 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPTournamentPayback@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPTournamentPayback::CSPTournamentPayback, COMDAT
; _this$ = ecx

; 2556 : DEF_QUERY(CSPTournamentPayback, _T("{CALL TTournamentPayback(?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPTournamentPayback@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CF@PCBHMNHK@?$HLCALL?5TTournamentPayback?$CI?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T145314[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPTournamentPayback@@6B@
  0005e	72 0d		 jb	 SHORT $L145487
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L145487:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L145315:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPTournamentPayback@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T145486
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPTournamentPayback@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPTournamentPayback::CSPTournamentPayback
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPTournamentPayback@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPTournamentPayback@@UAEHXZ PROC NEAR	; CSPTournamentPayback::GetNumParam, COMDAT
; _this$ = ecx

; 2558 : BEGIN_PARAM(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumParam@CSPTournamentPayback@@UAEHXZ ENDP		; CSPTournamentPayback::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTournamentPayback@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPTournamentPayback@@UAEFH@Z PROC NEAR	; CSPTournamentPayback::BindParameters, COMDAT
; _this$ = ecx

; 2558 : BEGIN_PARAM(5)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 2559 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT,m_dwPostID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L115427
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 04		 push	 4
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L115427
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 91 00 00
	00		 jne	 $L115422
$L115427:

; 2560 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCharID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L115428
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115428:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 06		 je	 SHORT $L115429
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	75 6a		 jne	 SHORT $L115422
$L115429:

; 2561 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwGold)

  0005d	3b fb		 cmp	 edi, ebx
  0005f	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00065	75 12		 jne	 SHORT $L115430
  00067	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006d	52		 push	 edx
  0006e	6a 03		 push	 3
  00070	6a 01		 push	 1
  00072	8b ce		 mov	 ecx, esi
  00074	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115430:
  00079	66 3b c3	 cmp	 ax, bx
  0007c	74 06		 je	 SHORT $L115431
  0007e	66 3d 01 00	 cmp	 ax, 1
  00082	75 43		 jne	 SHORT $L115422
$L115431:

; 2562 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwSilver)

  00084	3b fb		 cmp	 edi, ebx
  00086	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  0008c	75 12		 jne	 SHORT $L115432
  0008e	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00094	50		 push	 eax
  00095	6a 04		 push	 4
  00097	6a 01		 push	 1
  00099	8b ce		 mov	 ecx, esi
  0009b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115432:
  000a0	66 3b c3	 cmp	 ax, bx
  000a3	74 06		 je	 SHORT $L115433
  000a5	66 3d 01 00	 cmp	 ax, 1
  000a9	75 1c		 jne	 SHORT $L115422
$L115433:

; 2563 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCooper)

  000ab	3b fb		 cmp	 edi, ebx
  000ad	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b3	75 12		 jne	 SHORT $L115422
  000b5	8d 8e 3c 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3132]
  000bb	51		 push	 ecx
  000bc	6a 05		 push	 5
  000be	6a 01		 push	 1
  000c0	8b ce		 mov	 ecx, esi
  000c2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115422:
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx

; 2564 : END_PARAM()

  000ca	c2 04 00	 ret	 4
?BindParameters@CSPTournamentPayback@@UAEFH@Z ENDP	; CSPTournamentPayback::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPTournamentPayback@@UAE@XZ			; CSPTournamentPayback::~CSPTournamentPayback
; Function compile flags: /Ogty
;	COMDAT ??_GCSPTournamentPayback@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPTournamentPayback@@UAEPAXI@Z PROC NEAR		; CSPTournamentPayback::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPTournamentPayback@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L145501
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L145501:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPTournamentPayback@@UAEPAXI@Z ENDP		; CSPTournamentPayback::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPTournamentPayback@@UAE@XZ
_TEXT	SEGMENT
??1CSPTournamentPayback@@UAE@XZ PROC NEAR		; CSPTournamentPayback::~CSPTournamentPayback, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPTournamentPayback@@UAE@XZ ENDP			; CSPTournamentPayback::~CSPTournamentPayback
_TEXT	ENDS
PUBLIC	??0CSPTournamentResult@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTournamentResult::CSPTournamentResult
PUBLIC	?GetNumParam@CSPTournamentResult@@UAEHXZ	; CSPTournamentResult::GetNumParam
PUBLIC	?BindParameters@CSPTournamentResult@@UAEFH@Z	; CSPTournamentResult::BindParameters
PUBLIC	??_7CSPTournamentResult@@6B@			; CSPTournamentResult::`vftable'
PUBLIC	??_GCSPTournamentResult@@UAEPAXI@Z		; CSPTournamentResult::`scalar deleting destructor'
PUBLIC	??_C@_0CC@PNGMFNJG@?$HLCALL?5TTournamentResult?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ@ ; `string'
EXTRN	??_ECSPTournamentResult@@UAEPAXI@Z:NEAR		; CSPTournamentResult::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T145684 DD	0ffffffffH
	DD	FLAT:$L145510
$T145681 DD	019930520H
	DD	01H
	DD	FLAT:$T145684
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CC@PNGMFNJG@?$HLCALL?5TTournamentResult?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ@
CONST	SEGMENT
??_C@_0CC@PNGMFNJG@?$HLCALL?5TTournamentResult?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ@ DB '{'
	DB	'CALL TTournamentResult(?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPTournamentResult@@6B@
CONST	SEGMENT
??_7CSPTournamentResult@@6B@ DD FLAT:??_ECSPTournamentResult@@UAEPAXI@Z ; CSPTournamentResult::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPTournamentResult@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPTournamentResult@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPTournamentResult@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T145509 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPTournamentResult@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPTournamentResult::CSPTournamentResult, COMDAT
; _this$ = ecx

; 2575 : DEF_QUERY(CSPTournamentResult, _T("{CALL TTournamentResult(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPTournamentResult@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CC@PNGMFNJG@?$HLCALL?5TTournamentResult?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T145509[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPTournamentResult@@6B@
  0005e	72 0d		 jb	 SHORT $L145682
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L145682:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L145510:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPTournamentResult@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T145681
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPTournamentResult@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPTournamentResult::CSPTournamentResult
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPTournamentResult@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPTournamentResult@@UAEHXZ PROC NEAR	; CSPTournamentResult::GetNumParam, COMDAT
; _this$ = ecx

; 2577 : BEGIN_PARAM(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumParam@CSPTournamentResult@@UAEHXZ ENDP		; CSPTournamentResult::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTournamentResult@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPTournamentResult@@UAEFH@Z PROC NEAR	; CSPTournamentResult::BindParameters, COMDAT
; _this$ = ecx

; 2577 : BEGIN_PARAM(4)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 2578 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bStep)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1b		 jne	 SHORT $L115481
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 06		 je	 SHORT $L115481
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	75 6a		 jne	 SHORT $L115476
$L115481:

; 2579 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bRet)

  00032	3b fb		 cmp	 edi, ebx
  00034	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003a	75 12		 jne	 SHORT $L115482
  0003c	8d 8e 2d 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3117]
  00042	51		 push	 ecx
  00043	6a 02		 push	 2
  00045	6a 01		 push	 1
  00047	8b ce		 mov	 ecx, esi
  00049	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115482:
  0004e	66 3b c3	 cmp	 ax, bx
  00051	74 06		 je	 SHORT $L115483
  00053	66 3d 01 00	 cmp	 ax, 1
  00057	75 43		 jne	 SHORT $L115476
$L115483:

; 2580 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwWin)

  00059	3b fb		 cmp	 edi, ebx
  0005b	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00061	75 12		 jne	 SHORT $L115484
  00063	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  00069	52		 push	 edx
  0006a	6a 03		 push	 3
  0006c	6a 01		 push	 1
  0006e	8b ce		 mov	 ecx, esi
  00070	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115484:
  00075	66 3b c3	 cmp	 ax, bx
  00078	74 06		 je	 SHORT $L115485
  0007a	66 3d 01 00	 cmp	 ax, 1
  0007e	75 1c		 jne	 SHORT $L115476
$L115485:

; 2581 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwLose)

  00080	3b fb		 cmp	 edi, ebx
  00082	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00088	75 12		 jne	 SHORT $L115476
  0008a	8d 86 34 0c 00
	00		 lea	 eax, DWORD PTR [esi+3124]
  00090	50		 push	 eax
  00091	6a 04		 push	 4
  00093	6a 01		 push	 1
  00095	8b ce		 mov	 ecx, esi
  00097	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115476:
  0009c	5f		 pop	 edi
  0009d	5e		 pop	 esi
  0009e	5b		 pop	 ebx

; 2582 : END_PARAM()

  0009f	c2 04 00	 ret	 4
?BindParameters@CSPTournamentResult@@UAEFH@Z ENDP	; CSPTournamentResult::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPTournamentResult@@UAE@XZ			; CSPTournamentResult::~CSPTournamentResult
; Function compile flags: /Ogty
;	COMDAT ??_GCSPTournamentResult@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPTournamentResult@@UAEPAXI@Z PROC NEAR		; CSPTournamentResult::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPTournamentResult@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L145696
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L145696:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPTournamentResult@@UAEPAXI@Z ENDP			; CSPTournamentResult::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPTournamentResult@@UAE@XZ
_TEXT	SEGMENT
??1CSPTournamentResult@@UAE@XZ PROC NEAR		; CSPTournamentResult::~CSPTournamentResult, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPTournamentResult@@UAE@XZ ENDP			; CSPTournamentResult::~CSPTournamentResult
_TEXT	ENDS
PUBLIC	??0CSPTournamentApply@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTournamentApply::CSPTournamentApply
PUBLIC	?GetNumParam@CSPTournamentApply@@UAEHXZ		; CSPTournamentApply::GetNumParam
PUBLIC	?BindParameters@CSPTournamentApply@@UAEFH@Z	; CSPTournamentApply::BindParameters
PUBLIC	??_7CSPTournamentApply@@6B@			; CSPTournamentApply::`vftable'
PUBLIC	??_GCSPTournamentApply@@UAEPAXI@Z		; CSPTournamentApply::`scalar deleting destructor'
PUBLIC	??_C@_0CB@ODBJGAOP@?$HLCALL?5TTournamentApply?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN@ ; `string'
EXTRN	??_ECSPTournamentApply@@UAEPAXI@Z:NEAR		; CSPTournamentApply::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T145879 DD	0ffffffffH
	DD	FLAT:$L145705
$T145876 DD	019930520H
	DD	01H
	DD	FLAT:$T145879
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CB@ODBJGAOP@?$HLCALL?5TTournamentApply?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN@
CONST	SEGMENT
??_C@_0CB@ODBJGAOP@?$HLCALL?5TTournamentApply?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN@ DB '{'
	DB	'CALL TTournamentApply(?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPTournamentApply@@6B@
CONST	SEGMENT
??_7CSPTournamentApply@@6B@ DD FLAT:??_ECSPTournamentApply@@UAEPAXI@Z ; CSPTournamentApply::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPTournamentApply@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPTournamentApply@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPTournamentApply@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T145704 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPTournamentApply@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPTournamentApply::CSPTournamentApply, COMDAT
; _this$ = ecx

; 2593 : DEF_QUERY(CSPTournamentApply, _T("{CALL TTournamentApply(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPTournamentApply@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CB@ODBJGAOP@?$HLCALL?5TTournamentApply?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T145704[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPTournamentApply@@6B@
  0005e	72 0d		 jb	 SHORT $L145877
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L145877:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L145705:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPTournamentApply@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T145876
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPTournamentApply@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPTournamentApply::CSPTournamentApply
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPTournamentApply@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPTournamentApply@@UAEHXZ PROC NEAR	; CSPTournamentApply::GetNumParam, COMDAT
; _this$ = ecx

; 2595 : BEGIN_PARAM(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumParam@CSPTournamentApply@@UAEHXZ ENDP		; CSPTournamentApply::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTournamentApply@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPTournamentApply@@UAEFH@Z PROC NEAR	; CSPTournamentApply::BindParameters, COMDAT
; _this$ = ecx

; 2595 : BEGIN_PARAM(4)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 2596 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bAdd)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1b		 jne	 SHORT $L115533
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 06		 je	 SHORT $L115533
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	75 6a		 jne	 SHORT $L115528
$L115533:

; 2597 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCharID)

  00032	3b fb		 cmp	 edi, ebx
  00034	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003a	75 12		 jne	 SHORT $L115534
  0003c	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00042	51		 push	 ecx
  00043	6a 02		 push	 2
  00045	6a 01		 push	 1
  00047	8b ce		 mov	 ecx, esi
  00049	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115534:
  0004e	66 3b c3	 cmp	 ax, bx
  00051	74 06		 je	 SHORT $L115535
  00053	66 3d 01 00	 cmp	 ax, 1
  00057	75 43		 jne	 SHORT $L115528
$L115535:

; 2598 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bEntry)

  00059	3b fb		 cmp	 edi, ebx
  0005b	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00061	75 12		 jne	 SHORT $L115536
  00063	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  00069	52		 push	 edx
  0006a	6a 03		 push	 3
  0006c	6a 01		 push	 1
  0006e	8b ce		 mov	 ecx, esi
  00070	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115536:
  00075	66 3b c3	 cmp	 ax, bx
  00078	74 06		 je	 SHORT $L115537
  0007a	66 3d 01 00	 cmp	 ax, 1
  0007e	75 1c		 jne	 SHORT $L115528
$L115537:

; 2599 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwChiefID)

  00080	3b fb		 cmp	 edi, ebx
  00082	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00088	75 12		 jne	 SHORT $L115528
  0008a	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00090	50		 push	 eax
  00091	6a 04		 push	 4
  00093	6a 01		 push	 1
  00095	8b ce		 mov	 ecx, esi
  00097	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115528:
  0009c	5f		 pop	 edi
  0009d	5e		 pop	 esi
  0009e	5b		 pop	 ebx

; 2600 : END_PARAM()

  0009f	c2 04 00	 ret	 4
?BindParameters@CSPTournamentApply@@UAEFH@Z ENDP	; CSPTournamentApply::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPTournamentApply@@UAE@XZ			; CSPTournamentApply::~CSPTournamentApply
; Function compile flags: /Ogty
;	COMDAT ??_GCSPTournamentApply@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPTournamentApply@@UAEPAXI@Z PROC NEAR		; CSPTournamentApply::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPTournamentApply@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L145891
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L145891:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPTournamentApply@@UAEPAXI@Z ENDP			; CSPTournamentApply::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPTournamentApply@@UAE@XZ
_TEXT	SEGMENT
??1CSPTournamentApply@@UAE@XZ PROC NEAR			; CSPTournamentApply::~CSPTournamentApply, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPTournamentApply@@UAE@XZ ENDP			; CSPTournamentApply::~CSPTournamentApply
_TEXT	ENDS
PUBLIC	??0CSPTournamentClear@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTournamentClear::CSPTournamentClear
PUBLIC	?GetNumParam@CSPTournamentClear@@UAEHXZ		; CSPTournamentClear::GetNumParam
PUBLIC	?BindParameters@CSPTournamentClear@@UAEFH@Z	; CSPTournamentClear::BindParameters
PUBLIC	??_7CSPTournamentClear@@6B@			; CSPTournamentClear::`vftable'
PUBLIC	??_GCSPTournamentClear@@UAEPAXI@Z		; CSPTournamentClear::`scalar deleting destructor'
PUBLIC	??_C@_0BL@OCKMDMDK@?$HLCALL?5TTournamentClear?$CI?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPTournamentClear@@UAEPAXI@Z:NEAR		; CSPTournamentClear::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T146074 DD	0ffffffffH
	DD	FLAT:$L145900
$T146071 DD	019930520H
	DD	01H
	DD	FLAT:$T146074
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BL@OCKMDMDK@?$HLCALL?5TTournamentClear?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BL@OCKMDMDK@?$HLCALL?5TTournamentClear?$CI?$DP?$CJ?$HN?$AA@ DB '{C'
	DB	'ALL TTournamentClear(?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPTournamentClear@@6B@
CONST	SEGMENT
??_7CSPTournamentClear@@6B@ DD FLAT:??_ECSPTournamentClear@@UAEPAXI@Z ; CSPTournamentClear::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPTournamentClear@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPTournamentClear@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPTournamentClear@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T145899 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPTournamentClear@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPTournamentClear::CSPTournamentClear, COMDAT
; _this$ = ecx

; 2608 : DEF_QUERY(CSPTournamentClear, _T("{CALL TTournamentClear(?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPTournamentClear@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BL@OCKMDMDK@?$HLCALL?5TTournamentClear?$CI?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T145899[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPTournamentClear@@6B@
  0005e	72 0d		 jb	 SHORT $L146072
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L146072:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L145900:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPTournamentClear@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T146071
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPTournamentClear@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPTournamentClear::CSPTournamentClear
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPTournamentClear@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPTournamentClear@@UAEHXZ PROC NEAR	; CSPTournamentClear::GetNumParam, COMDAT
; _this$ = ecx

; 2610 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CSPTournamentClear@@UAEHXZ ENDP		; CSPTournamentClear::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTournamentClear@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPTournamentClear@@UAEFH@Z PROC NEAR	; CSPTournamentClear::BindParameters, COMDAT
; _this$ = ecx

; 2611 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bClear)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L115577
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115577:

; 2612 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CSPTournamentClear@@UAEFH@Z ENDP	; CSPTournamentClear::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPTournamentClear@@UAE@XZ			; CSPTournamentClear::~CSPTournamentClear
; Function compile flags: /Ogty
;	COMDAT ??_GCSPTournamentClear@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPTournamentClear@@UAEPAXI@Z PROC NEAR		; CSPTournamentClear::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPTournamentClear@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L146086
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L146086:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPTournamentClear@@UAEPAXI@Z ENDP			; CSPTournamentClear::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPTournamentClear@@UAE@XZ
_TEXT	SEGMENT
??1CSPTournamentClear@@UAE@XZ PROC NEAR			; CSPTournamentClear::~CSPTournamentClear, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPTournamentClear@@UAE@XZ ENDP			; CSPTournamentClear::~CSPTournamentClear
_TEXT	ENDS
PUBLIC	??0CSPTournamentStatus@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTournamentStatus::CSPTournamentStatus
PUBLIC	?GetNumParam@CSPTournamentStatus@@UAEHXZ	; CSPTournamentStatus::GetNumParam
PUBLIC	?BindParameters@CSPTournamentStatus@@UAEFH@Z	; CSPTournamentStatus::BindParameters
PUBLIC	??_7CSPTournamentStatus@@6B@			; CSPTournamentStatus::`vftable'
PUBLIC	??_GCSPTournamentStatus@@UAEPAXI@Z		; CSPTournamentStatus::`scalar deleting destructor'
PUBLIC	??_C@_0CA@MDINOHEO@?$HLCALL?5TTournamentStatus?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPTournamentStatus@@UAEPAXI@Z:NEAR		; CSPTournamentStatus::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T146269 DD	0ffffffffH
	DD	FLAT:$L146095
$T146266 DD	019930520H
	DD	01H
	DD	FLAT:$T146269
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CA@MDINOHEO@?$HLCALL?5TTournamentStatus?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0CA@MDINOHEO@?$HLCALL?5TTournamentStatus?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL TTournamentStatus(?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPTournamentStatus@@6B@
CONST	SEGMENT
??_7CSPTournamentStatus@@6B@ DD FLAT:??_ECSPTournamentStatus@@UAEPAXI@Z ; CSPTournamentStatus::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPTournamentStatus@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPTournamentStatus@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPTournamentStatus@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T146094 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPTournamentStatus@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPTournamentStatus::CSPTournamentStatus, COMDAT
; _this$ = ecx

; 2622 : DEF_QUERY(CSPTournamentStatus, _T("{CALL TTournamentStatus(?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPTournamentStatus@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CA@MDINOHEO@?$HLCALL?5TTournamentStatus?$CI?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T146094[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPTournamentStatus@@6B@
  0005e	72 0d		 jb	 SHORT $L146267
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L146267:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L146095:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPTournamentStatus@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T146266
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPTournamentStatus@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPTournamentStatus::CSPTournamentStatus
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPTournamentStatus@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPTournamentStatus@@UAEHXZ PROC NEAR	; CSPTournamentStatus::GetNumParam, COMDAT
; _this$ = ecx

; 2624 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPTournamentStatus@@UAEHXZ ENDP		; CSPTournamentStatus::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTournamentStatus@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPTournamentStatus@@UAEFH@Z PROC NEAR	; CSPTournamentStatus::BindParameters, COMDAT
; _this$ = ecx

; 2624 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 2625 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L115627
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L115627
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L115622
$L115627:

; 2626 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bGroup)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L115628
  0003d	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115628:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L115629
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L115622
$L115629:

; 2627 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bStep)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L115622
  00068	8d 96 2f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3119]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115622:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 2628 : END_PARAM()

  0007c	c2 04 00	 ret	 4
?BindParameters@CSPTournamentStatus@@UAEFH@Z ENDP	; CSPTournamentStatus::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPTournamentStatus@@UAE@XZ			; CSPTournamentStatus::~CSPTournamentStatus
; Function compile flags: /Ogty
;	COMDAT ??_GCSPTournamentStatus@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPTournamentStatus@@UAEPAXI@Z PROC NEAR		; CSPTournamentStatus::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPTournamentStatus@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L146281
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L146281:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPTournamentStatus@@UAEPAXI@Z ENDP			; CSPTournamentStatus::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPTournamentStatus@@UAE@XZ
_TEXT	SEGMENT
??1CSPTournamentStatus@@UAE@XZ PROC NEAR		; CSPTournamentStatus::~CSPTournamentStatus, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPTournamentStatus@@UAE@XZ ENDP			; CSPTournamentStatus::~CSPTournamentStatus
_TEXT	ENDS
PUBLIC	??0CSPTnmtEventTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTnmtEventTime::CSPTnmtEventTime
PUBLIC	?GetNumParam@CSPTnmtEventTime@@UAEHXZ		; CSPTnmtEventTime::GetNumParam
PUBLIC	?BindParameters@CSPTnmtEventTime@@UAEFH@Z	; CSPTnmtEventTime::BindParameters
PUBLIC	??_7CSPTnmtEventTime@@6B@			; CSPTnmtEventTime::`vftable'
PUBLIC	??_GCSPTnmtEventTime@@UAEPAXI@Z			; CSPTnmtEventTime::`scalar deleting destructor'
PUBLIC	??_C@_0BP@ICGHNJIN@?$HLCALL?5TTnmtEventTime?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPTnmtEventTime@@UAEPAXI@Z:NEAR		; CSPTnmtEventTime::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T146464 DD	0ffffffffH
	DD	FLAT:$L146290
$T146461 DD	019930520H
	DD	01H
	DD	FLAT:$T146464
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BP@ICGHNJIN@?$HLCALL?5TTnmtEventTime?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BP@ICGHNJIN@?$HLCALL?5TTnmtEventTime?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL TTnmtEventTime(?,?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPTnmtEventTime@@6B@
CONST	SEGMENT
??_7CSPTnmtEventTime@@6B@ DD FLAT:??_ECSPTnmtEventTime@@UAEPAXI@Z ; CSPTnmtEventTime::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPTnmtEventTime@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPTnmtEventTime@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPTnmtEventTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T146289 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPTnmtEventTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPTnmtEventTime::CSPTnmtEventTime, COMDAT
; _this$ = ecx

; 2639 : DEF_QUERY(CSPTnmtEventTime, _T("{CALL TTnmtEventTime(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPTnmtEventTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BP@ICGHNJIN@?$HLCALL?5TTnmtEventTime?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T146289[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPTnmtEventTime@@6B@
  0005e	72 0d		 jb	 SHORT $L146462
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L146462:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L146290:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPTnmtEventTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T146461
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPTnmtEventTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPTnmtEventTime::CSPTnmtEventTime
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPTnmtEventTime@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPTnmtEventTime@@UAEHXZ PROC NEAR		; CSPTnmtEventTime::GetNumParam, COMDAT
; _this$ = ecx

; 2641 : BEGIN_PARAM(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumParam@CSPTnmtEventTime@@UAEHXZ ENDP		; CSPTnmtEventTime::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTnmtEventTime@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPTnmtEventTime@@UAEFH@Z PROC NEAR	; CSPTnmtEventTime::BindParameters, COMDAT
; _this$ = ecx

; 2641 : BEGIN_PARAM(4)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 2642 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wTourID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1b		 jne	 SHORT $L115677
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 06		 je	 SHORT $L115677
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	75 6a		 jne	 SHORT $L115672
$L115677:

; 2643 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bWeek)

  00032	3b fb		 cmp	 edi, ebx
  00034	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003a	75 12		 jne	 SHORT $L115678
  0003c	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00042	51		 push	 ecx
  00043	6a 02		 push	 2
  00045	6a 01		 push	 1
  00047	8b ce		 mov	 ecx, esi
  00049	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115678:
  0004e	66 3b c3	 cmp	 ax, bx
  00051	74 06		 je	 SHORT $L115679
  00053	66 3d 01 00	 cmp	 ax, 1
  00057	75 43		 jne	 SHORT $L115672
$L115679:

; 2644 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bDay)

  00059	3b fb		 cmp	 edi, ebx
  0005b	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00061	75 12		 jne	 SHORT $L115680
  00063	8d 96 2f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3119]
  00069	52		 push	 edx
  0006a	6a 03		 push	 3
  0006c	6a 01		 push	 1
  0006e	8b ce		 mov	 ecx, esi
  00070	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115680:
  00075	66 3b c3	 cmp	 ax, bx
  00078	74 06		 je	 SHORT $L115681
  0007a	66 3d 01 00	 cmp	 ax, 1
  0007e	75 1c		 jne	 SHORT $L115672
$L115681:

; 2645 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwStart)

  00080	3b fb		 cmp	 edi, ebx
  00082	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00088	75 12		 jne	 SHORT $L115672
  0008a	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  00090	50		 push	 eax
  00091	6a 04		 push	 4
  00093	6a 01		 push	 1
  00095	8b ce		 mov	 ecx, esi
  00097	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115672:
  0009c	5f		 pop	 edi
  0009d	5e		 pop	 esi
  0009e	5b		 pop	 ebx

; 2646 : END_PARAM()

  0009f	c2 04 00	 ret	 4
?BindParameters@CSPTnmtEventTime@@UAEFH@Z ENDP		; CSPTnmtEventTime::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPTnmtEventTime@@UAE@XZ			; CSPTnmtEventTime::~CSPTnmtEventTime
; Function compile flags: /Ogty
;	COMDAT ??_GCSPTnmtEventTime@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPTnmtEventTime@@UAEPAXI@Z PROC NEAR		; CSPTnmtEventTime::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPTnmtEventTime@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L146476
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L146476:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPTnmtEventTime@@UAEPAXI@Z ENDP			; CSPTnmtEventTime::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPTnmtEventTime@@UAE@XZ
_TEXT	SEGMENT
??1CSPTnmtEventTime@@UAE@XZ PROC NEAR			; CSPTnmtEventTime::~CSPTnmtEventTime, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPTnmtEventTime@@UAE@XZ ENDP			; CSPTnmtEventTime::~CSPTnmtEventTime
_TEXT	ENDS
PUBLIC	??_C@_0CB@BKIFDKEM@?$HLCALL?5TTnmtEventSchedule?$CI?$DP?0?$DP?0?$DP?$CJ?$HN@ ; `string'
PUBLIC	??0CSPTnmtEventSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTnmtEventSchedule::CSPTnmtEventSchedule
PUBLIC	?GetNumParam@CSPTnmtEventSchedule@@UAEHXZ	; CSPTnmtEventSchedule::GetNumParam
PUBLIC	?BindParameters@CSPTnmtEventSchedule@@UAEFH@Z	; CSPTnmtEventSchedule::BindParameters
PUBLIC	??_7CSPTnmtEventSchedule@@6B@			; CSPTnmtEventSchedule::`vftable'
PUBLIC	??_GCSPTnmtEventSchedule@@UAEPAXI@Z		; CSPTnmtEventSchedule::`scalar deleting destructor'
EXTRN	??_ECSPTnmtEventSchedule@@UAEPAXI@Z:NEAR	; CSPTnmtEventSchedule::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T146659 DD	0ffffffffH
	DD	FLAT:$L146485
$T146656 DD	019930520H
	DD	01H
	DD	FLAT:$T146659
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CB@BKIFDKEM@?$HLCALL?5TTnmtEventSchedule?$CI?$DP?0?$DP?0?$DP?$CJ?$HN@
CONST	SEGMENT
??_C@_0CB@BKIFDKEM@?$HLCALL?5TTnmtEventSchedule?$CI?$DP?0?$DP?0?$DP?$CJ?$HN@ DB '{'
	DB	'CALL TTnmtEventSchedule(?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPTnmtEventSchedule@@6B@
CONST	SEGMENT
??_7CSPTnmtEventSchedule@@6B@ DD FLAT:??_ECSPTnmtEventSchedule@@UAEPAXI@Z ; CSPTnmtEventSchedule::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPTnmtEventSchedule@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPTnmtEventSchedule@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPTnmtEventSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T146484 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPTnmtEventSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPTnmtEventSchedule::CSPTnmtEventSchedule, COMDAT
; _this$ = ecx

; 2656 : DEF_QUERY(CSPTnmtEventSchedule, _T("{CALL TTnmtEventSchedule(?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPTnmtEventSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CB@BKIFDKEM@?$HLCALL?5TTnmtEventSchedule?$CI?$DP?0?$DP?0?$DP?$CJ?$HN@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T146484[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPTnmtEventSchedule@@6B@
  0005e	72 0d		 jb	 SHORT $L146657
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L146657:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L146485:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPTnmtEventSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T146656
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPTnmtEventSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPTnmtEventSchedule::CSPTnmtEventSchedule
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPTnmtEventSchedule@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPTnmtEventSchedule@@UAEHXZ PROC NEAR	; CSPTnmtEventSchedule::GetNumParam, COMDAT
; _this$ = ecx

; 2658 : BEGIN_PARAM(3)

  00000	b8 03 00 00 00	 mov	 eax, 3
  00005	c3		 ret	 0
?GetNumParam@CSPTnmtEventSchedule@@UAEHXZ ENDP		; CSPTnmtEventSchedule::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTnmtEventSchedule@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPTnmtEventSchedule@@UAEFH@Z PROC NEAR	; CSPTnmtEventSchedule::BindParameters, COMDAT
; _this$ = ecx

; 2658 : BEGIN_PARAM(3)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 2659 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wTourID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L115728
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L115728
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 4b		 jne	 SHORT $L115723
$L115728:

; 2660 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bStep)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L115729
  0003d	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115729:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L115730
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 20		 jne	 SHORT $L115723
$L115730:

; 2661 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwPeriod)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L115723
  00068	8d 96 30 0c 00
	00		 lea	 edx, DWORD PTR [esi+3120]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115723:
  0007a	5f		 pop	 edi
  0007b	5e		 pop	 esi

; 2662 : END_PARAM()

  0007c	c2 04 00	 ret	 4
?BindParameters@CSPTnmtEventSchedule@@UAEFH@Z ENDP	; CSPTnmtEventSchedule::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPTnmtEventSchedule@@UAE@XZ			; CSPTnmtEventSchedule::~CSPTnmtEventSchedule
; Function compile flags: /Ogty
;	COMDAT ??_GCSPTnmtEventSchedule@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPTnmtEventSchedule@@UAEPAXI@Z PROC NEAR		; CSPTnmtEventSchedule::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPTnmtEventSchedule@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L146671
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L146671:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPTnmtEventSchedule@@UAEPAXI@Z ENDP		; CSPTnmtEventSchedule::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPTnmtEventSchedule@@UAE@XZ
_TEXT	SEGMENT
??1CSPTnmtEventSchedule@@UAE@XZ PROC NEAR		; CSPTnmtEventSchedule::~CSPTnmtEventSchedule, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPTnmtEventSchedule@@UAE@XZ ENDP			; CSPTnmtEventSchedule::~CSPTnmtEventSchedule
_TEXT	ENDS
PUBLIC	??0CSPTnmtEventDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTnmtEventDel::CSPTnmtEventDel
PUBLIC	?GetNumParam@CSPTnmtEventDel@@UAEHXZ		; CSPTnmtEventDel::GetNumParam
PUBLIC	?BindParameters@CSPTnmtEventDel@@UAEFH@Z	; CSPTnmtEventDel::BindParameters
PUBLIC	??_7CSPTnmtEventDel@@6B@			; CSPTnmtEventDel::`vftable'
PUBLIC	??_GCSPTnmtEventDel@@UAEPAXI@Z			; CSPTnmtEventDel::`scalar deleting destructor'
PUBLIC	??_C@_0BI@PJKAELJP@?$HLCALL?5TTnmtEventDel?$CI?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPTnmtEventDel@@UAEPAXI@Z:NEAR		; CSPTnmtEventDel::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T146854 DD	0ffffffffH
	DD	FLAT:$L146680
$T146851 DD	019930520H
	DD	01H
	DD	FLAT:$T146854
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BI@PJKAELJP@?$HLCALL?5TTnmtEventDel?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BI@PJKAELJP@?$HLCALL?5TTnmtEventDel?$CI?$DP?$CJ?$HN?$AA@ DB '{CALL'
	DB	' TTnmtEventDel(?)}', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7CSPTnmtEventDel@@6B@
CONST	SEGMENT
??_7CSPTnmtEventDel@@6B@ DD FLAT:??_ECSPTnmtEventDel@@UAEPAXI@Z ; CSPTnmtEventDel::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPTnmtEventDel@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPTnmtEventDel@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPTnmtEventDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T146679 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPTnmtEventDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPTnmtEventDel::CSPTnmtEventDel, COMDAT
; _this$ = ecx

; 2670 : DEF_QUERY(CSPTnmtEventDel, _T("{CALL TTnmtEventDel(?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPTnmtEventDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@PJKAELJP@?$HLCALL?5TTnmtEventDel?$CI?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T146679[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPTnmtEventDel@@6B@
  0005e	72 0d		 jb	 SHORT $L146852
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L146852:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L146680:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPTnmtEventDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T146851
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPTnmtEventDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPTnmtEventDel::CSPTnmtEventDel
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPTnmtEventDel@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPTnmtEventDel@@UAEHXZ PROC NEAR		; CSPTnmtEventDel::GetNumParam, COMDAT
; _this$ = ecx

; 2672 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CSPTnmtEventDel@@UAEHXZ ENDP		; CSPTnmtEventDel::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTnmtEventDel@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPTnmtEventDel@@UAEFH@Z PROC NEAR	; CSPTnmtEventDel::BindParameters, COMDAT
; _this$ = ecx

; 2673 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wTourID)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L115770
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 01		 push	 1
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L115770:

; 2674 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CSPTnmtEventDel@@UAEFH@Z ENDP		; CSPTnmtEventDel::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPTnmtEventDel@@UAE@XZ			; CSPTnmtEventDel::~CSPTnmtEventDel
; Function compile flags: /Ogty
;	COMDAT ??_GCSPTnmtEventDel@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPTnmtEventDel@@UAEPAXI@Z PROC NEAR		; CSPTnmtEventDel::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPTnmtEventDel@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L146866
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L146866:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPTnmtEventDel@@UAEPAXI@Z ENDP			; CSPTnmtEventDel::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPTnmtEventDel@@UAE@XZ
_TEXT	SEGMENT
??1CSPTnmtEventDel@@UAE@XZ PROC NEAR			; CSPTnmtEventDel::~CSPTnmtEventDel, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPTnmtEventDel@@UAE@XZ ENDP				; CSPTnmtEventDel::~CSPTnmtEventDel
_TEXT	ENDS
PUBLIC	??0CSPTnmtEventEntry@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTnmtEventEntry::CSPTnmtEventEntry
PUBLIC	?GetNumParam@CSPTnmtEventEntry@@UAEHXZ		; CSPTnmtEventEntry::GetNumParam
PUBLIC	?BindParameters@CSPTnmtEventEntry@@UAEFH@Z	; CSPTnmtEventEntry::BindParameters
PUBLIC	??_7CSPTnmtEventEntry@@6B@			; CSPTnmtEventEntry::`vftable'
PUBLIC	??_GCSPTnmtEventEntry@@UAEPAXI@Z		; CSPTnmtEventEntry::`scalar deleting destructor'
PUBLIC	??_C@_0CO@EOGPAECE@?$HLCALL?5TTnmtEventEntry?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@ ; `string'
EXTRN	??_ECSPTnmtEventEntry@@UAEPAXI@Z:NEAR		; CSPTnmtEventEntry::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T147049 DD	0ffffffffH
	DD	FLAT:$L146875
$T147046 DD	019930520H
	DD	01H
	DD	FLAT:$T147049
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CO@EOGPAECE@?$HLCALL?5TTnmtEventEntry?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@
CONST	SEGMENT
??_C@_0CO@EOGPAECE@?$HLCALL?5TTnmtEventEntry?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@ DB '{'
	DB	'CALL TTnmtEventEntry(?,?,?,?,?,?,?,?,?,?,?)}', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7CSPTnmtEventEntry@@6B@
CONST	SEGMENT
??_7CSPTnmtEventEntry@@6B@ DD FLAT:??_ECSPTnmtEventEntry@@UAEPAXI@Z ; CSPTnmtEventEntry::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPTnmtEventEntry@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPTnmtEventEntry@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPTnmtEventEntry@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T146874 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPTnmtEventEntry@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPTnmtEventEntry::CSPTnmtEventEntry, COMDAT
; _this$ = ecx

; 2692 : DEF_QUERY(CSPTnmtEventEntry, _T("{CALL TTnmtEventEntry(?,?,?,?,?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPTnmtEventEntry@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CO@EOGPAECE@?$HLCALL?5TTnmtEventEntry?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?0@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T146874[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPTnmtEventEntry@@6B@
  0005e	72 0d		 jb	 SHORT $L147047
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L147047:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L146875:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPTnmtEventEntry@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T147046
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPTnmtEventEntry@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPTnmtEventEntry::CSPTnmtEventEntry
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPTnmtEventEntry@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPTnmtEventEntry@@UAEHXZ PROC NEAR	; CSPTnmtEventEntry::GetNumParam, COMDAT
; _this$ = ecx

; 2694 : BEGIN_PARAM(11)

  00000	b8 0b 00 00 00	 mov	 eax, 11			; 0000000bH
  00005	c3		 ret	 0
?GetNumParam@CSPTnmtEventEntry@@UAEHXZ ENDP		; CSPTnmtEventEntry::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTnmtEventEntry@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPTnmtEventEntry@@UAEFH@Z PROC NEAR	; CSPTnmtEventEntry::BindParameters, COMDAT
; _this$ = ecx

; 2694 : BEGIN_PARAM(11)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 2695 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wTourID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L115828
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L115828
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 99 01 00
	00		 jne	 $L115823
$L115828:

; 2696 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bEntryID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L115829
  00040	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115829:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L115830
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 6e 01 00
	00		 jne	 $L115823
$L115830:

; 2697 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT,m_szName)

  00061	3b fb		 cmp	 edi, ebx
  00063	c7 86 18 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2072], -3 ; fffffffdH
  0006d	75 14		 jne	 SHORT $L115831
  0006f	6a 32		 push	 50			; 00000032H
  00071	8d 96 2f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3119]
  00077	52		 push	 edx
  00078	6a 03		 push	 3
  0007a	6a 01		 push	 1
  0007c	8b ce		 mov	 ecx, esi
  0007e	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L115831:
  00083	66 3b c3	 cmp	 ax, bx
  00086	74 0a		 je	 SHORT $L115832
  00088	66 3d 01 00	 cmp	 ax, 1
  0008c	0f 85 3d 01 00
	00		 jne	 $L115823
$L115832:

; 2698 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bType)

  00092	3b fb		 cmp	 edi, ebx
  00094	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  0009a	75 12		 jne	 SHORT $L115833
  0009c	8d 86 61 0c 00
	00		 lea	 eax, DWORD PTR [esi+3169]
  000a2	50		 push	 eax
  000a3	6a 04		 push	 4
  000a5	6a 01		 push	 1
  000a7	8b ce		 mov	 ecx, esi
  000a9	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115833:
  000ae	66 3b c3	 cmp	 ax, bx
  000b1	74 0a		 je	 SHORT $L115834
  000b3	66 3d 01 00	 cmp	 ax, 1
  000b7	0f 85 12 01 00
	00		 jne	 $L115823
$L115834:

; 2699 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwClass)

  000bd	3b fb		 cmp	 edi, ebx
  000bf	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000c5	75 12		 jne	 SHORT $L115835
  000c7	8d 8e 64 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3172]
  000cd	51		 push	 ecx
  000ce	6a 05		 push	 5
  000d0	6a 01		 push	 1
  000d2	8b ce		 mov	 ecx, esi
  000d4	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115835:
  000d9	66 3b c3	 cmp	 ax, bx
  000dc	74 0a		 je	 SHORT $L115836
  000de	66 3d 01 00	 cmp	 ax, 1
  000e2	0f 85 e7 00 00
	00		 jne	 $L115823
$L115836:

; 2700 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwFee)

  000e8	3b fb		 cmp	 edi, ebx
  000ea	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000f0	75 12		 jne	 SHORT $L115837
  000f2	8d 96 68 0c 00
	00		 lea	 edx, DWORD PTR [esi+3176]
  000f8	52		 push	 edx
  000f9	6a 06		 push	 6
  000fb	6a 01		 push	 1
  000fd	8b ce		 mov	 ecx, esi
  000ff	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115837:
  00104	66 3b c3	 cmp	 ax, bx
  00107	74 0a		 je	 SHORT $L115838
  00109	66 3d 01 00	 cmp	 ax, 1
  0010d	0f 85 bc 00 00
	00		 jne	 $L115823
$L115838:

; 2701 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwFeeBack)

  00113	3b fb		 cmp	 edi, ebx
  00115	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  0011b	75 12		 jne	 SHORT $L115839
  0011d	8d 86 6c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3180]
  00123	50		 push	 eax
  00124	6a 07		 push	 7
  00126	6a 01		 push	 1
  00128	8b ce		 mov	 ecx, esi
  0012a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115839:
  0012f	66 3b c3	 cmp	 ax, bx
  00132	74 0a		 je	 SHORT $L115840
  00134	66 3d 01 00	 cmp	 ax, 1
  00138	0f 85 91 00 00
	00		 jne	 $L115823
$L115840:

; 2702 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wPermitItemID)

  0013e	3b fb		 cmp	 edi, ebx
  00140	89 9e 2c 08 00
	00		 mov	 DWORD PTR [esi+2092], ebx
  00146	75 12		 jne	 SHORT $L115841
  00148	8d 8e 70 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3184]
  0014e	51		 push	 ecx
  0014f	6a 08		 push	 8
  00151	6a 01		 push	 1
  00153	8b ce		 mov	 ecx, esi
  00155	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L115841:
  0015a	66 3b c3	 cmp	 ax, bx
  0015d	74 06		 je	 SHORT $L115842
  0015f	66 3d 01 00	 cmp	 ax, 1
  00163	75 6a		 jne	 SHORT $L115823
$L115842:

; 2703 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bPermitCount)

  00165	3b fb		 cmp	 edi, ebx
  00167	89 9e 30 08 00
	00		 mov	 DWORD PTR [esi+2096], ebx
  0016d	75 12		 jne	 SHORT $L115843
  0016f	8d 96 72 0c 00
	00		 lea	 edx, DWORD PTR [esi+3186]
  00175	52		 push	 edx
  00176	6a 09		 push	 9
  00178	6a 01		 push	 1
  0017a	8b ce		 mov	 ecx, esi
  0017c	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115843:
  00181	66 3b c3	 cmp	 ax, bx
  00184	74 06		 je	 SHORT $L115844
  00186	66 3d 01 00	 cmp	 ax, 1
  0018a	75 43		 jne	 SHORT $L115823
$L115844:

; 2704 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bMinLevel)

  0018c	3b fb		 cmp	 edi, ebx
  0018e	89 9e 34 08 00
	00		 mov	 DWORD PTR [esi+2100], ebx
  00194	75 12		 jne	 SHORT $L115845
  00196	8d 86 73 0c 00
	00		 lea	 eax, DWORD PTR [esi+3187]
  0019c	50		 push	 eax
  0019d	6a 0a		 push	 10			; 0000000aH
  0019f	6a 01		 push	 1
  001a1	8b ce		 mov	 ecx, esi
  001a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115845:
  001a8	66 3b c3	 cmp	 ax, bx
  001ab	74 06		 je	 SHORT $L115846
  001ad	66 3d 01 00	 cmp	 ax, 1
  001b1	75 1c		 jne	 SHORT $L115823
$L115846:

; 2705 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bMaxLevel)

  001b3	3b fb		 cmp	 edi, ebx
  001b5	89 9e 38 08 00
	00		 mov	 DWORD PTR [esi+2104], ebx
  001bb	75 12		 jne	 SHORT $L115823
  001bd	8d 8e 74 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3188]
  001c3	51		 push	 ecx
  001c4	6a 0b		 push	 11			; 0000000bH
  001c6	6a 01		 push	 1
  001c8	8b ce		 mov	 ecx, esi
  001ca	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115823:
  001cf	5f		 pop	 edi
  001d0	5e		 pop	 esi
  001d1	5b		 pop	 ebx

; 2706 : END_PARAM()

  001d2	c2 04 00	 ret	 4
?BindParameters@CSPTnmtEventEntry@@UAEFH@Z ENDP		; CSPTnmtEventEntry::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPTnmtEventEntry@@UAE@XZ			; CSPTnmtEventEntry::~CSPTnmtEventEntry
; Function compile flags: /Ogty
;	COMDAT ??_GCSPTnmtEventEntry@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPTnmtEventEntry@@UAEPAXI@Z PROC NEAR		; CSPTnmtEventEntry::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPTnmtEventEntry@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L147061
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L147061:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPTnmtEventEntry@@UAEPAXI@Z ENDP			; CSPTnmtEventEntry::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPTnmtEventEntry@@UAE@XZ
_TEXT	SEGMENT
??1CSPTnmtEventEntry@@UAE@XZ PROC NEAR			; CSPTnmtEventEntry::~CSPTnmtEventEntry, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPTnmtEventEntry@@UAE@XZ ENDP			; CSPTnmtEventEntry::~CSPTnmtEventEntry
_TEXT	ENDS
PUBLIC	??0CSPTnmtEventReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTnmtEventReward::CSPTnmtEventReward
PUBLIC	?GetNumParam@CSPTnmtEventReward@@UAEHXZ		; CSPTnmtEventReward::GetNumParam
PUBLIC	?BindParameters@CSPTnmtEventReward@@UAEFH@Z	; CSPTnmtEventReward::BindParameters
PUBLIC	??_7CSPTnmtEventReward@@6B@			; CSPTnmtEventReward::`vftable'
PUBLIC	??_GCSPTnmtEventReward@@UAEPAXI@Z		; CSPTnmtEventReward::`scalar deleting destructor'
PUBLIC	??_C@_0CH@PCHOHFMJ@?$HLCALL?5TTnmtEventReward?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ ; `string'
EXTRN	??_ECSPTnmtEventReward@@UAEPAXI@Z:NEAR		; CSPTnmtEventReward::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T147244 DD	0ffffffffH
	DD	FLAT:$L147070
$T147241 DD	019930520H
	DD	01H
	DD	FLAT:$T147244
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CH@PCHOHFMJ@?$HLCALL?5TTnmtEventReward?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
CONST	SEGMENT
??_C@_0CH@PCHOHFMJ@?$HLCALL?5TTnmtEventReward?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@ DB '{'
	DB	'CALL TTnmtEventReward(?,?,?,?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPTnmtEventReward@@6B@
CONST	SEGMENT
??_7CSPTnmtEventReward@@6B@ DD FLAT:??_ECSPTnmtEventReward@@UAEPAXI@Z ; CSPTnmtEventReward::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPTnmtEventReward@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPTnmtEventReward@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPTnmtEventReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T147069 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPTnmtEventReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPTnmtEventReward::CSPTnmtEventReward, COMDAT
; _this$ = ecx

; 2720 : DEF_QUERY(CSPTnmtEventReward, _T("{CALL TTnmtEventReward(?,?,?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPTnmtEventReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CH@PCHOHFMJ@?$HLCALL?5TTnmtEventReward?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T147069[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPTnmtEventReward@@6B@
  0005e	72 0d		 jb	 SHORT $L147242
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L147242:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L147070:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPTnmtEventReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T147241
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPTnmtEventReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPTnmtEventReward::CSPTnmtEventReward
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPTnmtEventReward@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPTnmtEventReward@@UAEHXZ PROC NEAR	; CSPTnmtEventReward::GetNumParam, COMDAT
; _this$ = ecx

; 2722 : BEGIN_PARAM(7)

  00000	b8 07 00 00 00	 mov	 eax, 7
  00005	c3		 ret	 0
?GetNumParam@CSPTnmtEventReward@@UAEHXZ ENDP		; CSPTnmtEventReward::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPTnmtEventReward@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPTnmtEventReward@@UAEFH@Z PROC NEAR	; CSPTnmtEventReward::BindParameters, COMDAT
; _this$ = ecx

; 2722 : BEGIN_PARAM(7)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 2723 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wTourID)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L115897
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L115897
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 e7 00 00
	00		 jne	 $L115892
$L115897:

; 2724 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bEntryID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L115898
  00040	8d 8e 2e 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3118]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115898:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 0a		 je	 SHORT $L115899
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	0f 85 bc 00 00
	00		 jne	 $L115892
$L115899:

; 2725 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bChartType)

  00061	3b fb		 cmp	 edi, ebx
  00063	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00069	75 12		 jne	 SHORT $L115900
  0006b	8d 96 2f 0c 00
	00		 lea	 edx, DWORD PTR [esi+3119]
  00071	52		 push	 edx
  00072	6a 03		 push	 3
  00074	6a 01		 push	 1
  00076	8b ce		 mov	 ecx, esi
  00078	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115900:
  0007d	66 3b c3	 cmp	 ax, bx
  00080	74 0a		 je	 SHORT $L115901
  00082	66 3d 01 00	 cmp	 ax, 1
  00086	0f 85 91 00 00
	00		 jne	 $L115892
$L115901:

; 2726 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_wItemID)

  0008c	3b fb		 cmp	 edi, ebx
  0008e	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  00094	75 12		 jne	 SHORT $L115902
  00096	8d 86 30 0c 00
	00		 lea	 eax, DWORD PTR [esi+3120]
  0009c	50		 push	 eax
  0009d	6a 04		 push	 4
  0009f	6a 01		 push	 1
  000a1	8b ce		 mov	 ecx, esi
  000a3	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAG@Z ; CSqlBase::BindParam
$L115902:
  000a8	66 3b c3	 cmp	 ax, bx
  000ab	74 06		 je	 SHORT $L115903
  000ad	66 3d 01 00	 cmp	 ax, 1
  000b1	75 6a		 jne	 SHORT $L115892
$L115903:

; 2727 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bCount)

  000b3	3b fb		 cmp	 edi, ebx
  000b5	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000bb	75 12		 jne	 SHORT $L115904
  000bd	8d 8e 32 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3122]
  000c3	51		 push	 ecx
  000c4	6a 05		 push	 5
  000c6	6a 01		 push	 1
  000c8	8b ce		 mov	 ecx, esi
  000ca	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115904:
  000cf	66 3b c3	 cmp	 ax, bx
  000d2	74 06		 je	 SHORT $L115905
  000d4	66 3d 01 00	 cmp	 ax, 1
  000d8	75 43		 jne	 SHORT $L115892
$L115905:

; 2728 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwClass)

  000da	3b fb		 cmp	 edi, ebx
  000dc	89 9e 24 08 00
	00		 mov	 DWORD PTR [esi+2084], ebx
  000e2	75 12		 jne	 SHORT $L115906
  000e4	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  000ea	52		 push	 edx
  000eb	6a 06		 push	 6
  000ed	6a 01		 push	 1
  000ef	8b ce		 mov	 ecx, esi
  000f1	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L115906:
  000f6	66 3b c3	 cmp	 ax, bx
  000f9	74 06		 je	 SHORT $L115907
  000fb	66 3d 01 00	 cmp	 ax, 1
  000ff	75 1c		 jne	 SHORT $L115892
$L115907:

; 2729 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bCheckShield)

  00101	3b fb		 cmp	 edi, ebx
  00103	89 9e 28 08 00
	00		 mov	 DWORD PTR [esi+2088], ebx
  00109	75 12		 jne	 SHORT $L115892
  0010b	8d 86 38 0c 00
	00		 lea	 eax, DWORD PTR [esi+3128]
  00111	50		 push	 eax
  00112	6a 07		 push	 7
  00114	6a 01		 push	 1
  00116	8b ce		 mov	 ecx, esi
  00118	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L115892:
  0011d	5f		 pop	 edi
  0011e	5e		 pop	 esi
  0011f	5b		 pop	 ebx

; 2730 : END_PARAM()

  00120	c2 04 00	 ret	 4
?BindParameters@CSPTnmtEventReward@@UAEFH@Z ENDP	; CSPTnmtEventReward::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPTnmtEventReward@@UAE@XZ			; CSPTnmtEventReward::~CSPTnmtEventReward
; Function compile flags: /Ogty
;	COMDAT ??_GCSPTnmtEventReward@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPTnmtEventReward@@UAEPAXI@Z PROC NEAR		; CSPTnmtEventReward::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPTnmtEventReward@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L147256
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L147256:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPTnmtEventReward@@UAEPAXI@Z ENDP			; CSPTnmtEventReward::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPTnmtEventReward@@UAE@XZ
_TEXT	SEGMENT
??1CSPTnmtEventReward@@UAE@XZ PROC NEAR			; CSPTnmtEventReward::~CSPTnmtEventReward, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPTnmtEventReward@@UAE@XZ ENDP			; CSPTnmtEventReward::~CSPTnmtEventReward
_TEXT	ENDS
PUBLIC	??0CSPHelpMessage@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPHelpMessage::CSPHelpMessage
PUBLIC	?GetNumParam@CSPHelpMessage@@UAEHXZ		; CSPHelpMessage::GetNumParam
PUBLIC	?BindParameters@CSPHelpMessage@@UAEFH@Z		; CSPHelpMessage::BindParameters
PUBLIC	??_7CSPHelpMessage@@6B@				; CSPHelpMessage::`vftable'
PUBLIC	??_GCSPHelpMessage@@UAEPAXI@Z			; CSPHelpMessage::`scalar deleting destructor'
PUBLIC	??_C@_0BN@NCNGDIFG@?$HLCALL?5THelpMessage?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPHelpMessage@@UAEPAXI@Z:NEAR		; CSPHelpMessage::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T147439 DD	0ffffffffH
	DD	FLAT:$L147265
$T147436 DD	019930520H
	DD	01H
	DD	FLAT:$T147439
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BN@NCNGDIFG@?$HLCALL?5THelpMessage?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BN@NCNGDIFG@?$HLCALL?5THelpMessage?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@ DB '{'
	DB	'CALL THelpMessage(?,?,?,?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPHelpMessage@@6B@
CONST	SEGMENT
??_7CSPHelpMessage@@6B@ DD FLAT:??_ECSPHelpMessage@@UAEPAXI@Z ; CSPHelpMessage::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPHelpMessage@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPHelpMessage@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPHelpMessage@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T147264 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPHelpMessage@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPHelpMessage::CSPHelpMessage, COMDAT
; _this$ = ecx

; 2741 : DEF_QUERY(CSPHelpMessage, _T("{CALL THelpMessage(?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPHelpMessage@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BN@NCNGDIFG@?$HLCALL?5THelpMessage?$CI?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T147264[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPHelpMessage@@6B@
  0005e	72 0d		 jb	 SHORT $L147437
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L147437:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L147265:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPHelpMessage@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T147436
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPHelpMessage@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPHelpMessage::CSPHelpMessage
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPHelpMessage@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPHelpMessage@@UAEHXZ PROC NEAR		; CSPHelpMessage::GetNumParam, COMDAT
; _this$ = ecx

; 2743 : BEGIN_PARAM(4)

  00000	b8 04 00 00 00	 mov	 eax, 4
  00005	c3		 ret	 0
?GetNumParam@CSPHelpMessage@@UAEHXZ ENDP		; CSPHelpMessage::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPHelpMessage@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPHelpMessage@@UAEFH@Z PROC NEAR	; CSPHelpMessage::BindParameters, COMDAT
; _this$ = ecx

; 2743 : BEGIN_PARAM(4)

  00000	56		 push	 esi
  00001	57		 push	 edi

; 2744 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bID)

  00002	8b 7c 24 0c	 mov	 edi, DWORD PTR _bRewind$[esp+4]
  00006	33 c0		 xor	 eax, eax
  00008	85 ff		 test	 edi, edi
  0000a	8b f1		 mov	 esi, ecx
  0000c	89 86 10 08 00
	00		 mov	 DWORD PTR [esi+2064], eax
  00012	75 1b		 jne	 SHORT $L115955
  00014	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001a	50		 push	 eax
  0001b	6a 01		 push	 1
  0001d	6a 01		 push	 1
  0001f	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
  00024	66 85 c0	 test	 ax, ax
  00027	74 06		 je	 SHORT $L115955
  00029	66 3d 01 00	 cmp	 ax, 1
  0002d	75 7b		 jne	 SHORT $L115950
$L115955:

; 2745 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_timeStart)

  0002f	85 ff		 test	 edi, edi
  00031	c7 86 14 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2068], 0
  0003b	75 12		 jne	 SHORT $L115956
  0003d	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00043	51		 push	 ecx
  00044	6a 02		 push	 2
  00046	6a 01		 push	 1
  00048	8b ce		 mov	 ecx, esi
  0004a	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L115956:
  0004f	66 85 c0	 test	 ax, ax
  00052	74 06		 je	 SHORT $L115957
  00054	66 3d 01 00	 cmp	 ax, 1
  00058	75 50		 jne	 SHORT $L115950
$L115957:

; 2746 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_timeEnd)

  0005a	85 ff		 test	 edi, edi
  0005c	c7 86 18 08 00
	00 00 00 00 00	 mov	 DWORD PTR [esi+2072], 0
  00066	75 12		 jne	 SHORT $L115958
  00068	8d 96 40 0c 00
	00		 lea	 edx, DWORD PTR [esi+3136]
  0006e	52		 push	 edx
  0006f	6a 03		 push	 3
  00071	6a 01		 push	 1
  00073	8b ce		 mov	 ecx, esi
  00075	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L115958:
  0007a	66 85 c0	 test	 ax, ax
  0007d	74 06		 je	 SHORT $L115959
  0007f	66 3d 01 00	 cmp	 ax, 1
  00083	75 25		 jne	 SHORT $L115950
$L115959:

; 2747 : 	PARAM_ENTRY_STR(SQL_PARAM_INPUT,m_szMessage)

  00085	85 ff		 test	 edi, edi
  00087	c7 86 1c 08 00
	00 fd ff ff ff	 mov	 DWORD PTR [esi+2076], -3 ; fffffffdH
  00091	75 17		 jne	 SHORT $L115950
  00093	68 01 08 00 00	 push	 2049			; 00000801H
  00098	8d 86 50 0c 00
	00		 lea	 eax, DWORD PTR [esi+3152]
  0009e	50		 push	 eax
  0009f	6a 04		 push	 4
  000a1	6a 01		 push	 1
  000a3	8b ce		 mov	 ecx, esi
  000a5	e8 00 00 00 00	 call	 ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ; CSqlBase::BindParamStr
$L115950:
  000aa	5f		 pop	 edi
  000ab	5e		 pop	 esi

; 2748 : END_PARAM()

  000ac	c2 04 00	 ret	 4
?BindParameters@CSPHelpMessage@@UAEFH@Z ENDP		; CSPHelpMessage::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPHelpMessage@@UAE@XZ			; CSPHelpMessage::~CSPHelpMessage
; Function compile flags: /Ogty
;	COMDAT ??_GCSPHelpMessage@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPHelpMessage@@UAEPAXI@Z PROC NEAR			; CSPHelpMessage::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPHelpMessage@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L147451
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L147451:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPHelpMessage@@UAEPAXI@Z ENDP			; CSPHelpMessage::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPHelpMessage@@UAE@XZ
_TEXT	SEGMENT
??1CSPHelpMessage@@UAE@XZ PROC NEAR			; CSPHelpMessage::~CSPHelpMessage, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPHelpMessage@@UAE@XZ ENDP				; CSPHelpMessage::~CSPHelpMessage
_TEXT	ENDS
PUBLIC	??0CSPRPSGameRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPRPSGameRecord::CSPRPSGameRecord
PUBLIC	?GetNumParam@CSPRPSGameRecord@@UAEHXZ		; CSPRPSGameRecord::GetNumParam
PUBLIC	?BindParameters@CSPRPSGameRecord@@UAEFH@Z	; CSPRPSGameRecord::BindParameters
PUBLIC	??_7CSPRPSGameRecord@@6B@			; CSPRPSGameRecord::`vftable'
PUBLIC	??_GCSPRPSGameRecord@@UAEPAXI@Z			; CSPRPSGameRecord::`scalar deleting destructor'
PUBLIC	??_C@_0CB@DBMGFAOH@?$HLCALL?5TRPSGameRecord?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN@ ; `string'
EXTRN	??_ECSPRPSGameRecord@@UAEPAXI@Z:NEAR		; CSPRPSGameRecord::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T147634 DD	0ffffffffH
	DD	FLAT:$L147460
$T147631 DD	019930520H
	DD	01H
	DD	FLAT:$T147634
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0CB@DBMGFAOH@?$HLCALL?5TRPSGameRecord?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN@
CONST	SEGMENT
??_C@_0CB@DBMGFAOH@?$HLCALL?5TRPSGameRecord?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN@ DB '{'
	DB	'CALL TRPSGameRecord(?,?,?,?,?)}', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7CSPRPSGameRecord@@6B@
CONST	SEGMENT
??_7CSPRPSGameRecord@@6B@ DD FLAT:??_ECSPRPSGameRecord@@UAEPAXI@Z ; CSPRPSGameRecord::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPRPSGameRecord@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPRPSGameRecord@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPRPSGameRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T147459 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPRPSGameRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPRPSGameRecord::CSPRPSGameRecord, COMDAT
; _this$ = ecx

; 2760 : DEF_QUERY(CSPRPSGameRecord, _T("{CALL TRPSGameRecord(?,?,?,?,?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPRPSGameRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CB@DBMGFAOH@?$HLCALL?5TRPSGameRecord?$CI?$DP?0?$DP?0?$DP?0?$DP?0?$DP?$CJ?$HN@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T147459[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPRPSGameRecord@@6B@
  0005e	72 0d		 jb	 SHORT $L147632
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L147632:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L147460:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPRPSGameRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T147631
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPRPSGameRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPRPSGameRecord::CSPRPSGameRecord
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPRPSGameRecord@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPRPSGameRecord@@UAEHXZ PROC NEAR		; CSPRPSGameRecord::GetNumParam, COMDAT
; _this$ = ecx

; 2762 : BEGIN_PARAM(5)

  00000	b8 05 00 00 00	 mov	 eax, 5
  00005	c3		 ret	 0
?GetNumParam@CSPRPSGameRecord@@UAEHXZ ENDP		; CSPRPSGameRecord::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPRPSGameRecord@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPRPSGameRecord@@UAEFH@Z PROC NEAR	; CSPRPSGameRecord::BindParameters, COMDAT
; _this$ = ecx

; 2762 : BEGIN_PARAM(5)

  00000	53		 push	 ebx
  00001	56		 push	 esi
  00002	57		 push	 edi

; 2763 : 	PARAM_ENTRY(SQL_PARAM_INPUT, m_bRecord)

  00003	8b 7c 24 10	 mov	 edi, DWORD PTR _bRewind$[esp+8]
  00007	33 db		 xor	 ebx, ebx
  00009	8b f1		 mov	 esi, ecx
  0000b	33 c0		 xor	 eax, eax
  0000d	3b fb		 cmp	 edi, ebx
  0000f	89 9e 10 08 00
	00		 mov	 DWORD PTR [esi+2064], ebx
  00015	75 1f		 jne	 SHORT $L116008
  00017	8d 86 2c 0c 00
	00		 lea	 eax, DWORD PTR [esi+3116]
  0001d	50		 push	 eax
  0001e	6a 01		 push	 1
  00020	6a 01		 push	 1
  00022	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
  00027	66 3b c3	 cmp	 ax, bx
  0002a	74 0a		 je	 SHORT $L116008
  0002c	66 3d 01 00	 cmp	 ax, 1
  00030	0f 85 91 00 00
	00		 jne	 $L116003
$L116008:

; 2764 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dwCharID)

  00036	3b fb		 cmp	 edi, ebx
  00038	89 9e 14 08 00
	00		 mov	 DWORD PTR [esi+2068], ebx
  0003e	75 12		 jne	 SHORT $L116009
  00040	8d 8e 30 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3120]
  00046	51		 push	 ecx
  00047	6a 02		 push	 2
  00049	6a 01		 push	 1
  0004b	8b ce		 mov	 ecx, esi
  0004d	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAK@Z ; CSqlBase::BindParam
$L116009:
  00052	66 3b c3	 cmp	 ax, bx
  00055	74 06		 je	 SHORT $L116010
  00057	66 3d 01 00	 cmp	 ax, 1
  0005b	75 6a		 jne	 SHORT $L116003
$L116010:

; 2765 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bType)

  0005d	3b fb		 cmp	 edi, ebx
  0005f	89 9e 18 08 00
	00		 mov	 DWORD PTR [esi+2072], ebx
  00065	75 12		 jne	 SHORT $L116011
  00067	8d 96 34 0c 00
	00		 lea	 edx, DWORD PTR [esi+3124]
  0006d	52		 push	 edx
  0006e	6a 03		 push	 3
  00070	6a 01		 push	 1
  00072	8b ce		 mov	 ecx, esi
  00074	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L116011:
  00079	66 3b c3	 cmp	 ax, bx
  0007c	74 06		 je	 SHORT $L116012
  0007e	66 3d 01 00	 cmp	 ax, 1
  00082	75 43		 jne	 SHORT $L116003
$L116012:

; 2766 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_bWinCount)

  00084	3b fb		 cmp	 edi, ebx
  00086	89 9e 1c 08 00
	00		 mov	 DWORD PTR [esi+2076], ebx
  0008c	75 12		 jne	 SHORT $L116013
  0008e	8d 86 35 0c 00
	00		 lea	 eax, DWORD PTR [esi+3125]
  00094	50		 push	 eax
  00095	6a 04		 push	 4
  00097	6a 01		 push	 1
  00099	8b ce		 mov	 ecx, esi
  0009b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L116013:
  000a0	66 3b c3	 cmp	 ax, bx
  000a3	74 06		 je	 SHORT $L116014
  000a5	66 3d 01 00	 cmp	 ax, 1
  000a9	75 1c		 jne	 SHORT $L116003
$L116014:

; 2767 : 	PARAM_ENTRY(SQL_PARAM_INPUT,m_dWinDate)

  000ab	3b fb		 cmp	 edi, ebx
  000ad	89 9e 20 08 00
	00		 mov	 DWORD PTR [esi+2080], ebx
  000b3	75 12		 jne	 SHORT $L116003
  000b5	8d 8e 38 0c 00
	00		 lea	 ecx, DWORD PTR [esi+3128]
  000bb	51		 push	 ecx
  000bc	6a 05		 push	 5
  000be	6a 01		 push	 1
  000c0	8b ce		 mov	 ecx, esi
  000c2	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
$L116003:
  000c7	5f		 pop	 edi
  000c8	5e		 pop	 esi
  000c9	5b		 pop	 ebx

; 2768 : END_PARAM()

  000ca	c2 04 00	 ret	 4
?BindParameters@CSPRPSGameRecord@@UAEFH@Z ENDP		; CSPRPSGameRecord::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPRPSGameRecord@@UAE@XZ			; CSPRPSGameRecord::~CSPRPSGameRecord
; Function compile flags: /Ogty
;	COMDAT ??_GCSPRPSGameRecord@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPRPSGameRecord@@UAEPAXI@Z PROC NEAR		; CSPRPSGameRecord::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPRPSGameRecord@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L147646
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L147646:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPRPSGameRecord@@UAEPAXI@Z ENDP			; CSPRPSGameRecord::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPRPSGameRecord@@UAE@XZ
_TEXT	SEGMENT
??1CSPRPSGameRecord@@UAE@XZ PROC NEAR			; CSPRPSGameRecord::~CSPRPSGameRecord, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPRPSGameRecord@@UAE@XZ ENDP			; CSPRPSGameRecord::~CSPRPSGameRecord
_TEXT	ENDS
PUBLIC	??0CSPGetLimitedLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetLimitedLevel::CSPGetLimitedLevel
PUBLIC	?GetNumParam@CSPGetLimitedLevel@@UAEHXZ		; CSPGetLimitedLevel::GetNumParam
PUBLIC	?BindParameters@CSPGetLimitedLevel@@UAEFH@Z	; CSPGetLimitedLevel::BindParameters
PUBLIC	??_7CSPGetLimitedLevel@@6B@			; CSPGetLimitedLevel::`vftable'
PUBLIC	??_GCSPGetLimitedLevel@@UAEPAXI@Z		; CSPGetLimitedLevel::`scalar deleting destructor'
PUBLIC	??_C@_0BM@GKCNHNAL@?$HL?5CALL?5TGetLimitedLevel?$CI?$DP?$CJ?$HN?$AA@ ; `string'
EXTRN	??_ECSPGetLimitedLevel@@UAEPAXI@Z:NEAR		; CSPGetLimitedLevel::`vector deleting destructor'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T147829 DD	0ffffffffH
	DD	FLAT:$L147655
$T147826 DD	019930520H
	DD	01H
	DD	FLAT:$T147829
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@GKCNHNAL@?$HL?5CALL?5TGetLimitedLevel?$CI?$DP?$CJ?$HN?$AA@
CONST	SEGMENT
??_C@_0BM@GKCNHNAL@?$HL?5CALL?5TGetLimitedLevel?$CI?$DP?$CJ?$HN?$AA@ DB '{'
	DB	' CALL TGetLimitedLevel(?)}', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7CSPGetLimitedLevel@@6B@
CONST	SEGMENT
??_7CSPGetLimitedLevel@@6B@ DD FLAT:??_ECSPGetLimitedLevel@@UAEPAXI@Z ; CSPGetLimitedLevel::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSPGetLimitedLevel@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlQuery@@UAEHXZ
	DD	FLAT:?BindColumns@CSqlQuery@@UAEFXZ
	DD	FLAT:?BindParameters@CSPGetLimitedLevel@@UAEFH@Z
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.h
CONST	ENDS
;	COMDAT ??0CSPGetLimitedLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
$T147654 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
_strKey$ = 12						; size = 28
??0CSPGetLimitedLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC NEAR ; CSPGetLimitedLevel::CSPGetLimitedLevel, COMDAT
; _this$ = ecx

; 2776 : DEF_QUERY(CSPGetLimitedLevel, _T("{ CALL TGetLimitedLevel(?)}"))

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0CSPGetLimitedLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@GKCNHNAL@?$HL?5CALL?5TGetLimitedLevel?$CI?$DP?$CJ?$HN?$AA@
  0001e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00021	8b cc		 mov	 ecx, esp
  00023	33 c0		 xor	 eax, eax
  00025	89 64 24 24	 mov	 DWORD PTR $T147654[esp+52], esp
  00029	6a ff		 push	 -1
  0002b	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0002e	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00035	50		 push	 eax
  00036	89 44 24 38	 mov	 DWORD PTR __$EHRec$[esp+68], eax
  0003a	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0003d	8d 44 24 44	 lea	 eax, DWORD PTR _strKey$[esp+56]
  00041	50		 push	 eax
  00042	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00047	8b 4c 24 38	 mov	 ecx, DWORD PTR _pdb$[esp+48]
  0004b	51		 push	 ecx
  0004c	8b ce		 mov	 ecx, esi
  0004e	e8 00 00 00 00	 call	 ??0CSqlQuery@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PBD@Z ; CSqlQuery::CSqlQuery
  00053	83 7c 24 34 10	 cmp	 DWORD PTR _strKey$[esp+40], 16 ; 00000010H
  00058	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSPGetLimitedLevel@@6B@
  0005e	72 0d		 jb	 SHORT $L147827
  00060	8b 54 24 20	 mov	 edx, DWORD PTR _strKey$[esp+20]
  00064	52		 push	 edx
  00065	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006a	83 c4 04	 add	 esp, 4
$L147827:
  0006d	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00071	8b c6		 mov	 eax, esi
  00073	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007a	5e		 pop	 esi
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L147655:
  00000	8d 4d 08	 lea	 ecx, DWORD PTR _strKey$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$??0CSPGetLimitedLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T147826
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0CSPGetLimitedLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; CSPGetLimitedLevel::CSPGetLimitedLevel
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSPGetLimitedLevel@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSPGetLimitedLevel@@UAEHXZ PROC NEAR	; CSPGetLimitedLevel::GetNumParam, COMDAT
; _this$ = ecx

; 2778 : BEGIN_PARAM(1)

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?GetNumParam@CSPGetLimitedLevel@@UAEHXZ ENDP		; CSPGetLimitedLevel::GetNumParam
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?BindParameters@CSPGetLimitedLevel@@UAEFH@Z
_TEXT	SEGMENT
_bRewind$ = 8						; size = 4
?BindParameters@CSPGetLimitedLevel@@UAEFH@Z PROC NEAR	; CSPGetLimitedLevel::BindParameters, COMDAT
; _this$ = ecx

; 2779 : 	PARAM_ENTRY(SQL_PARAM_OUTPUT, m_bMaxLevel)

  00000	8b 54 24 04	 mov	 edx, DWORD PTR _bRewind$[esp-4]
  00004	33 c0		 xor	 eax, eax
  00006	85 d2		 test	 edx, edx
  00008	89 81 10 08 00
	00		 mov	 DWORD PTR [ecx+2064], eax
  0000e	75 10		 jne	 SHORT $L116054
  00010	8d 81 2c 0c 00
	00		 lea	 eax, DWORD PTR [ecx+3116]
  00016	50		 push	 eax
  00017	6a 01		 push	 1
  00019	6a 04		 push	 4
  0001b	e8 00 00 00 00	 call	 ?BindParam@CSqlBase@@QAEFFFPAE@Z ; CSqlBase::BindParam
$L116054:

; 2780 : END_PARAM()

  00020	c2 04 00	 ret	 4
?BindParameters@CSPGetLimitedLevel@@UAEFH@Z ENDP	; CSPGetLimitedLevel::BindParameters
_TEXT	ENDS
PUBLIC	??1CSPGetLimitedLevel@@UAE@XZ			; CSPGetLimitedLevel::~CSPGetLimitedLevel
; Function compile flags: /Ogty
;	COMDAT ??_GCSPGetLimitedLevel@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSPGetLimitedLevel@@UAEPAXI@Z PROC NEAR		; CSPGetLimitedLevel::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1CSPGetLimitedLevel@@UAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L147841
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L147841:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GCSPGetLimitedLevel@@UAEPAXI@Z ENDP			; CSPGetLimitedLevel::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1CSPGetLimitedLevel@@UAE@XZ
_TEXT	SEGMENT
??1CSPGetLimitedLevel@@UAE@XZ PROC NEAR			; CSPGetLimitedLevel::~CSPGetLimitedLevel, COMDAT
; _this$ = ecx
  00000	e9 00 00 00 00	 jmp	 ??1CSqlQuery@@UAE@XZ	; CSqlQuery::~CSqlQuery
??1CSPGetLimitedLevel@@UAE@XZ ENDP			; CSPGetLimitedLevel::~CSPGetLimitedLevel
_TEXT	ENDS
PUBLIC	??_C@_0BD@PKBAFGDB@CSPGuildArticleAdd?$AA@	; `string'
PUBLIC	??_C@_0BD@ENFEGDM@CSPGuildArticleDel?$AA@	; `string'
PUBLIC	??_C@_0BG@BHMBFCLD@CSPGuildArticleUpdate?$AA@	; `string'
PUBLIC	??_C@_0N@BJLOKBNA@CSPGuildFame?$AA@		; `string'
PUBLIC	??_C@_0O@JMIBBNOG@CSPGuildLevel?$AA@		; `string'
PUBLIC	??_C@_0BD@GJCFCJMB@CSPGuildMaxCabinet?$AA@	; `string'
PUBLIC	??_C@_0BF@KLNPGACF@CSPGuildContribution?$AA@	; `string'
PUBLIC	??_C@_0BF@MCBOHLID@CSPGuildVolunteerAdd?$AA@	; `string'
PUBLIC	??_C@_0BF@DMNLGLIO@CSPGuildVolunteerDel?$AA@	; `string'
PUBLIC	??_C@_0BD@HMLBIAKI@CSPGuildTacticsAdd?$AA@	; `string'
PUBLIC	??_C@_0BD@ICHEJAKF@CSPGuildTacticsDel?$AA@	; `string'
PUBLIC	??_C@_0P@CBFOJEBG@CSPSoulmateReg?$AA@		; `string'
PUBLIC	??_C@_0P@MLOIEHBC@CSPSoulmateEnd?$AA@		; `string'
PUBLIC	??_C@_0P@LHNIEFJO@CSPSoulmateDel?$AA@		; `string'
PUBLIC	??_C@_0BD@JPPBOFPA@CSPGetReservedPost?$AA@	; `string'
PUBLIC	??_C@_0BH@NFPLBBEB@CSPClearMapCurrentUser?$AA@	; `string'
PUBLIC	??_C@_0N@KEAKLAPB@CSPGetNation?$AA@		; `string'
PUBLIC	??_C@_0BD@HEBAMJJB@CSPItemStateChange?$AA@	; `string'
PUBLIC	??_C@_0BE@LOKJEBEN@CSPSaveGuildPvPoint?$AA@	; `string'
PUBLIC	??_C@_0BG@NDBGPMLM@CSPSaveGuildPvPRecord?$AA@	; `string'
PUBLIC	??_C@_0BI@MDGHDNAF@CSPSaveGuildPointReward?$AA@	; `string'
PUBLIC	??_C@_0BH@JLINGJDI@CSPSaveCastleApplicant?$AA@	; `string'
PUBLIC	??_C@_0P@EAKFNGNN@CSPGetRecallID?$AA@		; `string'
PUBLIC	??_C@_0BA@CIPMMDCL@CSPCashItemSale?$AA@		; `string'
PUBLIC	??_C@_0BC@PGMELMBH@CSPGuildWantedAdd?$AA@	; `string'
PUBLIC	??_C@_0BC@IABKMBK@CSPGuildWantedDel?$AA@	; `string'
PUBLIC	??_C@_0BJ@MCAHKKJ@CSPGuildTacticsWantedAdd?$AA@	; `string'
PUBLIC	??_C@_0BJ@PCOFGKKE@CSPGuildTacticsWantedDel?$AA@ ; `string'
PUBLIC	??_C@_0BF@IBCCCKEH@CSPGuildVolunteering?$AA@	; `string'
PUBLIC	??_C@_0BI@FMPMPEAC@CSPGuildVolunteeringDel?$AA@	; `string'
PUBLIC	??_C@_0BI@JPBEDNLG@CSPSaveTacticsGainPoint?$AA@	; `string'
PUBLIC	??_C@_0BB@OBEJAKAN@CSPSaveMonthRank?$AA@	; `string'
PUBLIC	??_C@_0BE@NJGPKFKL@CSPInitMonthPvPoint?$AA@	; `string'
PUBLIC	??_C@_0BB@GDEIFAEJ@CSPInitMonthRank?$AA@	; `string'
PUBLIC	??_C@_0BG@MCCLKMPC@CSPEventQuarterUpdate?$AA@	; `string'
PUBLIC	??_C@_0P@DAIDJBOD@CSPGetItemName?$AA@		; `string'
PUBLIC	??_C@_0BF@KNNLENBO@CSPTournamentPayback?$AA@	; `string'
PUBLIC	??_C@_0BE@OAIONDMH@CSPTournamentResult?$AA@	; `string'
PUBLIC	??_C@_0BD@BHOHNFON@CSPTournamentApply?$AA@	; `string'
PUBLIC	??_C@_0BD@HDNEODFA@CSPTournamentClear?$AA@	; `string'
PUBLIC	??_C@_0BE@HAFJKEPC@CSPTournamentStatus?$AA@	; `string'
PUBLIC	??_C@_0BB@JOFDMAHB@CSPTnmtEventTime?$AA@	; `string'
PUBLIC	??_C@_0BF@KIAJDEO@CSPTnmtEventSchedule?$AA@	; `string'
PUBLIC	??_C@_0BA@EKJFNIGK@CSPTnmtEventDel?$AA@		; `string'
PUBLIC	??_C@_0BC@JHLDHABL@CSPTnmtEventEntry?$AA@	; `string'
PUBLIC	??_C@_0BD@EKIEOLPM@CSPTnmtEventReward?$AA@	; `string'
PUBLIC	??_C@_0P@DIEGLFL@CSPHelpMessage?$AA@		; `string'
PUBLIC	??_C@_0BB@CAPPCNAH@CSPRPSGameRecord?$AA@	; `string'
PUBLIC	??_C@_0BD@CAGAKGIN@CSPGetLimitedLevel?$AA@	; `string'
PUBLIC	?InitQueryTWorldSvr@@YAHPAVCSqlDatabase@@@Z	; InitQueryTWorldSvr
PUBLIC	??_C@_0P@HNOJALKC@CTBLGuildChart?$AA@		; `string'
PUBLIC	??_C@_09ILEIJAMI@CTBLGuild?$AA@			; `string'
PUBLIC	??_C@_0BB@FKMKEJMM@CTBLGuildArticle?$AA@	; `string'
PUBLIC	??_C@_0O@CDNBPAGO@CTBLGuildItem?$AA@		; `string'
PUBLIC	??_C@_0BD@EAIJAFAN@CTBLGuildVolunteer?$AA@	; `string'
PUBLIC	??_C@_0BA@EBAACLOB@CTBLGuildMember?$AA@		; `string'
PUBLIC	??_C@_0BB@MGHNIDEO@CTBLGuildTactics?$AA@	; `string'
PUBLIC	??_C@_0BC@NKCOCKMP@CTBLGuildRelation?$AA@	; `string'
PUBLIC	??_C@_0L@FPEIFNOB@CTBLFriend?$AA@		; `string'
PUBLIC	??_C@_0BB@BAEFACHF@CTBLFriendTarget?$AA@	; `string'
PUBLIC	??_C@_0BF@JDAFODJ@CTBLFriendGroupTable?$AA@	; `string'
PUBLIC	??_C@_0N@OPCLOBJG@CTBLSoulmate?$AA@		; `string'
PUBLIC	??_C@_0P@BIANAOEM@CTBLMySoulmate?$AA@		; `string'
PUBLIC	??_C@_0BC@DCCCNCDJ@CTBLOperatorChart?$AA@	; `string'
PUBLIC	??_C@_0BG@CDBIMFOD@CTBLEventQuarterChart?$AA@	; `string'
PUBLIC	??_C@_0O@LKOCLMBF@CTBLGuildLoad?$AA@		; `string'
PUBLIC	??_C@_0BE@BAHNCKAE@CTBLBattleTimeChart?$AA@	; `string'
PUBLIC	??_C@_0L@LMFKOODM@CTBLSvrMsg?$AA@		; `string'
PUBLIC	??_C@_0N@CAJJGKHC@CTBLItemFind?$AA@		; `string'
PUBLIC	??_C@_0BH@HIKOINBC@CTBLGuildPvPointReward?$AA@	; `string'
PUBLIC	??_C@_0BD@EHMHJLFH@CTBLGuildPvPRecord?$AA@	; `string'
PUBLIC	??_C@_0BE@KMMBIDKP@CTBLCastleApplicant?$AA@	; `string'
PUBLIC	??_C@_0BA@DHHFGNDD@CTBLGuildWanted?$AA@		; `string'
PUBLIC	??_C@_0BH@GHGLGBKE@CTBLGuildTacticsWanted?$AA@	; `string'
PUBLIC	??_C@_0BG@MBMBFJIH@CTBLMonthPvPointTable?$AA@	; `string'
PUBLIC	??_C@_0BF@OEFDDMHH@CTBLMonthPvPointChar?$AA@	; `string'
PUBLIC	??_C@_0BB@GBJJHOCB@CTBLPvPointTable?$AA@	; `string'
PUBLIC	??_C@_0M@GFPDNAOE@CTBLStopMap?$AA@		; `string'
PUBLIC	??_C@_0BA@IHFKOAID@CTBLProtectChar?$AA@		; `string'
PUBLIC	??_C@_0BA@EJOCOGDN@CTBLDeleteLevel?$AA@		; `string'
PUBLIC	??_C@_0BF@OFNOMJPO@CTBLEventQuarterList?$AA@	; `string'
PUBLIC	??_C@_0P@OFBOJDHF@CTBLTournament?$AA@		; `string'
PUBLIC	??_C@_0BH@HPLHLCBE@CTBLTournamentSchedule?$AA@	; `string'
PUBLIC	??_C@_0BA@KCDCDILN@CTBLGetCharInfo?$AA@		; `string'
PUBLIC	??_C@_0BF@KAFJCLAG@CTBLTournamentReward?$AA@	; `string'
PUBLIC	??_C@_0BF@GPDFHGJH@CTBLTournamentPlayer?$AA@	; `string'
PUBLIC	??_C@_0BE@IMHJOJNN@CTBLFirstGradeGroup?$AA@	; `string'
PUBLIC	??_C@_0BK@MHEGHOKH@CTBLTournamentCurrentStep?$AA@ ; `string'
PUBLIC	??_C@_0BC@BOLHCPBB@CTBLTnmtEventTime?$AA@	; `string'
PUBLIC	??_C@_0BG@EELCEGBI@CTBLTnmtEventSchedule?$AA@	; `string'
PUBLIC	??_C@_0BE@IHJDHLHP@CTBLTournamentEvent?$AA@	; `string'
PUBLIC	??_C@_0BE@BPMMPPFG@CTBLTnmtEventReward?$AA@	; `string'
PUBLIC	??_C@_0O@JGGEIMGE@CTBLTotalRank?$AA@		; `string'
PUBLIC	??_C@_0O@ONDPKNK@CTBLMonthRank?$AA@		; `string'
PUBLIC	??_C@_0M@CGFJGBED@CTBLRPSGame?$AA@		; `string'
PUBLIC	??_C@_0BC@KABLMCGH@CTBLRPSGameRecord?$AA@	; `string'
PUBLIC	??_C@_0P@HHFFLCPK@CSPGuildUpdate?$AA@		; `string'
PUBLIC	??_C@_0BC@HCBLBPOO@CSPGuildEstablish?$AA@	; `string'
PUBLIC	??_C@_0P@JGIBFEEC@CSPGuildDisorg?$AA@		; `string'
PUBLIC	??_C@_0P@FKPFGKDO@CSPGuildDelete?$AA@		; `string'
PUBLIC	??_C@_0BC@POIFDAAP@CSPGuildMemberAdd?$AA@	; `string'
PUBLIC	??_C@_0O@JOONNEKA@CSPGuildLeave?$AA@		; `string'
PUBLIC	??_C@_0N@EJIFPHNK@CSPGuildDuty?$AA@		; `string'
PUBLIC	??_C@_0N@HCOMIBIL@CSPGuildPeer?$AA@		; `string'
PUBLIC	??_C@_0BA@EBLAFDLB@CSPGuildKickout?$AA@		; `string'
PUBLIC	??_C@_0BA@OIJCLCPF@CSPFriendInsert?$AA@		; `string'
PUBLIC	??_C@_0P@EIOEANNK@CSPFriendErase?$AA@		; `string'
PUBLIC	??_C@_0BD@FNGBOGEE@CSPFriendGroupMake?$AA@	; `string'
PUBLIC	??_C@_0BF@CKCHBEJG@CSPFriendGroupDelete?$AA@	; `string'
PUBLIC	??_C@_0BF@GCOPGHFP@CSPFriendGroupChange?$AA@	; `string'
PUBLIC	??_C@_0BD@BOEMOACG@CSPFriendGroupName?$AA@	; `string'
PUBLIC	??_C@_0BD@DFHELEIA@CSPProtectedSearch?$AA@	; `string'
PUBLIC	??_C@_0P@EOMPGPJC@CSPLoadService?$AA@		; `string'
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T148863 DD	0ffffffffH
	DD	FLAT:$L148419
	DD	0ffffffffH
	DD	FLAT:$L148421
	DD	0ffffffffH
	DD	FLAT:$L148423
	DD	0ffffffffH
	DD	FLAT:$L148425
	DD	0ffffffffH
	DD	FLAT:$L148427
	DD	0ffffffffH
	DD	FLAT:$L148429
	DD	0ffffffffH
	DD	FLAT:$L148431
	DD	0ffffffffH
	DD	FLAT:$L148433
	DD	0ffffffffH
	DD	FLAT:$L148435
	DD	0ffffffffH
	DD	FLAT:$L148437
	DD	0ffffffffH
	DD	FLAT:$L148439
	DD	0ffffffffH
	DD	FLAT:$L148441
	DD	0ffffffffH
	DD	FLAT:$L148443
	DD	0ffffffffH
	DD	FLAT:$L148445
	DD	0ffffffffH
	DD	FLAT:$L148447
	DD	0ffffffffH
	DD	FLAT:$L148449
	DD	0ffffffffH
	DD	FLAT:$L148451
	DD	0ffffffffH
	DD	FLAT:$L148453
	DD	0ffffffffH
	DD	FLAT:$L148455
	DD	0ffffffffH
	DD	FLAT:$L148457
	DD	0ffffffffH
	DD	FLAT:$L148459
	DD	0ffffffffH
	DD	FLAT:$L148461
	DD	0ffffffffH
	DD	FLAT:$L148463
	DD	0ffffffffH
	DD	FLAT:$L148465
	DD	0ffffffffH
	DD	FLAT:$L148467
	DD	0ffffffffH
	DD	FLAT:$L148469
	DD	0ffffffffH
	DD	FLAT:$L148471
	DD	0ffffffffH
	DD	FLAT:$L148473
	DD	0ffffffffH
	DD	FLAT:$L148475
	DD	0ffffffffH
	DD	FLAT:$L148477
	DD	0ffffffffH
	DD	FLAT:$L148479
	DD	0ffffffffH
	DD	FLAT:$L148481
	DD	0ffffffffH
	DD	FLAT:$L148483
	DD	0ffffffffH
	DD	FLAT:$L148485
	DD	0ffffffffH
	DD	FLAT:$L148487
	DD	0ffffffffH
	DD	FLAT:$L148489
	DD	0ffffffffH
	DD	FLAT:$L148491
	DD	0ffffffffH
	DD	FLAT:$L148493
	DD	0ffffffffH
	DD	FLAT:$L148495
	DD	0ffffffffH
	DD	FLAT:$L148497
	DD	0ffffffffH
	DD	FLAT:$L148499
	DD	0ffffffffH
	DD	FLAT:$L148501
	DD	0ffffffffH
	DD	FLAT:$L148503
	DD	0ffffffffH
	DD	FLAT:$L148505
	DD	0ffffffffH
	DD	FLAT:$L148507
	DD	0ffffffffH
	DD	FLAT:$L148509
	DD	0ffffffffH
	DD	FLAT:$L148511
	DD	0ffffffffH
	DD	FLAT:$L148513
	DD	0ffffffffH
	DD	FLAT:$L148515
	DD	0ffffffffH
	DD	FLAT:$L148517
	DD	0ffffffffH
	DD	FLAT:$L148519
	DD	0ffffffffH
	DD	FLAT:$L148521
	DD	0ffffffffH
	DD	FLAT:$L148523
	DD	0ffffffffH
	DD	FLAT:$L148525
	DD	0ffffffffH
	DD	FLAT:$L148527
	DD	0ffffffffH
	DD	FLAT:$L148529
	DD	0ffffffffH
	DD	FLAT:$L148531
	DD	0ffffffffH
	DD	FLAT:$L148533
	DD	0ffffffffH
	DD	FLAT:$L148535
	DD	0ffffffffH
	DD	FLAT:$L148537
	DD	0ffffffffH
	DD	FLAT:$L148539
	DD	0ffffffffH
	DD	FLAT:$L148541
	DD	0ffffffffH
	DD	FLAT:$L148543
	DD	0ffffffffH
	DD	FLAT:$L148545
	DD	0ffffffffH
	DD	FLAT:$L148547
	DD	0ffffffffH
	DD	FLAT:$L148549
	DD	0ffffffffH
	DD	FLAT:$L148551
	DD	0ffffffffH
	DD	FLAT:$L148553
	DD	0ffffffffH
	DD	FLAT:$L148555
	DD	0ffffffffH
	DD	FLAT:$L148557
	DD	0ffffffffH
	DD	FLAT:$L148559
	DD	0ffffffffH
	DD	FLAT:$L148561
	DD	0ffffffffH
	DD	FLAT:$L148563
	DD	0ffffffffH
	DD	FLAT:$L148565
	DD	0ffffffffH
	DD	FLAT:$L148567
	DD	0ffffffffH
	DD	FLAT:$L148569
	DD	0ffffffffH
	DD	FLAT:$L148571
	DD	0ffffffffH
	DD	FLAT:$L148573
	DD	0ffffffffH
	DD	FLAT:$L148575
	DD	0ffffffffH
	DD	FLAT:$L148577
	DD	0ffffffffH
	DD	FLAT:$L148579
	DD	0ffffffffH
	DD	FLAT:$L148581
	DD	0ffffffffH
	DD	FLAT:$L148583
	DD	0ffffffffH
	DD	FLAT:$L148585
	DD	0ffffffffH
	DD	FLAT:$L148587
	DD	0ffffffffH
	DD	FLAT:$L148589
	DD	0ffffffffH
	DD	FLAT:$L148591
	DD	0ffffffffH
	DD	FLAT:$L148593
	DD	0ffffffffH
	DD	FLAT:$L148595
	DD	0ffffffffH
	DD	FLAT:$L148597
	DD	0ffffffffH
	DD	FLAT:$L148599
	DD	0ffffffffH
	DD	FLAT:$L148601
	DD	0ffffffffH
	DD	FLAT:$L148603
	DD	0ffffffffH
	DD	FLAT:$L148605
	DD	0ffffffffH
	DD	FLAT:$L148607
	DD	0ffffffffH
	DD	FLAT:$L148609
	DD	0ffffffffH
	DD	FLAT:$L148611
	DD	0ffffffffH
	DD	FLAT:$L148613
	DD	0ffffffffH
	DD	FLAT:$L148615
	DD	0ffffffffH
	DD	FLAT:$L148617
	DD	0ffffffffH
	DD	FLAT:$L148619
	DD	0ffffffffH
	DD	FLAT:$L148621
	DD	0ffffffffH
	DD	FLAT:$L148623
	DD	0ffffffffH
	DD	FLAT:$L148625
	DD	0ffffffffH
	DD	FLAT:$L148627
	DD	0ffffffffH
	DD	FLAT:$L148629
	DD	0ffffffffH
	DD	FLAT:$L148631
	DD	0ffffffffH
	DD	FLAT:$L148633
	DD	0ffffffffH
	DD	FLAT:$L148635
	DD	0ffffffffH
	DD	FLAT:$L148637
	DD	0ffffffffH
	DD	FLAT:$L148639
	DD	0ffffffffH
	DD	FLAT:$L148641
	DD	0ffffffffH
	DD	FLAT:$L148643
	DD	0ffffffffH
	DD	FLAT:$L148645
$T148860 DD	019930520H
	DD	072H
	DD	FLAT:$T148863
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0P@HNOJALKC@CTBLGuildChart?$AA@
CONST	SEGMENT
??_C@_0P@HNOJALKC@CTBLGuildChart?$AA@ DB 'CTBLGuildChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09ILEIJAMI@CTBLGuild?$AA@
CONST	SEGMENT
??_C@_09ILEIJAMI@CTBLGuild?$AA@ DB 'CTBLGuild', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FKMKEJMM@CTBLGuildArticle?$AA@
CONST	SEGMENT
??_C@_0BB@FKMKEJMM@CTBLGuildArticle?$AA@ DB 'CTBLGuildArticle', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@CDNBPAGO@CTBLGuildItem?$AA@
CONST	SEGMENT
??_C@_0O@CDNBPAGO@CTBLGuildItem?$AA@ DB 'CTBLGuildItem', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EAIJAFAN@CTBLGuildVolunteer?$AA@
CONST	SEGMENT
??_C@_0BD@EAIJAFAN@CTBLGuildVolunteer?$AA@ DB 'CTBLGuildVolunteer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EBAACLOB@CTBLGuildMember?$AA@
CONST	SEGMENT
??_C@_0BA@EBAACLOB@CTBLGuildMember?$AA@ DB 'CTBLGuildMember', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MGHNIDEO@CTBLGuildTactics?$AA@
CONST	SEGMENT
??_C@_0BB@MGHNIDEO@CTBLGuildTactics?$AA@ DB 'CTBLGuildTactics', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NKCOCKMP@CTBLGuildRelation?$AA@
CONST	SEGMENT
??_C@_0BC@NKCOCKMP@CTBLGuildRelation?$AA@ DB 'CTBLGuildRelation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FPEIFNOB@CTBLFriend?$AA@
CONST	SEGMENT
??_C@_0L@FPEIFNOB@CTBLFriend?$AA@ DB 'CTBLFriend', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@BAEFACHF@CTBLFriendTarget?$AA@
CONST	SEGMENT
??_C@_0BB@BAEFACHF@CTBLFriendTarget?$AA@ DB 'CTBLFriendTarget', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@JDAFODJ@CTBLFriendGroupTable?$AA@
CONST	SEGMENT
??_C@_0BF@JDAFODJ@CTBLFriendGroupTable?$AA@ DB 'CTBLFriendGroupTable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@OPCLOBJG@CTBLSoulmate?$AA@
CONST	SEGMENT
??_C@_0N@OPCLOBJG@CTBLSoulmate?$AA@ DB 'CTBLSoulmate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@BIANAOEM@CTBLMySoulmate?$AA@
CONST	SEGMENT
??_C@_0P@BIANAOEM@CTBLMySoulmate?$AA@ DB 'CTBLMySoulmate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DCCCNCDJ@CTBLOperatorChart?$AA@
CONST	SEGMENT
??_C@_0BC@DCCCNCDJ@CTBLOperatorChart?$AA@ DB 'CTBLOperatorChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CDBIMFOD@CTBLEventQuarterChart?$AA@
CONST	SEGMENT
??_C@_0BG@CDBIMFOD@CTBLEventQuarterChart?$AA@ DB 'CTBLEventQuarterChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LKOCLMBF@CTBLGuildLoad?$AA@
CONST	SEGMENT
??_C@_0O@LKOCLMBF@CTBLGuildLoad?$AA@ DB 'CTBLGuildLoad', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BAHNCKAE@CTBLBattleTimeChart?$AA@
CONST	SEGMENT
??_C@_0BE@BAHNCKAE@CTBLBattleTimeChart?$AA@ DB 'CTBLBattleTimeChart', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@LMFKOODM@CTBLSvrMsg?$AA@
CONST	SEGMENT
??_C@_0L@LMFKOODM@CTBLSvrMsg?$AA@ DB 'CTBLSvrMsg', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@CAJJGKHC@CTBLItemFind?$AA@
CONST	SEGMENT
??_C@_0N@CAJJGKHC@CTBLItemFind?$AA@ DB 'CTBLItemFind', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HIKOINBC@CTBLGuildPvPointReward?$AA@
CONST	SEGMENT
??_C@_0BH@HIKOINBC@CTBLGuildPvPointReward?$AA@ DB 'CTBLGuildPvPointReward'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EHMHJLFH@CTBLGuildPvPRecord?$AA@
CONST	SEGMENT
??_C@_0BD@EHMHJLFH@CTBLGuildPvPRecord?$AA@ DB 'CTBLGuildPvPRecord', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@KMMBIDKP@CTBLCastleApplicant?$AA@
CONST	SEGMENT
??_C@_0BE@KMMBIDKP@CTBLCastleApplicant?$AA@ DB 'CTBLCastleApplicant', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DHHFGNDD@CTBLGuildWanted?$AA@
CONST	SEGMENT
??_C@_0BA@DHHFGNDD@CTBLGuildWanted?$AA@ DB 'CTBLGuildWanted', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@GHGLGBKE@CTBLGuildTacticsWanted?$AA@
CONST	SEGMENT
??_C@_0BH@GHGLGBKE@CTBLGuildTacticsWanted?$AA@ DB 'CTBLGuildTacticsWanted'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MBMBFJIH@CTBLMonthPvPointTable?$AA@
CONST	SEGMENT
??_C@_0BG@MBMBFJIH@CTBLMonthPvPointTable?$AA@ DB 'CTBLMonthPvPointTable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OEFDDMHH@CTBLMonthPvPointChar?$AA@
CONST	SEGMENT
??_C@_0BF@OEFDDMHH@CTBLMonthPvPointChar?$AA@ DB 'CTBLMonthPvPointChar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GBJJHOCB@CTBLPvPointTable?$AA@
CONST	SEGMENT
??_C@_0BB@GBJJHOCB@CTBLPvPointTable?$AA@ DB 'CTBLPvPointTable', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GFPDNAOE@CTBLStopMap?$AA@
CONST	SEGMENT
??_C@_0M@GFPDNAOE@CTBLStopMap?$AA@ DB 'CTBLStopMap', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IHFKOAID@CTBLProtectChar?$AA@
CONST	SEGMENT
??_C@_0BA@IHFKOAID@CTBLProtectChar?$AA@ DB 'CTBLProtectChar', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EJOCOGDN@CTBLDeleteLevel?$AA@
CONST	SEGMENT
??_C@_0BA@EJOCOGDN@CTBLDeleteLevel?$AA@ DB 'CTBLDeleteLevel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@OFNOMJPO@CTBLEventQuarterList?$AA@
CONST	SEGMENT
??_C@_0BF@OFNOMJPO@CTBLEventQuarterList?$AA@ DB 'CTBLEventQuarterList', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OFBOJDHF@CTBLTournament?$AA@
CONST	SEGMENT
??_C@_0P@OFBOJDHF@CTBLTournament?$AA@ DB 'CTBLTournament', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@HPLHLCBE@CTBLTournamentSchedule?$AA@
CONST	SEGMENT
??_C@_0BH@HPLHLCBE@CTBLTournamentSchedule?$AA@ DB 'CTBLTournamentSchedule'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KCDCDILN@CTBLGetCharInfo?$AA@
CONST	SEGMENT
??_C@_0BA@KCDCDILN@CTBLGetCharInfo?$AA@ DB 'CTBLGetCharInfo', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KAFJCLAG@CTBLTournamentReward?$AA@
CONST	SEGMENT
??_C@_0BF@KAFJCLAG@CTBLTournamentReward?$AA@ DB 'CTBLTournamentReward', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GPDFHGJH@CTBLTournamentPlayer?$AA@
CONST	SEGMENT
??_C@_0BF@GPDFHGJH@CTBLTournamentPlayer?$AA@ DB 'CTBLTournamentPlayer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IMHJOJNN@CTBLFirstGradeGroup?$AA@
CONST	SEGMENT
??_C@_0BE@IMHJOJNN@CTBLFirstGradeGroup?$AA@ DB 'CTBLFirstGradeGroup', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@MHEGHOKH@CTBLTournamentCurrentStep?$AA@
CONST	SEGMENT
??_C@_0BK@MHEGHOKH@CTBLTournamentCurrentStep?$AA@ DB 'CTBLTournamentCurre'
	DB	'ntStep', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BOLHCPBB@CTBLTnmtEventTime?$AA@
CONST	SEGMENT
??_C@_0BC@BOLHCPBB@CTBLTnmtEventTime?$AA@ DB 'CTBLTnmtEventTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EELCEGBI@CTBLTnmtEventSchedule?$AA@
CONST	SEGMENT
??_C@_0BG@EELCEGBI@CTBLTnmtEventSchedule?$AA@ DB 'CTBLTnmtEventSchedule', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@IHJDHLHP@CTBLTournamentEvent?$AA@
CONST	SEGMENT
??_C@_0BE@IHJDHLHP@CTBLTournamentEvent?$AA@ DB 'CTBLTournamentEvent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@BPMMPPFG@CTBLTnmtEventReward?$AA@
CONST	SEGMENT
??_C@_0BE@BPMMPPFG@CTBLTnmtEventReward?$AA@ DB 'CTBLTnmtEventReward', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JGGEIMGE@CTBLTotalRank?$AA@
CONST	SEGMENT
??_C@_0O@JGGEIMGE@CTBLTotalRank?$AA@ DB 'CTBLTotalRank', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ONDPKNK@CTBLMonthRank?$AA@
CONST	SEGMENT
??_C@_0O@ONDPKNK@CTBLMonthRank?$AA@ DB 'CTBLMonthRank', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CGFJGBED@CTBLRPSGame?$AA@
CONST	SEGMENT
??_C@_0M@CGFJGBED@CTBLRPSGame?$AA@ DB 'CTBLRPSGame', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KABLMCGH@CTBLRPSGameRecord?$AA@
CONST	SEGMENT
??_C@_0BC@KABLMCGH@CTBLRPSGameRecord?$AA@ DB 'CTBLRPSGameRecord', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@HHFFLCPK@CSPGuildUpdate?$AA@
CONST	SEGMENT
??_C@_0P@HHFFLCPK@CSPGuildUpdate?$AA@ DB 'CSPGuildUpdate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@HCBLBPOO@CSPGuildEstablish?$AA@
CONST	SEGMENT
??_C@_0BC@HCBLBPOO@CSPGuildEstablish?$AA@ DB 'CSPGuildEstablish', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JGIBFEEC@CSPGuildDisorg?$AA@
CONST	SEGMENT
??_C@_0P@JGIBFEEC@CSPGuildDisorg?$AA@ DB 'CSPGuildDisorg', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FKPFGKDO@CSPGuildDelete?$AA@
CONST	SEGMENT
??_C@_0P@FKPFGKDO@CSPGuildDelete?$AA@ DB 'CSPGuildDelete', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@POIFDAAP@CSPGuildMemberAdd?$AA@
CONST	SEGMENT
??_C@_0BC@POIFDAAP@CSPGuildMemberAdd?$AA@ DB 'CSPGuildMemberAdd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JOONNEKA@CSPGuildLeave?$AA@
CONST	SEGMENT
??_C@_0O@JOONNEKA@CSPGuildLeave?$AA@ DB 'CSPGuildLeave', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@EJIFPHNK@CSPGuildDuty?$AA@
CONST	SEGMENT
??_C@_0N@EJIFPHNK@CSPGuildDuty?$AA@ DB 'CSPGuildDuty', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HCOMIBIL@CSPGuildPeer?$AA@
CONST	SEGMENT
??_C@_0N@HCOMIBIL@CSPGuildPeer?$AA@ DB 'CSPGuildPeer', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EBLAFDLB@CSPGuildKickout?$AA@
CONST	SEGMENT
??_C@_0BA@EBLAFDLB@CSPGuildKickout?$AA@ DB 'CSPGuildKickout', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OIJCLCPF@CSPFriendInsert?$AA@
CONST	SEGMENT
??_C@_0BA@OIJCLCPF@CSPFriendInsert?$AA@ DB 'CSPFriendInsert', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EIOEANNK@CSPFriendErase?$AA@
CONST	SEGMENT
??_C@_0P@EIOEANNK@CSPFriendErase?$AA@ DB 'CSPFriendErase', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FNGBOGEE@CSPFriendGroupMake?$AA@
CONST	SEGMENT
??_C@_0BD@FNGBOGEE@CSPFriendGroupMake?$AA@ DB 'CSPFriendGroupMake', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CKCHBEJG@CSPFriendGroupDelete?$AA@
CONST	SEGMENT
??_C@_0BF@CKCHBEJG@CSPFriendGroupDelete?$AA@ DB 'CSPFriendGroupDelete', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@GCOPGHFP@CSPFriendGroupChange?$AA@
CONST	SEGMENT
??_C@_0BF@GCOPGHFP@CSPFriendGroupChange?$AA@ DB 'CSPFriendGroupChange', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BOEMOACG@CSPFriendGroupName?$AA@
CONST	SEGMENT
??_C@_0BD@BOEMOACG@CSPFriendGroupName?$AA@ DB 'CSPFriendGroupName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@DFHELEIA@CSPProtectedSearch?$AA@
CONST	SEGMENT
??_C@_0BD@DFHELEIA@CSPProtectedSearch?$AA@ DB 'CSPProtectedSearch', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EOMPGPJC@CSPLoadService?$AA@
CONST	SEGMENT
??_C@_0P@EOMPGPJC@CSPLoadService?$AA@ DB 'CSPLoadService', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PKBAFGDB@CSPGuildArticleAdd?$AA@
CONST	SEGMENT
??_C@_0BD@PKBAFGDB@CSPGuildArticleAdd?$AA@ DB 'CSPGuildArticleAdd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ENFEGDM@CSPGuildArticleDel?$AA@
CONST	SEGMENT
??_C@_0BD@ENFEGDM@CSPGuildArticleDel?$AA@ DB 'CSPGuildArticleDel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@BHMBFCLD@CSPGuildArticleUpdate?$AA@
CONST	SEGMENT
??_C@_0BG@BHMBFCLD@CSPGuildArticleUpdate?$AA@ DB 'CSPGuildArticleUpdate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BJLOKBNA@CSPGuildFame?$AA@
CONST	SEGMENT
??_C@_0N@BJLOKBNA@CSPGuildFame?$AA@ DB 'CSPGuildFame', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@JMIBBNOG@CSPGuildLevel?$AA@
CONST	SEGMENT
??_C@_0O@JMIBBNOG@CSPGuildLevel?$AA@ DB 'CSPGuildLevel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GJCFCJMB@CSPGuildMaxCabinet?$AA@
CONST	SEGMENT
??_C@_0BD@GJCFCJMB@CSPGuildMaxCabinet?$AA@ DB 'CSPGuildMaxCabinet', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KLNPGACF@CSPGuildContribution?$AA@
CONST	SEGMENT
??_C@_0BF@KLNPGACF@CSPGuildContribution?$AA@ DB 'CSPGuildContribution', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@MCBOHLID@CSPGuildVolunteerAdd?$AA@
CONST	SEGMENT
??_C@_0BF@MCBOHLID@CSPGuildVolunteerAdd?$AA@ DB 'CSPGuildVolunteerAdd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@DMNLGLIO@CSPGuildVolunteerDel?$AA@
CONST	SEGMENT
??_C@_0BF@DMNLGLIO@CSPGuildVolunteerDel?$AA@ DB 'CSPGuildVolunteerDel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HMLBIAKI@CSPGuildTacticsAdd?$AA@
CONST	SEGMENT
??_C@_0BD@HMLBIAKI@CSPGuildTacticsAdd?$AA@ DB 'CSPGuildTacticsAdd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@ICHEJAKF@CSPGuildTacticsDel?$AA@
CONST	SEGMENT
??_C@_0BD@ICHEJAKF@CSPGuildTacticsDel?$AA@ DB 'CSPGuildTacticsDel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CBFOJEBG@CSPSoulmateReg?$AA@
CONST	SEGMENT
??_C@_0P@CBFOJEBG@CSPSoulmateReg?$AA@ DB 'CSPSoulmateReg', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@MLOIEHBC@CSPSoulmateEnd?$AA@
CONST	SEGMENT
??_C@_0P@MLOIEHBC@CSPSoulmateEnd?$AA@ DB 'CSPSoulmateEnd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LHNIEFJO@CSPSoulmateDel?$AA@
CONST	SEGMENT
??_C@_0P@LHNIEFJO@CSPSoulmateDel?$AA@ DB 'CSPSoulmateDel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@JPPBOFPA@CSPGetReservedPost?$AA@
CONST	SEGMENT
??_C@_0BD@JPPBOFPA@CSPGetReservedPost?$AA@ DB 'CSPGetReservedPost', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NFPLBBEB@CSPClearMapCurrentUser?$AA@
CONST	SEGMENT
??_C@_0BH@NFPLBBEB@CSPClearMapCurrentUser?$AA@ DB 'CSPClearMapCurrentUser'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KEAKLAPB@CSPGetNation?$AA@
CONST	SEGMENT
??_C@_0N@KEAKLAPB@CSPGetNation?$AA@ DB 'CSPGetNation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HEBAMJJB@CSPItemStateChange?$AA@
CONST	SEGMENT
??_C@_0BD@HEBAMJJB@CSPItemStateChange?$AA@ DB 'CSPItemStateChange', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@LOKJEBEN@CSPSaveGuildPvPoint?$AA@
CONST	SEGMENT
??_C@_0BE@LOKJEBEN@CSPSaveGuildPvPoint?$AA@ DB 'CSPSaveGuildPvPoint', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@NDBGPMLM@CSPSaveGuildPvPRecord?$AA@
CONST	SEGMENT
??_C@_0BG@NDBGPMLM@CSPSaveGuildPvPRecord?$AA@ DB 'CSPSaveGuildPvPRecord', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@MDGHDNAF@CSPSaveGuildPointReward?$AA@
CONST	SEGMENT
??_C@_0BI@MDGHDNAF@CSPSaveGuildPointReward?$AA@ DB 'CSPSaveGuildPointRewa'
	DB	'rd', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@JLINGJDI@CSPSaveCastleApplicant?$AA@
CONST	SEGMENT
??_C@_0BH@JLINGJDI@CSPSaveCastleApplicant?$AA@ DB 'CSPSaveCastleApplicant'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@EAKFNGNN@CSPGetRecallID?$AA@
CONST	SEGMENT
??_C@_0P@EAKFNGNN@CSPGetRecallID?$AA@ DB 'CSPGetRecallID', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CIPMMDCL@CSPCashItemSale?$AA@
CONST	SEGMENT
??_C@_0BA@CIPMMDCL@CSPCashItemSale?$AA@ DB 'CSPCashItemSale', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PGMELMBH@CSPGuildWantedAdd?$AA@
CONST	SEGMENT
??_C@_0BC@PGMELMBH@CSPGuildWantedAdd?$AA@ DB 'CSPGuildWantedAdd', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IABKMBK@CSPGuildWantedDel?$AA@
CONST	SEGMENT
??_C@_0BC@IABKMBK@CSPGuildWantedDel?$AA@ DB 'CSPGuildWantedDel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@MCAHKKJ@CSPGuildTacticsWantedAdd?$AA@
CONST	SEGMENT
??_C@_0BJ@MCAHKKJ@CSPGuildTacticsWantedAdd?$AA@ DB 'CSPGuildTacticsWanted'
	DB	'Add', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@PCOFGKKE@CSPGuildTacticsWantedDel?$AA@
CONST	SEGMENT
??_C@_0BJ@PCOFGKKE@CSPGuildTacticsWantedDel?$AA@ DB 'CSPGuildTacticsWante'
	DB	'dDel', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IBCCCKEH@CSPGuildVolunteering?$AA@
CONST	SEGMENT
??_C@_0BF@IBCCCKEH@CSPGuildVolunteering?$AA@ DB 'CSPGuildVolunteering', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@FMPMPEAC@CSPGuildVolunteeringDel?$AA@
CONST	SEGMENT
??_C@_0BI@FMPMPEAC@CSPGuildVolunteeringDel?$AA@ DB 'CSPGuildVolunteeringD'
	DB	'el', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@JPBEDNLG@CSPSaveTacticsGainPoint?$AA@
CONST	SEGMENT
??_C@_0BI@JPBEDNLG@CSPSaveTacticsGainPoint?$AA@ DB 'CSPSaveTacticsGainPoi'
	DB	'nt', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@OBEJAKAN@CSPSaveMonthRank?$AA@
CONST	SEGMENT
??_C@_0BB@OBEJAKAN@CSPSaveMonthRank?$AA@ DB 'CSPSaveMonthRank', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NJGPKFKL@CSPInitMonthPvPoint?$AA@
CONST	SEGMENT
??_C@_0BE@NJGPKFKL@CSPInitMonthPvPoint?$AA@ DB 'CSPInitMonthPvPoint', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@GDEIFAEJ@CSPInitMonthRank?$AA@
CONST	SEGMENT
??_C@_0BB@GDEIFAEJ@CSPInitMonthRank?$AA@ DB 'CSPInitMonthRank', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MCCLKMPC@CSPEventQuarterUpdate?$AA@
CONST	SEGMENT
??_C@_0BG@MCCLKMPC@CSPEventQuarterUpdate?$AA@ DB 'CSPEventQuarterUpdate', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DAIDJBOD@CSPGetItemName?$AA@
CONST	SEGMENT
??_C@_0P@DAIDJBOD@CSPGetItemName?$AA@ DB 'CSPGetItemName', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KNNLENBO@CSPTournamentPayback?$AA@
CONST	SEGMENT
??_C@_0BF@KNNLENBO@CSPTournamentPayback?$AA@ DB 'CSPTournamentPayback', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@OAIONDMH@CSPTournamentResult?$AA@
CONST	SEGMENT
??_C@_0BE@OAIONDMH@CSPTournamentResult?$AA@ DB 'CSPTournamentResult', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BHOHNFON@CSPTournamentApply?$AA@
CONST	SEGMENT
??_C@_0BD@BHOHNFON@CSPTournamentApply?$AA@ DB 'CSPTournamentApply', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HDNEODFA@CSPTournamentClear?$AA@
CONST	SEGMENT
??_C@_0BD@HDNEODFA@CSPTournamentClear?$AA@ DB 'CSPTournamentClear', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@HAFJKEPC@CSPTournamentStatus?$AA@
CONST	SEGMENT
??_C@_0BE@HAFJKEPC@CSPTournamentStatus?$AA@ DB 'CSPTournamentStatus', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JOFDMAHB@CSPTnmtEventTime?$AA@
CONST	SEGMENT
??_C@_0BB@JOFDMAHB@CSPTnmtEventTime?$AA@ DB 'CSPTnmtEventTime', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KIAJDEO@CSPTnmtEventSchedule?$AA@
CONST	SEGMENT
??_C@_0BF@KIAJDEO@CSPTnmtEventSchedule?$AA@ DB 'CSPTnmtEventSchedule', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EKJFNIGK@CSPTnmtEventDel?$AA@
CONST	SEGMENT
??_C@_0BA@EKJFNIGK@CSPTnmtEventDel?$AA@ DB 'CSPTnmtEventDel', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JHLDHABL@CSPTnmtEventEntry?$AA@
CONST	SEGMENT
??_C@_0BC@JHLDHABL@CSPTnmtEventEntry?$AA@ DB 'CSPTnmtEventEntry', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EKIEOLPM@CSPTnmtEventReward?$AA@
CONST	SEGMENT
??_C@_0BD@EKIEOLPM@CSPTnmtEventReward?$AA@ DB 'CSPTnmtEventReward', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DIEGLFL@CSPHelpMessage?$AA@
CONST	SEGMENT
??_C@_0P@DIEGLFL@CSPHelpMessage?$AA@ DB 'CSPHelpMessage', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@CAPPCNAH@CSPRPSGameRecord?$AA@
CONST	SEGMENT
??_C@_0BB@CAPPCNAH@CSPRPSGameRecord?$AA@ DB 'CSPRPSGameRecord', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CAGAKGIN@CSPGetLimitedLevel?$AA@
CONST	SEGMENT
??_C@_0BD@CAGAKGIN@CSPGetLimitedLevel?$AA@ DB 'CSPGetLimitedLevel', 00H ; `string'
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dbaccess.cpp
CONST	ENDS
;	COMDAT ?InitQueryTWorldSvr@@YAHPAVCSqlDatabase@@@Z
_TEXT	SEGMENT
$T148416 = -20						; size = 4
$T148411 = -20						; size = 4
$T148406 = -20						; size = 4
$T148401 = -20						; size = 4
$T148396 = -20						; size = 4
$T148391 = -20						; size = 4
$T148386 = -20						; size = 4
$T148381 = -20						; size = 4
$T148376 = -20						; size = 4
$T148371 = -20						; size = 4
$T148366 = -20						; size = 4
$T148361 = -20						; size = 4
$T148356 = -20						; size = 4
$T148351 = -20						; size = 4
$T148346 = -20						; size = 4
$T148341 = -20						; size = 4
$T148336 = -20						; size = 4
$T148331 = -20						; size = 4
$T148326 = -20						; size = 4
$T148321 = -20						; size = 4
$T148316 = -20						; size = 4
$T148311 = -20						; size = 4
$T148306 = -20						; size = 4
$T148301 = -20						; size = 4
$T148296 = -20						; size = 4
$T148291 = -20						; size = 4
$T148286 = -20						; size = 4
$T148281 = -20						; size = 4
$T148276 = -20						; size = 4
$T148271 = -20						; size = 4
$T148266 = -20						; size = 4
$T148261 = -20						; size = 4
$T148256 = -20						; size = 4
$T148251 = -20						; size = 4
$T148246 = -20						; size = 4
$T148241 = -20						; size = 4
$T148236 = -20						; size = 4
$T148231 = -20						; size = 4
$T148226 = -20						; size = 4
$T148221 = -20						; size = 4
$T148216 = -20						; size = 4
$T148211 = -20						; size = 4
$T148206 = -20						; size = 4
$T148201 = -20						; size = 4
$T148196 = -20						; size = 4
$T148191 = -20						; size = 4
$T148186 = -20						; size = 4
$T148181 = -20						; size = 4
$T148176 = -20						; size = 4
$T148171 = -20						; size = 4
$T148166 = -20						; size = 4
$T148161 = -20						; size = 4
$T148156 = -20						; size = 4
$T148151 = -20						; size = 4
$T148146 = -20						; size = 4
$T148141 = -20						; size = 4
$T148136 = -20						; size = 4
$T148131 = -20						; size = 4
$T148126 = -20						; size = 4
$T148121 = -20						; size = 4
$T148116 = -20						; size = 4
$T148111 = -20						; size = 4
$T148106 = -20						; size = 4
$T148101 = -20						; size = 4
$T148096 = -20						; size = 4
$T148091 = -20						; size = 4
$T148086 = -20						; size = 4
$T148081 = -20						; size = 4
$T148076 = -20						; size = 4
$T148071 = -20						; size = 4
$T148066 = -20						; size = 4
$T148061 = -20						; size = 4
$T148056 = -20						; size = 4
$T148051 = -20						; size = 4
$T148046 = -20						; size = 4
$T148041 = -20						; size = 4
$T148036 = -20						; size = 4
$T148031 = -20						; size = 4
$T148026 = -20						; size = 4
$T148021 = -20						; size = 4
$T148016 = -20						; size = 4
$T148011 = -20						; size = 4
$T148006 = -20						; size = 4
$T148001 = -20						; size = 4
$T147996 = -20						; size = 4
$T147991 = -20						; size = 4
$T147986 = -20						; size = 4
$T147981 = -20						; size = 4
$T147976 = -20						; size = 4
$T147971 = -20						; size = 4
$T147966 = -20						; size = 4
$T147961 = -20						; size = 4
$T147956 = -20						; size = 4
$T147951 = -20						; size = 4
$T147946 = -20						; size = 4
$T147941 = -20						; size = 4
$T147936 = -20						; size = 4
$T147931 = -20						; size = 4
$T147926 = -20						; size = 4
$T147921 = -20						; size = 4
$T147916 = -20						; size = 4
$T147911 = -20						; size = 4
$T147906 = -20						; size = 4
$T147901 = -20						; size = 4
$T147896 = -20						; size = 4
$T147891 = -20						; size = 4
$T147886 = -20						; size = 4
$T147881 = -20						; size = 4
$T147876 = -20						; size = 4
$T147871 = -20						; size = 4
$T147866 = -20						; size = 4
$T147861 = -20						; size = 4
$T147856 = -20						; size = 4
$T147850 = -20						; size = 4
$T148415 = -16						; size = 4
$T148410 = -16						; size = 4
$T148405 = -16						; size = 4
$T148400 = -16						; size = 4
$T148395 = -16						; size = 4
$T148390 = -16						; size = 4
$T148385 = -16						; size = 4
$T148380 = -16						; size = 4
$T148375 = -16						; size = 4
$T148370 = -16						; size = 4
$T148365 = -16						; size = 4
$T148360 = -16						; size = 4
$T148355 = -16						; size = 4
$T148350 = -16						; size = 4
$T148345 = -16						; size = 4
$T148340 = -16						; size = 4
$T148335 = -16						; size = 4
$T148330 = -16						; size = 4
$T148325 = -16						; size = 4
$T148320 = -16						; size = 4
$T148315 = -16						; size = 4
$T148310 = -16						; size = 4
$T148305 = -16						; size = 4
$T148300 = -16						; size = 4
$T148295 = -16						; size = 4
$T148290 = -16						; size = 4
$T148285 = -16						; size = 4
$T148280 = -16						; size = 4
$T148275 = -16						; size = 4
$T148270 = -16						; size = 4
$T148265 = -16						; size = 4
$T148260 = -16						; size = 4
$T148255 = -16						; size = 4
$T148250 = -16						; size = 4
$T148245 = -16						; size = 4
$T148240 = -16						; size = 4
$T148235 = -16						; size = 4
$T148230 = -16						; size = 4
$T148225 = -16						; size = 4
$T148220 = -16						; size = 4
$T148215 = -16						; size = 4
$T148210 = -16						; size = 4
$T148205 = -16						; size = 4
$T148200 = -16						; size = 4
$T148195 = -16						; size = 4
$T148190 = -16						; size = 4
$T148185 = -16						; size = 4
$T148180 = -16						; size = 4
$T148175 = -16						; size = 4
$T148170 = -16						; size = 4
$T148165 = -16						; size = 4
$T148160 = -16						; size = 4
$T148155 = -16						; size = 4
$T148150 = -16						; size = 4
$T148145 = -16						; size = 4
$T148140 = -16						; size = 4
$T148135 = -16						; size = 4
$T148130 = -16						; size = 4
$T148125 = -16						; size = 4
$T148120 = -16						; size = 4
$T148115 = -16						; size = 4
$T148110 = -16						; size = 4
$T148105 = -16						; size = 4
$T148100 = -16						; size = 4
$T148095 = -16						; size = 4
$T148090 = -16						; size = 4
$T148085 = -16						; size = 4
$T148080 = -16						; size = 4
$T148075 = -16						; size = 4
$T148070 = -16						; size = 4
$T148065 = -16						; size = 4
$T148060 = -16						; size = 4
$T148055 = -16						; size = 4
$T148050 = -16						; size = 4
$T148045 = -16						; size = 4
$T148040 = -16						; size = 4
$T148035 = -16						; size = 4
$T148030 = -16						; size = 4
$T148025 = -16						; size = 4
$T148020 = -16						; size = 4
$T148015 = -16						; size = 4
$T148010 = -16						; size = 4
$T148005 = -16						; size = 4
$T148000 = -16						; size = 4
$T147995 = -16						; size = 4
$T147990 = -16						; size = 4
$T147985 = -16						; size = 4
$T147980 = -16						; size = 4
$T147975 = -16						; size = 4
$T147970 = -16						; size = 4
$T147965 = -16						; size = 4
$T147960 = -16						; size = 4
$T147955 = -16						; size = 4
$T147950 = -16						; size = 4
$T147945 = -16						; size = 4
$T147940 = -16						; size = 4
$T147935 = -16						; size = 4
$T147930 = -16						; size = 4
$T147925 = -16						; size = 4
$T147920 = -16						; size = 4
$T147915 = -16						; size = 4
$T147910 = -16						; size = 4
$T147905 = -16						; size = 4
$T147900 = -16						; size = 4
$T147895 = -16						; size = 4
$T147890 = -16						; size = 4
$T147885 = -16						; size = 4
$T147880 = -16						; size = 4
$T147875 = -16						; size = 4
$T147870 = -16						; size = 4
$T147865 = -16						; size = 4
$T147860 = -16						; size = 4
$T147855 = -16						; size = 4
$T147851 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pdb$ = 8						; size = 4
?InitQueryTWorldSvr@@YAHPAVCSqlDatabase@@@Z PROC NEAR	; InitQueryTWorldSvr, COMDAT

; 3    : BEGIN_INIT_QUERY(TWorldSvr)

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?InitQueryTWorldSvr@@YAHPAVCSqlDatabase@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi

; 4    : 
; 5    : PREDEFINE_QUERY(CTBLGuildChart)

  0001c	68 44 0c 00 00	 push	 3140			; 00000c44H
  00021	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00026	8b f0		 mov	 esi, eax
  00028	83 c4 04	 add	 esp, 4
  0002b	89 74 24 10	 mov	 DWORD PTR $T147850[esp+36], esi
  0002f	8b 6c 24 28	 mov	 ebp, DWORD PTR _pdb$[esp+32]
  00033	33 db		 xor	 ebx, ebx
  00035	3b f3		 cmp	 esi, ebx
  00037	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  0003b	bf 0f 00 00 00	 mov	 edi, 15			; 0000000fH
  00040	74 28		 je	 SHORT $L147852
  00042	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00045	8b cc		 mov	 ecx, esp
  00047	89 64 24 30	 mov	 DWORD PTR $T147851[esp+64], esp
  0004b	6a 0e		 push	 14			; 0000000eH
  0004d	89 79 18	 mov	 DWORD PTR [ecx+24], edi
  00050	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  00053	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@HNOJALKC@CTBLGuildChart?$AA@
  00058	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  0005b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00060	55		 push	 ebp
  00061	8b ce		 mov	 ecx, esi
  00063	e8 00 00 00 00	 call	 ??0CTBLGuildChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildChart::CTBLGuildChart
  00068	eb 02		 jmp	 SHORT $L147853
$L147852:
  0006a	33 c0		 xor	 eax, eax
$L147853:
  0006c	3b c3		 cmp	 eax, ebx
  0006e	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00076	0f 84 dc 20 00
	00		 je	 $L148861

; 6    : PREDEFINE_QUERY(CTBLGuild)

  0007c	68 b4 0c 00 00	 push	 3252			; 00000cb4H
  00081	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00086	8b f0		 mov	 esi, eax
  00088	83 c4 04	 add	 esp, 4
  0008b	89 74 24 14	 mov	 DWORD PTR $T147855[esp+36], esi
  0008f	3b f3		 cmp	 esi, ebx
  00091	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 1
  00099	74 28		 je	 SHORT $L147857
  0009b	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0009e	8b cc		 mov	 ecx, esp
  000a0	89 64 24 2c	 mov	 DWORD PTR $T147856[esp+64], esp
  000a4	6a 09		 push	 9
  000a6	89 79 18	 mov	 DWORD PTR [ecx+24], edi
  000a9	89 59 14	 mov	 DWORD PTR [ecx+20], ebx
  000ac	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09ILEIJAMI@CTBLGuild?$AA@
  000b1	88 59 04	 mov	 BYTE PTR [ecx+4], bl
  000b4	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  000b9	55		 push	 ebp
  000ba	8b ce		 mov	 ecx, esi
  000bc	e8 00 00 00 00	 call	 ??0CTBLGuild@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuild::CTBLGuild
  000c1	eb 02		 jmp	 SHORT $L147858
$L147857:
  000c3	33 c0		 xor	 eax, eax
$L147858:
  000c5	3b c3		 cmp	 eax, ebx
  000c7	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  000cf	0f 84 83 20 00
	00		 je	 $L148861

; 7    : PREDEFINE_QUERY(CTBLGuildArticle)

  000d5	68 70 15 00 00	 push	 5488			; 00001570H
  000da	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000df	8b f0		 mov	 esi, eax
  000e1	83 c4 04	 add	 esp, 4
  000e4	89 74 24 14	 mov	 DWORD PTR $T147860[esp+36], esi
  000e8	3b f3		 cmp	 esi, ebx
  000ea	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 2
  000f2	74 1d		 je	 SHORT $L147862
  000f4	83 ec 1c	 sub	 esp, 28			; 0000001cH
  000f7	8b cc		 mov	 ecx, esp
  000f9	89 64 24 2c	 mov	 DWORD PTR $T147861[esp+64], esp
  000fd	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@FKMKEJMM@CTBLGuildArticle?$AA@
  00102	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00107	55		 push	 ebp
  00108	8b ce		 mov	 ecx, esi
  0010a	e8 00 00 00 00	 call	 ??0CTBLGuildArticle@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildArticle::CTBLGuildArticle
  0010f	eb 02		 jmp	 SHORT $L147863
$L147862:
  00111	33 c0		 xor	 eax, eax
$L147863:
  00113	3b c3		 cmp	 eax, ebx
  00115	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  0011d	0f 84 35 20 00
	00		 je	 $L148861

; 8    : PREDEFINE_QUERY(CTBLGuildItem)

  00123	68 a8 0c 00 00	 push	 3240			; 00000ca8H
  00128	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0012d	8b f0		 mov	 esi, eax
  0012f	83 c4 04	 add	 esp, 4
  00132	89 74 24 14	 mov	 DWORD PTR $T147865[esp+36], esi
  00136	3b f3		 cmp	 esi, ebx
  00138	c7 44 24 20 03
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 3
  00140	74 1d		 je	 SHORT $L147867
  00142	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00145	8b cc		 mov	 ecx, esp
  00147	89 64 24 2c	 mov	 DWORD PTR $T147866[esp+64], esp
  0014b	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@CDNBPAGO@CTBLGuildItem?$AA@
  00150	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00155	55		 push	 ebp
  00156	8b ce		 mov	 ecx, esi
  00158	e8 00 00 00 00	 call	 ??0CTBLGuildItem@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildItem::CTBLGuildItem
  0015d	eb 02		 jmp	 SHORT $L147868
$L147867:
  0015f	33 c0		 xor	 eax, eax
$L147868:
  00161	3b c3		 cmp	 eax, ebx
  00163	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  0016b	0f 84 e7 1f 00
	00		 je	 $L148861

; 9    : PREDEFINE_QUERY(CTBLGuildVolunteer)

  00171	68 70 0c 00 00	 push	 3184			; 00000c70H
  00176	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0017b	8b f0		 mov	 esi, eax
  0017d	83 c4 04	 add	 esp, 4
  00180	89 74 24 14	 mov	 DWORD PTR $T147870[esp+36], esi
  00184	3b f3		 cmp	 esi, ebx
  00186	c7 44 24 20 04
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 4
  0018e	74 1d		 je	 SHORT $L147872
  00190	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00193	8b cc		 mov	 ecx, esp
  00195	89 64 24 2c	 mov	 DWORD PTR $T147871[esp+64], esp
  00199	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@EAIJAFAN@CTBLGuildVolunteer?$AA@
  0019e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  001a3	55		 push	 ebp
  001a4	8b ce		 mov	 ecx, esi
  001a6	e8 00 00 00 00	 call	 ??0CTBLGuildVolunteer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildVolunteer::CTBLGuildVolunteer
  001ab	eb 02		 jmp	 SHORT $L147873
$L147872:
  001ad	33 c0		 xor	 eax, eax
$L147873:
  001af	3b c3		 cmp	 eax, ebx
  001b1	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  001b9	0f 84 99 1f 00
	00		 je	 $L148861

; 10   : PREDEFINE_QUERY(CTBLGuildMember)

  001bf	68 80 0c 00 00	 push	 3200			; 00000c80H
  001c4	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  001c9	8b f0		 mov	 esi, eax
  001cb	83 c4 04	 add	 esp, 4
  001ce	89 74 24 14	 mov	 DWORD PTR $T147875[esp+36], esi
  001d2	3b f3		 cmp	 esi, ebx
  001d4	c7 44 24 20 05
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 5
  001dc	74 1d		 je	 SHORT $L147877
  001de	83 ec 1c	 sub	 esp, 28			; 0000001cH
  001e1	8b cc		 mov	 ecx, esp
  001e3	89 64 24 2c	 mov	 DWORD PTR $T147876[esp+64], esp
  001e7	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@EBAACLOB@CTBLGuildMember?$AA@
  001ec	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  001f1	55		 push	 ebp
  001f2	8b ce		 mov	 ecx, esi
  001f4	e8 00 00 00 00	 call	 ??0CTBLGuildMember@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildMember::CTBLGuildMember
  001f9	eb 02		 jmp	 SHORT $L147878
$L147877:
  001fb	33 c0		 xor	 eax, eax
$L147878:
  001fd	3b c3		 cmp	 eax, ebx
  001ff	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00207	0f 84 4b 1f 00
	00		 je	 $L148861

; 11   : PREDEFINE_QUERY(CTBLGuildTactics)

  0020d	68 90 0c 00 00	 push	 3216			; 00000c90H
  00212	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00217	8b f0		 mov	 esi, eax
  00219	83 c4 04	 add	 esp, 4
  0021c	89 74 24 14	 mov	 DWORD PTR $T147880[esp+36], esi
  00220	3b f3		 cmp	 esi, ebx
  00222	c7 44 24 20 06
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 6
  0022a	74 1d		 je	 SHORT $L147882
  0022c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0022f	8b cc		 mov	 ecx, esp
  00231	89 64 24 2c	 mov	 DWORD PTR $T147881[esp+64], esp
  00235	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@MGHNIDEO@CTBLGuildTactics?$AA@
  0023a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0023f	55		 push	 ebp
  00240	8b ce		 mov	 ecx, esi
  00242	e8 00 00 00 00	 call	 ??0CTBLGuildTactics@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildTactics::CTBLGuildTactics
  00247	eb 02		 jmp	 SHORT $L147883
$L147882:
  00249	33 c0		 xor	 eax, eax
$L147883:
  0024b	3b c3		 cmp	 eax, ebx
  0024d	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00255	0f 84 fd 1e 00
	00		 je	 $L148861

; 12   : PREDEFINE_QUERY(CTBLGuildRelation)

  0025b	68 38 0c 00 00	 push	 3128			; 00000c38H
  00260	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00265	8b f0		 mov	 esi, eax
  00267	83 c4 04	 add	 esp, 4
  0026a	89 74 24 14	 mov	 DWORD PTR $T147885[esp+36], esi
  0026e	3b f3		 cmp	 esi, ebx
  00270	c7 44 24 20 07
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 7
  00278	74 1d		 je	 SHORT $L147887
  0027a	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0027d	8b cc		 mov	 ecx, esp
  0027f	89 64 24 2c	 mov	 DWORD PTR $T147886[esp+64], esp
  00283	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@NKCOCKMP@CTBLGuildRelation?$AA@
  00288	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0028d	55		 push	 ebp
  0028e	8b ce		 mov	 ecx, esi
  00290	e8 00 00 00 00	 call	 ??0CTBLGuildRelation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildRelation::CTBLGuildRelation
  00295	eb 02		 jmp	 SHORT $L147888
$L147887:
  00297	33 c0		 xor	 eax, eax
$L147888:
  00299	3b c3		 cmp	 eax, ebx
  0029b	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  002a3	0f 84 af 1e 00
	00		 je	 $L148861

; 13   : PREDEFINE_QUERY(CTBLFriend)

  002a9	68 6c 0c 00 00	 push	 3180			; 00000c6cH
  002ae	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  002b3	8b f0		 mov	 esi, eax
  002b5	83 c4 04	 add	 esp, 4
  002b8	89 74 24 14	 mov	 DWORD PTR $T147890[esp+36], esi
  002bc	3b f3		 cmp	 esi, ebx
  002be	c7 44 24 20 08
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 8
  002c6	74 1d		 je	 SHORT $L147892
  002c8	83 ec 1c	 sub	 esp, 28			; 0000001cH
  002cb	8b cc		 mov	 ecx, esp
  002cd	89 64 24 2c	 mov	 DWORD PTR $T147891[esp+64], esp
  002d1	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@FPEIFNOB@CTBLFriend?$AA@
  002d6	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  002db	55		 push	 ebp
  002dc	8b ce		 mov	 ecx, esi
  002de	e8 00 00 00 00	 call	 ??0CTBLFriend@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLFriend::CTBLFriend
  002e3	eb 02		 jmp	 SHORT $L147893
$L147892:
  002e5	33 c0		 xor	 eax, eax
$L147893:
  002e7	3b c3		 cmp	 eax, ebx
  002e9	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  002f1	0f 84 61 1e 00
	00		 je	 $L148861

; 14   : PREDEFINE_QUERY(CTBLFriendTarget)

  002f7	68 68 0c 00 00	 push	 3176			; 00000c68H
  002fc	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00301	8b f0		 mov	 esi, eax
  00303	83 c4 04	 add	 esp, 4
  00306	89 74 24 14	 mov	 DWORD PTR $T147895[esp+36], esi
  0030a	3b f3		 cmp	 esi, ebx
  0030c	c7 44 24 20 09
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 9
  00314	74 1d		 je	 SHORT $L147897
  00316	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00319	8b cc		 mov	 ecx, esp
  0031b	89 64 24 2c	 mov	 DWORD PTR $T147896[esp+64], esp
  0031f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@BAEFACHF@CTBLFriendTarget?$AA@
  00324	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00329	55		 push	 ebp
  0032a	8b ce		 mov	 ecx, esi
  0032c	e8 00 00 00 00	 call	 ??0CTBLFriendTarget@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLFriendTarget::CTBLFriendTarget
  00331	eb 02		 jmp	 SHORT $L147898
$L147897:
  00333	33 c0		 xor	 eax, eax
$L147898:
  00335	3b c3		 cmp	 eax, ebx
  00337	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  0033f	0f 84 13 1e 00
	00		 je	 $L148861

; 15   : PREDEFINE_QUERY(CTBLFriendGroupTable)

  00345	68 48 0c 00 00	 push	 3144			; 00000c48H
  0034a	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0034f	8b f0		 mov	 esi, eax
  00351	83 c4 04	 add	 esp, 4
  00354	89 74 24 14	 mov	 DWORD PTR $T147900[esp+36], esi
  00358	3b f3		 cmp	 esi, ebx
  0035a	c7 44 24 20 0a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 10 ; 0000000aH
  00362	74 1d		 je	 SHORT $L147902
  00364	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00367	8b cc		 mov	 ecx, esp
  00369	89 64 24 2c	 mov	 DWORD PTR $T147901[esp+64], esp
  0036d	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@JDAFODJ@CTBLFriendGroupTable?$AA@
  00372	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00377	55		 push	 ebp
  00378	8b ce		 mov	 ecx, esi
  0037a	e8 00 00 00 00	 call	 ??0CTBLFriendGroupTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLFriendGroupTable::CTBLFriendGroupTable
  0037f	eb 02		 jmp	 SHORT $L147903
$L147902:
  00381	33 c0		 xor	 eax, eax
$L147903:
  00383	3b c3		 cmp	 eax, ebx
  00385	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  0038d	0f 84 c5 1d 00
	00		 je	 $L148861

; 16   : PREDEFINE_QUERY(CTBLSoulmate)

  00393	68 70 0c 00 00	 push	 3184			; 00000c70H
  00398	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0039d	8b f0		 mov	 esi, eax
  0039f	83 c4 04	 add	 esp, 4
  003a2	89 74 24 14	 mov	 DWORD PTR $T147905[esp+36], esi
  003a6	3b f3		 cmp	 esi, ebx
  003a8	c7 44 24 20 0b
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 11 ; 0000000bH
  003b0	74 1d		 je	 SHORT $L147907
  003b2	83 ec 1c	 sub	 esp, 28			; 0000001cH
  003b5	8b cc		 mov	 ecx, esp
  003b7	89 64 24 2c	 mov	 DWORD PTR $T147906[esp+64], esp
  003bb	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@OPCLOBJG@CTBLSoulmate?$AA@
  003c0	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  003c5	55		 push	 ebp
  003c6	8b ce		 mov	 ecx, esi
  003c8	e8 00 00 00 00	 call	 ??0CTBLSoulmate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSoulmate::CTBLSoulmate
  003cd	eb 02		 jmp	 SHORT $L147908
$L147907:
  003cf	33 c0		 xor	 eax, eax
$L147908:
  003d1	3b c3		 cmp	 eax, ebx
  003d3	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  003db	0f 84 77 1d 00
	00		 je	 $L148861

; 17   : PREDEFINE_QUERY(CTBLMySoulmate)

  003e1	68 70 0c 00 00	 push	 3184			; 00000c70H
  003e6	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  003eb	8b f0		 mov	 esi, eax
  003ed	83 c4 04	 add	 esp, 4
  003f0	89 74 24 14	 mov	 DWORD PTR $T147910[esp+36], esi
  003f4	3b f3		 cmp	 esi, ebx
  003f6	c7 44 24 20 0c
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 12 ; 0000000cH
  003fe	74 1d		 je	 SHORT $L147912
  00400	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00403	8b cc		 mov	 ecx, esp
  00405	89 64 24 2c	 mov	 DWORD PTR $T147911[esp+64], esp
  00409	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@BIANAOEM@CTBLMySoulmate?$AA@
  0040e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00413	55		 push	 ebp
  00414	8b ce		 mov	 ecx, esi
  00416	e8 00 00 00 00	 call	 ??0CTBLMySoulmate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMySoulmate::CTBLMySoulmate
  0041b	eb 02		 jmp	 SHORT $L147913
$L147912:
  0041d	33 c0		 xor	 eax, eax
$L147913:
  0041f	3b c3		 cmp	 eax, ebx
  00421	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00429	0f 84 29 1d 00
	00		 je	 $L148861

; 18   : PREDEFINE_QUERY(CTBLOperatorChart)

  0042f	68 30 0c 00 00	 push	 3120			; 00000c30H
  00434	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00439	8b f0		 mov	 esi, eax
  0043b	83 c4 04	 add	 esp, 4
  0043e	89 74 24 14	 mov	 DWORD PTR $T147915[esp+36], esi
  00442	3b f3		 cmp	 esi, ebx
  00444	c7 44 24 20 0d
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 13 ; 0000000dH
  0044c	74 1d		 je	 SHORT $L147917
  0044e	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00451	8b cc		 mov	 ecx, esp
  00453	89 64 24 2c	 mov	 DWORD PTR $T147916[esp+64], esp
  00457	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@DCCCNCDJ@CTBLOperatorChart?$AA@
  0045c	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00461	55		 push	 ebp
  00462	8b ce		 mov	 ecx, esi
  00464	e8 00 00 00 00	 call	 ??0CTBLOperatorChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLOperatorChart::CTBLOperatorChart
  00469	eb 02		 jmp	 SHORT $L147918
$L147917:
  0046b	33 c0		 xor	 eax, eax
$L147918:
  0046d	3b c3		 cmp	 eax, ebx
  0046f	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00477	0f 84 db 1c 00
	00		 je	 $L148861

; 19   : PREDEFINE_QUERY(CTBLEventQuarterChart)

  0047d	68 68 10 00 00	 push	 4200			; 00001068H
  00482	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00487	8b f0		 mov	 esi, eax
  00489	83 c4 04	 add	 esp, 4
  0048c	89 74 24 14	 mov	 DWORD PTR $T147920[esp+36], esi
  00490	3b f3		 cmp	 esi, ebx
  00492	c7 44 24 20 0e
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 14 ; 0000000eH
  0049a	74 1d		 je	 SHORT $L147922
  0049c	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0049f	8b cc		 mov	 ecx, esp
  004a1	89 64 24 2c	 mov	 DWORD PTR $T147921[esp+64], esp
  004a5	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@CDBIMFOD@CTBLEventQuarterChart?$AA@
  004aa	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  004af	55		 push	 ebp
  004b0	8b ce		 mov	 ecx, esi
  004b2	e8 00 00 00 00	 call	 ??0CTBLEventQuarterChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLEventQuarterChart::CTBLEventQuarterChart
  004b7	eb 02		 jmp	 SHORT $L147923
$L147922:
  004b9	33 c0		 xor	 eax, eax
$L147923:
  004bb	3b c3		 cmp	 eax, ebx
  004bd	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  004c5	0f 84 8d 1c 00
	00		 je	 $L148861

; 20   : PREDEFINE_QUERY(CTBLGuildLoad)

  004cb	68 b4 0c 00 00	 push	 3252			; 00000cb4H
  004d0	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  004d5	8b f0		 mov	 esi, eax
  004d7	83 c4 04	 add	 esp, 4
  004da	89 74 24 14	 mov	 DWORD PTR $T147925[esp+36], esi
  004de	3b f3		 cmp	 esi, ebx
  004e0	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  004e4	74 1d		 je	 SHORT $L147927
  004e6	83 ec 1c	 sub	 esp, 28			; 0000001cH
  004e9	8b cc		 mov	 ecx, esp
  004eb	89 64 24 2c	 mov	 DWORD PTR $T147926[esp+64], esp
  004ef	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@LKOCLMBF@CTBLGuildLoad?$AA@
  004f4	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  004f9	55		 push	 ebp
  004fa	8b ce		 mov	 ecx, esi
  004fc	e8 00 00 00 00	 call	 ??0CTBLGuildLoad@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildLoad::CTBLGuildLoad
  00501	eb 02		 jmp	 SHORT $L147928
$L147927:
  00503	33 c0		 xor	 eax, eax
$L147928:
  00505	83 cf ff	 or	 edi, -1
  00508	3b c3		 cmp	 eax, ebx
  0050a	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0050e	0f 84 44 1c 00
	00		 je	 $L148861

; 21   : PREDEFINE_QUERY(CTBLBattleTimeChart)

  00514	68 48 0c 00 00	 push	 3144			; 00000c48H
  00519	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0051e	8b f0		 mov	 esi, eax
  00520	83 c4 04	 add	 esp, 4
  00523	89 74 24 14	 mov	 DWORD PTR $T147930[esp+36], esi
  00527	3b f3		 cmp	 esi, ebx
  00529	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 16 ; 00000010H
  00531	74 1d		 je	 SHORT $L147932
  00533	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00536	8b cc		 mov	 ecx, esp
  00538	89 64 24 2c	 mov	 DWORD PTR $T147931[esp+64], esp
  0053c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@BAHNCKAE@CTBLBattleTimeChart?$AA@
  00541	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00546	55		 push	 ebp
  00547	8b ce		 mov	 ecx, esi
  00549	e8 00 00 00 00	 call	 ??0CTBLBattleTimeChart@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLBattleTimeChart::CTBLBattleTimeChart
  0054e	eb 02		 jmp	 SHORT $L147933
$L147932:
  00550	33 c0		 xor	 eax, eax
$L147933:
  00552	3b c3		 cmp	 eax, ebx
  00554	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00558	0f 84 fa 1b 00
	00		 je	 $L148861

; 22   : PREDEFINE_QUERY(CTBLSvrMsg)

  0055e	68 34 0d 00 00	 push	 3380			; 00000d34H
  00563	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00568	8b f0		 mov	 esi, eax
  0056a	83 c4 04	 add	 esp, 4
  0056d	89 74 24 14	 mov	 DWORD PTR $T147935[esp+36], esi
  00571	3b f3		 cmp	 esi, ebx
  00573	c7 44 24 20 11
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 17 ; 00000011H
  0057b	74 1d		 je	 SHORT $L147937
  0057d	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00580	8b cc		 mov	 ecx, esp
  00582	89 64 24 2c	 mov	 DWORD PTR $T147936[esp+64], esp
  00586	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0L@LMFKOODM@CTBLSvrMsg?$AA@
  0058b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00590	55		 push	 ebp
  00591	8b ce		 mov	 ecx, esi
  00593	e8 00 00 00 00	 call	 ??0CTBLSvrMsg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLSvrMsg::CTBLSvrMsg
  00598	eb 02		 jmp	 SHORT $L147938
$L147937:
  0059a	33 c0		 xor	 eax, eax
$L147938:
  0059c	3b c3		 cmp	 eax, ebx
  0059e	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  005a2	0f 84 b0 1b 00
	00		 je	 $L148861

; 23   : PREDEFINE_QUERY(CTBLItemFind)

  005a8	68 98 0c 00 00	 push	 3224			; 00000c98H
  005ad	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  005b2	8b f0		 mov	 esi, eax
  005b4	83 c4 04	 add	 esp, 4
  005b7	89 74 24 14	 mov	 DWORD PTR $T147940[esp+36], esi
  005bb	3b f3		 cmp	 esi, ebx
  005bd	c7 44 24 20 12
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 18 ; 00000012H
  005c5	74 1d		 je	 SHORT $L147942
  005c7	83 ec 1c	 sub	 esp, 28			; 0000001cH
  005ca	8b cc		 mov	 ecx, esp
  005cc	89 64 24 2c	 mov	 DWORD PTR $T147941[esp+64], esp
  005d0	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@CAJJGKHC@CTBLItemFind?$AA@
  005d5	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  005da	55		 push	 ebp
  005db	8b ce		 mov	 ecx, esi
  005dd	e8 00 00 00 00	 call	 ??0CTBLItemFind@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLItemFind::CTBLItemFind
  005e2	eb 02		 jmp	 SHORT $L147943
$L147942:
  005e4	33 c0		 xor	 eax, eax
$L147943:
  005e6	3b c3		 cmp	 eax, ebx
  005e8	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  005ec	0f 84 66 1b 00
	00		 je	 $L148861

; 24   : PREDEFINE_QUERY(CTBLGuildPvPointReward)

  005f2	68 78 0c 00 00	 push	 3192			; 00000c78H
  005f7	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  005fc	8b f0		 mov	 esi, eax
  005fe	83 c4 04	 add	 esp, 4
  00601	89 74 24 14	 mov	 DWORD PTR $T147945[esp+36], esi
  00605	3b f3		 cmp	 esi, ebx
  00607	c7 44 24 20 13
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 19 ; 00000013H
  0060f	74 1d		 je	 SHORT $L147947
  00611	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00614	8b cc		 mov	 ecx, esp
  00616	89 64 24 2c	 mov	 DWORD PTR $T147946[esp+64], esp
  0061a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@HIKOINBC@CTBLGuildPvPointReward?$AA@
  0061f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00624	55		 push	 ebp
  00625	8b ce		 mov	 ecx, esi
  00627	e8 00 00 00 00	 call	 ??0CTBLGuildPvPointReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildPvPointReward::CTBLGuildPvPointReward
  0062c	eb 02		 jmp	 SHORT $L147948
$L147947:
  0062e	33 c0		 xor	 eax, eax
$L147948:
  00630	3b c3		 cmp	 eax, ebx
  00632	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00636	0f 84 1c 1b 00
	00		 je	 $L148861

; 25   : PREDEFINE_QUERY(CTBLGuildPvPRecord)

  0063c	68 5c 0c 00 00	 push	 3164			; 00000c5cH
  00641	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00646	8b f0		 mov	 esi, eax
  00648	83 c4 04	 add	 esp, 4
  0064b	89 74 24 14	 mov	 DWORD PTR $T147950[esp+36], esi
  0064f	3b f3		 cmp	 esi, ebx
  00651	c7 44 24 20 14
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 20 ; 00000014H
  00659	74 1d		 je	 SHORT $L147952
  0065b	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0065e	8b cc		 mov	 ecx, esp
  00660	89 64 24 2c	 mov	 DWORD PTR $T147951[esp+64], esp
  00664	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@EHMHJLFH@CTBLGuildPvPRecord?$AA@
  00669	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0066e	55		 push	 ebp
  0066f	8b ce		 mov	 ecx, esi
  00671	e8 00 00 00 00	 call	 ??0CTBLGuildPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildPvPRecord::CTBLGuildPvPRecord
  00676	eb 02		 jmp	 SHORT $L147953
$L147952:
  00678	33 c0		 xor	 eax, eax
$L147953:
  0067a	3b c3		 cmp	 eax, ebx
  0067c	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00680	0f 84 d2 1a 00
	00		 je	 $L148861

; 26   : PREDEFINE_QUERY(CTBLCastleApplicant)

  00686	68 38 0c 00 00	 push	 3128			; 00000c38H
  0068b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00690	8b f0		 mov	 esi, eax
  00692	83 c4 04	 add	 esp, 4
  00695	89 74 24 14	 mov	 DWORD PTR $T147955[esp+36], esi
  00699	3b f3		 cmp	 esi, ebx
  0069b	c7 44 24 20 15
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 21 ; 00000015H
  006a3	74 1d		 je	 SHORT $L147957
  006a5	83 ec 1c	 sub	 esp, 28			; 0000001cH
  006a8	8b cc		 mov	 ecx, esp
  006aa	89 64 24 2c	 mov	 DWORD PTR $T147956[esp+64], esp
  006ae	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@KMMBIDKP@CTBLCastleApplicant?$AA@
  006b3	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  006b8	55		 push	 ebp
  006b9	8b ce		 mov	 ecx, esi
  006bb	e8 00 00 00 00	 call	 ??0CTBLCastleApplicant@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLCastleApplicant::CTBLCastleApplicant
  006c0	eb 02		 jmp	 SHORT $L147958
$L147957:
  006c2	33 c0		 xor	 eax, eax
$L147958:
  006c4	3b c3		 cmp	 eax, ebx
  006c6	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  006ca	0f 84 88 1a 00
	00		 je	 $L148861

; 27   : PREDEFINE_QUERY(CTBLGuildWanted)

  006d0	68 48 15 00 00	 push	 5448			; 00001548H
  006d5	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  006da	8b f0		 mov	 esi, eax
  006dc	83 c4 04	 add	 esp, 4
  006df	89 74 24 14	 mov	 DWORD PTR $T147960[esp+36], esi
  006e3	3b f3		 cmp	 esi, ebx
  006e5	c7 44 24 20 16
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 22 ; 00000016H
  006ed	74 1d		 je	 SHORT $L147962
  006ef	83 ec 1c	 sub	 esp, 28			; 0000001cH
  006f2	8b cc		 mov	 ecx, esp
  006f4	89 64 24 2c	 mov	 DWORD PTR $T147961[esp+64], esp
  006f8	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@DHHFGNDD@CTBLGuildWanted?$AA@
  006fd	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00702	55		 push	 ebp
  00703	8b ce		 mov	 ecx, esi
  00705	e8 00 00 00 00	 call	 ??0CTBLGuildWanted@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildWanted::CTBLGuildWanted
  0070a	eb 02		 jmp	 SHORT $L147963
$L147962:
  0070c	33 c0		 xor	 eax, eax
$L147963:
  0070e	3b c3		 cmp	 eax, ebx
  00710	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00714	0f 84 3e 1a 00
	00		 je	 $L148861

; 28   : PREDEFINE_QUERY(CTBLGuildTacticsWanted)

  0071a	68 5c 15 00 00	 push	 5468			; 0000155cH
  0071f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00724	8b f0		 mov	 esi, eax
  00726	83 c4 04	 add	 esp, 4
  00729	89 74 24 14	 mov	 DWORD PTR $T147965[esp+36], esi
  0072d	3b f3		 cmp	 esi, ebx
  0072f	c7 44 24 20 17
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 23 ; 00000017H
  00737	74 1d		 je	 SHORT $L147967
  00739	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0073c	8b cc		 mov	 ecx, esp
  0073e	89 64 24 2c	 mov	 DWORD PTR $T147966[esp+64], esp
  00742	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@GHGLGBKE@CTBLGuildTacticsWanted?$AA@
  00747	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0074c	55		 push	 ebp
  0074d	8b ce		 mov	 ecx, esi
  0074f	e8 00 00 00 00	 call	 ??0CTBLGuildTacticsWanted@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGuildTacticsWanted::CTBLGuildTacticsWanted
  00754	eb 02		 jmp	 SHORT $L147968
$L147967:
  00756	33 c0		 xor	 eax, eax
$L147968:
  00758	3b c3		 cmp	 eax, ebx
  0075a	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0075e	0f 84 f4 19 00
	00		 je	 $L148861

; 29   : PREDEFINE_QUERY(CTBLMonthPvPointTable)  

  00764	68 b4 0d 00 00	 push	 3508			; 00000db4H
  00769	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0076e	8b f0		 mov	 esi, eax
  00770	83 c4 04	 add	 esp, 4
  00773	89 74 24 14	 mov	 DWORD PTR $T147970[esp+36], esi
  00777	3b f3		 cmp	 esi, ebx
  00779	c7 44 24 20 18
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 24 ; 00000018H
  00781	74 1d		 je	 SHORT $L147972
  00783	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00786	8b cc		 mov	 ecx, esp
  00788	89 64 24 2c	 mov	 DWORD PTR $T147971[esp+64], esp
  0078c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@MBMBFJIH@CTBLMonthPvPointTable?$AA@
  00791	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00796	55		 push	 ebp
  00797	8b ce		 mov	 ecx, esi
  00799	e8 00 00 00 00	 call	 ??0CTBLMonthPvPointTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonthPvPointTable::CTBLMonthPvPointTable
  0079e	eb 02		 jmp	 SHORT $L147973
$L147972:
  007a0	33 c0		 xor	 eax, eax
$L147973:
  007a2	3b c3		 cmp	 eax, ebx
  007a4	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  007a8	0f 84 aa 19 00
	00		 je	 $L148861

; 30   : PREDEFINE_QUERY(CTBLMonthPvPointChar)

  007ae	68 3c 0d 00 00	 push	 3388			; 00000d3cH
  007b3	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  007b8	8b f0		 mov	 esi, eax
  007ba	83 c4 04	 add	 esp, 4
  007bd	89 74 24 14	 mov	 DWORD PTR $T147975[esp+36], esi
  007c1	3b f3		 cmp	 esi, ebx
  007c3	c7 44 24 20 19
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 25 ; 00000019H
  007cb	74 1d		 je	 SHORT $L147977
  007cd	83 ec 1c	 sub	 esp, 28			; 0000001cH
  007d0	8b cc		 mov	 ecx, esp
  007d2	89 64 24 2c	 mov	 DWORD PTR $T147976[esp+64], esp
  007d6	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@OEFDDMHH@CTBLMonthPvPointChar?$AA@
  007db	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  007e0	55		 push	 ebp
  007e1	8b ce		 mov	 ecx, esi
  007e3	e8 00 00 00 00	 call	 ??0CTBLMonthPvPointChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonthPvPointChar::CTBLMonthPvPointChar
  007e8	eb 02		 jmp	 SHORT $L147978
$L147977:
  007ea	33 c0		 xor	 eax, eax
$L147978:
  007ec	3b c3		 cmp	 eax, ebx
  007ee	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  007f2	0f 84 60 19 00
	00		 je	 $L148861

; 31   : PREDEFINE_QUERY(CTBLPvPointTable)

  007f8	68 ac 0c 00 00	 push	 3244			; 00000cacH
  007fd	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00802	8b f0		 mov	 esi, eax
  00804	83 c4 04	 add	 esp, 4
  00807	89 74 24 14	 mov	 DWORD PTR $T147980[esp+36], esi
  0080b	3b f3		 cmp	 esi, ebx
  0080d	c7 44 24 20 1a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 26 ; 0000001aH
  00815	74 1d		 je	 SHORT $L147982
  00817	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0081a	8b cc		 mov	 ecx, esp
  0081c	89 64 24 2c	 mov	 DWORD PTR $T147981[esp+64], esp
  00820	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@GBJJHOCB@CTBLPvPointTable?$AA@
  00825	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0082a	55		 push	 ebp
  0082b	8b ce		 mov	 ecx, esi
  0082d	e8 00 00 00 00	 call	 ??0CTBLPvPointTable@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLPvPointTable::CTBLPvPointTable
  00832	eb 02		 jmp	 SHORT $L147983
$L147982:
  00834	33 c0		 xor	 eax, eax
$L147983:
  00836	3b c3		 cmp	 eax, ebx
  00838	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0083c	0f 84 16 19 00
	00		 je	 $L148861

; 32   : PREDEFINE_QUERY(CTBLStopMap)

  00842	68 2c 0c 00 00	 push	 3116			; 00000c2cH
  00847	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0084c	8b f0		 mov	 esi, eax
  0084e	83 c4 04	 add	 esp, 4
  00851	89 74 24 14	 mov	 DWORD PTR $T147985[esp+36], esi
  00855	3b f3		 cmp	 esi, ebx
  00857	c7 44 24 20 1b
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 27 ; 0000001bH
  0085f	74 1d		 je	 SHORT $L147987
  00861	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00864	8b cc		 mov	 ecx, esp
  00866	89 64 24 2c	 mov	 DWORD PTR $T147986[esp+64], esp
  0086a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@GFPDNAOE@CTBLStopMap?$AA@
  0086f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00874	55		 push	 ebp
  00875	8b ce		 mov	 ecx, esi
  00877	e8 00 00 00 00	 call	 ??0CTBLStopMap@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLStopMap::CTBLStopMap
  0087c	eb 02		 jmp	 SHORT $L147988
$L147987:
  0087e	33 c0		 xor	 eax, eax
$L147988:
  00880	3b c3		 cmp	 eax, ebx
  00882	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00886	0f 84 cc 18 00
	00		 je	 $L148861

; 33   : PREDEFINE_QUERY(CTBLProtectChar)

  0088c	68 2c 0c 00 00	 push	 3116			; 00000c2cH
  00891	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00896	8b f0		 mov	 esi, eax
  00898	83 c4 04	 add	 esp, 4
  0089b	89 74 24 14	 mov	 DWORD PTR $T147990[esp+36], esi
  0089f	3b f3		 cmp	 esi, ebx
  008a1	c7 44 24 20 1c
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 28 ; 0000001cH
  008a9	74 1d		 je	 SHORT $L147992
  008ab	83 ec 1c	 sub	 esp, 28			; 0000001cH
  008ae	8b cc		 mov	 ecx, esp
  008b0	89 64 24 2c	 mov	 DWORD PTR $T147991[esp+64], esp
  008b4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@IHFKOAID@CTBLProtectChar?$AA@
  008b9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  008be	55		 push	 ebp
  008bf	8b ce		 mov	 ecx, esi
  008c1	e8 00 00 00 00	 call	 ??0CTBLProtectChar@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLProtectChar::CTBLProtectChar
  008c6	eb 02		 jmp	 SHORT $L147993
$L147992:
  008c8	33 c0		 xor	 eax, eax
$L147993:
  008ca	3b c3		 cmp	 eax, ebx
  008cc	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  008d0	0f 84 82 18 00
	00		 je	 $L148861

; 34   : PREDEFINE_QUERY(CTBLDeleteLevel)

  008d6	68 2c 0c 00 00	 push	 3116			; 00000c2cH
  008db	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  008e0	8b f0		 mov	 esi, eax
  008e2	83 c4 04	 add	 esp, 4
  008e5	89 74 24 14	 mov	 DWORD PTR $T147995[esp+36], esi
  008e9	3b f3		 cmp	 esi, ebx
  008eb	c7 44 24 20 1d
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 29 ; 0000001dH
  008f3	74 1d		 je	 SHORT $L147997
  008f5	83 ec 1c	 sub	 esp, 28			; 0000001cH
  008f8	8b cc		 mov	 ecx, esp
  008fa	89 64 24 2c	 mov	 DWORD PTR $T147996[esp+64], esp
  008fe	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@EJOCOGDN@CTBLDeleteLevel?$AA@
  00903	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00908	55		 push	 ebp
  00909	8b ce		 mov	 ecx, esi
  0090b	e8 00 00 00 00	 call	 ??0CTBLDeleteLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLDeleteLevel::CTBLDeleteLevel
  00910	eb 02		 jmp	 SHORT $L147998
$L147997:
  00912	33 c0		 xor	 eax, eax
$L147998:
  00914	3b c3		 cmp	 eax, ebx
  00916	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0091a	0f 84 38 18 00
	00		 je	 $L148861

; 35   : PREDEFINE_QUERY(CTBLEventQuarterList) 

  00920	68 98 13 00 00	 push	 5016			; 00001398H
  00925	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0092a	8b f0		 mov	 esi, eax
  0092c	83 c4 04	 add	 esp, 4
  0092f	89 74 24 14	 mov	 DWORD PTR $T148000[esp+36], esi
  00933	3b f3		 cmp	 esi, ebx
  00935	c7 44 24 20 1e
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 30 ; 0000001eH
  0093d	74 1d		 je	 SHORT $L148002
  0093f	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00942	8b cc		 mov	 ecx, esp
  00944	89 64 24 2c	 mov	 DWORD PTR $T148001[esp+64], esp
  00948	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@OFNOMJPO@CTBLEventQuarterList?$AA@
  0094d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00952	55		 push	 ebp
  00953	8b ce		 mov	 ecx, esi
  00955	e8 00 00 00 00	 call	 ??0CTBLEventQuarterList@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLEventQuarterList::CTBLEventQuarterList
  0095a	eb 02		 jmp	 SHORT $L148003
$L148002:
  0095c	33 c0		 xor	 eax, eax
$L148003:
  0095e	3b c3		 cmp	 eax, ebx
  00960	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00964	0f 84 ee 17 00
	00		 je	 $L148861

; 36   : PREDEFINE_QUERY(CTBLTournament)

  0096a	68 74 0c 00 00	 push	 3188			; 00000c74H
  0096f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00974	8b f0		 mov	 esi, eax
  00976	83 c4 04	 add	 esp, 4
  00979	89 74 24 14	 mov	 DWORD PTR $T148005[esp+36], esi
  0097d	3b f3		 cmp	 esi, ebx
  0097f	c7 44 24 20 1f
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 31 ; 0000001fH
  00987	74 1d		 je	 SHORT $L148007
  00989	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0098c	8b cc		 mov	 ecx, esp
  0098e	89 64 24 2c	 mov	 DWORD PTR $T148006[esp+64], esp
  00992	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@OFBOJDHF@CTBLTournament?$AA@
  00997	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0099c	55		 push	 ebp
  0099d	8b ce		 mov	 ecx, esi
  0099f	e8 00 00 00 00	 call	 ??0CTBLTournament@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTournament::CTBLTournament
  009a4	eb 02		 jmp	 SHORT $L148008
$L148007:
  009a6	33 c0		 xor	 eax, eax
$L148008:
  009a8	3b c3		 cmp	 eax, ebx
  009aa	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  009ae	0f 84 a4 17 00
	00		 je	 $L148861

; 37   : PREDEFINE_QUERY(CTBLTournamentSchedule)

  009b4	68 34 0c 00 00	 push	 3124			; 00000c34H
  009b9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  009be	8b f0		 mov	 esi, eax
  009c0	83 c4 04	 add	 esp, 4
  009c3	89 74 24 14	 mov	 DWORD PTR $T148010[esp+36], esi
  009c7	3b f3		 cmp	 esi, ebx
  009c9	c7 44 24 20 20
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 32 ; 00000020H
  009d1	74 1d		 je	 SHORT $L148012
  009d3	83 ec 1c	 sub	 esp, 28			; 0000001cH
  009d6	8b cc		 mov	 ecx, esp
  009d8	89 64 24 2c	 mov	 DWORD PTR $T148011[esp+64], esp
  009dc	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@HPLHLCBE@CTBLTournamentSchedule?$AA@
  009e1	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  009e6	55		 push	 ebp
  009e7	8b ce		 mov	 ecx, esi
  009e9	e8 00 00 00 00	 call	 ??0CTBLTournamentSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTournamentSchedule::CTBLTournamentSchedule
  009ee	eb 02		 jmp	 SHORT $L148013
$L148012:
  009f0	33 c0		 xor	 eax, eax
$L148013:
  009f2	3b c3		 cmp	 eax, ebx
  009f4	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  009f8	0f 84 5a 17 00
	00		 je	 $L148861

; 38   : PREDEFINE_QUERY(CTBLGetCharInfo)

  009fe	68 9c 0c 00 00	 push	 3228			; 00000c9cH
  00a03	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00a08	8b f0		 mov	 esi, eax
  00a0a	83 c4 04	 add	 esp, 4
  00a0d	89 74 24 14	 mov	 DWORD PTR $T148015[esp+36], esi
  00a11	3b f3		 cmp	 esi, ebx
  00a13	c7 44 24 20 21
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 33 ; 00000021H
  00a1b	74 1d		 je	 SHORT $L148017
  00a1d	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00a20	8b cc		 mov	 ecx, esp
  00a22	89 64 24 2c	 mov	 DWORD PTR $T148016[esp+64], esp
  00a26	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@KCDCDILN@CTBLGetCharInfo?$AA@
  00a2b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00a30	55		 push	 ebp
  00a31	8b ce		 mov	 ecx, esi
  00a33	e8 00 00 00 00	 call	 ??0CTBLGetCharInfo@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLGetCharInfo::CTBLGetCharInfo
  00a38	eb 02		 jmp	 SHORT $L148018
$L148017:
  00a3a	33 c0		 xor	 eax, eax
$L148018:
  00a3c	3b c3		 cmp	 eax, ebx
  00a3e	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00a42	0f 84 10 17 00
	00		 je	 $L148861

; 39   : PREDEFINE_QUERY(CTBLTournamentReward)

  00a48	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  00a4d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00a52	8b f0		 mov	 esi, eax
  00a54	83 c4 04	 add	 esp, 4
  00a57	89 74 24 14	 mov	 DWORD PTR $T148020[esp+36], esi
  00a5b	3b f3		 cmp	 esi, ebx
  00a5d	c7 44 24 20 22
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 34 ; 00000022H
  00a65	74 1d		 je	 SHORT $L148022
  00a67	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00a6a	8b cc		 mov	 ecx, esp
  00a6c	89 64 24 2c	 mov	 DWORD PTR $T148021[esp+64], esp
  00a70	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@KAFJCLAG@CTBLTournamentReward?$AA@
  00a75	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00a7a	55		 push	 ebp
  00a7b	8b ce		 mov	 ecx, esi
  00a7d	e8 00 00 00 00	 call	 ??0CTBLTournamentReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTournamentReward::CTBLTournamentReward
  00a82	eb 02		 jmp	 SHORT $L148023
$L148022:
  00a84	33 c0		 xor	 eax, eax
$L148023:
  00a86	3b c3		 cmp	 eax, ebx
  00a88	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00a8c	0f 84 c6 16 00
	00		 je	 $L148861

; 40   : PREDEFINE_QUERY(CTBLTournamentPlayer)

  00a92	68 70 0c 00 00	 push	 3184			; 00000c70H
  00a97	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00a9c	8b f0		 mov	 esi, eax
  00a9e	83 c4 04	 add	 esp, 4
  00aa1	89 74 24 14	 mov	 DWORD PTR $T148025[esp+36], esi
  00aa5	3b f3		 cmp	 esi, ebx
  00aa7	c7 44 24 20 23
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 35 ; 00000023H
  00aaf	74 1d		 je	 SHORT $L148027
  00ab1	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00ab4	8b cc		 mov	 ecx, esp
  00ab6	89 64 24 2c	 mov	 DWORD PTR $T148026[esp+64], esp
  00aba	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@GPDFHGJH@CTBLTournamentPlayer?$AA@
  00abf	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00ac4	55		 push	 ebp
  00ac5	8b ce		 mov	 ecx, esi
  00ac7	e8 00 00 00 00	 call	 ??0CTBLTournamentPlayer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTournamentPlayer::CTBLTournamentPlayer
  00acc	eb 02		 jmp	 SHORT $L148028
$L148027:
  00ace	33 c0		 xor	 eax, eax
$L148028:
  00ad0	3b c3		 cmp	 eax, ebx
  00ad2	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00ad6	0f 84 7c 16 00
	00		 je	 $L148861

; 41   : PREDEFINE_QUERY(CTBLFirstGradeGroup)

  00adc	68 b8 0d 00 00	 push	 3512			; 00000db8H
  00ae1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00ae6	8b f0		 mov	 esi, eax
  00ae8	83 c4 04	 add	 esp, 4
  00aeb	89 74 24 14	 mov	 DWORD PTR $T148030[esp+36], esi
  00aef	3b f3		 cmp	 esi, ebx
  00af1	c7 44 24 20 24
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 36 ; 00000024H
  00af9	74 1d		 je	 SHORT $L148032
  00afb	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00afe	8b cc		 mov	 ecx, esp
  00b00	89 64 24 2c	 mov	 DWORD PTR $T148031[esp+64], esp
  00b04	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@IMHJOJNN@CTBLFirstGradeGroup?$AA@
  00b09	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00b0e	55		 push	 ebp
  00b0f	8b ce		 mov	 ecx, esi
  00b11	e8 00 00 00 00	 call	 ??0CTBLFirstGradeGroup@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLFirstGradeGroup::CTBLFirstGradeGroup
  00b16	eb 02		 jmp	 SHORT $L148033
$L148032:
  00b18	33 c0		 xor	 eax, eax
$L148033:
  00b1a	3b c3		 cmp	 eax, ebx
  00b1c	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00b20	0f 84 32 16 00
	00		 je	 $L148861

; 42   : PREDEFINE_QUERY(CTBLTournamentCurrentStep)

  00b26	68 30 0c 00 00	 push	 3120			; 00000c30H
  00b2b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00b30	8b f0		 mov	 esi, eax
  00b32	83 c4 04	 add	 esp, 4
  00b35	89 74 24 14	 mov	 DWORD PTR $T148035[esp+36], esi
  00b39	3b f3		 cmp	 esi, ebx
  00b3b	c7 44 24 20 25
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 37 ; 00000025H
  00b43	74 1d		 je	 SHORT $L148037
  00b45	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00b48	8b cc		 mov	 ecx, esp
  00b4a	89 64 24 2c	 mov	 DWORD PTR $T148036[esp+64], esp
  00b4e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BK@MHEGHOKH@CTBLTournamentCurrentStep?$AA@
  00b53	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00b58	55		 push	 ebp
  00b59	8b ce		 mov	 ecx, esi
  00b5b	e8 00 00 00 00	 call	 ??0CTBLTournamentCurrentStep@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTournamentCurrentStep::CTBLTournamentCurrentStep
  00b60	eb 02		 jmp	 SHORT $L148038
$L148037:
  00b62	33 c0		 xor	 eax, eax
$L148038:
  00b64	3b c3		 cmp	 eax, ebx
  00b66	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00b6a	0f 84 e8 15 00
	00		 je	 $L148861

; 43   : PREDEFINE_QUERY(CTBLTnmtEventTime)

  00b70	68 34 0c 00 00	 push	 3124			; 00000c34H
  00b75	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00b7a	8b f0		 mov	 esi, eax
  00b7c	83 c4 04	 add	 esp, 4
  00b7f	89 74 24 14	 mov	 DWORD PTR $T148040[esp+36], esi
  00b83	3b f3		 cmp	 esi, ebx
  00b85	c7 44 24 20 26
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 38 ; 00000026H
  00b8d	74 1d		 je	 SHORT $L148042
  00b8f	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00b92	8b cc		 mov	 ecx, esp
  00b94	89 64 24 2c	 mov	 DWORD PTR $T148041[esp+64], esp
  00b98	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@BOLHCPBB@CTBLTnmtEventTime?$AA@
  00b9d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00ba2	55		 push	 ebp
  00ba3	8b ce		 mov	 ecx, esi
  00ba5	e8 00 00 00 00	 call	 ??0CTBLTnmtEventTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTnmtEventTime::CTBLTnmtEventTime
  00baa	eb 02		 jmp	 SHORT $L148043
$L148042:
  00bac	33 c0		 xor	 eax, eax
$L148043:
  00bae	3b c3		 cmp	 eax, ebx
  00bb0	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00bb4	0f 84 9e 15 00
	00		 je	 $L148861

; 44   : PREDEFINE_QUERY(CTBLTnmtEventSchedule)

  00bba	68 34 0c 00 00	 push	 3124			; 00000c34H
  00bbf	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00bc4	8b f0		 mov	 esi, eax
  00bc6	83 c4 04	 add	 esp, 4
  00bc9	89 74 24 14	 mov	 DWORD PTR $T148045[esp+36], esi
  00bcd	3b f3		 cmp	 esi, ebx
  00bcf	c7 44 24 20 27
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 39 ; 00000027H
  00bd7	74 1d		 je	 SHORT $L148047
  00bd9	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00bdc	8b cc		 mov	 ecx, esp
  00bde	89 64 24 2c	 mov	 DWORD PTR $T148046[esp+64], esp
  00be2	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@EELCEGBI@CTBLTnmtEventSchedule?$AA@
  00be7	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00bec	55		 push	 ebp
  00bed	8b ce		 mov	 ecx, esi
  00bef	e8 00 00 00 00	 call	 ??0CTBLTnmtEventSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTnmtEventSchedule::CTBLTnmtEventSchedule
  00bf4	eb 02		 jmp	 SHORT $L148048
$L148047:
  00bf6	33 c0		 xor	 eax, eax
$L148048:
  00bf8	3b c3		 cmp	 eax, ebx
  00bfa	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00bfe	0f 84 54 15 00
	00		 je	 $L148861

; 45   : PREDEFINE_QUERY(CTBLTournamentEvent)

  00c04	68 78 0c 00 00	 push	 3192			; 00000c78H
  00c09	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00c0e	8b f0		 mov	 esi, eax
  00c10	83 c4 04	 add	 esp, 4
  00c13	89 74 24 14	 mov	 DWORD PTR $T148050[esp+36], esi
  00c17	3b f3		 cmp	 esi, ebx
  00c19	c7 44 24 20 28
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 40 ; 00000028H
  00c21	74 1d		 je	 SHORT $L148052
  00c23	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00c26	8b cc		 mov	 ecx, esp
  00c28	89 64 24 2c	 mov	 DWORD PTR $T148051[esp+64], esp
  00c2c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@IHJDHLHP@CTBLTournamentEvent?$AA@
  00c31	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00c36	55		 push	 ebp
  00c37	8b ce		 mov	 ecx, esi
  00c39	e8 00 00 00 00	 call	 ??0CTBLTournamentEvent@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTournamentEvent::CTBLTournamentEvent
  00c3e	eb 02		 jmp	 SHORT $L148053
$L148052:
  00c40	33 c0		 xor	 eax, eax
$L148053:
  00c42	3b c3		 cmp	 eax, ebx
  00c44	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00c48	0f 84 0a 15 00
	00		 je	 $L148861

; 46   : PREDEFINE_QUERY(CTBLTnmtEventReward)

  00c4e	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  00c53	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00c58	8b f0		 mov	 esi, eax
  00c5a	83 c4 04	 add	 esp, 4
  00c5d	89 74 24 14	 mov	 DWORD PTR $T148055[esp+36], esi
  00c61	3b f3		 cmp	 esi, ebx
  00c63	c7 44 24 20 29
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 41 ; 00000029H
  00c6b	74 1d		 je	 SHORT $L148057
  00c6d	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00c70	8b cc		 mov	 ecx, esp
  00c72	89 64 24 2c	 mov	 DWORD PTR $T148056[esp+64], esp
  00c76	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@BPMMPPFG@CTBLTnmtEventReward?$AA@
  00c7b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00c80	55		 push	 ebp
  00c81	8b ce		 mov	 ecx, esi
  00c83	e8 00 00 00 00	 call	 ??0CTBLTnmtEventReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTnmtEventReward::CTBLTnmtEventReward
  00c88	eb 02		 jmp	 SHORT $L148058
$L148057:
  00c8a	33 c0		 xor	 eax, eax
$L148058:
  00c8c	3b c3		 cmp	 eax, ebx
  00c8e	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00c92	0f 84 c0 14 00
	00		 je	 $L148861

; 47   : PREDEFINE_QUERY(CTBLTotalRank)

  00c98	68 34 0c 00 00	 push	 3124			; 00000c34H
  00c9d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00ca2	8b f0		 mov	 esi, eax
  00ca4	83 c4 04	 add	 esp, 4
  00ca7	89 74 24 14	 mov	 DWORD PTR $T148060[esp+36], esi
  00cab	3b f3		 cmp	 esi, ebx
  00cad	c7 44 24 20 2a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 42 ; 0000002aH
  00cb5	74 1d		 je	 SHORT $L148062
  00cb7	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00cba	8b cc		 mov	 ecx, esp
  00cbc	89 64 24 2c	 mov	 DWORD PTR $T148061[esp+64], esp
  00cc0	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@JGGEIMGE@CTBLTotalRank?$AA@
  00cc5	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00cca	55		 push	 ebp
  00ccb	8b ce		 mov	 ecx, esi
  00ccd	e8 00 00 00 00	 call	 ??0CTBLTotalRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLTotalRank::CTBLTotalRank
  00cd2	eb 02		 jmp	 SHORT $L148063
$L148062:
  00cd4	33 c0		 xor	 eax, eax
$L148063:
  00cd6	3b c3		 cmp	 eax, ebx
  00cd8	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00cdc	0f 84 76 14 00
	00		 je	 $L148861

; 48   : PREDEFINE_QUERY(CTBLMonthRank)

  00ce2	68 34 0c 00 00	 push	 3124			; 00000c34H
  00ce7	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00cec	8b f0		 mov	 esi, eax
  00cee	83 c4 04	 add	 esp, 4
  00cf1	89 74 24 14	 mov	 DWORD PTR $T148065[esp+36], esi
  00cf5	3b f3		 cmp	 esi, ebx
  00cf7	c7 44 24 20 2b
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 43 ; 0000002bH
  00cff	74 1d		 je	 SHORT $L148067
  00d01	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00d04	8b cc		 mov	 ecx, esp
  00d06	89 64 24 2c	 mov	 DWORD PTR $T148066[esp+64], esp
  00d0a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@ONDPKNK@CTBLMonthRank?$AA@
  00d0f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00d14	55		 push	 ebp
  00d15	8b ce		 mov	 ecx, esi
  00d17	e8 00 00 00 00	 call	 ??0CTBLMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLMonthRank::CTBLMonthRank
  00d1c	eb 02		 jmp	 SHORT $L148068
$L148067:
  00d1e	33 c0		 xor	 eax, eax
$L148068:
  00d20	3b c3		 cmp	 eax, ebx
  00d22	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00d26	0f 84 2c 14 00
	00		 je	 $L148861

; 49   : PREDEFINE_QUERY(CTBLRPSGame)

  00d2c	68 38 0c 00 00	 push	 3128			; 00000c38H
  00d31	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00d36	8b f0		 mov	 esi, eax
  00d38	83 c4 04	 add	 esp, 4
  00d3b	89 74 24 14	 mov	 DWORD PTR $T148070[esp+36], esi
  00d3f	3b f3		 cmp	 esi, ebx
  00d41	c7 44 24 20 2c
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 44 ; 0000002cH
  00d49	74 1d		 je	 SHORT $L148072
  00d4b	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00d4e	8b cc		 mov	 ecx, esp
  00d50	89 64 24 2c	 mov	 DWORD PTR $T148071[esp+64], esp
  00d54	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0M@CGFJGBED@CTBLRPSGame?$AA@
  00d59	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00d5e	55		 push	 ebp
  00d5f	8b ce		 mov	 ecx, esi
  00d61	e8 00 00 00 00	 call	 ??0CTBLRPSGame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLRPSGame::CTBLRPSGame
  00d66	eb 02		 jmp	 SHORT $L148073
$L148072:
  00d68	33 c0		 xor	 eax, eax
$L148073:
  00d6a	3b c3		 cmp	 eax, ebx
  00d6c	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00d70	0f 84 e2 13 00
	00		 je	 $L148861

; 50   : PREDEFINE_QUERY(CTBLRPSGameRecord)

  00d76	68 44 0c 00 00	 push	 3140			; 00000c44H
  00d7b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00d80	8b f0		 mov	 esi, eax
  00d82	83 c4 04	 add	 esp, 4
  00d85	89 74 24 14	 mov	 DWORD PTR $T148075[esp+36], esi
  00d89	3b f3		 cmp	 esi, ebx
  00d8b	c7 44 24 20 2d
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 45 ; 0000002dH
  00d93	74 1d		 je	 SHORT $L148077
  00d95	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00d98	8b cc		 mov	 ecx, esp
  00d9a	89 64 24 2c	 mov	 DWORD PTR $T148076[esp+64], esp
  00d9e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@KABLMCGH@CTBLRPSGameRecord?$AA@
  00da3	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00da8	55		 push	 ebp
  00da9	8b ce		 mov	 ecx, esi
  00dab	e8 00 00 00 00	 call	 ??0CTBLRPSGameRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CTBLRPSGameRecord::CTBLRPSGameRecord
  00db0	eb 02		 jmp	 SHORT $L148078
$L148077:
  00db2	33 c0		 xor	 eax, eax
$L148078:
  00db4	3b c3		 cmp	 eax, ebx
  00db6	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00dba	0f 84 98 13 00
	00		 je	 $L148861

; 51   : 
; 52   : 
; 53   : PREDEFINE_QUERY(CSPGuildUpdate)

  00dc0	68 44 14 00 00	 push	 5188			; 00001444H
  00dc5	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00dca	8b f0		 mov	 esi, eax
  00dcc	83 c4 04	 add	 esp, 4
  00dcf	89 74 24 14	 mov	 DWORD PTR $T148080[esp+36], esi
  00dd3	3b f3		 cmp	 esi, ebx
  00dd5	c7 44 24 20 2e
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 46 ; 0000002eH
  00ddd	74 1d		 je	 SHORT $L148082
  00ddf	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00de2	8b cc		 mov	 ecx, esp
  00de4	89 64 24 2c	 mov	 DWORD PTR $T148081[esp+64], esp
  00de8	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@HHFFLCPK@CSPGuildUpdate?$AA@
  00ded	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00df2	55		 push	 ebp
  00df3	8b ce		 mov	 ecx, esi
  00df5	e8 00 00 00 00	 call	 ??0CSPGuildUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildUpdate::CSPGuildUpdate
  00dfa	eb 02		 jmp	 SHORT $L148083
$L148082:
  00dfc	33 c0		 xor	 eax, eax
$L148083:
  00dfe	3b c3		 cmp	 eax, ebx
  00e00	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00e04	0f 84 4e 13 00
	00		 je	 $L148861

; 54   : PREDEFINE_QUERY(CSPGuildEstablish)

  00e0a	68 7c 0c 00 00	 push	 3196			; 00000c7cH
  00e0f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00e14	8b f0		 mov	 esi, eax
  00e16	83 c4 04	 add	 esp, 4
  00e19	89 74 24 14	 mov	 DWORD PTR $T148085[esp+36], esi
  00e1d	3b f3		 cmp	 esi, ebx
  00e1f	c7 44 24 20 2f
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 47 ; 0000002fH
  00e27	74 1d		 je	 SHORT $L148087
  00e29	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00e2c	8b cc		 mov	 ecx, esp
  00e2e	89 64 24 2c	 mov	 DWORD PTR $T148086[esp+64], esp
  00e32	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@HCBLBPOO@CSPGuildEstablish?$AA@
  00e37	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00e3c	55		 push	 ebp
  00e3d	8b ce		 mov	 ecx, esi
  00e3f	e8 00 00 00 00	 call	 ??0CSPGuildEstablish@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildEstablish::CSPGuildEstablish
  00e44	eb 02		 jmp	 SHORT $L148088
$L148087:
  00e46	33 c0		 xor	 eax, eax
$L148088:
  00e48	3b c3		 cmp	 eax, ebx
  00e4a	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00e4e	0f 84 04 13 00
	00		 je	 $L148861

; 55   : PREDEFINE_QUERY(CSPGuildDisorg)

  00e54	68 38 0c 00 00	 push	 3128			; 00000c38H
  00e59	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00e5e	8b f0		 mov	 esi, eax
  00e60	83 c4 04	 add	 esp, 4
  00e63	89 74 24 14	 mov	 DWORD PTR $T148090[esp+36], esi
  00e67	3b f3		 cmp	 esi, ebx
  00e69	c7 44 24 20 30
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 48 ; 00000030H
  00e71	74 1d		 je	 SHORT $L148092
  00e73	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00e76	8b cc		 mov	 ecx, esp
  00e78	89 64 24 2c	 mov	 DWORD PTR $T148091[esp+64], esp
  00e7c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@JGIBFEEC@CSPGuildDisorg?$AA@
  00e81	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00e86	55		 push	 ebp
  00e87	8b ce		 mov	 ecx, esi
  00e89	e8 00 00 00 00	 call	 ??0CSPGuildDisorg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildDisorg::CSPGuildDisorg
  00e8e	eb 02		 jmp	 SHORT $L148093
$L148092:
  00e90	33 c0		 xor	 eax, eax
$L148093:
  00e92	3b c3		 cmp	 eax, ebx
  00e94	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00e98	0f 84 ba 12 00
	00		 je	 $L148861

; 56   : PREDEFINE_QUERY(CSPGuildDelete)

  00e9e	68 34 0c 00 00	 push	 3124			; 00000c34H
  00ea3	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00ea8	8b f0		 mov	 esi, eax
  00eaa	83 c4 04	 add	 esp, 4
  00ead	89 74 24 14	 mov	 DWORD PTR $T148095[esp+36], esi
  00eb1	3b f3		 cmp	 esi, ebx
  00eb3	c7 44 24 20 31
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 49 ; 00000031H
  00ebb	74 1d		 je	 SHORT $L148097
  00ebd	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00ec0	8b cc		 mov	 ecx, esp
  00ec2	89 64 24 2c	 mov	 DWORD PTR $T148096[esp+64], esp
  00ec6	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@FKPFGKDO@CSPGuildDelete?$AA@
  00ecb	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00ed0	55		 push	 ebp
  00ed1	8b ce		 mov	 ecx, esi
  00ed3	e8 00 00 00 00	 call	 ??0CSPGuildDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildDelete::CSPGuildDelete
  00ed8	eb 02		 jmp	 SHORT $L148098
$L148097:
  00eda	33 c0		 xor	 eax, eax
$L148098:
  00edc	3b c3		 cmp	 eax, ebx
  00ede	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00ee2	0f 84 70 12 00
	00		 je	 $L148861

; 57   : PREDEFINE_QUERY(CSPGuildMemberAdd)

  00ee8	68 38 0c 00 00	 push	 3128			; 00000c38H
  00eed	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00ef2	8b f0		 mov	 esi, eax
  00ef4	83 c4 04	 add	 esp, 4
  00ef7	89 74 24 14	 mov	 DWORD PTR $T148100[esp+36], esi
  00efb	3b f3		 cmp	 esi, ebx
  00efd	c7 44 24 20 32
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 50 ; 00000032H
  00f05	74 1d		 je	 SHORT $L148102
  00f07	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00f0a	8b cc		 mov	 ecx, esp
  00f0c	89 64 24 2c	 mov	 DWORD PTR $T148101[esp+64], esp
  00f10	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@POIFDAAP@CSPGuildMemberAdd?$AA@
  00f15	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00f1a	55		 push	 ebp
  00f1b	8b ce		 mov	 ecx, esi
  00f1d	e8 00 00 00 00	 call	 ??0CSPGuildMemberAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildMemberAdd::CSPGuildMemberAdd
  00f22	eb 02		 jmp	 SHORT $L148103
$L148102:
  00f24	33 c0		 xor	 eax, eax
$L148103:
  00f26	3b c3		 cmp	 eax, ebx
  00f28	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00f2c	0f 84 26 12 00
	00		 je	 $L148861

; 58   : PREDEFINE_QUERY(CSPGuildLeave)

  00f32	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  00f37	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00f3c	8b f0		 mov	 esi, eax
  00f3e	83 c4 04	 add	 esp, 4
  00f41	89 74 24 14	 mov	 DWORD PTR $T148105[esp+36], esi
  00f45	3b f3		 cmp	 esi, ebx
  00f47	c7 44 24 20 33
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 51 ; 00000033H
  00f4f	74 1d		 je	 SHORT $L148107
  00f51	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00f54	8b cc		 mov	 ecx, esp
  00f56	89 64 24 2c	 mov	 DWORD PTR $T148106[esp+64], esp
  00f5a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@JOONNEKA@CSPGuildLeave?$AA@
  00f5f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00f64	55		 push	 ebp
  00f65	8b ce		 mov	 ecx, esi
  00f67	e8 00 00 00 00	 call	 ??0CSPGuildLeave@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildLeave::CSPGuildLeave
  00f6c	eb 02		 jmp	 SHORT $L148108
$L148107:
  00f6e	33 c0		 xor	 eax, eax
$L148108:
  00f70	3b c3		 cmp	 eax, ebx
  00f72	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00f76	0f 84 dc 11 00
	00		 je	 $L148861

; 59   : PREDEFINE_QUERY(CSPGuildDuty)

  00f7c	68 38 0c 00 00	 push	 3128			; 00000c38H
  00f81	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00f86	8b f0		 mov	 esi, eax
  00f88	83 c4 04	 add	 esp, 4
  00f8b	89 74 24 14	 mov	 DWORD PTR $T148110[esp+36], esi
  00f8f	3b f3		 cmp	 esi, ebx
  00f91	c7 44 24 20 34
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 52 ; 00000034H
  00f99	74 1d		 je	 SHORT $L148112
  00f9b	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00f9e	8b cc		 mov	 ecx, esp
  00fa0	89 64 24 2c	 mov	 DWORD PTR $T148111[esp+64], esp
  00fa4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@EJIFPHNK@CSPGuildDuty?$AA@
  00fa9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00fae	55		 push	 ebp
  00faf	8b ce		 mov	 ecx, esi
  00fb1	e8 00 00 00 00	 call	 ??0CSPGuildDuty@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildDuty::CSPGuildDuty
  00fb6	eb 02		 jmp	 SHORT $L148113
$L148112:
  00fb8	33 c0		 xor	 eax, eax
$L148113:
  00fba	3b c3		 cmp	 eax, ebx
  00fbc	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  00fc0	0f 84 92 11 00
	00		 je	 $L148861

; 60   : PREDEFINE_QUERY(CSPGuildPeer)

  00fc6	68 38 0c 00 00	 push	 3128			; 00000c38H
  00fcb	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00fd0	8b f0		 mov	 esi, eax
  00fd2	83 c4 04	 add	 esp, 4
  00fd5	89 74 24 14	 mov	 DWORD PTR $T148115[esp+36], esi
  00fd9	3b f3		 cmp	 esi, ebx
  00fdb	c7 44 24 20 35
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 53 ; 00000035H
  00fe3	74 1d		 je	 SHORT $L148117
  00fe5	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00fe8	8b cc		 mov	 ecx, esp
  00fea	89 64 24 2c	 mov	 DWORD PTR $T148116[esp+64], esp
  00fee	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@HCOMIBIL@CSPGuildPeer?$AA@
  00ff3	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00ff8	55		 push	 ebp
  00ff9	8b ce		 mov	 ecx, esi
  00ffb	e8 00 00 00 00	 call	 ??0CSPGuildPeer@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildPeer::CSPGuildPeer
  01000	eb 02		 jmp	 SHORT $L148118
$L148117:
  01002	33 c0		 xor	 eax, eax
$L148118:
  01004	3b c3		 cmp	 eax, ebx
  01006	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0100a	0f 84 48 11 00
	00		 je	 $L148861

; 61   : PREDEFINE_QUERY(CSPGuildKickout)

  01010	68 34 0c 00 00	 push	 3124			; 00000c34H
  01015	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0101a	8b f0		 mov	 esi, eax
  0101c	83 c4 04	 add	 esp, 4
  0101f	89 74 24 14	 mov	 DWORD PTR $T148120[esp+36], esi
  01023	3b f3		 cmp	 esi, ebx
  01025	c7 44 24 20 36
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 54 ; 00000036H
  0102d	74 1d		 je	 SHORT $L148122
  0102f	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01032	8b cc		 mov	 ecx, esp
  01034	89 64 24 2c	 mov	 DWORD PTR $T148121[esp+64], esp
  01038	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@EBLAFDLB@CSPGuildKickout?$AA@
  0103d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01042	55		 push	 ebp
  01043	8b ce		 mov	 ecx, esi
  01045	e8 00 00 00 00	 call	 ??0CSPGuildKickout@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildKickout::CSPGuildKickout
  0104a	eb 02		 jmp	 SHORT $L148123
$L148122:
  0104c	33 c0		 xor	 eax, eax
$L148123:
  0104e	3b c3		 cmp	 eax, ebx
  01050	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01054	0f 84 fe 10 00
	00		 je	 $L148861

; 62   : PREDEFINE_QUERY(CSPFriendInsert)

  0105a	68 34 0c 00 00	 push	 3124			; 00000c34H
  0105f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01064	8b f0		 mov	 esi, eax
  01066	83 c4 04	 add	 esp, 4
  01069	89 74 24 14	 mov	 DWORD PTR $T148125[esp+36], esi
  0106d	3b f3		 cmp	 esi, ebx
  0106f	c7 44 24 20 37
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 55 ; 00000037H
  01077	74 1d		 je	 SHORT $L148127
  01079	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0107c	8b cc		 mov	 ecx, esp
  0107e	89 64 24 2c	 mov	 DWORD PTR $T148126[esp+64], esp
  01082	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@OIJCLCPF@CSPFriendInsert?$AA@
  01087	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0108c	55		 push	 ebp
  0108d	8b ce		 mov	 ecx, esi
  0108f	e8 00 00 00 00	 call	 ??0CSPFriendInsert@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPFriendInsert::CSPFriendInsert
  01094	eb 02		 jmp	 SHORT $L148128
$L148127:
  01096	33 c0		 xor	 eax, eax
$L148128:
  01098	3b c3		 cmp	 eax, ebx
  0109a	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0109e	0f 84 b4 10 00
	00		 je	 $L148861

; 63   : PREDEFINE_QUERY(CSPFriendErase)

  010a4	68 34 0c 00 00	 push	 3124			; 00000c34H
  010a9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  010ae	8b f0		 mov	 esi, eax
  010b0	83 c4 04	 add	 esp, 4
  010b3	89 74 24 14	 mov	 DWORD PTR $T148130[esp+36], esi
  010b7	3b f3		 cmp	 esi, ebx
  010b9	c7 44 24 20 38
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 56 ; 00000038H
  010c1	74 1d		 je	 SHORT $L148132
  010c3	83 ec 1c	 sub	 esp, 28			; 0000001cH
  010c6	8b cc		 mov	 ecx, esp
  010c8	89 64 24 2c	 mov	 DWORD PTR $T148131[esp+64], esp
  010cc	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@EIOEANNK@CSPFriendErase?$AA@
  010d1	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  010d6	55		 push	 ebp
  010d7	8b ce		 mov	 ecx, esi
  010d9	e8 00 00 00 00	 call	 ??0CSPFriendErase@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPFriendErase::CSPFriendErase
  010de	eb 02		 jmp	 SHORT $L148133
$L148132:
  010e0	33 c0		 xor	 eax, eax
$L148133:
  010e2	3b c3		 cmp	 eax, ebx
  010e4	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  010e8	0f 84 6a 10 00
	00		 je	 $L148861

; 64   : PREDEFINE_QUERY(CSPFriendGroupMake)

  010ee	68 48 0c 00 00	 push	 3144			; 00000c48H
  010f3	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  010f8	8b f0		 mov	 esi, eax
  010fa	83 c4 04	 add	 esp, 4
  010fd	89 74 24 14	 mov	 DWORD PTR $T148135[esp+36], esi
  01101	3b f3		 cmp	 esi, ebx
  01103	c7 44 24 20 39
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 57 ; 00000039H
  0110b	74 1d		 je	 SHORT $L148137
  0110d	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01110	8b cc		 mov	 ecx, esp
  01112	89 64 24 2c	 mov	 DWORD PTR $T148136[esp+64], esp
  01116	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@FNGBOGEE@CSPFriendGroupMake?$AA@
  0111b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01120	55		 push	 ebp
  01121	8b ce		 mov	 ecx, esi
  01123	e8 00 00 00 00	 call	 ??0CSPFriendGroupMake@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPFriendGroupMake::CSPFriendGroupMake
  01128	eb 02		 jmp	 SHORT $L148138
$L148137:
  0112a	33 c0		 xor	 eax, eax
$L148138:
  0112c	3b c3		 cmp	 eax, ebx
  0112e	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01132	0f 84 20 10 00
	00		 je	 $L148861

; 65   : PREDEFINE_QUERY(CSPFriendGroupDelete)

  01138	68 34 0c 00 00	 push	 3124			; 00000c34H
  0113d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01142	8b f0		 mov	 esi, eax
  01144	83 c4 04	 add	 esp, 4
  01147	89 74 24 14	 mov	 DWORD PTR $T148140[esp+36], esi
  0114b	3b f3		 cmp	 esi, ebx
  0114d	c7 44 24 20 3a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 58 ; 0000003aH
  01155	74 1d		 je	 SHORT $L148142
  01157	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0115a	8b cc		 mov	 ecx, esp
  0115c	89 64 24 2c	 mov	 DWORD PTR $T148141[esp+64], esp
  01160	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@CKCHBEJG@CSPFriendGroupDelete?$AA@
  01165	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0116a	55		 push	 ebp
  0116b	8b ce		 mov	 ecx, esi
  0116d	e8 00 00 00 00	 call	 ??0CSPFriendGroupDelete@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPFriendGroupDelete::CSPFriendGroupDelete
  01172	eb 02		 jmp	 SHORT $L148143
$L148142:
  01174	33 c0		 xor	 eax, eax
$L148143:
  01176	3b c3		 cmp	 eax, ebx
  01178	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0117c	0f 84 d6 0f 00
	00		 je	 $L148861

; 66   : PREDEFINE_QUERY(CSPFriendGroupChange)

  01182	68 38 0c 00 00	 push	 3128			; 00000c38H
  01187	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0118c	8b f0		 mov	 esi, eax
  0118e	83 c4 04	 add	 esp, 4
  01191	89 74 24 14	 mov	 DWORD PTR $T148145[esp+36], esi
  01195	3b f3		 cmp	 esi, ebx
  01197	c7 44 24 20 3b
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 59 ; 0000003bH
  0119f	74 1d		 je	 SHORT $L148147
  011a1	83 ec 1c	 sub	 esp, 28			; 0000001cH
  011a4	8b cc		 mov	 ecx, esp
  011a6	89 64 24 2c	 mov	 DWORD PTR $T148146[esp+64], esp
  011aa	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@GCOPGHFP@CSPFriendGroupChange?$AA@
  011af	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  011b4	55		 push	 ebp
  011b5	8b ce		 mov	 ecx, esi
  011b7	e8 00 00 00 00	 call	 ??0CSPFriendGroupChange@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPFriendGroupChange::CSPFriendGroupChange
  011bc	eb 02		 jmp	 SHORT $L148148
$L148147:
  011be	33 c0		 xor	 eax, eax
$L148148:
  011c0	3b c3		 cmp	 eax, ebx
  011c2	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  011c6	0f 84 8c 0f 00
	00		 je	 $L148861

; 67   : PREDEFINE_QUERY(CSPFriendGroupName)

  011cc	68 48 0c 00 00	 push	 3144			; 00000c48H
  011d1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  011d6	8b f0		 mov	 esi, eax
  011d8	83 c4 04	 add	 esp, 4
  011db	89 74 24 14	 mov	 DWORD PTR $T148150[esp+36], esi
  011df	3b f3		 cmp	 esi, ebx
  011e1	c7 44 24 20 3c
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 60 ; 0000003cH
  011e9	74 1d		 je	 SHORT $L148152
  011eb	83 ec 1c	 sub	 esp, 28			; 0000001cH
  011ee	8b cc		 mov	 ecx, esp
  011f0	89 64 24 2c	 mov	 DWORD PTR $T148151[esp+64], esp
  011f4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@BOEMOACG@CSPFriendGroupName?$AA@
  011f9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  011fe	55		 push	 ebp
  011ff	8b ce		 mov	 ecx, esi
  01201	e8 00 00 00 00	 call	 ??0CSPFriendGroupName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPFriendGroupName::CSPFriendGroupName
  01206	eb 02		 jmp	 SHORT $L148153
$L148152:
  01208	33 c0		 xor	 eax, eax
$L148153:
  0120a	3b c3		 cmp	 eax, ebx
  0120c	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01210	0f 84 42 0f 00
	00		 je	 $L148861

; 68   : PREDEFINE_QUERY(CSPProtectedSearch)

  01216	68 38 0c 00 00	 push	 3128			; 00000c38H
  0121b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01220	8b f0		 mov	 esi, eax
  01222	83 c4 04	 add	 esp, 4
  01225	89 74 24 14	 mov	 DWORD PTR $T148155[esp+36], esi
  01229	3b f3		 cmp	 esi, ebx
  0122b	c7 44 24 20 3d
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 61 ; 0000003dH
  01233	74 1d		 je	 SHORT $L148157
  01235	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01238	8b cc		 mov	 ecx, esp
  0123a	89 64 24 2c	 mov	 DWORD PTR $T148156[esp+64], esp
  0123e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@DFHELEIA@CSPProtectedSearch?$AA@
  01243	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01248	55		 push	 ebp
  01249	8b ce		 mov	 ecx, esi
  0124b	e8 00 00 00 00	 call	 ??0CSPProtectedSearch@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPProtectedSearch::CSPProtectedSearch
  01250	eb 02		 jmp	 SHORT $L148158
$L148157:
  01252	33 c0		 xor	 eax, eax
$L148158:
  01254	3b c3		 cmp	 eax, ebx
  01256	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0125a	0f 84 f8 0e 00
	00		 je	 $L148861

; 69   : PREDEFINE_QUERY(CSPLoadService)

  01260	68 64 0c 00 00	 push	 3172			; 00000c64H
  01265	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0126a	8b f0		 mov	 esi, eax
  0126c	83 c4 04	 add	 esp, 4
  0126f	89 74 24 14	 mov	 DWORD PTR $T148160[esp+36], esi
  01273	3b f3		 cmp	 esi, ebx
  01275	c7 44 24 20 3e
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 62 ; 0000003eH
  0127d	74 1d		 je	 SHORT $L148162
  0127f	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01282	8b cc		 mov	 ecx, esp
  01284	89 64 24 2c	 mov	 DWORD PTR $T148161[esp+64], esp
  01288	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@EOMPGPJC@CSPLoadService?$AA@
  0128d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01292	55		 push	 ebp
  01293	8b ce		 mov	 ecx, esi
  01295	e8 00 00 00 00	 call	 ??0CSPLoadService@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPLoadService::CSPLoadService
  0129a	eb 02		 jmp	 SHORT $L148163
$L148162:
  0129c	33 c0		 xor	 eax, eax
$L148163:
  0129e	3b c3		 cmp	 eax, ebx
  012a0	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  012a4	0f 84 ae 0e 00
	00		 je	 $L148861

; 70   : PREDEFINE_QUERY(CSPGuildArticleAdd)

  012aa	68 70 15 00 00	 push	 5488			; 00001570H
  012af	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  012b4	8b f0		 mov	 esi, eax
  012b6	83 c4 04	 add	 esp, 4
  012b9	89 74 24 14	 mov	 DWORD PTR $T148165[esp+36], esi
  012bd	3b f3		 cmp	 esi, ebx
  012bf	c7 44 24 20 3f
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 63 ; 0000003fH
  012c7	74 1d		 je	 SHORT $L148167
  012c9	83 ec 1c	 sub	 esp, 28			; 0000001cH
  012cc	8b cc		 mov	 ecx, esp
  012ce	89 64 24 2c	 mov	 DWORD PTR $T148166[esp+64], esp
  012d2	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@PKBAFGDB@CSPGuildArticleAdd?$AA@
  012d7	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  012dc	55		 push	 ebp
  012dd	8b ce		 mov	 ecx, esi
  012df	e8 00 00 00 00	 call	 ??0CSPGuildArticleAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildArticleAdd::CSPGuildArticleAdd
  012e4	eb 02		 jmp	 SHORT $L148168
$L148167:
  012e6	33 c0		 xor	 eax, eax
$L148168:
  012e8	3b c3		 cmp	 eax, ebx
  012ea	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  012ee	0f 84 64 0e 00
	00		 je	 $L148861

; 71   : PREDEFINE_QUERY(CSPGuildArticleDel)

  012f4	68 34 0c 00 00	 push	 3124			; 00000c34H
  012f9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  012fe	8b f0		 mov	 esi, eax
  01300	83 c4 04	 add	 esp, 4
  01303	89 74 24 14	 mov	 DWORD PTR $T148170[esp+36], esi
  01307	3b f3		 cmp	 esi, ebx
  01309	c7 44 24 20 40
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 64 ; 00000040H
  01311	74 1d		 je	 SHORT $L148172
  01313	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01316	8b cc		 mov	 ecx, esp
  01318	89 64 24 2c	 mov	 DWORD PTR $T148171[esp+64], esp
  0131c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@ENFEGDM@CSPGuildArticleDel?$AA@
  01321	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01326	55		 push	 ebp
  01327	8b ce		 mov	 ecx, esi
  01329	e8 00 00 00 00	 call	 ??0CSPGuildArticleDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildArticleDel::CSPGuildArticleDel
  0132e	eb 02		 jmp	 SHORT $L148173
$L148172:
  01330	33 c0		 xor	 eax, eax
$L148173:
  01332	3b c3		 cmp	 eax, ebx
  01334	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01338	0f 84 1a 0e 00
	00		 je	 $L148861

; 72   : PREDEFINE_QUERY(CSPGuildArticleUpdate)

  0133e	68 38 15 00 00	 push	 5432			; 00001538H
  01343	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01348	8b f0		 mov	 esi, eax
  0134a	83 c4 04	 add	 esp, 4
  0134d	89 74 24 14	 mov	 DWORD PTR $T148175[esp+36], esi
  01351	3b f3		 cmp	 esi, ebx
  01353	c7 44 24 20 41
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 65 ; 00000041H
  0135b	74 1d		 je	 SHORT $L148177
  0135d	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01360	8b cc		 mov	 ecx, esp
  01362	89 64 24 2c	 mov	 DWORD PTR $T148176[esp+64], esp
  01366	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@BHMBFCLD@CSPGuildArticleUpdate?$AA@
  0136b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01370	55		 push	 ebp
  01371	8b ce		 mov	 ecx, esi
  01373	e8 00 00 00 00	 call	 ??0CSPGuildArticleUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildArticleUpdate::CSPGuildArticleUpdate
  01378	eb 02		 jmp	 SHORT $L148178
$L148177:
  0137a	33 c0		 xor	 eax, eax
$L148178:
  0137c	3b c3		 cmp	 eax, ebx
  0137e	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01382	0f 84 d0 0d 00
	00		 je	 $L148861

; 73   : PREDEFINE_QUERY(CSPGuildFame)

  01388	68 38 0c 00 00	 push	 3128			; 00000c38H
  0138d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01392	8b f0		 mov	 esi, eax
  01394	83 c4 04	 add	 esp, 4
  01397	89 74 24 14	 mov	 DWORD PTR $T148180[esp+36], esi
  0139b	3b f3		 cmp	 esi, ebx
  0139d	c7 44 24 20 42
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 66 ; 00000042H
  013a5	74 1d		 je	 SHORT $L148182
  013a7	83 ec 1c	 sub	 esp, 28			; 0000001cH
  013aa	8b cc		 mov	 ecx, esp
  013ac	89 64 24 2c	 mov	 DWORD PTR $T148181[esp+64], esp
  013b0	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@BJLOKBNA@CSPGuildFame?$AA@
  013b5	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  013ba	55		 push	 ebp
  013bb	8b ce		 mov	 ecx, esi
  013bd	e8 00 00 00 00	 call	 ??0CSPGuildFame@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildFame::CSPGuildFame
  013c2	eb 02		 jmp	 SHORT $L148183
$L148182:
  013c4	33 c0		 xor	 eax, eax
$L148183:
  013c6	3b c3		 cmp	 eax, ebx
  013c8	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  013cc	0f 84 86 0d 00
	00		 je	 $L148861

; 74   : PREDEFINE_QUERY(CSPGuildLevel)

  013d2	68 34 0c 00 00	 push	 3124			; 00000c34H
  013d7	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  013dc	8b f0		 mov	 esi, eax
  013de	83 c4 04	 add	 esp, 4
  013e1	89 74 24 14	 mov	 DWORD PTR $T148185[esp+36], esi
  013e5	3b f3		 cmp	 esi, ebx
  013e7	c7 44 24 20 43
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 67 ; 00000043H
  013ef	74 1d		 je	 SHORT $L148187
  013f1	83 ec 1c	 sub	 esp, 28			; 0000001cH
  013f4	8b cc		 mov	 ecx, esp
  013f6	89 64 24 2c	 mov	 DWORD PTR $T148186[esp+64], esp
  013fa	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0O@JMIBBNOG@CSPGuildLevel?$AA@
  013ff	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01404	55		 push	 ebp
  01405	8b ce		 mov	 ecx, esi
  01407	e8 00 00 00 00	 call	 ??0CSPGuildLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildLevel::CSPGuildLevel
  0140c	eb 02		 jmp	 SHORT $L148188
$L148187:
  0140e	33 c0		 xor	 eax, eax
$L148188:
  01410	3b c3		 cmp	 eax, ebx
  01412	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01416	0f 84 3c 0d 00
	00		 je	 $L148861

; 75   : PREDEFINE_QUERY(CSPGuildMaxCabinet)

  0141c	68 34 0c 00 00	 push	 3124			; 00000c34H
  01421	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01426	8b f0		 mov	 esi, eax
  01428	83 c4 04	 add	 esp, 4
  0142b	89 74 24 14	 mov	 DWORD PTR $T148190[esp+36], esi
  0142f	3b f3		 cmp	 esi, ebx
  01431	c7 44 24 20 44
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 68 ; 00000044H
  01439	74 1d		 je	 SHORT $L148192
  0143b	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0143e	8b cc		 mov	 ecx, esp
  01440	89 64 24 2c	 mov	 DWORD PTR $T148191[esp+64], esp
  01444	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@GJCFCJMB@CSPGuildMaxCabinet?$AA@
  01449	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0144e	55		 push	 ebp
  0144f	8b ce		 mov	 ecx, esi
  01451	e8 00 00 00 00	 call	 ??0CSPGuildMaxCabinet@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildMaxCabinet::CSPGuildMaxCabinet
  01456	eb 02		 jmp	 SHORT $L148193
$L148192:
  01458	33 c0		 xor	 eax, eax
$L148193:
  0145a	3b c3		 cmp	 eax, ebx
  0145c	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01460	0f 84 f2 0c 00
	00		 je	 $L148861

; 76   : PREDEFINE_QUERY(CSPGuildContribution)

  01466	68 44 0c 00 00	 push	 3140			; 00000c44H
  0146b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01470	8b f0		 mov	 esi, eax
  01472	83 c4 04	 add	 esp, 4
  01475	89 74 24 14	 mov	 DWORD PTR $T148195[esp+36], esi
  01479	3b f3		 cmp	 esi, ebx
  0147b	c7 44 24 20 45
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 69 ; 00000045H
  01483	74 1d		 je	 SHORT $L148197
  01485	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01488	8b cc		 mov	 ecx, esp
  0148a	89 64 24 2c	 mov	 DWORD PTR $T148196[esp+64], esp
  0148e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@KLNPGACF@CSPGuildContribution?$AA@
  01493	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01498	55		 push	 ebp
  01499	8b ce		 mov	 ecx, esi
  0149b	e8 00 00 00 00	 call	 ??0CSPGuildContribution@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildContribution::CSPGuildContribution
  014a0	eb 02		 jmp	 SHORT $L148198
$L148197:
  014a2	33 c0		 xor	 eax, eax
$L148198:
  014a4	3b c3		 cmp	 eax, ebx
  014a6	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  014aa	0f 84 a8 0c 00
	00		 je	 $L148861

; 77   : PREDEFINE_QUERY(CSPGuildVolunteerAdd)

  014b0	68 74 0c 00 00	 push	 3188			; 00000c74H
  014b5	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  014ba	8b f0		 mov	 esi, eax
  014bc	83 c4 04	 add	 esp, 4
  014bf	89 74 24 14	 mov	 DWORD PTR $T148200[esp+36], esi
  014c3	3b f3		 cmp	 esi, ebx
  014c5	c7 44 24 20 46
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 70 ; 00000046H
  014cd	74 1d		 je	 SHORT $L148202
  014cf	83 ec 1c	 sub	 esp, 28			; 0000001cH
  014d2	8b cc		 mov	 ecx, esp
  014d4	89 64 24 2c	 mov	 DWORD PTR $T148201[esp+64], esp
  014d8	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@MCBOHLID@CSPGuildVolunteerAdd?$AA@
  014dd	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  014e2	55		 push	 ebp
  014e3	8b ce		 mov	 ecx, esi
  014e5	e8 00 00 00 00	 call	 ??0CSPGuildVolunteerAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildVolunteerAdd::CSPGuildVolunteerAdd
  014ea	eb 02		 jmp	 SHORT $L148203
$L148202:
  014ec	33 c0		 xor	 eax, eax
$L148203:
  014ee	3b c3		 cmp	 eax, ebx
  014f0	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  014f4	0f 84 5e 0c 00
	00		 je	 $L148861

; 78   : PREDEFINE_QUERY(CSPGuildVolunteerDel)

  014fa	68 34 0c 00 00	 push	 3124			; 00000c34H
  014ff	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01504	8b f0		 mov	 esi, eax
  01506	83 c4 04	 add	 esp, 4
  01509	89 74 24 14	 mov	 DWORD PTR $T148205[esp+36], esi
  0150d	3b f3		 cmp	 esi, ebx
  0150f	c7 44 24 20 47
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 71 ; 00000047H
  01517	74 1d		 je	 SHORT $L148207
  01519	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0151c	8b cc		 mov	 ecx, esp
  0151e	89 64 24 2c	 mov	 DWORD PTR $T148206[esp+64], esp
  01522	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@DMNLGLIO@CSPGuildVolunteerDel?$AA@
  01527	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0152c	55		 push	 ebp
  0152d	8b ce		 mov	 ecx, esi
  0152f	e8 00 00 00 00	 call	 ??0CSPGuildVolunteerDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildVolunteerDel::CSPGuildVolunteerDel
  01534	eb 02		 jmp	 SHORT $L148208
$L148207:
  01536	33 c0		 xor	 eax, eax
$L148208:
  01538	3b c3		 cmp	 eax, ebx
  0153a	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0153e	0f 84 14 0c 00
	00		 je	 $L148861

; 79   : PREDEFINE_QUERY(CSPGuildTacticsAdd)

  01544	68 58 0c 00 00	 push	 3160			; 00000c58H
  01549	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0154e	8b f0		 mov	 esi, eax
  01550	83 c4 04	 add	 esp, 4
  01553	89 74 24 14	 mov	 DWORD PTR $T148210[esp+36], esi
  01557	3b f3		 cmp	 esi, ebx
  01559	c7 44 24 20 48
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 72 ; 00000048H
  01561	74 1d		 je	 SHORT $L148212
  01563	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01566	8b cc		 mov	 ecx, esp
  01568	89 64 24 2c	 mov	 DWORD PTR $T148211[esp+64], esp
  0156c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@HMLBIAKI@CSPGuildTacticsAdd?$AA@
  01571	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01576	55		 push	 ebp
  01577	8b ce		 mov	 ecx, esi
  01579	e8 00 00 00 00	 call	 ??0CSPGuildTacticsAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildTacticsAdd::CSPGuildTacticsAdd
  0157e	eb 02		 jmp	 SHORT $L148213
$L148212:
  01580	33 c0		 xor	 eax, eax
$L148213:
  01582	3b c3		 cmp	 eax, ebx
  01584	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01588	0f 84 ca 0b 00
	00		 je	 $L148861

; 80   : PREDEFINE_QUERY(CSPGuildTacticsDel)

  0158e	68 34 0c 00 00	 push	 3124			; 00000c34H
  01593	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01598	8b f0		 mov	 esi, eax
  0159a	83 c4 04	 add	 esp, 4
  0159d	89 74 24 14	 mov	 DWORD PTR $T148215[esp+36], esi
  015a1	3b f3		 cmp	 esi, ebx
  015a3	c7 44 24 20 49
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 73 ; 00000049H
  015ab	74 1d		 je	 SHORT $L148217
  015ad	83 ec 1c	 sub	 esp, 28			; 0000001cH
  015b0	8b cc		 mov	 ecx, esp
  015b2	89 64 24 2c	 mov	 DWORD PTR $T148216[esp+64], esp
  015b6	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@ICHEJAKF@CSPGuildTacticsDel?$AA@
  015bb	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  015c0	55		 push	 ebp
  015c1	8b ce		 mov	 ecx, esi
  015c3	e8 00 00 00 00	 call	 ??0CSPGuildTacticsDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildTacticsDel::CSPGuildTacticsDel
  015c8	eb 02		 jmp	 SHORT $L148218
$L148217:
  015ca	33 c0		 xor	 eax, eax
$L148218:
  015cc	3b c3		 cmp	 eax, ebx
  015ce	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  015d2	0f 84 80 0b 00
	00		 je	 $L148861

; 81   : PREDEFINE_QUERY(CSPSoulmateReg)

  015d8	68 34 0c 00 00	 push	 3124			; 00000c34H
  015dd	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  015e2	8b f0		 mov	 esi, eax
  015e4	83 c4 04	 add	 esp, 4
  015e7	89 74 24 14	 mov	 DWORD PTR $T148220[esp+36], esi
  015eb	3b f3		 cmp	 esi, ebx
  015ed	c7 44 24 20 4a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 74 ; 0000004aH
  015f5	74 1d		 je	 SHORT $L148222
  015f7	83 ec 1c	 sub	 esp, 28			; 0000001cH
  015fa	8b cc		 mov	 ecx, esp
  015fc	89 64 24 2c	 mov	 DWORD PTR $T148221[esp+64], esp
  01600	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@CBFOJEBG@CSPSoulmateReg?$AA@
  01605	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0160a	55		 push	 ebp
  0160b	8b ce		 mov	 ecx, esi
  0160d	e8 00 00 00 00	 call	 ??0CSPSoulmateReg@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSoulmateReg::CSPSoulmateReg
  01612	eb 02		 jmp	 SHORT $L148223
$L148222:
  01614	33 c0		 xor	 eax, eax
$L148223:
  01616	3b c3		 cmp	 eax, ebx
  01618	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0161c	0f 84 36 0b 00
	00		 je	 $L148861

; 82   : PREDEFINE_QUERY(CSPSoulmateEnd)

  01622	68 34 0c 00 00	 push	 3124			; 00000c34H
  01627	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0162c	8b f0		 mov	 esi, eax
  0162e	83 c4 04	 add	 esp, 4
  01631	89 74 24 14	 mov	 DWORD PTR $T148225[esp+36], esi
  01635	3b f3		 cmp	 esi, ebx
  01637	c7 44 24 20 4b
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 75 ; 0000004bH
  0163f	74 1d		 je	 SHORT $L148227
  01641	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01644	8b cc		 mov	 ecx, esp
  01646	89 64 24 2c	 mov	 DWORD PTR $T148226[esp+64], esp
  0164a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@MLOIEHBC@CSPSoulmateEnd?$AA@
  0164f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01654	55		 push	 ebp
  01655	8b ce		 mov	 ecx, esi
  01657	e8 00 00 00 00	 call	 ??0CSPSoulmateEnd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSoulmateEnd::CSPSoulmateEnd
  0165c	eb 02		 jmp	 SHORT $L148228
$L148227:
  0165e	33 c0		 xor	 eax, eax
$L148228:
  01660	3b c3		 cmp	 eax, ebx
  01662	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01666	0f 84 ec 0a 00
	00		 je	 $L148861

; 83   : PREDEFINE_QUERY(CSPSoulmateDel)

  0166c	68 34 0c 00 00	 push	 3124			; 00000c34H
  01671	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01676	8b f0		 mov	 esi, eax
  01678	83 c4 04	 add	 esp, 4
  0167b	89 74 24 14	 mov	 DWORD PTR $T148230[esp+36], esi
  0167f	3b f3		 cmp	 esi, ebx
  01681	c7 44 24 20 4c
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 76 ; 0000004cH
  01689	74 1d		 je	 SHORT $L148232
  0168b	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0168e	8b cc		 mov	 ecx, esp
  01690	89 64 24 2c	 mov	 DWORD PTR $T148231[esp+64], esp
  01694	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@LHNIEFJO@CSPSoulmateDel?$AA@
  01699	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0169e	55		 push	 ebp
  0169f	8b ce		 mov	 ecx, esi
  016a1	e8 00 00 00 00	 call	 ??0CSPSoulmateDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSoulmateDel::CSPSoulmateDel
  016a6	eb 02		 jmp	 SHORT $L148233
$L148232:
  016a8	33 c0		 xor	 eax, eax
$L148233:
  016aa	3b c3		 cmp	 eax, ebx
  016ac	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  016b0	0f 84 a2 0a 00
	00		 je	 $L148861

; 84   : PREDEFINE_QUERY(CSPGetReservedPost)

  016b6	68 18 16 00 00	 push	 5656			; 00001618H
  016bb	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  016c0	8b f0		 mov	 esi, eax
  016c2	83 c4 04	 add	 esp, 4
  016c5	89 74 24 14	 mov	 DWORD PTR $T148235[esp+36], esi
  016c9	3b f3		 cmp	 esi, ebx
  016cb	c7 44 24 20 4d
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 77 ; 0000004dH
  016d3	74 1d		 je	 SHORT $L148237
  016d5	83 ec 1c	 sub	 esp, 28			; 0000001cH
  016d8	8b cc		 mov	 ecx, esp
  016da	89 64 24 2c	 mov	 DWORD PTR $T148236[esp+64], esp
  016de	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@JPPBOFPA@CSPGetReservedPost?$AA@
  016e3	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  016e8	55		 push	 ebp
  016e9	8b ce		 mov	 ecx, esi
  016eb	e8 00 00 00 00	 call	 ??0CSPGetReservedPost@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetReservedPost::CSPGetReservedPost
  016f0	eb 02		 jmp	 SHORT $L148238
$L148237:
  016f2	33 c0		 xor	 eax, eax
$L148238:
  016f4	3b c3		 cmp	 eax, ebx
  016f6	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  016fa	0f 84 58 0a 00
	00		 je	 $L148861

; 85   : PREDEFINE_QUERY(CSPClearMapCurrentUser)

  01700	68 34 0c 00 00	 push	 3124			; 00000c34H
  01705	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0170a	8b f0		 mov	 esi, eax
  0170c	83 c4 04	 add	 esp, 4
  0170f	89 74 24 14	 mov	 DWORD PTR $T148240[esp+36], esi
  01713	3b f3		 cmp	 esi, ebx
  01715	c7 44 24 20 4e
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 78 ; 0000004eH
  0171d	74 1d		 je	 SHORT $L148242
  0171f	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01722	8b cc		 mov	 ecx, esp
  01724	89 64 24 2c	 mov	 DWORD PTR $T148241[esp+64], esp
  01728	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@NFPLBBEB@CSPClearMapCurrentUser?$AA@
  0172d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01732	55		 push	 ebp
  01733	8b ce		 mov	 ecx, esi
  01735	e8 00 00 00 00	 call	 ??0CSPClearMapCurrentUser@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPClearMapCurrentUser::CSPClearMapCurrentUser
  0173a	eb 02		 jmp	 SHORT $L148243
$L148242:
  0173c	33 c0		 xor	 eax, eax
$L148243:
  0173e	3b c3		 cmp	 eax, ebx
  01740	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01744	0f 84 0e 0a 00
	00		 je	 $L148861

; 86   : PREDEFINE_QUERY(CSPGetNation)

  0174a	68 30 0c 00 00	 push	 3120			; 00000c30H
  0174f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01754	8b f0		 mov	 esi, eax
  01756	83 c4 04	 add	 esp, 4
  01759	89 74 24 14	 mov	 DWORD PTR $T148245[esp+36], esi
  0175d	3b f3		 cmp	 esi, ebx
  0175f	c7 44 24 20 4f
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 79 ; 0000004fH
  01767	74 1d		 je	 SHORT $L148247
  01769	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0176c	8b cc		 mov	 ecx, esp
  0176e	89 64 24 2c	 mov	 DWORD PTR $T148246[esp+64], esp
  01772	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0N@KEAKLAPB@CSPGetNation?$AA@
  01777	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0177c	55		 push	 ebp
  0177d	8b ce		 mov	 ecx, esi
  0177f	e8 00 00 00 00	 call	 ??0CSPGetNation@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetNation::CSPGetNation
  01784	eb 02		 jmp	 SHORT $L148248
$L148247:
  01786	33 c0		 xor	 eax, eax
$L148248:
  01788	3b c3		 cmp	 eax, ebx
  0178a	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0178e	0f 84 c4 09 00
	00		 je	 $L148861

; 87   : PREDEFINE_QUERY(CSPItemStateChange)

  01794	68 34 0c 00 00	 push	 3124			; 00000c34H
  01799	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0179e	8b f0		 mov	 esi, eax
  017a0	83 c4 04	 add	 esp, 4
  017a3	89 74 24 14	 mov	 DWORD PTR $T148250[esp+36], esi
  017a7	3b f3		 cmp	 esi, ebx
  017a9	c7 44 24 20 50
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 80 ; 00000050H
  017b1	74 1d		 je	 SHORT $L148252
  017b3	83 ec 1c	 sub	 esp, 28			; 0000001cH
  017b6	8b cc		 mov	 ecx, esp
  017b8	89 64 24 2c	 mov	 DWORD PTR $T148251[esp+64], esp
  017bc	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@HEBAMJJB@CSPItemStateChange?$AA@
  017c1	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  017c6	55		 push	 ebp
  017c7	8b ce		 mov	 ecx, esi
  017c9	e8 00 00 00 00	 call	 ??0CSPItemStateChange@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPItemStateChange::CSPItemStateChange
  017ce	eb 02		 jmp	 SHORT $L148253
$L148252:
  017d0	33 c0		 xor	 eax, eax
$L148253:
  017d2	3b c3		 cmp	 eax, ebx
  017d4	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  017d8	0f 84 7a 09 00
	00		 je	 $L148861

; 88   : PREDEFINE_QUERY(CSPSaveGuildPvPoint)

  017de	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  017e3	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  017e8	8b f0		 mov	 esi, eax
  017ea	83 c4 04	 add	 esp, 4
  017ed	89 74 24 14	 mov	 DWORD PTR $T148255[esp+36], esi
  017f1	3b f3		 cmp	 esi, ebx
  017f3	c7 44 24 20 51
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 81 ; 00000051H
  017fb	74 1d		 je	 SHORT $L148257
  017fd	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01800	8b cc		 mov	 ecx, esp
  01802	89 64 24 2c	 mov	 DWORD PTR $T148256[esp+64], esp
  01806	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@LOKJEBEN@CSPSaveGuildPvPoint?$AA@
  0180b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01810	55		 push	 ebp
  01811	8b ce		 mov	 ecx, esi
  01813	e8 00 00 00 00	 call	 ??0CSPSaveGuildPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveGuildPvPoint::CSPSaveGuildPvPoint
  01818	eb 02		 jmp	 SHORT $L148258
$L148257:
  0181a	33 c0		 xor	 eax, eax
$L148258:
  0181c	3b c3		 cmp	 eax, ebx
  0181e	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01822	0f 84 30 09 00
	00		 je	 $L148861

; 89   : PREDEFINE_QUERY(CSPSaveGuildPvPRecord)

  01828	68 5c 0c 00 00	 push	 3164			; 00000c5cH
  0182d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01832	8b f0		 mov	 esi, eax
  01834	83 c4 04	 add	 esp, 4
  01837	89 74 24 14	 mov	 DWORD PTR $T148260[esp+36], esi
  0183b	3b f3		 cmp	 esi, ebx
  0183d	c7 44 24 20 52
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 82 ; 00000052H
  01845	74 1d		 je	 SHORT $L148262
  01847	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0184a	8b cc		 mov	 ecx, esp
  0184c	89 64 24 2c	 mov	 DWORD PTR $T148261[esp+64], esp
  01850	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@NDBGPMLM@CSPSaveGuildPvPRecord?$AA@
  01855	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0185a	55		 push	 ebp
  0185b	8b ce		 mov	 ecx, esi
  0185d	e8 00 00 00 00	 call	 ??0CSPSaveGuildPvPRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveGuildPvPRecord::CSPSaveGuildPvPRecord
  01862	eb 02		 jmp	 SHORT $L148263
$L148262:
  01864	33 c0		 xor	 eax, eax
$L148263:
  01866	3b c3		 cmp	 eax, ebx
  01868	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0186c	0f 84 e6 08 00
	00		 je	 $L148861

; 90   : PREDEFINE_QUERY(CSPSaveGuildPointReward)

  01872	68 70 0c 00 00	 push	 3184			; 00000c70H
  01877	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0187c	8b f0		 mov	 esi, eax
  0187e	83 c4 04	 add	 esp, 4
  01881	89 74 24 14	 mov	 DWORD PTR $T148265[esp+36], esi
  01885	3b f3		 cmp	 esi, ebx
  01887	c7 44 24 20 53
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 83 ; 00000053H
  0188f	74 1d		 je	 SHORT $L148267
  01891	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01894	8b cc		 mov	 ecx, esp
  01896	89 64 24 2c	 mov	 DWORD PTR $T148266[esp+64], esp
  0189a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@MDGHDNAF@CSPSaveGuildPointReward?$AA@
  0189f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  018a4	55		 push	 ebp
  018a5	8b ce		 mov	 ecx, esi
  018a7	e8 00 00 00 00	 call	 ??0CSPSaveGuildPointReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveGuildPointReward::CSPSaveGuildPointReward
  018ac	eb 02		 jmp	 SHORT $L148268
$L148267:
  018ae	33 c0		 xor	 eax, eax
$L148268:
  018b0	3b c3		 cmp	 eax, ebx
  018b2	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  018b6	0f 84 9c 08 00
	00		 je	 $L148861

; 91   : PREDEFINE_QUERY(CSPSaveCastleApplicant)

  018bc	68 38 0c 00 00	 push	 3128			; 00000c38H
  018c1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  018c6	8b f0		 mov	 esi, eax
  018c8	83 c4 04	 add	 esp, 4
  018cb	89 74 24 14	 mov	 DWORD PTR $T148270[esp+36], esi
  018cf	3b f3		 cmp	 esi, ebx
  018d1	c7 44 24 20 54
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 84 ; 00000054H
  018d9	74 1d		 je	 SHORT $L148272
  018db	83 ec 1c	 sub	 esp, 28			; 0000001cH
  018de	8b cc		 mov	 ecx, esp
  018e0	89 64 24 2c	 mov	 DWORD PTR $T148271[esp+64], esp
  018e4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BH@JLINGJDI@CSPSaveCastleApplicant?$AA@
  018e9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  018ee	55		 push	 ebp
  018ef	8b ce		 mov	 ecx, esi
  018f1	e8 00 00 00 00	 call	 ??0CSPSaveCastleApplicant@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveCastleApplicant::CSPSaveCastleApplicant
  018f6	eb 02		 jmp	 SHORT $L148273
$L148272:
  018f8	33 c0		 xor	 eax, eax
$L148273:
  018fa	3b c3		 cmp	 eax, ebx
  018fc	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01900	0f 84 52 08 00
	00		 je	 $L148861

; 92   : PREDEFINE_QUERY(CSPGetRecallID)

  01906	68 30 0c 00 00	 push	 3120			; 00000c30H
  0190b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01910	8b f0		 mov	 esi, eax
  01912	83 c4 04	 add	 esp, 4
  01915	89 74 24 14	 mov	 DWORD PTR $T148275[esp+36], esi
  01919	3b f3		 cmp	 esi, ebx
  0191b	c7 44 24 20 55
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 85 ; 00000055H
  01923	74 1d		 je	 SHORT $L148277
  01925	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01928	8b cc		 mov	 ecx, esp
  0192a	89 64 24 2c	 mov	 DWORD PTR $T148276[esp+64], esp
  0192e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@EAKFNGNN@CSPGetRecallID?$AA@
  01933	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01938	55		 push	 ebp
  01939	8b ce		 mov	 ecx, esi
  0193b	e8 00 00 00 00	 call	 ??0CSPGetRecallID@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetRecallID::CSPGetRecallID
  01940	eb 02		 jmp	 SHORT $L148278
$L148277:
  01942	33 c0		 xor	 eax, eax
$L148278:
  01944	3b c3		 cmp	 eax, ebx
  01946	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0194a	0f 84 08 08 00
	00		 je	 $L148861

; 93   : PREDEFINE_QUERY(CSPCashItemSale)

  01950	68 30 0c 00 00	 push	 3120			; 00000c30H
  01955	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0195a	8b f0		 mov	 esi, eax
  0195c	83 c4 04	 add	 esp, 4
  0195f	89 74 24 14	 mov	 DWORD PTR $T148280[esp+36], esi
  01963	3b f3		 cmp	 esi, ebx
  01965	c7 44 24 20 56
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 86 ; 00000056H
  0196d	74 1d		 je	 SHORT $L148282
  0196f	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01972	8b cc		 mov	 ecx, esp
  01974	89 64 24 2c	 mov	 DWORD PTR $T148281[esp+64], esp
  01978	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@CIPMMDCL@CSPCashItemSale?$AA@
  0197d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01982	55		 push	 ebp
  01983	8b ce		 mov	 ecx, esi
  01985	e8 00 00 00 00	 call	 ??0CSPCashItemSale@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPCashItemSale::CSPCashItemSale
  0198a	eb 02		 jmp	 SHORT $L148283
$L148282:
  0198c	33 c0		 xor	 eax, eax
$L148283:
  0198e	3b c3		 cmp	 eax, ebx
  01990	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01994	0f 84 be 07 00
	00		 je	 $L148861

; 94   : PREDEFINE_QUERY(CSPGuildWantedAdd)

  0199a	68 48 15 00 00	 push	 5448			; 00001548H
  0199f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  019a4	8b f0		 mov	 esi, eax
  019a6	83 c4 04	 add	 esp, 4
  019a9	89 74 24 14	 mov	 DWORD PTR $T148285[esp+36], esi
  019ad	3b f3		 cmp	 esi, ebx
  019af	c7 44 24 20 57
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 87 ; 00000057H
  019b7	74 1d		 je	 SHORT $L148287
  019b9	83 ec 1c	 sub	 esp, 28			; 0000001cH
  019bc	8b cc		 mov	 ecx, esp
  019be	89 64 24 2c	 mov	 DWORD PTR $T148286[esp+64], esp
  019c2	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@PGMELMBH@CSPGuildWantedAdd?$AA@
  019c7	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  019cc	55		 push	 ebp
  019cd	8b ce		 mov	 ecx, esi
  019cf	e8 00 00 00 00	 call	 ??0CSPGuildWantedAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildWantedAdd::CSPGuildWantedAdd
  019d4	eb 02		 jmp	 SHORT $L148288
$L148287:
  019d6	33 c0		 xor	 eax, eax
$L148288:
  019d8	3b c3		 cmp	 eax, ebx
  019da	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  019de	0f 84 74 07 00
	00		 je	 $L148861

; 95   : PREDEFINE_QUERY(CSPGuildWantedDel)

  019e4	68 30 0c 00 00	 push	 3120			; 00000c30H
  019e9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  019ee	8b f0		 mov	 esi, eax
  019f0	83 c4 04	 add	 esp, 4
  019f3	89 74 24 14	 mov	 DWORD PTR $T148290[esp+36], esi
  019f7	3b f3		 cmp	 esi, ebx
  019f9	c7 44 24 20 58
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 88 ; 00000058H
  01a01	74 1d		 je	 SHORT $L148292
  01a03	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01a06	8b cc		 mov	 ecx, esp
  01a08	89 64 24 2c	 mov	 DWORD PTR $T148291[esp+64], esp
  01a0c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@IABKMBK@CSPGuildWantedDel?$AA@
  01a11	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01a16	55		 push	 ebp
  01a17	8b ce		 mov	 ecx, esi
  01a19	e8 00 00 00 00	 call	 ??0CSPGuildWantedDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildWantedDel::CSPGuildWantedDel
  01a1e	eb 02		 jmp	 SHORT $L148293
$L148292:
  01a20	33 c0		 xor	 eax, eax
$L148293:
  01a22	3b c3		 cmp	 eax, ebx
  01a24	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01a28	0f 84 2a 07 00
	00		 je	 $L148861

; 96   : PREDEFINE_QUERY(CSPGuildTacticsWantedAdd)

  01a2e	68 5c 15 00 00	 push	 5468			; 0000155cH
  01a33	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01a38	8b f0		 mov	 esi, eax
  01a3a	83 c4 04	 add	 esp, 4
  01a3d	89 74 24 14	 mov	 DWORD PTR $T148295[esp+36], esi
  01a41	3b f3		 cmp	 esi, ebx
  01a43	c7 44 24 20 59
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 89 ; 00000059H
  01a4b	74 1d		 je	 SHORT $L148297
  01a4d	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01a50	8b cc		 mov	 ecx, esp
  01a52	89 64 24 2c	 mov	 DWORD PTR $T148296[esp+64], esp
  01a56	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@MCAHKKJ@CSPGuildTacticsWantedAdd?$AA@
  01a5b	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01a60	55		 push	 ebp
  01a61	8b ce		 mov	 ecx, esi
  01a63	e8 00 00 00 00	 call	 ??0CSPGuildTacticsWantedAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildTacticsWantedAdd::CSPGuildTacticsWantedAdd
  01a68	eb 02		 jmp	 SHORT $L148298
$L148297:
  01a6a	33 c0		 xor	 eax, eax
$L148298:
  01a6c	3b c3		 cmp	 eax, ebx
  01a6e	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01a72	0f 84 e0 06 00
	00		 je	 $L148861

; 97   : PREDEFINE_QUERY(CSPGuildTacticsWantedDel)

  01a78	68 30 0c 00 00	 push	 3120			; 00000c30H
  01a7d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01a82	8b f0		 mov	 esi, eax
  01a84	83 c4 04	 add	 esp, 4
  01a87	89 74 24 14	 mov	 DWORD PTR $T148300[esp+36], esi
  01a8b	3b f3		 cmp	 esi, ebx
  01a8d	c7 44 24 20 5a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 90 ; 0000005aH
  01a95	74 1d		 je	 SHORT $L148302
  01a97	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01a9a	8b cc		 mov	 ecx, esp
  01a9c	89 64 24 2c	 mov	 DWORD PTR $T148301[esp+64], esp
  01aa0	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BJ@PCOFGKKE@CSPGuildTacticsWantedDel?$AA@
  01aa5	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01aaa	55		 push	 ebp
  01aab	8b ce		 mov	 ecx, esi
  01aad	e8 00 00 00 00	 call	 ??0CSPGuildTacticsWantedDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildTacticsWantedDel::CSPGuildTacticsWantedDel
  01ab2	eb 02		 jmp	 SHORT $L148303
$L148302:
  01ab4	33 c0		 xor	 eax, eax
$L148303:
  01ab6	3b c3		 cmp	 eax, ebx
  01ab8	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01abc	0f 84 96 06 00
	00		 je	 $L148861

; 98   : PREDEFINE_QUERY(CSPGuildTacticsAdd)

  01ac2	68 58 0c 00 00	 push	 3160			; 00000c58H
  01ac7	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01acc	8b f0		 mov	 esi, eax
  01ace	83 c4 04	 add	 esp, 4
  01ad1	89 74 24 14	 mov	 DWORD PTR $T148305[esp+36], esi
  01ad5	3b f3		 cmp	 esi, ebx
  01ad7	c7 44 24 20 5b
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 91 ; 0000005bH
  01adf	74 1d		 je	 SHORT $L148307
  01ae1	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01ae4	8b cc		 mov	 ecx, esp
  01ae6	89 64 24 2c	 mov	 DWORD PTR $T148306[esp+64], esp
  01aea	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@HMLBIAKI@CSPGuildTacticsAdd?$AA@
  01aef	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01af4	55		 push	 ebp
  01af5	8b ce		 mov	 ecx, esi
  01af7	e8 00 00 00 00	 call	 ??0CSPGuildTacticsAdd@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildTacticsAdd::CSPGuildTacticsAdd
  01afc	eb 02		 jmp	 SHORT $L148308
$L148307:
  01afe	33 c0		 xor	 eax, eax
$L148308:
  01b00	3b c3		 cmp	 eax, ebx
  01b02	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01b06	0f 84 4c 06 00
	00		 je	 $L148861

; 99   : PREDEFINE_QUERY(CSPGuildTacticsDel)

  01b0c	68 34 0c 00 00	 push	 3124			; 00000c34H
  01b11	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01b16	8b f0		 mov	 esi, eax
  01b18	83 c4 04	 add	 esp, 4
  01b1b	89 74 24 14	 mov	 DWORD PTR $T148310[esp+36], esi
  01b1f	3b f3		 cmp	 esi, ebx
  01b21	c7 44 24 20 5c
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 92 ; 0000005cH
  01b29	74 1d		 je	 SHORT $L148312
  01b2b	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01b2e	8b cc		 mov	 ecx, esp
  01b30	89 64 24 2c	 mov	 DWORD PTR $T148311[esp+64], esp
  01b34	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@ICHEJAKF@CSPGuildTacticsDel?$AA@
  01b39	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01b3e	55		 push	 ebp
  01b3f	8b ce		 mov	 ecx, esi
  01b41	e8 00 00 00 00	 call	 ??0CSPGuildTacticsDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildTacticsDel::CSPGuildTacticsDel
  01b46	eb 02		 jmp	 SHORT $L148313
$L148312:
  01b48	33 c0		 xor	 eax, eax
$L148313:
  01b4a	3b c3		 cmp	 eax, ebx
  01b4c	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01b50	0f 84 02 06 00
	00		 je	 $L148861

; 100  : PREDEFINE_QUERY(CSPGuildVolunteering)

  01b56	68 38 0c 00 00	 push	 3128			; 00000c38H
  01b5b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01b60	8b f0		 mov	 esi, eax
  01b62	83 c4 04	 add	 esp, 4
  01b65	89 74 24 14	 mov	 DWORD PTR $T148315[esp+36], esi
  01b69	3b f3		 cmp	 esi, ebx
  01b6b	c7 44 24 20 5d
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 93 ; 0000005dH
  01b73	74 1d		 je	 SHORT $L148317
  01b75	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01b78	8b cc		 mov	 ecx, esp
  01b7a	89 64 24 2c	 mov	 DWORD PTR $T148316[esp+64], esp
  01b7e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@IBCCCKEH@CSPGuildVolunteering?$AA@
  01b83	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01b88	55		 push	 ebp
  01b89	8b ce		 mov	 ecx, esi
  01b8b	e8 00 00 00 00	 call	 ??0CSPGuildVolunteering@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildVolunteering::CSPGuildVolunteering
  01b90	eb 02		 jmp	 SHORT $L148318
$L148317:
  01b92	33 c0		 xor	 eax, eax
$L148318:
  01b94	3b c3		 cmp	 eax, ebx
  01b96	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01b9a	0f 84 b8 05 00
	00		 je	 $L148861

; 101  : PREDEFINE_QUERY(CSPGuildVolunteeringDel)

  01ba0	68 34 0c 00 00	 push	 3124			; 00000c34H
  01ba5	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01baa	8b f0		 mov	 esi, eax
  01bac	83 c4 04	 add	 esp, 4
  01baf	89 74 24 14	 mov	 DWORD PTR $T148320[esp+36], esi
  01bb3	3b f3		 cmp	 esi, ebx
  01bb5	c7 44 24 20 5e
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 94 ; 0000005eH
  01bbd	74 1d		 je	 SHORT $L148322
  01bbf	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01bc2	8b cc		 mov	 ecx, esp
  01bc4	89 64 24 2c	 mov	 DWORD PTR $T148321[esp+64], esp
  01bc8	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@FMPMPEAC@CSPGuildVolunteeringDel?$AA@
  01bcd	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01bd2	55		 push	 ebp
  01bd3	8b ce		 mov	 ecx, esi
  01bd5	e8 00 00 00 00	 call	 ??0CSPGuildVolunteeringDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGuildVolunteeringDel::CSPGuildVolunteeringDel
  01bda	eb 02		 jmp	 SHORT $L148323
$L148322:
  01bdc	33 c0		 xor	 eax, eax
$L148323:
  01bde	3b c3		 cmp	 eax, ebx
  01be0	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01be4	0f 84 6e 05 00
	00		 je	 $L148861

; 102  : PREDEFINE_QUERY(CSPSaveTacticsGainPoint)

  01bea	68 34 0c 00 00	 push	 3124			; 00000c34H
  01bef	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01bf4	8b f0		 mov	 esi, eax
  01bf6	83 c4 04	 add	 esp, 4
  01bf9	89 74 24 14	 mov	 DWORD PTR $T148325[esp+36], esi
  01bfd	3b f3		 cmp	 esi, ebx
  01bff	c7 44 24 20 5f
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 95 ; 0000005fH
  01c07	74 1d		 je	 SHORT $L148327
  01c09	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01c0c	8b cc		 mov	 ecx, esp
  01c0e	89 64 24 2c	 mov	 DWORD PTR $T148326[esp+64], esp
  01c12	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BI@JPBEDNLG@CSPSaveTacticsGainPoint?$AA@
  01c17	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01c1c	55		 push	 ebp
  01c1d	8b ce		 mov	 ecx, esi
  01c1f	e8 00 00 00 00	 call	 ??0CSPSaveTacticsGainPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveTacticsGainPoint::CSPSaveTacticsGainPoint
  01c24	eb 02		 jmp	 SHORT $L148328
$L148327:
  01c26	33 c0		 xor	 eax, eax
$L148328:
  01c28	3b c3		 cmp	 eax, ebx
  01c2a	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01c2e	0f 84 24 05 00
	00		 je	 $L148861

; 103  : PREDEFINE_QUERY(CSPSaveMonthRank)  

  01c34	68 b8 0d 00 00	 push	 3512			; 00000db8H
  01c39	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01c3e	8b f0		 mov	 esi, eax
  01c40	83 c4 04	 add	 esp, 4
  01c43	89 74 24 14	 mov	 DWORD PTR $T148330[esp+36], esi
  01c47	3b f3		 cmp	 esi, ebx
  01c49	c7 44 24 20 60
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 96 ; 00000060H
  01c51	74 1d		 je	 SHORT $L148332
  01c53	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01c56	8b cc		 mov	 ecx, esp
  01c58	89 64 24 2c	 mov	 DWORD PTR $T148331[esp+64], esp
  01c5c	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@OBEJAKAN@CSPSaveMonthRank?$AA@
  01c61	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01c66	55		 push	 ebp
  01c67	8b ce		 mov	 ecx, esi
  01c69	e8 00 00 00 00	 call	 ??0CSPSaveMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPSaveMonthRank::CSPSaveMonthRank
  01c6e	eb 02		 jmp	 SHORT $L148333
$L148332:
  01c70	33 c0		 xor	 eax, eax
$L148333:
  01c72	3b c3		 cmp	 eax, ebx
  01c74	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01c78	0f 84 da 04 00
	00		 je	 $L148861

; 104  : PREDEFINE_QUERY(CSPInitMonthPvPoint)

  01c7e	68 c0 0c 00 00	 push	 3264			; 00000cc0H
  01c83	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01c88	8b f0		 mov	 esi, eax
  01c8a	83 c4 04	 add	 esp, 4
  01c8d	89 74 24 14	 mov	 DWORD PTR $T148335[esp+36], esi
  01c91	3b f3		 cmp	 esi, ebx
  01c93	c7 44 24 20 61
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 97 ; 00000061H
  01c9b	74 1d		 je	 SHORT $L148337
  01c9d	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01ca0	8b cc		 mov	 ecx, esp
  01ca2	89 64 24 2c	 mov	 DWORD PTR $T148336[esp+64], esp
  01ca6	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@NJGPKFKL@CSPInitMonthPvPoint?$AA@
  01cab	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01cb0	55		 push	 ebp
  01cb1	8b ce		 mov	 ecx, esi
  01cb3	e8 00 00 00 00	 call	 ??0CSPInitMonthPvPoint@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPInitMonthPvPoint::CSPInitMonthPvPoint
  01cb8	eb 02		 jmp	 SHORT $L148338
$L148337:
  01cba	33 c0		 xor	 eax, eax
$L148338:
  01cbc	3b c3		 cmp	 eax, ebx
  01cbe	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01cc2	0f 84 90 04 00
	00		 je	 $L148861

; 105  : PREDEFINE_QUERY(CSPInitMonthRank)

  01cc8	68 30 0c 00 00	 push	 3120			; 00000c30H
  01ccd	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01cd2	8b f0		 mov	 esi, eax
  01cd4	83 c4 04	 add	 esp, 4
  01cd7	89 74 24 14	 mov	 DWORD PTR $T148340[esp+36], esi
  01cdb	3b f3		 cmp	 esi, ebx
  01cdd	c7 44 24 20 62
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 98 ; 00000062H
  01ce5	74 1d		 je	 SHORT $L148342
  01ce7	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01cea	8b cc		 mov	 ecx, esp
  01cec	89 64 24 2c	 mov	 DWORD PTR $T148341[esp+64], esp
  01cf0	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@GDEIFAEJ@CSPInitMonthRank?$AA@
  01cf5	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01cfa	55		 push	 ebp
  01cfb	8b ce		 mov	 ecx, esi
  01cfd	e8 00 00 00 00	 call	 ??0CSPInitMonthRank@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPInitMonthRank::CSPInitMonthRank
  01d02	eb 02		 jmp	 SHORT $L148343
$L148342:
  01d04	33 c0		 xor	 eax, eax
$L148343:
  01d06	3b c3		 cmp	 eax, ebx
  01d08	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01d0c	0f 84 46 04 00
	00		 je	 $L148861

; 106  : PREDEFINE_QUERY(CSPEventQuarterUpdate)  

  01d12	68 a0 13 00 00	 push	 5024			; 000013a0H
  01d17	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01d1c	8b f0		 mov	 esi, eax
  01d1e	83 c4 04	 add	 esp, 4
  01d21	89 74 24 14	 mov	 DWORD PTR $T148345[esp+36], esi
  01d25	3b f3		 cmp	 esi, ebx
  01d27	c7 44 24 20 63
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 99 ; 00000063H
  01d2f	74 1d		 je	 SHORT $L148347
  01d31	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01d34	8b cc		 mov	 ecx, esp
  01d36	89 64 24 2c	 mov	 DWORD PTR $T148346[esp+64], esp
  01d3a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BG@MCCLKMPC@CSPEventQuarterUpdate?$AA@
  01d3f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01d44	55		 push	 ebp
  01d45	8b ce		 mov	 ecx, esi
  01d47	e8 00 00 00 00	 call	 ??0CSPEventQuarterUpdate@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPEventQuarterUpdate::CSPEventQuarterUpdate
  01d4c	eb 02		 jmp	 SHORT $L148348
$L148347:
  01d4e	33 c0		 xor	 eax, eax
$L148348:
  01d50	3b c3		 cmp	 eax, ebx
  01d52	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01d56	0f 84 fc 03 00
	00		 je	 $L148861

; 107  : PREDEFINE_QUERY(CSPGetItemName)

  01d5c	68 38 0d 00 00	 push	 3384			; 00000d38H
  01d61	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01d66	8b f0		 mov	 esi, eax
  01d68	83 c4 04	 add	 esp, 4
  01d6b	89 74 24 14	 mov	 DWORD PTR $T148350[esp+36], esi
  01d6f	3b f3		 cmp	 esi, ebx
  01d71	c7 44 24 20 64
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 100 ; 00000064H
  01d79	74 1d		 je	 SHORT $L148352
  01d7b	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01d7e	8b cc		 mov	 ecx, esp
  01d80	89 64 24 2c	 mov	 DWORD PTR $T148351[esp+64], esp
  01d84	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@DAIDJBOD@CSPGetItemName?$AA@
  01d89	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01d8e	55		 push	 ebp
  01d8f	8b ce		 mov	 ecx, esi
  01d91	e8 00 00 00 00	 call	 ??0CSPGetItemName@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetItemName::CSPGetItemName
  01d96	eb 02		 jmp	 SHORT $L148353
$L148352:
  01d98	33 c0		 xor	 eax, eax
$L148353:
  01d9a	3b c3		 cmp	 eax, ebx
  01d9c	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01da0	0f 84 b2 03 00
	00		 je	 $L148861

; 108  : PREDEFINE_QUERY(CSPTournamentPayback)

  01da6	68 40 0c 00 00	 push	 3136			; 00000c40H
  01dab	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01db0	8b f0		 mov	 esi, eax
  01db2	83 c4 04	 add	 esp, 4
  01db5	89 74 24 14	 mov	 DWORD PTR $T148355[esp+36], esi
  01db9	3b f3		 cmp	 esi, ebx
  01dbb	c7 44 24 20 65
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 101 ; 00000065H
  01dc3	74 1d		 je	 SHORT $L148357
  01dc5	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01dc8	8b cc		 mov	 ecx, esp
  01dca	89 64 24 2c	 mov	 DWORD PTR $T148356[esp+64], esp
  01dce	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@KNNLENBO@CSPTournamentPayback?$AA@
  01dd3	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01dd8	55		 push	 ebp
  01dd9	8b ce		 mov	 ecx, esi
  01ddb	e8 00 00 00 00	 call	 ??0CSPTournamentPayback@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTournamentPayback::CSPTournamentPayback
  01de0	eb 02		 jmp	 SHORT $L148358
$L148357:
  01de2	33 c0		 xor	 eax, eax
$L148358:
  01de4	3b c3		 cmp	 eax, ebx
  01de6	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01dea	0f 84 68 03 00
	00		 je	 $L148861

; 109  : PREDEFINE_QUERY(CSPTournamentResult)

  01df0	68 38 0c 00 00	 push	 3128			; 00000c38H
  01df5	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01dfa	8b f0		 mov	 esi, eax
  01dfc	83 c4 04	 add	 esp, 4
  01dff	89 74 24 14	 mov	 DWORD PTR $T148360[esp+36], esi
  01e03	3b f3		 cmp	 esi, ebx
  01e05	c7 44 24 20 66
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 102 ; 00000066H
  01e0d	74 1d		 je	 SHORT $L148362
  01e0f	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01e12	8b cc		 mov	 ecx, esp
  01e14	89 64 24 2c	 mov	 DWORD PTR $T148361[esp+64], esp
  01e18	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@OAIONDMH@CSPTournamentResult?$AA@
  01e1d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01e22	55		 push	 ebp
  01e23	8b ce		 mov	 ecx, esi
  01e25	e8 00 00 00 00	 call	 ??0CSPTournamentResult@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTournamentResult::CSPTournamentResult
  01e2a	eb 02		 jmp	 SHORT $L148363
$L148362:
  01e2c	33 c0		 xor	 eax, eax
$L148363:
  01e2e	3b c3		 cmp	 eax, ebx
  01e30	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01e34	0f 84 1e 03 00
	00		 je	 $L148861

; 110  : PREDEFINE_QUERY(CSPTournamentApply)

  01e3a	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  01e3f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01e44	8b f0		 mov	 esi, eax
  01e46	83 c4 04	 add	 esp, 4
  01e49	89 74 24 14	 mov	 DWORD PTR $T148365[esp+36], esi
  01e4d	3b f3		 cmp	 esi, ebx
  01e4f	c7 44 24 20 67
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 103 ; 00000067H
  01e57	74 1d		 je	 SHORT $L148367
  01e59	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01e5c	8b cc		 mov	 ecx, esp
  01e5e	89 64 24 2c	 mov	 DWORD PTR $T148366[esp+64], esp
  01e62	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@BHOHNFON@CSPTournamentApply?$AA@
  01e67	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01e6c	55		 push	 ebp
  01e6d	8b ce		 mov	 ecx, esi
  01e6f	e8 00 00 00 00	 call	 ??0CSPTournamentApply@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTournamentApply::CSPTournamentApply
  01e74	eb 02		 jmp	 SHORT $L148368
$L148367:
  01e76	33 c0		 xor	 eax, eax
$L148368:
  01e78	3b c3		 cmp	 eax, ebx
  01e7a	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01e7e	0f 84 d4 02 00
	00		 je	 $L148861

; 111  : PREDEFINE_QUERY(CSPTournamentClear)

  01e84	68 30 0c 00 00	 push	 3120			; 00000c30H
  01e89	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01e8e	8b f0		 mov	 esi, eax
  01e90	83 c4 04	 add	 esp, 4
  01e93	89 74 24 14	 mov	 DWORD PTR $T148370[esp+36], esi
  01e97	3b f3		 cmp	 esi, ebx
  01e99	c7 44 24 20 68
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 104 ; 00000068H
  01ea1	74 1d		 je	 SHORT $L148372
  01ea3	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01ea6	8b cc		 mov	 ecx, esp
  01ea8	89 64 24 2c	 mov	 DWORD PTR $T148371[esp+64], esp
  01eac	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@HDNEODFA@CSPTournamentClear?$AA@
  01eb1	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01eb6	55		 push	 ebp
  01eb7	8b ce		 mov	 ecx, esi
  01eb9	e8 00 00 00 00	 call	 ??0CSPTournamentClear@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTournamentClear::CSPTournamentClear
  01ebe	eb 02		 jmp	 SHORT $L148373
$L148372:
  01ec0	33 c0		 xor	 eax, eax
$L148373:
  01ec2	3b c3		 cmp	 eax, ebx
  01ec4	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01ec8	0f 84 8a 02 00
	00		 je	 $L148861

; 112  : PREDEFINE_QUERY(CSPTournamentStatus)

  01ece	68 30 0c 00 00	 push	 3120			; 00000c30H
  01ed3	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01ed8	8b f0		 mov	 esi, eax
  01eda	83 c4 04	 add	 esp, 4
  01edd	89 74 24 14	 mov	 DWORD PTR $T148375[esp+36], esi
  01ee1	3b f3		 cmp	 esi, ebx
  01ee3	c7 44 24 20 69
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 105 ; 00000069H
  01eeb	74 1d		 je	 SHORT $L148377
  01eed	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01ef0	8b cc		 mov	 ecx, esp
  01ef2	89 64 24 2c	 mov	 DWORD PTR $T148376[esp+64], esp
  01ef6	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BE@HAFJKEPC@CSPTournamentStatus?$AA@
  01efb	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01f00	55		 push	 ebp
  01f01	8b ce		 mov	 ecx, esi
  01f03	e8 00 00 00 00	 call	 ??0CSPTournamentStatus@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTournamentStatus::CSPTournamentStatus
  01f08	eb 02		 jmp	 SHORT $L148378
$L148377:
  01f0a	33 c0		 xor	 eax, eax
$L148378:
  01f0c	3b c3		 cmp	 eax, ebx
  01f0e	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01f12	0f 84 40 02 00
	00		 je	 $L148861

; 113  : PREDEFINE_QUERY(CSPTnmtEventTime)

  01f18	68 34 0c 00 00	 push	 3124			; 00000c34H
  01f1d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01f22	8b f0		 mov	 esi, eax
  01f24	83 c4 04	 add	 esp, 4
  01f27	89 74 24 14	 mov	 DWORD PTR $T148380[esp+36], esi
  01f2b	3b f3		 cmp	 esi, ebx
  01f2d	c7 44 24 20 6a
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 106 ; 0000006aH
  01f35	74 1d		 je	 SHORT $L148382
  01f37	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01f3a	8b cc		 mov	 ecx, esp
  01f3c	89 64 24 2c	 mov	 DWORD PTR $T148381[esp+64], esp
  01f40	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@JOFDMAHB@CSPTnmtEventTime?$AA@
  01f45	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01f4a	55		 push	 ebp
  01f4b	8b ce		 mov	 ecx, esi
  01f4d	e8 00 00 00 00	 call	 ??0CSPTnmtEventTime@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTnmtEventTime::CSPTnmtEventTime
  01f52	eb 02		 jmp	 SHORT $L148383
$L148382:
  01f54	33 c0		 xor	 eax, eax
$L148383:
  01f56	3b c3		 cmp	 eax, ebx
  01f58	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01f5c	0f 84 f6 01 00
	00		 je	 $L148861

; 114  : PREDEFINE_QUERY(CSPTnmtEventSchedule)

  01f62	68 34 0c 00 00	 push	 3124			; 00000c34H
  01f67	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01f6c	8b f0		 mov	 esi, eax
  01f6e	83 c4 04	 add	 esp, 4
  01f71	89 74 24 14	 mov	 DWORD PTR $T148385[esp+36], esi
  01f75	3b f3		 cmp	 esi, ebx
  01f77	c7 44 24 20 6b
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 107 ; 0000006bH
  01f7f	74 1d		 je	 SHORT $L148387
  01f81	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01f84	8b cc		 mov	 ecx, esp
  01f86	89 64 24 2c	 mov	 DWORD PTR $T148386[esp+64], esp
  01f8a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BF@KIAJDEO@CSPTnmtEventSchedule?$AA@
  01f8f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01f94	55		 push	 ebp
  01f95	8b ce		 mov	 ecx, esi
  01f97	e8 00 00 00 00	 call	 ??0CSPTnmtEventSchedule@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTnmtEventSchedule::CSPTnmtEventSchedule
  01f9c	eb 02		 jmp	 SHORT $L148388
$L148387:
  01f9e	33 c0		 xor	 eax, eax
$L148388:
  01fa0	3b c3		 cmp	 eax, ebx
  01fa2	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01fa6	0f 84 ac 01 00
	00		 je	 $L148861

; 115  : PREDEFINE_QUERY(CSPTnmtEventDel)

  01fac	68 30 0c 00 00	 push	 3120			; 00000c30H
  01fb1	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  01fb6	8b f0		 mov	 esi, eax
  01fb8	83 c4 04	 add	 esp, 4
  01fbb	89 74 24 14	 mov	 DWORD PTR $T148390[esp+36], esi
  01fbf	3b f3		 cmp	 esi, ebx
  01fc1	c7 44 24 20 6c
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 108 ; 0000006cH
  01fc9	74 1d		 je	 SHORT $L148392
  01fcb	83 ec 1c	 sub	 esp, 28			; 0000001cH
  01fce	8b cc		 mov	 ecx, esp
  01fd0	89 64 24 2c	 mov	 DWORD PTR $T148391[esp+64], esp
  01fd4	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BA@EKJFNIGK@CSPTnmtEventDel?$AA@
  01fd9	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  01fde	55		 push	 ebp
  01fdf	8b ce		 mov	 ecx, esi
  01fe1	e8 00 00 00 00	 call	 ??0CSPTnmtEventDel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTnmtEventDel::CSPTnmtEventDel
  01fe6	eb 02		 jmp	 SHORT $L148393
$L148392:
  01fe8	33 c0		 xor	 eax, eax
$L148393:
  01fea	3b c3		 cmp	 eax, ebx
  01fec	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  01ff0	0f 84 62 01 00
	00		 je	 $L148861

; 116  : PREDEFINE_QUERY(CSPTnmtEventEntry)

  01ff6	68 78 0c 00 00	 push	 3192			; 00000c78H
  01ffb	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02000	8b f0		 mov	 esi, eax
  02002	83 c4 04	 add	 esp, 4
  02005	89 74 24 14	 mov	 DWORD PTR $T148395[esp+36], esi
  02009	3b f3		 cmp	 esi, ebx
  0200b	c7 44 24 20 6d
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 109 ; 0000006dH
  02013	74 1d		 je	 SHORT $L148397
  02015	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02018	8b cc		 mov	 ecx, esp
  0201a	89 64 24 2c	 mov	 DWORD PTR $T148396[esp+64], esp
  0201e	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BC@JHLDHABL@CSPTnmtEventEntry?$AA@
  02023	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02028	55		 push	 ebp
  02029	8b ce		 mov	 ecx, esi
  0202b	e8 00 00 00 00	 call	 ??0CSPTnmtEventEntry@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTnmtEventEntry::CSPTnmtEventEntry
  02030	eb 02		 jmp	 SHORT $L148398
$L148397:
  02032	33 c0		 xor	 eax, eax
$L148398:
  02034	3b c3		 cmp	 eax, ebx
  02036	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  0203a	0f 84 18 01 00
	00		 je	 $L148861

; 117  : PREDEFINE_QUERY(CSPTnmtEventReward)

  02040	68 3c 0c 00 00	 push	 3132			; 00000c3cH
  02045	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0204a	8b f0		 mov	 esi, eax
  0204c	83 c4 04	 add	 esp, 4
  0204f	89 74 24 14	 mov	 DWORD PTR $T148400[esp+36], esi
  02053	3b f3		 cmp	 esi, ebx
  02055	c7 44 24 20 6e
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 110 ; 0000006eH
  0205d	74 1d		 je	 SHORT $L148402
  0205f	83 ec 1c	 sub	 esp, 28			; 0000001cH
  02062	8b cc		 mov	 ecx, esp
  02064	89 64 24 2c	 mov	 DWORD PTR $T148401[esp+64], esp
  02068	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@EKIEOLPM@CSPTnmtEventReward?$AA@
  0206d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02072	55		 push	 ebp
  02073	8b ce		 mov	 ecx, esi
  02075	e8 00 00 00 00	 call	 ??0CSPTnmtEventReward@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPTnmtEventReward::CSPTnmtEventReward
  0207a	eb 02		 jmp	 SHORT $L148403
$L148402:
  0207c	33 c0		 xor	 eax, eax
$L148403:
  0207e	3b c3		 cmp	 eax, ebx
  02080	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02084	0f 84 ce 00 00
	00		 je	 $L148861

; 118  : PREDEFINE_QUERY(CSPHelpMessage)

  0208a	68 54 14 00 00	 push	 5204			; 00001454H
  0208f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02094	8b f0		 mov	 esi, eax
  02096	83 c4 04	 add	 esp, 4
  02099	89 74 24 14	 mov	 DWORD PTR $T148405[esp+36], esi
  0209d	3b f3		 cmp	 esi, ebx
  0209f	c7 44 24 20 6f
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 111 ; 0000006fH
  020a7	74 1d		 je	 SHORT $L148407
  020a9	83 ec 1c	 sub	 esp, 28			; 0000001cH
  020ac	8b cc		 mov	 ecx, esp
  020ae	89 64 24 2c	 mov	 DWORD PTR $T148406[esp+64], esp
  020b2	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0P@DIEGLFL@CSPHelpMessage?$AA@
  020b7	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  020bc	55		 push	 ebp
  020bd	8b ce		 mov	 ecx, esi
  020bf	e8 00 00 00 00	 call	 ??0CSPHelpMessage@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPHelpMessage::CSPHelpMessage
  020c4	eb 02		 jmp	 SHORT $L148408
$L148407:
  020c6	33 c0		 xor	 eax, eax
$L148408:
  020c8	3b c3		 cmp	 eax, ebx
  020ca	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  020ce	0f 84 84 00 00
	00		 je	 $L148861

; 119  : PREDEFINE_QUERY(CSPRPSGameRecord)

  020d4	68 48 0c 00 00	 push	 3144			; 00000c48H
  020d9	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  020de	8b f0		 mov	 esi, eax
  020e0	83 c4 04	 add	 esp, 4
  020e3	89 74 24 14	 mov	 DWORD PTR $T148410[esp+36], esi
  020e7	3b f3		 cmp	 esi, ebx
  020e9	c7 44 24 20 70
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 112 ; 00000070H
  020f1	74 1d		 je	 SHORT $L148412
  020f3	83 ec 1c	 sub	 esp, 28			; 0000001cH
  020f6	8b cc		 mov	 ecx, esp
  020f8	89 64 24 2c	 mov	 DWORD PTR $T148411[esp+64], esp
  020fc	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BB@CAPPCNAH@CSPRPSGameRecord?$AA@
  02101	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  02106	55		 push	 ebp
  02107	8b ce		 mov	 ecx, esi
  02109	e8 00 00 00 00	 call	 ??0CSPRPSGameRecord@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPRPSGameRecord::CSPRPSGameRecord
  0210e	eb 02		 jmp	 SHORT $L148413
$L148412:
  02110	33 c0		 xor	 eax, eax
$L148413:
  02112	3b c3		 cmp	 eax, ebx
  02114	89 7c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], edi
  02118	74 3e		 je	 SHORT $L148861

; 120  : PREDEFINE_QUERY(CSPGetLimitedLevel)

  0211a	68 30 0c 00 00	 push	 3120			; 00000c30H
  0211f	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  02124	8b f0		 mov	 esi, eax
  02126	83 c4 04	 add	 esp, 4
  02129	89 74 24 14	 mov	 DWORD PTR $T148415[esp+36], esi
  0212d	3b f3		 cmp	 esi, ebx
  0212f	c7 44 24 20 71
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 113 ; 00000071H
  02137	74 1f		 je	 SHORT $L148861
  02139	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0213c	8b cc		 mov	 ecx, esp
  0213e	89 64 24 2c	 mov	 DWORD PTR $T148416[esp+64], esp
  02142	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BD@CAGAKGIN@CSPGetLimitedLevel?$AA@
  02147	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0214c	55		 push	 ebp
  0214d	8b ce		 mov	 ecx, esi
  0214f	e8 00 00 00 00	 call	 ??0CSPGetLimitedLevel@@QAE@PAVCSqlDatabase@@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; CSPGetLimitedLevel::CSPGetLimitedLevel
  02154	3b c3		 cmp	 eax, ebx
  02156	75 15		 jne	 SHORT $L123284
$L148861:
  02158	33 c0		 xor	 eax, eax

; 121  : 
; 122  : END_INIT_QUERY()

  0215a	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  0215e	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02165	5f		 pop	 edi
  02166	5e		 pop	 esi
  02167	5d		 pop	 ebp
  02168	5b		 pop	 ebx
  02169	83 c4 14	 add	 esp, 20			; 00000014H
  0216c	c3		 ret	 0
$L123284:
  0216d	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  02171	5f		 pop	 edi
  02172	5e		 pop	 esi
  02173	5d		 pop	 ebp
  02174	b8 01 00 00 00	 mov	 eax, 1
  02179	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  02180	5b		 pop	 ebx
  02181	83 c4 14	 add	 esp, 20			; 00000014H
  02184	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L148419:
  00000	8b 45 ec	 mov	 eax, DWORD PTR $T147850[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
$L148421:
  0000b	8b 45 f0	 mov	 eax, DWORD PTR $T147855[ebp]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
$L148423:
  00016	8b 45 f0	 mov	 eax, DWORD PTR $T147860[ebp]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001f	59		 pop	 ecx
  00020	c3		 ret	 0
$L148425:
  00021	8b 45 f0	 mov	 eax, DWORD PTR $T147865[ebp]
  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002a	59		 pop	 ecx
  0002b	c3		 ret	 0
$L148427:
  0002c	8b 45 f0	 mov	 eax, DWORD PTR $T147870[ebp]
  0002f	50		 push	 eax
  00030	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00035	59		 pop	 ecx
  00036	c3		 ret	 0
$L148429:
  00037	8b 45 f0	 mov	 eax, DWORD PTR $T147875[ebp]
  0003a	50		 push	 eax
  0003b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00040	59		 pop	 ecx
  00041	c3		 ret	 0
$L148431:
  00042	8b 45 f0	 mov	 eax, DWORD PTR $T147880[ebp]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0004b	59		 pop	 ecx
  0004c	c3		 ret	 0
$L148433:
  0004d	8b 45 f0	 mov	 eax, DWORD PTR $T147885[ebp]
  00050	50		 push	 eax
  00051	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00056	59		 pop	 ecx
  00057	c3		 ret	 0
$L148435:
  00058	8b 45 f0	 mov	 eax, DWORD PTR $T147890[ebp]
  0005b	50		 push	 eax
  0005c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00061	59		 pop	 ecx
  00062	c3		 ret	 0
$L148437:
  00063	8b 45 f0	 mov	 eax, DWORD PTR $T147895[ebp]
  00066	50		 push	 eax
  00067	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0006c	59		 pop	 ecx
  0006d	c3		 ret	 0
$L148439:
  0006e	8b 45 f0	 mov	 eax, DWORD PTR $T147900[ebp]
  00071	50		 push	 eax
  00072	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00077	59		 pop	 ecx
  00078	c3		 ret	 0
$L148441:
  00079	8b 45 f0	 mov	 eax, DWORD PTR $T147905[ebp]
  0007c	50		 push	 eax
  0007d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00082	59		 pop	 ecx
  00083	c3		 ret	 0
$L148443:
  00084	8b 45 f0	 mov	 eax, DWORD PTR $T147910[ebp]
  00087	50		 push	 eax
  00088	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0008d	59		 pop	 ecx
  0008e	c3		 ret	 0
$L148445:
  0008f	8b 45 f0	 mov	 eax, DWORD PTR $T147915[ebp]
  00092	50		 push	 eax
  00093	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00098	59		 pop	 ecx
  00099	c3		 ret	 0
$L148447:
  0009a	8b 45 f0	 mov	 eax, DWORD PTR $T147920[ebp]
  0009d	50		 push	 eax
  0009e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000a3	59		 pop	 ecx
  000a4	c3		 ret	 0
$L148449:
  000a5	8b 45 f0	 mov	 eax, DWORD PTR $T147925[ebp]
  000a8	50		 push	 eax
  000a9	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000ae	59		 pop	 ecx
  000af	c3		 ret	 0
$L148451:
  000b0	8b 45 f0	 mov	 eax, DWORD PTR $T147930[ebp]
  000b3	50		 push	 eax
  000b4	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000b9	59		 pop	 ecx
  000ba	c3		 ret	 0
$L148453:
  000bb	8b 45 f0	 mov	 eax, DWORD PTR $T147935[ebp]
  000be	50		 push	 eax
  000bf	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000c4	59		 pop	 ecx
  000c5	c3		 ret	 0
$L148455:
  000c6	8b 45 f0	 mov	 eax, DWORD PTR $T147940[ebp]
  000c9	50		 push	 eax
  000ca	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000cf	59		 pop	 ecx
  000d0	c3		 ret	 0
$L148457:
  000d1	8b 45 f0	 mov	 eax, DWORD PTR $T147945[ebp]
  000d4	50		 push	 eax
  000d5	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000da	59		 pop	 ecx
  000db	c3		 ret	 0
$L148459:
  000dc	8b 45 f0	 mov	 eax, DWORD PTR $T147950[ebp]
  000df	50		 push	 eax
  000e0	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000e5	59		 pop	 ecx
  000e6	c3		 ret	 0
$L148461:
  000e7	8b 45 f0	 mov	 eax, DWORD PTR $T147955[ebp]
  000ea	50		 push	 eax
  000eb	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000f0	59		 pop	 ecx
  000f1	c3		 ret	 0
$L148463:
  000f2	8b 45 f0	 mov	 eax, DWORD PTR $T147960[ebp]
  000f5	50		 push	 eax
  000f6	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000fb	59		 pop	 ecx
  000fc	c3		 ret	 0
$L148465:
  000fd	8b 45 f0	 mov	 eax, DWORD PTR $T147965[ebp]
  00100	50		 push	 eax
  00101	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00106	59		 pop	 ecx
  00107	c3		 ret	 0
$L148467:
  00108	8b 45 f0	 mov	 eax, DWORD PTR $T147970[ebp]
  0010b	50		 push	 eax
  0010c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00111	59		 pop	 ecx
  00112	c3		 ret	 0
$L148469:
  00113	8b 45 f0	 mov	 eax, DWORD PTR $T147975[ebp]
  00116	50		 push	 eax
  00117	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0011c	59		 pop	 ecx
  0011d	c3		 ret	 0
$L148471:
  0011e	8b 45 f0	 mov	 eax, DWORD PTR $T147980[ebp]
  00121	50		 push	 eax
  00122	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00127	59		 pop	 ecx
  00128	c3		 ret	 0
$L148473:
  00129	8b 45 f0	 mov	 eax, DWORD PTR $T147985[ebp]
  0012c	50		 push	 eax
  0012d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00132	59		 pop	 ecx
  00133	c3		 ret	 0
$L148475:
  00134	8b 45 f0	 mov	 eax, DWORD PTR $T147990[ebp]
  00137	50		 push	 eax
  00138	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0013d	59		 pop	 ecx
  0013e	c3		 ret	 0
$L148477:
  0013f	8b 45 f0	 mov	 eax, DWORD PTR $T147995[ebp]
  00142	50		 push	 eax
  00143	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00148	59		 pop	 ecx
  00149	c3		 ret	 0
$L148479:
  0014a	8b 45 f0	 mov	 eax, DWORD PTR $T148000[ebp]
  0014d	50		 push	 eax
  0014e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00153	59		 pop	 ecx
  00154	c3		 ret	 0
$L148481:
  00155	8b 45 f0	 mov	 eax, DWORD PTR $T148005[ebp]
  00158	50		 push	 eax
  00159	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0015e	59		 pop	 ecx
  0015f	c3		 ret	 0
$L148483:
  00160	8b 45 f0	 mov	 eax, DWORD PTR $T148010[ebp]
  00163	50		 push	 eax
  00164	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00169	59		 pop	 ecx
  0016a	c3		 ret	 0
$L148485:
  0016b	8b 45 f0	 mov	 eax, DWORD PTR $T148015[ebp]
  0016e	50		 push	 eax
  0016f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00174	59		 pop	 ecx
  00175	c3		 ret	 0
$L148487:
  00176	8b 45 f0	 mov	 eax, DWORD PTR $T148020[ebp]
  00179	50		 push	 eax
  0017a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0017f	59		 pop	 ecx
  00180	c3		 ret	 0
$L148489:
  00181	8b 45 f0	 mov	 eax, DWORD PTR $T148025[ebp]
  00184	50		 push	 eax
  00185	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0018a	59		 pop	 ecx
  0018b	c3		 ret	 0
$L148491:
  0018c	8b 45 f0	 mov	 eax, DWORD PTR $T148030[ebp]
  0018f	50		 push	 eax
  00190	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00195	59		 pop	 ecx
  00196	c3		 ret	 0
$L148493:
  00197	8b 45 f0	 mov	 eax, DWORD PTR $T148035[ebp]
  0019a	50		 push	 eax
  0019b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001a0	59		 pop	 ecx
  001a1	c3		 ret	 0
$L148495:
  001a2	8b 45 f0	 mov	 eax, DWORD PTR $T148040[ebp]
  001a5	50		 push	 eax
  001a6	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001ab	59		 pop	 ecx
  001ac	c3		 ret	 0
$L148497:
  001ad	8b 45 f0	 mov	 eax, DWORD PTR $T148045[ebp]
  001b0	50		 push	 eax
  001b1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001b6	59		 pop	 ecx
  001b7	c3		 ret	 0
$L148499:
  001b8	8b 45 f0	 mov	 eax, DWORD PTR $T148050[ebp]
  001bb	50		 push	 eax
  001bc	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001c1	59		 pop	 ecx
  001c2	c3		 ret	 0
$L148501:
  001c3	8b 45 f0	 mov	 eax, DWORD PTR $T148055[ebp]
  001c6	50		 push	 eax
  001c7	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001cc	59		 pop	 ecx
  001cd	c3		 ret	 0
$L148503:
  001ce	8b 45 f0	 mov	 eax, DWORD PTR $T148060[ebp]
  001d1	50		 push	 eax
  001d2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001d7	59		 pop	 ecx
  001d8	c3		 ret	 0
$L148505:
  001d9	8b 45 f0	 mov	 eax, DWORD PTR $T148065[ebp]
  001dc	50		 push	 eax
  001dd	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001e2	59		 pop	 ecx
  001e3	c3		 ret	 0
$L148507:
  001e4	8b 45 f0	 mov	 eax, DWORD PTR $T148070[ebp]
  001e7	50		 push	 eax
  001e8	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001ed	59		 pop	 ecx
  001ee	c3		 ret	 0
$L148509:
  001ef	8b 45 f0	 mov	 eax, DWORD PTR $T148075[ebp]
  001f2	50		 push	 eax
  001f3	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  001f8	59		 pop	 ecx
  001f9	c3		 ret	 0
$L148511:
  001fa	8b 45 f0	 mov	 eax, DWORD PTR $T148080[ebp]
  001fd	50		 push	 eax
  001fe	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00203	59		 pop	 ecx
  00204	c3		 ret	 0
$L148513:
  00205	8b 45 f0	 mov	 eax, DWORD PTR $T148085[ebp]
  00208	50		 push	 eax
  00209	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0020e	59		 pop	 ecx
  0020f	c3		 ret	 0
$L148515:
  00210	8b 45 f0	 mov	 eax, DWORD PTR $T148090[ebp]
  00213	50		 push	 eax
  00214	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00219	59		 pop	 ecx
  0021a	c3		 ret	 0
$L148517:
  0021b	8b 45 f0	 mov	 eax, DWORD PTR $T148095[ebp]
  0021e	50		 push	 eax
  0021f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00224	59		 pop	 ecx
  00225	c3		 ret	 0
$L148519:
  00226	8b 45 f0	 mov	 eax, DWORD PTR $T148100[ebp]
  00229	50		 push	 eax
  0022a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0022f	59		 pop	 ecx
  00230	c3		 ret	 0
$L148521:
  00231	8b 45 f0	 mov	 eax, DWORD PTR $T148105[ebp]
  00234	50		 push	 eax
  00235	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0023a	59		 pop	 ecx
  0023b	c3		 ret	 0
$L148523:
  0023c	8b 45 f0	 mov	 eax, DWORD PTR $T148110[ebp]
  0023f	50		 push	 eax
  00240	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00245	59		 pop	 ecx
  00246	c3		 ret	 0
$L148525:
  00247	8b 45 f0	 mov	 eax, DWORD PTR $T148115[ebp]
  0024a	50		 push	 eax
  0024b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00250	59		 pop	 ecx
  00251	c3		 ret	 0
$L148527:
  00252	8b 45 f0	 mov	 eax, DWORD PTR $T148120[ebp]
  00255	50		 push	 eax
  00256	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0025b	59		 pop	 ecx
  0025c	c3		 ret	 0
$L148529:
  0025d	8b 45 f0	 mov	 eax, DWORD PTR $T148125[ebp]
  00260	50		 push	 eax
  00261	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00266	59		 pop	 ecx
  00267	c3		 ret	 0
$L148531:
  00268	8b 45 f0	 mov	 eax, DWORD PTR $T148130[ebp]
  0026b	50		 push	 eax
  0026c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00271	59		 pop	 ecx
  00272	c3		 ret	 0
$L148533:
  00273	8b 45 f0	 mov	 eax, DWORD PTR $T148135[ebp]
  00276	50		 push	 eax
  00277	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0027c	59		 pop	 ecx
  0027d	c3		 ret	 0
$L148535:
  0027e	8b 45 f0	 mov	 eax, DWORD PTR $T148140[ebp]
  00281	50		 push	 eax
  00282	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00287	59		 pop	 ecx
  00288	c3		 ret	 0
$L148537:
  00289	8b 45 f0	 mov	 eax, DWORD PTR $T148145[ebp]
  0028c	50		 push	 eax
  0028d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00292	59		 pop	 ecx
  00293	c3		 ret	 0
$L148539:
  00294	8b 45 f0	 mov	 eax, DWORD PTR $T148150[ebp]
  00297	50		 push	 eax
  00298	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0029d	59		 pop	 ecx
  0029e	c3		 ret	 0
$L148541:
  0029f	8b 45 f0	 mov	 eax, DWORD PTR $T148155[ebp]
  002a2	50		 push	 eax
  002a3	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002a8	59		 pop	 ecx
  002a9	c3		 ret	 0
$L148543:
  002aa	8b 45 f0	 mov	 eax, DWORD PTR $T148160[ebp]
  002ad	50		 push	 eax
  002ae	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002b3	59		 pop	 ecx
  002b4	c3		 ret	 0
$L148545:
  002b5	8b 45 f0	 mov	 eax, DWORD PTR $T148165[ebp]
  002b8	50		 push	 eax
  002b9	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002be	59		 pop	 ecx
  002bf	c3		 ret	 0
$L148547:
  002c0	8b 45 f0	 mov	 eax, DWORD PTR $T148170[ebp]
  002c3	50		 push	 eax
  002c4	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002c9	59		 pop	 ecx
  002ca	c3		 ret	 0
$L148549:
  002cb	8b 45 f0	 mov	 eax, DWORD PTR $T148175[ebp]
  002ce	50		 push	 eax
  002cf	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002d4	59		 pop	 ecx
  002d5	c3		 ret	 0
$L148551:
  002d6	8b 45 f0	 mov	 eax, DWORD PTR $T148180[ebp]
  002d9	50		 push	 eax
  002da	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002df	59		 pop	 ecx
  002e0	c3		 ret	 0
$L148553:
  002e1	8b 45 f0	 mov	 eax, DWORD PTR $T148185[ebp]
  002e4	50		 push	 eax
  002e5	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002ea	59		 pop	 ecx
  002eb	c3		 ret	 0
$L148555:
  002ec	8b 45 f0	 mov	 eax, DWORD PTR $T148190[ebp]
  002ef	50		 push	 eax
  002f0	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  002f5	59		 pop	 ecx
  002f6	c3		 ret	 0
$L148557:
  002f7	8b 45 f0	 mov	 eax, DWORD PTR $T148195[ebp]
  002fa	50		 push	 eax
  002fb	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00300	59		 pop	 ecx
  00301	c3		 ret	 0
$L148559:
  00302	8b 45 f0	 mov	 eax, DWORD PTR $T148200[ebp]
  00305	50		 push	 eax
  00306	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0030b	59		 pop	 ecx
  0030c	c3		 ret	 0
$L148561:
  0030d	8b 45 f0	 mov	 eax, DWORD PTR $T148205[ebp]
  00310	50		 push	 eax
  00311	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00316	59		 pop	 ecx
  00317	c3		 ret	 0
$L148563:
  00318	8b 45 f0	 mov	 eax, DWORD PTR $T148210[ebp]
  0031b	50		 push	 eax
  0031c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00321	59		 pop	 ecx
  00322	c3		 ret	 0
$L148565:
  00323	8b 45 f0	 mov	 eax, DWORD PTR $T148215[ebp]
  00326	50		 push	 eax
  00327	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0032c	59		 pop	 ecx
  0032d	c3		 ret	 0
$L148567:
  0032e	8b 45 f0	 mov	 eax, DWORD PTR $T148220[ebp]
  00331	50		 push	 eax
  00332	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00337	59		 pop	 ecx
  00338	c3		 ret	 0
$L148569:
  00339	8b 45 f0	 mov	 eax, DWORD PTR $T148225[ebp]
  0033c	50		 push	 eax
  0033d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00342	59		 pop	 ecx
  00343	c3		 ret	 0
$L148571:
  00344	8b 45 f0	 mov	 eax, DWORD PTR $T148230[ebp]
  00347	50		 push	 eax
  00348	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0034d	59		 pop	 ecx
  0034e	c3		 ret	 0
$L148573:
  0034f	8b 45 f0	 mov	 eax, DWORD PTR $T148235[ebp]
  00352	50		 push	 eax
  00353	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00358	59		 pop	 ecx
  00359	c3		 ret	 0
$L148575:
  0035a	8b 45 f0	 mov	 eax, DWORD PTR $T148240[ebp]
  0035d	50		 push	 eax
  0035e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00363	59		 pop	 ecx
  00364	c3		 ret	 0
$L148577:
  00365	8b 45 f0	 mov	 eax, DWORD PTR $T148245[ebp]
  00368	50		 push	 eax
  00369	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0036e	59		 pop	 ecx
  0036f	c3		 ret	 0
$L148579:
  00370	8b 45 f0	 mov	 eax, DWORD PTR $T148250[ebp]
  00373	50		 push	 eax
  00374	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00379	59		 pop	 ecx
  0037a	c3		 ret	 0
$L148581:
  0037b	8b 45 f0	 mov	 eax, DWORD PTR $T148255[ebp]
  0037e	50		 push	 eax
  0037f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00384	59		 pop	 ecx
  00385	c3		 ret	 0
$L148583:
  00386	8b 45 f0	 mov	 eax, DWORD PTR $T148260[ebp]
  00389	50		 push	 eax
  0038a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0038f	59		 pop	 ecx
  00390	c3		 ret	 0
$L148585:
  00391	8b 45 f0	 mov	 eax, DWORD PTR $T148265[ebp]
  00394	50		 push	 eax
  00395	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0039a	59		 pop	 ecx
  0039b	c3		 ret	 0
$L148587:
  0039c	8b 45 f0	 mov	 eax, DWORD PTR $T148270[ebp]
  0039f	50		 push	 eax
  003a0	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003a5	59		 pop	 ecx
  003a6	c3		 ret	 0
$L148589:
  003a7	8b 45 f0	 mov	 eax, DWORD PTR $T148275[ebp]
  003aa	50		 push	 eax
  003ab	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003b0	59		 pop	 ecx
  003b1	c3		 ret	 0
$L148591:
  003b2	8b 45 f0	 mov	 eax, DWORD PTR $T148280[ebp]
  003b5	50		 push	 eax
  003b6	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003bb	59		 pop	 ecx
  003bc	c3		 ret	 0
$L148593:
  003bd	8b 45 f0	 mov	 eax, DWORD PTR $T148285[ebp]
  003c0	50		 push	 eax
  003c1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003c6	59		 pop	 ecx
  003c7	c3		 ret	 0
$L148595:
  003c8	8b 45 f0	 mov	 eax, DWORD PTR $T148290[ebp]
  003cb	50		 push	 eax
  003cc	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003d1	59		 pop	 ecx
  003d2	c3		 ret	 0
$L148597:
  003d3	8b 45 f0	 mov	 eax, DWORD PTR $T148295[ebp]
  003d6	50		 push	 eax
  003d7	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003dc	59		 pop	 ecx
  003dd	c3		 ret	 0
$L148599:
  003de	8b 45 f0	 mov	 eax, DWORD PTR $T148300[ebp]
  003e1	50		 push	 eax
  003e2	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003e7	59		 pop	 ecx
  003e8	c3		 ret	 0
$L148601:
  003e9	8b 45 f0	 mov	 eax, DWORD PTR $T148305[ebp]
  003ec	50		 push	 eax
  003ed	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003f2	59		 pop	 ecx
  003f3	c3		 ret	 0
$L148603:
  003f4	8b 45 f0	 mov	 eax, DWORD PTR $T148310[ebp]
  003f7	50		 push	 eax
  003f8	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  003fd	59		 pop	 ecx
  003fe	c3		 ret	 0
$L148605:
  003ff	8b 45 f0	 mov	 eax, DWORD PTR $T148315[ebp]
  00402	50		 push	 eax
  00403	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00408	59		 pop	 ecx
  00409	c3		 ret	 0
$L148607:
  0040a	8b 45 f0	 mov	 eax, DWORD PTR $T148320[ebp]
  0040d	50		 push	 eax
  0040e	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00413	59		 pop	 ecx
  00414	c3		 ret	 0
$L148609:
  00415	8b 45 f0	 mov	 eax, DWORD PTR $T148325[ebp]
  00418	50		 push	 eax
  00419	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0041e	59		 pop	 ecx
  0041f	c3		 ret	 0
$L148611:
  00420	8b 45 f0	 mov	 eax, DWORD PTR $T148330[ebp]
  00423	50		 push	 eax
  00424	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00429	59		 pop	 ecx
  0042a	c3		 ret	 0
$L148613:
  0042b	8b 45 f0	 mov	 eax, DWORD PTR $T148335[ebp]
  0042e	50		 push	 eax
  0042f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00434	59		 pop	 ecx
  00435	c3		 ret	 0
$L148615:
  00436	8b 45 f0	 mov	 eax, DWORD PTR $T148340[ebp]
  00439	50		 push	 eax
  0043a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0043f	59		 pop	 ecx
  00440	c3		 ret	 0
$L148617:
  00441	8b 45 f0	 mov	 eax, DWORD PTR $T148345[ebp]
  00444	50		 push	 eax
  00445	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0044a	59		 pop	 ecx
  0044b	c3		 ret	 0
$L148619:
  0044c	8b 45 f0	 mov	 eax, DWORD PTR $T148350[ebp]
  0044f	50		 push	 eax
  00450	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00455	59		 pop	 ecx
  00456	c3		 ret	 0
$L148621:
  00457	8b 45 f0	 mov	 eax, DWORD PTR $T148355[ebp]
  0045a	50		 push	 eax
  0045b	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00460	59		 pop	 ecx
  00461	c3		 ret	 0
$L148623:
  00462	8b 45 f0	 mov	 eax, DWORD PTR $T148360[ebp]
  00465	50		 push	 eax
  00466	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0046b	59		 pop	 ecx
  0046c	c3		 ret	 0
$L148625:
  0046d	8b 45 f0	 mov	 eax, DWORD PTR $T148365[ebp]
  00470	50		 push	 eax
  00471	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00476	59		 pop	 ecx
  00477	c3		 ret	 0
$L148627:
  00478	8b 45 f0	 mov	 eax, DWORD PTR $T148370[ebp]
  0047b	50		 push	 eax
  0047c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00481	59		 pop	 ecx
  00482	c3		 ret	 0
$L148629:
  00483	8b 45 f0	 mov	 eax, DWORD PTR $T148375[ebp]
  00486	50		 push	 eax
  00487	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0048c	59		 pop	 ecx
  0048d	c3		 ret	 0
$L148631:
  0048e	8b 45 f0	 mov	 eax, DWORD PTR $T148380[ebp]
  00491	50		 push	 eax
  00492	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00497	59		 pop	 ecx
  00498	c3		 ret	 0
$L148633:
  00499	8b 45 f0	 mov	 eax, DWORD PTR $T148385[ebp]
  0049c	50		 push	 eax
  0049d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004a2	59		 pop	 ecx
  004a3	c3		 ret	 0
$L148635:
  004a4	8b 45 f0	 mov	 eax, DWORD PTR $T148390[ebp]
  004a7	50		 push	 eax
  004a8	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004ad	59		 pop	 ecx
  004ae	c3		 ret	 0
$L148637:
  004af	8b 45 f0	 mov	 eax, DWORD PTR $T148395[ebp]
  004b2	50		 push	 eax
  004b3	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004b8	59		 pop	 ecx
  004b9	c3		 ret	 0
$L148639:
  004ba	8b 45 f0	 mov	 eax, DWORD PTR $T148400[ebp]
  004bd	50		 push	 eax
  004be	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004c3	59		 pop	 ecx
  004c4	c3		 ret	 0
$L148641:
  004c5	8b 45 f0	 mov	 eax, DWORD PTR $T148405[ebp]
  004c8	50		 push	 eax
  004c9	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004ce	59		 pop	 ecx
  004cf	c3		 ret	 0
$L148643:
  004d0	8b 45 f0	 mov	 eax, DWORD PTR $T148410[ebp]
  004d3	50		 push	 eax
  004d4	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004d9	59		 pop	 ecx
  004da	c3		 ret	 0
$L148645:
  004db	8b 45 f0	 mov	 eax, DWORD PTR $T148415[ebp]
  004de	50		 push	 eax
  004df	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  004e4	59		 pop	 ecx
  004e5	c3		 ret	 0
__ehhandler$?InitQueryTWorldSvr@@YAHPAVCSqlDatabase@@@Z:
  004e6	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T148860
  004eb	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?InitQueryTWorldSvr@@YAHPAVCSqlDatabase@@@Z ENDP	; InitQueryTWorldSvr
END
