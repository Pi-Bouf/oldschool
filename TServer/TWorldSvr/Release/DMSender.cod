; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\DMSender.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_1EO@JCFHIKME@?$AA?$HL?$AA2?$AAD?$AAD?$AA0?$AA7?$AA5?$AA6?$AA6?$AA?9?$AA9?$AA2?$AA4?$AA8?$AA?9?$AA4?$AA7?$AA9?$AA8?$AA?9@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CH@IKEJHDDN@?$HL2DD07566?99248?94798?9A96F?9259263C@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@OGFEPDED@LocalService?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02CCDHMLDD@?9?1?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@MIGBKCMN@UnregServer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09LJBJJPCG@RegServer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07LMLHFMEG@Service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07PNHNHBAB@Install?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09LAEJNBCE@UnInstall?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04FABLJDN@Name?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@DBFDLFJJ@?$CFs?5?9Name?5?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BP@GECJKCAK@Could?5not?5open?5Service?5Manager?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06HCEGMCNE@RPCSS?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@HDJFCBEP@Could?5not?5start?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@JMOCNDDL@Could?5not?5open?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@GKJBBOLK@Could?5not?5stop?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NMBIIKKI@Could?5not?5delete?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?GetAppId@CTWorldSvrModule@@SAPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAppIdT@CTWorldSvrModule@@SAPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateRegistryAppId@CTWorldSvrModule@@SGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterAppId@CTWorldSvrModule@@QAEJ_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Install@CTWorldSvrModule@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_FRIENDLIST_REQ@CTWorldSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_SOULMATELIST_REQ@CTWorldSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_SOULMATEREG_REQ@CTWorldSvrModule@@QAEXKKKEEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_SOULMATEEND_REQ@CTWorldSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_SOULMATEDEL_REQ@CTWorldSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDDUTY_REQ@CTWorldSvrModule@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDPEER_REQ@CTWorldSvrModule@@QAEXKKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDMEMBERADD_REQ@CTWorldSvrModule@@QAEXKKEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDARTICLEADD_REQ@CTWorldSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDARTICLEDEL_REQ@CTWorldSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDARTICLEUPDATE_REQ@CTWorldSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDFAME_REQ@CTWorldSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDLEVEL_REQ@CTWorldSvrModule@@QAEXKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDCABINETMAX_REQ@CTWorldSvrModule@@QAEXKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDCONTRIBUTION_REQ@CTWorldSvrModule@@QAEXKKKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDLOAD_REQ@CTWorldSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_FRIENDERASE_REQ@CTWorldSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDPVPOINT_REQ@CTWorldSvrModule@@QAEXKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDPOINTREWARD_REQ@CTWorldSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_PVPRECORD_REQ@CTWorldSvrModule@@QAEXKPAUtagTGUILDMEMBER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_CASTLEAPPLY_REQ@CTWorldSvrModule@@QAEXGKE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_CASHITEMSALE_REQ@CTWorldSvrModule@@QAEXKGPAV?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDWANTEDADD_REQ@CTWorldSvrModule@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDWANTEDDEL_REQ@CTWorldSvrModule@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDVOLUNTEERING_REQ@CTWorldSvrModule@@QAEXEKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDVOLUNTEERINGDEL_REQ@CTWorldSvrModule@@QAEXEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDTACTICSWANTEDADD_REQ@CTWorldSvrModule@@QAEXKKKKKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDTACTICSWANTEDDEL_REQ@CTWorldSvrModule@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDTACTICSADD_REQ@CTWorldSvrModule@@QAEXKKK_JE0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDTACTICSDEL_REQ@CTWorldSvrModule@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_TACTICSPOINT_REQ@CTWorldSvrModule@@QAEXPAUtagTTACTICSMEMBER@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GUILDLEAVE_REQ@CTWorldSvrModule@@QAEXKKEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_CLEARDATA_REQ@CTWorldSvrModule@@QAEXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_GETCHARINFO_REQ@CTWorldSvrModule@@QAEXKKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_TOURNAMENTPAYBACK_REQ@CTWorldSvrModule@@QAEXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_TOURNAMENTRESULT_REQ@CTWorldSvrModule@@QAEXEEKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_TOURNAMENTAPPLY_REQ@CTWorldSvrModule@@QAEXEKEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_TOURNAMENTCLEAR_REQ@CTWorldSvrModule@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_TNMTEVENTSCHEDULEADD_REQ@CTWorldSvrModule@@QAEXPAVCPacket@@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_TNMTEVENTSCHEDULEDEL_REQ@CTWorldSvrModule@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_TNMTEVENTENTRYADD_REQ@CTWorldSvrModule@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_HELPMESSAGE_REQ@CTWorldSvrModule@@QAEXE_J0V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_RPSGAMERECORD_REQ@CTWorldSvrModule@@QAEXEKEE_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendDM_TOURNAMENTSTATUS_REQ@CTWorldSvrModule@@QAEXGEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Tokenize@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBE?AV12@PBDAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAAXPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAUtagTENTRYRECORD@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?at@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAUtagTCASHITMSALE@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$vector@GV?$allocator@G@std@@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterAppId@?$CAtlServiceModuleT@VCTWorldSvrModule@@$0GE@@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsInstalled@?$CAtlServiceModuleT@VCTWorldSvrModule@@$0GE@@ATL@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Uninstall@?$CAtlServiceModuleT@VCTWorldSvrModule@@$0GE@@ATL@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlExeModuleT@VCTWorldSvrModule@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CAtlExeModuleT@VCTWorldSvrModule@@@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterServer@?$CAtlModuleT@VCTWorldSvrModule@@@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterServer@?$CAtlModuleT@VCTWorldSvrModule@@@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddCommonRGSReplacements@?$CAtlModuleT@VCTWorldSvrModule@@@ATL@@UAEJPAUIRegistrarBase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CAtlExeModuleT@VCTWorldSvrModule@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlModuleT@VCTWorldSvrModule@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Mid@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBE?AV12@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FormatV@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEXPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringSpanIncluding@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringSpanExcluding@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Xran@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UninitializeCom@?$CAtlExeModuleT@VCTWorldSvrModule@@@ATL@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEAAUtagTENTRYRECORD@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEABUtagTENTRYRECORD@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTCASHITMSALE@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTCASHITMSALE@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagTCASHITMSALE@@IU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@IABU1@AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@GIG@std@@YAXPAGIABGAAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagMONREGEN@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagMONREGEN@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagMONREGEN@@IU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@IABU1@AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagLOTTERY@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagLOTTERY@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagLOTTERY@@IU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@IABU1@AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTENTRYRECORD@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTENTRYRECORD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@YAXPAUtagTENTRYRECORD@@0AAV?$allocator@UtagTENTRYRECORD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@EV?$allocator@E@std@@@std@@YAXPAE0AAV?$allocator@E@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAXPAUtagTCASHITMSALE@@0AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagTCASHITMSALE@@PAU1@@std@@YAPAUtagTCASHITMSALE@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAGPAGV?$allocator@G@std@@@std@@YAPAGPAG00AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAGPAG@std@@YAPAGPAG00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@0AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagMONREGEN@@PAU1@@std@@YAPAUtagMONREGEN@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@0AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagLOTTERY@@PAU1@@std@@YAPAUtagLOTTERY@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTNMTREWARD@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTNMTREWARD@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTNMTREWARD@@V?$allocator@UtagTNMTREWARD@@@std@@@std@@YAXPAUtagTNMTREWARD@@0AAV?$allocator@UtagTNMTREWARD@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTENTRYRECORD@@@std@@QAEXPAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTCASHITMSALE@@@std@@QAEXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTNMTREWARD@@@std@@QAEXPAUtagTNMTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAGIG@std@@YAXPAGIABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagTCASHITMSALE@@PAU1@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@YAPAUtagTCASHITMSALE@@PAU1@00AAV?$allocator@UtagTCASHITMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@GG@std@@YAPAGPAG00AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTENTRYRECORD@@@std@@YAXPAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagTCASHITMSALE@@U1@@std@@YAXPAUtagTCASHITMSALE@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTCASHITMSALE@@@std@@YAXPAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagMONREGEN@@U1@@std@@YAXPAUtagMONREGEN@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagMONREGEN@@@std@@YAXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagLOTTERY@@U1@@std@@YAXPAUtagLOTTERY@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagLOTTERY@@@std@@YAXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTNMTREWARD@@@std@@YAXPAUtagTNMTREWARD@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_StdGlobalInterfaceTable
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetLockCount@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7logic_error@std@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?npos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@2IB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@?$ChTraitsCRT@D@ATL@@SAHPADPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFormattedLength@?$ChTraitsCRT@D@ATL@@SAHPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAtlModule@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Term@CAtlModule@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlCallTermFunc@ATL@@YGXPAU_ATL_MODULE70@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Term@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Tidy@?$vector@GV?$allocator@G@std@@@std@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Destroy@?$vector@GV?$allocator@G@std@@@std@@IAEXPAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?deallocate@?$allocator@G@std@@QAEXPAGI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEAAUtagTCASHITMSALE@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEABUtagTCASHITMSALE@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAtlException@ATL@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI1?AVCAtlException@ATL@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA1?AVCAtlException@ATL@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVCAtlException@ATL@@@84
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVCAtlException@ATL@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?size@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GtagPACKETBUF@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1tagPACKETBUF@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0tagPACKETBUF@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlLoadString@ATL@@YAHIPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckImplicitLoad@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindStringResourceInstance@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WordCmpI@CAtlModule@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindOneOf@CAtlModule@ATL@@SAPBDPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStringValue@CRegKey@ATL@@QAEJPBD0K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteValue@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlHresultFromWin32@ATL@@YAJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_05PDIKPLII@AppID?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?UpdateRegistryFromResourceS@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegObject@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IRegistrarBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CRegObject@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@CRegObject@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CRegObject@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRegObject@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearReplacements@CRegObject@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@CComFakeCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearReplacements@CExpansionVector@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetKeyAt@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetValueAt@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@CComFakeCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRegObject@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CExpansionVector@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CExpansionVector@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegObject@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlHresultFromLastError@ATL@@YAJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EscapeSingleQuote@CAtlModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAHPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@CExpansionVector@ATL@@QAEHPBDPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEHABQADABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalSetAtIndex@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXHABQADABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?2PAD@?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?3PAD@?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAXPAXPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?2PAG@?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?3PAG@?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAXPAXPAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_1BG@JBACFMF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA_?$AAR?$AAa?$AAw?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1BC@KAILKFFG@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ResourceRegister@CRegObject@ATL@@QAGJPBGI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterFromResource@CRegObject@ATL@@IAEJPBGPBD1H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegParser@ATL@@QAE@PAVCRegObject@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterBuffer@CRegParser@ATL@@QAEJPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PreProcessBuffer@CRegParser@ATL@@QAEJPADPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CParseBuffer@CRegParser@ATL@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CParseBuffer@CRegParser@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StrChrA@CRegParser@ATL@@KAPADPADD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StrFromMap@CRegObject@ATL@@QAEPBGPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lookup@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEPAGABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindKey@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualKey@CExpansionVectorEqualHelper@ATL@@SA_NQAD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddString@CParseBuffer@CRegParser@ATL@@QAEHPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CParseBuffer@CRegParser@ATL@@QAEHPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddChar@CParseBuffer@CRegParser@ATL@@QAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CParseBuffer@CRegParser@ATL@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04OHBKMIBJ@HKCR?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04KIFLFONO@HKCU?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04CBBMIBLK@HKLM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03DLBIJLAB@HKU?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04OFOCGAOH@HKPD?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04POMNGLEL@HKDD?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04LEMDOLAJ@HKCC?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@JBJOLKMF@HKEY_CLASSES_ROOT?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@GMMMKLBI@HKEY_CURRENT_USER?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@GIIFIKDM@HKEY_LOCAL_MACHINE?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@OEMMANAM@HKEY_USERS?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@IDBEHNDO@HKEY_PERFORMANCE_DATA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@MJDLIIGK@HKEY_DYN_DATA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@NLNNHLLF@HKEY_CURRENT_CONFIG?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?map@?2??HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z@4QBUkeymap@23@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?NextToken@CRegParser@ATL@@IAEJPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndOfVar@CRegParser@ATL@@IAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsSpace@CRegParser@ATL@@IAEHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GenerateError@CRegParser@ATL@@IAEJI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterSubkeys@CRegParser@ATL@@IAEJPADPAUHKEY__@@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_06JBKGCNBB@Delete?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03LAIAPFCB@Val?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01CPLAODJH@S?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01PLPBNMEI@M?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01HMGJMAIH@B?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?$S4@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4IA
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ??0?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMultiStringValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDWORDValue@CRegKey@ATL@@QAEJPBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChToByte@CRegParser@ATL@@KAED@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPAEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SkipAssignment@CRegParser@ATL@@IAEJPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanForceRemoveKey@CRegParser@ATL@@IAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?rgszNeverDelete@CRegParser@ATL@@1QBQBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05GIBEAPNE@CLSID?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08PICKODJL@FileType?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09JKPGEJCH@Interface?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08PPIOJEA@Hardware?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04IHBFOLAC@Mime?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03DDIMFGBA@SAM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08LOPHEHKG@SECURITY?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06FDHFNJBJ@SYSTEM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08KEKAJNJI@Software?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CRegKey@ATL@@QAEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ResourceUnregister@CRegObject@ATL@@QAGJPBGI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_1M@PPPPCDEP@?$AAA?$AAP?$AAP?$AAI?$AAD?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?rgszNeverDelete@CRegParser@ATL@@1QBQBDB	; ATL::CRegParser::rgszNeverDelete
PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
PUBLIC	??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@	; `string'
PUBLIC	??_C@_08PICKODJL@FileType?$AA@			; `string'
PUBLIC	??_C@_09JKPGEJCH@Interface?$AA@			; `string'
PUBLIC	??_C@_08PPIOJEA@Hardware?$AA@			; `string'
PUBLIC	??_C@_04IHBFOLAC@Mime?$AA@			; `string'
PUBLIC	??_C@_03DDIMFGBA@SAM?$AA@			; `string'
PUBLIC	??_C@_08LOPHEHKG@SECURITY?$AA@			; `string'
PUBLIC	??_C@_06FDHFNJBJ@SYSTEM?$AA@			; `string'
PUBLIC	??_C@_08KEKAJNJI@Software?$AA@			; `string'
PUBLIC	??_C@_07KJLOKDKB@TypeLib?$AA@			; `string'
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	?m_libid@CAtlModule@ATL@@2U_GUID@@A		; ATL::CAtlModule::m_libid
PUBLIC	_CLSID_StdGlobalInterfaceTable
PUBLIC	??_C@_05GIBEAPNE@CLSID?$AA@			; `string'
PUBLIC	??_C@_05PDIKPLII@AppID?$AA@			; `string'
PUBLIC	??_C@_01CPLAODJH@S?$AA@				; `string'
PUBLIC	??_C@_01PLPBNMEI@M?$AA@				; `string'
PUBLIC	??_C@_01CKDDGHAB@D?$AA@				; `string'
PUBLIC	??_C@_01HMGJMAIH@B?$AA@				; `string'
PUBLIC	??_C@_03LAIAPFCB@Val?$AA@			; `string'
PUBLIC	??_C@_0M@DBGDLGLL@ForceRemove?$AA@		; `string'
PUBLIC	??_C@_08KAAPDIAN@NoRemove?$AA@			; `string'
PUBLIC	??_C@_06JBKGCNBB@Delete?$AA@			; `string'
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA	; ATL::_pPerfRegFunc
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZA			; ATL::_pPerfUnRegFunc
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CAtlModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CAtlModule::m_libid
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA DD 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZA DD 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
;	COMDAT _CLSID_StdGlobalInterfaceTable
CONST	SEGMENT
_CLSID_StdGlobalInterfaceTable DD 0323H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ??_C@_01CPLAODJH@S?$AA@
CONST	SEGMENT
??_C@_01CPLAODJH@S?$AA@ DB 'S', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szStringVal DD	FLAT:??_C@_01CPLAODJH@S?$AA@
CONST	ENDS
;	COMDAT ??_C@_01PLPBNMEI@M?$AA@
CONST	SEGMENT
??_C@_01PLPBNMEI@M?$AA@ DB 'M', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_multiszStringVal DD FLAT:??_C@_01PLPBNMEI@M?$AA@
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D?$AA@
CONST	SEGMENT
??_C@_01CKDDGHAB@D?$AA@ DB 'D', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szDwordVal DD	FLAT:??_C@_01CKDDGHAB@D?$AA@
CONST	ENDS
;	COMDAT ??_C@_01HMGJMAIH@B?$AA@
CONST	SEGMENT
??_C@_01HMGJMAIH@B?$AA@ DB 'B', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szBinaryVal DD	FLAT:??_C@_01HMGJMAIH@B?$AA@
CONST	ENDS
;	COMDAT ??_C@_03LAIAPFCB@Val?$AA@
CONST	SEGMENT
??_C@_03LAIAPFCB@Val?$AA@ DB 'Val', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szValToken DD	FLAT:??_C@_03LAIAPFCB@Val?$AA@
CONST	ENDS
;	COMDAT ??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	SEGMENT
??_C@_0M@DBGDLGLL@ForceRemove?$AA@ DB 'ForceRemove', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
_szForceRemove DD FLAT:??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	ENDS
;	COMDAT ??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	SEGMENT
??_C@_08KAAPDIAN@NoRemove?$AA@ DB 'NoRemove', 00H	; `string'
CONST	ENDS
CONST	SEGMENT
_szNoRemove DD	FLAT:??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	ENDS
;	COMDAT ??_C@_06JBKGCNBB@Delete?$AA@
CONST	SEGMENT
??_C@_06JBKGCNBB@Delete?$AA@ DB 'Delete', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
_szDelete DD	FLAT:??_C@_06JBKGCNBB@Delete?$AA@
CONST	ENDS
;	COMDAT ??_C@_05PDIKPLII@AppID?$AA@
CONST	SEGMENT
??_C@_05PDIKPLII@AppID?$AA@ DB 'AppID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05GIBEAPNE@CLSID?$AA@
CONST	SEGMENT
??_C@_05GIBEAPNE@CLSID?$AA@ DB 'CLSID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
CONST	SEGMENT
??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@ DB 'Component Categories', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PICKODJL@FileType?$AA@
CONST	SEGMENT
??_C@_08PICKODJL@FileType?$AA@ DB 'FileType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JKPGEJCH@Interface?$AA@
CONST	SEGMENT
??_C@_09JKPGEJCH@Interface?$AA@ DB 'Interface', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PPIOJEA@Hardware?$AA@
CONST	SEGMENT
??_C@_08PPIOJEA@Hardware?$AA@ DB 'Hardware', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04IHBFOLAC@Mime?$AA@
CONST	SEGMENT
??_C@_04IHBFOLAC@Mime?$AA@ DB 'Mime', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DDIMFGBA@SAM?$AA@
CONST	SEGMENT
??_C@_03DDIMFGBA@SAM?$AA@ DB 'SAM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08LOPHEHKG@SECURITY?$AA@
CONST	SEGMENT
??_C@_08LOPHEHKG@SECURITY?$AA@ DB 'SECURITY', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FDHFNJBJ@SYSTEM?$AA@
CONST	SEGMENT
??_C@_06FDHFNJBJ@SYSTEM?$AA@ DB 'SYSTEM', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KEKAJNJI@Software?$AA@
CONST	SEGMENT
??_C@_08KEKAJNJI@Software?$AA@ DB 'Software', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	SEGMENT
??_C@_07KJLOKDKB@TypeLib?$AA@ DB 'TypeLib', 00H		; `string'
CONST	ENDS
;	COMDAT ?rgszNeverDelete@CRegParser@ATL@@1QBQBDB
CONST	SEGMENT
?rgszNeverDelete@CRegParser@ATL@@1QBQBDB DD FLAT:??_C@_05PDIKPLII@AppID?$AA@ ; ATL::CRegParser::rgszNeverDelete
	DD	FLAT:??_C@_05GIBEAPNE@CLSID?$AA@
	DD	FLAT:??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
	DD	FLAT:??_C@_08PICKODJL@FileType?$AA@
	DD	FLAT:??_C@_09JKPGEJCH@Interface?$AA@
	DD	FLAT:??_C@_08PPIOJEA@Hardware?$AA@
	DD	FLAT:??_C@_04IHBFOLAC@Mime?$AA@
	DD	FLAT:??_C@_03DDIMFGBA@SAM?$AA@
	DD	FLAT:??_C@_08LOPHEHKG@SECURITY?$AA@
	DD	FLAT:??_C@_06FDHFNJBJ@SYSTEM?$AA@
	DD	FLAT:??_C@_08KEKAJNJI@Software?$AA@
	DD	FLAT:??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	ENDS
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp__InterlockedExchange@8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_szACP$ = -12						; size = 7
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

  00000	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00008	56		 push	 esi
  00009	89 44 24 0c	 mov	 DWORD PTR __$ArrayPad$[esp+16], eax

; 102  : 	UINT nACP = 0;

  0000d	33 f6		 xor	 esi, esi

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetThreadLocale@0

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

  00015	6a 07		 push	 7
  00017	8d 4c 24 08	 lea	 ecx, DWORD PTR _szACP$[esp+20]
  0001b	51		 push	 ecx
  0001c	68 04 10 00 00	 push	 4100			; 00001004H
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocaleInfoA@16
  00028	85 c0		 test	 eax, eax
  0002a	74 21		 je	 SHORT $L135844

; 111  : 	{
; 112  : 		char* pch = szACP;
; 113  : 		while (*pch != '\0')

  0002c	8a 44 24 04	 mov	 al, BYTE PTR _szACP$[esp+16]
  00030	84 c0		 test	 al, al
  00032	8d 4c 24 04	 lea	 ecx, DWORD PTR _szACP$[esp+16]
  00036	74 15		 je	 SHORT $L135844
$L58550:

; 114  : 		{
; 115  : 			nACP *= 10;
; 116  : 			nACP += *pch++ - '0';

  00038	0f be c0	 movsx	 eax, al
  0003b	8d 14 b6	 lea	 edx, DWORD PTR [esi+esi*4]
  0003e	41		 inc	 ecx
  0003f	8d 74 50 d0	 lea	 esi, DWORD PTR [eax+edx*2-48]
  00043	8a 01		 mov	 al, BYTE PTR [ecx]
  00045	84 c0		 test	 al, al
  00047	75 ef		 jne	 SHORT $L58550

; 117  : 		}
; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

  00049	85 f6		 test	 esi, esi
  0004b	75 14		 jne	 SHORT $L135845
$L135844:

; 121  : 		nACP = ::GetACP();

  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetACP@0
  00053	5e		 pop	 esi

; 122  : 
; 123  : 	return nACP;
; 124  : }

  00054	8b 4c 24 08	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+12]
  00058	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	c3		 ret	 0
$L135845:
  00061	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16]
  00065	8b c6		 mov	 eax, esi
  00067	5e		 pop	 esi
  00068	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00070	c3		 ret	 0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
_TEXT	ENDS
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 128  : 	return( CP_THREAD_ACP );

  00000	b8 03 00 00 00	 mov	 eax, 3

; 129  : }

  00005	c3		 ret	 0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
EXTRN	__imp__GetVersionExA@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_ver$ = -152						; size = 148
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

  00000	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	89 84 24 94 00
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+152], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );
; 139  : 	::GetVersionEx( &ver );

  00012	8d 04 24	 lea	 eax, DWORD PTR _ver$[esp+152]
  00015	50		 push	 eax
  00016	c7 44 24 04 94
	00 00 00	 mov	 DWORD PTR _ver$[esp+156], 148 ; 00000094H
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersionExA@4

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

  00024	83 7c 24 10 02	 cmp	 DWORD PTR _ver$[esp+168], 2
  00029	75 0c		 jne	 SHORT $L58560
  0002b	83 7c 24 04 05	 cmp	 DWORD PTR _ver$[esp+156], 5

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

  00030	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal
  00035	73 05		 jae	 SHORT $L58561
$L58560:

; 144  : 	}
; 145  : 	else
; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

  00037	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L58561:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

  0003c	50		 push	 eax
  0003d	68 00 00 00 00	 push	 OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedExchange@8

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

  00048	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP

; 152  : }

  0004e	8b 8c 24 94 00
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+152]
  00055	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005a	81 c4 98 00 00
	00		 add	 esp, 152		; 00000098H
  00060	c3		 ret	 0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
PUBLIC	?size@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEIXZ ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	75 01		 jne	 SHORT $L135863

; 517  : 		}

  00007	c3		 ret	 0
$L135863:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00008	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000b	2b c8		 sub	 ecx, eax
  0000d	b8 e9 a2 8b 2e	 mov	 eax, 780903145		; 2e8ba2e9H
  00012	f7 e9		 imul	 ecx
  00014	c1 fa 03	 sar	 edx, 3
  00017	8b c2		 mov	 eax, edx
  00019	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001c	03 c2		 add	 eax, edx

; 517  : 		}

  0001e	c3		 ret	 0
?size@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::size
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator+=
; Function compile flags: /Ogty
;	COMDAT ??Yiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	6b c9 2c	 imul	 ecx, 44			; 0000002cH
  0000b	03 d1		 add	 edx, ecx
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEABUtagTENTRYRECORD@@XZ ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEABUtagTENTRYRECORD@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEABUtagTENTRYRECORD@@XZ PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEABUtagTENTRYRECORD@@XZ ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?Release@CStringData@ATL@@QAEXXZ		; ATL::CStringData::Release
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
?Release@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::Release, COMDAT
; _this$ = ecx

; 93   : 		ATLASSERT( nRefs != 0 );
; 94   : 
; 95   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

  00000	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  00003	83 ca ff	 or	 edx, -1
  00006	f0 0f c1 10	 lock	  xadd	 DWORD PTR [eax], edx
  0000a	4a		 dec	 edx
  0000b	85 d2		 test	 edx, edx
  0000d	7f 0a		 jg	 SHORT $L73499

; 96   : 		{
; 97   : 			pStringMgr->Free( this );

  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	8b 10		 mov	 edx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	8b c8		 mov	 ecx, eax
  00016	ff 52 04	 call	 DWORD PTR [edx+4]
$L73499:

; 98   : 		}
; 99   : 	}

  00019	c3		 ret	 0
?Release@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::Release
_TEXT	ENDS
PUBLIC	?assign@?$char_traits@D@std@@SAXAADABD@Z	; std::char_traits<char>::assign
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
;	COMDAT ?assign@?$char_traits@D@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$char_traits@D@std@@SAXAADABD@Z PROC NEAR	; std::char_traits<char>::assign, COMDAT

; 331  : 		_Left = _Right;

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Right$[esp-4]
  00004	8a 08		 mov	 cl, BYTE PTR [eax]
  00006	8b 54 24 04	 mov	 edx, DWORD PTR __Left$[esp-4]
  0000a	88 0a		 mov	 BYTE PTR [edx], cl

; 332  : 		}

  0000c	c3		 ret	 0
?assign@?$char_traits@D@std@@SAXAADABD@Z ENDP		; std::char_traits<char>::assign
_TEXT	ENDS
PUBLIC	?length@?$char_traits@D@std@@SAIPBD@Z		; std::char_traits<char>::length
; Function compile flags: /Ogty
;	COMDAT ?length@?$char_traits@D@std@@SAIPBD@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
?length@?$char_traits@D@std@@SAIPBD@Z PROC NEAR		; std::char_traits<char>::length, COMDAT

; 352  : 		return (::strlen(_First));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __First$[esp-4]
  00004	8d 50 01	 lea	 edx, DWORD PTR [eax+1]
$L135883:
  00007	8a 08		 mov	 cl, BYTE PTR [eax]
  00009	40		 inc	 eax
  0000a	84 c9		 test	 cl, cl
  0000c	75 f9		 jne	 SHORT $L135883
  0000e	2b c2		 sub	 eax, edx

; 353  : 		}

  00010	c3		 ret	 0
?length@?$char_traits@D@std@@SAIPBD@Z ENDP		; std::char_traits<char>::length
_TEXT	ENDS
PUBLIC	?copy@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::copy
; Function compile flags: /Ogty
;	COMDAT ?copy@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::copy, COMDAT

; 358  : 		return ((_Elem *)::memcpy(_First1, _First2, _Count));

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR __Count$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR __First2$[esp]
  00009	57		 push	 edi
  0000a	8b 7c 24 0c	 mov	 edi, DWORD PTR __First1$[esp+4]
  0000e	8b c1		 mov	 eax, ecx
  00010	8b d7		 mov	 edx, edi
  00012	c1 e9 02	 shr	 ecx, 2
  00015	f3 a5		 rep movsd
  00017	8b c8		 mov	 ecx, eax
  00019	83 e1 03	 and	 ecx, 3
  0001c	f3 a4		 rep movsb
  0001e	5f		 pop	 edi
  0001f	8b c2		 mov	 eax, edx
  00021	5e		 pop	 esi

; 359  : 		}

  00022	c3		 ret	 0
?copy@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::copy
_TEXT	ENDS
PUBLIC	?move@?$char_traits@D@std@@SAPADPADPBDI@Z	; std::char_traits<char>::move
EXTRN	_memmove:NEAR
; Function compile flags: /Ogty
;	COMDAT ?move@?$char_traits@D@std@@SAPADPADPBDI@Z
_TEXT	SEGMENT
__First1$ = 8						; size = 4
__First2$ = 12						; size = 4
__Count$ = 16						; size = 4
?move@?$char_traits@D@std@@SAPADPADPBDI@Z PROC NEAR	; std::char_traits<char>::move, COMDAT

; 370  : 		return ((_Elem *)::memmove(_First1, _First2, _Count));

  00000	e9 00 00 00 00	 jmp	 _memmove
?move@?$char_traits@D@std@@SAPADPADPBDI@Z ENDP		; std::char_traits<char>::move
_TEXT	ENDS
PUBLIC	??0tagPACKETBUF@@QAE@XZ				; tagPACKETBUF::tagPACKETBUF
EXTRN	??0CPacket@@QAE@XZ:NEAR				; CPacket::CPacket
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
;	COMDAT ??0tagPACKETBUF@@QAE@XZ
_TEXT	SEGMENT
??0tagPACKETBUF@@QAE@XZ PROC NEAR			; tagPACKETBUF::tagPACKETBUF, COMDAT
; _this$ = ecx

; 121  : 	tagPACKETBUF()

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00006	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket

; 122  : 	{
; 123  : 		m_pSESSION = NULL;

  0000b	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0

; 124  : 	};

  00011	8b c6		 mov	 eax, esi
  00013	5e		 pop	 esi
  00014	c3		 ret	 0
??0tagPACKETBUF@@QAE@XZ ENDP				; tagPACKETBUF::tagPACKETBUF
_TEXT	ENDS
PUBLIC	??1tagPACKETBUF@@QAE@XZ				; tagPACKETBUF::~tagPACKETBUF
EXTRN	??1CPacket@@UAE@XZ:NEAR				; CPacket::~CPacket
; Function compile flags: /Ogty
;	COMDAT ??1tagPACKETBUF@@QAE@XZ
_TEXT	SEGMENT
??1tagPACKETBUF@@QAE@XZ PROC NEAR			; tagPACKETBUF::~tagPACKETBUF, COMDAT
; _this$ = ecx
  00000	83 c1 04	 add	 ecx, 4
  00003	e9 00 00 00 00	 jmp	 ??1CPacket@@UAE@XZ	; CPacket::~CPacket
??1tagPACKETBUF@@QAE@XZ ENDP				; tagPACKETBUF::~tagPACKETBUF
_TEXT	ENDS
PUBLIC	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ		; ATL::CSimpleStringT<char,0>::operator char const *
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::operator char const *, COMDAT
; _this$ = ecx

; 379  : 		return( m_pszData );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 380  : 	}

  00002	c3		 ret	 0
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP		; ATL::CSimpleStringT<char,0>::operator char const *
_TEXT	ENDS
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 1109 : 		return (_Mysize);

  00000	8b 41 14	 mov	 eax, DWORD PTR [ecx+20]

; 1110 : 		}

  00003	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
PUBLIC	?size@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEIXZ ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	75 03		 jne	 SHORT $L135908
  00007	33 c0		 xor	 eax, eax

; 517  : 		}

  00009	c3		 ret	 0
$L135908:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  0000a	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000d	2b c2		 sub	 eax, edx
  0000f	c1 f8 02	 sar	 eax, 2

; 517  : 		}

  00012	c3		 ret	 0
?size@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::size
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L135913
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  00009	c3		 ret	 0
$L135913:

; 1537 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1538 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@ABV01@@Z		; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
??0?$allocator@D@std@@QAE@ABV01@@Z PROC NEAR		; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 115  : 	allocator(const allocator<_Ty>&)

  00000	8b c1		 mov	 eax, ecx

; 116  : 		{	// construct by copying (do nothing)
; 117  : 		}

  00002	c2 04 00	 ret	 4
??0?$allocator@D@std@@QAE@ABV01@@Z ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetData, COMDAT
; _this$ = ecx

; 731  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 732  : 	}

  00005	c3		 ret	 0
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ENDP ; ATL::CSimpleStringT<char,0>::GetData
_TEXT	ENDS
PUBLIC	?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ
_TEXT	SEGMENT
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr, COMDAT
; _this$ = ecx

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L135924
  00006	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  00009	c3		 ret	 0
$L135924:

; 1532 : 		return (_BUF_SIZE <= _Myres ? _Bx._Ptr : _Bx._Buf);

  0000a	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]

; 1533 : 		}

  0000d	c3		 ret	 0
?_Myptr@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEPADXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Myptr
_TEXT	ENDS
PUBLIC	?deallocate@?$allocator@D@std@@QAEXPADI@Z	; std::allocator<char>::deallocate
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXPADI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
___formal$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXPADI@Z PROC NEAR	; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 132  : 		operator delete(_Ptr);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Ptr$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0000a	59		 pop	 ecx

; 133  : 		}

  0000b	c2 08 00	 ret	 8
?deallocate@?$allocator@D@std@@QAEXPADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::operator+=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Yiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 8d 00 00
	00 00		 lea	 edx, DWORD PTR [ecx*4]
  0000d	01 10		 add	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  0000f	c2 04 00	 ret	 4
??Yiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEABUtagTCASHITMSALE@@XZ ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEABUtagTCASHITMSALE@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEABUtagTCASHITMSALE@@XZ PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEABUtagTCASHITMSALE@@XZ ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside, COMDAT
; _this$ = ecx

; 1494 : 		{	// test if _Ptr points inside string

  00000	56		 push	 esi

; 1495 : 		if (_Ptr < _Myptr() || _Myptr() + _Mysize <= _Ptr)

  00001	8b 71 18	 mov	 esi, DWORD PTR [ecx+24]
  00004	83 fe 10	 cmp	 esi, 16			; 00000010H
  00007	57		 push	 edi
  00008	8d 41 04	 lea	 eax, DWORD PTR [ecx+4]
  0000b	72 04		 jb	 SHORT $L135943
  0000d	8b 10		 mov	 edx, DWORD PTR [eax]
  0000f	eb 02		 jmp	 SHORT $L135944
$L135943:
  00011	8b d0		 mov	 edx, eax
$L135944:
  00013	8b 7c 24 0c	 mov	 edi, DWORD PTR __Ptr$[esp+4]
  00017	3b fa		 cmp	 edi, edx
  00019	72 17		 jb	 SHORT $L120182
  0001b	83 fe 10	 cmp	 esi, 16			; 00000010H
  0001e	72 02		 jb	 SHORT $L135951
  00020	8b 00		 mov	 eax, DWORD PTR [eax]
$L135951:
  00022	8b 49 14	 mov	 ecx, DWORD PTR [ecx+20]
  00025	03 c8		 add	 ecx, eax
  00027	3b cf		 cmp	 ecx, edi
  00029	76 07		 jbe	 SHORT $L120182
  0002b	5f		 pop	 edi

; 1497 : 		else
; 1498 : 			return (true);

  0002c	b0 01		 mov	 al, 1
  0002e	5e		 pop	 esi

; 1499 : 		}

  0002f	c2 04 00	 ret	 4
$L120182:
  00032	5f		 pop	 edi

; 1496 : 			return (false);	// don't ask

  00033	32 c0		 xor	 al, al
  00035	5e		 pop	 esi

; 1499 : 		}

  00036	c2 04 00	 ret	 4
?_Inside@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NPBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Inside
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::const_iterator::const_iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0const_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	??0?$allocator@D@std@@QAE@XZ			; std::allocator<char>::allocator<char>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QAE@XZ
_TEXT	SEGMENT
??0?$allocator@D@std@@QAE@XZ PROC NEAR			; std::allocator<char>::allocator<char>, COMDAT
; _this$ = ecx

; 111  : 	allocator()

  00000	8b c1		 mov	 eax, ecx

; 112  : 		{	// construct default allocator (do nothing)
; 113  : 		}

  00002	c3		 ret	 0
??0?$allocator@D@std@@QAE@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
PUBLIC	?max_size@?$allocator@D@std@@QBEIXZ		; std::allocator<char>::max_size
; Function compile flags: /Ogty
;	COMDAT ?max_size@?$allocator@D@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$allocator@D@std@@QBEIXZ PROC NEAR		; std::allocator<char>::max_size, COMDAT
; _this$ = ecx

; 157  : 		_SIZT _Count = (_SIZT)(-1) / sizeof (_Ty);
; 158  : 		return (0 < _Count ? _Count : 1);

  00000	83 c8 ff	 or	 eax, -1

; 159  : 		}

  00003	c3		 ret	 0
?max_size@?$allocator@D@std@@QBEIXZ ENDP		; std::allocator<char>::max_size
_TEXT	ENDS
PUBLIC	??$_Allocate@D@std@@YAPADIPAD@Z			; std::_Allocate<char>
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
; Function compile flags: /Ogty
;	COMDAT ??$_Allocate@D@std@@YAPADIPAD@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Allocate@D@std@@YAPADIPAD@Z PROC NEAR		; std::_Allocate<char>, COMDAT

; 34   : 	return ((_Ty _FARQ *)operator new(_Count * sizeof (_Ty)));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 35   : 	}

  0000d	c3		 ret	 0
??$_Allocate@D@std@@YAPADIPAD@Z ENDP			; std::_Allocate<char>
_TEXT	ENDS
PUBLIC	?SendDM_FRIENDLIST_REQ@CTWorldSvrModule@@QAEXKK@Z ; CTWorldSvrModule::SendDM_FRIENDLIST_REQ
EXTRN	?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z:NEAR ; CTWorldSvrModule::SayToDB
EXTRN	?SetID@CPacket@@QAEAAV1@G@Z:NEAR		; CPacket::SetID
EXTRN	??6CPacket@@QAEAAV0@K@Z:NEAR			; CPacket::operator<<
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T135984 DD	0ffffffffH
	DD	FLAT:$L135973
$T135981 DD	019930520H
	DD	01H
	DD	FLAT:$T135984
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_FRIENDLIST_REQ@CTWorldSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T135970 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
?SendDM_FRIENDLIST_REQ@CTWorldSvrModule@@QAEXKK@Z PROC NEAR ; CTWorldSvrModule::SendDM_FRIENDLIST_REQ, COMDAT
; _this$ = ecx

; 7    : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_FRIENDLIST_REQ@CTWorldSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 8    : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T135970[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L135971
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L135972
$L135971:
  00046	33 f6		 xor	 esi, esi
$L135972:

; 9    : 
; 10   : 	pBUF->m_packet.SetID(DM_FRIENDLIST_REQ)
; 11   : 		<< dwCharID
; 12   : 		<< dwKey;

  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwKey$[esp+20]
  0004c	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	68 16 90 00 00	 push	 36886			; 00009016H
  00057	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005a	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 13   : 
; 14   : 	SayToDB(pBUF);

  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 15   : }

  0007d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L135973:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T135970[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_FRIENDLIST_REQ@CTWorldSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T135981
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_FRIENDLIST_REQ@CTWorldSvrModule@@QAEXKK@Z ENDP	; CTWorldSvrModule::SendDM_FRIENDLIST_REQ
PUBLIC	?SendDM_SOULMATELIST_REQ@CTWorldSvrModule@@QAEXKK@Z ; CTWorldSvrModule::SendDM_SOULMATELIST_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136003 DD	0ffffffffH
	DD	FLAT:$L135995
$T136001 DD	019930520H
	DD	01H
	DD	FLAT:$T136003
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_SOULMATELIST_REQ@CTWorldSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T135992 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKEY$ = 12						; size = 4
?SendDM_SOULMATELIST_REQ@CTWorldSvrModule@@QAEXKK@Z PROC NEAR ; CTWorldSvrModule::SendDM_SOULMATELIST_REQ, COMDAT
; _this$ = ecx

; 19   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_SOULMATELIST_REQ@CTWorldSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 20   : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T135992[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L135993
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L135994
$L135993:
  00046	33 f6		 xor	 esi, esi
$L135994:

; 21   : 
; 22   : 	pBUF->m_packet.SetID(DM_SOULMATELIST_REQ)
; 23   : 		<< dwCharID
; 24   : 		<< dwKEY;

  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwKEY$[esp+20]
  0004c	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	68 63 90 00 00	 push	 36963			; 00009063H
  00057	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005a	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 25   : 
; 26   : 	SayToDB(pBUF);

  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 27   : }

  0007d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L135995:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T135992[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_SOULMATELIST_REQ@CTWorldSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136001
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_SOULMATELIST_REQ@CTWorldSvrModule@@QAEXKK@Z ENDP ; CTWorldSvrModule::SendDM_SOULMATELIST_REQ
PUBLIC	?SendDM_SOULMATEREG_REQ@CTWorldSvrModule@@QAEXKKKEEE@Z ; CTWorldSvrModule::SendDM_SOULMATEREG_REQ
EXTRN	??6CPacket@@QAEAAV0@E@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136021 DD	0ffffffffH
	DD	FLAT:$L136013
$T136019 DD	019930520H
	DD	01H
	DD	FLAT:$T136021
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_SOULMATEREG_REQ@CTWorldSvrModule@@QAEXKKKEEE@Z
_TEXT	SEGMENT
$T136010 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwTarget$ = 16						; size = 4
_bSearch$ = 20						; size = 1
_bNpcInvenID$ = 24					; size = 1
_bNpcItemID$ = 28					; size = 1
?SendDM_SOULMATEREG_REQ@CTWorldSvrModule@@QAEXKKKEEE@Z PROC NEAR ; CTWorldSvrModule::SendDM_SOULMATEREG_REQ, COMDAT
; _this$ = ecx

; 35   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_SOULMATEREG_REQ@CTWorldSvrModule@@QAEXKKKEEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 36   : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136010[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136011
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136012
$L136011:
  00046	33 f6		 xor	 esi, esi
$L136012:

; 37   : 
; 38   : 	pBUF->m_packet.SetID(DM_SOULMATEREG_REQ)
; 39   : 		<< dwCharID
; 40   : 		<< dwKey
; 41   : 		<< dwTarget
; 42   : 		<< bSearch
; 43   : 		<< bNpcInvenID
; 44   : 		<< bNpcItemID;

  00048	8b 44 24 30	 mov	 eax, DWORD PTR _bNpcItemID$[esp+20]
  0004c	8b 4c 24 2c	 mov	 ecx, DWORD PTR _bNpcInvenID$[esp+20]
  00050	8b 54 24 28	 mov	 edx, DWORD PTR _bSearch$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 28	 mov	 eax, DWORD PTR _dwTarget$[esp+24]
  00059	51		 push	 ecx
  0005a	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwKey$[esp+28]
  0005e	52		 push	 edx
  0005f	8b 54 24 28	 mov	 edx, DWORD PTR _dwCharID$[esp+32]
  00063	50		 push	 eax
  00064	51		 push	 ecx
  00065	52		 push	 edx
  00066	68 65 90 00 00	 push	 36965			; 00009065H
  0006b	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0006e	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  00076	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0009e	8b c8		 mov	 ecx, eax
  000a0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 45   : 
; 46   : 	SayToDB(pBUF);

  000a5	56		 push	 esi
  000a6	8b cf		 mov	 ecx, edi
  000a8	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 47   : }

  000ad	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ba	83 c4 10	 add	 esp, 16			; 00000010H
  000bd	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136013:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136010[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_SOULMATEREG_REQ@CTWorldSvrModule@@QAEXKKKEEE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136019
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_SOULMATEREG_REQ@CTWorldSvrModule@@QAEXKKKEEE@Z ENDP ; CTWorldSvrModule::SendDM_SOULMATEREG_REQ
PUBLIC	?SendDM_SOULMATEEND_REQ@CTWorldSvrModule@@QAEXKKK@Z ; CTWorldSvrModule::SendDM_SOULMATEEND_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136039 DD	0ffffffffH
	DD	FLAT:$L136031
$T136037 DD	019930520H
	DD	01H
	DD	FLAT:$T136039
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_SOULMATEEND_REQ@CTWorldSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT
$T136028 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwTime$ = 16						; size = 4
?SendDM_SOULMATEEND_REQ@CTWorldSvrModule@@QAEXKKK@Z PROC NEAR ; CTWorldSvrModule::SendDM_SOULMATEEND_REQ, COMDAT
; _this$ = ecx

; 52   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_SOULMATEEND_REQ@CTWorldSvrModule@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 53   : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136028[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136029
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136030
$L136029:
  00046	33 f6		 xor	 esi, esi
$L136030:

; 54   : 
; 55   : 	pBUF->m_packet.SetID(DM_SOULMATEEND_REQ)
; 56   : 		<< dwCharID
; 57   : 		<< dwKey
; 58   : 		<< dwTime;

  00048	8b 44 24 24	 mov	 eax, DWORD PTR _dwTime$[esp+20]
  0004c	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00050	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	52		 push	 edx
  00057	68 66 90 00 00	 push	 36966			; 00009066H
  0005c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005f	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 59   : 
; 60   : 	SayToDB(pBUF);

  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 61   : }

  00089	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00096	83 c4 10	 add	 esp, 16			; 00000010H
  00099	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136031:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136028[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_SOULMATEEND_REQ@CTWorldSvrModule@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136037
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_SOULMATEEND_REQ@CTWorldSvrModule@@QAEXKKK@Z ENDP ; CTWorldSvrModule::SendDM_SOULMATEEND_REQ
PUBLIC	?SendDM_SOULMATEDEL_REQ@CTWorldSvrModule@@QAEXKK@Z ; CTWorldSvrModule::SendDM_SOULMATEDEL_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136057 DD	0ffffffffH
	DD	FLAT:$L136049
$T136055 DD	019930520H
	DD	01H
	DD	FLAT:$T136057
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_SOULMATEDEL_REQ@CTWorldSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T136046 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwSoul$ = 12						; size = 4
?SendDM_SOULMATEDEL_REQ@CTWorldSvrModule@@QAEXKK@Z PROC NEAR ; CTWorldSvrModule::SendDM_SOULMATEDEL_REQ, COMDAT
; _this$ = ecx

; 64   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_SOULMATEDEL_REQ@CTWorldSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 65   : 	LPPACKETBUF pBUF = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136046[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136047
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136048
$L136047:
  00046	33 f6		 xor	 esi, esi
$L136048:

; 66   : 
; 67   : 	pBUF->m_packet.SetID(DM_SOULMATEDEL_REQ)
; 68   : 		<< dwCharID
; 69   : 		<< dwSoul;

  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwSoul$[esp+20]
  0004c	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	68 67 90 00 00	 push	 36967			; 00009067H
  00057	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005a	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 70   : 
; 71   : 	SayToDB(pBUF);

  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 72   : }

  0007d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136049:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136046[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_SOULMATEDEL_REQ@CTWorldSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136055
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_SOULMATEDEL_REQ@CTWorldSvrModule@@QAEXKK@Z ENDP	; CTWorldSvrModule::SendDM_SOULMATEDEL_REQ
PUBLIC	?SendDM_GUILDDUTY_REQ@CTWorldSvrModule@@QAEXKKE@Z ; CTWorldSvrModule::SendDM_GUILDDUTY_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136075 DD	0ffffffffH
	DD	FLAT:$L136067
$T136073 DD	019930520H
	DD	01H
	DD	FLAT:$T136075
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDDUTY_REQ@CTWorldSvrModule@@QAEXKKE@Z
_TEXT	SEGMENT
$T136064 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwGuildID$ = 12					; size = 4
_bDuty$ = 16						; size = 1
?SendDM_GUILDDUTY_REQ@CTWorldSvrModule@@QAEXKKE@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDDUTY_REQ, COMDAT
; _this$ = ecx

; 77   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDDUTY_REQ@CTWorldSvrModule@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 78   : 	LPPACKETBUF pMsg = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136064[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136065
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136066
$L136065:
  00046	33 f6		 xor	 esi, esi
$L136066:

; 79   : 
; 80   : 	pMsg->m_packet.SetID(DM_GUILDDUTY_REQ)
; 81   : 		<< dwCharID
; 82   : 		<< dwGuildID
; 83   : 		<< bDuty;

  00048	8b 44 24 24	 mov	 eax, DWORD PTR _bDuty$[esp+20]
  0004c	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwGuildID$[esp+20]
  00050	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	52		 push	 edx
  00057	68 45 90 00 00	 push	 36933			; 00009045H
  0005c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005f	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 84   : 
; 85   : 	SayToDB(pMsg);

  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 86   : }

  00089	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00096	83 c4 10	 add	 esp, 16			; 00000010H
  00099	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136067:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136064[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDDUTY_REQ@CTWorldSvrModule@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136073
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDDUTY_REQ@CTWorldSvrModule@@QAEXKKE@Z ENDP	; CTWorldSvrModule::SendDM_GUILDDUTY_REQ
PUBLIC	?SendDM_GUILDPEER_REQ@CTWorldSvrModule@@QAEXKKE@Z ; CTWorldSvrModule::SendDM_GUILDPEER_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136093 DD	0ffffffffH
	DD	FLAT:$L136085
$T136091 DD	019930520H
	DD	01H
	DD	FLAT:$T136093
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDPEER_REQ@CTWorldSvrModule@@QAEXKKE@Z
_TEXT	SEGMENT
$T136082 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwGuildID$ = 12					; size = 4
_bPeer$ = 16						; size = 1
?SendDM_GUILDPEER_REQ@CTWorldSvrModule@@QAEXKKE@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDPEER_REQ, COMDAT
; _this$ = ecx

; 91   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDPEER_REQ@CTWorldSvrModule@@QAEXKKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 92   : 	LPPACKETBUF pMsg = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136082[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136083
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136084
$L136083:
  00046	33 f6		 xor	 esi, esi
$L136084:

; 93   : 
; 94   : 	pMsg->m_packet.SetID(DM_GUILDPEER_REQ)
; 95   : 		<< dwCharID
; 96   : 		<< dwGuildID
; 97   : 		<< bPeer;

  00048	8b 44 24 24	 mov	 eax, DWORD PTR _bPeer$[esp+20]
  0004c	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwGuildID$[esp+20]
  00050	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	52		 push	 edx
  00057	68 46 90 00 00	 push	 36934			; 00009046H
  0005c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005f	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 98   : 
; 99   : 	SayToDB(pMsg);

  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 100  : }

  00089	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00096	83 c4 10	 add	 esp, 16			; 00000010H
  00099	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136085:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136082[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDPEER_REQ@CTWorldSvrModule@@QAEXKKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136091
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDPEER_REQ@CTWorldSvrModule@@QAEXKKE@Z ENDP	; CTWorldSvrModule::SendDM_GUILDPEER_REQ
PUBLIC	?SendDM_GUILDMEMBERADD_REQ@CTWorldSvrModule@@QAEXKKEE@Z ; CTWorldSvrModule::SendDM_GUILDMEMBERADD_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136111 DD	0ffffffffH
	DD	FLAT:$L136103
$T136109 DD	019930520H
	DD	01H
	DD	FLAT:$T136111
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDMEMBERADD_REQ@CTWorldSvrModule@@QAEXKKEE@Z
_TEXT	SEGMENT
$T136100 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwGuildID$ = 8						; size = 4
_dwCharID$ = 12						; size = 4
_bLevel$ = 16						; size = 1
_bDuty$ = 20						; size = 1
?SendDM_GUILDMEMBERADD_REQ@CTWorldSvrModule@@QAEXKKEE@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDMEMBERADD_REQ, COMDAT
; _this$ = ecx

; 106  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDMEMBERADD_REQ@CTWorldSvrModule@@QAEXKKEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 107  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136100[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136101
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136102
$L136101:
  00046	33 f6		 xor	 esi, esi
$L136102:

; 108  : 
; 109  : 	pMsg->m_packet.SetID(DM_GUILDMEMBERADD_REQ)
; 110  : 		<< dwGuildID
; 111  : 		<< dwCharID
; 112  : 		<< bLevel
; 113  : 		<< bDuty;

  00048	8b 44 24 28	 mov	 eax, DWORD PTR _bDuty$[esp+20]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _bLevel$[esp+20]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 20	 mov	 eax, DWORD PTR _dwGuildID$[esp+24]
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	50		 push	 eax
  0005c	68 47 90 00 00	 push	 36935			; 00009047H
  00061	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00064	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0006c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 114  : 
; 115  : 	SayToDB(pMsg);

  0008d	56		 push	 esi
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 116  : }

  00095	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a2	83 c4 10	 add	 esp, 16			; 00000010H
  000a5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136103:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136100[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDMEMBERADD_REQ@CTWorldSvrModule@@QAEXKKEE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136109
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDMEMBERADD_REQ@CTWorldSvrModule@@QAEXKKEE@Z ENDP ; CTWorldSvrModule::SendDM_GUILDMEMBERADD_REQ
PUBLIC	?SendDM_GUILDARTICLEDEL_REQ@CTWorldSvrModule@@QAEXKK@Z ; CTWorldSvrModule::SendDM_GUILDARTICLEDEL_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136129 DD	0ffffffffH
	DD	FLAT:$L136121
$T136127 DD	019930520H
	DD	01H
	DD	FLAT:$T136129
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDARTICLEDEL_REQ@CTWorldSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T136118 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwGuildID$ = 8						; size = 4
_dwID$ = 12						; size = 4
?SendDM_GUILDARTICLEDEL_REQ@CTWorldSvrModule@@QAEXKK@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDARTICLEDEL_REQ, COMDAT
; _this$ = ecx

; 142  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDARTICLEDEL_REQ@CTWorldSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 143  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136118[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136119
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136120
$L136119:
  00046	33 f6		 xor	 esi, esi
$L136120:

; 144  : 
; 145  : 	pMsg->m_packet.SetID(DM_GUILDARTICLEDEL_REQ)
; 146  : 		<< dwGuildID
; 147  : 		<< dwID;

  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwID$[esp+20]
  0004c	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwGuildID$[esp+20]
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	68 49 90 00 00	 push	 36937			; 00009049H
  00057	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005a	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 148  : 
; 149  : 	SayToDB(pMsg);

  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 150  : }

  0007d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136121:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136118[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDARTICLEDEL_REQ@CTWorldSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136127
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDARTICLEDEL_REQ@CTWorldSvrModule@@QAEXKK@Z ENDP ; CTWorldSvrModule::SendDM_GUILDARTICLEDEL_REQ
PUBLIC	?SendDM_GUILDFAME_REQ@CTWorldSvrModule@@QAEXKKK@Z ; CTWorldSvrModule::SendDM_GUILDFAME_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136147 DD	0ffffffffH
	DD	FLAT:$L136139
$T136145 DD	019930520H
	DD	01H
	DD	FLAT:$T136147
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDFAME_REQ@CTWorldSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT
$T136136 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwGuildID$ = 8						; size = 4
_dwFame$ = 12						; size = 4
_dwFameColor$ = 16					; size = 4
?SendDM_GUILDFAME_REQ@CTWorldSvrModule@@QAEXKKK@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDFAME_REQ, COMDAT
; _this$ = ecx

; 171  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDFAME_REQ@CTWorldSvrModule@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 172  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136136[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136137
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136138
$L136137:
  00046	33 f6		 xor	 esi, esi
$L136138:

; 173  : 
; 174  : 	pMsg->m_packet.SetID(DM_GUILDFAME_REQ)
; 175  : 		<< dwGuildID
; 176  : 		<< dwFame
; 177  : 		<< dwFameColor;

  00048	8b 44 24 24	 mov	 eax, DWORD PTR _dwFameColor$[esp+20]
  0004c	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwFame$[esp+20]
  00050	8b 54 24 1c	 mov	 edx, DWORD PTR _dwGuildID$[esp+20]
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	52		 push	 edx
  00057	68 4a 90 00 00	 push	 36938			; 0000904aH
  0005c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005f	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 178  : 
; 179  : 	SayToDB(pMsg);

  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 180  : }

  00089	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00096	83 c4 10	 add	 esp, 16			; 00000010H
  00099	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136139:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136136[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDFAME_REQ@CTWorldSvrModule@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136145
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDFAME_REQ@CTWorldSvrModule@@QAEXKKK@Z ENDP	; CTWorldSvrModule::SendDM_GUILDFAME_REQ
PUBLIC	?SendDM_GUILDLEVEL_REQ@CTWorldSvrModule@@QAEXKE@Z ; CTWorldSvrModule::SendDM_GUILDLEVEL_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136165 DD	0ffffffffH
	DD	FLAT:$L136157
$T136163 DD	019930520H
	DD	01H
	DD	FLAT:$T136165
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDLEVEL_REQ@CTWorldSvrModule@@QAEXKE@Z
_TEXT	SEGMENT
$T136154 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwGuildID$ = 8						; size = 4
_bLevel$ = 12						; size = 1
?SendDM_GUILDLEVEL_REQ@CTWorldSvrModule@@QAEXKE@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDLEVEL_REQ, COMDAT
; _this$ = ecx

; 184  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDLEVEL_REQ@CTWorldSvrModule@@QAEXKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 185  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136154[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136155
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136156
$L136155:
  00046	33 f6		 xor	 esi, esi
$L136156:

; 186  : 
; 187  : 	pMsg->m_packet.SetID(DM_GUILDLEVEL_REQ)
; 188  : 		<< dwGuildID
; 189  : 		<< bLevel;

  00048	8b 44 24 20	 mov	 eax, DWORD PTR _bLevel$[esp+20]
  0004c	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwGuildID$[esp+20]
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	68 4b 90 00 00	 push	 36939			; 0000904bH
  00057	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005a	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 190  : 
; 191  : 	SayToDB(pMsg);

  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 192  : }

  0007d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136157:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136154[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDLEVEL_REQ@CTWorldSvrModule@@QAEXKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136163
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDLEVEL_REQ@CTWorldSvrModule@@QAEXKE@Z ENDP	; CTWorldSvrModule::SendDM_GUILDLEVEL_REQ
PUBLIC	?SendDM_GUILDCABINETMAX_REQ@CTWorldSvrModule@@QAEXKE@Z ; CTWorldSvrModule::SendDM_GUILDCABINETMAX_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136183 DD	0ffffffffH
	DD	FLAT:$L136175
$T136181 DD	019930520H
	DD	01H
	DD	FLAT:$T136183
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDCABINETMAX_REQ@CTWorldSvrModule@@QAEXKE@Z
_TEXT	SEGMENT
$T136172 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwGuildID$ = 8						; size = 4
_bMaxCabinet$ = 12					; size = 1
?SendDM_GUILDCABINETMAX_REQ@CTWorldSvrModule@@QAEXKE@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDCABINETMAX_REQ, COMDAT
; _this$ = ecx

; 196  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDCABINETMAX_REQ@CTWorldSvrModule@@QAEXKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 197  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136172[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136173
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136174
$L136173:
  00046	33 f6		 xor	 esi, esi
$L136174:

; 198  : 
; 199  : 	pMsg->m_packet.SetID(DM_GUILDCABINETMAX_REQ)
; 200  : 		<< dwGuildID
; 201  : 		<< bMaxCabinet;

  00048	8b 44 24 20	 mov	 eax, DWORD PTR _bMaxCabinet$[esp+20]
  0004c	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwGuildID$[esp+20]
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	68 57 90 00 00	 push	 36951			; 00009057H
  00057	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005a	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 202  : 
; 203  : 	SayToDB(pMsg);

  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 204  : }

  0007d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136175:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136172[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDCABINETMAX_REQ@CTWorldSvrModule@@QAEXKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136181
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDCABINETMAX_REQ@CTWorldSvrModule@@QAEXKE@Z ENDP ; CTWorldSvrModule::SendDM_GUILDCABINETMAX_REQ
PUBLIC	?SendDM_GUILDCONTRIBUTION_REQ@CTWorldSvrModule@@QAEXKKKKKK@Z ; CTWorldSvrModule::SendDM_GUILDCONTRIBUTION_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136201 DD	0ffffffffH
	DD	FLAT:$L136193
$T136199 DD	019930520H
	DD	01H
	DD	FLAT:$T136201
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDCONTRIBUTION_REQ@CTWorldSvrModule@@QAEXKKKKKK@Z
_TEXT	SEGMENT
$T136190 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwGuildID$ = 8						; size = 4
_dwCharID$ = 12						; size = 4
_dwExp$ = 16						; size = 4
_dwGold$ = 20						; size = 4
_dwSilver$ = 24						; size = 4
_dwCooper$ = 28						; size = 4
?SendDM_GUILDCONTRIBUTION_REQ@CTWorldSvrModule@@QAEXKKKKKK@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDCONTRIBUTION_REQ, COMDAT
; _this$ = ecx

; 212  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDCONTRIBUTION_REQ@CTWorldSvrModule@@QAEXKKKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 213  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136190[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136191
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136192
$L136191:
  00046	33 f6		 xor	 esi, esi
$L136192:

; 214  : 
; 215  : 	pMsg->m_packet.SetID(DM_GUILDCONTRIBUTION_REQ)
; 216  : 		<< dwGuildID
; 217  : 		<< dwCharID
; 218  : 		<< dwExp
; 219  : 		<< dwGold
; 220  : 		<< dwSilver
; 221  : 		<< dwCooper;

  00048	8b 44 24 30	 mov	 eax, DWORD PTR _dwCooper$[esp+20]
  0004c	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwSilver$[esp+20]
  00050	8b 54 24 28	 mov	 edx, DWORD PTR _dwGold$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 28	 mov	 eax, DWORD PTR _dwExp$[esp+24]
  00059	51		 push	 ecx
  0005a	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwCharID$[esp+28]
  0005e	52		 push	 edx
  0005f	8b 54 24 28	 mov	 edx, DWORD PTR _dwGuildID$[esp+32]
  00063	50		 push	 eax
  00064	51		 push	 ecx
  00065	52		 push	 edx
  00066	68 4c 90 00 00	 push	 36940			; 0000904cH
  0006b	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0006e	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  00076	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009e	8b c8		 mov	 ecx, eax
  000a0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 222  : 
; 223  : 	SayToDB(pMsg);

  000a5	56		 push	 esi
  000a6	8b cf		 mov	 ecx, edi
  000a8	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 224  : }

  000ad	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000b1	5f		 pop	 edi
  000b2	5e		 pop	 esi
  000b3	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000ba	83 c4 10	 add	 esp, 16			; 00000010H
  000bd	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136193:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136190[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDCONTRIBUTION_REQ@CTWorldSvrModule@@QAEXKKKKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136199
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDCONTRIBUTION_REQ@CTWorldSvrModule@@QAEXKKKKKK@Z ENDP ; CTWorldSvrModule::SendDM_GUILDCONTRIBUTION_REQ
PUBLIC	?SendDM_GUILDLOAD_REQ@CTWorldSvrModule@@QAEXKKK@Z ; CTWorldSvrModule::SendDM_GUILDLOAD_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136219 DD	0ffffffffH
	DD	FLAT:$L136211
$T136217 DD	019930520H
	DD	01H
	DD	FLAT:$T136219
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDLOAD_REQ@CTWorldSvrModule@@QAEXKKK@Z
_TEXT	SEGMENT
$T136208 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_dwGuildID$ = 16					; size = 4
?SendDM_GUILDLOAD_REQ@CTWorldSvrModule@@QAEXKKK@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDLOAD_REQ, COMDAT
; _this$ = ecx

; 229  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDLOAD_REQ@CTWorldSvrModule@@QAEXKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 230  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136208[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136209
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136210
$L136209:
  00046	33 f6		 xor	 esi, esi
$L136210:

; 231  : 
; 232  : 	pMsg->m_packet.SetID(DM_GUILDLOAD_REQ)
; 233  : 		<< dwCharID
; 234  : 		<< dwKey
; 235  : 		<< dwGuildID;

  00048	8b 44 24 24	 mov	 eax, DWORD PTR _dwGuildID$[esp+20]
  0004c	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwKey$[esp+20]
  00050	8b 54 24 1c	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	52		 push	 edx
  00057	68 68 90 00 00	 push	 36968			; 00009068H
  0005c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005f	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 236  : 
; 237  : 	SayToDB(pMsg);

  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 238  : }

  00089	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00096	83 c4 10	 add	 esp, 16			; 00000010H
  00099	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136211:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136208[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDLOAD_REQ@CTWorldSvrModule@@QAEXKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136217
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDLOAD_REQ@CTWorldSvrModule@@QAEXKKK@Z ENDP	; CTWorldSvrModule::SendDM_GUILDLOAD_REQ
PUBLIC	?SendDM_FRIENDERASE_REQ@CTWorldSvrModule@@QAEXKK@Z ; CTWorldSvrModule::SendDM_FRIENDERASE_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136237 DD	0ffffffffH
	DD	FLAT:$L136229
$T136235 DD	019930520H
	DD	01H
	DD	FLAT:$T136237
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_FRIENDERASE_REQ@CTWorldSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T136226 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwTarget$ = 12						; size = 4
?SendDM_FRIENDERASE_REQ@CTWorldSvrModule@@QAEXKK@Z PROC NEAR ; CTWorldSvrModule::SendDM_FRIENDERASE_REQ, COMDAT
; _this$ = ecx

; 242  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_FRIENDERASE_REQ@CTWorldSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 243  : 	LPPACKETBUF pMSG = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136226[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136227
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136228
$L136227:
  00046	33 f6		 xor	 esi, esi
$L136228:

; 244  : 	pMSG->m_packet.SetID(DM_FRIENDERASE_REQ)
; 245  : 		<< dwCharID
; 246  : 		<< dwTarget;

  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwTarget$[esp+20]
  0004c	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	68 19 90 00 00	 push	 36889			; 00009019H
  00057	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005a	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 247  : 
; 248  : 	SayToDB(pMSG);

  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 249  : }

  0007d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136229:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136226[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_FRIENDERASE_REQ@CTWorldSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136235
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_FRIENDERASE_REQ@CTWorldSvrModule@@QAEXKK@Z ENDP	; CTWorldSvrModule::SendDM_FRIENDERASE_REQ
PUBLIC	?SendDM_GUILDPVPOINT_REQ@CTWorldSvrModule@@QAEXKKKK@Z ; CTWorldSvrModule::SendDM_GUILDPVPOINT_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136255 DD	0ffffffffH
	DD	FLAT:$L136247
$T136253 DD	019930520H
	DD	01H
	DD	FLAT:$T136255
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDPVPOINT_REQ@CTWorldSvrModule@@QAEXKKKK@Z
_TEXT	SEGMENT
$T136244 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwGuildID$ = 8						; size = 4
_dwTotalPoint$ = 12					; size = 4
_dwUseablePoint$ = 16					; size = 4
_dwMonthPoint$ = 20					; size = 4
?SendDM_GUILDPVPOINT_REQ@CTWorldSvrModule@@QAEXKKKK@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDPVPOINT_REQ, COMDAT
; _this$ = ecx

; 255  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDPVPOINT_REQ@CTWorldSvrModule@@QAEXKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 256  : 	LPPACKETBUF pMSG = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136244[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136245
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136246
$L136245:
  00046	33 f6		 xor	 esi, esi
$L136246:

; 257  : 	pMSG->m_packet.SetID(DM_GUILDPVPOINT_REQ)
; 258  : 		<< dwGuildID
; 259  : 		<< dwTotalPoint
; 260  : 		<< dwUseablePoint
; 261  : 		<< dwMonthPoint;

  00048	8b 44 24 28	 mov	 eax, DWORD PTR _dwMonthPoint$[esp+20]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwUseablePoint$[esp+20]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _dwTotalPoint$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 20	 mov	 eax, DWORD PTR _dwGuildID$[esp+24]
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	50		 push	 eax
  0005c	68 84 90 00 00	 push	 36996			; 00009084H
  00061	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00064	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0006c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 262  : 
; 263  : 	SayToDB(pMSG);

  0008d	56		 push	 esi
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 264  : }

  00095	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a2	83 c4 10	 add	 esp, 16			; 00000010H
  000a5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136247:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136244[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDPVPOINT_REQ@CTWorldSvrModule@@QAEXKKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136253
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDPVPOINT_REQ@CTWorldSvrModule@@QAEXKKKK@Z ENDP ; CTWorldSvrModule::SendDM_GUILDPVPOINT_REQ
PUBLIC	?SendDM_CASTLEAPPLY_REQ@CTWorldSvrModule@@QAEXGKE@Z ; CTWorldSvrModule::SendDM_CASTLEAPPLY_REQ
EXTRN	??6CPacket@@QAEAAV0@G@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136273 DD	0ffffffffH
	DD	FLAT:$L136265
$T136271 DD	019930520H
	DD	01H
	DD	FLAT:$T136273
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_CASTLEAPPLY_REQ@CTWorldSvrModule@@QAEXGKE@Z
_TEXT	SEGMENT
$T136262 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wCastle$ = 8						; size = 2
_dwTarget$ = 12						; size = 4
_bCamp$ = 16						; size = 1
?SendDM_CASTLEAPPLY_REQ@CTWorldSvrModule@@QAEXGKE@Z PROC NEAR ; CTWorldSvrModule::SendDM_CASTLEAPPLY_REQ, COMDAT
; _this$ = ecx

; 328  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_CASTLEAPPLY_REQ@CTWorldSvrModule@@QAEXGKE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 329  : 	LPPACKETBUF pMSG = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136262[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136263
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136264
$L136263:
  00046	33 f6		 xor	 esi, esi
$L136264:

; 330  : 	pMSG->m_packet.SetID(DM_CASTLEAPPLY_REQ)
; 331  : 		<< wCastle
; 332  : 		<< dwTarget
; 333  : 		<< bCamp;

  00048	8b 44 24 24	 mov	 eax, DWORD PTR _bCamp$[esp+20]
  0004c	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwTarget$[esp+20]
  00050	8b 54 24 1c	 mov	 edx, DWORD PTR _wCastle$[esp+20]
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	52		 push	 edx
  00057	68 87 90 00 00	 push	 36999			; 00009087H
  0005c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005f	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 334  : 
; 335  : 	SayToDB(pMSG);

  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 336  : }

  00089	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00096	83 c4 10	 add	 esp, 16			; 00000010H
  00099	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136265:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136262[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_CASTLEAPPLY_REQ@CTWorldSvrModule@@QAEXGKE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136271
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_CASTLEAPPLY_REQ@CTWorldSvrModule@@QAEXGKE@Z ENDP ; CTWorldSvrModule::SendDM_CASTLEAPPLY_REQ
PUBLIC	?SendDM_GUILDWANTEDDEL_REQ@CTWorldSvrModule@@QAEXK@Z ; CTWorldSvrModule::SendDM_GUILDWANTEDDEL_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136291 DD	0ffffffffH
	DD	FLAT:$L136283
$T136289 DD	019930520H
	DD	01H
	DD	FLAT:$T136291
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDWANTEDDEL_REQ@CTWorldSvrModule@@QAEXK@Z
_TEXT	SEGMENT
$T136280 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwGuildID$ = 8						; size = 4
?SendDM_GUILDWANTEDDEL_REQ@CTWorldSvrModule@@QAEXK@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDWANTEDDEL_REQ, COMDAT
; _this$ = ecx

; 374  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDWANTEDDEL_REQ@CTWorldSvrModule@@QAEXK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 375  : 	LPPACKETBUF pMSG = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136280[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136281
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136282
$L136281:
  00046	33 f6		 xor	 esi, esi
$L136282:

; 376  : 	pMSG->m_packet.SetID(DM_GUILDWANTEDDEL_REQ)
; 377  : 		<< dwGuildID;

  00048	8b 44 24 1c	 mov	 eax, DWORD PTR _dwGuildID$[esp+20]
  0004c	50		 push	 eax
  0004d	68 97 90 00 00	 push	 37015			; 00009097H
  00052	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00055	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  0005d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00062	8b c8		 mov	 ecx, eax
  00064	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 378  : 
; 379  : 	SayToDB(pMSG);

  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 380  : }

  00071	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007e	83 c4 10	 add	 esp, 16			; 00000010H
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136283:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136280[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDWANTEDDEL_REQ@CTWorldSvrModule@@QAEXK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136289
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDWANTEDDEL_REQ@CTWorldSvrModule@@QAEXK@Z ENDP ; CTWorldSvrModule::SendDM_GUILDWANTEDDEL_REQ
PUBLIC	?SendDM_GUILDVOLUNTEERING_REQ@CTWorldSvrModule@@QAEXEKK@Z ; CTWorldSvrModule::SendDM_GUILDVOLUNTEERING_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136309 DD	0ffffffffH
	DD	FLAT:$L136301
$T136307 DD	019930520H
	DD	01H
	DD	FLAT:$T136309
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDVOLUNTEERING_REQ@CTWorldSvrModule@@QAEXEKK@Z
_TEXT	SEGMENT
$T136298 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bType$ = 8						; size = 1
_dwCharID$ = 12						; size = 4
_dwID$ = 16						; size = 4
?SendDM_GUILDVOLUNTEERING_REQ@CTWorldSvrModule@@QAEXEKK@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDVOLUNTEERING_REQ, COMDAT
; _this$ = ecx

; 385  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDVOLUNTEERING_REQ@CTWorldSvrModule@@QAEXEKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 386  : 	LPPACKETBUF pMSG = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136298[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136299
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136300
$L136299:
  00046	33 f6		 xor	 esi, esi
$L136300:

; 387  : 	pMSG->m_packet.SetID(DM_GUILDVOLUNTEERING_REQ)
; 388  : 		<< bType
; 389  : 		<< dwCharID
; 390  : 		<< dwID;

  00048	8b 44 24 24	 mov	 eax, DWORD PTR _dwID$[esp+20]
  0004c	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00050	8b 54 24 1c	 mov	 edx, DWORD PTR _bType$[esp+20]
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	52		 push	 edx
  00057	68 98 90 00 00	 push	 37016			; 00009098H
  0005c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005f	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 391  : 
; 392  : 	SayToDB(pMSG);

  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 393  : }

  00089	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00096	83 c4 10	 add	 esp, 16			; 00000010H
  00099	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136301:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136298[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDVOLUNTEERING_REQ@CTWorldSvrModule@@QAEXEKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136307
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDVOLUNTEERING_REQ@CTWorldSvrModule@@QAEXEKK@Z ENDP ; CTWorldSvrModule::SendDM_GUILDVOLUNTEERING_REQ
PUBLIC	?SendDM_GUILDVOLUNTEERINGDEL_REQ@CTWorldSvrModule@@QAEXEK@Z ; CTWorldSvrModule::SendDM_GUILDVOLUNTEERINGDEL_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136327 DD	0ffffffffH
	DD	FLAT:$L136319
$T136325 DD	019930520H
	DD	01H
	DD	FLAT:$T136327
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDVOLUNTEERINGDEL_REQ@CTWorldSvrModule@@QAEXEK@Z
_TEXT	SEGMENT
$T136316 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bType$ = 8						; size = 1
_dwCharID$ = 12						; size = 4
?SendDM_GUILDVOLUNTEERINGDEL_REQ@CTWorldSvrModule@@QAEXEK@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDVOLUNTEERINGDEL_REQ, COMDAT
; _this$ = ecx

; 397  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDVOLUNTEERINGDEL_REQ@CTWorldSvrModule@@QAEXEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 398  : 	LPPACKETBUF pMSG = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136316[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136317
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136318
$L136317:
  00046	33 f6		 xor	 esi, esi
$L136318:

; 399  : 	pMSG->m_packet.SetID(DM_GUILDVOLUNTEERINGDEL_REQ)
; 400  : 		<< bType
; 401  : 		<< dwCharID;

  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+20]
  0004c	8b 4c 24 1c	 mov	 ecx, DWORD PTR _bType$[esp+20]
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	68 99 90 00 00	 push	 37017			; 00009099H
  00057	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005a	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 402  : 
; 403  : 	SayToDB(pMSG);

  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 404  : }

  0007d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136319:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136316[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDVOLUNTEERINGDEL_REQ@CTWorldSvrModule@@QAEXEK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136325
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDVOLUNTEERINGDEL_REQ@CTWorldSvrModule@@QAEXEK@Z ENDP ; CTWorldSvrModule::SendDM_GUILDVOLUNTEERINGDEL_REQ
PUBLIC	?SendDM_GUILDTACTICSWANTEDDEL_REQ@CTWorldSvrModule@@QAEXK@Z ; CTWorldSvrModule::SendDM_GUILDTACTICSWANTEDDEL_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136345 DD	0ffffffffH
	DD	FLAT:$L136337
$T136343 DD	019930520H
	DD	01H
	DD	FLAT:$T136345
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDTACTICSWANTEDDEL_REQ@CTWorldSvrModule@@QAEXK@Z
_TEXT	SEGMENT
$T136334 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwID$ = 8						; size = 4
?SendDM_GUILDTACTICSWANTEDDEL_REQ@CTWorldSvrModule@@QAEXK@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDTACTICSWANTEDDEL_REQ, COMDAT
; _this$ = ecx

; 434  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDTACTICSWANTEDDEL_REQ@CTWorldSvrModule@@QAEXK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 435  : 	LPPACKETBUF pMSG = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136334[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136335
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136336
$L136335:
  00046	33 f6		 xor	 esi, esi
$L136336:

; 436  : 	pMSG->m_packet.SetID(DM_GUILDTACTICSWANTEDDEL_REQ)
; 437  : 		<< dwID;

  00048	8b 44 24 1c	 mov	 eax, DWORD PTR _dwID$[esp+20]
  0004c	50		 push	 eax
  0004d	68 9b 90 00 00	 push	 37019			; 0000909bH
  00052	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00055	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  0005d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00062	8b c8		 mov	 ecx, eax
  00064	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 438  : 
; 439  : 	SayToDB(pMSG);

  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 440  : }

  00071	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007e	83 c4 10	 add	 esp, 16			; 00000010H
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136337:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136334[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDTACTICSWANTEDDEL_REQ@CTWorldSvrModule@@QAEXK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136343
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDTACTICSWANTEDDEL_REQ@CTWorldSvrModule@@QAEXK@Z ENDP ; CTWorldSvrModule::SendDM_GUILDTACTICSWANTEDDEL_REQ
PUBLIC	?SendDM_GUILDTACTICSADD_REQ@CTWorldSvrModule@@QAEXKKK_JE0@Z ; CTWorldSvrModule::SendDM_GUILDTACTICSADD_REQ
EXTRN	??6CPacket@@QAEAAV0@_J@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136363 DD	0ffffffffH
	DD	FLAT:$L136355
$T136361 DD	019930520H
	DD	01H
	DD	FLAT:$T136363
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDTACTICSADD_REQ@CTWorldSvrModule@@QAEXKKK_JE0@Z
_TEXT	SEGMENT
$T136352 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwGuildID$ = 8						; size = 4
_dwTactics$ = 12					; size = 4
_dwPoint$ = 16						; size = 4
_dlMoney$ = 20						; size = 8
_bDay$ = 28						; size = 1
_dlEnd$ = 32						; size = 8
?SendDM_GUILDTACTICSADD_REQ@CTWorldSvrModule@@QAEXKKK_JE0@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDTACTICSADD_REQ, COMDAT
; _this$ = ecx

; 447  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDTACTICSADD_REQ@CTWorldSvrModule@@QAEXKKK_JE0@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 448  : 	LPPACKETBUF pMSG = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136352[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136353
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136354
$L136353:
  00046	33 f6		 xor	 esi, esi
$L136354:

; 449  : 	pMSG->m_packet.SetID(DM_GUILDTACTICSADD_REQ)
; 450  : 		<< dwGuildID
; 451  : 		<< dwTactics
; 452  : 		<< dwPoint
; 453  : 		<< dlMoney
; 454  : 		<< bDay
; 455  : 		<< dlEnd;

  00048	8b 44 24 38	 mov	 eax, DWORD PTR _dlEnd$[esp+24]
  0004c	8b 4c 24 34	 mov	 ecx, DWORD PTR _dlEnd$[esp+20]
  00050	8b 54 24 30	 mov	 edx, DWORD PTR _bDay$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 30	 mov	 eax, DWORD PTR _dlMoney$[esp+28]
  00059	51		 push	 ecx
  0005a	8b 4c 24 30	 mov	 ecx, DWORD PTR _dlMoney$[esp+28]
  0005e	52		 push	 edx
  0005f	8b 54 24 30	 mov	 edx, DWORD PTR _dwPoint$[esp+32]
  00063	50		 push	 eax
  00064	8b 44 24 30	 mov	 eax, DWORD PTR _dwTactics$[esp+36]
  00068	51		 push	 ecx
  00069	8b 4c 24 30	 mov	 ecx, DWORD PTR _dwGuildID$[esp+40]
  0006d	52		 push	 edx
  0006e	50		 push	 eax
  0006f	51		 push	 ecx
  00070	68 9c 90 00 00	 push	 37020			; 0000909cH
  00075	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00078	c7 44 24 38 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+68], -1
  00080	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  000a1	8b c8		 mov	 ecx, eax
  000a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a8	8b c8		 mov	 ecx, eax
  000aa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 456  : 
; 457  : 	SayToDB(pMSG);

  000af	56		 push	 esi
  000b0	8b cf		 mov	 ecx, edi
  000b2	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 458  : }

  000b7	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000bb	5f		 pop	 edi
  000bc	5e		 pop	 esi
  000bd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c4	83 c4 10	 add	 esp, 16			; 00000010H
  000c7	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136355:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136352[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDTACTICSADD_REQ@CTWorldSvrModule@@QAEXKKK_JE0@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136361
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDTACTICSADD_REQ@CTWorldSvrModule@@QAEXKKK_JE0@Z ENDP ; CTWorldSvrModule::SendDM_GUILDTACTICSADD_REQ
PUBLIC	?SendDM_GUILDTACTICSDEL_REQ@CTWorldSvrModule@@QAEXK@Z ; CTWorldSvrModule::SendDM_GUILDTACTICSDEL_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136381 DD	0ffffffffH
	DD	FLAT:$L136373
$T136379 DD	019930520H
	DD	01H
	DD	FLAT:$T136381
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDTACTICSDEL_REQ@CTWorldSvrModule@@QAEXK@Z
_TEXT	SEGMENT
$T136370 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
?SendDM_GUILDTACTICSDEL_REQ@CTWorldSvrModule@@QAEXK@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDTACTICSDEL_REQ, COMDAT
; _this$ = ecx

; 460  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDTACTICSDEL_REQ@CTWorldSvrModule@@QAEXK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 461  : 	LPPACKETBUF pMSG = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136370[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136371
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136372
$L136371:
  00046	33 f6		 xor	 esi, esi
$L136372:

; 462  : 	pMSG->m_packet.SetID(DM_GUILDTACTICSDEL_REQ)
; 463  : 		<< dwCharID;

  00048	8b 44 24 1c	 mov	 eax, DWORD PTR _dwCharID$[esp+20]
  0004c	50		 push	 eax
  0004d	68 9e 90 00 00	 push	 37022			; 0000909eH
  00052	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00055	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  0005d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00062	8b c8		 mov	 ecx, eax
  00064	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 464  : 
; 465  : 	SayToDB(pMSG);

  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 466  : }

  00071	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007e	83 c4 10	 add	 esp, 16			; 00000010H
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136373:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136370[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDTACTICSDEL_REQ@CTWorldSvrModule@@QAEXK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136379
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDTACTICSDEL_REQ@CTWorldSvrModule@@QAEXK@Z ENDP ; CTWorldSvrModule::SendDM_GUILDTACTICSDEL_REQ
PUBLIC	?SendDM_TACTICSPOINT_REQ@CTWorldSvrModule@@QAEXPAUtagTTACTICSMEMBER@@@Z ; CTWorldSvrModule::SendDM_TACTICSPOINT_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136399 DD	0ffffffffH
	DD	FLAT:$L136391
$T136397 DD	019930520H
	DD	01H
	DD	FLAT:$T136399
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_TACTICSPOINT_REQ@CTWorldSvrModule@@QAEXPAUtagTTACTICSMEMBER@@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
$T136388 = 8						; size = 4
_pTactics$ = 8						; size = 4
?SendDM_TACTICSPOINT_REQ@CTWorldSvrModule@@QAEXPAUtagTTACTICSMEMBER@@@Z PROC NEAR ; CTWorldSvrModule::SendDM_TACTICSPOINT_REQ, COMDAT
; _this$ = ecx

; 469  : {

  00000	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00006	6a ff		 push	 -1
  00008	68 00 00 00 00	 push	 __ehhandler$?SendDM_TACTICSPOINT_REQ@CTWorldSvrModule@@QAEXPAUtagTTACTICSMEMBER@@@Z
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 470  : 	if(!pTactics || !pTactics->m_dwGainPoint)

  00018	8b 7c 24 1c	 mov	 edi, DWORD PTR _pTactics$[esp+20]
  0001c	85 ff		 test	 edi, edi
  0001e	8b d9		 mov	 ebx, ecx
  00020	74 68		 je	 SHORT $L134522
  00022	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  00025	85 c0		 test	 eax, eax
  00027	74 61		 je	 SHORT $L134522

; 471  : 		return;
; 472  : 
; 473  : 	LPPACKETBUF pMSG = new PACKETBUF();

  00029	6a 20		 push	 32			; 00000020H
  0002b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00030	8b f0		 mov	 esi, eax
  00032	83 c4 04	 add	 esp, 4
  00035	89 74 24 1c	 mov	 DWORD PTR $T136388[esp+20], esi
  00039	85 f6		 test	 esi, esi
  0003b	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00043	74 10		 je	 SHORT $L136389
  00045	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00048	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0004d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00053	eb 02		 jmp	 SHORT $L136390
$L136389:
  00055	33 f6		 xor	 esi, esi
$L136390:

; 474  : 	pMSG->m_packet.SetID(DM_TACTICSPOINT_REQ)
; 475  : 		<< pTactics->m_dwID
; 476  : 		<< pTactics->m_dwGainPoint;

  00057	8b 47 14	 mov	 eax, DWORD PTR [edi+20]
  0005a	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  0005d	50		 push	 eax
  0005e	51		 push	 ecx
  0005f	68 a0 90 00 00	 push	 37024			; 000090a0H
  00064	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00067	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  0006f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00074	8b c8		 mov	 ecx, eax
  00076	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 477  : 
; 478  : 	SayToDB(pMSG);

  00082	56		 push	 esi
  00083	8b cb		 mov	 ecx, ebx
  00085	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB
$L134522:

; 479  : }

  0008a	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008e	5f		 pop	 edi
  0008f	5e		 pop	 esi
  00090	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00097	5b		 pop	 ebx
  00098	83 c4 0c	 add	 esp, 12			; 0000000cH
  0009b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136391:
  00000	8b 45 04	 mov	 eax, DWORD PTR $T136388[ebp-4]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_TACTICSPOINT_REQ@CTWorldSvrModule@@QAEXPAUtagTTACTICSMEMBER@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136397
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_TACTICSPOINT_REQ@CTWorldSvrModule@@QAEXPAUtagTTACTICSMEMBER@@@Z ENDP ; CTWorldSvrModule::SendDM_TACTICSPOINT_REQ
PUBLIC	?SendDM_GUILDLEAVE_REQ@CTWorldSvrModule@@QAEXKKEK@Z ; CTWorldSvrModule::SendDM_GUILDLEAVE_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136417 DD	0ffffffffH
	DD	FLAT:$L136409
$T136415 DD	019930520H
	DD	01H
	DD	FLAT:$T136417
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDLEAVE_REQ@CTWorldSvrModule@@QAEXKKEK@Z
_TEXT	SEGMENT
$T136406 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwGuildID$ = 8						; size = 4
_dwCharID$ = 12						; size = 4
_bReason$ = 16						; size = 1
_dwTime$ = 20						; size = 4
?SendDM_GUILDLEAVE_REQ@CTWorldSvrModule@@QAEXKKEK@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDLEAVE_REQ, COMDAT
; _this$ = ecx

; 485  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDLEAVE_REQ@CTWorldSvrModule@@QAEXKKEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 486  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136406[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136407
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136408
$L136407:
  00046	33 f6		 xor	 esi, esi
$L136408:

; 487  : 
; 488  : 	pMsg->m_packet.SetID(DM_GUILDLEAVE_REQ)
; 489  : 		<< dwGuildID
; 490  : 		<< dwCharID
; 491  : 		<< bReason
; 492  : 		<< dwTime;

  00048	8b 44 24 28	 mov	 eax, DWORD PTR _dwTime$[esp+20]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _bReason$[esp+20]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 20	 mov	 eax, DWORD PTR _dwGuildID$[esp+24]
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	50		 push	 eax
  0005c	68 3b 90 00 00	 push	 36923			; 0000903bH
  00061	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00064	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0006c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 493  : 
; 494  : 	SayToDB(pMsg);

  0008d	56		 push	 esi
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 495  : }

  00095	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a2	83 c4 10	 add	 esp, 16			; 00000010H
  000a5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136409:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136406[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_GUILDLEAVE_REQ@CTWorldSvrModule@@QAEXKKEK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136415
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDLEAVE_REQ@CTWorldSvrModule@@QAEXKKEK@Z ENDP ; CTWorldSvrModule::SendDM_GUILDLEAVE_REQ
PUBLIC	?SendDM_CLEARDATA_REQ@CTWorldSvrModule@@QAEXK@Z	; CTWorldSvrModule::SendDM_CLEARDATA_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136435 DD	0ffffffffH
	DD	FLAT:$L136427
$T136433 DD	019930520H
	DD	01H
	DD	FLAT:$T136435
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_CLEARDATA_REQ@CTWorldSvrModule@@QAEXK@Z
_TEXT	SEGMENT
$T136424 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwKey$ = 8						; size = 4
?SendDM_CLEARDATA_REQ@CTWorldSvrModule@@QAEXK@Z PROC NEAR ; CTWorldSvrModule::SendDM_CLEARDATA_REQ, COMDAT
; _this$ = ecx

; 498  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_CLEARDATA_REQ@CTWorldSvrModule@@QAEXK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 499  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136424[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136425
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136426
$L136425:
  00046	33 f6		 xor	 esi, esi
$L136426:

; 500  : 
; 501  : 	pMsg->m_packet.SetID(DM_CLEARDATA_REQ)
; 502  : 		<< dwKey;

  00048	8b 44 24 1c	 mov	 eax, DWORD PTR _dwKey$[esp+20]
  0004c	50		 push	 eax
  0004d	68 a7 90 00 00	 push	 37031			; 000090a7H
  00052	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00055	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  0005d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00062	8b c8		 mov	 ecx, eax
  00064	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 503  : 
; 504  : 	SayToDB(pMsg);

  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 505  : }

  00071	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007e	83 c4 10	 add	 esp, 16			; 00000010H
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136427:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136424[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_CLEARDATA_REQ@CTWorldSvrModule@@QAEXK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136433
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_CLEARDATA_REQ@CTWorldSvrModule@@QAEXK@Z ENDP	; CTWorldSvrModule::SendDM_CLEARDATA_REQ
PUBLIC	?SendDM_TOURNAMENTPAYBACK_REQ@CTWorldSvrModule@@QAEXKK@Z ; CTWorldSvrModule::SendDM_TOURNAMENTPAYBACK_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136453 DD	0ffffffffH
	DD	FLAT:$L136445
$T136451 DD	019930520H
	DD	01H
	DD	FLAT:$T136453
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_TOURNAMENTPAYBACK_REQ@CTWorldSvrModule@@QAEXKK@Z
_TEXT	SEGMENT
$T136442 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwBack$ = 12						; size = 4
?SendDM_TOURNAMENTPAYBACK_REQ@CTWorldSvrModule@@QAEXKK@Z PROC NEAR ; CTWorldSvrModule::SendDM_TOURNAMENTPAYBACK_REQ, COMDAT
; _this$ = ecx

; 525  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_TOURNAMENTPAYBACK_REQ@CTWorldSvrModule@@QAEXKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 526  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136442[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136443
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136444
$L136443:
  00046	33 f6		 xor	 esi, esi
$L136444:

; 527  : 
; 528  : 	pMsg->m_packet.SetID(DM_TOURNAMENTPAYBACK_REQ)
; 529  : 		<< dwCharID
; 530  : 		<< dwBack;

  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwBack$[esp+20]
  0004c	8b 4c 24 1c	 mov	 ecx, DWORD PTR _dwCharID$[esp+20]
  00050	50		 push	 eax
  00051	51		 push	 ecx
  00052	68 b5 90 00 00	 push	 37045			; 000090b5H
  00057	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005a	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00062	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00067	8b c8		 mov	 ecx, eax
  00069	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006e	8b c8		 mov	 ecx, eax
  00070	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 531  : 
; 532  : 	SayToDB(pMsg);

  00075	56		 push	 esi
  00076	8b cf		 mov	 ecx, edi
  00078	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 533  : }

  0007d	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00081	5f		 pop	 edi
  00082	5e		 pop	 esi
  00083	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0008a	83 c4 10	 add	 esp, 16			; 00000010H
  0008d	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136445:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136442[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_TOURNAMENTPAYBACK_REQ@CTWorldSvrModule@@QAEXKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136451
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_TOURNAMENTPAYBACK_REQ@CTWorldSvrModule@@QAEXKK@Z ENDP ; CTWorldSvrModule::SendDM_TOURNAMENTPAYBACK_REQ
PUBLIC	?SendDM_TOURNAMENTRESULT_REQ@CTWorldSvrModule@@QAEXEEKK@Z ; CTWorldSvrModule::SendDM_TOURNAMENTRESULT_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136471 DD	0ffffffffH
	DD	FLAT:$L136463
$T136469 DD	019930520H
	DD	01H
	DD	FLAT:$T136471
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_TOURNAMENTRESULT_REQ@CTWorldSvrModule@@QAEXEEKK@Z
_TEXT	SEGMENT
$T136460 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bStep$ = 8						; size = 1
_bRet$ = 12						; size = 1
_dwWin$ = 16						; size = 4
_dwLose$ = 20						; size = 4
?SendDM_TOURNAMENTRESULT_REQ@CTWorldSvrModule@@QAEXEEKK@Z PROC NEAR ; CTWorldSvrModule::SendDM_TOURNAMENTRESULT_REQ, COMDAT
; _this$ = ecx

; 539  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_TOURNAMENTRESULT_REQ@CTWorldSvrModule@@QAEXEEKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 540  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136460[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136461
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136462
$L136461:
  00046	33 f6		 xor	 esi, esi
$L136462:

; 541  : 
; 542  : 	pMsg->m_packet.SetID(DM_TOURNAMENTRESULT_REQ)
; 543  : 		<< bStep
; 544  : 		<< bRet
; 545  : 		<< dwWin
; 546  : 		<< dwLose;

  00048	8b 44 24 28	 mov	 eax, DWORD PTR _dwLose$[esp+20]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwWin$[esp+20]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _bRet$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 20	 mov	 eax, DWORD PTR _bStep$[esp+24]
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	50		 push	 eax
  0005c	68 b7 90 00 00	 push	 37047			; 000090b7H
  00061	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00064	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0006c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 547  : 
; 548  : 	SayToDB(pMsg);

  0008d	56		 push	 esi
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 549  : }

  00095	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a2	83 c4 10	 add	 esp, 16			; 00000010H
  000a5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136463:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136460[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_TOURNAMENTRESULT_REQ@CTWorldSvrModule@@QAEXEEKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136469
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_TOURNAMENTRESULT_REQ@CTWorldSvrModule@@QAEXEEKK@Z ENDP ; CTWorldSvrModule::SendDM_TOURNAMENTRESULT_REQ
PUBLIC	?SendDM_TOURNAMENTAPPLY_REQ@CTWorldSvrModule@@QAEXEKEK@Z ; CTWorldSvrModule::SendDM_TOURNAMENTAPPLY_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136489 DD	0ffffffffH
	DD	FLAT:$L136481
$T136487 DD	019930520H
	DD	01H
	DD	FLAT:$T136489
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_TOURNAMENTAPPLY_REQ@CTWorldSvrModule@@QAEXEKEK@Z
_TEXT	SEGMENT
$T136478 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bAdd$ = 8						; size = 1
_dwCharID$ = 12						; size = 4
_bEntry$ = 16						; size = 1
_dwChiefID$ = 20					; size = 4
?SendDM_TOURNAMENTAPPLY_REQ@CTWorldSvrModule@@QAEXEKEK@Z PROC NEAR ; CTWorldSvrModule::SendDM_TOURNAMENTAPPLY_REQ, COMDAT
; _this$ = ecx

; 555  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_TOURNAMENTAPPLY_REQ@CTWorldSvrModule@@QAEXEKEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 556  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136478[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136479
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136480
$L136479:
  00046	33 f6		 xor	 esi, esi
$L136480:

; 557  : 
; 558  : 	pMsg->m_packet.SetID(DM_TOURNAMENTAPPLY_REQ)
; 559  : 		<< bAdd
; 560  : 		<< dwCharID
; 561  : 		<< bEntry
; 562  : 		<< dwChiefID;

  00048	8b 44 24 28	 mov	 eax, DWORD PTR _dwChiefID$[esp+20]
  0004c	8b 4c 24 24	 mov	 ecx, DWORD PTR _bEntry$[esp+20]
  00050	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 20	 mov	 eax, DWORD PTR _bAdd$[esp+24]
  00059	51		 push	 ecx
  0005a	52		 push	 edx
  0005b	50		 push	 eax
  0005c	68 ba 90 00 00	 push	 37050			; 000090baH
  00061	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00064	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0006c	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007f	8b c8		 mov	 ecx, eax
  00081	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00086	8b c8		 mov	 ecx, eax
  00088	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 563  : 
; 564  : 	SayToDB(pMsg);

  0008d	56		 push	 esi
  0008e	8b cf		 mov	 ecx, edi
  00090	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 565  : }

  00095	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00099	5f		 pop	 edi
  0009a	5e		 pop	 esi
  0009b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a2	83 c4 10	 add	 esp, 16			; 00000010H
  000a5	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136481:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136478[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_TOURNAMENTAPPLY_REQ@CTWorldSvrModule@@QAEXEKEK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136487
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_TOURNAMENTAPPLY_REQ@CTWorldSvrModule@@QAEXEKEK@Z ENDP ; CTWorldSvrModule::SendDM_TOURNAMENTAPPLY_REQ
PUBLIC	?SendDM_TOURNAMENTCLEAR_REQ@CTWorldSvrModule@@QAEXXZ ; CTWorldSvrModule::SendDM_TOURNAMENTCLEAR_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136507 DD	0ffffffffH
	DD	FLAT:$L136499
$T136505 DD	019930520H
	DD	01H
	DD	FLAT:$T136507
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_TOURNAMENTCLEAR_REQ@CTWorldSvrModule@@QAEXXZ
_TEXT	SEGMENT
$T136496 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?SendDM_TOURNAMENTCLEAR_REQ@CTWorldSvrModule@@QAEXXZ PROC NEAR ; CTWorldSvrModule::SendDM_TOURNAMENTCLEAR_REQ, COMDAT
; _this$ = ecx

; 568  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_TOURNAMENTCLEAR_REQ@CTWorldSvrModule@@QAEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 569  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136496[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136497
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136498
$L136497:
  00046	33 f6		 xor	 esi, esi
$L136498:

; 570  : 
; 571  : 	pMsg->m_packet.SetID(DM_TOURNAMENTCLEAR_REQ);

  00048	68 bb 90 00 00	 push	 37051			; 000090bbH
  0004d	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00050	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00058	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 572  : 
; 573  : 	SayToDB(pMsg);

  0005d	56		 push	 esi
  0005e	8b cf		 mov	 ecx, edi
  00060	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 574  : }

  00065	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00069	5f		 pop	 edi
  0006a	5e		 pop	 esi
  0006b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00072	83 c4 10	 add	 esp, 16			; 00000010H
  00075	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136499:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136496[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_TOURNAMENTCLEAR_REQ@CTWorldSvrModule@@QAEXXZ:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136505
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_TOURNAMENTCLEAR_REQ@CTWorldSvrModule@@QAEXXZ ENDP ; CTWorldSvrModule::SendDM_TOURNAMENTCLEAR_REQ
PUBLIC	?SendDM_TNMTEVENTSCHEDULEADD_REQ@CTWorldSvrModule@@QAEXPAVCPacket@@G@Z ; CTWorldSvrModule::SendDM_TNMTEVENTSCHEDULEADD_REQ
EXTRN	?GetBuffer@CPacket@@QAEPAEXZ:NEAR		; CPacket::GetBuffer
EXTRN	?Copy@CPacket@@QAEXPAV1@@Z:NEAR			; CPacket::Copy
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136525 DD	0ffffffffH
	DD	FLAT:$L136517
$T136523 DD	019930520H
	DD	01H
	DD	FLAT:$T136525
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_TNMTEVENTSCHEDULEADD_REQ@CTWorldSvrModule@@QAEXPAVCPacket@@G@Z
_TEXT	SEGMENT
$T136514 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pPacket$ = 8						; size = 4
_wTourID$ = 12						; size = 2
?SendDM_TNMTEVENTSCHEDULEADD_REQ@CTWorldSvrModule@@QAEXPAVCPacket@@G@Z PROC NEAR ; CTWorldSvrModule::SendDM_TNMTEVENTSCHEDULEADD_REQ, COMDAT
; _this$ = ecx

; 577  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_TNMTEVENTSCHEDULEADD_REQ@CTWorldSvrModule@@QAEXPAVCPacket@@G@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi

; 578  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00019	6a 20		 push	 32			; 00000020H
  0001b	8b d9		 mov	 ebx, ecx
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	8b f0		 mov	 esi, eax
  00024	83 c4 04	 add	 esp, 4
  00027	89 74 24 0c	 mov	 DWORD PTR $T136514[esp+28], esi
  0002b	85 f6		 test	 esi, esi
  0002d	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+36], 0
  00035	74 10		 je	 SHORT $L136515
  00037	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00045	eb 02		 jmp	 SHORT $L136516
$L136515:
  00047	33 f6		 xor	 esi, esi
$L136516:

; 579  : 
; 580  : 	pMsg->m_packet.Copy(pPacket);

  00049	8b 44 24 20	 mov	 eax, DWORD PTR _pPacket$[esp+24]
  0004d	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  00050	50		 push	 eax
  00051	8b cf		 mov	 ecx, edi
  00053	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  0005b	e8 00 00 00 00	 call	 ?Copy@CPacket@@QAEXPAV1@@Z ; CPacket::Copy

; 581  : 	pMsg->m_packet.SetID(DM_TNMTEVENTSCHEDULEADD_REQ);

  00060	68 bd 90 00 00	 push	 37053			; 000090bdH
  00065	8b cf		 mov	 ecx, edi
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 582  : 
; 583  : 	memcpy(pMsg->m_packet.GetBuffer() + PACKET_HEADER_SIZE + 5, &wTourID, sizeof(wTourID));

  0006c	8b cf		 mov	 ecx, edi
  0006e	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  00073	66 8b 4c 24 24	 mov	 cx, WORD PTR _wTourID$[esp+24]
  00078	66 89 48 15	 mov	 WORD PTR [eax+21], cx

; 584  : 
; 585  : 	SayToDB(pMsg);

  0007c	56		 push	 esi
  0007d	8b cb		 mov	 ecx, ebx
  0007f	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 586  : }

  00084	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  00088	5f		 pop	 edi
  00089	5e		 pop	 esi
  0008a	5b		 pop	 ebx
  0008b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00092	83 c4 10	 add	 esp, 16			; 00000010H
  00095	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136517:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136514[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_TNMTEVENTSCHEDULEADD_REQ@CTWorldSvrModule@@QAEXPAVCPacket@@G@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136523
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_TNMTEVENTSCHEDULEADD_REQ@CTWorldSvrModule@@QAEXPAVCPacket@@G@Z ENDP ; CTWorldSvrModule::SendDM_TNMTEVENTSCHEDULEADD_REQ
PUBLIC	?SendDM_TNMTEVENTSCHEDULEDEL_REQ@CTWorldSvrModule@@QAEXG@Z ; CTWorldSvrModule::SendDM_TNMTEVENTSCHEDULEDEL_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136543 DD	0ffffffffH
	DD	FLAT:$L136535
$T136541 DD	019930520H
	DD	01H
	DD	FLAT:$T136543
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_TNMTEVENTSCHEDULEDEL_REQ@CTWorldSvrModule@@QAEXG@Z
_TEXT	SEGMENT
$T136532 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wTourID$ = 8						; size = 2
?SendDM_TNMTEVENTSCHEDULEDEL_REQ@CTWorldSvrModule@@QAEXG@Z PROC NEAR ; CTWorldSvrModule::SendDM_TNMTEVENTSCHEDULEDEL_REQ, COMDAT
; _this$ = ecx

; 589  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_TNMTEVENTSCHEDULEDEL_REQ@CTWorldSvrModule@@QAEXG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 590  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136532[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136533
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136534
$L136533:
  00046	33 f6		 xor	 esi, esi
$L136534:

; 591  : 
; 592  : 	pMsg->m_packet.SetID(DM_TNMTEVENTSCHEDULEDEL_REQ)
; 593  : 		<< wTourID;

  00048	8b 44 24 1c	 mov	 eax, DWORD PTR _wTourID$[esp+20]
  0004c	50		 push	 eax
  0004d	68 be 90 00 00	 push	 37054			; 000090beH
  00052	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00055	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  0005d	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00062	8b c8		 mov	 ecx, eax
  00064	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 594  : 
; 595  : 	SayToDB(pMsg);

  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 596  : }

  00071	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00075	5f		 pop	 edi
  00076	5e		 pop	 esi
  00077	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007e	83 c4 10	 add	 esp, 16			; 00000010H
  00081	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136535:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136532[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_TNMTEVENTSCHEDULEDEL_REQ@CTWorldSvrModule@@QAEXG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136541
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_TNMTEVENTSCHEDULEDEL_REQ@CTWorldSvrModule@@QAEXG@Z ENDP ; CTWorldSvrModule::SendDM_TNMTEVENTSCHEDULEDEL_REQ
PUBLIC	?SendDM_TNMTEVENTENTRYADD_REQ@CTWorldSvrModule@@QAEXPAVCPacket@@@Z ; CTWorldSvrModule::SendDM_TNMTEVENTENTRYADD_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136561 DD	0ffffffffH
	DD	FLAT:$L136553
$T136559 DD	019930520H
	DD	01H
	DD	FLAT:$T136561
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_TNMTEVENTENTRYADD_REQ@CTWorldSvrModule@@QAEXPAVCPacket@@@Z
_TEXT	SEGMENT
$T136550 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pPacket$ = 8						; size = 4
?SendDM_TNMTEVENTENTRYADD_REQ@CTWorldSvrModule@@QAEXPAVCPacket@@@Z PROC NEAR ; CTWorldSvrModule::SendDM_TNMTEVENTENTRYADD_REQ, COMDAT
; _this$ = ecx

; 599  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_TNMTEVENTENTRYADD_REQ@CTWorldSvrModule@@QAEXPAVCPacket@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi

; 600  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00019	6a 20		 push	 32			; 00000020H
  0001b	8b d9		 mov	 ebx, ecx
  0001d	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00022	8b f0		 mov	 esi, eax
  00024	83 c4 04	 add	 esp, 4
  00027	89 74 24 0c	 mov	 DWORD PTR $T136550[esp+28], esi
  0002b	85 f6		 test	 esi, esi
  0002d	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+36], 0
  00035	74 10		 je	 SHORT $L136551
  00037	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00045	eb 02		 jmp	 SHORT $L136552
$L136551:
  00047	33 f6		 xor	 esi, esi
$L136552:

; 601  : 
; 602  : 	pMsg->m_packet.Copy(pPacket);

  00049	8b 44 24 20	 mov	 eax, DWORD PTR _pPacket$[esp+24]
  0004d	8d 7e 04	 lea	 edi, DWORD PTR [esi+4]
  00050	50		 push	 eax
  00051	8b cf		 mov	 ecx, edi
  00053	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  0005b	e8 00 00 00 00	 call	 ?Copy@CPacket@@QAEXPAV1@@Z ; CPacket::Copy

; 603  : 	pMsg->m_packet.SetID(DM_TNMTEVENTENTRYADD_REQ);

  00060	68 bf 90 00 00	 push	 37055			; 000090bfH
  00065	8b cf		 mov	 ecx, edi
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 604  : 
; 605  : 	SayToDB(pMsg);

  0006c	56		 push	 esi
  0006d	8b cb		 mov	 ecx, ebx
  0006f	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 606  : }

  00074	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  00078	5f		 pop	 edi
  00079	5e		 pop	 esi
  0007a	5b		 pop	 ebx
  0007b	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00082	83 c4 10	 add	 esp, 16			; 00000010H
  00085	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136553:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136550[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_TNMTEVENTENTRYADD_REQ@CTWorldSvrModule@@QAEXPAVCPacket@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136559
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_TNMTEVENTENTRYADD_REQ@CTWorldSvrModule@@QAEXPAVCPacket@@@Z ENDP ; CTWorldSvrModule::SendDM_TNMTEVENTENTRYADD_REQ
PUBLIC	?SendDM_RPSGAMERECORD_REQ@CTWorldSvrModule@@QAEXEKEE_J@Z ; CTWorldSvrModule::SendDM_RPSGAMERECORD_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136579 DD	0ffffffffH
	DD	FLAT:$L136571
$T136577 DD	019930520H
	DD	01H
	DD	FLAT:$T136579
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_RPSGAMERECORD_REQ@CTWorldSvrModule@@QAEXEKEE_J@Z
_TEXT	SEGMENT
$T136568 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bRecord$ = 8						; size = 1
_dwCharID$ = 12						; size = 4
_bType$ = 16						; size = 1
_bWinCount$ = 20					; size = 1
_dDate$ = 24						; size = 8
?SendDM_RPSGAMERECORD_REQ@CTWorldSvrModule@@QAEXEKEE_J@Z PROC NEAR ; CTWorldSvrModule::SendDM_RPSGAMERECORD_REQ, COMDAT
; _this$ = ecx

; 629  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_RPSGAMERECORD_REQ@CTWorldSvrModule@@QAEXEKEE_J@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 630  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136568[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136569
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136570
$L136569:
  00046	33 f6		 xor	 esi, esi
$L136570:

; 631  : 
; 632  : 	pMsg->m_packet.SetID(DM_RPSGAMERECORD_REQ)
; 633  : 		<< bRecord
; 634  : 		<< dwCharID
; 635  : 		<< bType
; 636  : 		<< bWinCount
; 637  : 		<< dDate;

  00048	8b 44 24 30	 mov	 eax, DWORD PTR _dDate$[esp+24]
  0004c	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dDate$[esp+20]
  00050	8b 54 24 28	 mov	 edx, DWORD PTR _bWinCount$[esp+20]
  00054	50		 push	 eax
  00055	8b 44 24 28	 mov	 eax, DWORD PTR _bType$[esp+24]
  00059	51		 push	 ecx
  0005a	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwCharID$[esp+28]
  0005e	52		 push	 edx
  0005f	8b 54 24 28	 mov	 edx, DWORD PTR _bRecord$[esp+32]
  00063	50		 push	 eax
  00064	51		 push	 ecx
  00065	52		 push	 edx
  00066	68 c5 90 00 00	 push	 37061			; 000090c5H
  0006b	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0006e	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  00076	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 638  : 
; 639  : 	SayToDB(pMsg);

  0009e	56		 push	 esi
  0009f	8b cf		 mov	 ecx, edi
  000a1	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 640  : }

  000a6	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000aa	5f		 pop	 edi
  000ab	5e		 pop	 esi
  000ac	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000b3	83 c4 10	 add	 esp, 16			; 00000010H
  000b6	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136571:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136568[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_RPSGAMERECORD_REQ@CTWorldSvrModule@@QAEXEKEE_J@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136577
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_RPSGAMERECORD_REQ@CTWorldSvrModule@@QAEXEKEE_J@Z ENDP ; CTWorldSvrModule::SendDM_RPSGAMERECORD_REQ
PUBLIC	?SendDM_TOURNAMENTSTATUS_REQ@CTWorldSvrModule@@QAEXGEE@Z ; CTWorldSvrModule::SendDM_TOURNAMENTSTATUS_REQ
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tnetlib\tnetdef.h
xdata$x	SEGMENT
$T136597 DD	0ffffffffH
	DD	FLAT:$L136589
$T136595 DD	019930520H
	DD	01H
	DD	FLAT:$T136597
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_TOURNAMENTSTATUS_REQ@CTWorldSvrModule@@QAEXGEE@Z
_TEXT	SEGMENT
$T136586 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wID$ = 8						; size = 2
_bGroup$ = 12						; size = 1
_bStep$ = 16						; size = 1
?SendDM_TOURNAMENTSTATUS_REQ@CTWorldSvrModule@@QAEXGEE@Z PROC NEAR ; CTWorldSvrModule::SendDM_TOURNAMENTSTATUS_REQ, COMDAT
; _this$ = ecx

; 645  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_TOURNAMENTSTATUS_REQ@CTWorldSvrModule@@QAEXGEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 646  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00018	6a 20		 push	 32			; 00000020H
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	8b f0		 mov	 esi, eax
  00023	83 c4 04	 add	 esp, 4
  00026	89 74 24 08	 mov	 DWORD PTR $T136586[esp+24], esi
  0002a	85 f6		 test	 esi, esi
  0002c	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00034	74 10		 je	 SHORT $L136587
  00036	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00039	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003e	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  00044	eb 02		 jmp	 SHORT $L136588
$L136587:
  00046	33 f6		 xor	 esi, esi
$L136588:

; 647  : 
; 648  : 	pMsg->m_packet.SetID(DM_TOURNAMENTSTATUS_REQ)
; 649  : 		<< wID
; 650  : 		<< bGroup
; 651  : 		<< bStep;

  00048	8b 44 24 24	 mov	 eax, DWORD PTR _bStep$[esp+20]
  0004c	8b 4c 24 20	 mov	 ecx, DWORD PTR _bGroup$[esp+20]
  00050	8b 54 24 1c	 mov	 edx, DWORD PTR _wID$[esp+20]
  00054	50		 push	 eax
  00055	51		 push	 ecx
  00056	52		 push	 edx
  00057	68 c6 90 00 00	 push	 37062			; 000090c6H
  0005c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0005f	c7 44 24 24 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+48], -1
  00067	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006c	8b c8		 mov	 ecx, eax
  0006e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00073	8b c8		 mov	 ecx, eax
  00075	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 652  : 
; 653  : 	SayToDB(pMsg);

  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 654  : }

  00089	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00096	83 c4 10	 add	 esp, 16			; 00000010H
  00099	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L136589:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T136586[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_TOURNAMENTSTATUS_REQ@CTWorldSvrModule@@QAEXGEE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T136595
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_TOURNAMENTSTATUS_REQ@CTWorldSvrModule@@QAEXGEE@Z ENDP ; CTWorldSvrModule::SendDM_TOURNAMENTSTATUS_REQ
PUBLIC	??Diterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEAAUtagTENTRYRECORD@@XZ ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator*
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Diterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEAAUtagTENTRYRECORD@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEAAUtagTENTRYRECORD@@XZ PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBEAAUtagTENTRYRECORD@@XZ ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 54 24 08	 mov	 edx, DWORD PTR __Off$[esp-4]
  00004	8b 01		 mov	 eax, DWORD PTR [ecx]
  00006	6b d2 2c	 imul	 edx, 44			; 0000002cH
  00009	03 d0		 add	 edx, eax
  0000b	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000f	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  00011	c2 08 00	 ret	 8
??Hiterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE@PAUtagTENTRYRECORD@@@Z ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??_GtagPACKETBUF@@QAEPAXI@Z			; tagPACKETBUF::`scalar deleting destructor'
; Function compile flags: /Ogty
;	COMDAT ??_GtagPACKETBUF@@QAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GtagPACKETBUF@@QAEPAXI@Z PROC NEAR			; tagPACKETBUF::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1tagPACKETBUF@@QAE@XZ
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L136622
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L136622:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_GtagPACKETBUF@@QAEPAXI@Z ENDP			; tagPACKETBUF::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ PROC NEAR		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 263  : 		CStringData* pData = GetData();

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 264  : 		pData->Release();

  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L136632
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L136632:

; 265  : 	}

  0001c	c3		 ret	 0
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ ENDP		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 1
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z PROC NEAR ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >, COMDAT
; _this$ = ecx

; 34   : 		{	// construct allocator from _Al

  00000	8b c1		 mov	 eax, ecx

; 35   : 		}

  00002	c2 04 00	 ret	 4
??0?$_String_val@DV?$allocator@D@std@@@std@@IAE@V?$allocator@D@1@@Z ENDP ; std::_String_val<char,std::allocator<char> >::_String_val<char,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEAAUtagTCASHITMSALE@@XZ ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::operator*
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Diterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEAAUtagTCASHITMSALE@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEAAUtagTCASHITMSALE@@XZ PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBEAAUtagTCASHITMSALE@@XZ ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	8b 4c 24 08	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8d 14 88	 lea	 edx, DWORD PTR [eax+ecx*4]
  00009	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  0000d	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  0000f	c2 08 00	 ret	 8
??Hiterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::operator+
_TEXT	ENDS
PUBLIC	?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos, COMDAT
; _this$ = ecx

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

  00000	83 79 18 10	 cmp	 DWORD PTR [ecx+24], 16	; 00000010H
  00004	8b 44 24 04	 mov	 eax, DWORD PTR __Newsize$[esp-4]
  00008	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  0000b	72 0a		 jb	 SHORT $L136661
  0000d	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00010	c6 04 01 00	 mov	 BYTE PTR [ecx+eax], 0

; 1476 : 		}

  00014	c2 04 00	 ret	 4

; 1475 : 		_Traits::assign(_Myptr()[_Mysize = _Newsize], _Elem());

$L136661:
  00017	c6 44 01 04 00	 mov	 BYTE PTR [ecx+eax+4], 0

; 1476 : 		}

  0001c	c2 04 00	 ret	 4
?_Eos@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Eos
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::iterator
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??0iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE@PAUtagTCASHITMSALE@@@Z ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::iterator::iterator
_TEXT	ENDS
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT
; _this$ = ecx

; 1114 : 		size_type _Num = _Mybase::_Alval.max_size();
; 1115 : 		return (_Num <= 1 ? 1 : _Num - 1);

  00000	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH

; 1116 : 		}

  00005	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
PUBLIC	?allocate@?$allocator@D@std@@QAEPADI@Z		; std::allocator<char>::allocate
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QAEPADI@Z
_TEXT	SEGMENT
__Count$ = 8						; size = 4
?allocate@?$allocator@D@std@@QAEPADI@Z PROC NEAR	; std::allocator<char>::allocate, COMDAT
; _this$ = ecx

; 137  : 		return (_Allocate(_Count, (pointer)0));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Count$[esp-4]
  00004	50		 push	 eax
  00005	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000a	83 c4 04	 add	 esp, 4

; 138  : 		}

  0000d	c2 04 00	 ret	 4
?allocate@?$allocator@D@std@@QAEPADI@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
PUBLIC	?begin@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::begin
_TEXT	ENDS
PUBLIC	??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 963  : 	}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H
  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L136719
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L136719:
  0001c	c3		 ret	 0
??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z
_TEXT	SEGMENT
__Built$ = 8						; size = 1
__Newsize$ = 12						; size = 4
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy, COMDAT
; _this$ = ecx

; 1510 : 		if (!_Built)

  00000	8a 44 24 04	 mov	 al, BYTE PTR __Built$[esp-4]
  00004	84 c0		 test	 al, al
  00006	53		 push	 ebx
  00007	55		 push	 ebp
  00008	8b 6c 24 10	 mov	 ebp, DWORD PTR __Newsize$[esp+4]
  0000c	8b d9		 mov	 ebx, ecx
  0000e	74 2f		 je	 SHORT $L136729

; 1511 : 			;
; 1512 : 		else if (_BUF_SIZE <= _Myres)

  00010	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  00014	72 29		 jb	 SHORT $L136729

; 1513 : 			{	// copy any leftovers to small buffer and deallocate
; 1514 : 			_Elem *_Ptr = _Bx._Ptr;
; 1515 : 			if (0 < _Newsize)

  00016	85 ed		 test	 ebp, ebp
  00018	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0001b	57		 push	 edi
  0001c	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
  0001f	76 14		 jbe	 SHORT $L136727
  00021	56		 push	 esi

; 1516 : 				_Traits::copy(_Bx._Buf, _Ptr, _Newsize);

  00022	8b cd		 mov	 ecx, ebp
  00024	8b d1		 mov	 edx, ecx
  00026	c1 e9 02	 shr	 ecx, 2
  00029	8b f0		 mov	 esi, eax
  0002b	f3 a5		 rep movsd
  0002d	8b ca		 mov	 ecx, edx
  0002f	83 e1 03	 and	 ecx, 3
  00032	f3 a4		 rep movsb
  00034	5e		 pop	 esi
$L136727:

; 1517 : 			_Mybase::_Alval.deallocate(_Ptr, _Myres + 1);

  00035	50		 push	 eax
  00036	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0003b	83 c4 04	 add	 esp, 4
  0003e	5f		 pop	 edi
$L136729:

; 1518 : 			}
; 1519 : 		_Myres = _BUF_SIZE - 1;
; 1520 : 		_Eos(_Newsize);

  0003f	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00042	c7 43 18 0f 00
	00 00		 mov	 DWORD PTR [ebx+24], 15	; 0000000fH
  00049	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0004e	5d		 pop	 ebp
  0004f	5b		 pop	 ebx

; 1521 : 		}

  00050	c2 08 00	 ret	 8
?_Tidy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEX_NI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy
_TEXT	ENDS
PUBLIC	?begin@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::begin
_TEXT	ENDS
PUBLIC	?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
EXTRN	?_Xran@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xran
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
__Count$ = 12						; size = 4
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase, COMDAT
; _this$ = ecx

; 792  : 		{	// erase elements [_Off, _Off + _Count)

  00000	55		 push	 ebp

; 793  : 		if (_Mysize < _Off)

  00001	8b 6c 24 08	 mov	 ebp, DWORD PTR __Off$[esp]
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx
  00008	39 6e 14	 cmp	 DWORD PTR [esi+20], ebp
  0000b	57		 push	 edi
  0000c	73 05		 jae	 SHORT $L119054

; 794  : 			_String_base::_Xran();	// _Off off end

  0000e	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L119054:

; 795  : 		if (_Mysize - _Off < _Count)

  00013	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00016	8b 7c 24 14	 mov	 edi, DWORD PTR __Count$[esp+8]
  0001a	2b c5		 sub	 eax, ebp
  0001c	3b c7		 cmp	 eax, edi
  0001e	73 02		 jae	 SHORT $L119055

; 796  : 			_Count = _Mysize - _Off;	// trim _Count

  00020	8b f8		 mov	 edi, eax
$L119055:

; 797  : 		if (0 < _Count)

  00022	85 ff		 test	 edi, edi
  00024	76 47		 jbe	 SHORT $L136807

; 798  : 			{	// move elements down
; 799  : 			_Traits::move(_Myptr() + _Off, _Myptr() + _Off + _Count,
; 800  : 				_Mysize - _Off - _Count);

  00026	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00029	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0002c	53		 push	 ebx
  0002d	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00030	72 04		 jb	 SHORT $L136773
  00032	8b 13		 mov	 edx, DWORD PTR [ebx]
  00034	eb 02		 jmp	 SHORT $L136774
$L136773:
  00036	8b d3		 mov	 edx, ebx
$L136774:
  00038	83 f9 10	 cmp	 ecx, 16			; 00000010H
  0003b	72 04		 jb	 SHORT $L136780
  0003d	8b 0b		 mov	 ecx, DWORD PTR [ebx]
  0003f	eb 02		 jmp	 SHORT $L136781
$L136780:
  00041	8b cb		 mov	 ecx, ebx
$L136781:
  00043	2b c7		 sub	 eax, edi

; 803  : 			}
; 804  : 		return (*this);

  00045	03 d5		 add	 edx, ebp
  00047	50		 push	 eax
  00048	03 d7		 add	 edx, edi
  0004a	52		 push	 edx
  0004b	03 cd		 add	 ecx, ebp
  0004d	51		 push	 ecx
  0004e	e8 00 00 00 00	 call	 _memmove
  00053	8b 46 14	 mov	 eax, DWORD PTR [esi+20]
  00056	8b 4e 18	 mov	 ecx, DWORD PTR [esi+24]
  00059	2b c7		 sub	 eax, edi
  0005b	83 c4 0c	 add	 esp, 12			; 0000000cH
  0005e	83 f9 10	 cmp	 ecx, 16			; 00000010H
  00061	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00064	72 02		 jb	 SHORT $L136804

; 801  : 			size_type _Newsize = _Mysize - _Count;
; 802  : 			_Eos(_Newsize);

  00066	8b 1b		 mov	 ebx, DWORD PTR [ebx]
$L136804:
  00068	c6 04 03 00	 mov	 BYTE PTR [ebx+eax], 0
  0006c	5b		 pop	 ebx
$L136807:
  0006d	5f		 pop	 edi

; 803  : 			}
; 804  : 		return (*this);

  0006e	8b c6		 mov	 eax, esi
  00070	5e		 pop	 esi
  00071	5d		 pop	 ebp

; 805  : 		}

  00072	c2 08 00	 ret	 8
?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
_TEXT	ENDS
PUBLIC	?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
EXTRN	__CxxThrowException@8:NEAR
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T137012 DD	0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	01H
	DD	00H
	DD	01H
	DD	00H
$T137014 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L136815
$T137015 DD	00H
	DD	00H
	DD	00H
	DD	FLAT:$L136813
$T137013 DD	02H
	DD	02H
	DD	03H
	DD	01H
	DD	FLAT:$T137014
	DD	00H
	DD	00H
	DD	03H
	DD	01H
	DD	FLAT:$T137015
$T137007 DD	019930520H
	DD	04H
	DD	FLAT:$T137012
	DD	02H
	DD	FLAT:$T137013
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
xdata$x	ENDS
;	COMDAT ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
_TEXT	SEGMENT
__Newres$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Ptr$ = 8						; size = 4
__Newsize$ = 8						; size = 4
__Oldlen$ = 12						; size = 4
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy, COMDAT
; _this$ = ecx

; 1444 : 		{	// copy _Oldlen elements to newly allocated buffer

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  00010	50		 push	 eax
  00011	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00018	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 1445 : 		size_type _Newres = _Newsize | _ALLOC_MASK;

  0001b	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0001e	53		 push	 ebx
  0001f	56		 push	 esi
  00020	8b d8		 mov	 ebx, eax
  00022	83 cb 0f	 or	 ebx, 15			; 0000000fH

; 1446 : 		if (max_size() < _Newres)

  00025	83 fb fe	 cmp	 ebx, -2			; fffffffeH
  00028	57		 push	 edi
  00029	8b f1		 mov	 esi, ecx
  0002b	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002e	89 75 ec	 mov	 DWORD PTR _this$[ebp], esi
  00031	76 04		 jbe	 SHORT $L120172

; 1447 : 			_Newres = _Newsize;	// undo roundup if too big

  00033	8b d8		 mov	 ebx, eax

; 1448 : 		else if (_Newres / 3 < _Myres / 2

  00035	eb 22		 jmp	 SHORT $L120174
$L120172:

; 1449 : 			&& _Myres <= max_size() - _Myres / 2)

  00037	8b 7e 18	 mov	 edi, DWORD PTR [esi+24]
  0003a	b8 ab aa aa aa	 mov	 eax, -1431655765	; aaaaaaabH
  0003f	f7 e3		 mul	 ebx
  00041	8b cf		 mov	 ecx, edi
  00043	d1 e9		 shr	 ecx, 1
  00045	d1 ea		 shr	 edx, 1
  00047	3b d1		 cmp	 edx, ecx
  00049	73 0e		 jae	 SHORT $L120174
  0004b	b8 fe ff ff ff	 mov	 eax, -2			; fffffffeH
  00050	2b c1		 sub	 eax, ecx
  00052	3b f8		 cmp	 edi, eax
  00054	77 03		 ja	 SHORT $L120174

; 1450 : 			_Newres = _Myres + _Myres / 2;	// grow exponentially if possible

  00056	8d 1c 39	 lea	 ebx, DWORD PTR [ecx+edi]
$L120174:

; 1451 : 		_Elem *_Ptr;
; 1452 : 
; 1453 : 		_TRY_BEGIN
; 1454 : 			_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00059	8d 4b 01	 lea	 ecx, DWORD PTR [ebx+1]
  0005c	51		 push	 ecx
  0005d	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0
  00064	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00069	8b d0		 mov	 edx, eax
  0006b	83 c4 04	 add	 esp, 4
  0006e	89 55 08	 mov	 DWORD PTR __Ptr$[ebp], edx
  00071	eb 29		 jmp	 SHORT $L120176
$L136813:

; 1455 : 		_CATCH_ALL
; 1456 : 			_Newres = _Newsize;	// allocation failed, undo roundup and retry

  00073	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00076	89 45 e8	 mov	 DWORD PTR __Newres$[ebp], eax

; 1457 : 			_TRY_BEGIN
; 1458 : 				_Ptr = _Mybase::_Alval.allocate(_Newres + 1);

  00079	40		 inc	 eax
  0007a	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0007d	50		 push	 eax
  0007e	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+12], 2
  00082	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00087	89 45 08	 mov	 DWORD PTR __Ptr$[ebp], eax
  0008a	83 c4 04	 add	 esp, 4

; 1462 : 			_CATCH_END
; 1463 : 		_CATCH_END

  0008d	b8 00 00 00 00	 mov	 eax, $L137008
  00092	c3		 ret	 0
$L137008:
  00093	8b 5d e8	 mov	 ebx, DWORD PTR __Newres$[ebp]
  00096	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  00099	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
$L120176:

; 1464 : 
; 1465 : 		if (0 < _Oldlen)

  0009c	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  0009f	85 c9		 test	 ecx, ecx
  000a1	76 24		 jbe	 SHORT $L136932

; 1466 : 			_Traits::copy(_Ptr, _Myptr(), _Oldlen);	// copy existing elements

  000a3	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000a7	72 05		 jb	 SHORT $L136929
  000a9	8b 76 04	 mov	 esi, DWORD PTR [esi+4]
  000ac	eb 03		 jmp	 SHORT $L136930
$L136929:
  000ae	83 c6 04	 add	 esi, 4
$L136930:
  000b1	8b c1		 mov	 eax, ecx
  000b3	c1 e9 02	 shr	 ecx, 2
  000b6	8b fa		 mov	 edi, edx
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb
  000c1	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  000c4	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
$L136932:

; 1467 : 		_Tidy(true);

  000c7	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  000cb	72 12		 jb	 SHORT $L136974
  000cd	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  000d0	51		 push	 ecx
  000d1	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  000d6	8b 55 08	 mov	 edx, DWORD PTR __Ptr$[ebp]
  000d9	8b 4d 0c	 mov	 ecx, DWORD PTR __Oldlen$[ebp]
  000dc	83 c4 04	 add	 esp, 4
$L136974:

; 1468 : 		_Bx._Ptr = _Ptr;
; 1469 : 		_Myres = _Newres;
; 1470 : 		_Eos(_Oldlen);

  000df	83 fb 10	 cmp	 ebx, 16			; 00000010H
  000e2	8d 46 04	 lea	 eax, DWORD PTR [esi+4]
  000e5	c6 00 00	 mov	 BYTE PTR [eax], 0
  000e8	89 10		 mov	 DWORD PTR [eax], edx
  000ea	89 5e 18	 mov	 DWORD PTR [esi+24], ebx
  000ed	89 4e 14	 mov	 DWORD PTR [esi+20], ecx
  000f0	72 02		 jb	 SHORT $L137003
  000f2	8b c2		 mov	 eax, edx
$L137003:

; 1471 : 		}

  000f4	5f		 pop	 edi
  000f5	c6 04 08 00	 mov	 BYTE PTR [eax+ecx], 0
  000f9	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  000fc	5e		 pop	 esi
  000fd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00104	5b		 pop	 ebx
  00105	8b e5		 mov	 esp, ebp
  00107	5d		 pop	 ebp
  00108	c2 08 00	 ret	 8
$L136815:

; 1459 : 			_CATCH_ALL
; 1460 : 			_Tidy(true);	// failed again, discard storage and reraise

  0010b	8b 75 ec	 mov	 esi, DWORD PTR _this$[ebp]
  0010e	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00112	72 0c		 jb	 SHORT $L136913
  00114	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  00117	52		 push	 edx
  00118	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0011d	83 c4 04	 add	 esp, 4
$L136913:

; 1461 : 			_RERAISE;

  00120	6a 00		 push	 0
  00122	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00129	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00130	6a 00		 push	 0
  00132	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  00136	e8 00 00 00 00	 call	 __CxxThrowException@8
$L137016:
$L137011:
  0013b	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z:
  00000	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T137007
  00005	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
PUBLIC	?SendDM_GUILDARTICLEADD_REQ@CTWorldSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z ; CTWorldSvrModule::SendDM_GUILDARTICLEADD_REQ
EXTRN	??6CPacket@@QAEAAV0@PBD@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T137126 DD	0ffffffffH
	DD	FLAT:$L137025
	DD	00H
	DD	FLAT:$L137026
	DD	01H
	DD	FLAT:$L137027
	DD	02H
	DD	FLAT:$L137028
$T137124 DD	019930520H
	DD	04H
	DD	FLAT:$T137126
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDARTICLEADD_REQ@CTWorldSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z
_TEXT	SEGMENT
$T137022 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwGuildID$ = 8						; size = 4
_dwID$ = 12						; size = 4
_bDuty$ = 16						; size = 1
_strWritter$ = 20					; size = 4
_strTitle$ = 24						; size = 4
_strArticle$ = 28					; size = 4
_dwTime$ = 32						; size = 4
?SendDM_GUILDARTICLEADD_REQ@CTWorldSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDARTICLEADD_REQ, COMDAT
; _this$ = ecx

; 125  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDARTICLEADD_REQ@CTWorldSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 02 00 00 00	 mov	 ebx, 2

; 126  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00020	6a 20		 push	 32			; 00000020H
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	8b f0		 mov	 esi, eax
  0002d	83 c4 04	 add	 esp, 4
  00030	89 74 24 0c	 mov	 DWORD PTR $T137022[esp+28], esi
  00034	85 f6		 test	 esi, esi
  00036	c6 44 24 18 03	 mov	 BYTE PTR __$EHRec$[esp+36], 3
  0003b	74 10		 je	 SHORT $L137023
  0003d	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00040	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00045	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004b	eb 02		 jmp	 SHORT $L137024
$L137023:
  0004d	33 f6		 xor	 esi, esi
$L137024:

; 127  : 
; 128  : 	pMsg->m_packet.SetID(DM_GUILDARTICLEADD_REQ)
; 129  : 		<< dwGuildID
; 130  : 		<< dwID
; 131  : 		<< bDuty
; 132  : 		<< strWritter
; 133  : 		<< strTitle
; 134  : 		<< strArticle
; 135  : 		<< dwTime;

  0004f	8b 44 24 38	 mov	 eax, DWORD PTR _dwTime$[esp+24]
  00053	8b 4c 24 34	 mov	 ecx, DWORD PTR _strArticle$[esp+24]
  00057	8b 54 24 28	 mov	 edx, DWORD PTR _bDuty$[esp+24]
  0005b	57		 push	 edi
  0005c	8b 7c 24 30	 mov	 edi, DWORD PTR _strWritter$[esp+28]
  00060	50		 push	 eax
  00061	8b 44 24 2c	 mov	 eax, DWORD PTR _dwID$[esp+32]
  00065	51		 push	 ecx
  00066	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwGuildID$[esp+36]
  0006a	88 5c 24 24	 mov	 BYTE PTR __$EHRec$[esp+48], bl
  0006e	8b 5c 24 3c	 mov	 ebx, DWORD PTR _strTitle$[esp+36]
  00072	53		 push	 ebx
  00073	57		 push	 edi
  00074	52		 push	 edx
  00075	50		 push	 eax
  00076	51		 push	 ecx
  00077	68 48 90 00 00	 push	 36936			; 00009048H
  0007c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0007f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00084	8b c8		 mov	 ecx, eax
  00086	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0008b	8b c8		 mov	 ecx, eax
  0008d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00092	8b c8		 mov	 ecx, eax
  00094	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00099	8b c8		 mov	 ecx, eax
  0009b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000a7	8b c8		 mov	 ecx, eax
  000a9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000ae	8b c8		 mov	 ecx, eax
  000b0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 136  : 
; 137  : 	SayToDB(pMsg);

  000b5	56		 push	 esi
  000b6	8b cd		 mov	 ecx, ebp
  000b8	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 138  : }

  000bd	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000c0	c6 44 24 1c 01	 mov	 BYTE PTR __$EHRec$[esp+40], 1
  000c5	8d 50 0c	 lea	 edx, DWORD PTR [eax+12]
  000c8	83 c9 ff	 or	 ecx, -1
  000cb	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
  000cf	49		 dec	 ecx
  000d0	85 c9		 test	 ecx, ecx
  000d2	5f		 pop	 edi
  000d3	7f 08		 jg	 SHORT $L137065
  000d5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000d9	50		 push	 eax
  000da	ff 52 04	 call	 DWORD PTR [edx+4]
$L137065:
  000dd	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000e0	c6 44 24 18 00	 mov	 BYTE PTR __$EHRec$[esp+36], 0
  000e5	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000e8	83 ca ff	 or	 edx, -1
  000eb	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ef	4a		 dec	 edx
  000f0	85 d2		 test	 edx, edx
  000f2	5e		 pop	 esi
  000f3	5d		 pop	 ebp
  000f4	5b		 pop	 ebx
  000f5	7f 08		 jg	 SHORT $L137092
  000f7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000fb	50		 push	 eax
  000fc	ff 52 04	 call	 DWORD PTR [edx+4]
$L137092:
  000ff	8b 44 24 28	 mov	 eax, DWORD PTR _strArticle$[esp+12]
  00103	83 c0 f0	 add	 eax, -16		; fffffff0H
  00106	c7 44 24 0c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+24], -1
  0010e	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00111	83 ca ff	 or	 edx, -1
  00114	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00118	4a		 dec	 edx
  00119	85 d2		 test	 edx, edx
  0011b	7f 08		 jg	 SHORT $L137119
  0011d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0011f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00121	50		 push	 eax
  00122	ff 52 04	 call	 DWORD PTR [edx+4]
$L137119:
  00125	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00129	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00130	83 c4 10	 add	 esp, 16			; 00000010H
  00133	c2 1c 00	 ret	 28			; 0000001cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L137025:
  00000	8d 4d 18	 lea	 ecx, DWORD PTR _strArticle$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L137026:
  00008	8d 4d 14	 lea	 ecx, DWORD PTR _strTitle$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L137027:
  00010	8d 4d 10	 lea	 ecx, DWORD PTR _strWritter$[ebp-4]
  00013	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L137028:
  00018	8b 45 f0	 mov	 eax, DWORD PTR $T137022[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00021	59		 pop	 ecx
  00022	c3		 ret	 0
__ehhandler$?SendDM_GUILDARTICLEADD_REQ@CTWorldSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z:
  00023	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T137124
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDARTICLEADD_REQ@CTWorldSvrModule@@QAEXKKEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@00K@Z ENDP ; CTWorldSvrModule::SendDM_GUILDARTICLEADD_REQ
PUBLIC	?SendDM_GUILDARTICLEUPDATE_REQ@CTWorldSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ; CTWorldSvrModule::SendDM_GUILDARTICLEUPDATE_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T137206 DD	0ffffffffH
	DD	FLAT:$L137136
	DD	00H
	DD	FLAT:$L137137
	DD	01H
	DD	FLAT:$L137138
$T137204 DD	019930520H
	DD	03H
	DD	FLAT:$T137206
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDARTICLEUPDATE_REQ@CTWorldSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT
$T137133 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwGuildID$ = 8						; size = 4
_dwID$ = 12						; size = 4
_strTitle$ = 16						; size = 4
_strArticle$ = 20					; size = 4
?SendDM_GUILDARTICLEUPDATE_REQ@CTWorldSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDARTICLEUPDATE_REQ, COMDAT
; _this$ = ecx

; 156  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDARTICLEUPDATE_REQ@CTWorldSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 01 00 00 00	 mov	 ebx, 1

; 157  : 	LPPACKETBUF pMsg = new PACKETBUF();

  00020	6a 20		 push	 32			; 00000020H
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	8b f0		 mov	 esi, eax
  0002d	83 c4 04	 add	 esp, 4
  00030	89 74 24 0c	 mov	 DWORD PTR $T137133[esp+28], esi
  00034	85 f6		 test	 esi, esi
  00036	c6 44 24 18 02	 mov	 BYTE PTR __$EHRec$[esp+36], 2
  0003b	74 10		 je	 SHORT $L137134
  0003d	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00040	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00045	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004b	eb 02		 jmp	 SHORT $L137135
$L137134:
  0004d	33 f6		 xor	 esi, esi
$L137135:

; 158  : 
; 159  : 	pMsg->m_packet.SetID(DM_GUILDARTICLEUPDATE_REQ)
; 160  : 		<< dwGuildID
; 161  : 		<< dwID
; 162  : 		<< strTitle
; 163  : 		<< strArticle;

  0004f	8b 44 24 24	 mov	 eax, DWORD PTR _dwID$[esp+24]
  00053	8b 4c 24 20	 mov	 ecx, DWORD PTR _dwGuildID$[esp+24]
  00057	57		 push	 edi
  00058	8b 7c 24 2c	 mov	 edi, DWORD PTR _strTitle$[esp+28]
  0005c	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl
  00060	8b 5c 24 30	 mov	 ebx, DWORD PTR _strArticle$[esp+28]
  00064	53		 push	 ebx
  00065	57		 push	 edi
  00066	50		 push	 eax
  00067	51		 push	 ecx
  00068	68 56 90 00 00	 push	 36950			; 00009056H
  0006d	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00070	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00075	8b c8		 mov	 ecx, eax
  00077	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007c	8b c8		 mov	 ecx, eax
  0007e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00083	8b c8		 mov	 ecx, eax
  00085	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0008a	8b c8		 mov	 ecx, eax
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 164  : 
; 165  : 	SayToDB(pMsg);

  00091	56		 push	 esi
  00092	8b cd		 mov	 ecx, ebp
  00094	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 166  : }

  00099	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0009c	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000a1	8d 50 0c	 lea	 edx, DWORD PTR [eax+12]
  000a4	83 c9 ff	 or	 ecx, -1
  000a7	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
  000ab	49		 dec	 ecx
  000ac	85 c9		 test	 ecx, ecx
  000ae	5f		 pop	 edi
  000af	7f 08		 jg	 SHORT $L137174
  000b1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b5	50		 push	 eax
  000b6	ff 52 04	 call	 DWORD PTR [edx+4]
$L137174:
  000b9	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000bc	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000c4	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000c7	83 ca ff	 or	 edx, -1
  000ca	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ce	4a		 dec	 edx
  000cf	85 d2		 test	 edx, edx
  000d1	5e		 pop	 esi
  000d2	5d		 pop	 ebp
  000d3	5b		 pop	 ebx
  000d4	7f 08		 jg	 SHORT $L137201
  000d6	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d8	8b 11		 mov	 edx, DWORD PTR [ecx]
  000da	50		 push	 eax
  000db	ff 52 04	 call	 DWORD PTR [edx+4]
$L137201:
  000de	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000e2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000e9	83 c4 10	 add	 esp, 16			; 00000010H
  000ec	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L137136:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strArticle$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L137137:
  00008	8d 4d 0c	 lea	 ecx, DWORD PTR _strTitle$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L137138:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T137133[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendDM_GUILDARTICLEUPDATE_REQ@CTWorldSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T137204
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDARTICLEUPDATE_REQ@CTWorldSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ENDP ; CTWorldSvrModule::SendDM_GUILDARTICLEUPDATE_REQ
PUBLIC	?SendDM_GUILDPOINTREWARD_REQ@CTWorldSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KK@Z ; CTWorldSvrModule::SendDM_GUILDPOINTREWARD_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T137255 DD	0ffffffffH
	DD	FLAT:$L137216
	DD	00H
	DD	FLAT:$L137217
$T137253 DD	019930520H
	DD	02H
	DD	FLAT:$T137255
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDPOINTREWARD_REQ@CTWorldSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KK@Z
_TEXT	SEGMENT
$T137213 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwGuildID$ = 8						; size = 4
_dwPoint$ = 12						; size = 4
_strName$ = 16						; size = 4
_dwTotalPoint$ = 20					; size = 4
_dwUseablePoint$ = 24					; size = 4
?SendDM_GUILDPOINTREWARD_REQ@CTWorldSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KK@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDPOINTREWARD_REQ, COMDAT
; _this$ = ecx

; 271  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDPOINTREWARD_REQ@CTWorldSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 272  : 	LPPACKETBUF pMSG = new PACKETBUF();

  0001b	6a 20		 push	 32			; 00000020H
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	8b f0		 mov	 esi, eax
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 74 24 0c	 mov	 DWORD PTR $T137213[esp+28], esi
  00033	85 f6		 test	 esi, esi
  00035	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  0003a	74 10		 je	 SHORT $L137214
  0003c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004a	eb 02		 jmp	 SHORT $L137215
$L137214:
  0004c	33 f6		 xor	 esi, esi
$L137215:

; 273  : 	pMSG->m_packet.SetID(DM_GUILDPOINTREWARD_REQ)
; 274  : 		<< dwGuildID
; 275  : 		<< dwPoint
; 276  : 		<< strName
; 277  : 		<< dwTotalPoint
; 278  : 		<< dwUseablePoint;

  0004e	8b 44 24 30	 mov	 eax, DWORD PTR _dwUseablePoint$[esp+24]
  00052	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwTotalPoint$[esp+24]
  00056	8b 7c 24 28	 mov	 edi, DWORD PTR _strName$[esp+24]
  0005a	8b 54 24 24	 mov	 edx, DWORD PTR _dwPoint$[esp+24]
  0005e	50		 push	 eax
  0005f	8b 44 24 24	 mov	 eax, DWORD PTR _dwGuildID$[esp+28]
  00063	51		 push	 ecx
  00064	57		 push	 edi
  00065	52		 push	 edx
  00066	50		 push	 eax
  00067	68 85 90 00 00	 push	 36997			; 00009085H
  0006c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0006f	c6 44 24 30 00	 mov	 BYTE PTR __$EHRec$[esp+60], 0
  00074	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00079	8b c8		 mov	 ecx, eax
  0007b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00080	8b c8		 mov	 ecx, eax
  00082	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00087	8b c8		 mov	 ecx, eax
  00089	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0008e	8b c8		 mov	 ecx, eax
  00090	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00095	8b c8		 mov	 ecx, eax
  00097	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 279  : 
; 280  : 	SayToDB(pMSG);

  0009c	56		 push	 esi
  0009d	8b cd		 mov	 ecx, ebp
  0009f	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 281  : }

  000a4	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000a7	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000af	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000b2	83 ca ff	 or	 edx, -1
  000b5	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000b9	4a		 dec	 edx
  000ba	85 d2		 test	 edx, edx
  000bc	5f		 pop	 edi
  000bd	5e		 pop	 esi
  000be	5d		 pop	 ebp
  000bf	7f 08		 jg	 SHORT $L137248
  000c1	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c3	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c5	50		 push	 eax
  000c6	ff 52 04	 call	 DWORD PTR [edx+4]
$L137248:
  000c9	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000cd	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d4	83 c4 10	 add	 esp, 16			; 00000010H
  000d7	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L137216:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L137217:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T137213[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendDM_GUILDPOINTREWARD_REQ@CTWorldSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KK@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T137253
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDPOINTREWARD_REQ@CTWorldSvrModule@@QAEXKKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@KK@Z ENDP ; CTWorldSvrModule::SendDM_GUILDPOINTREWARD_REQ
PUBLIC	?SendDM_GUILDWANTEDADD_REQ@CTWorldSvrModule@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ; CTWorldSvrModule::SendDM_GUILDWANTEDADD_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T137335 DD	0ffffffffH
	DD	FLAT:$L137265
	DD	00H
	DD	FLAT:$L137266
	DD	01H
	DD	FLAT:$L137267
$T137333 DD	019930520H
	DD	03H
	DD	FLAT:$T137335
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDWANTEDADD_REQ@CTWorldSvrModule@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT
$T137262 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwGuildID$ = 8						; size = 4
_bMinLevel$ = 12					; size = 1
_bMaxLevel$ = 16					; size = 1
_strTitle$ = 20						; size = 4
_strText$ = 24						; size = 4
?SendDM_GUILDWANTEDADD_REQ@CTWorldSvrModule@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDWANTEDADD_REQ, COMDAT
; _this$ = ecx

; 361  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDWANTEDADD_REQ@CTWorldSvrModule@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 01 00 00 00	 mov	 ebx, 1

; 362  : 	LPPACKETBUF pMSG = new PACKETBUF();

  00020	6a 20		 push	 32			; 00000020H
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	8b f0		 mov	 esi, eax
  0002d	83 c4 04	 add	 esp, 4
  00030	89 74 24 0c	 mov	 DWORD PTR $T137262[esp+28], esi
  00034	85 f6		 test	 esi, esi
  00036	c6 44 24 18 02	 mov	 BYTE PTR __$EHRec$[esp+36], 2
  0003b	74 10		 je	 SHORT $L137263
  0003d	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00040	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00045	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004b	eb 02		 jmp	 SHORT $L137264
$L137263:
  0004d	33 f6		 xor	 esi, esi
$L137264:

; 363  : 	pMSG->m_packet.SetID(DM_GUILDWANTEDADD_REQ)
; 364  : 		<< dwGuildID
; 365  : 		<< bMinLevel
; 366  : 		<< bMaxLevel
; 367  : 		<< strTitle
; 368  : 		<< strText;

  0004f	8b 44 24 28	 mov	 eax, DWORD PTR _bMaxLevel$[esp+24]
  00053	8b 4c 24 24	 mov	 ecx, DWORD PTR _bMinLevel$[esp+24]
  00057	8b 54 24 20	 mov	 edx, DWORD PTR _dwGuildID$[esp+24]
  0005b	57		 push	 edi
  0005c	8b 7c 24 30	 mov	 edi, DWORD PTR _strTitle$[esp+28]
  00060	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl
  00064	8b 5c 24 34	 mov	 ebx, DWORD PTR _strText$[esp+28]
  00068	53		 push	 ebx
  00069	57		 push	 edi
  0006a	50		 push	 eax
  0006b	51		 push	 ecx
  0006c	52		 push	 edx
  0006d	68 96 90 00 00	 push	 37014			; 00009096H
  00072	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00075	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007a	8b c8		 mov	 ecx, eax
  0007c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00081	8b c8		 mov	 ecx, eax
  00083	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00088	8b c8		 mov	 ecx, eax
  0008a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0008f	8b c8		 mov	 ecx, eax
  00091	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00096	8b c8		 mov	 ecx, eax
  00098	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 369  : 
; 370  : 	SayToDB(pMSG);

  0009d	56		 push	 esi
  0009e	8b cd		 mov	 ecx, ebp
  000a0	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 371  : }

  000a5	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000a8	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000ad	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000b0	83 ca ff	 or	 edx, -1
  000b3	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000b7	4a		 dec	 edx
  000b8	85 d2		 test	 edx, edx
  000ba	5f		 pop	 edi
  000bb	7f 08		 jg	 SHORT $L137301
  000bd	8b 08		 mov	 ecx, DWORD PTR [eax]
  000bf	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c1	50		 push	 eax
  000c2	ff 52 04	 call	 DWORD PTR [edx+4]
$L137301:
  000c5	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  000c8	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000d0	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000d3	83 ca ff	 or	 edx, -1
  000d6	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000da	4a		 dec	 edx
  000db	85 d2		 test	 edx, edx
  000dd	5e		 pop	 esi
  000de	5d		 pop	 ebp
  000df	5b		 pop	 ebx
  000e0	7f 08		 jg	 SHORT $L137328
  000e2	8b 08		 mov	 ecx, DWORD PTR [eax]
  000e4	8b 11		 mov	 edx, DWORD PTR [ecx]
  000e6	50		 push	 eax
  000e7	ff 52 04	 call	 DWORD PTR [edx+4]
$L137328:
  000ea	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000f5	83 c4 10	 add	 esp, 16			; 00000010H
  000f8	c2 14 00	 ret	 20			; 00000014H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L137265:
  00000	8d 4d 14	 lea	 ecx, DWORD PTR _strText$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L137266:
  00008	8d 4d 10	 lea	 ecx, DWORD PTR _strTitle$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L137267:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T137262[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendDM_GUILDWANTEDADD_REQ@CTWorldSvrModule@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T137333
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDWANTEDADD_REQ@CTWorldSvrModule@@QAEXKEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ENDP ; CTWorldSvrModule::SendDM_GUILDWANTEDADD_REQ
PUBLIC	?SendDM_GUILDTACTICSWANTEDADD_REQ@CTWorldSvrModule@@QAEXKKKKKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ; CTWorldSvrModule::SendDM_GUILDTACTICSWANTEDADD_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T137415 DD	0ffffffffH
	DD	FLAT:$L137345
	DD	00H
	DD	FLAT:$L137346
	DD	01H
	DD	FLAT:$L137347
$T137413 DD	019930520H
	DD	03H
	DD	FLAT:$T137415
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GUILDTACTICSWANTEDADD_REQ@CTWorldSvrModule@@QAEXKKKKKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT
$T137342 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwID$ = 8						; size = 4
_dwGuildID$ = 12					; size = 4
_dwPoint$ = 16						; size = 4
_dwGold$ = 20						; size = 4
_dwSilver$ = 24						; size = 4
_dwCooper$ = 28						; size = 4
_bDay$ = 32						; size = 1
_bMinLevel$ = 36					; size = 1
_bMaxLevel$ = 40					; size = 1
_strTitle$ = 44						; size = 4
_strText$ = 48						; size = 4
?SendDM_GUILDTACTICSWANTEDADD_REQ@CTWorldSvrModule@@QAEXKKKKKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z PROC NEAR ; CTWorldSvrModule::SendDM_GUILDTACTICSWANTEDADD_REQ, COMDAT
; _this$ = ecx

; 416  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GUILDTACTICSWANTEDADD_REQ@CTWorldSvrModule@@QAEXKKKKKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	8b e9		 mov	 ebp, ecx
  0001b	bb 01 00 00 00	 mov	 ebx, 1

; 417  : 	LPPACKETBUF pMSG = new PACKETBUF();

  00020	6a 20		 push	 32			; 00000020H
  00022	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00026	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002b	8b f0		 mov	 esi, eax
  0002d	83 c4 04	 add	 esp, 4
  00030	89 74 24 0c	 mov	 DWORD PTR $T137342[esp+28], esi
  00034	85 f6		 test	 esi, esi
  00036	c6 44 24 18 02	 mov	 BYTE PTR __$EHRec$[esp+36], 2
  0003b	74 10		 je	 SHORT $L137343
  0003d	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00040	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00045	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004b	eb 02		 jmp	 SHORT $L137344
$L137343:
  0004d	33 f6		 xor	 esi, esi
$L137344:

; 418  : 	pMSG->m_packet.SetID(DM_GUILDTACTICSWANTEDADD_REQ)
; 419  : 		<< dwID
; 420  : 		<< dwGuildID
; 421  : 		<< dwPoint
; 422  : 		<< dwGold
; 423  : 		<< dwSilver
; 424  : 		<< dwCooper
; 425  : 		<< bDay
; 426  : 		<< bMinLevel
; 427  : 		<< bMaxLevel
; 428  : 		<< strTitle
; 429  : 		<< strText;

  0004f	8b 44 24 40	 mov	 eax, DWORD PTR _bMaxLevel$[esp+24]
  00053	8b 4c 24 3c	 mov	 ecx, DWORD PTR _bMinLevel$[esp+24]
  00057	8b 54 24 38	 mov	 edx, DWORD PTR _bDay$[esp+24]
  0005b	57		 push	 edi
  0005c	8b 7c 24 48	 mov	 edi, DWORD PTR _strTitle$[esp+28]
  00060	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl
  00064	8b 5c 24 4c	 mov	 ebx, DWORD PTR _strText$[esp+28]
  00068	53		 push	 ebx
  00069	57		 push	 edi
  0006a	50		 push	 eax
  0006b	8b 44 24 44	 mov	 eax, DWORD PTR _dwCooper$[esp+40]
  0006f	51		 push	 ecx
  00070	8b 4c 24 44	 mov	 ecx, DWORD PTR _dwSilver$[esp+44]
  00074	52		 push	 edx
  00075	8b 54 24 44	 mov	 edx, DWORD PTR _dwGold$[esp+48]
  00079	50		 push	 eax
  0007a	8b 44 24 44	 mov	 eax, DWORD PTR _dwPoint$[esp+52]
  0007e	51		 push	 ecx
  0007f	8b 4c 24 44	 mov	 ecx, DWORD PTR _dwGuildID$[esp+56]
  00083	52		 push	 edx
  00084	8b 54 24 44	 mov	 edx, DWORD PTR _dwID$[esp+60]
  00088	50		 push	 eax
  00089	51		 push	 ecx
  0008a	52		 push	 edx
  0008b	68 9a 90 00 00	 push	 37018			; 0000909aH
  00090	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00093	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00098	8b c8		 mov	 ecx, eax
  0009a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009f	8b c8		 mov	 ecx, eax
  000a1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a6	8b c8		 mov	 ecx, eax
  000a8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ad	8b c8		 mov	 ecx, eax
  000af	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b4	8b c8		 mov	 ecx, eax
  000b6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000bb	8b c8		 mov	 ecx, eax
  000bd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000c2	8b c8		 mov	 ecx, eax
  000c4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c9	8b c8		 mov	 ecx, eax
  000cb	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000d0	8b c8		 mov	 ecx, eax
  000d2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000d7	8b c8		 mov	 ecx, eax
  000d9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000de	8b c8		 mov	 ecx, eax
  000e0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 430  : 
; 431  : 	SayToDB(pMSG);

  000e5	56		 push	 esi
  000e6	8b cd		 mov	 ecx, ebp
  000e8	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 432  : }

  000ed	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000f0	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000f5	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000f8	83 ca ff	 or	 edx, -1
  000fb	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ff	4a		 dec	 edx
  00100	85 d2		 test	 edx, edx
  00102	5f		 pop	 edi
  00103	7f 08		 jg	 SHORT $L137381
  00105	8b 08		 mov	 ecx, DWORD PTR [eax]
  00107	8b 11		 mov	 edx, DWORD PTR [ecx]
  00109	50		 push	 eax
  0010a	ff 52 04	 call	 DWORD PTR [edx+4]
$L137381:
  0010d	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  00110	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  00118	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0011b	83 ca ff	 or	 edx, -1
  0011e	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00122	4a		 dec	 edx
  00123	85 d2		 test	 edx, edx
  00125	5e		 pop	 esi
  00126	5d		 pop	 ebp
  00127	5b		 pop	 ebx
  00128	7f 08		 jg	 SHORT $L137408
  0012a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012c	8b 11		 mov	 edx, DWORD PTR [ecx]
  0012e	50		 push	 eax
  0012f	ff 52 04	 call	 DWORD PTR [edx+4]
$L137408:
  00132	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00136	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0013d	83 c4 10	 add	 esp, 16			; 00000010H
  00140	c2 2c 00	 ret	 44			; 0000002cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L137345:
  00000	8d 4d 2c	 lea	 ecx, DWORD PTR _strText$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L137346:
  00008	8d 4d 28	 lea	 ecx, DWORD PTR _strTitle$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L137347:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T137342[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendDM_GUILDTACTICSWANTEDADD_REQ@CTWorldSvrModule@@QAEXKKKKKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T137413
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GUILDTACTICSWANTEDADD_REQ@CTWorldSvrModule@@QAEXKKKKKKEEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ENDP ; CTWorldSvrModule::SendDM_GUILDTACTICSWANTEDADD_REQ
PUBLIC	?SendDM_GETCHARINFO_REQ@CTWorldSvrModule@@QAEXKKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTWorldSvrModule::SendDM_GETCHARINFO_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T137464 DD	0ffffffffH
	DD	FLAT:$L137425
	DD	00H
	DD	FLAT:$L137426
$T137462 DD	019930520H
	DD	02H
	DD	FLAT:$T137464
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_GETCHARINFO_REQ@CTWorldSvrModule@@QAEXKKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T137422 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwCharID$ = 8						; size = 4
_dwKey$ = 12						; size = 4
_wProtocol$ = 16					; size = 2
_strTarget$ = 20					; size = 4
?SendDM_GETCHARINFO_REQ@CTWorldSvrModule@@QAEXKKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTWorldSvrModule::SendDM_GETCHARINFO_REQ, COMDAT
; _this$ = ecx

; 511  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_GETCHARINFO_REQ@CTWorldSvrModule@@QAEXKKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 512  : 	LPPACKETBUF pMsg = new PACKETBUF();

  0001b	6a 20		 push	 32			; 00000020H
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	8b f0		 mov	 esi, eax
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 74 24 0c	 mov	 DWORD PTR $T137422[esp+28], esi
  00033	85 f6		 test	 esi, esi
  00035	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  0003a	74 10		 je	 SHORT $L137423
  0003c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004a	eb 02		 jmp	 SHORT $L137424
$L137423:
  0004c	33 f6		 xor	 esi, esi
$L137424:

; 513  : 
; 514  : 	pMsg->m_packet.SetID(DM_GETCHARINFO_REQ)
; 515  : 		<< dwCharID
; 516  : 		<< dwKey
; 517  : 		<< wProtocol
; 518  : 		<< strTarget;

  0004e	8b 7c 24 2c	 mov	 edi, DWORD PTR _strTarget$[esp+24]
  00052	8b 44 24 28	 mov	 eax, DWORD PTR _wProtocol$[esp+24]
  00056	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwKey$[esp+24]
  0005a	8b 54 24 20	 mov	 edx, DWORD PTR _dwCharID$[esp+24]
  0005e	57		 push	 edi
  0005f	50		 push	 eax
  00060	51		 push	 ecx
  00061	52		 push	 edx
  00062	68 b3 90 00 00	 push	 37043			; 000090b3H
  00067	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0006a	c6 44 24 2c 00	 mov	 BYTE PTR __$EHRec$[esp+56], 0
  0006f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00074	8b c8		 mov	 ecx, eax
  00076	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 519  : 
; 520  : 	SayToDB(pMsg);

  00090	56		 push	 esi
  00091	8b cd		 mov	 ecx, ebp
  00093	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 521  : }

  00098	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  0009b	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000a3	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000a6	83 ca ff	 or	 edx, -1
  000a9	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000ad	4a		 dec	 edx
  000ae	85 d2		 test	 edx, edx
  000b0	5f		 pop	 edi
  000b1	5e		 pop	 esi
  000b2	5d		 pop	 ebp
  000b3	7f 08		 jg	 SHORT $L137457
  000b5	8b 08		 mov	 ecx, DWORD PTR [eax]
  000b7	8b 11		 mov	 edx, DWORD PTR [ecx]
  000b9	50		 push	 eax
  000ba	ff 52 04	 call	 DWORD PTR [edx+4]
$L137457:
  000bd	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000c1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c8	83 c4 10	 add	 esp, 16			; 00000010H
  000cb	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L137425:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strTarget$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L137426:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T137422[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendDM_GETCHARINFO_REQ@CTWorldSvrModule@@QAEXKKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T137462
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_GETCHARINFO_REQ@CTWorldSvrModule@@QAEXKKGV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTWorldSvrModule::SendDM_GETCHARINFO_REQ
PUBLIC	?SendDM_HELPMESSAGE_REQ@CTWorldSvrModule@@QAEXE_J0V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ; CTWorldSvrModule::SendDM_HELPMESSAGE_REQ
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T137513 DD	0ffffffffH
	DD	FLAT:$L137474
	DD	00H
	DD	FLAT:$L137475
$T137511 DD	019930520H
	DD	02H
	DD	FLAT:$T137513
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_HELPMESSAGE_REQ@CTWorldSvrModule@@QAEXE_J0V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
_TEXT	SEGMENT
$T137471 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bID$ = 8						; size = 1
_dlStart$ = 12						; size = 8
_dlEnd$ = 20						; size = 8
_strMessage$ = 28					; size = 4
?SendDM_HELPMESSAGE_REQ@CTWorldSvrModule@@QAEXE_J0V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z PROC NEAR ; CTWorldSvrModule::SendDM_HELPMESSAGE_REQ, COMDAT
; _this$ = ecx

; 612  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_HELPMESSAGE_REQ@CTWorldSvrModule@@QAEXE_J0V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	55		 push	 ebp
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b e9		 mov	 ebp, ecx

; 613  : 	LPPACKETBUF pMsg = new PACKETBUF();

  0001b	6a 20		 push	 32			; 00000020H
  0001d	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+40], 0
  00025	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002a	8b f0		 mov	 esi, eax
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 74 24 0c	 mov	 DWORD PTR $T137471[esp+28], esi
  00033	85 f6		 test	 esi, esi
  00035	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  0003a	74 10		 je	 SHORT $L137472
  0003c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004a	eb 02		 jmp	 SHORT $L137473
$L137472:
  0004c	33 f6		 xor	 esi, esi
$L137473:

; 614  : 
; 615  : 	pMsg->m_packet.SetID(DM_HELPMESSAGE_REQ)
; 616  : 		<< bID
; 617  : 		<< dlStart
; 618  : 		<< dlEnd
; 619  : 		<< strMessage;

  0004e	8b 7c 24 34	 mov	 edi, DWORD PTR _strMessage$[esp+24]
  00052	8b 44 24 30	 mov	 eax, DWORD PTR _dlEnd$[esp+28]
  00056	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dlEnd$[esp+24]
  0005a	8b 54 24 28	 mov	 edx, DWORD PTR _dlStart$[esp+28]
  0005e	57		 push	 edi
  0005f	50		 push	 eax
  00060	8b 44 24 2c	 mov	 eax, DWORD PTR _dlStart$[esp+32]
  00064	51		 push	 ecx
  00065	8b 4c 24 2c	 mov	 ecx, DWORD PTR _bID$[esp+36]
  00069	52		 push	 edx
  0006a	50		 push	 eax
  0006b	51		 push	 ecx
  0006c	68 c2 90 00 00	 push	 37058			; 000090c2H
  00071	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00074	c6 44 24 34 00	 mov	 BYTE PTR __$EHRec$[esp+64], 0
  00079	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 620  : 
; 621  : 	SayToDB(pMsg);

  0009a	56		 push	 esi
  0009b	8b cd		 mov	 ecx, ebp
  0009d	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 622  : }

  000a2	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000a5	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  000ad	8d 50 0c	 lea	 edx, DWORD PTR [eax+12]
  000b0	83 c9 ff	 or	 ecx, -1
  000b3	f0 0f c1 0a	 lock	  xadd	 DWORD PTR [edx], ecx
  000b7	49		 dec	 ecx
  000b8	85 c9		 test	 ecx, ecx
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	5d		 pop	 ebp
  000bd	7f 08		 jg	 SHORT $L137506
  000bf	8b 08		 mov	 ecx, DWORD PTR [eax]
  000c1	8b 11		 mov	 edx, DWORD PTR [ecx]
  000c3	50		 push	 eax
  000c4	ff 52 04	 call	 DWORD PTR [edx+4]
$L137506:
  000c7	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  000cb	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000d2	83 c4 10	 add	 esp, 16			; 00000010H
  000d5	c2 18 00	 ret	 24			; 00000018H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L137474:
  00000	8d 4d 18	 lea	 ecx, DWORD PTR _strMessage$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L137475:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T137471[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendDM_HELPMESSAGE_REQ@CTWorldSvrModule@@QAEXE_J0V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T137511
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_HELPMESSAGE_REQ@CTWorldSvrModule@@QAEXE_J0V?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@@Z ENDP ; CTWorldSvrModule::SendDM_HELPMESSAGE_REQ
PUBLIC	??A?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAUtagTENTRYRECORD@@I@Z ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::operator[]
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??A?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAUtagTENTRYRECORD@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAUtagTENTRYRECORD@@I@Z PROC NEAR ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pos$[esp-4]
  00004	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00007	6b c0 2c	 imul	 eax, 44			; 0000002cH
  0000a	03 c2		 add	 eax, edx

; 556  : 		}

  0000c	c2 04 00	 ret	 4
??A?$vector@UtagTENTRYRECORD@@V?$allocator@UtagTENTRYRECORD@@@std@@@std@@QAEAAUtagTENTRYRECORD@@I@Z ENDP ; std::vector<tagTENTRYRECORD,std::allocator<tagTENTRYRECORD> >::operator[]
_TEXT	ENDS
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 456  : 		{	// destroy the string

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 457  : 		_Tidy(true);

  00003	83 7e 18 10	 cmp	 DWORD PTR [esi+24], 16	; 00000010H
  00007	72 0c		 jb	 SHORT $L137596
  00009	8b 46 04	 mov	 eax, DWORD PTR [esi+4]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00012	83 c4 04	 add	 esp, 4
$L137596:
  00015	33 c0		 xor	 eax, eax
  00017	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  0001e	89 46 14	 mov	 DWORD PTR [esi+20], eax
  00021	88 46 04	 mov	 BYTE PTR [esi+4], al
  00024	5e		 pop	 esi

; 458  : 		}

  00025	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
EXTRN	?_Xlen@_String_base@std@@QBEXXZ:NEAR		; std::_String_base::_Xlen
; Function compile flags: /Ogty
;	COMDAT ?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z
_TEXT	SEGMENT
__Newsize$ = 8						; size = 4
__Trim$ = 12						; size = 1
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow, COMDAT
; _this$ = ecx

; 1480 : 		{	// ensure buffer is big enough, trim to size if _Trim is true

  00000	55		 push	 ebp
  00001	56		 push	 esi

; 1481 : 		if (max_size() < _Newsize)

  00002	8b 74 24 0c	 mov	 esi, DWORD PTR __Newsize$[esp+4]
  00006	83 fe fe	 cmp	 esi, -2			; fffffffeH
  00009	8b e9		 mov	 ebp, ecx
  0000b	76 05		 jbe	 SHORT $L119063

; 1482 : 			_String_base::_Xlen();	// result too long

  0000d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L119063:

; 1483 : 		if (_Myres < _Newsize)

  00012	8b 45 18	 mov	 eax, DWORD PTR [ebp+24]
  00015	3b c6		 cmp	 eax, esi
  00017	73 19		 jae	 SHORT $L119064

; 1484 : 			_Copy(_Newsize, _Mysize);	// reallocate to grow

  00019	8b 45 14	 mov	 eax, DWORD PTR [ebp+20]
  0001c	50		 push	 eax
  0001d	56		 push	 esi
  0001e	8b cd		 mov	 ecx, ebp
  00020	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  00025	33 c0		 xor	 eax, eax
  00027	3b c6		 cmp	 eax, esi
  00029	1b c0		 sbb	 eax, eax
  0002b	5e		 pop	 esi
  0002c	f7 d8		 neg	 eax
  0002e	5d		 pop	 ebp

; 1491 : 		}

  0002f	c2 08 00	 ret	 8
$L119064:

; 1485 : 		else if (_Trim && _Newsize < _BUF_SIZE)

  00032	8a 4c 24 10	 mov	 cl, BYTE PTR __Trim$[esp+4]
  00036	84 c9		 test	 cl, cl
  00038	74 5c		 je	 SHORT $L119066
  0003a	83 fe 10	 cmp	 esi, 16			; 00000010H
  0003d	73 57		 jae	 SHORT $L119066
  0003f	53		 push	 ebx

; 1486 : 			_Tidy(true,	// copy and deallocate if trimming to small string
; 1487 : 				_Newsize < _Mysize ? _Newsize : _Mysize);

  00040	8b 5d 14	 mov	 ebx, DWORD PTR [ebp+20]
  00043	3b f3		 cmp	 esi, ebx
  00045	73 02		 jae	 SHORT $L137611
  00047	8b de		 mov	 ebx, esi
$L137611:
  00049	83 f8 10	 cmp	 eax, 16			; 00000010H
  0004c	72 2b		 jb	 SHORT $L137671
  0004e	85 db		 test	 ebx, ebx
  00050	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00053	57		 push	 edi
  00054	8d 7d 04	 lea	 edi, DWORD PTR [ebp+4]
  00057	76 16		 jbe	 SHORT $L137670
  00059	8b cb		 mov	 ecx, ebx
  0005b	8b d1		 mov	 edx, ecx
  0005d	c1 e9 02	 shr	 ecx, 2
  00060	8b f0		 mov	 esi, eax
  00062	f3 a5		 rep movsd
  00064	8b ca		 mov	 ecx, edx
  00066	83 e1 03	 and	 ecx, 3
  00069	f3 a4		 rep movsb
  0006b	8b 74 24 14	 mov	 esi, DWORD PTR __Newsize$[esp+12]
$L137670:
  0006f	50		 push	 eax
  00070	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00075	83 c4 04	 add	 esp, 4
  00078	5f		 pop	 edi
$L137671:
  00079	89 5d 14	 mov	 DWORD PTR [ebp+20], ebx

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  0007c	33 c0		 xor	 eax, eax
  0007e	c7 45 18 0f 00
	00 00		 mov	 DWORD PTR [ebp+24], 15	; 0000000fH
  00085	c6 44 2b 04 00	 mov	 BYTE PTR [ebx+ebp+4], 0
  0008a	3b c6		 cmp	 eax, esi
  0008c	5b		 pop	 ebx
  0008d	1b c0		 sbb	 eax, eax
  0008f	5e		 pop	 esi
  00090	f7 d8		 neg	 eax
  00092	5d		 pop	 ebp

; 1491 : 		}

  00093	c2 08 00	 ret	 8
$L119066:

; 1488 : 		else if (_Newsize == 0)

  00096	85 f6		 test	 esi, esi
  00098	75 23		 jne	 SHORT $L137703

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

  0009a	83 f8 10	 cmp	 eax, 16			; 00000010H
  0009d	89 75 14	 mov	 DWORD PTR [ebp+20], esi
  000a0	72 14		 jb	 SHORT $L137700
  000a2	8b 6d 04	 mov	 ebp, DWORD PTR [ebp+4]

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000a5	33 c0		 xor	 eax, eax
  000a7	3b c6		 cmp	 eax, esi
  000a9	1b c0		 sbb	 eax, eax
  000ab	5e		 pop	 esi
  000ac	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
  000b0	f7 d8		 neg	 eax
  000b2	5d		 pop	 ebp

; 1491 : 		}

  000b3	c2 08 00	 ret	 8

; 1489 : 			_Eos(0);	// new size is zero, just null terminate

$L137700:
  000b6	83 c5 04	 add	 ebp, 4
  000b9	c6 45 00 00	 mov	 BYTE PTR [ebp], 0
$L137703:

; 1490 : 		return (0 < _Newsize);	// return true only if more work to do

  000bd	33 c0		 xor	 eax, eax
  000bf	3b c6		 cmp	 eax, esi
  000c1	1b c0		 sbb	 eax, eax
  000c3	5e		 pop	 esi
  000c4	f7 d8		 neg	 eax
  000c6	5d		 pop	 ebp

; 1491 : 		}

  000c7	c2 08 00	 ret	 8
?_Grow@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAE_NI_N@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Grow
_TEXT	ENDS
PUBLIC	?SendDM_PVPRECORD_REQ@CTWorldSvrModule@@QAEXKPAUtagTGUILDMEMBER@@@Z ; CTWorldSvrModule::SendDM_PVPRECORD_REQ
EXTRN	?GetSize@CPacket@@QAEGXZ:NEAR			; CPacket::GetSize
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\tworldtype.h
xdata$x	SEGMENT
$T138022 DD	0ffffffffH
	DD	FLAT:$L137716
$T138015 DD	019930520H
	DD	01H
	DD	FLAT:$T138022
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_PVPRECORD_REQ@CTWorldSvrModule@@QAEXKPAUtagTGUILDMEMBER@@@Z
_TEXT	SEGMENT
_wCount$ = -28						; size = 2
tv305 = -24						; size = 4
_wSize$ = -20						; size = 2
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_i$134382 = 8						; size = 2
_dwGuildID$ = 8						; size = 4
$T137709 = 12						; size = 4
$T137708 = 12						; size = 4
_pMember$ = 12						; size = 4
?SendDM_PVPRECORD_REQ@CTWorldSvrModule@@QAEXKPAUtagTGUILDMEMBER@@@Z PROC NEAR ; CTWorldSvrModule::SendDM_PVPRECORD_REQ, COMDAT
; _this$ = ecx

; 284  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_PVPRECORD_REQ@CTWorldSvrModule@@QAEXKPAUtagTGUILDMEMBER@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 10	 sub	 esp, 16			; 00000010H
  00018	55		 push	 ebp

; 285  : 	if(!pMember || !pMember->m_bSaveRecord)

  00019	8b 6c 24 28	 mov	 ebp, DWORD PTR _pMember$[esp+28]
  0001d	57		 push	 edi
  0001e	33 ff		 xor	 edi, edi
  00020	3b ef		 cmp	 ebp, edi
  00022	89 4c 24 14	 mov	 DWORD PTR _this$[esp+36], ecx
  00026	0f 84 78 01 00
	00		 je	 $L137714
  0002c	8a 45 1c	 mov	 al, BYTE PTR [ebp+28]
  0002f	84 c0		 test	 al, al
  00031	0f 84 6d 01 00
	00		 je	 $L137714
  00037	56		 push	 esi

; 286  : 		return;
; 287  : 
; 288  : 	pMember->m_bSaveRecord = FALSE;
; 289  : 
; 290  : 	LPPACKETBUF pMSG = new PACKETBUF();

  00038	6a 20		 push	 32			; 00000020H
  0003a	c6 45 1c 00	 mov	 BYTE PTR [ebp+28], 0
  0003e	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00043	8b f0		 mov	 esi, eax
  00045	83 c4 04	 add	 esp, 4
  00048	89 74 24 30	 mov	 DWORD PTR $T137709[esp+36], esi
  0004c	3b f7		 cmp	 esi, edi
  0004e	89 7c 24 24	 mov	 DWORD PTR __$EHRec$[esp+48], edi
  00052	74 10		 je	 SHORT $L137710
  00054	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  00057	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0005c	89 3e		 mov	 DWORD PTR [esi], edi
  0005e	89 74 24 30	 mov	 DWORD PTR $T137708[esp+36], esi
  00062	eb 06		 jmp	 SHORT $L137711
$L137710:
  00064	89 7c 24 30	 mov	 DWORD PTR $T137708[esp+36], edi
  00068	8b f7		 mov	 esi, edi
$L137711:

; 291  : 	pMSG->m_packet.SetID(DM_PVPRECORD_REQ)
; 292  : 		<< dwGuildID
; 293  : 		<< pMember->m_dwID;

  0006a	8b 45 08	 mov	 eax, DWORD PTR [ebp+8]
  0006d	8b 4c 24 2c	 mov	 ecx, DWORD PTR _dwGuildID$[esp+36]
  00071	53		 push	 ebx
  00072	50		 push	 eax
  00073	51		 push	 ecx
  00074	8d 5e 04	 lea	 ebx, DWORD PTR [esi+4]
  00077	68 86 90 00 00	 push	 36998			; 00009086H
  0007c	8b cb		 mov	 ecx, ebx
  0007e	c7 44 24 34 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+64], -1
  00086	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0008b	8b c8		 mov	 ecx, eax
  0008d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00092	8b c8		 mov	 ecx, eax
  00094	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 294  : 
; 295  : 	WORD wSize = pMSG->m_packet.GetSize();

  00099	8b cb		 mov	 ecx, ebx
  0009b	e8 00 00 00 00	 call	 ?GetSize@CPacket@@QAEGXZ ; CPacket::GetSize

; 296  : 	WORD wCount = 0;
; 297  : 	pMSG->m_packet << wCount;

  000a0	57		 push	 edi
  000a1	8b cb		 mov	 ecx, ebx
  000a3	89 7c 24 14	 mov	 DWORD PTR _wCount$[esp+48], edi
  000a7	89 44 24 1c	 mov	 DWORD PTR _wSize$[esp+48], eax
  000ab	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 298  : 
; 299  : 	for(WORD i=0; i<pMember->m_vRecord.size(); i++)

  000b0	89 7c 24 30	 mov	 DWORD PTR _i$134382[esp+40], edi
$L134383:
  000b4	8b 45 24	 mov	 eax, DWORD PTR [ebp+36]
  000b7	3b c7		 cmp	 eax, edi
  000b9	75 04		 jne	 SHORT $L137725
  000bb	33 c0		 xor	 eax, eax
  000bd	eb 16		 jmp	 SHORT $L137726
$L137725:
  000bf	8b 4d 28	 mov	 ecx, DWORD PTR [ebp+40]
  000c2	2b c8		 sub	 ecx, eax
  000c4	b8 e9 a2 8b 2e	 mov	 eax, 780903145		; 2e8ba2e9H
  000c9	f7 e9		 imul	 ecx
  000cb	c1 fa 03	 sar	 edx, 3
  000ce	8b c2		 mov	 eax, edx
  000d0	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000d3	03 c2		 add	 eax, edx
$L137726:
  000d5	0f b7 7c 24 30	 movzx	 edi, WORD PTR _i$134382[esp+40]
  000da	3b f8		 cmp	 edi, eax
  000dc	73 78		 jae	 SHORT $L134385

; 300  : 	{
; 301  : 		if(!pMember->m_vRecord[i].m_bLoad)

  000de	8b 55 24	 mov	 edx, DWORD PTR [ebp+36]
  000e1	6b ff 2c	 imul	 edi, 44			; 0000002cH
  000e4	8a 4c 17 28	 mov	 cl, BYTE PTR [edi+edx+40]
  000e8	84 c9		 test	 cl, cl
  000ea	8d 04 17	 lea	 eax, DWORD PTR [edi+edx]
  000ed	75 5c		 jne	 SHORT $L134384

; 302  : 		{
; 303  : 			pMSG->m_packet
; 304  : 				<< pMember->m_vRecord[i].m_dwDate
; 305  : 				<< pMember->m_vRecord[i].m_wKillCount
; 306  : 				<< pMember->m_vRecord[i].m_wDieCount;

  000ef	33 c9		 xor	 ecx, ecx
  000f1	66 8b 48 06	 mov	 cx, WORD PTR [eax+6]
  000f5	33 d2		 xor	 edx, edx
  000f7	66 8b 50 04	 mov	 dx, WORD PTR [eax+4]
  000fb	8b 00		 mov	 eax, DWORD PTR [eax]
  000fd	51		 push	 ecx
  000fe	8b cb		 mov	 ecx, ebx
  00100	52		 push	 edx
  00101	50		 push	 eax
  00102	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00107	8b c8		 mov	 ecx, eax
  00109	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0010e	8b c8		 mov	 ecx, eax
  00110	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00115	be 08 00 00 00	 mov	 esi, 8
  0011a	89 74 24 14	 mov	 DWORD PTR tv305[esp+44], esi
  0011e	8b ff		 npad	 2
$L134388:

; 307  : 
; 308  : 			for(BYTE e=0; e<PVPE_COUNT; e++)
; 309  : 			{
; 310  : 				pMSG->m_packet
; 311  : 					<< pMember->m_vRecord[i].m_aGainPoint[e];

  00120	8b 45 24	 mov	 eax, DWORD PTR [ebp+36]
  00123	03 c7		 add	 eax, edi
  00125	8b 0c 06	 mov	 ecx, DWORD PTR [esi+eax]
  00128	51		 push	 ecx
  00129	8b cb		 mov	 ecx, ebx
  0012b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00130	8b 44 24 14	 mov	 eax, DWORD PTR tv305[esp+44]
  00134	83 c6 04	 add	 esi, 4
  00137	48		 dec	 eax
  00138	89 44 24 14	 mov	 DWORD PTR tv305[esp+44], eax
  0013c	75 e2		 jne	 SHORT $L134388

; 312  : 			}
; 313  : 
; 314  : 			wCount++;

  0013e	8b 44 24 10	 mov	 eax, DWORD PTR _wCount$[esp+44]
  00142	8b 74 24 34	 mov	 esi, DWORD PTR $T137708[esp+40]
  00146	40		 inc	 eax
  00147	89 44 24 10	 mov	 DWORD PTR _wCount$[esp+44], eax
$L134384:
  0014b	ff 44 24 30	 inc	 DWORD PTR _i$134382[esp+40]
  0014f	33 ff		 xor	 edi, edi
  00151	e9 5e ff ff ff	 jmp	 $L134383
$L134385:

; 315  : 		}
; 316  : 	}
; 317  : 	memcpy(pMSG->m_packet.GetBuffer()+wSize, &wCount, sizeof(wCount));

  00156	8b cb		 mov	 ecx, ebx
  00158	e8 00 00 00 00	 call	 ?GetBuffer@CPacket@@QAEPAEXZ ; CPacket::GetBuffer
  0015d	0f b7 54 24 18	 movzx	 edx, WORD PTR _wSize$[esp+44]
  00162	8b 4c 24 10	 mov	 ecx, DWORD PTR _wCount$[esp+44]

; 318  : 
; 319  : 	if(wCount)

  00166	66 85 c9	 test	 cx, cx
  00169	66 89 0c 10	 mov	 WORD PTR [eax+edx], cx
  0016d	74 1f		 je	 SHORT $L134391

; 320  : 		SayToDB(pMSG);

  0016f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _this$[esp+44]
  00173	56		 push	 esi
  00174	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB
  00179	5b		 pop	 ebx
  0017a	5e		 pop	 esi
  0017b	5f		 pop	 edi
  0017c	5d		 pop	 ebp

; 323  : }

  0017d	8b 4c 24 10	 mov	 ecx, DWORD PTR __$EHRec$[esp+28]
  00181	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00188	83 c4 1c	 add	 esp, 28			; 0000001cH
  0018b	c2 08 00	 ret	 8
$L134391:

; 321  : 	else
; 322  : 		delete pMSG;

  0018e	85 f6		 test	 esi, esi
  00190	74 10		 je	 SHORT $L138021
  00192	8b cb		 mov	 ecx, ebx
  00194	e8 00 00 00 00	 call	 ??1CPacket@@UAE@XZ	; CPacket::~CPacket
  00199	56		 push	 esi
  0019a	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0019f	83 c4 04	 add	 esp, 4
$L138021:
  001a2	5b		 pop	 ebx
  001a3	5e		 pop	 esi
$L137714:

; 323  : }

  001a4	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  001a8	5f		 pop	 edi
  001a9	5d		 pop	 ebp
  001aa	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  001b1	83 c4 1c	 add	 esp, 28			; 0000001cH
  001b4	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L137716:
  00000	8b 45 08	 mov	 eax, DWORD PTR $T137709[ebp-4]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_PVPRECORD_REQ@CTWorldSvrModule@@QAEXKPAUtagTGUILDMEMBER@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138015
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_PVPRECORD_REQ@CTWorldSvrModule@@QAEXKPAUtagTGUILDMEMBER@@@Z ENDP ; CTWorldSvrModule::SendDM_PVPRECORD_REQ
PUBLIC	??1logic_error@std@@UAE@XZ			; std::logic_error::~logic_error
PUBLIC	?what@logic_error@std@@UBEPBDXZ			; std::logic_error::what
PUBLIC	??_7logic_error@std@@6B@			; std::logic_error::`vftable'
PUBLIC	??_Glogic_error@std@@UAEPAXI@Z			; std::logic_error::`scalar deleting destructor'
EXTRN	??_Elogic_error@std@@UAEPAXI@Z:NEAR		; std::logic_error::`vector deleting destructor'
EXTRN	??1exception@@UAE@XZ:NEAR			; exception::~exception
;	COMDAT ??_7logic_error@std@@6B@
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
CONST	SEGMENT
??_7logic_error@std@@6B@ DD FLAT:??_Elogic_error@std@@UAEPAXI@Z ; std::logic_error::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
CONST	ENDS
;	COMDAT ??1logic_error@std@@UAE@XZ
_TEXT	SEGMENT
??1logic_error@std@@UAE@XZ PROC NEAR			; std::logic_error::~logic_error, COMDAT
; _this$ = ecx

; 23   : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L138092
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L138092:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1logic_error@std@@UAE@XZ ENDP				; std::logic_error::~logic_error
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ?what@logic_error@std@@UBEPBDXZ
_TEXT	SEGMENT
?what@logic_error@std@@UBEPBDXZ PROC NEAR		; std::logic_error::what, COMDAT
; _this$ = ecx

; 27   : 		return (_Str.c_str());

  00000	83 79 24 10	 cmp	 DWORD PTR [ecx+36], 16	; 00000010H
  00004	72 04		 jb	 SHORT $L138120
  00006	8b 41 10	 mov	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  00009	c3		 ret	 0

; 27   : 		return (_Str.c_str());

$L138120:
  0000a	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]

; 28   : 		}

  0000d	c3		 ret	 0
?what@logic_error@std@@UBEPBDXZ ENDP			; std::logic_error::what
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??_Glogic_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Glogic_error@std@@UAEPAXI@Z PROC NEAR		; std::logic_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1logic_error@std@@UAE@XZ ; std::logic_error::~logic_error
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L138126
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L138126:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Glogic_error@std@@UAEPAXI@Z ENDP			; std::logic_error::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
__Roff$ = 12						; size = 4
__Count$ = 16						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 590  : 		{	// assign _Right [_Roff, _Roff + _Count)

  00000	53		 push	 ebx
  00001	55		 push	 ebp
  00002	56		 push	 esi

; 591  : 		if (_Right.size() < _Roff)

  00003	8b 74 24 14	 mov	 esi, DWORD PTR __Roff$[esp+8]
  00007	57		 push	 edi
  00008	8b 7c 24 14	 mov	 edi, DWORD PTR __Right$[esp+12]
  0000c	39 77 14	 cmp	 DWORD PTR [edi+20], esi
  0000f	8b d9		 mov	 ebx, ecx
  00011	73 05		 jae	 SHORT $L117696

; 592  : 			_String_base::_Xran();	// _Roff off end

  00013	e8 00 00 00 00	 call	 ?_Xran@_String_base@std@@QBEXXZ ; std::_String_base::_Xran
$L117696:

; 593  : 		size_type _Num = _Right.size() - _Roff;

  00018	8b 6f 14	 mov	 ebp, DWORD PTR [edi+20]

; 594  : 		if (_Count < _Num)

  0001b	8b 44 24 1c	 mov	 eax, DWORD PTR __Count$[esp+12]
  0001f	2b ee		 sub	 ebp, esi
  00021	3b c5		 cmp	 eax, ebp
  00023	73 02		 jae	 SHORT $L117698

; 595  : 			_Num = _Count;	// trim _Num to size

  00025	8b e8		 mov	 ebp, eax
$L117698:

; 596  : 
; 597  : 		if (this == &_Right)

  00027	3b df		 cmp	 ebx, edi
  00029	75 1f		 jne	 SHORT $L117699

; 598  : 			erase((size_type)(_Roff + _Num)), erase(0, _Roff);	// substring

  0002b	6a ff		 push	 -1
  0002d	03 ee		 add	 ebp, esi
  0002f	55		 push	 ebp
  00030	8b cb		 mov	 ecx, ebx
  00032	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00037	56		 push	 esi
  00038	6a 00		 push	 0
  0003a	8b cb		 mov	 ecx, ebx
  0003c	e8 00 00 00 00	 call	 ?erase@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::erase
  00041	5f		 pop	 edi
  00042	5e		 pop	 esi
  00043	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00044	8b c3		 mov	 eax, ebx
  00046	5b		 pop	 ebx

; 605  : 		}

  00047	c2 0c 00	 ret	 12			; 0000000cH
$L117699:

; 599  : 		else if (_Grow(_Num))

  0004a	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  0004d	76 07		 jbe	 SHORT $L138235
  0004f	8b cb		 mov	 ecx, ebx
  00051	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L138235:
  00056	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00059	3b c5		 cmp	 eax, ebp
  0005b	73 21		 jae	 SHORT $L138236
  0005d	8b 43 14	 mov	 eax, DWORD PTR [ebx+20]
  00060	50		 push	 eax
  00061	55		 push	 ebp
  00062	8b cb		 mov	 ecx, ebx
  00064	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00069	85 ed		 test	 ebp, ebp
$L138323:
  0006b	76 6d		 jbe	 SHORT $L138322

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

  0006d	8b 4f 18	 mov	 ecx, DWORD PTR [edi+24]
  00070	b8 10 00 00 00	 mov	 eax, 16			; 00000010H
  00075	3b c8		 cmp	 ecx, eax
  00077	72 2f		 jb	 SHORT $L138287
  00079	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  0007c	eb 2d		 jmp	 SHORT $L138288

; 599  : 		else if (_Grow(_Num))

$L138236:
  0007e	85 ed		 test	 ebp, ebp
  00080	75 e9		 jne	 SHORT $L138323
  00082	83 f8 10	 cmp	 eax, 16			; 00000010H
  00085	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  00088	72 0f		 jb	 SHORT $L138279
  0008a	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  0008d	5f		 pop	 edi
  0008e	5e		 pop	 esi
  0008f	c6 00 00	 mov	 BYTE PTR [eax], 0
  00092	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  00093	8b c3		 mov	 eax, ebx
  00095	5b		 pop	 ebx

; 605  : 		}

  00096	c2 0c 00	 ret	 12			; 0000000cH

; 599  : 		else if (_Grow(_Num))

$L138279:
  00099	5f		 pop	 edi
  0009a	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  0009d	5e		 pop	 esi
  0009e	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a1	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000a2	8b c3		 mov	 eax, ebx
  000a4	5b		 pop	 ebx

; 605  : 		}

  000a5	c2 0c 00	 ret	 12			; 0000000cH

; 600  : 			{	// make room and assign new stuff
; 601  : 			_Traits::copy(_Myptr(), _Right._Myptr() + _Roff, _Num);

$L138287:
  000a8	8d 57 04	 lea	 edx, DWORD PTR [edi+4]
$L138288:
  000ab	39 43 18	 cmp	 DWORD PTR [ebx+24], eax
  000ae	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000b1	72 04		 jb	 SHORT $L138294
  000b3	8b 38		 mov	 edi, DWORD PTR [eax]
  000b5	eb 02		 jmp	 SHORT $L138295
$L138294:
  000b7	8b f8		 mov	 edi, eax
$L138295:
  000b9	03 f2		 add	 esi, edx
  000bb	8b cd		 mov	 ecx, ebp
  000bd	8b d1		 mov	 edx, ecx
  000bf	c1 e9 02	 shr	 ecx, 2
  000c2	f3 a5		 rep movsd
  000c4	8b ca		 mov	 ecx, edx
  000c6	83 e1 03	 and	 ecx, 3
  000c9	f3 a4		 rep movsb

; 602  : 			_Eos(_Num);

  000cb	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000cf	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000d2	72 02		 jb	 SHORT $L138317
  000d4	8b 00		 mov	 eax, DWORD PTR [eax]
$L138317:
  000d6	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L138322:
  000da	5f		 pop	 edi
  000db	5e		 pop	 esi
  000dc	5d		 pop	 ebp

; 603  : 			}
; 604  : 		return (*this);

  000dd	8b c3		 mov	 eax, ebx
  000df	5b		 pop	 ebx

; 605  : 		}

  000e0	c2 0c 00	 ret	 12			; 0000000cH
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Num$ = 12						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 608  : 		{	// assign [_Ptr, _Ptr + _Num)

  00000	53		 push	 ebx
  00001	8b d9		 mov	 ebx, ecx

; 609  : 		if (_Inside(_Ptr))

  00003	8b 53 18	 mov	 edx, DWORD PTR [ebx+24]
  00006	83 fa 10	 cmp	 edx, 16			; 00000010H
  00009	56		 push	 esi
  0000a	57		 push	 edi
  0000b	72 05		 jb	 SHORT $L138344
  0000d	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00010	eb 03		 jmp	 SHORT $L138345
$L138344:
  00012	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
$L138345:
  00015	8b 74 24 10	 mov	 esi, DWORD PTR __Ptr$[esp+8]
  00019	3b f0		 cmp	 esi, eax
  0001b	72 34		 jb	 SHORT $L119050
  0001d	83 fa 10	 cmp	 edx, 16			; 00000010H
  00020	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  00023	72 04		 jb	 SHORT $L138348
  00025	8b 08		 mov	 ecx, DWORD PTR [eax]
  00027	eb 02		 jmp	 SHORT $L138349
$L138348:
  00029	8b c8		 mov	 ecx, eax
$L138349:
  0002b	8b 7b 14	 mov	 edi, DWORD PTR [ebx+20]
  0002e	03 f9		 add	 edi, ecx
  00030	3b fe		 cmp	 edi, esi
  00032	76 1d		 jbe	 SHORT $L119050

; 610  : 			return (assign(*this, _Ptr - _Myptr(), _Num));	// substring

  00034	83 fa 10	 cmp	 edx, 16			; 00000010H
  00037	72 02		 jb	 SHORT $L138361
  00039	8b 00		 mov	 eax, DWORD PTR [eax]
$L138361:
  0003b	8b 4c 24 14	 mov	 ecx, DWORD PTR __Num$[esp+8]
  0003f	51		 push	 ecx
  00040	2b f0		 sub	 esi, eax
  00042	56		 push	 esi
  00043	53		 push	 ebx
  00044	8b cb		 mov	 ecx, ebx
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0004b	5f		 pop	 edi
  0004c	5e		 pop	 esi
  0004d	5b		 pop	 ebx

; 618  : 		}

  0004e	c2 08 00	 ret	 8
$L119050:
  00051	55		 push	 ebp

; 611  : 
; 612  : 		if (_Grow(_Num))

  00052	8b 6c 24 18	 mov	 ebp, DWORD PTR __Num$[esp+12]
  00056	83 fd fe	 cmp	 ebp, -2			; fffffffeH
  00059	76 07		 jbe	 SHORT $L138502
  0005b	8b cb		 mov	 ecx, ebx
  0005d	e8 00 00 00 00	 call	 ?_Xlen@_String_base@std@@QBEXXZ ; std::_String_base::_Xlen
$L138502:
  00062	8b 43 18	 mov	 eax, DWORD PTR [ebx+24]
  00065	3b c5		 cmp	 eax, ebp
  00067	73 1b		 jae	 SHORT $L138503
  00069	8b 53 14	 mov	 edx, DWORD PTR [ebx+20]
  0006c	52		 push	 edx
  0006d	55		 push	 ebp
  0006e	8b cb		 mov	 ecx, ebx
  00070	e8 00 00 00 00	 call	 ?_Copy@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@IAEXII@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Copy
  00075	85 ed		 test	 ebp, ebp
$L138541:
  00077	76 68		 jbe	 SHORT $L138539

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

  00079	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  0007d	72 2f		 jb	 SHORT $L138512
  0007f	8b 7b 04	 mov	 edi, DWORD PTR [ebx+4]
  00082	eb 2d		 jmp	 SHORT $L138513

; 611  : 
; 612  : 		if (_Grow(_Num))

$L138503:
  00084	85 ed		 test	 ebp, ebp
  00086	75 ef		 jne	 SHORT $L138541
  00088	83 f8 10	 cmp	 eax, 16			; 00000010H
  0008b	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  0008e	72 0f		 jb	 SHORT $L138495
  00090	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  00093	5d		 pop	 ebp
  00094	5f		 pop	 edi
  00095	c6 00 00	 mov	 BYTE PTR [eax], 0
  00098	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  00099	8b c3		 mov	 eax, ebx
  0009b	5b		 pop	 ebx

; 618  : 		}

  0009c	c2 08 00	 ret	 8

; 611  : 
; 612  : 		if (_Grow(_Num))

$L138495:
  0009f	5d		 pop	 ebp
  000a0	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000a3	5f		 pop	 edi
  000a4	c6 00 00	 mov	 BYTE PTR [eax], 0
  000a7	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000a8	8b c3		 mov	 eax, ebx
  000aa	5b		 pop	 ebx

; 618  : 		}

  000ab	c2 08 00	 ret	 8

; 613  : 			{	// make room and assign new stuff
; 614  : 			_Traits::copy(_Myptr(), _Ptr, _Num);

$L138512:
  000ae	8d 7b 04	 lea	 edi, DWORD PTR [ebx+4]
$L138513:
  000b1	8b cd		 mov	 ecx, ebp
  000b3	8b c1		 mov	 eax, ecx
  000b5	c1 e9 02	 shr	 ecx, 2
  000b8	f3 a5		 rep movsd
  000ba	8b c8		 mov	 ecx, eax
  000bc	83 e1 03	 and	 ecx, 3
  000bf	f3 a4		 rep movsb

; 615  : 			_Eos(_Num);

  000c1	83 7b 18 10	 cmp	 DWORD PTR [ebx+24], 16	; 00000010H
  000c5	89 6b 14	 mov	 DWORD PTR [ebx+20], ebp
  000c8	72 10		 jb	 SHORT $L138535
  000ca	8b 43 04	 mov	 eax, DWORD PTR [ebx+4]
  000cd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
  000d1	5d		 pop	 ebp
  000d2	5f		 pop	 edi
  000d3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000d4	8b c3		 mov	 eax, ebx
  000d6	5b		 pop	 ebx

; 618  : 		}

  000d7	c2 08 00	 ret	 8

; 615  : 			_Eos(_Num);

$L138535:
  000da	8d 43 04	 lea	 eax, DWORD PTR [ebx+4]
  000dd	c6 04 28 00	 mov	 BYTE PTR [eax+ebp], 0
$L138539:
  000e1	5d		 pop	 ebp
  000e2	5f		 pop	 edi
  000e3	5e		 pop	 esi

; 616  : 			}
; 617  : 		return (*this);

  000e4	8b c3		 mov	 eax, ebx
  000e6	5b		 pop	 ebx

; 618  : 		}

  000e7	c2 08 00	 ret	 8
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
__Right$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 323  : 		{	// construct by copying _Right

  00000	56		 push	 esi

; 324  : 		_Tidy();

  00001	33 c0		 xor	 eax, eax
  00003	8b f1		 mov	 esi, ecx

; 325  : 		assign(_Right, 0, npos);

  00005	6a ff		 push	 -1
  00007	89 46 14	 mov	 DWORD PTR [esi+20], eax
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	50		 push	 eax
  00012	88 46 04	 mov	 BYTE PTR [esi+4], al
  00015	8b 44 24 10	 mov	 eax, DWORD PTR __Right$[esp+8]
  00019	50		 push	 eax
  0001a	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 326  : 		}

  0001f	8b c6		 mov	 eax, esi
  00021	5e		 pop	 esi
  00022	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@ABV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
; Function compile flags: /Ogty
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT
; _this$ = ecx

; 621  : 		{	// assign [_Ptr, <null>)

  00000	56		 push	 esi

; 622  : 		return (assign(_Ptr, _Traits::length(_Ptr)));

  00001	8b 74 24 08	 mov	 esi, DWORD PTR __Ptr$[esp]
  00005	8b c6		 mov	 eax, esi
  00007	57		 push	 edi
  00008	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0000b	eb 03 8d 49 00	 npad	 5
$L138614:
  00010	8a 10		 mov	 dl, BYTE PTR [eax]
  00012	40		 inc	 eax
  00013	84 d2		 test	 dl, dl
  00015	75 f9		 jne	 SHORT $L138614
  00017	2b c7		 sub	 eax, edi
  00019	50		 push	 eax
  0001a	56		 push	 esi
  0001b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00020	5f		 pop	 edi
  00021	5e		 pop	 esi

; 623  : 		}

  00022	c2 04 00	 ret	 4
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
; Function compile flags: /Ogty
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z PROC NEAR ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 361  : 		_Tidy();
; 362  : 		assign(_Ptr);

  00000	8b 54 24 04	 mov	 edx, DWORD PTR __Ptr$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b c2		 mov	 eax, edx
  00009	57		 push	 edi
  0000a	c7 46 18 0f 00
	00 00		 mov	 DWORD PTR [esi+24], 15	; 0000000fH
  00011	c7 46 14 00 00
	00 00		 mov	 DWORD PTR [esi+20], 0
  00018	c6 46 04 00	 mov	 BYTE PTR [esi+4], 0
  0001c	8d 78 01	 lea	 edi, DWORD PTR [eax+1]
  0001f	90		 npad	 1
$L138689:
  00020	8a 08		 mov	 cl, BYTE PTR [eax]
  00022	40		 inc	 eax
  00023	84 c9		 test	 cl, cl
  00025	75 f9		 jne	 SHORT $L138689
  00027	2b c7		 sub	 eax, edi
  00029	50		 push	 eax
  0002a	52		 push	 edx
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00032	5f		 pop	 edi

; 363  : 		}

  00033	8b c6		 mov	 eax, esi
  00035	5e		 pop	 esi
  00036	c2 04 00	 ret	 4
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@PBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
PUBLIC	??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
EXTRN	??0exception@@QAE@XZ:NEAR			; exception::exception
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\iosfwd
xdata$x	SEGMENT
$T138792 DD	0ffffffffH
	DD	FLAT:$L138693
$T138790 DD	019930520H
	DD	01H
	DD	FLAT:$T138792
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\stdexcept
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Message$ = 8						; size = 4
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::logic_error::logic_error, COMDAT
; _this$ = ecx

; 19   : 		{	// construct from message string

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	8b f1		 mov	 esi, ecx
  00019	89 74 24 04	 mov	 DWORD PTR _this$[esp+20], esi
  0001d	e8 00 00 00 00	 call	 ??0exception@@QAE@XZ	; exception::exception
  00022	33 c0		 xor	 eax, eax
  00024	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00027	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  0002d	6a ff		 push	 -1
  0002f	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00032	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00039	50		 push	 eax
  0003a	89 44 24 18	 mov	 DWORD PTR __$EHRec$[esp+36], eax
  0003e	88 41 04	 mov	 BYTE PTR [ecx+4], al
  00041	8b 44 24 20	 mov	 eax, DWORD PTR __Message$[esp+24]
  00045	50		 push	 eax
  00046	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 20   : 		}

  0004b	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  0004f	8b c6		 mov	 eax, esi
  00051	5e		 pop	 esi
  00052	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00059	83 c4 10	 add	 esp, 16			; 00000010H
  0005c	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138693:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T138790
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::logic_error::logic_error
PUBLIC	??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::out_of_range::out_of_range
PUBLIC	??_7out_of_range@std@@6B@			; std::out_of_range::`vftable'
PUBLIC	??_Gout_of_range@std@@UAEPAXI@Z			; std::out_of_range::`scalar deleting destructor'
EXTRN	??_Eout_of_range@std@@UAEPAXI@Z:NEAR		; std::out_of_range::`vector deleting destructor'
;	COMDAT ??_7out_of_range@std@@6B@
CONST	SEGMENT
??_7out_of_range@std@@6B@ DD FLAT:??_Eout_of_range@std@@UAEPAXI@Z ; std::out_of_range::`vftable'
	DD	FLAT:?what@logic_error@std@@UBEPBDXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
__Message$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC NEAR ; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx

; 118  : 		{	// construct from message string

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Message$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@

; 119  : 		}

  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	??1out_of_range@std@@UAE@XZ			; std::out_of_range::~out_of_range
; Function compile flags: /Ogty
;	COMDAT ??_Gout_of_range@std@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_Gout_of_range@std@@UAEPAXI@Z PROC NEAR		; std::out_of_range::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	e8 00 00 00 00	 call	 ??1out_of_range@std@@UAE@XZ ; std::out_of_range::~out_of_range
  00008	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  0000d	74 09		 je	 SHORT $L138802
  0000f	56		 push	 esi
  00010	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00015	83 c4 04	 add	 esp, 4
$L138802:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	c2 04 00	 ret	 4
??_Gout_of_range@std@@UAEPAXI@Z ENDP			; std::out_of_range::`scalar deleting destructor'
; Function compile flags: /Ogty
_TEXT	ENDS
;	COMDAT ??1out_of_range@std@@UAE@XZ
_TEXT	SEGMENT
??1out_of_range@std@@UAE@XZ PROC NEAR			; std::out_of_range::~out_of_range, COMDAT
; _this$ = ecx

; 122  : 		{}	// destroy the object

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00009	83 7e 24 10	 cmp	 DWORD PTR [esi+36], 16	; 00000010H
  0000d	72 0c		 jb	 SHORT $L138895
  0000f	8b 46 10	 mov	 eax, DWORD PTR [esi+16]
  00012	50		 push	 eax
  00013	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00018	83 c4 04	 add	 esp, 4
$L138895:
  0001b	33 c0		 xor	 eax, eax
  0001d	c7 46 24 0f 00
	00 00		 mov	 DWORD PTR [esi+36], 15	; 0000000fH
  00024	89 46 20	 mov	 DWORD PTR [esi+32], eax
  00027	88 46 10	 mov	 BYTE PTR [esi+16], al
  0002a	8b ce		 mov	 ecx, esi
  0002c	5e		 pop	 esi
  0002d	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
??1out_of_range@std@@UAE@XZ ENDP			; std::out_of_range::~out_of_range
_TEXT	ENDS
PUBLIC	??_R0?AVlogic_error@std@@@8			; std::logic_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
PUBLIC	??_R0?AVexception@@@8				; exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
PUBLIC	__TI3?AVout_of_range@std@@
PUBLIC	__CTA3?AVout_of_range@std@@
PUBLIC	??_R0?AVout_of_range@std@@@8			; std::out_of_range `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
PUBLIC	?_Xran@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@IBEXXZ ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::_Xran
PUBLIC	??0logic_error@std@@QAE@ABV01@@Z		; std::logic_error::logic_error
PUBLIC	??0out_of_range@std@@QAE@ABV01@@Z		; std::out_of_range::out_of_range
PUBLIC	??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ ; `string'
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
EXTRN	??0exception@@QAE@ABV0@@Z:NEAR			; exception::exception
;	COMDAT xdata$x
xdata$x	SEGMENT
$T139028 DD	0ffffffffH
	DD	FLAT:$L138914
$T139025 DD	019930520H
	DD	01H
	DD	FLAT:$T139028
	DD	2 DUP(00H)
	DD	2 DUP(00H)
xdata$x	ENDS
;	COMDAT ??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
CONST	SEGMENT
??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@ DB 'invalid v'
	DB	'ector<T> subscript', 00H			; `string'
CONST	ENDS
;	COMDAT __TI3?AVout_of_range@std@@
xdata$x	SEGMENT
__TI3?AVout_of_range@std@@ DD 00H
	DD	FLAT:??1out_of_range@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVout_of_range@std@@
xdata$x	ENDS
;	COMDAT __CTA3?AVout_of_range@std@@
xdata$x	SEGMENT
__CTA3?AVout_of_range@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
	DD	FLAT:__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	ENDS
;	COMDAT __CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVout_of_range@std@@@8??0out_of_range@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVout_of_range@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0out_of_range@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVout_of_range@std@@@8
_DATA	SEGMENT
??_R0?AVout_of_range@std@@@8 DD FLAT:??_7type_info@@6B@	; std::out_of_range `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVout_of_range@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40
xdata$x	SEGMENT
__CT??_R0?AVlogic_error@std@@@8??0logic_error@std@@QAE@ABV01@@Z40 DD 00H
	DD	FLAT:??_R0?AVlogic_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	FLAT:??0logic_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVlogic_error@std@@@8
_DATA	SEGMENT
??_R0?AVlogic_error@std@@@8 DD FLAT:??_7type_info@@6B@	; std::logic_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVlogic_error@std@@', 00H
_DATA	ENDS
;	COMDAT __CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@@@8??0exception@@QAE@ABV0@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@@QAE@ABV0@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@@@8
_DATA	SEGMENT
??_R0?AVexception@@@8 DD FLAT:??_7type_info@@6B@	; exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@@', 00H
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
_DATA	ENDS
;	COMDAT ?_Xran@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@IBEXXZ
_TEXT	SEGMENT
$T138913 = -80						; size = 28
$T138912 = -52						; size = 40
__$EHRec$ = -12						; size = 12
?_Xran@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@IBEXXZ PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::_Xran, COMDAT
; _this$ = ecx

; 888  : 		{	// report an out_of_range error

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?_Xran@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@IBEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 44	 sub	 esp, 68			; 00000044H

; 889  : 		_THROW(out_of_range, "invalid vector<T> subscript");

  00018	6a 1b		 push	 27			; 0000001bH
  0001a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0BM@NMJKDPPO@invalid?5vector?$DMT?$DO?5subscript?$AA@
  0001f	8d 4c 24 08	 lea	 ecx, DWORD PTR $T138913[esp+88]
  00023	c7 44 24 20 0f
	00 00 00	 mov	 DWORD PTR $T138913[esp+112], 15 ; 0000000fH
  0002b	c7 44 24 1c 00
	00 00 00	 mov	 DWORD PTR $T138913[esp+108], 0
  00033	c6 44 24 0c 00	 mov	 BYTE PTR $T138913[esp+92], 0
  00038	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@PBDI@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  0003d	8d 04 24	 lea	 eax, DWORD PTR $T138913[esp+80]
  00040	50		 push	 eax
  00041	8d 4c 24 20	 lea	 ecx, DWORD PTR $T138912[esp+84]
  00045	c7 44 24 50 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+92], 0
  0004d	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::logic_error::logic_error
  00052	68 00 00 00 00	 push	 OFFSET FLAT:__TI3?AVout_of_range@std@@
  00057	8d 4c 24 20	 lea	 ecx, DWORD PTR $T138912[esp+84]
  0005b	51		 push	 ecx
  0005c	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR $T138912[esp+88], OFFSET FLAT:??_7out_of_range@std@@6B@
  00064	e8 00 00 00 00	 call	 __CxxThrowException@8
$L139029:
$L139027:
  00069	cc		 int	 3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L138914:
  00000	8d 4d b0	 lea	 ecx, DWORD PTR $T138913[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?_Xran@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@IBEXXZ:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139025
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?_Xran@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@IBEXXZ ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::_Xran
;	COMDAT xdata$x
xdata$x	SEGMENT
$T139134 DD	0ffffffffH
	DD	FLAT:$L139035
$T139132 DD	019930520H
	DD	01H
	DD	FLAT:$T139134
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ??0logic_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___that$ = 8						; size = 4
??0logic_error@std@@QAE@ABV01@@Z PROC NEAR		; std::logic_error::logic_error, COMDAT
; _this$ = ecx
  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$??0logic_error@std@@QAE@ABV01@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	8b 7c 24 1c	 mov	 edi, DWORD PTR ___that$[esp+20]
  0001c	8b f1		 mov	 esi, ecx
  0001e	57		 push	 edi
  0001f	89 74 24 0c	 mov	 DWORD PTR _this$[esp+28], esi
  00023	e8 00 00 00 00	 call	 ??0exception@@QAE@ABV0@@Z ; exception::exception
  00028	33 c0		 xor	 eax, eax
  0002a	6a ff		 push	 -1
  0002c	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  0002f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7logic_error@std@@6B@
  00035	50		 push	 eax
  00036	83 c7 0c	 add	 edi, 12			; 0000000cH
  00039	c7 41 18 0f 00
	00 00		 mov	 DWORD PTR [ecx+24], 15	; 0000000fH
  00040	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00043	57		 push	 edi
  00044	89 44 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], eax
  00048	88 41 04	 mov	 BYTE PTR [ecx+4], al
  0004b	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAEAAV12@ABV12@II@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
  00050	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00054	5f		 pop	 edi
  00055	8b c6		 mov	 eax, esi
  00057	5e		 pop	 esi
  00058	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0005f	83 c4 10	 add	 esp, 16			; 00000010H
  00062	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139035:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1exception@@UAE@XZ	; exception::~exception
__ehhandler$??0logic_error@std@@QAE@ABV01@@Z:
  00008	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139132
  0000d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
??0logic_error@std@@QAE@ABV01@@Z ENDP			; std::logic_error::logic_error
; Function compile flags: /Ogty
;	COMDAT ??0out_of_range@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
___that$ = 8						; size = 4
??0out_of_range@std@@QAE@ABV01@@Z PROC NEAR		; std::out_of_range::out_of_range, COMDAT
; _this$ = ecx
  00000	8b 44 24 04	 mov	 eax, DWORD PTR ___that$[esp-4]
  00004	56		 push	 esi
  00005	50		 push	 eax
  00006	8b f1		 mov	 esi, ecx
  00008	e8 00 00 00 00	 call	 ??0logic_error@std@@QAE@ABV01@@Z
  0000d	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7out_of_range@std@@6B@
  00013	8b c6		 mov	 eax, esi
  00015	5e		 pop	 esi
  00016	c2 04 00	 ret	 4
??0out_of_range@std@@QAE@ABV01@@Z ENDP			; std::out_of_range::out_of_range
_TEXT	ENDS
PUBLIC	?at@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAUtagTCASHITMSALE@@I@Z ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::at
; Function compile flags: /Ogty
;	COMDAT ?at@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAUtagTCASHITMSALE@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
?at@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAUtagTCASHITMSALE@@I@Z PROC NEAR ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::at, COMDAT
; _this$ = ecx

; 543  : 		if (size() <= _Pos)

  00000	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00003	85 d2		 test	 edx, edx
  00005	56		 push	 esi
  00006	74 10		 je	 SHORT $L139186
  00008	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  0000b	8b 74 24 08	 mov	 esi, DWORD PTR __Pos$[esp]
  0000f	2b c2		 sub	 eax, edx
  00011	c1 f8 02	 sar	 eax, 2
  00014	3b c6		 cmp	 eax, esi
  00016	77 05		 ja	 SHORT $L134818
$L139186:

; 544  : 			_Xran();

  00018	e8 00 00 00 00	 call	 ?_Xran@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@IBEXXZ ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::_Xran
$L139188:
$L134818:

; 545  : 		return (*(begin() + _Pos));

  0001d	8d 04 b2	 lea	 eax, DWORD PTR [edx+esi*4]
  00020	5e		 pop	 esi

; 546  : 		}

  00021	c2 04 00	 ret	 4
$L139187:
?at@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@QAEAAUtagTCASHITMSALE@@I@Z ENDP ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::at
_TEXT	ENDS
PUBLIC	?SendDM_CASHITEMSALE_REQ@CTWorldSvrModule@@QAEXKGPAV?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@@Z ; CTWorldSvrModule::SendDM_CASHITEMSALE_REQ
;	COMDAT xdata$x
xdata$x	SEGMENT
$T139364 DD	0ffffffffH
	DD	FLAT:$L139196
$T139355 DD	019930520H
	DD	01H
	DD	FLAT:$T139364
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tworldsvr\dmsender.cpp
xdata$x	ENDS
;	COMDAT ?SendDM_CASHITEMSALE_REQ@CTWorldSvrModule@@QAEXKGPAV?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T139193 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwIndex$ = 8						; size = 4
_wValue$ = 12						; size = 2
_vSALEITEM$ = 16					; size = 4
?SendDM_CASHITEMSALE_REQ@CTWorldSvrModule@@QAEXKGPAV?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@@Z PROC NEAR ; CTWorldSvrModule::SendDM_CASHITEMSALE_REQ, COMDAT
; _this$ = ecx

; 339  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendDM_CASHITEMSALE_REQ@CTWorldSvrModule@@QAEXKGPAV?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi

; 340  : 	LPPACKETBUF pMSG = new PACKETBUF();

  0001c	6a 20		 push	 32			; 00000020H
  0001e	89 4c 24 14	 mov	 DWORD PTR _this$[esp+40], ecx
  00022	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00027	8b f0		 mov	 esi, eax
  00029	83 c4 04	 add	 esp, 4
  0002c	89 74 24 14	 mov	 DWORD PTR $T139193[esp+36], esi
  00030	85 f6		 test	 esi, esi
  00032	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+44], 0
  0003a	74 12		 je	 SHORT $L139194
  0003c	8d 4e 04	 lea	 ecx, DWORD PTR [esi+4]
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
  0004a	8b de		 mov	 ebx, esi
  0004c	eb 02		 jmp	 SHORT $L139195
$L139194:
  0004e	33 db		 xor	 ebx, ebx
$L139195:

; 341  : 	pMSG->m_packet.SetID(DM_CASHITEMSALE_REQ)
; 342  : 		<< dwIndex
; 343  : 		<< wValue
; 344  : 		<< (WORD)vSALEITEM->size();

  00050	8b 7c 24 30	 mov	 edi, DWORD PTR _vSALEITEM$[esp+32]
  00054	8b 4f 04	 mov	 ecx, DWORD PTR [edi+4]
  00057	85 c9		 test	 ecx, ecx
  00059	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00061	75 04		 jne	 SHORT $L139206
  00063	33 c0		 xor	 eax, eax
  00065	eb 08		 jmp	 SHORT $L139207
$L139206:
  00067	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  0006a	2b c1		 sub	 eax, ecx
  0006c	c1 f8 02	 sar	 eax, 2
$L139207:
  0006f	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwIndex$[esp+32]
  00073	50		 push	 eax
  00074	8b 44 24 30	 mov	 eax, DWORD PTR _wValue$[esp+36]
  00078	50		 push	 eax
  00079	51		 push	 ecx
  0007a	8d 6b 04	 lea	 ebp, DWORD PTR [ebx+4]
  0007d	68 8a 90 00 00	 push	 37002			; 0000908aH
  00082	8b cd		 mov	 ecx, ebp
  00084	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00097	8b c8		 mov	 ecx, eax
  00099	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 345  : 		
; 346  : 	for(WORD i = 0; i < (WORD)vSALEITEM->size(); i++)

  0009e	33 f6		 xor	 esi, esi
$L134420:
  000a0	8b 57 04	 mov	 edx, DWORD PTR [edi+4]
  000a3	85 d2		 test	 edx, edx
  000a5	74 38		 je	 SHORT $L134422
  000a7	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  000aa	2b c2		 sub	 eax, edx
  000ac	c1 f8 02	 sar	 eax, 2
  000af	66 3b f0	 cmp	 si, ax
  000b2	73 2b		 jae	 SHORT $L134422

; 347  : 	{
; 348  : 		pMSG->m_packet
; 349  : 			<< vSALEITEM->at(i).m_wID
; 350  : 			<< vSALEITEM->at(i).m_bSaleValue;

  000b4	0f b7 ce	 movzx	 ecx, si
  000b7	3b c1		 cmp	 eax, ecx
  000b9	76 1d		 jbe	 SHORT $L139357
  000bb	33 c0		 xor	 eax, eax
  000bd	8a 44 8a 02	 mov	 al, BYTE PTR [edx+ecx*4+2]
  000c1	0f b7 0c 8a	 movzx	 ecx, WORD PTR [edx+ecx*4]
  000c5	50		 push	 eax
  000c6	51		 push	 ecx
  000c7	8b cd		 mov	 ecx, ebp
  000c9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000ce	8b c8		 mov	 ecx, eax
  000d0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000d5	46		 inc	 esi
  000d6	eb c8		 jmp	 SHORT $L134420
$L139357:
  000d8	8b cf		 mov	 ecx, edi
  000da	e8 00 00 00 00	 call	 ?_Xran@?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@IBEXXZ ; std::vector<tagTCASHITMSALE,std::allocator<tagTCASHITMSALE> >::_Xran
$L139365:
$L134422:

; 351  : 	}
; 352  : 
; 353  : 	SayToDB(pMSG);

  000df	8b 4c 24 10	 mov	 ecx, DWORD PTR _this$[esp+36]
  000e3	53		 push	 ebx
  000e4	e8 00 00 00 00	 call	 ?SayToDB@CTWorldSvrModule@@IAEXPAUtagPACKETBUF@@@Z ; CTWorldSvrModule::SayToDB

; 354  : }

  000e9	8b 4c 24 18	 mov	 ecx, DWORD PTR __$EHRec$[esp+36]
  000ed	5f		 pop	 edi
  000ee	5e		 pop	 esi
  000ef	5d		 pop	 ebp
  000f0	5b		 pop	 ebx
  000f1	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000f8	83 c4 14	 add	 esp, 20			; 00000014H
  000fb	c2 0c 00	 ret	 12			; 0000000cH
$L139363:
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L139196:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T139193[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendDM_CASHITEMSALE_REQ@CTWorldSvrModule@@QAEXKGPAV?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T139355
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendDM_CASHITEMSALE_REQ@CTWorldSvrModule@@QAEXKGPAV?$vector@UtagTCASHITMSALE@@V?$allocator@UtagTCASHITMSALE@@@std@@@std@@@Z ENDP ; CTWorldSvrModule::SendDM_CASHITEMSALE_REQ
END
