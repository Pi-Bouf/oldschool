; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\CSSender.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?SendCT_SERVICEMONITOR_REQ@CTUser@@QAEXKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCS_LOGIN_ACK@CTUser@@QAEXEKKKKGEEK_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCS_TESTVERSION_ACK@CTUser@@QAEXG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCS_CREATECHAR_ACK@CTUser@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEEEEEEE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCS_DELCHAR_ACK@CTUser@@QAEXEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCS_START_ACK@CTUser@@QAEXEKGE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCS_HOTSEND_ACK@CTUser@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@GIG@std@@YAXPAGIABGAAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagTCASHITEMSALE@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagTCASHITEMSALE@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagTCASHITEMSALE@@IU1@V?$allocator@UtagTCASHITEMSALE@@@std@@@std@@YAXPAUtagTCASHITEMSALE@@IABU1@AAV?$allocator@UtagTCASHITEMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagMONREGEN@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagMONREGEN@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagMONREGEN@@IU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@IABU1@AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Ptr_cat@PAUtagLOTTERY@@PAU1@@std@@YA?AU_Nonscalar_ptr_iterator_tag@0@AAPAUtagLOTTERY@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_fill_n@PAUtagLOTTERY@@IU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@IABU1@AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@GV?$allocator@G@std@@@std@@YAXPAG0AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAGPAGV?$allocator@G@std@@@std@@YAPAGPAG00AAV?$allocator@G@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAGPAG@std@@YAPAGPAG00U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagTCASHITEMSALE@@V?$allocator@UtagTCASHITEMSALE@@@std@@@std@@YAXPAUtagTCASHITEMSALE@@0AAV?$allocator@UtagTCASHITEMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagTCASHITEMSALE@@PAU1@V?$allocator@UtagTCASHITEMSALE@@@std@@@std@@YAPAUtagTCASHITEMSALE@@PAU1@00AAV?$allocator@UtagTCASHITEMSALE@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagTCASHITEMSALE@@PAU1@@std@@YAPAUtagTCASHITEMSALE@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagMONREGEN@@V?$allocator@UtagMONREGEN@@@std@@@std@@YAXPAUtagMONREGEN@@0AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagMONREGEN@@PAU1@@std@@YAPAUtagMONREGEN@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy_range@UtagLOTTERY@@V?$allocator@UtagLOTTERY@@@std@@@std@@YAXPAUtagLOTTERY@@0AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninitialized_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Copy_backward_opt@PAUtagLOTTERY@@PAU1@@std@@YAPAUtagLOTTERY@@PAU1@00U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagTCASHITEMSALE@@@std@@QAEXPAUtagTCASHITEMSALE@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagTCASHITEMSALE@@@std@@QAEXPAUtagTCASHITEMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagMONREGEN@@@std@@QAEXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?construct@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@ABU3@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?destroy@?$allocator@UtagLOTTERY@@@std@@QAEXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$fill_n@PAGIG@std@@YAXPAGIABG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@GG@std@@YAPAGPAG00AAV?$allocator@G@0@U_Scalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagTCASHITEMSALE@@PAU1@V?$allocator@UtagTCASHITEMSALE@@@std@@@std@@YAPAUtagTCASHITEMSALE@@PAU1@00AAV?$allocator@UtagTCASHITEMSALE@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagMONREGEN@@PAU1@V?$allocator@UtagMONREGEN@@@std@@@std@@YAPAUtagMONREGEN@@PAU1@00AAV?$allocator@UtagMONREGEN@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Uninit_copy@PAUtagLOTTERY@@PAU1@V?$allocator@UtagLOTTERY@@@std@@@std@@YAPAUtagLOTTERY@@PAU1@00AAV?$allocator@UtagLOTTERY@@@0@U_Nonscalar_ptr_iterator_tag@0@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagTCASHITEMSALE@@U1@@std@@YAXPAUtagTCASHITEMSALE@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagTCASHITEMSALE@@@std@@YAXPAUtagTCASHITEMSALE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagMONREGEN@@U1@@std@@YAXPAUtagMONREGEN@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagMONREGEN@@@std@@YAXPAUtagMONREGEN@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Construct@UtagLOTTERY@@U1@@std@@YAXPAUtagLOTTERY@@ABU1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$_Destroy@UtagLOTTERY@@@std@@YAXPAUtagLOTTERY@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Ptr_cat@std@@YA?AU_Scalar_ptr_iterator_tag@1@PAG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?SendCT_SERVICEMONITOR_REQ@CTUser@@QAEXKKKK@Z	; CTUser::SendCT_SERVICEMONITOR_REQ
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
EXTRN	??0CPacket@@QAE@XZ:NEAR				; CPacket::CPacket
EXTRN	?SetID@CPacket@@QAEAAV1@G@Z:NEAR		; CPacket::SetID
EXTRN	??6CPacket@@QAEAAV0@K@Z:NEAR			; CPacket::operator<<
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tloginsvr\cssender.cpp
xdata$x	SEGMENT
$T105443 DD	0ffffffffH
	DD	FLAT:$L105434
$T105438 DD	019930520H
	DD	01H
	DD	FLAT:$T105443
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendCT_SERVICEMONITOR_REQ@CTUser@@QAEXKKKK@Z
_TEXT	SEGMENT
$T105431 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwTick$ = 8						; size = 4
_dwSession$ = 12					; size = 4
_dwUser$ = 16						; size = 4
_dwActiveUser$ = 20					; size = 4
?SendCT_SERVICEMONITOR_REQ@CTUser@@QAEXKKKK@Z PROC NEAR	; CTUser::SendCT_SERVICEMONITOR_REQ, COMDAT
; _this$ = ecx

; 7    : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCT_SERVICEMONITOR_REQ@CTUser@@QAEXKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 8    : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T105431[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L105433
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L105433:

; 9    : 
; 10   : 	pMSG->SetID(CT_SERVICEMONITOR_REQ)
; 11   : 		<< dwTick
; 12   : 		<< dwSession
; 13   : 		<< dwUser
; 14   : 		<< dwActiveUser;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _dwActiveUser$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwUser$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwSession$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwTick$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 1d 60 00 00	 push	 24605			; 0000601dH
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 15   : 
; 16   : 	Say(pMSG);

  0007f	8b 17		 mov	 edx, DWORD PTR [edi]
  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	ff 12		 call	 DWORD PTR [edx]

; 17   : }

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00093	83 c4 10	 add	 esp, 16			; 00000010H
  00096	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L105434:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T105431[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendCT_SERVICEMONITOR_REQ@CTUser@@QAEXKKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T105438
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCT_SERVICEMONITOR_REQ@CTUser@@QAEXKKKK@Z ENDP	; CTUser::SendCT_SERVICEMONITOR_REQ
PUBLIC	?SendCS_LOGIN_ACK@CTUser@@QAEXEKKKKGEEK_J@Z	; CTUser::SendCS_LOGIN_ACK
EXTRN	??6CPacket@@QAEAAV0@G@Z:NEAR			; CPacket::operator<<
EXTRN	??6CPacket@@QAEAAV0@E@Z:NEAR			; CPacket::operator<<
EXTRN	??6CPacket@@QAEAAV0@_J@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
xdata$x	SEGMENT
$T105458 DD	0ffffffffH
	DD	FLAT:$L105454
$T105456 DD	019930520H
	DD	01H
	DD	FLAT:$T105458
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendCS_LOGIN_ACK@CTUser@@QAEXEKKKKGEEK_J@Z
_TEXT	SEGMENT
$T105451 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bResult$ = 8						; size = 1
_dwUserID$ = 12						; size = 4
_dwCharID$ = 16						; size = 4
_dwKEY$ = 20						; size = 4
_dwIPAddr$ = 24						; size = 4
_wPort$ = 28						; size = 2
_bCreateCnt$ = 32					; size = 1
_bInPcBang$ = 36					; size = 1
_dwPremium$ = 40					; size = 4
_dCurTime$ = 44						; size = 8
?SendCS_LOGIN_ACK@CTUser@@QAEXEKKKKGEEK_J@Z PROC NEAR	; CTUser::SendCS_LOGIN_ACK, COMDAT
; _this$ = ecx

; 29   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCS_LOGIN_ACK@CTUser@@QAEXEKKKKGEEK_J@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 30   : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f1		 mov	 esi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T105451[esp+24], eax
  00028	33 ff		 xor	 edi, edi
  0002a	3b c7		 cmp	 eax, edi
  0002c	89 7c 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], edi
  00030	74 09		 je	 SHORT $L105453
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f8		 mov	 edi, eax
$L105453:

; 31   : 
; 32   : 	pMSG->SetID(CS_LOGIN_ACK)
; 33   : 		<< bResult
; 34   : 		<< dwUserID
; 35   : 		<< dwCharID
; 36   : 		<< dwKEY
; 37   : 		<< dwIPAddr
; 38   : 		<< wPort
; 39   : 		<< bCreateCnt
; 40   : 		<< bInPcBang
; 41   : 		<< dwPremium
; 42   : 		<< dCurTime
; 43   : 		<< m_dlCheckKey;

  0003b	8b 86 14 01 01
	00		 mov	 eax, DWORD PTR [esi+65812]
  00041	8b 8e 10 01 01
	00		 mov	 ecx, DWORD PTR [esi+65808]
  00047	8b 54 24 44	 mov	 edx, DWORD PTR _dCurTime$[esp+24]
  0004b	50		 push	 eax
  0004c	8b 44 24 44	 mov	 eax, DWORD PTR _dCurTime$[esp+24]
  00050	51		 push	 ecx
  00051	8b 4c 24 44	 mov	 ecx, DWORD PTR _dwPremium$[esp+28]
  00055	52		 push	 edx
  00056	8b 54 24 44	 mov	 edx, DWORD PTR _bInPcBang$[esp+32]
  0005a	50		 push	 eax
  0005b	8b 44 24 44	 mov	 eax, DWORD PTR _bCreateCnt$[esp+36]
  0005f	51		 push	 ecx
  00060	8b 4c 24 44	 mov	 ecx, DWORD PTR _wPort$[esp+40]
  00064	52		 push	 edx
  00065	8b 54 24 44	 mov	 edx, DWORD PTR _dwIPAddr$[esp+44]
  00069	50		 push	 eax
  0006a	8b 44 24 44	 mov	 eax, DWORD PTR _dwKEY$[esp+48]
  0006e	51		 push	 ecx
  0006f	8b 4c 24 44	 mov	 ecx, DWORD PTR _dwCharID$[esp+52]
  00073	52		 push	 edx
  00074	8b 54 24 44	 mov	 edx, DWORD PTR _dwUserID$[esp+56]
  00078	50		 push	 eax
  00079	8b 44 24 44	 mov	 eax, DWORD PTR _bResult$[esp+60]
  0007d	51		 push	 ecx
  0007e	52		 push	 edx
  0007f	50		 push	 eax
  00080	68 02 40 00 00	 push	 16386			; 00004002H
  00085	8b cf		 mov	 ecx, edi
  00087	c7 44 24 4c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+88], -1
  0008f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00094	8b c8		 mov	 ecx, eax
  00096	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0009b	8b c8		 mov	 ecx, eax
  0009d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a2	8b c8		 mov	 ecx, eax
  000a4	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a9	8b c8		 mov	 ecx, eax
  000ab	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b0	8b c8		 mov	 ecx, eax
  000b2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000b7	8b c8		 mov	 ecx, eax
  000b9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000be	8b c8		 mov	 ecx, eax
  000c0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c5	8b c8		 mov	 ecx, eax
  000c7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000cc	8b c8		 mov	 ecx, eax
  000ce	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000d3	8b c8		 mov	 ecx, eax
  000d5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  000da	8b c8		 mov	 ecx, eax
  000dc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<

; 44   : 
; 45   : 	Say(pMSG);

  000e1	8b 16		 mov	 edx, DWORD PTR [esi]
  000e3	57		 push	 edi
  000e4	8b ce		 mov	 ecx, esi
  000e6	ff 12		 call	 DWORD PTR [edx]

; 46   : }

  000e8	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000ec	5f		 pop	 edi
  000ed	5e		 pop	 esi
  000ee	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000f5	83 c4 10	 add	 esp, 16			; 00000010H
  000f8	c2 2c 00	 ret	 44			; 0000002cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L105454:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T105451[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendCS_LOGIN_ACK@CTUser@@QAEXEKKKKGEEK_J@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T105456
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCS_LOGIN_ACK@CTUser@@QAEXEKKKKGEEK_J@Z ENDP	; CTUser::SendCS_LOGIN_ACK
PUBLIC	?SendCS_TESTVERSION_ACK@CTUser@@QAEXG@Z		; CTUser::SendCS_TESTVERSION_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T105472 DD	0ffffffffH
	DD	FLAT:$L105468
$T105470 DD	019930520H
	DD	01H
	DD	FLAT:$T105472
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendCS_TESTVERSION_ACK@CTUser@@QAEXG@Z
_TEXT	SEGMENT
$T105465 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wVersion$ = 8						; size = 2
?SendCS_TESTVERSION_ACK@CTUser@@QAEXG@Z PROC NEAR	; CTUser::SendCS_TESTVERSION_ACK, COMDAT
; _this$ = ecx

; 50   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCS_TESTVERSION_ACK@CTUser@@QAEXG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 51   : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T105465[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L105467
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L105467:

; 52   : 
; 53   : 	pMSG->SetID(CS_TESTVERSION_ACK)
; 54   : 		<< wVersion;

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _wVersion$[esp+20]
  0003f	50		 push	 eax
  00040	68 12 40 00 00	 push	 16402			; 00004012H
  00045	8b ce		 mov	 ecx, esi
  00047	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  0004f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00054	8b c8		 mov	 ecx, eax
  00056	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 55   : 
; 56   : 	Say(pMSG);

  0005b	8b 17		 mov	 edx, DWORD PTR [edi]
  0005d	56		 push	 esi
  0005e	8b cf		 mov	 ecx, edi
  00060	ff 12		 call	 DWORD PTR [edx]

; 57   : }

  00062	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0006f	83 c4 10	 add	 esp, 16			; 00000010H
  00072	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L105468:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T105465[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendCS_TESTVERSION_ACK@CTUser@@QAEXG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T105470
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCS_TESTVERSION_ACK@CTUser@@QAEXG@Z ENDP		; CTUser::SendCS_TESTVERSION_ACK
PUBLIC	?SendCS_DELCHAR_ACK@CTUser@@QAEXEK@Z		; CTUser::SendCS_DELCHAR_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T105486 DD	0ffffffffH
	DD	FLAT:$L105482
$T105484 DD	019930520H
	DD	01H
	DD	FLAT:$T105486
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendCS_DELCHAR_ACK@CTUser@@QAEXEK@Z
_TEXT	SEGMENT
$T105479 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bResult$ = 8						; size = 1
_dwCharID$ = 12						; size = 4
?SendCS_DELCHAR_ACK@CTUser@@QAEXEK@Z PROC NEAR		; CTUser::SendCS_DELCHAR_ACK, COMDAT
; _this$ = ecx

; 99   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCS_DELCHAR_ACK@CTUser@@QAEXEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 100  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T105479[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L105481
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L105481:

; 101  : 
; 102  : 	pMSG->SetID(CS_DELCHAR_ACK)
; 103  : 		<< bResult
; 104  : 		<< dwCharID;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwCharID$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _bResult$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 0c 40 00 00	 push	 16396			; 0000400cH
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 105  : 
; 106  : 	Say(pMSG);

  00067	8b 17		 mov	 edx, DWORD PTR [edi]
  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	ff 12		 call	 DWORD PTR [edx]

; 107  : }

  0006e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L105482:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T105479[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendCS_DELCHAR_ACK@CTUser@@QAEXEK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T105484
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCS_DELCHAR_ACK@CTUser@@QAEXEK@Z ENDP		; CTUser::SendCS_DELCHAR_ACK
PUBLIC	?SendCS_START_ACK@CTUser@@QAEXEKGE@Z		; CTUser::SendCS_START_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T105500 DD	0ffffffffH
	DD	FLAT:$L105496
$T105498 DD	019930520H
	DD	01H
	DD	FLAT:$T105500
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendCS_START_ACK@CTUser@@QAEXEKGE@Z
_TEXT	SEGMENT
$T105493 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bResult$ = 8						; size = 1
_dwMapIP$ = 12						; size = 4
_wPort$ = 16						; size = 2
_bServerID$ = 20					; size = 1
?SendCS_START_ACK@CTUser@@QAEXEKGE@Z PROC NEAR		; CTUser::SendCS_START_ACK, COMDAT
; _this$ = ecx

; 113  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCS_START_ACK@CTUser@@QAEXEKGE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 114  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T105493[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L105495
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L105495:

; 115  : 
; 116  : 	pMSG->SetID(CS_START_ACK)
; 117  : 		<< bResult
; 118  : 		<< dwMapIP
; 119  : 		<< wPort
; 120  : 		<< bServerID;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _bServerID$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _wPort$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwMapIP$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _bResult$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 0e 40 00 00	 push	 16398			; 0000400eH
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 121  : 
; 122  : 	Say(pMSG);

  0007f	8b 17		 mov	 edx, DWORD PTR [edi]
  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	ff 12		 call	 DWORD PTR [edx]

; 123  : }

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00093	83 c4 10	 add	 esp, 16			; 00000010H
  00096	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L105496:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T105493[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendCS_START_ACK@CTUser@@QAEXEKGE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T105498
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCS_START_ACK@CTUser@@QAEXEKGE@Z ENDP		; CTUser::SendCS_START_ACK
PUBLIC	?SendCS_HOTSEND_ACK@CTUser@@QAEXXZ		; CTUser::SendCS_HOTSEND_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T105514 DD	0ffffffffH
	DD	FLAT:$L105510
$T105512 DD	019930520H
	DD	01H
	DD	FLAT:$T105514
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendCS_HOTSEND_ACK@CTUser@@QAEXXZ
_TEXT	SEGMENT
$T105507 = -16						; size = 4
__$EHRec$ = -12						; size = 12
?SendCS_HOTSEND_ACK@CTUser@@QAEXXZ PROC NEAR		; CTUser::SendCS_HOTSEND_ACK, COMDAT
; _this$ = ecx

; 126  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCS_HOTSEND_ACK@CTUser@@QAEXXZ
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 127  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T105507[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L105509
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L105509:

; 128  : 
; 129  : 	pMSG->SetID(CS_HOTSEND_ACK);

  0003b	68 15 40 00 00	 push	 16405			; 00004015H
  00040	8b ce		 mov	 ecx, esi
  00042	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0004a	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 130  : 
; 131  : 	Say(pMSG);

  0004f	8b 07		 mov	 eax, DWORD PTR [edi]
  00051	56		 push	 esi
  00052	8b cf		 mov	 ecx, edi
  00054	ff 10		 call	 DWORD PTR [eax]

; 132  : }

  00056	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0005a	5f		 pop	 edi
  0005b	5e		 pop	 esi
  0005c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00063	83 c4 10	 add	 esp, 16			; 00000010H
  00066	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L105510:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T105507[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendCS_HOTSEND_ACK@CTUser@@QAEXXZ:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T105512
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCS_HOTSEND_ACK@CTUser@@QAEXXZ ENDP			; CTUser::SendCS_HOTSEND_ACK
PUBLIC	?Release@CStringData@ATL@@QAEXXZ		; ATL::CStringData::Release
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
?Release@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::Release, COMDAT
; _this$ = ecx

; 93   : 		ATLASSERT( nRefs != 0 );
; 94   : 
; 95   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

  00000	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  00003	83 ca ff	 or	 edx, -1
  00006	f0 0f c1 10	 lock	  xadd	 DWORD PTR [eax], edx
  0000a	4a		 dec	 edx
  0000b	85 d2		 test	 edx, edx
  0000d	7f 0a		 jg	 SHORT $L73499

; 96   : 		{
; 97   : 			pStringMgr->Free( this );

  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	8b 10		 mov	 edx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	8b c8		 mov	 ecx, eax
  00016	ff 52 04	 call	 DWORD PTR [edx+4]
$L73499:

; 98   : 		}
; 99   : 	}

  00019	c3		 ret	 0
?Release@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::Release
_TEXT	ENDS
PUBLIC	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ		; ATL::CSimpleStringT<char,0>::operator char const *
; Function compile flags: /Ogty
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::operator char const *, COMDAT
; _this$ = ecx

; 379  : 		return( m_pszData );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 380  : 	}

  00002	c3		 ret	 0
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP		; ATL::CSimpleStringT<char,0>::operator char const *
_TEXT	ENDS
PUBLIC	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
; Function compile flags: /Ogty
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetData, COMDAT
; _this$ = ecx

; 731  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 732  : 	}

  00005	c3		 ret	 0
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ENDP ; ATL::CSimpleStringT<char,0>::GetData
_TEXT	ENDS
PUBLIC	??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
; Function compile flags: /Ogty
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ PROC NEAR		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 263  : 		CStringData* pData = GetData();

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 264  : 		pData->Release();

  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L105535
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L105535:

; 265  : 	}

  0001c	c3		 ret	 0
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ ENDP		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 963  : 	}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H
  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L105552
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L105552:
  0001c	c3		 ret	 0
??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	?SendCS_CREATECHAR_ACK@CTUser@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEEEEEEE@Z ; CTUser::SendCS_CREATECHAR_ACK
EXTRN	??6CPacket@@QAEAAV0@PBD@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T105597 DD	0ffffffffH
	DD	FLAT:$L105562
	DD	00H
	DD	FLAT:$L105563
$T105595 DD	019930520H
	DD	02H
	DD	FLAT:$T105597
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tloginsvr\cssender.cpp
xdata$x	ENDS
;	COMDAT ?SendCS_CREATECHAR_ACK@CTUser@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEEEEEEE@Z
_TEXT	SEGMENT
$T105559 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bResult$ = 8						; size = 1
_dwID$ = 12						; size = 4
_strNAME$ = 16						; size = 4
_bSlotID$ = 20						; size = 1
_bClass$ = 24						; size = 1
_bRace$ = 28						; size = 1
_bCountry$ = 32						; size = 1
_bSex$ = 36						; size = 1
_bHair$ = 40						; size = 1
_bFace$ = 44						; size = 1
_bBody$ = 48						; size = 1
_bPants$ = 52						; size = 1
_bHand$ = 56						; size = 1
_bFoot$ = 60						; size = 1
_bCreateCnt$ = 64					; size = 1
?SendCS_CREATECHAR_ACK@CTUser@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEEEEEEE@Z PROC NEAR ; CTUser::SendCS_CREATECHAR_ACK, COMDAT
; _this$ = ecx

; 74   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCS_CREATECHAR_ACK@CTUser@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEEEEEEE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	56		 push	 esi
  00018	57		 push	 edi
  00019	8b f9		 mov	 edi, ecx
  0001b	33 db		 xor	 ebx, ebx

; 75   : 	CPacket *pMSG = new CPacket();

  0001d	6a 1c		 push	 28			; 0000001cH
  0001f	89 5c 24 1c	 mov	 DWORD PTR __$EHRec$[esp+40], ebx
  00023	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00028	83 c4 04	 add	 esp, 4
  0002b	89 44 24 0c	 mov	 DWORD PTR $T105559[esp+28], eax
  0002f	3b c3		 cmp	 eax, ebx
  00031	c6 44 24 18 01	 mov	 BYTE PTR __$EHRec$[esp+36], 1
  00036	74 0b		 je	 SHORT $L105560
  00038	8b c8		 mov	 ecx, eax
  0003a	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003f	8b f0		 mov	 esi, eax
  00041	eb 02		 jmp	 SHORT $L105561
$L105560:
  00043	33 f6		 xor	 esi, esi
$L105561:

; 76   : 
; 77   : 	pMSG->SetID(CS_CREATECHAR_ACK)
; 78   : 		<< bResult
; 79   : 		<< dwID
; 80   : 		<< strNAME
; 81   : 		<< bSlotID
; 82   : 		<< bClass
; 83   : 		<< bRace
; 84   : 		<< bCountry
; 85   : 		<< bSex
; 86   : 		<< bHair
; 87   : 		<< bFace
; 88   : 		<< bBody
; 89   : 		<< bPants
; 90   : 		<< bHand
; 91   : 		<< bFoot
; 92   : 		<< bCreateCnt;

  00045	8b 44 24 58	 mov	 eax, DWORD PTR _bCreateCnt$[esp+24]
  00049	8b 4c 24 54	 mov	 ecx, DWORD PTR _bFoot$[esp+24]
  0004d	8b 54 24 50	 mov	 edx, DWORD PTR _bHand$[esp+24]
  00051	50		 push	 eax
  00052	8b 44 24 50	 mov	 eax, DWORD PTR _bPants$[esp+28]
  00056	51		 push	 ecx
  00057	8b 4c 24 50	 mov	 ecx, DWORD PTR _bBody$[esp+32]
  0005b	52		 push	 edx
  0005c	8b 54 24 50	 mov	 edx, DWORD PTR _bFace$[esp+36]
  00060	50		 push	 eax
  00061	8b 44 24 50	 mov	 eax, DWORD PTR _bHair$[esp+40]
  00065	51		 push	 ecx
  00066	8b 4c 24 50	 mov	 ecx, DWORD PTR _bSex$[esp+44]
  0006a	52		 push	 edx
  0006b	8b 54 24 50	 mov	 edx, DWORD PTR _bCountry$[esp+48]
  0006f	50		 push	 eax
  00070	8b 44 24 50	 mov	 eax, DWORD PTR _bRace$[esp+52]
  00074	51		 push	 ecx
  00075	8b 4c 24 50	 mov	 ecx, DWORD PTR _bClass$[esp+56]
  00079	52		 push	 edx
  0007a	8b 54 24 50	 mov	 edx, DWORD PTR _bSlotID$[esp+60]
  0007e	50		 push	 eax
  0007f	8b 44 24 4c	 mov	 eax, DWORD PTR _dwID$[esp+64]
  00083	51		 push	 ecx
  00084	8b 4c 24 4c	 mov	 ecx, DWORD PTR _bResult$[esp+68]
  00088	52		 push	 edx
  00089	88 5c 24 48	 mov	 BYTE PTR __$EHRec$[esp+84], bl
  0008d	8b 5c 24 58	 mov	 ebx, DWORD PTR _strNAME$[esp+72]
  00091	53		 push	 ebx
  00092	50		 push	 eax
  00093	51		 push	 ecx
  00094	68 0a 40 00 00	 push	 16394			; 0000400aH
  00099	8b ce		 mov	 ecx, esi
  0009b	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a7	8b c8		 mov	 ecx, eax
  000a9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ae	8b c8		 mov	 ecx, eax
  000b0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000b5	8b c8		 mov	 ecx, eax
  000b7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000bc	8b c8		 mov	 ecx, eax
  000be	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000c3	8b c8		 mov	 ecx, eax
  000c5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ca	8b c8		 mov	 ecx, eax
  000cc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000d1	8b c8		 mov	 ecx, eax
  000d3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000d8	8b c8		 mov	 ecx, eax
  000da	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000df	8b c8		 mov	 ecx, eax
  000e1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000e6	8b c8		 mov	 ecx, eax
  000e8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000ed	8b c8		 mov	 ecx, eax
  000ef	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000f4	8b c8		 mov	 ecx, eax
  000f6	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000fb	8b c8		 mov	 ecx, eax
  000fd	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00102	8b c8		 mov	 ecx, eax
  00104	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 93   : 
; 94   : 	Say(pMSG);

  00109	8b 17		 mov	 edx, DWORD PTR [edi]
  0010b	56		 push	 esi
  0010c	8b cf		 mov	 ecx, edi
  0010e	ff 12		 call	 DWORD PTR [edx]

; 95   : }

  00110	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  00113	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0011b	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0011e	83 ca ff	 or	 edx, -1
  00121	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00125	4a		 dec	 edx
  00126	85 d2		 test	 edx, edx
  00128	5f		 pop	 edi
  00129	5e		 pop	 esi
  0012a	5b		 pop	 ebx
  0012b	7f 08		 jg	 SHORT $L105590
  0012d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00131	50		 push	 eax
  00132	ff 52 04	 call	 DWORD PTR [edx+4]
$L105590:
  00135	8b 4c 24 04	 mov	 ecx, DWORD PTR __$EHRec$[esp+16]
  00139	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00140	83 c4 10	 add	 esp, 16			; 00000010H
  00143	c2 3c 00	 ret	 60			; 0000003cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L105562:
  00000	8d 4d 0c	 lea	 ecx, DWORD PTR _strNAME$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L105563:
  00008	8b 45 f0	 mov	 eax, DWORD PTR $T105559[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendCS_CREATECHAR_ACK@CTUser@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEEEEEEE@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T105595
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCS_CREATECHAR_ACK@CTUser@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@EEEEEEEEEEEE@Z ENDP ; CTUser::SendCS_CREATECHAR_ACK
END
