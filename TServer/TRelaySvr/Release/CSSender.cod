; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\CSSender.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_1EO@OEOIKMPM@?$AA?$HL?$AA3?$AA9?$AA1?$AAA?$AA2?$AA5?$AA8?$AA3?$AA?9?$AA6?$AAA?$AA4?$AA2?$AA?9?$AA4?$AA9?$AA1?$AA5?$AA?9@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0CH@GGFNHEJM@?$HL391A2583?96A42?94915?9BE88?90CCE50B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0N@OGFEPDED@LocalService?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_02CCDHMLDD@?9?1?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@MIGBKCMN@UnregServer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09LJBJJPCG@RegServer?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07LMLHFMEG@Service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07PNHNHBAB@Install?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09LAEJNBCE@UnInstall?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04FABLJDN@Name?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@DBFDLFJJ@?$CFs?5?9Name?5?$CFs?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BP@GECJKCAK@Could?5not?5open?5Service?5Manager?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06HCEGMCNE@RPCSS?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BI@HDJFCBEP@Could?5not?5start?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@JMOCNDDL@Could?5not?5open?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BH@GKJBBOLK@Could?5not?5stop?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BJ@NMBIIKKI@Could?5not?5delete?5service?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?GetAppId@CTRelaySvrModule@@SAPBGXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetAppIdT@CTRelaySvrModule@@SAPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UpdateRegistryAppId@CTRelaySvrModule@@SGJH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterAppId@CTRelaySvrModule@@QAEJ_N@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Install@CTRelaySvrModule@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCT_SERVICEMONITOR_REQ@CTPlayer@@QAEXKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCT_CHATBAN_ACK@CTPlayer@@QAEXEK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCS_RELAYCHARDATA_ACK@CTPlayer@@QAEXE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCS_CHAT_ACK@CTPlayer@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCS_SYSTEMMSG_ACK@CTPlayer@@QAEXEGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EE0E@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RelayCorpsMsg@CTPlayer@@QAEXPAVCPacket@@G@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCS_CORPSCMD_ACK@CTPlayer@@QAEXGKGEKEGG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Tokenize@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBE?AV12@PBDAAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAAXPBDZZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterAppId@?$CAtlServiceModuleT@VCTRelaySvrModule@@$0GE@@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsInstalled@?$CAtlServiceModuleT@VCTRelaySvrModule@@$0GE@@ATL@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Uninstall@?$CAtlServiceModuleT@VCTRelaySvrModule@@$0GE@@ATL@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlExeModuleT@VCTRelaySvrModule@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CAtlExeModuleT@VCTRelaySvrModule@@@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterServer@?$CAtlModuleT@VCTRelaySvrModule@@@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UnregisterServer@?$CAtlModuleT@VCTRelaySvrModule@@@ATL@@QAEJHPBU_GUID@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddCommonRGSReplacements@?$CAtlModuleT@VCTRelaySvrModule@@@ATL@@UAEJPAUIRegistrarBase@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_G?$CAtlExeModuleT@VCTRelaySvrModule@@@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlModuleT@VCTRelaySvrModule@@@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Mid@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QBE?AV12@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FormatV@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEXPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetManager@?$CSimpleStringT@D$0A@@ATL@@QBEPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringSpanIncluding@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringSpanExcluding@?$ChTraitsCRT@D@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?UninitializeCom@?$CAtlExeModuleT@VCTRelaySvrModule@@@ATL@@SAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PBDHPAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetGITPtr@CAtlModule@ATL@@UAEJPAPAUIGlobalInterfaceTable@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __GUID_00000146_0000_0000_c000_000000000046
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT _CLSID_StdGlobalInterfaceTable
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?GetLockCount@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Increment@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetLength@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Empty@?$CSimpleStringT@D$0A@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CopyCharsOverlapped@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ReleaseBufferSetLength@?$CSimpleStringT@D$0A@@ATL@@QAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Format@?$ChTraitsCRT@D@ATL@@SAHPADPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBuffer@?$CSimpleStringT@D$0A@@ATL@@QAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite@?$CSimpleStringT@D$0A@@ATL@@AAEPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PrepareWrite2@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsShared@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fork@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Reallocate@?$CSimpleStringT@D$0A@@ATL@@AAEXH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetFormattedLength@?$ChTraitsCRT@D@ATL@@SAHPBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@PAUIAtlStringMgr@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CAtlModule@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Decrement@CComMultiThreadModel@ATL@@SGKPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Term@CAtlModule@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlCallTermFunc@ATL@@YGXPAU_ATL_MODULE70@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlRaiseException@ATL@@YAXKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Term@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@CAtlModule@ATL@@UAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetLength@?$CSimpleStringT@D$0A@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetString@?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CAtlException@ATL@@QAE@J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT __TI1?AVCAtlException@ATL@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CTA1?AVCAtlException@ATL@@
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT __CT??_R0?AVCAtlException@ATL@@@84
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??_R0?AVCAtlException@ATL@@@8
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlLoadString@ATL@@YAHIPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetDefaultManager@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUIAtlStringMgr@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CheckImplicitLoad@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@AAE_NPBX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindStringResourceInstance@?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@SAPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlFindStringResourceInstance@ATL@@YAPAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@IG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@PAUHRSRC__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?LoadStringA@?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEHPAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlGetStringResourceImage@ATL@@YAPBUATLSTRINGRESOURCEIMAGE@1@PAUHINSTANCE__@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBaseTypeLength@?$ChTraitsCRT@D@ATL@@SAHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetConversionACP@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ConvertToBaseType@?$ChTraitsCRT@D@ATL@@SAXPADHPBGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??4?$CSimpleStringT@D$0A@@ATL@@QAEAAV01@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetString@?$CSimpleStringT@D$0A@@ATL@@QAEXPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StringLength@?$CSimpleStringT@D$0A@@ATL@@SAHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WordCmpI@CAtlModule@ATL@@SAHPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindOneOf@CAtlModule@ATL@@SAPBDPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetStringValue@CRegKey@ATL@@QAEJPBD0K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteValue@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??BCRegKey@ATL@@QBEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBDPADKKPAU_SECURITY_ATTRIBUTES@@PAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CRegKey@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlHresultFromWin32@ATL@@YAJK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_05PDIKPLII@AppID?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegKey@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?UpdateRegistryFromResourceS@CAtlModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegObject@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IRegistrarBase@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0IUnknown@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CRegObject@ATL@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?QueryInterface@CRegObject@ATL@@UAGJABU_GUID@@PAPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddRef@CRegObject@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CRegObject@ATL@@UAGKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearReplacements@CRegObject@ATL@@UAGJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lock@CComFakeCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ClearReplacements@CExpansionVector@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSize@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetKeyAt@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetValueAt@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEAAPAGH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RemoveAll@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@CComFakeCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCRegObject@ATL@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CExpansionVector@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CExpansionVector@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CRegObject@ATL@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Free@CCRTAllocator@ATL@@SAXPAX@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetModuleInstance@CAtlBaseModule@ATL@@QAEPAUHINSTANCE__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlHresultFromLastError@ATL@@YAJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlA2WHelper@@YGPAGPAGPBDHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_AtlVerifyStackAvailable@_ATL_SAFE_ALLOCA_IMPL@ATL@@YA_NK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@CCRTAllocator@ATL@@SAPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@CAtlSafeAllocBufferNode@?$CAtlSafeAllocBufferManager@VCCRTAllocator@ATL@@@_ATL_SAFE_ALLOCA_IMPL@ATL@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EscapeSingleQuote@CAtlModule@ATL@@SAXPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocscpy@@YAPAGPAGPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ocslen@@YAHPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_1O@MNLDABAF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddReplacement@CRegObject@ATL@@UAGJPBG0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AtlW2AHelper@@YGPADPADPBGHI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@CExpansionVector@ATL@@QAEHPBDPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Add@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEHABQADABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InternalSetAtIndex@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAEXHABQADABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?2PAD@?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?3PAD@?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAXPAXPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$Wrapper@PAD@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?2PAG@?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAPAXIPAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??$?3PAG@?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@SAXPAXPAPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$Wrapper@PAG@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QAE@ABQAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_1BG@JBACFMF@?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AA_?$AAR?$AAa?$AAw?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_1BC@KAILKFFG@?$AAR?$AAE?$AAG?$AAI?$AAS?$AAT?$AAR?$AAY?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?ResourceRegister@CRegObject@ATL@@QAGJPBGI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterFromResource@CRegObject@ATL@@IAEJPBGPBD1H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CRegParser@ATL@@QAE@PAVCRegObject@1@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterBuffer@CRegParser@ATL@@QAEJPADH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?PreProcessBuffer@CRegParser@ATL@@QAEJPADPAPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0CParseBuffer@CRegParser@ATL@@QAE@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CParseBuffer@CRegParser@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StrChrA@CRegParser@ATL@@KAPADPADD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?StrFromMap@CRegObject@ATL@@QAEPBGPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Lookup@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEPAGABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FindKey@?$CSimpleMap@PADPAGVCExpansionVectorEqualHelper@ATL@@@ATL@@QBEHABQAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsEqualKey@CExpansionVectorEqualHelper@ATL@@SA_NQAD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddString@CParseBuffer@CRegParser@ATL@@QAEHPBG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Append@CParseBuffer@CRegParser@ATL@@QAEHPBDH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AddChar@CParseBuffer@CRegParser@ATL@@QAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CParseBuffer@CRegParser@ATL@@QAEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_04OHBKMIBJ@HKCR?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04KIFLFONO@HKCU?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04CBBMIBLK@HKLM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03DLBIJLAB@HKU?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04OFOCGAOH@HKPD?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04POMNGLEL@HKDD?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04LEMDOLAJ@HKCC?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@JBJOLKMF@HKEY_CLASSES_ROOT?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BC@GMMMKLBI@HKEY_CURRENT_USER?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BD@GIIFIKDM@HKEY_LOCAL_MACHINE?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0L@OEMMANAM@HKEY_USERS?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BG@IDBEHNDO@HKEY_PERFORMANCE_DATA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0O@MJDLIIGK@HKEY_DYN_DATA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BE@NLNNHLLF@HKEY_CURRENT_CONFIG?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?map@?2??HKeyFromString@CRegParser@ATL@@KAPAUHKEY__@@PAD@Z@4QBUkeymap@23@B
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?NextToken@CRegParser@ATL@@IAEJPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?EndOfVar@CRegParser@ATL@@IAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsSpace@CRegParser@ATL@@IAEHD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GenerateError@CRegParser@ATL@@IAEJI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RegisterSubkeys@CRegParser@ATL@@IAEJPADPAUHKEY__@@HH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_06JBKGCNBB@Delete?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03LAIAPFCB@Val?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PBDPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_01CPLAODJH@S?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01PLPBNMEI@M?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_01HMGJMAIH@B?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?map@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4QBUtypemap@23@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?$S4@?2??VTFromRegType@CRegParser@ATL@@KAHPBDAAG@Z@4IA
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
;	COMDAT ??0?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPADI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetMultiStringValue@CRegKey@ATL@@QAEJPBD0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@D$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SetDWORDValue@CRegKey@ATL@@QAEJPBDK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Allocate@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateBytes@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QAEPAEI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocateHeap@?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@AAEXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ChToByte@CRegParser@ATL@@KAED@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@E$0BAA@VCCRTAllocator@ATL@@@ATL@@QBEPAEXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SkipAssignment@CRegParser@ATL@@IAEJPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?CanForceRemoveKey@CRegParser@ATL@@IAEHPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?rgszNeverDelete@CRegParser@ATL@@1QBQBDB
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_05GIBEAPNE@CLSID?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08PICKODJL@FileType?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_09JKPGEJCH@Interface?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08PPIOJEA@Hardware?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_04IHBFOLAC@Mime?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_03DDIMFGBA@SAM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08LOPHEHKG@SECURITY?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_06FDHFNJBJ@SYSTEM?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_08KEKAJNJI@Software?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Attach@CRegKey@ATL@@QAEXPAUHKEY__@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DeleteSubKey@CRegKey@ATL@@QAEJPBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Detach@CRegKey@ATL@@QAEPAUHKEY__@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CTempBuffer@D$0EAA@VCCRTAllocator@ATL@@@ATL@@QBEPADXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?ResourceUnregister@CRegObject@ATL@@QAGJPBGI0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_C@_1M@PPPPCDEP@?$AAA?$AAP?$AAP?$AAI?$AAD?$AA?$AA@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?rgszNeverDelete@CRegParser@ATL@@1QBQBDB	; ATL::CRegParser::rgszNeverDelete
PUBLIC	?g_pfnGetThreadACP@ATL@@3P6GIXZA		; ATL::g_pfnGetThreadACP
PUBLIC	?_AtlGetThreadACPThunk@ATL@@YGIXZ		; ATL::_AtlGetThreadACPThunk
PUBLIC	??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@	; `string'
PUBLIC	??_C@_08PICKODJL@FileType?$AA@			; `string'
PUBLIC	??_C@_09JKPGEJCH@Interface?$AA@			; `string'
PUBLIC	??_C@_08PPIOJEA@Hardware?$AA@			; `string'
PUBLIC	??_C@_04IHBFOLAC@Mime?$AA@			; `string'
PUBLIC	??_C@_03DDIMFGBA@SAM?$AA@			; `string'
PUBLIC	??_C@_08LOPHEHKG@SECURITY?$AA@			; `string'
PUBLIC	??_C@_06FDHFNJBJ@SYSTEM?$AA@			; `string'
PUBLIC	??_C@_08KEKAJNJI@Software?$AA@			; `string'
PUBLIC	??_C@_07KJLOKDKB@TypeLib?$AA@			; `string'
PUBLIC	?_pAtlModule@ATL@@3PAVCAtlModule@1@A		; ATL::_pAtlModule
PUBLIC	?m_libid@CAtlModule@ATL@@2U_GUID@@A		; ATL::CAtlModule::m_libid
PUBLIC	_CLSID_StdGlobalInterfaceTable
PUBLIC	??_C@_05GIBEAPNE@CLSID?$AA@			; `string'
PUBLIC	??_C@_05PDIKPLII@AppID?$AA@			; `string'
PUBLIC	??_C@_01CPLAODJH@S?$AA@				; `string'
PUBLIC	??_C@_01PLPBNMEI@M?$AA@				; `string'
PUBLIC	??_C@_01CKDDGHAB@D?$AA@				; `string'
PUBLIC	??_C@_01HMGJMAIH@B?$AA@				; `string'
PUBLIC	??_C@_03LAIAPFCB@Val?$AA@			; `string'
PUBLIC	??_C@_0M@DBGDLGLL@ForceRemove?$AA@		; `string'
PUBLIC	??_C@_08KAAPDIAN@NoRemove?$AA@			; `string'
PUBLIC	??_C@_06JBKGCNBB@Delete?$AA@			; `string'
PUBLIC	?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA	; ATL::_pPerfRegFunc
PUBLIC	?_pPerfUnRegFunc@ATL@@3P6AJXZA			; ATL::_pPerfUnRegFunc
;	COMDAT ?_pAtlModule@ATL@@3PAVCAtlModule@1@A
_BSS	SEGMENT
?_pAtlModule@ATL@@3PAVCAtlModule@1@A DD 01H DUP (?)	; ATL::_pAtlModule
_BSS	ENDS
;	COMDAT ?m_libid@CAtlModule@ATL@@2U_GUID@@A
_BSS	SEGMENT
?m_libid@CAtlModule@ATL@@2U_GUID@@A DB 010H DUP (?)	; ATL::CAtlModule::m_libid
_BSS	ENDS
;	COMDAT ?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA
_BSS	SEGMENT
?_pPerfRegFunc@ATL@@3P6AJPAUHINSTANCE__@@@ZA DD 01H DUP (?) ; ATL::_pPerfRegFunc
_BSS	ENDS
;	COMDAT ?_pPerfUnRegFunc@ATL@@3P6AJXZA
_BSS	SEGMENT
?_pPerfUnRegFunc@ATL@@3P6AJXZA DD 01H DUP (?)		; ATL::_pPerfUnRegFunc
_BSS	ENDS
;	COMDAT ?g_pfnGetThreadACP@ATL@@3P6GIXZA
_DATA	SEGMENT
?g_pfnGetThreadACP@ATL@@3P6GIXZA DD FLAT:?_AtlGetThreadACPThunk@ATL@@YGIXZ ; ATL::g_pfnGetThreadACP
_DATA	ENDS
;	COMDAT _CLSID_StdGlobalInterfaceTable
CONST	SEGMENT
_CLSID_StdGlobalInterfaceTable DD 0323H
	DW	00H
	DW	00H
	DB	0c0H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	046H
CONST	ENDS
;	COMDAT ??_C@_01CPLAODJH@S?$AA@
CONST	SEGMENT
??_C@_01CPLAODJH@S?$AA@ DB 'S', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szStringVal DD	FLAT:??_C@_01CPLAODJH@S?$AA@
CONST	ENDS
;	COMDAT ??_C@_01PLPBNMEI@M?$AA@
CONST	SEGMENT
??_C@_01PLPBNMEI@M?$AA@ DB 'M', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_multiszStringVal DD FLAT:??_C@_01PLPBNMEI@M?$AA@
CONST	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D?$AA@
CONST	SEGMENT
??_C@_01CKDDGHAB@D?$AA@ DB 'D', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szDwordVal DD	FLAT:??_C@_01CKDDGHAB@D?$AA@
CONST	ENDS
;	COMDAT ??_C@_01HMGJMAIH@B?$AA@
CONST	SEGMENT
??_C@_01HMGJMAIH@B?$AA@ DB 'B', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szBinaryVal DD	FLAT:??_C@_01HMGJMAIH@B?$AA@
CONST	ENDS
;	COMDAT ??_C@_03LAIAPFCB@Val?$AA@
CONST	SEGMENT
??_C@_03LAIAPFCB@Val?$AA@ DB 'Val', 00H			; `string'
CONST	ENDS
CONST	SEGMENT
_szValToken DD	FLAT:??_C@_03LAIAPFCB@Val?$AA@
CONST	ENDS
;	COMDAT ??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	SEGMENT
??_C@_0M@DBGDLGLL@ForceRemove?$AA@ DB 'ForceRemove', 00H ; `string'
CONST	ENDS
CONST	SEGMENT
_szForceRemove DD FLAT:??_C@_0M@DBGDLGLL@ForceRemove?$AA@
CONST	ENDS
;	COMDAT ??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	SEGMENT
??_C@_08KAAPDIAN@NoRemove?$AA@ DB 'NoRemove', 00H	; `string'
CONST	ENDS
CONST	SEGMENT
_szNoRemove DD	FLAT:??_C@_08KAAPDIAN@NoRemove?$AA@
CONST	ENDS
;	COMDAT ??_C@_06JBKGCNBB@Delete?$AA@
CONST	SEGMENT
??_C@_06JBKGCNBB@Delete?$AA@ DB 'Delete', 00H		; `string'
CONST	ENDS
CONST	SEGMENT
_szDelete DD	FLAT:??_C@_06JBKGCNBB@Delete?$AA@
CONST	ENDS
;	COMDAT ??_C@_05PDIKPLII@AppID?$AA@
CONST	SEGMENT
??_C@_05PDIKPLII@AppID?$AA@ DB 'AppID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05GIBEAPNE@CLSID?$AA@
CONST	SEGMENT
??_C@_05GIBEAPNE@CLSID?$AA@ DB 'CLSID', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
CONST	SEGMENT
??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@ DB 'Component Categories', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08PICKODJL@FileType?$AA@
CONST	SEGMENT
??_C@_08PICKODJL@FileType?$AA@ DB 'FileType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09JKPGEJCH@Interface?$AA@
CONST	SEGMENT
??_C@_09JKPGEJCH@Interface?$AA@ DB 'Interface', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08PPIOJEA@Hardware?$AA@
CONST	SEGMENT
??_C@_08PPIOJEA@Hardware?$AA@ DB 'Hardware', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04IHBFOLAC@Mime?$AA@
CONST	SEGMENT
??_C@_04IHBFOLAC@Mime?$AA@ DB 'Mime', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03DDIMFGBA@SAM?$AA@
CONST	SEGMENT
??_C@_03DDIMFGBA@SAM?$AA@ DB 'SAM', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08LOPHEHKG@SECURITY?$AA@
CONST	SEGMENT
??_C@_08LOPHEHKG@SECURITY?$AA@ DB 'SECURITY', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06FDHFNJBJ@SYSTEM?$AA@
CONST	SEGMENT
??_C@_06FDHFNJBJ@SYSTEM?$AA@ DB 'SYSTEM', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08KEKAJNJI@Software?$AA@
CONST	SEGMENT
??_C@_08KEKAJNJI@Software?$AA@ DB 'Software', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	SEGMENT
??_C@_07KJLOKDKB@TypeLib?$AA@ DB 'TypeLib', 00H		; `string'
CONST	ENDS
;	COMDAT ?rgszNeverDelete@CRegParser@ATL@@1QBQBDB
CONST	SEGMENT
?rgszNeverDelete@CRegParser@ATL@@1QBQBDB DD FLAT:??_C@_05PDIKPLII@AppID?$AA@ ; ATL::CRegParser::rgszNeverDelete
	DD	FLAT:??_C@_05GIBEAPNE@CLSID?$AA@
	DD	FLAT:??_C@_0BF@HDDNNDFH@Component?5Categories?$AA@
	DD	FLAT:??_C@_08PICKODJL@FileType?$AA@
	DD	FLAT:??_C@_09JKPGEJCH@Interface?$AA@
	DD	FLAT:??_C@_08PPIOJEA@Hardware?$AA@
	DD	FLAT:??_C@_04IHBFOLAC@Mime?$AA@
	DD	FLAT:??_C@_03DDIMFGBA@SAM?$AA@
	DD	FLAT:??_C@_08LOPHEHKG@SECURITY?$AA@
	DD	FLAT:??_C@_06FDHFNJBJ@SYSTEM?$AA@
	DD	FLAT:??_C@_08KEKAJNJI@Software?$AA@
	DD	FLAT:??_C@_07KJLOKDKB@TypeLib?$AA@
CONST	ENDS
PUBLIC	?SendCT_SERVICEMONITOR_REQ@CTPlayer@@QAEXKKKK@Z	; CTPlayer::SendCT_SERVICEMONITOR_REQ
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	??0CPacket@@QAE@XZ:NEAR				; CPacket::CPacket
EXTRN	?SetID@CPacket@@QAEAAV1@G@Z:NEAR		; CPacket::SetID
EXTRN	??6CPacket@@QAEAAV0@K@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\trelaysvr\cssender.cpp
xdata$x	SEGMENT
$T108048 DD	0ffffffffH
	DD	FLAT:$L108039
$T108043 DD	019930520H
	DD	01H
	DD	FLAT:$T108048
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendCT_SERVICEMONITOR_REQ@CTPlayer@@QAEXKKKK@Z
_TEXT	SEGMENT
$T108036 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwTick$ = 8						; size = 4
_dwSession$ = 12					; size = 4
_dwUser$ = 16						; size = 4
_dwActiveUser$ = 20					; size = 4
?SendCT_SERVICEMONITOR_REQ@CTPlayer@@QAEXKKKK@Z PROC NEAR ; CTPlayer::SendCT_SERVICEMONITOR_REQ, COMDAT
; _this$ = ecx

; 8    : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCT_SERVICEMONITOR_REQ@CTPlayer@@QAEXKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 9    : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T108036[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L108038
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L108038:

; 10   : 
; 11   : 	pMSG->SetID(CT_SERVICEMONITOR_REQ)
; 12   : 		<< dwTick
; 13   : 		<< dwSession
; 14   : 		<< dwUser
; 15   : 		<< dwActiveUser;

  0003b	8b 44 24 28	 mov	 eax, DWORD PTR _dwActiveUser$[esp+20]
  0003f	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwUser$[esp+20]
  00043	8b 54 24 20	 mov	 edx, DWORD PTR _dwSession$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 20	 mov	 eax, DWORD PTR _dwTick$[esp+24]
  0004c	51		 push	 ecx
  0004d	52		 push	 edx
  0004e	50		 push	 eax
  0004f	68 1d 60 00 00	 push	 24605			; 0000601dH
  00054	8b ce		 mov	 ecx, esi
  00056	c7 44 24 28 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+52], -1
  0005e	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00063	8b c8		 mov	 ecx, eax
  00065	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0006a	8b c8		 mov	 ecx, eax
  0006c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00071	8b c8		 mov	 ecx, eax
  00073	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00078	8b c8		 mov	 ecx, eax
  0007a	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 16   : 
; 17   : 	Say(pMSG);

  0007f	8b 17		 mov	 edx, DWORD PTR [edi]
  00081	56		 push	 esi
  00082	8b cf		 mov	 ecx, edi
  00084	ff 12		 call	 DWORD PTR [edx]

; 18   : }

  00086	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0008a	5f		 pop	 edi
  0008b	5e		 pop	 esi
  0008c	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00093	83 c4 10	 add	 esp, 16			; 00000010H
  00096	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L108039:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T108036[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendCT_SERVICEMONITOR_REQ@CTPlayer@@QAEXKKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T108043
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCT_SERVICEMONITOR_REQ@CTPlayer@@QAEXKKKK@Z ENDP	; CTPlayer::SendCT_SERVICEMONITOR_REQ
PUBLIC	?SendCT_CHATBAN_ACK@CTPlayer@@QAEXEK@Z		; CTPlayer::SendCT_CHATBAN_ACK
EXTRN	??6CPacket@@QAEAAV0@E@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
xdata$x	SEGMENT
$T108063 DD	0ffffffffH
	DD	FLAT:$L108059
$T108061 DD	019930520H
	DD	01H
	DD	FLAT:$T108063
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendCT_CHATBAN_ACK@CTPlayer@@QAEXEK@Z
_TEXT	SEGMENT
$T108056 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bRet$ = 8						; size = 1
_dwBanSeq$ = 12						; size = 4
?SendCT_CHATBAN_ACK@CTPlayer@@QAEXEK@Z PROC NEAR	; CTPlayer::SendCT_CHATBAN_ACK, COMDAT
; _this$ = ecx

; 21   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCT_CHATBAN_ACK@CTPlayer@@QAEXEK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 22   : 	CPacket* pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T108056[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L108058
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L108058:

; 23   : 
; 24   : 	pMSG->SetID(CT_CHATBAN_ACK)
; 25   : 		<< bRet
; 26   : 		<< dwBanSeq;

  0003b	8b 44 24 20	 mov	 eax, DWORD PTR _dwBanSeq$[esp+20]
  0003f	8b 4c 24 1c	 mov	 ecx, DWORD PTR _bRet$[esp+20]
  00043	50		 push	 eax
  00044	51		 push	 ecx
  00045	68 4d 60 00 00	 push	 24653			; 0000604dH
  0004a	8b ce		 mov	 ecx, esi
  0004c	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00054	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00059	8b c8		 mov	 ecx, eax
  0005b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00060	8b c8		 mov	 ecx, eax
  00062	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 27   : 
; 28   : 	Say(pMSG);

  00067	8b 17		 mov	 edx, DWORD PTR [edi]
  00069	56		 push	 esi
  0006a	8b cf		 mov	 ecx, edi
  0006c	ff 12		 call	 DWORD PTR [edx]

; 29   : }

  0006e	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00072	5f		 pop	 edi
  00073	5e		 pop	 esi
  00074	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0007b	83 c4 10	 add	 esp, 16			; 00000010H
  0007e	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L108059:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T108056[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendCT_CHATBAN_ACK@CTPlayer@@QAEXEK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T108061
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCT_CHATBAN_ACK@CTPlayer@@QAEXEK@Z ENDP		; CTPlayer::SendCT_CHATBAN_ACK
PUBLIC	?SendCS_RELAYCHARDATA_ACK@CTPlayer@@QAEXE@Z	; CTPlayer::SendCS_RELAYCHARDATA_ACK
;	COMDAT xdata$x
xdata$x	SEGMENT
$T108077 DD	0ffffffffH
	DD	FLAT:$L108073
$T108075 DD	019930520H
	DD	01H
	DD	FLAT:$T108077
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendCS_RELAYCHARDATA_ACK@CTPlayer@@QAEXE@Z
_TEXT	SEGMENT
$T108070 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bResult$ = 8						; size = 1
?SendCS_RELAYCHARDATA_ACK@CTPlayer@@QAEXE@Z PROC NEAR	; CTPlayer::SendCS_RELAYCHARDATA_ACK, COMDAT
; _this$ = ecx

; 32   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCS_RELAYCHARDATA_ACK@CTPlayer@@QAEXE@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 33   : 	CPacket* pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T108070[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L108072
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L108072:

; 34   : 
; 35   : 	pMSG->SetID(CS_RELAYCHARDATA_ACK)
; 36   : 		<< bResult;

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _bResult$[esp+20]
  0003f	50		 push	 eax
  00040	68 d6 51 00 00	 push	 20950			; 000051d6H
  00045	8b ce		 mov	 ecx, esi
  00047	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  0004f	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00054	8b c8		 mov	 ecx, eax
  00056	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 37   : 
; 38   : 	Say(pMSG);

  0005b	8b 17		 mov	 edx, DWORD PTR [edi]
  0005d	56		 push	 esi
  0005e	8b cf		 mov	 ecx, edi
  00060	ff 12		 call	 DWORD PTR [edx]

; 39   : }

  00062	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0006f	83 c4 10	 add	 esp, 16			; 00000010H
  00072	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L108073:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T108070[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendCS_RELAYCHARDATA_ACK@CTPlayer@@QAEXE@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T108075
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCS_RELAYCHARDATA_ACK@CTPlayer@@QAEXE@Z ENDP	; CTPlayer::SendCS_RELAYCHARDATA_ACK
PUBLIC	?RelayCorpsMsg@CTPlayer@@QAEXPAVCPacket@@G@Z	; CTPlayer::RelayCorpsMsg
EXTRN	?Copy@CPacket@@QAEXPAV1@@Z:NEAR			; CPacket::Copy
;	COMDAT xdata$x
xdata$x	SEGMENT
$T108091 DD	0ffffffffH
	DD	FLAT:$L108087
$T108089 DD	019930520H
	DD	01H
	DD	FLAT:$T108091
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?RelayCorpsMsg@CTPlayer@@QAEXPAVCPacket@@G@Z
_TEXT	SEGMENT
$T108084 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pPacket$ = 8						; size = 4
_wMsgID$ = 12						; size = 2
?RelayCorpsMsg@CTPlayer@@QAEXPAVCPacket@@G@Z PROC NEAR	; CTPlayer::RelayCorpsMsg, COMDAT
; _this$ = ecx

; 118  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?RelayCorpsMsg@CTPlayer@@QAEXPAVCPacket@@G@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 119  : 	CPacket *pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T108084[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L108086
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L108086:

; 120  : 	pMSG->Copy(pPacket);

  0003b	8b 44 24 1c	 mov	 eax, DWORD PTR _pPacket$[esp+20]
  0003f	50		 push	 eax
  00040	8b ce		 mov	 ecx, esi
  00042	c7 44 24 18 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+36], -1
  0004a	e8 00 00 00 00	 call	 ?Copy@CPacket@@QAEXPAV1@@Z ; CPacket::Copy

; 121  : 	pMSG->SetID(wMsgID);

  0004f	8b 4c 24 20	 mov	 ecx, DWORD PTR _wMsgID$[esp+20]
  00053	51		 push	 ecx
  00054	8b ce		 mov	 ecx, esi
  00056	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID

; 122  : 
; 123  : 	Say(pMSG);

  0005b	8b 17		 mov	 edx, DWORD PTR [edi]
  0005d	56		 push	 esi
  0005e	8b cf		 mov	 ecx, edi
  00060	ff 12		 call	 DWORD PTR [edx]

; 124  : }

  00062	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  00066	5f		 pop	 edi
  00067	5e		 pop	 esi
  00068	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0006f	83 c4 10	 add	 esp, 16			; 00000010H
  00072	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L108087:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T108084[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?RelayCorpsMsg@CTPlayer@@QAEXPAVCPacket@@G@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T108089
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?RelayCorpsMsg@CTPlayer@@QAEXPAVCPacket@@G@Z ENDP	; CTPlayer::RelayCorpsMsg
PUBLIC	?SendCS_CORPSCMD_ACK@CTPlayer@@QAEXGKGEKEGG@Z	; CTPlayer::SendCS_CORPSCMD_ACK
EXTRN	??6CPacket@@QAEAAV0@G@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
xdata$x	SEGMENT
$T108105 DD	0ffffffffH
	DD	FLAT:$L108101
$T108103 DD	019930520H
	DD	01H
	DD	FLAT:$T108105
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendCS_CORPSCMD_ACK@CTPlayer@@QAEXGKGEKEGG@Z
_TEXT	SEGMENT
$T108098 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_wSquad$ = 8						; size = 2
_dwCharID$ = 12						; size = 4
_wMapID$ = 16						; size = 2
_bCMD$ = 20						; size = 1
_dwTargetID$ = 24					; size = 4
_bTargetType$ = 28					; size = 1
_wPosX$ = 32						; size = 2
_wPosZ$ = 36						; size = 2
?SendCS_CORPSCMD_ACK@CTPlayer@@QAEXGKGEKEGG@Z PROC NEAR	; CTPlayer::SendCS_CORPSCMD_ACK, COMDAT
; _this$ = ecx

; 134  : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCS_CORPSCMD_ACK@CTPlayer@@QAEXGKGEKEGG@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 135  : 	CPacket* pMSG = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T108098[esp+24], eax
  00028	33 f6		 xor	 esi, esi
  0002a	3b c6		 cmp	 eax, esi
  0002c	89 74 24 14	 mov	 DWORD PTR __$EHRec$[esp+32], esi
  00030	74 09		 je	 SHORT $L108100
  00032	8b c8		 mov	 ecx, eax
  00034	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00039	8b f0		 mov	 esi, eax
$L108100:

; 136  : 	pMSG->SetID(CS_CORPSCMD_ACK)
; 137  : 		<< wSquad
; 138  : 		<< dwCharID
; 139  : 		<< wMapID
; 140  : 		<< bCMD
; 141  : 		<< dwTargetID
; 142  : 		<< bTargetType
; 143  : 		<< wPosX
; 144  : 		<< wPosZ;

  0003b	8b 44 24 38	 mov	 eax, DWORD PTR _wPosZ$[esp+20]
  0003f	8b 4c 24 34	 mov	 ecx, DWORD PTR _wPosX$[esp+20]
  00043	8b 54 24 30	 mov	 edx, DWORD PTR _bTargetType$[esp+20]
  00047	50		 push	 eax
  00048	8b 44 24 30	 mov	 eax, DWORD PTR _dwTargetID$[esp+24]
  0004c	51		 push	 ecx
  0004d	8b 4c 24 30	 mov	 ecx, DWORD PTR _bCMD$[esp+28]
  00051	52		 push	 edx
  00052	8b 54 24 30	 mov	 edx, DWORD PTR _wMapID$[esp+32]
  00056	50		 push	 eax
  00057	8b 44 24 30	 mov	 eax, DWORD PTR _dwCharID$[esp+36]
  0005b	51		 push	 ecx
  0005c	8b 4c 24 30	 mov	 ecx, DWORD PTR _wSquad$[esp+40]
  00060	52		 push	 edx
  00061	50		 push	 eax
  00062	51		 push	 ecx
  00063	68 b3 50 00 00	 push	 20659			; 000050b3H
  00068	8b ce		 mov	 ecx, esi
  0006a	c7 44 24 38 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+68], -1
  00072	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00077	8b c8		 mov	 ecx, eax
  00079	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0007e	8b c8		 mov	 ecx, eax
  00080	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00085	8b c8		 mov	 ecx, eax
  00087	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  0008c	8b c8		 mov	 ecx, eax
  0008e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  00093	8b c8		 mov	 ecx, eax
  00095	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0009a	8b c8		 mov	 ecx, eax
  0009c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000a1	8b c8		 mov	 ecx, eax
  000a3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000a8	8b c8		 mov	 ecx, eax
  000aa	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 145  : 
; 146  : 	Say(pMSG);

  000af	8b 17		 mov	 edx, DWORD PTR [edi]
  000b1	56		 push	 esi
  000b2	8b cf		 mov	 ecx, edi
  000b4	ff 12		 call	 DWORD PTR [edx]

; 147  : }

  000b6	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  000ba	5f		 pop	 edi
  000bb	5e		 pop	 esi
  000bc	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000c3	83 c4 10	 add	 esp, 16			; 00000010H
  000c6	c2 20 00	 ret	 32			; 00000020H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L108101:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T108098[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendCS_CORPSCMD_ACK@CTPlayer@@QAEXGKGEKEGG@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T108103
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCS_CORPSCMD_ACK@CTPlayer@@QAEXGKGEKEGG@Z ENDP	; CTPlayer::SendCS_CORPSCMD_ACK
PUBLIC	?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z	; InterlockedExchangePointer
EXTRN	__imp__InterlockedExchange@8:NEAR
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlconv.h
;	COMDAT ?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z
_TEXT	SEGMENT
_pp$ = 8						; size = 4
_pNew$ = 12						; size = 4
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z PROC NEAR	; InterlockedExchangePointer, COMDAT

; 92   : 	return( reinterpret_cast<void*>(static_cast<LONG_PTR>(::InterlockedExchange(reinterpret_cast<LONG*>(pp), static_cast<LONG>(reinterpret_cast<LONG_PTR>(pNew))))) );

  00000	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp__InterlockedExchange@8
?InterlockedExchangePointer@@YGPAXPAPAXPAX@Z ENDP	; InterlockedExchangePointer
_TEXT	ENDS
PUBLIC	?_AtlGetThreadACPFake@ATL@@YGIXZ		; ATL::_AtlGetThreadACPFake
EXTRN	__imp__GetACP@0:NEAR
EXTRN	__imp__GetLocaleInfoA@16:NEAR
EXTRN	__imp__GetThreadLocale@0:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPFake@ATL@@YGIXZ
_TEXT	SEGMENT
_szACP$ = -12						; size = 7
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPFake@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPFake, COMDAT

; 101  : {

  00000	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00003	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00008	56		 push	 esi
  00009	89 44 24 0c	 mov	 DWORD PTR __$ArrayPad$[esp+16], eax

; 102  : 	UINT nACP = 0;

  0000d	33 f6		 xor	 esi, esi

; 103  : 
; 104  : 	LCID lcidThread = ::GetThreadLocale();

  0000f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetThreadLocale@0

; 105  : 
; 106  : 	char szACP[7];
; 107  : 	// GetLocaleInfoA will fail for a Unicode-only LCID, but those are only supported on 
; 108  : 	// Windows 2000.  Since Windows 2000 supports CP_THREAD_ACP, this code path is never
; 109  : 	// executed on Windows 2000.
; 110  : 	if (::GetLocaleInfoA(lcidThread, LOCALE_IDEFAULTANSICODEPAGE, szACP, 7) != 0)

  00015	6a 07		 push	 7
  00017	8d 4c 24 08	 lea	 ecx, DWORD PTR _szACP$[esp+20]
  0001b	51		 push	 ecx
  0001c	68 04 10 00 00	 push	 4100			; 00001004H
  00021	50		 push	 eax
  00022	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetLocaleInfoA@16
  00028	85 c0		 test	 eax, eax
  0002a	74 21		 je	 SHORT $L108118

; 111  : 	{
; 112  : 		char* pch = szACP;
; 113  : 		while (*pch != '\0')

  0002c	8a 44 24 04	 mov	 al, BYTE PTR _szACP$[esp+16]
  00030	84 c0		 test	 al, al
  00032	8d 4c 24 04	 lea	 ecx, DWORD PTR _szACP$[esp+16]
  00036	74 15		 je	 SHORT $L108118
$L58550:

; 114  : 		{
; 115  : 			nACP *= 10;
; 116  : 			nACP += *pch++ - '0';

  00038	0f be c0	 movsx	 eax, al
  0003b	8d 14 b6	 lea	 edx, DWORD PTR [esi+esi*4]
  0003e	41		 inc	 ecx
  0003f	8d 74 50 d0	 lea	 esi, DWORD PTR [eax+edx*2-48]
  00043	8a 01		 mov	 al, BYTE PTR [ecx]
  00045	84 c0		 test	 al, al
  00047	75 ef		 jne	 SHORT $L58550

; 117  : 		}
; 118  : 	}
; 119  : 	// Use the Default ANSI Code Page if we were unable to get the thread ACP or if one does not exist.
; 120  : 	if (nACP == 0)

  00049	85 f6		 test	 esi, esi
  0004b	75 14		 jne	 SHORT $L108119
$L108118:

; 121  : 		nACP = ::GetACP();

  0004d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetACP@0
  00053	5e		 pop	 esi

; 122  : 
; 123  : 	return nACP;
; 124  : }

  00054	8b 4c 24 08	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+12]
  00058	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00060	c3		 ret	 0
$L108119:
  00061	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$ArrayPad$[esp+16]
  00065	8b c6		 mov	 eax, esi
  00067	5e		 pop	 esi
  00068	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0006d	83 c4 0c	 add	 esp, 12			; 0000000cH
  00070	c3		 ret	 0
?_AtlGetThreadACPFake@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPFake
_TEXT	ENDS
PUBLIC	?_AtlGetThreadACPReal@ATL@@YGIXZ		; ATL::_AtlGetThreadACPReal
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPReal@ATL@@YGIXZ
_TEXT	SEGMENT
?_AtlGetThreadACPReal@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPReal, COMDAT

; 128  : 	return( CP_THREAD_ACP );

  00000	b8 03 00 00 00	 mov	 eax, 3

; 129  : }

  00005	c3		 ret	 0
?_AtlGetThreadACPReal@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPReal
_TEXT	ENDS
EXTRN	__imp__GetVersionExA@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?_AtlGetThreadACPThunk@ATL@@YGIXZ
_TEXT	SEGMENT
_ver$ = -152						; size = 148
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?_AtlGetThreadACPThunk@ATL@@YGIXZ PROC NEAR		; ATL::_AtlGetThreadACPThunk, COMDAT

; 134  : {

  00000	81 ec 98 00 00
	00		 sub	 esp, 152		; 00000098H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	89 84 24 94 00
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+152], eax

; 135  : 	OSVERSIONINFO ver;
; 136  : 	ATLGETTHREADACP pfnGetThreadACP;
; 137  : 
; 138  : 	ver.dwOSVersionInfoSize = sizeof( ver );
; 139  : 	::GetVersionEx( &ver );

  00012	8d 04 24	 lea	 eax, DWORD PTR _ver$[esp+152]
  00015	50		 push	 eax
  00016	c7 44 24 04 94
	00 00 00	 mov	 DWORD PTR _ver$[esp+156], 148 ; 00000094H
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetVersionExA@4

; 140  : 	if( (ver.dwPlatformId == VER_PLATFORM_WIN32_NT) && (ver.dwMajorVersion >= 5) )

  00024	83 7c 24 10 02	 cmp	 DWORD PTR _ver$[esp+168], 2
  00029	75 0c		 jne	 SHORT $L58560
  0002b	83 7c 24 04 05	 cmp	 DWORD PTR _ver$[esp+156], 5

; 141  : 	{
; 142  : 		// On Win2K, CP_THREAD_ACP is supported
; 143  : 		pfnGetThreadACP = _AtlGetThreadACPReal;

  00030	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?_AtlGetThreadACPReal@ATL@@YGIXZ ; ATL::_AtlGetThreadACPReal
  00035	73 05		 jae	 SHORT $L58561
$L58560:

; 144  : 	}
; 145  : 	else
; 146  : 	{
; 147  : 		pfnGetThreadACP = _AtlGetThreadACPFake;

  00037	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:?_AtlGetThreadACPFake@ATL@@YGIXZ ; ATL::_AtlGetThreadACPFake
$L58561:

; 148  : 	}
; 149  : 	InterlockedExchangePointer( reinterpret_cast< void** >(&g_pfnGetThreadACP), pfnGetThreadACP );

  0003c	50		 push	 eax
  0003d	68 00 00 00 00	 push	 OFFSET FLAT:?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP
  00042	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__InterlockedExchange@8

; 150  : 
; 151  : 	return( g_pfnGetThreadACP() );

  00048	ff 15 00 00 00
	00		 call	 DWORD PTR ?g_pfnGetThreadACP@ATL@@3P6GIXZA ; ATL::g_pfnGetThreadACP

; 152  : }

  0004e	8b 8c 24 94 00
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+152]
  00055	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0005a	81 c4 98 00 00
	00		 add	 esp, 152		; 00000098H
  00060	c3		 ret	 0
?_AtlGetThreadACPThunk@ATL@@YGIXZ ENDP			; ATL::_AtlGetThreadACPThunk
_TEXT	ENDS
PUBLIC	??0CAtlException@ATL@@QAE@J@Z			; ATL::CAtlException::CAtlException
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlexcept.h
;	COMDAT ??0CAtlException@ATL@@QAE@J@Z
_TEXT	SEGMENT
_hr$ = 8						; size = 4
??0CAtlException@ATL@@QAE@J@Z PROC NEAR			; ATL::CAtlException::CAtlException, COMDAT
; _this$ = ecx

; 40   : 	{

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR _hr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 41   : 	}

  00008	c2 04 00	 ret	 4
??0CAtlException@ATL@@QAE@J@Z ENDP			; ATL::CAtlException::CAtlException
_TEXT	ENDS
PUBLIC	?AtlThrow@ATL@@YGXJ@Z				; ATL::AtlThrow
PUBLIC	__TI1?AVCAtlException@ATL@@
PUBLIC	__CTA1?AVCAtlException@ATL@@
PUBLIC	??_R0?AVCAtlException@ATL@@@8			; ATL::CAtlException `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVCAtlException@ATL@@@84
EXTRN	__CxxThrowException@8:NEAR
EXTRN	??_7type_info@@6B@:DWORD			; type_info::`vftable'
;	COMDAT __TI1?AVCAtlException@ATL@@
xdata$x	SEGMENT
__TI1?AVCAtlException@ATL@@ DD 00H
	DD	00H
	DD	00H
	DD	FLAT:__CTA1?AVCAtlException@ATL@@
xdata$x	ENDS
;	COMDAT __CTA1?AVCAtlException@ATL@@
xdata$x	SEGMENT
__CTA1?AVCAtlException@ATL@@ DD 01H
	DD	FLAT:__CT??_R0?AVCAtlException@ATL@@@84
xdata$x	ENDS
;	COMDAT __CT??_R0?AVCAtlException@ATL@@@84
xdata$x	SEGMENT
__CT??_R0?AVCAtlException@ATL@@@84 DD 00H
	DD	FLAT:??_R0?AVCAtlException@ATL@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	04H
	DD	00H
xdata$x	ENDS
;	COMDAT ??_R0?AVCAtlException@ATL@@@8
_DATA	SEGMENT
??_R0?AVCAtlException@ATL@@@8 DD FLAT:??_7type_info@@6B@ ; ATL::CAtlException `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCAtlException@ATL@@', 00H
; Function compile flags: /Ogty
_DATA	ENDS
;	COMDAT ?AtlThrow@ATL@@YGXJ@Z
_TEXT	SEGMENT
$T108140 = 8						; size = 4
_hr$ = 8						; size = 4
?AtlThrow@ATL@@YGXJ@Z PROC NEAR				; ATL::AtlThrow, COMDAT

; 62   : 	ATLTRACE(atlTraceException, 0, _T("AtlThrow: hr = 0x%x\n"), hr );
; 63   : #ifdef _AFX
; 64   : 	if( hr == E_OUTOFMEMORY )
; 65   : 	{
; 66   : 		AfxThrowMemoryException();
; 67   : 	}
; 68   : 	else
; 69   : 	{
; 70   : 		AfxThrowOleException( hr );
; 71   : 	}
; 72   : #else
; 73   : 	throw CAtlException( hr );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _hr$[esp-4]
  00004	68 00 00 00 00	 push	 OFFSET FLAT:__TI1?AVCAtlException@ATL@@
  00009	8d 4c 24 08	 lea	 ecx, DWORD PTR $T108140[esp]
  0000d	51		 push	 ecx
  0000e	89 44 24 0c	 mov	 DWORD PTR $T108140[esp+4], eax
  00012	e8 00 00 00 00	 call	 __CxxThrowException@8
$L108147:
$L108146:
  00017	cc		 int	 3
?AtlThrow@ATL@@YGXJ@Z ENDP				; ATL::AtlThrow
_TEXT	ENDS
PUBLIC	?data@CStringData@ATL@@QAEPAXXZ			; ATL::CStringData::data
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?data@CStringData@ATL@@QAEPAXXZ
_TEXT	SEGMENT
?data@CStringData@ATL@@QAEPAXXZ PROC NEAR		; ATL::CStringData::data, COMDAT
; _this$ = ecx

; 66   : 		return (this+1);

  00000	8d 41 10	 lea	 eax, DWORD PTR [ecx+16]

; 67   : 	}

  00003	c3		 ret	 0
?data@CStringData@ATL@@QAEPAXXZ ENDP			; ATL::CStringData::data
_TEXT	ENDS
PUBLIC	?AddRef@CStringData@ATL@@QAEXXZ			; ATL::CStringData::AddRef
; Function compile flags: /Ogty
;	COMDAT ?AddRef@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
?AddRef@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::AddRef, COMDAT
; _this$ = ecx

; 71   : 		ATLASSERT(nRefs > 0);
; 72   : 		_InterlockedIncrement(&nRefs);

  00000	83 c1 0c	 add	 ecx, 12			; 0000000cH
  00003	b8 01 00 00 00	 mov	 eax, 1
  00008	f0 0f c1 01	 lock	  xadd	 DWORD PTR [ecx], eax

; 73   : 	}

  0000c	c3		 ret	 0
?AddRef@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::AddRef
_TEXT	ENDS
PUBLIC	?IsLocked@CStringData@ATL@@QBE_NXZ		; ATL::CStringData::IsLocked
; Function compile flags: /Ogty
;	COMDAT ?IsLocked@CStringData@ATL@@QBE_NXZ
_TEXT	SEGMENT
?IsLocked@CStringData@ATL@@QBE_NXZ PROC NEAR		; ATL::CStringData::IsLocked, COMDAT
; _this$ = ecx

; 76   : 		return nRefs < 0;

  00000	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00003	33 c0		 xor	 eax, eax
  00005	85 d2		 test	 edx, edx
  00007	0f 9c c0	 setl	 al

; 77   : 	}

  0000a	c3		 ret	 0
?IsLocked@CStringData@ATL@@QBE_NXZ ENDP			; ATL::CStringData::IsLocked
_TEXT	ENDS
PUBLIC	?Release@CStringData@ATL@@QAEXXZ		; ATL::CStringData::Release
; Function compile flags: /Ogty
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
?Release@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::Release, COMDAT
; _this$ = ecx

; 93   : 		ATLASSERT( nRefs != 0 );
; 94   : 
; 95   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

  00000	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  00003	83 ca ff	 or	 edx, -1
  00006	f0 0f c1 10	 lock	  xadd	 DWORD PTR [eax], edx
  0000a	4a		 dec	 edx
  0000b	85 d2		 test	 edx, edx
  0000d	7f 0a		 jg	 SHORT $L73499

; 96   : 		{
; 97   : 			pStringMgr->Free( this );

  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	8b 10		 mov	 edx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	8b c8		 mov	 ecx, eax
  00016	ff 52 04	 call	 DWORD PTR [edx+4]
$L73499:

; 98   : 		}
; 99   : 	}

  00019	c3		 ret	 0
?Release@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::Release
_TEXT	ENDS
PUBLIC	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ		; ATL::CSimpleStringT<char,0>::operator char const *
; Function compile flags: /Ogty
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::operator char const *, COMDAT
; _this$ = ecx

; 379  : 		return( m_pszData );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 380  : 	}

  00002	c3		 ret	 0
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP		; ATL::CSimpleStringT<char,0>::operator char const *
_TEXT	ENDS
PUBLIC	?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ; ATL::CSimpleStringT<char,0>::Attach
; Function compile flags: /Ogty
;	COMDAT ?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z
_TEXT	SEGMENT
_pData$ = 8						; size = 4
?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::Attach, COMDAT
; _this$ = ecx

; 712  : 		m_pszData = static_cast< PXSTR >( pData->data() );

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _pData$[esp-4]
  00004	83 c0 10	 add	 eax, 16			; 00000010H
  00007	89 01		 mov	 DWORD PTR [ecx], eax

; 713  : 	}

  00009	c2 04 00	 ret	 4
?Attach@?$CSimpleStringT@D$0A@@ATL@@AAEXPAUCStringData@2@@Z ENDP ; ATL::CSimpleStringT<char,0>::Attach
_TEXT	ENDS
PUBLIC	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
; Function compile flags: /Ogty
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetData, COMDAT
; _this$ = ecx

; 731  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 732  : 	}

  00005	c3		 ret	 0
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ENDP ; ATL::CSimpleStringT<char,0>::GetData
_TEXT	ENDS
PUBLIC	?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ; ATL::CSimpleStringT<char,0>::CopyChars
; Function compile flags: /Ogty
;	COMDAT ?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z
_TEXT	SEGMENT
_pchDest$ = 8						; size = 4
_pchSrc$ = 12						; size = 4
_nChars$ = 16						; size = 4
?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CopyChars, COMDAT

; 653  : 		memcpy( pchDest, pchSrc, nChars*sizeof( XCHAR ) );

  00000	8b 4c 24 0c	 mov	 ecx, DWORD PTR _nChars$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 0c	 mov	 esi, DWORD PTR _pchSrc$[esp]
  00009	8b c1		 mov	 eax, ecx
  0000b	57		 push	 edi
  0000c	8b 7c 24 0c	 mov	 edi, DWORD PTR _pchDest$[esp+4]
  00010	c1 e9 02	 shr	 ecx, 2
  00013	f3 a5		 rep movsd
  00015	8b c8		 mov	 ecx, eax
  00017	83 e1 03	 and	 ecx, 3
  0001a	f3 a4		 rep movsb
  0001c	5f		 pop	 edi
  0001d	5e		 pop	 esi

; 654  : 	}

  0001e	c3		 ret	 0
?CopyChars@?$CSimpleStringT@D$0A@@ATL@@SAXPADPBDH@Z ENDP ; ATL::CSimpleStringT<char,0>::CopyChars
_TEXT	ENDS
PUBLIC	?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
; Function compile flags: /Ogty
;	COMDAT ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ
_TEXT	SEGMENT
?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ PROC NEAR ; ATL::CSimpleStringT<char,0>::ThrowMemoryException, COMDAT

; 705  : 		AtlThrow( E_OUTOFMEMORY );

  00000	68 0e 00 07 80	 push	 -2147024882		; 8007000eH
  00005	e8 00 00 00 00	 call	 ?AtlThrow@ATL@@YGXJ@Z	; ATL::AtlThrow
$L108179:
$L108178:
  0000a	cc		 int	 3
?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ENDP ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
_TEXT	ENDS
PUBLIC	??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
; Function compile flags: /Ogty
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ PROC NEAR		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 263  : 		CStringData* pData = GetData();

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 264  : 		pData->Release();

  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L108189
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L108189:

; 265  : 	}

  0001c	c3		 ret	 0
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ ENDP		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
; Function compile flags: /Ogty
;	COMDAT ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z
_TEXT	SEGMENT
_pData$ = 8						; size = 4
?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z PROC NEAR ; ATL::CSimpleStringT<char,0>::CloneData, COMDAT

; 801  : 	{

  00000	56		 push	 esi

; 802  : 		CStringData* pNewData = NULL;
; 803  : 
; 804  : 		IAtlStringMgr* pNewStringMgr = pData->pStringMgr->Clone();

  00001	8b 74 24 08	 mov	 esi, DWORD PTR _pData$[esp]
  00005	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00007	8b 01		 mov	 eax, DWORD PTR [ecx]
  00009	ff 50 10	 call	 DWORD PTR [eax+16]

; 805  : 		if( !pData->IsLocked() && (pNewStringMgr == pData->pStringMgr) )

  0000c	8b 56 0c	 mov	 edx, DWORD PTR [esi+12]
  0000f	85 d2		 test	 edx, edx
  00011	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  00014	7c 11		 jl	 SHORT $L103761
  00016	3b 06		 cmp	 eax, DWORD PTR [esi]
  00018	75 0d		 jne	 SHORT $L103761

; 806  : 		{
; 807  : 			pNewData = pData;

  0001a	8b c6		 mov	 eax, esi

; 808  : 			pNewData->AddRef();

  0001c	ba 01 00 00 00	 mov	 edx, 1
  00021	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00025	5e		 pop	 esi

; 819  : 		}
; 820  : 
; 821  : 		return( pNewData );
; 822  : 	}

  00026	c3		 ret	 0
$L103761:

; 809  : 		}
; 810  : 		else
; 811  : 		{
; 812  : 			pNewData = pNewStringMgr->Allocate( pData->nDataLength, sizeof( XCHAR ) );

  00027	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  0002a	8b 10		 mov	 edx, DWORD PTR [eax]
  0002c	6a 01		 push	 1
  0002e	51		 push	 ecx
  0002f	8b c8		 mov	 ecx, eax
  00031	ff 12		 call	 DWORD PTR [edx]

; 813  : 			if( pNewData == NULL )

  00033	85 c0		 test	 eax, eax
  00035	75 05		 jne	 SHORT $L103764

; 814  : 			{
; 815  : 				ThrowMemoryException();

  00037	e9 00 00 00 00	 jmp	 ?ThrowMemoryException@?$CSimpleStringT@D$0A@@ATL@@KAXXZ ; ATL::CSimpleStringT<char,0>::ThrowMemoryException
$L103764:

; 816  : 			}
; 817  : 			pNewData->nDataLength = pData->nDataLength;

  0003c	8b 56 04	 mov	 edx, DWORD PTR [esi+4]
  0003f	89 50 04	 mov	 DWORD PTR [eax+4], edx

; 818  : 			CopyChars( PXSTR( pNewData->data() ), PCXSTR( pData->data() ), pData->nDataLength+1 );  // Copy '\0'

  00042	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00045	41		 inc	 ecx
  00046	8b d1		 mov	 edx, ecx
  00048	57		 push	 edi
  00049	c1 e9 02	 shr	 ecx, 2
  0004c	83 c6 10	 add	 esi, 16			; 00000010H
  0004f	8d 78 10	 lea	 edi, DWORD PTR [eax+16]
  00052	f3 a5		 rep movsd
  00054	8b ca		 mov	 ecx, edx
  00056	83 e1 03	 and	 ecx, 3
  00059	f3 a4		 rep movsb
  0005b	5f		 pop	 edi
  0005c	5e		 pop	 esi

; 819  : 		}
; 820  : 
; 821  : 		return( pNewData );
; 822  : 	}

  0005d	c3		 ret	 0
?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ENDP ; ATL::CSimpleStringT<char,0>::CloneData
_TEXT	ENDS
PUBLIC	??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 963  : 	}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H
  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L108228
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L108228:
  0001c	c3		 ret	 0
??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_strSrc$ = 8						; size = 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z PROC NEAR	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 218  : 	{
; 219  : 		CStringData* pSrcData = strSrc.GetData();

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _strSrc$[esp-4]
  00004	8b 00		 mov	 eax, DWORD PTR [eax]
  00006	56		 push	 esi
  00007	83 e8 10	 sub	 eax, 16			; 00000010H

; 220  : 		CStringData* pNewData = CloneData( pSrcData );

  0000a	50		 push	 eax
  0000b	8b f1		 mov	 esi, ecx
  0000d	e8 00 00 00 00	 call	 ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData

; 221  : 		Attach( pNewData );

  00012	83 c0 10	 add	 eax, 16			; 00000010H
  00015	89 06		 mov	 DWORD PTR [esi], eax
  00017	83 c4 04	 add	 esp, 4

; 222  : 	}

  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	c2 04 00	 ret	 4
??0?$CSimpleStringT@D$0A@@ATL@@QAE@ABV01@@Z ENDP	; ATL::CSimpleStringT<char,0>::CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	?SendCS_SYSTEMMSG_ACK@CTPlayer@@QAEXEGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EE0E@Z ; CTPlayer::SendCS_SYSTEMMSG_ACK
EXTRN	??6CPacket@@QAEAAV0@PBD@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
xdata$x	SEGMENT
$T108439 DD	0ffffffffH
	DD	FLAT:$L108254
	DD	00H
	DD	FLAT:$L108255
	DD	01H
	DD	FLAT:$L108256
	DD	02H
	DD	FLAT:$L108257
$T108430 DD	019930520H
	DD	04H
	DD	FLAT:$T108439
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\trelaysvr\cssender.cpp
xdata$x	ENDS
;	COMDAT ?SendCS_SYSTEMMSG_ACK@CTPlayer@@QAEXEGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EE0E@Z
_TEXT	SEGMENT
$T108247 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bType$ = 8						; size = 1
_wLocalID$ = 12						; size = 2
_dwSecond$ = 16						; size = 4
_strWinner$ = 20					; size = 4
_strLoser$ = 24						; size = 4
_bHour$ = 28						; size = 1
_bMinute$ = 32						; size = 1
_strPresent$ = 36					; size = 4
_bSelect$ = 40						; size = 1
?SendCS_SYSTEMMSG_ACK@CTPlayer@@QAEXEGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EE0E@Z PROC NEAR ; CTPlayer::SendCS_SYSTEMMSG_ACK, COMDAT
; _this$ = ecx

; 69   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCS_SYSTEMMSG_ACK@CTPlayer@@QAEXEGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EE0E@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b e9		 mov	 ebp, ecx
  0001c	bb 02 00 00 00	 mov	 ebx, 2

; 70   : 	//if((bType == SM_BATTLE_OPENGATE ||
; 71   : 	//	bType == SM_BATTLE_BOSSDIE ) &&
; 72   : 	//	(!m_pLocal || m_pLocal->m_wLocal != wLocalID))
; 73   : 	//	return;
; 74   : 
; 75   : 	CPacket * pMSG = new CPacket();

  00021	6a 1c		 push	 28			; 0000001cH
  00023	89 5c 24 20	 mov	 DWORD PTR __$EHRec$[esp+44], ebx
  00027	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002c	83 c4 04	 add	 esp, 4
  0002f	89 44 24 10	 mov	 DWORD PTR $T108247[esp+32], eax
  00033	85 c0		 test	 eax, eax
  00035	c6 44 24 1c 03	 mov	 BYTE PTR __$EHRec$[esp+40], 3
  0003a	74 0b		 je	 SHORT $L108248
  0003c	8b c8		 mov	 ecx, eax
  0003e	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00043	8b f0		 mov	 esi, eax
  00045	eb 02		 jmp	 SHORT $L108249
$L108248:
  00047	33 f6		 xor	 esi, esi
$L108249:
  00049	88 5c 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], bl

; 76   : 	pMSG->SetID(CS_SYSTEMMSG_ACK)
; 77   : 		<< bType;

  0004d	8b 5c 24 24	 mov	 ebx, DWORD PTR _bType$[esp+28]
  00051	53		 push	 ebx
  00052	68 d1 51 00 00	 push	 20945			; 000051d1H
  00057	8b ce		 mov	 ecx, esi
  00059	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0005e	8b c8		 mov	 ecx, eax
  00060	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 78   : 
; 79   : 	switch(bType)

  00065	0f b6 c3	 movzx	 eax, bl
  00068	48		 dec	 eax
  00069	83 f8 09	 cmp	 eax, 9
  0006c	0f 87 92 00 00
	00		 ja	 $L108431
  00072	8b 5c 24 34	 mov	 ebx, DWORD PTR _strLoser$[esp+28]
  00076	8b 7c 24 30	 mov	 edi, DWORD PTR _strWinner$[esp+28]
  0007a	ff 24 85 00 00
	00 00		 jmp	 DWORD PTR $L108438[eax*4]
$L107489:

; 80   : 	{
; 81   : 	case SM_BATTLE_NORMAL:
; 82   : 	case SM_BATTLE_START:
; 83   : 	case SM_BATTLE_BOSSDIE:
; 84   : 	case SM_BATTLE_OPENGATE:
; 85   : 		break;
; 86   : 	case SM_BATTLE_START_ALARM:
; 87   : 	case SM_BATTLE_END_ALARM:
; 88   : 	case SM_BATTLE_PEACE:
; 89   : 		(*pMSG)
; 90   : 			<< dwSecond;

  00081	8b 44 24 2c	 mov	 eax, DWORD PTR _dwSecond$[esp+28]
  00085	50		 push	 eax

; 91   : 		break;

  00086	eb 49		 jmp	 SHORT $L108433
$L107490:

; 92   : 	case SM_DUAL_WIN:
; 93   : 		(*pMSG)
; 94   : 			<< strWinner
; 95   : 			<< strLoser;

  00088	53		 push	 ebx
  00089	57		 push	 edi
  0008a	8b ce		 mov	 ecx, esi
  0008c	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00091	8b c8		 mov	 ecx, eax
  00093	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 96   : 		break;

  00098	eb 3e		 jmp	 SHORT $L107485
$L107491:

; 97   : 	case SM_EVENT_QUARTER:
; 98   : 		(*pMSG)
; 99   : 			<< bHour
; 100  : 			<< bMinute
; 101  : 			<< strPresent
; 102  : 			<< bSelect;

  0009a	8b 4c 24 44	 mov	 ecx, DWORD PTR _bSelect$[esp+28]
  0009e	8b 54 24 40	 mov	 edx, DWORD PTR _strPresent$[esp+28]
  000a2	8b 44 24 3c	 mov	 eax, DWORD PTR _bMinute$[esp+28]
  000a6	51		 push	 ecx
  000a7	8b 4c 24 3c	 mov	 ecx, DWORD PTR _bHour$[esp+32]
  000ab	52		 push	 edx
  000ac	50		 push	 eax
  000ad	51		 push	 ecx
  000ae	8b ce		 mov	 ecx, esi
  000b0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000b5	8b c8		 mov	 ecx, eax
  000b7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000bc	8b c8		 mov	 ecx, eax
  000be	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000c3	8b c8		 mov	 ecx, eax
  000c5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<

; 103  : 		break;

  000ca	eb 0c		 jmp	 SHORT $L107485
$L107492:

; 104  : 	case SM_CHAT_BAN:
; 105  : 		(*pMSG)
; 106  : 			<< dwSecond;

  000cc	8b 54 24 2c	 mov	 edx, DWORD PTR _dwSecond$[esp+28]
  000d0	52		 push	 edx
$L108433:
  000d1	8b ce		 mov	 ecx, esi
  000d3	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
$L107485:

; 111  : 	}
; 112  : 
; 113  : 	Say(pMSG);

  000d8	8b 45 00	 mov	 eax, DWORD PTR [ebp]
  000db	56		 push	 esi
  000dc	8b cd		 mov	 ecx, ebp
  000de	ff 10		 call	 DWORD PTR [eax]

; 114  : }

  000e0	8d 47 f0	 lea	 eax, DWORD PTR [edi-16]
  000e3	c6 44 24 1c 01	 mov	 BYTE PTR __$EHRec$[esp+40], 1
  000e8	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  000eb	83 ca ff	 or	 edx, -1
  000ee	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000f2	4a		 dec	 edx
  000f3	85 d2		 test	 edx, edx
  000f5	7f 08		 jg	 SHORT $L108373
  000f7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000f9	8b 11		 mov	 edx, DWORD PTR [ecx]
  000fb	50		 push	 eax
  000fc	ff 52 04	 call	 DWORD PTR [edx+4]
$L108373:
  000ff	8d 43 f0	 lea	 eax, DWORD PTR [ebx-16]
  00102	eb 36		 jmp	 SHORT $L108437
$L108431:

; 107  : 		break;
; 108  : 	default:
; 109  : 		delete pMSG;

  00104	85 f6		 test	 esi, esi
  00106	74 08		 je	 SHORT $L108252
  00108	8b 06		 mov	 eax, DWORD PTR [esi]
  0010a	6a 01		 push	 1
  0010c	8b ce		 mov	 ecx, esi
  0010e	ff 10		 call	 DWORD PTR [eax]
$L108252:

; 110  : 		return;

  00110	8b 44 24 30	 mov	 eax, DWORD PTR _strWinner$[esp+28]
  00114	83 c0 f0	 add	 eax, -16		; fffffff0H
  00117	c6 44 24 1c 01	 mov	 BYTE PTR __$EHRec$[esp+40], 1
  0011c	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0011f	83 ca ff	 or	 edx, -1
  00122	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00126	4a		 dec	 edx
  00127	85 d2		 test	 edx, edx
  00129	7f 08		 jg	 SHORT $L108293
  0012b	8b 08		 mov	 ecx, DWORD PTR [eax]
  0012d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0012f	50		 push	 eax
  00130	ff 52 04	 call	 DWORD PTR [edx+4]
$L108293:
  00133	8b 44 24 34	 mov	 eax, DWORD PTR _strLoser$[esp+28]
  00137	83 c0 f0	 add	 eax, -16		; fffffff0H
$L108437:
  0013a	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  0013f	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00142	83 ca ff	 or	 edx, -1
  00145	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00149	4a		 dec	 edx
  0014a	85 d2		 test	 edx, edx
  0014c	7f 08		 jg	 SHORT $L108320
  0014e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00150	8b 11		 mov	 edx, DWORD PTR [ecx]
  00152	50		 push	 eax
  00153	ff 52 04	 call	 DWORD PTR [edx+4]
$L108320:
  00156	8b 44 24 40	 mov	 eax, DWORD PTR _strPresent$[esp+28]
  0015a	83 c0 f0	 add	 eax, -16		; fffffff0H
  0015d	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  00165	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00168	83 ca ff	 or	 edx, -1
  0016b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0016f	4a		 dec	 edx
  00170	85 d2		 test	 edx, edx
  00172	7f 08		 jg	 SHORT $L108346
  00174	8b 08		 mov	 ecx, DWORD PTR [eax]
  00176	8b 11		 mov	 edx, DWORD PTR [ecx]
  00178	50		 push	 eax
  00179	ff 52 04	 call	 DWORD PTR [edx+4]
$L108346:

; 114  : }

  0017c	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  00180	5f		 pop	 edi
  00181	5e		 pop	 esi
  00182	5d		 pop	 ebp
  00183	5b		 pop	 ebx
  00184	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0018b	83 c4 10	 add	 esp, 16			; 00000010H
  0018e	c2 24 00	 ret	 36			; 00000024H
  00191	8d 49 00	 npad	 3
$L108438:
  00194	00 00 00 00	 DD	 $L107485
  00198	00 00 00 00	 DD	 $L107485
  0019c	00 00 00 00	 DD	 $L107489
  001a0	00 00 00 00	 DD	 $L107489
  001a4	00 00 00 00	 DD	 $L107489
  001a8	00 00 00 00	 DD	 $L107485
  001ac	00 00 00 00	 DD	 $L107485
  001b0	00 00 00 00	 DD	 $L107490
  001b4	00 00 00 00	 DD	 $L107491
  001b8	00 00 00 00	 DD	 $L107492
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L108254:
  00000	8d 4d 20	 lea	 ecx, DWORD PTR _strPresent$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L108255:
  00008	8d 4d 14	 lea	 ecx, DWORD PTR _strLoser$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L108256:
  00010	8d 4d 10	 lea	 ecx, DWORD PTR _strWinner$[ebp-4]
  00013	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L108257:
  00018	8b 45 f0	 mov	 eax, DWORD PTR $T108247[ebp]
  0001b	50		 push	 eax
  0001c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00021	59		 pop	 ecx
  00022	c3		 ret	 0
__ehhandler$?SendCS_SYSTEMMSG_ACK@CTPlayer@@QAEXEGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EE0E@Z:
  00023	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T108430
  00028	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCS_SYSTEMMSG_ACK@CTPlayer@@QAEXEGKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0EE0E@Z ENDP ; CTPlayer::SendCS_SYSTEMMSG_ACK
PUBLIC	??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@ABV01@@Z ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@ABV01@@Z
_TEXT	SEGMENT
_strSrc$ = 8						; size = 4
??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@ABV01@@Z PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 814  : 	{

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _strSrc$[esp-4]
  00004	8b 00		 mov	 eax, DWORD PTR [eax]
  00006	56		 push	 esi
  00007	83 e8 10	 sub	 eax, 16			; 00000010H
  0000a	50		 push	 eax
  0000b	8b f1		 mov	 esi, ecx
  0000d	e8 00 00 00 00	 call	 ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
  00012	83 c0 10	 add	 eax, 16			; 00000010H
  00015	89 06		 mov	 DWORD PTR [esi], eax
  00017	83 c4 04	 add	 esp, 4

; 815  : 	}

  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	c2 04 00	 ret	 4
??0?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@ABV01@@Z ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	?SendCS_CHAT_ACK@CTPlayer@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ; CTPlayer::SendCS_CHAT_ACK
EXTRN	?CheckProtected@CTPlayer@@QAEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z:NEAR ; CTPlayer::CheckProtected
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T108635 DD	0ffffffffH
	DD	FLAT:$L108476
	DD	00H
	DD	FLAT:$L108477
	DD	01H
	DD	FLAT:$L108479
$T108632 DD	019930520H
	DD	03H
	DD	FLAT:$T108635
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\trelaysvr\cssender.cpp
xdata$x	ENDS
;	COMDAT ?SendCS_CHAT_ACK@CTPlayer@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
_TEXT	SEGMENT
$T108473 = -16						; size = 4
$T108471 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_bGroup$ = 8						; size = 1
_dwSenderID$ = 12					; size = 4
_strName$ = 16						; size = 4
_strTalk$ = 20						; size = 4
?SendCS_CHAT_ACK@CTPlayer@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z PROC NEAR ; CTPlayer::SendCS_CHAT_ACK, COMDAT
; _this$ = ecx

; 45   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCS_CHAT_ACK@CTPlayer@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	53		 push	 ebx
  00017	55		 push	 ebp
  00018	56		 push	 esi
  00019	57		 push	 edi
  0001a	8b f9		 mov	 edi, ecx

; 46   : 	if(!CheckProtected(strName, PROTECTED_CHAT))

  0001c	8b 5c 24 2c	 mov	 ebx, DWORD PTR _strName$[esp+28]
  00020	6a 01		 push	 1
  00022	51		 push	 ecx
  00023	8d 73 f0	 lea	 esi, DWORD PTR [ebx-16]
  00026	89 64 24 18	 mov	 DWORD PTR $T108471[esp+40], esp
  0002a	8b ec		 mov	 ebp, esp
  0002c	56		 push	 esi
  0002d	c7 44 24 28 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+52], 1
  00035	e8 00 00 00 00	 call	 ?CloneData@?$CSimpleStringT@D$0A@@ATL@@CAPAUCStringData@2@PAU32@@Z ; ATL::CSimpleStringT<char,0>::CloneData
  0003a	83 c0 10	 add	 eax, 16			; 00000010H
  0003d	83 c4 04	 add	 esp, 4
  00040	8b cf		 mov	 ecx, edi
  00042	89 45 00	 mov	 DWORD PTR [ebp], eax
  00045	e8 00 00 00 00	 call	 ?CheckProtected@CTPlayer@@QAEEV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@E@Z ; CTPlayer::CheckProtected
  0004a	84 c0		 test	 al, al
  0004c	75 24		 jne	 SHORT $L107461

; 47   : 		return;

  0004e	88 44 24 1c	 mov	 BYTE PTR __$EHRec$[esp+40], al
  00052	8d 46 0c	 lea	 eax, DWORD PTR [esi+12]
  00055	83 c9 ff	 or	 ecx, -1
  00058	f0 0f c1 08	 lock	  xadd	 DWORD PTR [eax], ecx
  0005c	49		 dec	 ecx
  0005d	85 c9		 test	 ecx, ecx
  0005f	0f 8f 91 00 00
	00		 jg	 $L108602
  00065	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00067	8b 11		 mov	 edx, DWORD PTR [ecx]
  00069	56		 push	 esi
  0006a	ff 52 04	 call	 DWORD PTR [edx+4]
  0006d	e9 84 00 00 00	 jmp	 $L108602
$L107461:

; 48   : 
; 49   : 	CPacket* pMSG = new CPacket();

  00072	6a 1c		 push	 28			; 0000001cH
  00074	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00079	83 c4 04	 add	 esp, 4
  0007c	89 44 24 10	 mov	 DWORD PTR $T108473[esp+32], eax
  00080	85 c0		 test	 eax, eax
  00082	c6 44 24 1c 02	 mov	 BYTE PTR __$EHRec$[esp+40], 2
  00087	74 0b		 je	 SHORT $L108474
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00090	8b e8		 mov	 ebp, eax
  00092	eb 02		 jmp	 SHORT $L108475
$L108474:
  00094	33 ed		 xor	 ebp, ebp
$L108475:

; 50   : 
; 51   : 	pMSG->SetID(CS_CHAT_ACK)
; 52   : 		<< bGroup
; 53   : 		<< dwSenderID
; 54   : 		<< strName
; 55   : 		<< strTalk;

  00096	8b 44 24 30	 mov	 eax, DWORD PTR _strTalk$[esp+28]
  0009a	8b 4c 24 28	 mov	 ecx, DWORD PTR _dwSenderID$[esp+28]
  0009e	8b 54 24 24	 mov	 edx, DWORD PTR _bGroup$[esp+28]
  000a2	50		 push	 eax
  000a3	53		 push	 ebx
  000a4	51		 push	 ecx
  000a5	52		 push	 edx
  000a6	68 75 50 00 00	 push	 20597			; 00005075H
  000ab	8b cd		 mov	 ecx, ebp
  000ad	c6 44 24 30 01	 mov	 BYTE PTR __$EHRec$[esp+60], 1
  000b2	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  000b7	8b c8		 mov	 ecx, eax
  000b9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@E@Z	; CPacket::operator<<
  000be	8b c8		 mov	 ecx, eax
  000c0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000c5	8b c8		 mov	 ecx, eax
  000c7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000cc	8b c8		 mov	 ecx, eax
  000ce	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<

; 56   : 
; 57   : 	Say(pMSG);

  000d3	8b 07		 mov	 eax, DWORD PTR [edi]
  000d5	55		 push	 ebp
  000d6	8b cf		 mov	 ecx, edi
  000d8	ff 10		 call	 DWORD PTR [eax]

; 58   : }

  000da	c6 44 24 1c 00	 mov	 BYTE PTR __$EHRec$[esp+40], 0
  000df	8d 4e 0c	 lea	 ecx, DWORD PTR [esi+12]
  000e2	83 ca ff	 or	 edx, -1
  000e5	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  000e9	4a		 dec	 edx
  000ea	85 d2		 test	 edx, edx
  000ec	7f 08		 jg	 SHORT $L108602
  000ee	8b 0e		 mov	 ecx, DWORD PTR [esi]
  000f0	8b 01		 mov	 eax, DWORD PTR [ecx]
  000f2	56		 push	 esi
  000f3	ff 50 04	 call	 DWORD PTR [eax+4]
$L108602:
  000f6	8b 44 24 30	 mov	 eax, DWORD PTR _strTalk$[esp+28]
  000fa	83 c0 f0	 add	 eax, -16		; fffffff0H
  000fd	c7 44 24 1c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+40], -1
  00105	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00108	83 ca ff	 or	 edx, -1
  0010b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0010f	4a		 dec	 edx
  00110	85 d2		 test	 edx, edx
  00112	7f 08		 jg	 SHORT $L108629
  00114	8b 08		 mov	 ecx, DWORD PTR [eax]
  00116	8b 11		 mov	 edx, DWORD PTR [ecx]
  00118	50		 push	 eax
  00119	ff 52 04	 call	 DWORD PTR [edx+4]
$L108629:
  0011c	8b 4c 24 14	 mov	 ecx, DWORD PTR __$EHRec$[esp+32]
  00120	5f		 pop	 edi
  00121	5e		 pop	 esi
  00122	5d		 pop	 ebp
  00123	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0012a	5b		 pop	 ebx
  0012b	83 c4 10	 add	 esp, 16			; 00000010H
  0012e	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L108476:
  00000	8d 4d 10	 lea	 ecx, DWORD PTR _strTalk$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L108477:
  00008	8d 4d 0c	 lea	 ecx, DWORD PTR _strName$[ebp-4]
  0000b	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L108479:
  00010	8b 45 f0	 mov	 eax, DWORD PTR $T108473[ebp]
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00019	59		 pop	 ecx
  0001a	c3		 ret	 0
__ehhandler$?SendCS_CHAT_ACK@CTPlayer@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z:
  0001b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T108632
  00020	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCS_CHAT_ACK@CTPlayer@@QAEXEKV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@0@Z ENDP ; CTPlayer::SendCS_CHAT_ACK
END
