; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\Sender.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ?SendCT_SERVICEMONITOR_REQ@CTPatchSession@@QAEXKKKK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCT_PREPATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCT_PATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?SendCT_NEWPATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?size@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??A?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAEAAUtagPATCHFILE@@I@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?begin@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Diterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBEAAUtagPATCHFILE@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Hiterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0iterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAE@PAUtagPATCHFILE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Yiterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??Dconst_iterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBEABUtagPATCHFILE@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??0const_iterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAE@PAUtagPATCHFILE@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?SendCT_SERVICEMONITOR_REQ@CTPatchSession@@QAEXKKKK@Z ; CTPatchSession::SendCT_SERVICEMONITOR_REQ
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	??0CPacket@@QAE@XZ:NEAR				; CPacket::CPacket
EXTRN	?SetID@CPacket@@QAEAAV1@G@Z:NEAR		; CPacket::SetID
EXTRN	??6CPacket@@QAEAAV0@K@Z:NEAR			; CPacket::operator<<
EXTRN	??6CPacket@@QAEAAV0@_J@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tpatchsvr\sender.cpp
xdata$x	SEGMENT
$T93464	DD	0ffffffffH
	DD	FLAT:$L93455
$T93459	DD	019930520H
	DD	01H
	DD	FLAT:$T93464
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
xdata$x	ENDS
;	COMDAT ?SendCT_SERVICEMONITOR_REQ@CTPatchSession@@QAEXKKKK@Z
_TEXT	SEGMENT
$T93452 = -16						; size = 4
__$EHRec$ = -12						; size = 12
_dwTick$ = 8						; size = 4
_dwCurSession$ = 12					; size = 4
_dwCurUser$ = 16					; size = 4
_dwActiveUser$ = 20					; size = 4
?SendCT_SERVICEMONITOR_REQ@CTPatchSession@@QAEXKKKK@Z PROC NEAR ; CTPatchSession::SendCT_SERVICEMONITOR_REQ, COMDAT
; _this$ = ecx

; 5    : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCT_SERVICEMONITOR_REQ@CTPatchSession@@QAEXKKKK@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	51		 push	 ecx
  00016	56		 push	 esi
  00017	57		 push	 edi

; 6    : 	CPacket * pMsg = new CPacket();

  00018	6a 1c		 push	 28			; 0000001cH
  0001a	8b f9		 mov	 edi, ecx
  0001c	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00021	83 c4 04	 add	 esp, 4
  00024	89 44 24 08	 mov	 DWORD PTR $T93452[esp+24], eax
  00028	85 c0		 test	 eax, eax
  0002a	c7 44 24 14 00
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+32], 0
  00032	74 0b		 je	 SHORT $L93453
  00034	8b c8		 mov	 ecx, eax
  00036	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  0003b	8b f0		 mov	 esi, eax
  0003d	eb 02		 jmp	 SHORT $L93454
$L93453:
  0003f	33 f6		 xor	 esi, esi
$L93454:

; 7    : 	pMsg->SetID(CT_SERVICEMONITOR_REQ)
; 8    : 		<< INT64(0)
; 9    : 		<< dwTick
; 10   : 		<< dwCurSession
; 11   : 		<< dwCurUser
; 12   : 		<< dwActiveUser;

  00041	8b 44 24 28	 mov	 eax, DWORD PTR _dwActiveUser$[esp+20]
  00045	8b 4c 24 24	 mov	 ecx, DWORD PTR _dwCurUser$[esp+20]
  00049	8b 54 24 20	 mov	 edx, DWORD PTR _dwCurSession$[esp+20]
  0004d	50		 push	 eax
  0004e	8b 44 24 20	 mov	 eax, DWORD PTR _dwTick$[esp+24]
  00052	51		 push	 ecx
  00053	52		 push	 edx
  00054	50		 push	 eax
  00055	6a 00		 push	 0
  00057	6a 00		 push	 0
  00059	68 1d 60 00 00	 push	 24605			; 0000601dH
  0005e	8b ce		 mov	 ecx, esi
  00060	c7 44 24 30 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+60], -1
  00068	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0006d	8b c8		 mov	 ecx, eax
  0006f	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@_J@Z ; CPacket::operator<<
  00074	8b c8		 mov	 ecx, eax
  00076	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00082	8b c8		 mov	 ecx, eax
  00084	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00089	8b c8		 mov	 ecx, eax
  0008b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<

; 13   : 
; 14   : 	Say(pMsg);

  00090	8b 17		 mov	 edx, DWORD PTR [edi]
  00092	56		 push	 esi
  00093	8b cf		 mov	 ecx, edi
  00095	ff 12		 call	 DWORD PTR [edx]

; 15   : }

  00097	8b 4c 24 0c	 mov	 ecx, DWORD PTR __$EHRec$[esp+24]
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  000a4	83 c4 10	 add	 esp, 16			; 00000010H
  000a7	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L93455:
  00000	8b 45 f0	 mov	 eax, DWORD PTR $T93452[ebp]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
__ehhandler$?SendCT_SERVICEMONITOR_REQ@CTPatchSession@@QAEXKKKK@Z:
  0000b	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T93459
  00010	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCT_SERVICEMONITOR_REQ@CTPatchSession@@QAEXKKKK@Z ENDP ; CTPatchSession::SendCT_SERVICEMONITOR_REQ
PUBLIC	??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ		; ATL::CSimpleStringT<char,0>::operator char const *
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ
_TEXT	SEGMENT
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ PROC NEAR	; ATL::CSimpleStringT<char,0>::operator char const *, COMDAT
; _this$ = ecx

; 379  : 		return( m_pszData );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 380  : 	}

  00002	c3		 ret	 0
??B?$CSimpleStringT@D$0A@@ATL@@QBEPBDXZ ENDP		; ATL::CSimpleStringT<char,0>::operator char const *
_TEXT	ENDS
PUBLIC	?size@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBEIXZ ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::size
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?size@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
?size@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBEIXZ PROC NEAR ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::size, COMDAT
; _this$ = ecx

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	85 c0		 test	 eax, eax
  00005	75 01		 jne	 SHORT $L93474

; 517  : 		}

  00007	c3		 ret	 0
$L93474:

; 516  : 		return (_Myfirst == 0 ? 0 : _Mylast - _Myfirst);

  00008	8b 49 08	 mov	 ecx, DWORD PTR [ecx+8]
  0000b	2b c8		 sub	 ecx, eax
  0000d	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  00012	f7 e9		 imul	 ecx
  00014	c1 fa 03	 sar	 edx, 3
  00017	8b c2		 mov	 eax, edx
  00019	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  0001c	03 c2		 add	 eax, edx

; 517  : 		}

  0001e	c3		 ret	 0
?size@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBEIXZ ENDP ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::size
_TEXT	ENDS
PUBLIC	?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ; ATL::CSimpleStringT<char,0>::GetData
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ
_TEXT	SEGMENT
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ PROC NEAR ; ATL::CSimpleStringT<char,0>::GetData, COMDAT
; _this$ = ecx

; 731  : 		return( reinterpret_cast< CStringData* >( m_pszData )-1 );

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 732  : 	}

  00005	c3		 ret	 0
?GetData@?$CSimpleStringT@D$0A@@ATL@@ABEPAUCStringData@2@XZ ENDP ; ATL::CSimpleStringT<char,0>::GetData
_TEXT	ENDS
PUBLIC	??Yiterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAEAAV012@H@Z ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::iterator::operator+=
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Yiterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAEAAV012@H@Z
_TEXT	SEGMENT
__Off$ = 8						; size = 4
??Yiterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAEAAV012@H@Z PROC NEAR ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::iterator::operator+=, COMDAT
; _this$ = ecx

; 255  : 			{	// increment by integer

  00000	8b c1		 mov	 eax, ecx

; 256  : 			this->_Myptr += _Off;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Off$[esp-4]
  00006	8b 10		 mov	 edx, DWORD PTR [eax]
  00008	8d 0c 89	 lea	 ecx, DWORD PTR [ecx+ecx*4]
  0000b	c1 e1 02	 shl	 ecx, 2
  0000e	03 d1		 add	 edx, ecx
  00010	89 10		 mov	 DWORD PTR [eax], edx

; 257  : 			return (*this);
; 258  : 			}

  00012	c2 04 00	 ret	 4
??Yiterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAEAAV012@H@Z ENDP ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::iterator::operator+=
_TEXT	ENDS
PUBLIC	??Dconst_iterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBEABUtagPATCHFILE@@XZ ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::const_iterator::operator*
; Function compile flags: /Ogty
;	COMDAT ??Dconst_iterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBEABUtagPATCHFILE@@XZ
_TEXT	SEGMENT
??Dconst_iterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBEABUtagPATCHFILE@@XZ PROC NEAR ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::const_iterator::operator*, COMDAT
; _this$ = ecx

; 80   : 
; 81   : 
; 82   : 			return (*_Myptr);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 83   : 			}

  00002	c3		 ret	 0
??Dconst_iterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBEABUtagPATCHFILE@@XZ ENDP ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::const_iterator::operator*
_TEXT	ENDS
PUBLIC	??0const_iterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAE@PAUtagPATCHFILE@@@Z ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::const_iterator::const_iterator
; Function compile flags: /Ogty
;	COMDAT ??0const_iterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAE@PAUtagPATCHFILE@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0const_iterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAE@PAUtagPATCHFILE@@@Z PROC NEAR ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::const_iterator::const_iterator, COMDAT
; _this$ = ecx

; 73   : 		const_iterator(_Tptr _Ptr)

  00000	8b c1		 mov	 eax, ecx

; 74   : 			{	// construct with pointer _Ptr
; 75   : 			_Myptr = _Ptr;

  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 76   : 			}

  00008	c2 04 00	 ret	 4
??0const_iterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAE@PAUtagPATCHFILE@@@Z ENDP ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::const_iterator::const_iterator
_TEXT	ENDS
PUBLIC	?Release@CStringData@ATL@@QAEXXZ		; ATL::CStringData::Release
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
;	COMDAT ?Release@CStringData@ATL@@QAEXXZ
_TEXT	SEGMENT
?Release@CStringData@ATL@@QAEXXZ PROC NEAR		; ATL::CStringData::Release, COMDAT
; _this$ = ecx

; 93   : 		ATLASSERT( nRefs != 0 );
; 94   : 
; 95   : 		if( _InterlockedDecrement( &nRefs ) <= 0 )

  00000	8d 41 0c	 lea	 eax, DWORD PTR [ecx+12]
  00003	83 ca ff	 or	 edx, -1
  00006	f0 0f c1 10	 lock	  xadd	 DWORD PTR [eax], edx
  0000a	4a		 dec	 edx
  0000b	85 d2		 test	 edx, edx
  0000d	7f 0a		 jg	 SHORT $L73499

; 96   : 		{
; 97   : 			pStringMgr->Free( this );

  0000f	8b 01		 mov	 eax, DWORD PTR [ecx]
  00011	8b 10		 mov	 edx, DWORD PTR [eax]
  00013	51		 push	 ecx
  00014	8b c8		 mov	 ecx, eax
  00016	ff 52 04	 call	 DWORD PTR [edx+4]
$L73499:

; 98   : 		}
; 99   : 	}

  00019	c3		 ret	 0
?Release@CStringData@ATL@@QAEXXZ ENDP			; ATL::CStringData::Release
_TEXT	ENDS
PUBLIC	??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
; Function compile flags: /Ogty
;	COMDAT ??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ PROC NEAR		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>, COMDAT
; _this$ = ecx

; 263  : 		CStringData* pData = GetData();

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H

; 264  : 		pData->Release();

  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L93500
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L93500:

; 265  : 	}

  0001c	c3		 ret	 0
??1?$CSimpleStringT@D$0A@@ATL@@QAE@XZ ENDP		; ATL::CSimpleStringT<char,0>::~CSimpleStringT<char,0>
_TEXT	ENDS
PUBLIC	??Diterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBEAAUtagPATCHFILE@@XZ ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::iterator::operator*
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ??Diterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBEAAUtagPATCHFILE@@XZ
_TEXT	SEGMENT
??Diterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBEAAUtagPATCHFILE@@XZ PROC NEAR ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::iterator::operator*, COMDAT
; _this$ = ecx

; 220  : 			return ((reference)**(const_iterator *)this);

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]

; 221  : 			}

  00002	c3		 ret	 0
??Diterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBEAAUtagPATCHFILE@@XZ ENDP ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::iterator::operator*
_TEXT	ENDS
PUBLIC	??Hiterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBE?AV012@H@Z ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::iterator::operator+
; Function compile flags: /Ogty
;	COMDAT ??Hiterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBE?AV012@H@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Off$ = 12						; size = 4
??Hiterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBE?AV012@H@Z PROC NEAR ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::iterator::operator+, COMDAT
; _this$ = ecx

; 262  : 			iterator _Tmp = *this;
; 263  : 			return (_Tmp += _Off);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR __Off$[esp-4]
  00004	8b 09		 mov	 ecx, DWORD PTR [ecx]
  00006	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  00009	8d 14 81	 lea	 edx, DWORD PTR [ecx+eax*4]
  0000c	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00010	89 10		 mov	 DWORD PTR [eax], edx

; 264  : 			}

  00012	c2 08 00	 ret	 8
??Hiterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QBE?AV012@H@Z ENDP ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::iterator::operator+
_TEXT	ENDS
PUBLIC	??0iterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAE@PAUtagPATCHFILE@@@Z ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::iterator::iterator
; Function compile flags: /Ogty
;	COMDAT ??0iterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAE@PAUtagPATCHFILE@@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??0iterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAE@PAUtagPATCHFILE@@@Z PROC NEAR ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::iterator::iterator, COMDAT
; _this$ = ecx

; 215  : 			{	// construct with pointer _Ptr

  00000	8b c1		 mov	 eax, ecx
  00002	8b 4c 24 04	 mov	 ecx, DWORD PTR __Ptr$[esp-4]
  00006	89 08		 mov	 DWORD PTR [eax], ecx

; 216  : 			}

  00008	c2 04 00	 ret	 4
??0iterator@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAE@PAUtagPATCHFILE@@@Z ENDP ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::iterator::iterator
_TEXT	ENDS
PUBLIC	??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\cstringt.h
;	COMDAT ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ
_TEXT	SEGMENT
??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ PROC NEAR ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >, COMDAT
; _this$ = ecx

; 963  : 	}

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	83 e8 10	 sub	 eax, 16			; 00000010H
  00005	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00008	83 ca ff	 or	 edx, -1
  0000b	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0000f	4a		 dec	 edx
  00010	85 d2		 test	 edx, edx
  00012	7f 08		 jg	 SHORT $L93538
  00014	8b 08		 mov	 ecx, DWORD PTR [eax]
  00016	8b 11		 mov	 edx, DWORD PTR [ecx]
  00018	50		 push	 eax
  00019	ff 52 04	 call	 DWORD PTR [edx+4]
$L93538:
  0001c	c3		 ret	 0
??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ENDP ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
_TEXT	ENDS
PUBLIC	?begin@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAE?AViterator@12@XZ ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::begin
; Function compile flags: /Ogty
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\include\vector
;	COMDAT ?begin@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAE?AViterator@12@XZ
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
?begin@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAE?AViterator@12@XZ PROC NEAR ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::begin, COMDAT
; _this$ = ecx

; 463  : 		return (iterator(_Myfirst));

  00000	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00003	8b 44 24 04	 mov	 eax, DWORD PTR ___$ReturnUdt$[esp-4]
  00007	89 08		 mov	 DWORD PTR [eax], ecx

; 464  : 		}

  00009	c2 04 00	 ret	 4
?begin@?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAE?AViterator@12@XZ ENDP ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::begin
_TEXT	ENDS
PUBLIC	??A?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAEAAUtagPATCHFILE@@I@Z ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::operator[]
; Function compile flags: /Ogty
;	COMDAT ??A?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAEAAUtagPATCHFILE@@I@Z
_TEXT	SEGMENT
__Pos$ = 8						; size = 4
??A?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAEAAUtagPATCHFILE@@I@Z PROC NEAR ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::operator[], COMDAT
; _this$ = ecx

; 555  : 		return (*(begin() + _Pos));

  00000	8b 44 24 04	 mov	 eax, DWORD PTR __Pos$[esp-4]
  00004	8b 49 04	 mov	 ecx, DWORD PTR [ecx+4]
  00007	8d 04 80	 lea	 eax, DWORD PTR [eax+eax*4]
  0000a	8d 04 81	 lea	 eax, DWORD PTR [ecx+eax*4]

; 556  : 		}

  0000d	c2 04 00	 ret	 4
??A?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@QAEAAUtagPATCHFILE@@I@Z ENDP ; std::vector<tagPATCHFILE,std::allocator<tagPATCHFILE> >::operator[]
_TEXT	ENDS
PUBLIC	?SendCT_PREPATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@@Z ; CTPatchSession::SendCT_PREPATCH_ACK
EXTRN	??6CPacket@@QAEAAV0@PBD@Z:NEAR			; CPacket::operator<<
EXTRN	??6CPacket@@QAEAAV0@G@Z:NEAR			; CPacket::operator<<
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T93876	DD	0ffffffffH
	DD	FLAT:$L93596
	DD	00H
	DD	FLAT:$L93597
$T93871	DD	019930520H
	DD	02H
	DD	FLAT:$T93876
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tpatchsvr\sender.cpp
xdata$x	ENDS
;	COMDAT ?SendCT_PREPATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@@Z
_TEXT	SEGMENT
$T93593 = -20						; size = 4
$T93592 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strFTP$ = 8						; size = 4
_pLoginAddr$ = 12					; size = 4
_pvPatch$ = 16						; size = 4
?SendCT_PREPATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@@Z PROC NEAR ; CTPatchSession::SendCT_PREPATCH_ACK, COMDAT
; _this$ = ecx

; 20   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCT_PREPATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	89 4c 24 14	 mov	 DWORD PTR _this$[esp+36], ecx
  00020	33 f6		 xor	 esi, esi

; 21   : 	CPacket * pMsg = new CPacket();

  00022	6a 1c		 push	 28			; 0000001cH
  00024	89 74 24 24	 mov	 DWORD PTR __$EHRec$[esp+48], esi
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 44 24 10	 mov	 DWORD PTR $T93593[esp+36], eax
  00034	3b c6		 cmp	 eax, esi
  00036	c6 44 24 20 01	 mov	 BYTE PTR __$EHRec$[esp+44], 1
  0003b	74 0b		 je	 SHORT $L93594
  0003d	8b c8		 mov	 ecx, eax
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	8b d8		 mov	 ebx, eax
  00046	eb 02		 jmp	 SHORT $L93875
$L93594:
  00048	33 db		 xor	 ebx, ebx
$L93875:

; 22   : 	pMsg->SetID(CT_PREPATCH_ACK)
; 23   : 		<< strFTP
; 24   : 		<< pLoginAddr->sin_addr.s_addr
; 25   : 		<< pLoginAddr->sin_port
; 26   : 		<< WORD(pvPatch->size());

  0004a	8b 6c 24 30	 mov	 ebp, DWORD PTR _pvPatch$[esp+32]
  0004e	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00051	3b c6		 cmp	 eax, esi
  00053	89 5c 24 10	 mov	 DWORD PTR $T93592[esp+36], ebx
  00057	c6 44 24 20 00	 mov	 BYTE PTR __$EHRec$[esp+44], 0
  0005c	75 04		 jne	 SHORT $L93603
  0005e	33 c0		 xor	 eax, eax
  00060	eb 16		 jmp	 SHORT $L93604
$L93603:
  00062	8b 4d 08	 mov	 ecx, DWORD PTR [ebp+8]
  00065	2b c8		 sub	 ecx, eax
  00067	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0006c	f7 e9		 imul	 ecx
  0006e	c1 fa 03	 sar	 edx, 3
  00071	8b c2		 mov	 eax, edx
  00073	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00076	03 c2		 add	 eax, edx
$L93604:
  00078	50		 push	 eax
  00079	8b 44 24 30	 mov	 eax, DWORD PTR _pLoginAddr$[esp+36]
  0007d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00080	33 c9		 xor	 ecx, ecx
  00082	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  00086	8b 44 24 2c	 mov	 eax, DWORD PTR _strFTP$[esp+36]
  0008a	51		 push	 ecx
  0008b	52		 push	 edx
  0008c	50		 push	 eax
  0008d	68 07 70 00 00	 push	 28679			; 00007007H
  00092	8b cb		 mov	 ecx, ebx
  00094	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00099	8b c8		 mov	 ecx, eax
  0009b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a7	8b c8		 mov	 ecx, eax
  000a9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000ae	8b c8		 mov	 ecx, eax
  000b0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 27   : 
; 28   : 	for(DWORD i=0; i<pvPatch->size(); i++)

  000b5	33 ff		 xor	 edi, edi
$L93229:
  000b7	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  000ba	85 c9		 test	 ecx, ecx
  000bc	74 54		 je	 SHORT $L93873
  000be	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]
  000c1	2b d1		 sub	 edx, ecx
  000c3	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  000c8	f7 ea		 imul	 edx
  000ca	c1 fa 03	 sar	 edx, 3
  000cd	8b c2		 mov	 eax, edx
  000cf	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000d2	03 c2		 add	 eax, edx
  000d4	3b f8		 cmp	 edi, eax
  000d6	73 3a		 jae	 SHORT $L93873

; 29   : 	{
; 30   : 		(*pMsg)
; 31   : 			<< (*pvPatch)[i].m_dwBetaVer
; 32   : 			<< (*pvPatch)[i].m_strPath
; 33   : 			<< (*pvPatch)[i].m_strName
; 34   : 			<< (*pvPatch)[i].m_dwSize;

  000d8	8b 5c 0e 0c	 mov	 ebx, DWORD PTR [esi+ecx+12]
  000dc	8b 44 0e 08	 mov	 eax, DWORD PTR [esi+ecx+8]
  000e0	8b 54 0e 04	 mov	 edx, DWORD PTR [esi+ecx+4]
  000e4	8b 4c 0e 10	 mov	 ecx, DWORD PTR [esi+ecx+16]
  000e8	53		 push	 ebx
  000e9	8b 5c 24 14	 mov	 ebx, DWORD PTR $T93592[esp+40]
  000ed	50		 push	 eax
  000ee	52		 push	 edx
  000ef	51		 push	 ecx
  000f0	8b cb		 mov	 ecx, ebx
  000f2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000f7	8b c8		 mov	 ecx, eax
  000f9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000fe	8b c8		 mov	 ecx, eax
  00100	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00105	8b c8		 mov	 ecx, eax
  00107	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0010c	47		 inc	 edi
  0010d	83 c6 14	 add	 esi, 20			; 00000014H
  00110	eb a5		 jmp	 SHORT $L93229
$L93873:

; 35   : 	}
; 36   : 
; 37   : 	Say(pMsg);

  00112	8b 4c 24 14	 mov	 ecx, DWORD PTR _this$[esp+36]
  00116	8b 11		 mov	 edx, DWORD PTR [ecx]
  00118	53		 push	 ebx
  00119	ff 12		 call	 DWORD PTR [edx]

; 38   : }

  0011b	8b 44 24 28	 mov	 eax, DWORD PTR _strFTP$[esp+32]
  0011f	83 c0 f0	 add	 eax, -16		; fffffff0H
  00122	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  0012a	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0012d	83 ca ff	 or	 edx, -1
  00130	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00134	4a		 dec	 edx
  00135	85 d2		 test	 edx, edx
  00137	5f		 pop	 edi
  00138	5e		 pop	 esi
  00139	5d		 pop	 ebp
  0013a	5b		 pop	 ebx
  0013b	7f 08		 jg	 SHORT $L93869
  0013d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00141	50		 push	 eax
  00142	ff 52 04	 call	 DWORD PTR [edx+4]
$L93869:
  00145	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00149	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00150	83 c4 14	 add	 esp, 20			; 00000014H
  00153	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L93596:
  00000	8d 4d 04	 lea	 ecx, DWORD PTR _strFTP$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L93597:
  00008	8b 45 ec	 mov	 eax, DWORD PTR $T93593[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendCT_PREPATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T93871
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCT_PREPATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@@Z ENDP ; CTPatchSession::SendCT_PREPATCH_ACK
PUBLIC	?SendCT_PATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@@Z ; CTPatchSession::SendCT_PATCH_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T94166	DD	0ffffffffH
	DD	FLAT:$L93886
	DD	00H
	DD	FLAT:$L93887
$T94161	DD	019930520H
	DD	02H
	DD	FLAT:$T94166
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tpatchsvr\sender.cpp
xdata$x	ENDS
;	COMDAT ?SendCT_PATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@@Z
_TEXT	SEGMENT
$T93883 = -20						; size = 4
$T93882 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strFTP$ = 8						; size = 4
_pLoginAddr$ = 12					; size = 4
_pvPatch$ = 16						; size = 4
?SendCT_PATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@@Z PROC NEAR ; CTPatchSession::SendCT_PATCH_ACK, COMDAT
; _this$ = ecx

; 43   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCT_PATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	89 4c 24 14	 mov	 DWORD PTR _this$[esp+36], ecx
  00020	33 f6		 xor	 esi, esi

; 44   : 	CPacket * pMsg = new CPacket();

  00022	6a 1c		 push	 28			; 0000001cH
  00024	89 74 24 24	 mov	 DWORD PTR __$EHRec$[esp+48], esi
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 44 24 10	 mov	 DWORD PTR $T93883[esp+36], eax
  00034	3b c6		 cmp	 eax, esi
  00036	c6 44 24 20 01	 mov	 BYTE PTR __$EHRec$[esp+44], 1
  0003b	74 0b		 je	 SHORT $L93884
  0003d	8b c8		 mov	 ecx, eax
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	8b d8		 mov	 ebx, eax
  00046	eb 02		 jmp	 SHORT $L94165
$L93884:
  00048	33 db		 xor	 ebx, ebx
$L94165:

; 45   : 	pMsg->SetID(CT_PATCH_ACK)
; 46   : 		<< strFTP
; 47   : 		<< pLoginAddr->sin_addr.s_addr
; 48   : 		<< pLoginAddr->sin_port
; 49   : 		<< WORD(pvPatch->size());

  0004a	8b 6c 24 30	 mov	 ebp, DWORD PTR _pvPatch$[esp+32]
  0004e	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00051	3b c6		 cmp	 eax, esi
  00053	89 5c 24 10	 mov	 DWORD PTR $T93882[esp+36], ebx
  00057	c6 44 24 20 00	 mov	 BYTE PTR __$EHRec$[esp+44], 0
  0005c	75 04		 jne	 SHORT $L93893
  0005e	33 c0		 xor	 eax, eax
  00060	eb 16		 jmp	 SHORT $L93894
$L93893:
  00062	8b 4d 08	 mov	 ecx, DWORD PTR [ebp+8]
  00065	2b c8		 sub	 ecx, eax
  00067	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0006c	f7 e9		 imul	 ecx
  0006e	c1 fa 03	 sar	 edx, 3
  00071	8b c2		 mov	 eax, edx
  00073	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00076	03 c2		 add	 eax, edx
$L93894:
  00078	50		 push	 eax
  00079	8b 44 24 30	 mov	 eax, DWORD PTR _pLoginAddr$[esp+36]
  0007d	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00080	33 c9		 xor	 ecx, ecx
  00082	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  00086	8b 44 24 2c	 mov	 eax, DWORD PTR _strFTP$[esp+36]
  0008a	51		 push	 ecx
  0008b	52		 push	 edx
  0008c	50		 push	 eax
  0008d	68 02 70 00 00	 push	 28674			; 00007002H
  00092	8b cb		 mov	 ecx, ebx
  00094	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  00099	8b c8		 mov	 ecx, eax
  0009b	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000a0	8b c8		 mov	 ecx, eax
  000a2	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000a7	8b c8		 mov	 ecx, eax
  000a9	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000ae	8b c8		 mov	 ecx, eax
  000b0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 50   : 
; 51   : 	for(DWORD i=0; i<pvPatch->size(); i++)

  000b5	33 ff		 xor	 edi, edi
$L93244:
  000b7	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  000ba	85 c9		 test	 ecx, ecx
  000bc	74 53		 je	 SHORT $L94163
  000be	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]
  000c1	2b d1		 sub	 edx, ecx
  000c3	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  000c8	f7 ea		 imul	 edx
  000ca	c1 fa 03	 sar	 edx, 3
  000cd	8b c2		 mov	 eax, edx
  000cf	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000d2	03 c2		 add	 eax, edx
  000d4	3b f8		 cmp	 edi, eax
  000d6	73 39		 jae	 SHORT $L94163

; 52   : 	{
; 53   : 		(*pMsg)
; 54   : 			<< (*pvPatch)[i].m_dwVersion
; 55   : 			<< (*pvPatch)[i].m_strPath
; 56   : 			<< (*pvPatch)[i].m_strName
; 57   : 			<< (*pvPatch)[i].m_dwSize;

  000d8	8b 5c 0e 0c	 mov	 ebx, DWORD PTR [esi+ecx+12]
  000dc	8b 44 0e 08	 mov	 eax, DWORD PTR [esi+ecx+8]
  000e0	8b 54 0e 04	 mov	 edx, DWORD PTR [esi+ecx+4]
  000e4	8b 0c 0e	 mov	 ecx, DWORD PTR [esi+ecx]
  000e7	53		 push	 ebx
  000e8	8b 5c 24 14	 mov	 ebx, DWORD PTR $T93882[esp+40]
  000ec	50		 push	 eax
  000ed	52		 push	 edx
  000ee	51		 push	 ecx
  000ef	8b cb		 mov	 ecx, ebx
  000f1	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000f6	8b c8		 mov	 ecx, eax
  000f8	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000fd	8b c8		 mov	 ecx, eax
  000ff	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00104	8b c8		 mov	 ecx, eax
  00106	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0010b	47		 inc	 edi
  0010c	83 c6 14	 add	 esi, 20			; 00000014H
  0010f	eb a6		 jmp	 SHORT $L93244
$L94163:

; 58   : 	}
; 59   : 
; 60   : 	Say(pMsg);

  00111	8b 4c 24 14	 mov	 ecx, DWORD PTR _this$[esp+36]
  00115	8b 11		 mov	 edx, DWORD PTR [ecx]
  00117	53		 push	 ebx
  00118	ff 12		 call	 DWORD PTR [edx]

; 61   : }

  0011a	8b 44 24 28	 mov	 eax, DWORD PTR _strFTP$[esp+32]
  0011e	83 c0 f0	 add	 eax, -16		; fffffff0H
  00121	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00129	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  0012c	83 ca ff	 or	 edx, -1
  0012f	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  00133	4a		 dec	 edx
  00134	85 d2		 test	 edx, edx
  00136	5f		 pop	 edi
  00137	5e		 pop	 esi
  00138	5d		 pop	 ebp
  00139	5b		 pop	 ebx
  0013a	7f 08		 jg	 SHORT $L94158
  0013c	8b 08		 mov	 ecx, DWORD PTR [eax]
  0013e	8b 11		 mov	 edx, DWORD PTR [ecx]
  00140	50		 push	 eax
  00141	ff 52 04	 call	 DWORD PTR [edx+4]
$L94158:
  00144	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00148	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  0014f	83 c4 14	 add	 esp, 20			; 00000014H
  00152	c2 0c 00	 ret	 12			; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L93886:
  00000	8d 4d 04	 lea	 ecx, DWORD PTR _strFTP$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L93887:
  00008	8b 45 ec	 mov	 eax, DWORD PTR $T93883[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendCT_PATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T94161
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCT_PATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@@Z ENDP ; CTPatchSession::SendCT_PATCH_ACK
PUBLIC	?SendCT_NEWPATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@K@Z ; CTPatchSession::SendCT_NEWPATCH_ACK
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft visual studio .net 2003\vc7\atlmfc\include\atlsimpstr.h
xdata$x	SEGMENT
$T94511	DD	0ffffffffH
	DD	FLAT:$L94176
	DD	00H
	DD	FLAT:$L94177
$T94506	DD	019930520H
	DD	02H
	DD	FLAT:$T94511
	DD	2 DUP(00H)
	DD	2 DUP(00H)
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tpatchsvr\sender.cpp
xdata$x	ENDS
;	COMDAT ?SendCT_NEWPATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@K@Z
_TEXT	SEGMENT
$T94173 = -20						; size = 4
$T94172 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_strFTP$ = 8						; size = 4
_pLoginAddr$ = 12					; size = 4
_pvPatch$ = 16						; size = 4
_dwMinBetaVer$ = 20					; size = 4
?SendCT_NEWPATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@K@Z PROC NEAR ; CTPatchSession::SendCT_NEWPATCH_ACK, COMDAT
; _this$ = ecx

; 67   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 __ehhandler$?SendCT_NEWPATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@K@Z
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 08	 sub	 esp, 8
  00018	53		 push	 ebx
  00019	55		 push	 ebp
  0001a	56		 push	 esi
  0001b	57		 push	 edi
  0001c	89 4c 24 14	 mov	 DWORD PTR _this$[esp+36], ecx
  00020	33 f6		 xor	 esi, esi

; 68   : 	CPacket * pMsg = new CPacket();

  00022	6a 1c		 push	 28			; 0000001cH
  00024	89 74 24 24	 mov	 DWORD PTR __$EHRec$[esp+48], esi
  00028	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0002d	83 c4 04	 add	 esp, 4
  00030	89 44 24 10	 mov	 DWORD PTR $T94173[esp+36], eax
  00034	3b c6		 cmp	 eax, esi
  00036	c6 44 24 20 01	 mov	 BYTE PTR __$EHRec$[esp+44], 1
  0003b	74 0b		 je	 SHORT $L94174
  0003d	8b c8		 mov	 ecx, eax
  0003f	e8 00 00 00 00	 call	 ??0CPacket@@QAE@XZ	; CPacket::CPacket
  00044	8b d8		 mov	 ebx, eax
  00046	eb 02		 jmp	 SHORT $L94510
$L94174:
  00048	33 db		 xor	 ebx, ebx
$L94510:

; 69   : 	pMsg->SetID(CT_NEWPATCH_ACK)
; 70   : 		<< strFTP
; 71   : 		<< pLoginAddr->sin_addr.s_addr
; 72   : 		<< pLoginAddr->sin_port
; 73   : 		<< dwMinBetaVer
; 74   : 		<< WORD(pvPatch->size());

  0004a	8b 6c 24 30	 mov	 ebp, DWORD PTR _pvPatch$[esp+32]
  0004e	8b 45 04	 mov	 eax, DWORD PTR [ebp+4]
  00051	3b c6		 cmp	 eax, esi
  00053	89 5c 24 10	 mov	 DWORD PTR $T94172[esp+36], ebx
  00057	c6 44 24 20 00	 mov	 BYTE PTR __$EHRec$[esp+44], 0
  0005c	75 04		 jne	 SHORT $L94183
  0005e	33 c0		 xor	 eax, eax
  00060	eb 16		 jmp	 SHORT $L94184
$L94183:
  00062	8b 4d 08	 mov	 ecx, DWORD PTR [ebp+8]
  00065	2b c8		 sub	 ecx, eax
  00067	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  0006c	f7 e9		 imul	 ecx
  0006e	c1 fa 03	 sar	 edx, 3
  00071	8b c2		 mov	 eax, edx
  00073	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  00076	03 c2		 add	 eax, edx
$L94184:
  00078	50		 push	 eax
  00079	8b 44 24 38	 mov	 eax, DWORD PTR _dwMinBetaVer$[esp+36]
  0007d	50		 push	 eax
  0007e	8b 44 24 34	 mov	 eax, DWORD PTR _pLoginAddr$[esp+40]
  00082	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00085	33 c9		 xor	 ecx, ecx
  00087	66 8b 48 02	 mov	 cx, WORD PTR [eax+2]
  0008b	8b 44 24 30	 mov	 eax, DWORD PTR _strFTP$[esp+40]
  0008f	51		 push	 ecx
  00090	52		 push	 edx
  00091	50		 push	 eax
  00092	68 0b 70 00 00	 push	 28683			; 0000700bH
  00097	8b cb		 mov	 ecx, ebx
  00099	e8 00 00 00 00	 call	 ?SetID@CPacket@@QAEAAV1@G@Z ; CPacket::SetID
  0009e	8b c8		 mov	 ecx, eax
  000a0	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  000a5	8b c8		 mov	 ecx, eax
  000a7	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ac	8b c8		 mov	 ecx, eax
  000ae	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<
  000b3	8b c8		 mov	 ecx, eax
  000b5	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  000ba	8b c8		 mov	 ecx, eax
  000bc	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@G@Z	; CPacket::operator<<

; 75   : 
; 76   : 	for(DWORD i=0; i<pvPatch->size(); i++)

  000c1	33 ff		 xor	 edi, edi
$L93260:
  000c3	8b 4d 04	 mov	 ecx, DWORD PTR [ebp+4]
  000c6	85 c9		 test	 ecx, ecx
  000c8	74 5f		 je	 SHORT $L94508
  000ca	8b 55 08	 mov	 edx, DWORD PTR [ebp+8]
  000cd	2b d1		 sub	 edx, ecx
  000cf	b8 67 66 66 66	 mov	 eax, 1717986919		; 66666667H
  000d4	f7 ea		 imul	 edx
  000d6	c1 fa 03	 sar	 edx, 3
  000d9	8b c2		 mov	 eax, edx
  000db	c1 e8 1f	 shr	 eax, 31			; 0000001fH
  000de	03 c2		 add	 eax, edx
  000e0	3b f8		 cmp	 edi, eax
  000e2	73 45		 jae	 SHORT $L94508

; 77   : 	{
; 78   : 		(*pMsg)
; 79   : 			<< (*pvPatch)[i].m_dwVersion
; 80   : 			<< (*pvPatch)[i].m_strPath
; 81   : 			<< (*pvPatch)[i].m_strName
; 82   : 			<< (*pvPatch)[i].m_dwSize
; 83   : 			<< (*pvPatch)[i].m_dwBetaVer;

  000e4	8b 5c 0e 10	 mov	 ebx, DWORD PTR [esi+ecx+16]
  000e8	8b 44 0e 08	 mov	 eax, DWORD PTR [esi+ecx+8]
  000ec	8b 54 0e 04	 mov	 edx, DWORD PTR [esi+ecx+4]
  000f0	53		 push	 ebx
  000f1	8b 5c 0e 0c	 mov	 ebx, DWORD PTR [esi+ecx+12]
  000f5	8b 0c 0e	 mov	 ecx, DWORD PTR [esi+ecx]
  000f8	53		 push	 ebx
  000f9	8b 5c 24 18	 mov	 ebx, DWORD PTR $T94172[esp+44]
  000fd	50		 push	 eax
  000fe	52		 push	 edx
  000ff	51		 push	 ecx
  00100	8b cb		 mov	 ecx, ebx
  00102	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00107	8b c8		 mov	 ecx, eax
  00109	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  0010e	8b c8		 mov	 ecx, eax
  00110	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@PBD@Z ; CPacket::operator<<
  00115	8b c8		 mov	 ecx, eax
  00117	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  0011c	8b c8		 mov	 ecx, eax
  0011e	e8 00 00 00 00	 call	 ??6CPacket@@QAEAAV0@K@Z	; CPacket::operator<<
  00123	47		 inc	 edi
  00124	83 c6 14	 add	 esi, 20			; 00000014H
  00127	eb 9a		 jmp	 SHORT $L93260
$L94508:

; 84   : 	}
; 85   : 
; 86   : 	Say(pMsg);

  00129	8b 4c 24 14	 mov	 ecx, DWORD PTR _this$[esp+36]
  0012d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0012f	53		 push	 ebx
  00130	ff 12		 call	 DWORD PTR [edx]

; 87   : }

  00132	8b 44 24 28	 mov	 eax, DWORD PTR _strFTP$[esp+32]
  00136	83 c0 f0	 add	 eax, -16		; fffffff0H
  00139	c7 44 24 20 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+44], -1
  00141	8d 48 0c	 lea	 ecx, DWORD PTR [eax+12]
  00144	83 ca ff	 or	 edx, -1
  00147	f0 0f c1 11	 lock	  xadd	 DWORD PTR [ecx], edx
  0014b	4a		 dec	 edx
  0014c	85 d2		 test	 edx, edx
  0014e	5f		 pop	 edi
  0014f	5e		 pop	 esi
  00150	5d		 pop	 ebp
  00151	5b		 pop	 ebx
  00152	7f 08		 jg	 SHORT $L94504
  00154	8b 08		 mov	 ecx, DWORD PTR [eax]
  00156	8b 11		 mov	 edx, DWORD PTR [ecx]
  00158	50		 push	 eax
  00159	ff 52 04	 call	 DWORD PTR [edx+4]
$L94504:
  0015c	8b 4c 24 08	 mov	 ecx, DWORD PTR __$EHRec$[esp+20]
  00160	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00167	83 c4 14	 add	 esp, 20			; 00000014H
  0016a	c2 10 00	 ret	 16			; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L94176:
  00000	8d 4d 04	 lea	 ecx, DWORD PTR _strFTP$[ebp-4]
  00003	e9 00 00 00 00	 jmp	 ??1?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@QAE@XZ ; ATL::CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >::~CStringT<char,ATL::StrTraitATL<char,ATL::ChTraitsCRT<char> > >
$L94177:
  00008	8b 45 ec	 mov	 eax, DWORD PTR $T94173[ebp]
  0000b	50		 push	 eax
  0000c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00011	59		 pop	 ecx
  00012	c3		 ret	 0
__ehhandler$?SendCT_NEWPATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@K@Z:
  00013	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T94506
  00018	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?SendCT_NEWPATCH_ACK@CTPatchSession@@QAEXV?$CStringT@DV?$StrTraitATL@DV?$ChTraitsCRT@D@ATL@@@ATL@@@ATL@@PAUsockaddr_in@@PAV?$vector@UtagPATCHFILE@@V?$allocator@UtagPATCHFILE@@@std@@@std@@K@Z ENDP ; CTPatchSession::SendCT_NEWPATCH_ACK
END
