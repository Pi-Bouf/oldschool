; Listing generated by Microsoft (R) Optimizing Compiler Version 13.10.3077 

	TITLE	.\SqlBase.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT DWORD USE32 PUBLIC 'BSS'
_BSS	ENDS
$$SYMBOLS	SEGMENT BYTE USE32 'DEBSYM'
$$SYMBOLS	ENDS
$$TYPES	SEGMENT BYTE USE32 'DEBTYP'
$$TYPES	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
text$yc	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yc	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
text$yd	SEGMENT PARA USE32 PUBLIC 'CODE'
text$yd	ENDS
ATL$__m	SEGMENT DWORD USE32 PUBLIC ''
ATL$__m	ENDS
ATL$__z	SEGMENT DWORD USE32 PUBLIC ''
ATL$__z	ENDS
ATL$__a	SEGMENT DWORD USE32 PUBLIC ''
ATL$__a	ENDS
xdata$x	SEGMENT DWORD USE32 PUBLIC 'CONST'
xdata$x	ENDS
;	COMDAT ??0CSqlBase@@QAE@PAVCSqlDatabase@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCSqlBase@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CSqlBase@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Init@CSqlBase@@QAEXPAVCSqlDatabase@@PBD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumCol@CSqlBase@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetNumParam@CSqlBase@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?IsNull@CSqlBase@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FreeStatement@CSqlBase@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?AllocStatement@CSqlBase@@UAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Call@CSqlBase@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Open@CSqlBase@@QAEHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Close@CSqlBase@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Fetch@CSqlBase@@QAEHXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAUtagTIME_STRUCT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAUtagDATE_STRUCT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAN@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPA_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPA_K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindCustomParam@CSqlBase@@QAEFFFFFPAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAUtagDATE_STRUCT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAUtagTIME_STRUCT@@@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAN@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAM@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAF@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAD@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindCol@CSqlBase@@QAEFFPA_J@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAK@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAG@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAE@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindCol@CSqlBase@@QAEFFPA_K@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindColStr@CSqlBase@@QAEFFPADJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?BindCustomCol@CSqlBase@@QAEFFFPAXJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?Unlock@?$CComCritSecLock@VCComCriticalSection@ATL@@@ATL@@QAEXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@G@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PBVfacet@locale@2@B
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ?Unlock@CComCriticalSection@ATL@@QAEJXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CSqlBase@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
sxdata	SEGMENT DWORD USE32 'SXDATA'
sxdata	ENDS
FLAT	GROUP _DATA, CONST, _BSS
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?Init@CSqlBase@@QAEXPAVCSqlDatabase@@PBD@Z	; CSqlBase::Init
EXTRN	__imp__lstrlenA@4:NEAR
EXTRN	?HDBC@CSqlDatabase@@QAEPAXXZ:NEAR		; CSqlDatabase::HDBC
; Function compile flags: /Ogty
; File c:\users\pierr\desktop\4story - oldschool\sources\tserver\tpatchsvr\sqlbase.cpp
;	COMDAT ?Init@CSqlBase@@QAEXPAVCSqlDatabase@@PBD@Z
_TEXT	SEGMENT
_pdb$ = 8						; size = 4
_lpszQuery$ = 12					; size = 4
?Init@CSqlBase@@QAEXPAVCSqlDatabase@@PBD@Z PROC NEAR	; CSqlBase::Init, COMDAT
; _this$ = ecx

; 23   : {

  00000	53		 push	 ebx

; 24   : 	if(MAX_QUERY_LEN > lstrlen(lpszQuery))

  00001	8b 5c 24 0c	 mov	 ebx, DWORD PTR _lpszQuery$[esp]
  00005	56		 push	 esi
  00006	53		 push	 ebx
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__lstrlenA@4
  0000f	3d 00 04 00 00	 cmp	 eax, 1024		; 00000400H
  00014	7d 51		 jge	 SHORT $L92981

; 25   : 	{
; 26   : 		m_pdb = pdb;

  00016	8b 4c 24 0c	 mov	 ecx, DWORD PTR _pdb$[esp+4]
  0001a	57		 push	 edi
  0001b	89 4e 04	 mov	 DWORD PTR [esi+4], ecx

; 27   : 		m_hdbc = pdb->HDBC();	

  0001e	e8 00 00 00 00	 call	 ?HDBC@CSqlDatabase@@QAEPAXXZ ; CSqlDatabase::HDBC
  00023	89 46 08	 mov	 DWORD PTR [esi+8], eax

; 28   : 		m_hstmt = SQL_NULL_HANDLE;	
; 29   : 
; 30   : 		ZeroMemory(m_szQuery, MAX_QUERY_LEN);

  00026	8d 56 10	 lea	 edx, DWORD PTR [esi+16]
  00029	33 c0		 xor	 eax, eax
  0002b	8b fa		 mov	 edi, edx
  0002d	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
  00032	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
  00039	f3 ab		 rep stosd

; 31   : 		strcpy( (char *) m_szQuery, (const char *)lpszQuery);	

  0003b	8b c3		 mov	 eax, ebx
  0003d	2b d3		 sub	 edx, ebx
  0003f	90		 npad	 1
$L93296:
  00040	8a 08		 mov	 cl, BYTE PTR [eax]
  00042	88 0c 02	 mov	 BYTE PTR [edx+eax], cl
  00045	40		 inc	 eax
  00046	84 c9		 test	 cl, cl
  00048	75 f6		 jne	 SHORT $L93296

; 32   : 
; 33   : 		ZeroMemory(m_liCOLS, MAX_LEN_IND_SIZE*sizeof(SQLINTEGER));

  0004a	33 c0		 xor	 eax, eax
  0004c	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
  00051	8d be 10 04 00
	00		 lea	 edi, DWORD PTR [esi+1040]
  00057	f3 ab		 rep stosd

; 34   : 		ZeroMemory(m_liPARAMS, MAX_LEN_IND_SIZE*sizeof(SQLINTEGER));			

  00059	b9 00 01 00 00	 mov	 ecx, 256		; 00000100H
  0005e	8d be 10 08 00
	00		 lea	 edi, DWORD PTR [esi+2064]
  00064	f3 ab		 rep stosd
  00066	5f		 pop	 edi
$L92981:
  00067	5e		 pop	 esi
  00068	5b		 pop	 ebx

; 35   : 	}
; 36   : }

  00069	c2 08 00	 ret	 8
?Init@CSqlBase@@QAEXPAVCSqlDatabase@@PBD@Z ENDP		; CSqlBase::Init
_TEXT	ENDS
PUBLIC	?GetNumCol@CSqlBase@@UAEHXZ			; CSqlBase::GetNumCol
; Function compile flags: /Ogty
;	COMDAT ?GetNumCol@CSqlBase@@UAEHXZ
_TEXT	SEGMENT
?GetNumCol@CSqlBase@@UAEHXZ PROC NEAR			; CSqlBase::GetNumCol, COMDAT
; _this$ = ecx

; 40   : 	return 0;

  00000	33 c0		 xor	 eax, eax

; 41   : }

  00002	c3		 ret	 0
?GetNumCol@CSqlBase@@UAEHXZ ENDP			; CSqlBase::GetNumCol
_TEXT	ENDS
PUBLIC	?GetNumParam@CSqlBase@@UAEHXZ			; CSqlBase::GetNumParam
; Function compile flags: /Ogty
;	COMDAT ?GetNumParam@CSqlBase@@UAEHXZ
_TEXT	SEGMENT
?GetNumParam@CSqlBase@@UAEHXZ PROC NEAR			; CSqlBase::GetNumParam, COMDAT
; _this$ = ecx

; 45   : 	return 0;

  00000	33 c0		 xor	 eax, eax

; 46   : }

  00002	c3		 ret	 0
?GetNumParam@CSqlBase@@UAEHXZ ENDP			; CSqlBase::GetNumParam
_TEXT	ENDS
PUBLIC	?IsNull@CSqlBase@@QAEHH@Z			; CSqlBase::IsNull
; Function compile flags: /Ogty
;	COMDAT ?IsNull@CSqlBase@@QAEHH@Z
_TEXT	SEGMENT
_nCol$ = 8						; size = 4
?IsNull@CSqlBase@@QAEHH@Z PROC NEAR			; CSqlBase::IsNull, COMDAT
; _this$ = ecx

; 49   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 50   : 	if(nCol < GetNumCol())

  00003	8b 06		 mov	 eax, DWORD PTR [esi]
  00005	ff 50 04	 call	 DWORD PTR [eax+4]
  00008	8b 4c 24 08	 mov	 ecx, DWORD PTR _nCol$[esp]
  0000c	3b c8		 cmp	 ecx, eax
  0000e	7d 13		 jge	 SHORT $L92996

; 51   : 		return (m_liCOLS[nCol] == SQL_NULL_DATA)? TRUE : FALSE;

  00010	8b 94 8e 10 04
	00 00		 mov	 edx, DWORD PTR [esi+ecx*4+1040]
  00017	33 c0		 xor	 eax, eax
  00019	83 fa ff	 cmp	 edx, -1
  0001c	0f 94 c0	 sete	 al
  0001f	5e		 pop	 esi

; 54   : }

  00020	c2 04 00	 ret	 4
$L92996:

; 52   : 	
; 53   : 	return FALSE;

  00023	33 c0		 xor	 eax, eax
  00025	5e		 pop	 esi

; 54   : }

  00026	c2 04 00	 ret	 4
?IsNull@CSqlBase@@QAEHH@Z ENDP				; CSqlBase::IsNull
_TEXT	ENDS
PUBLIC	?FreeStatement@CSqlBase@@QAEXXZ			; CSqlBase::FreeStatement
EXTRN	_SQLFreeHandle@8:NEAR
; Function compile flags: /Ogty
;	COMDAT ?FreeStatement@CSqlBase@@QAEXXZ
_TEXT	SEGMENT
?FreeStatement@CSqlBase@@QAEXXZ PROC NEAR		; CSqlBase::FreeStatement, COMDAT
; _this$ = ecx

; 57   : {	

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 58   : 	if(SQL_NULL_HANDLE != m_hstmt)

  00003	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00006	85 c0		 test	 eax, eax
  00008	74 0f		 je	 SHORT $L93000

; 59   : 	{
; 60   : 		SQLFreeHandle(SQL_HANDLE_STMT, m_hstmt);

  0000a	50		 push	 eax
  0000b	6a 03		 push	 3
  0000d	e8 00 00 00 00	 call	 _SQLFreeHandle@8

; 61   : 		m_hstmt = SQL_NULL_HANDLE;		

  00012	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$L93000:
  00019	5e		 pop	 esi

; 62   : 	}	
; 63   : }

  0001a	c3		 ret	 0
?FreeStatement@CSqlBase@@QAEXXZ ENDP			; CSqlBase::FreeStatement
_TEXT	ENDS
PUBLIC	?AllocStatement@CSqlBase@@UAEHXZ		; CSqlBase::AllocStatement
EXTRN	_SQLAllocHandle@12:NEAR
EXTRN	_SQLPrepare@12:NEAR
; Function compile flags: /Ogty
;	COMDAT ?AllocStatement@CSqlBase@@UAEHXZ
_TEXT	SEGMENT
?AllocStatement@CSqlBase@@UAEHXZ PROC NEAR		; CSqlBase::AllocStatement, COMDAT
; _this$ = ecx

; 66   : {

  00000	56		 push	 esi
  00001	57		 push	 edi
  00002	8b f9		 mov	 edi, ecx

; 67   : 	if(!m_hstmt)

  00004	8b 47 0c	 mov	 eax, DWORD PTR [edi+12]
  00007	85 c0		 test	 eax, eax
  00009	8d 77 0c	 lea	 esi, DWORD PTR [edi+12]
  0000c	75 45		 jne	 SHORT $L93007

; 68   : 	{
; 69   : 		SQLRETURN sqlret = SQLAllocHandle(SQL_HANDLE_STMT, m_hdbc, &m_hstmt);

  0000e	8b 47 08	 mov	 eax, DWORD PTR [edi+8]
  00011	56		 push	 esi
  00012	50		 push	 eax
  00013	6a 03		 push	 3
  00015	e8 00 00 00 00	 call	 _SQLAllocHandle@12

; 70   : 		if(TSQL_FAIL(sqlret)) return FALSE;

  0001a	66 85 c0	 test	 ax, ax
  0001d	74 06		 je	 SHORT $L93006
  0001f	66 3d 01 00	 cmp	 ax, 1
  00023	75 29		 jne	 SHORT $L93315
$L93006:

; 71   : 
; 72   : 		sqlret = SQLPrepare( m_hstmt, m_szQuery, SQL_NTS);

  00025	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00027	6a fd		 push	 -3			; fffffffdH
  00029	83 c7 10	 add	 edi, 16			; 00000010H
  0002c	57		 push	 edi
  0002d	51		 push	 ecx
  0002e	e8 00 00 00 00	 call	 _SQLPrepare@12

; 73   : 		if(TSQL_FAIL(sqlret))

  00033	66 85 c0	 test	 ax, ax
  00036	74 1b		 je	 SHORT $L93007
  00038	66 3d 01 00	 cmp	 ax, 1
  0003c	74 15		 je	 SHORT $L93007

; 74   : 		{			
; 75   : 			SQLFreeHandle(SQL_HANDLE_STMT, m_hstmt);

  0003e	8b 16		 mov	 edx, DWORD PTR [esi]
  00040	52		 push	 edx
  00041	6a 03		 push	 3
  00043	e8 00 00 00 00	 call	 _SQLFreeHandle@8

; 76   : 			m_hstmt = SQL_NULL_HANDLE;

  00048	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], 0
$L93315:
  0004e	5f		 pop	 edi

; 77   : 			return FALSE;

  0004f	33 c0		 xor	 eax, eax
  00051	5e		 pop	 esi

; 81   : }

  00052	c3		 ret	 0
$L93007:
  00053	5f		 pop	 edi

; 78   : 		}
; 79   : 	}
; 80   : 	return TRUE;

  00054	b8 01 00 00 00	 mov	 eax, 1
  00059	5e		 pop	 esi

; 81   : }

  0005a	c3		 ret	 0
?AllocStatement@CSqlBase@@UAEHXZ ENDP			; CSqlBase::AllocStatement
_TEXT	ENDS
PUBLIC	?Open@CSqlBase@@QAEHH@Z				; CSqlBase::Open
EXTRN	_SQLMoreResults@4:NEAR
EXTRN	___security_cookie:DWORD
EXTRN	@__security_check_cookie@4:NEAR
EXTRN	_SQLExecute@4:NEAR
EXTRN	_SQLGetDiagRec@32:NEAR
; Function compile flags: /Ogty
;	COMDAT ?Open@CSqlBase@@QAEHH@Z
_TEXT	SEGMENT
_sqlret$ = -540						; size = 2
_diag$93020 = -536					; size = 524
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
_bRetAtOnce$ = 8					; size = 4
?Open@CSqlBase@@QAEHH@Z PROC NEAR			; CSqlBase::Open, COMDAT
; _this$ = ecx

; 89   : {	

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	81 ec 1c 02 00
	00		 sub	 esp, 540		; 0000021cH
  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00011	53		 push	 ebx
  00012	56		 push	 esi
  00013	8b d9		 mov	 ebx, ecx
  00015	89 84 24 20 02
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+548], eax

; 90   : 	if(!AllocStatement()) return FALSE;

  0001c	8b 03		 mov	 eax, DWORD PTR [ebx]
  0001e	57		 push	 edi
  0001f	ff 50 0c	 call	 DWORD PTR [eax+12]
  00022	85 c0		 test	 eax, eax
  00024	0f 84 9f 00 00
	00		 je	 $L93326

; 91   : 
; 92   : 	SQLRETURN sqlret = SQLExecute( m_hstmt );

  0002a	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  0002d	51		 push	 ecx
  0002e	e8 00 00 00 00	 call	 _SQLExecute@4

; 93   : 	if(TSQL_REC(sqlret))

  00033	66 3d 01 00	 cmp	 ax, 1
  00037	89 44 24 0c	 mov	 DWORD PTR _sqlret$[esp+552], eax
  0003b	74 06		 je	 SHORT $L93018
  0003d	66 3d ff ff	 cmp	 ax, -1
  00041	75 45		 jne	 SHORT $L93024
$L93018:

; 94   : 	{
; 95   : 		int cntrec = 1;
; 96   : 		SQLDIAGREC diag;
; 97   : 		ZeroMemory(&diag, sizeof(SQLDIAGREC));

  00043	b9 83 00 00 00	 mov	 ecx, 131		; 00000083H
  00048	33 c0		 xor	 eax, eax
  0004a	8d 7c 24 10	 lea	 edi, DWORD PTR _diag$93020[esp+552]
  0004e	be 01 00 00 00	 mov	 esi, 1
  00053	f3 ab		 rep stosd
$L93023:

; 98   : 
; 99   : 		while(SQL_NO_DATA != SQLGetDiagRec(
; 100  : 			SQL_HANDLE_STMT, m_hstmt, cntrec++, diag.state,
; 101  : 			&diag.err, diag.msg, MAX_SQLDIAGREC_MSG, &diag.cbmsg))

  00055	8d 54 24 14	 lea	 edx, DWORD PTR _diag$93020[esp+556]
  00059	52		 push	 edx
  0005a	68 00 02 00 00	 push	 512			; 00000200H
  0005f	8d 44 24 1e	 lea	 eax, DWORD PTR _diag$93020[esp+566]
  00063	50		 push	 eax
  00064	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  00067	8d 4c 24 1c	 lea	 ecx, DWORD PTR _diag$93020[esp+564]
  0006b	51		 push	 ecx
  0006c	8d 94 24 26 02
	00 00		 lea	 edx, DWORD PTR _diag$93020[esp+1086]
  00073	52		 push	 edx
  00074	56		 push	 esi
  00075	50		 push	 eax
  00076	6a 03		 push	 3
  00078	e8 00 00 00 00	 call	 _SQLGetDiagRec@32
  0007d	46		 inc	 esi
  0007e	66 3d 64 00	 cmp	 ax, 100			; 00000064H
  00082	75 d1		 jne	 SHORT $L93023
  00084	8b 44 24 0c	 mov	 eax, DWORD PTR _sqlret$[esp+552]
$L93024:

; 102  : 		{
; 103  : 			ATLTRACE(_T("[%s] %s\n"), diag.state, diag.msg);
; 104  : 		}
; 105  : 	}
; 106  : 	
; 107  : 	if(bRetAtOnce)

  00088	8b 4d 08	 mov	 ecx, DWORD PTR _bRetAtOnce$[ebp]
  0008b	85 c9		 test	 ecx, ecx
  0008d	74 22		 je	 SHORT $L93028
  0008f	90		 npad	 1
$L93027:

; 108  : 		while(!TSQL_FAIL(SQLMoreResults(m_hstmt)));

  00090	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  00093	51		 push	 ecx
  00094	e8 00 00 00 00	 call	 _SQLMoreResults@4
  00099	66 85 c0	 test	 ax, ax
  0009c	74 f2		 je	 SHORT $L93027
  0009e	8b 53 0c	 mov	 edx, DWORD PTR [ebx+12]
  000a1	52		 push	 edx
  000a2	e8 00 00 00 00	 call	 _SQLMoreResults@4
  000a7	66 3d 01 00	 cmp	 ax, 1
  000ab	74 e3		 je	 SHORT $L93027
  000ad	8b 44 24 0c	 mov	 eax, DWORD PTR _sqlret$[esp+552]
$L93028:

; 109  : 
; 110  : 	if(TSQL_FAIL(sqlret) && sqlret != SQL_NO_DATA)

  000b1	66 85 c0	 test	 ax, ax
  000b4	74 2a		 je	 SHORT $L93030
  000b6	66 3d 01 00	 cmp	 ax, 1
  000ba	74 24		 je	 SHORT $L93030
  000bc	66 3d 64 00	 cmp	 ax, 100			; 00000064H
  000c0	74 1e		 je	 SHORT $L93030

; 111  : 	{
; 112  : 		FreeStatement();

  000c2	8b cb		 mov	 ecx, ebx
  000c4	e8 00 00 00 00	 call	 ?FreeStatement@CSqlBase@@QAEXXZ ; CSqlBase::FreeStatement
$L93326:

; 113  : 		return FALSE;		

  000c9	33 c0		 xor	 eax, eax

; 114  : 	}	
; 115  : 	
; 116  : 	return TRUE;
; 117  : }

  000cb	8b 8c 24 24 02
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+552]
  000d2	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000d7	5f		 pop	 edi
  000d8	5e		 pop	 esi
  000d9	5b		 pop	 ebx
  000da	8b e5		 mov	 esp, ebp
  000dc	5d		 pop	 ebp
  000dd	c2 04 00	 ret	 4
$L93030:
  000e0	8b 8c 24 24 02
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+552]
  000e7	b8 01 00 00 00	 mov	 eax, 1
  000ec	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000f1	5f		 pop	 edi
  000f2	5e		 pop	 esi
  000f3	5b		 pop	 ebx
  000f4	8b e5		 mov	 esp, ebp
  000f6	5d		 pop	 ebp
  000f7	c2 04 00	 ret	 4
?Open@CSqlBase@@QAEHH@Z ENDP				; CSqlBase::Open
_TEXT	ENDS
PUBLIC	?Close@CSqlBase@@QAEXXZ				; CSqlBase::Close
EXTRN	_SQLCloseCursor@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?Close@CSqlBase@@QAEXXZ
_TEXT	SEGMENT
?Close@CSqlBase@@QAEXXZ PROC NEAR			; CSqlBase::Close, COMDAT
; _this$ = ecx

; 121  : 	if(m_hstmt)

  00000	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00003	85 c0		 test	 eax, eax
  00005	74 06		 je	 SHORT $L93034

; 122  : 		SQLCloseCursor(m_hstmt);

  00007	50		 push	 eax
  00008	e8 00 00 00 00	 call	 _SQLCloseCursor@4
$L93034:

; 123  : }

  0000d	c3		 ret	 0
?Close@CSqlBase@@QAEXXZ ENDP				; CSqlBase::Close
_TEXT	ENDS
PUBLIC	?Fetch@CSqlBase@@QAEHXZ				; CSqlBase::Fetch
EXTRN	_SQLFetch@4:NEAR
; Function compile flags: /Ogty
;	COMDAT ?Fetch@CSqlBase@@QAEHXZ
_TEXT	SEGMENT
_diag$93043 = -536					; size = 524
__$ArrayPad$ = -4					; size = 4
__$ReturnAddr$ = 4					; size = 4
?Fetch@CSqlBase@@QAEHXZ PROC NEAR			; CSqlBase::Fetch, COMDAT
; _this$ = ecx

; 126  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 e4 f8	 and	 esp, -8			; fffffff8H
  00006	81 ec 1c 02 00
	00		 sub	 esp, 540		; 0000021cH
  0000c	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00011	53		 push	 ebx
  00012	8b d9		 mov	 ebx, ecx
  00014	89 84 24 1c 02
	00 00		 mov	 DWORD PTR __$ArrayPad$[esp+544], eax

; 127  : 	if(SQL_NULL_HANDLE == m_hstmt) return FALSE;

  0001b	8b 43 0c	 mov	 eax, DWORD PTR [ebx+12]
  0001e	85 c0		 test	 eax, eax
  00020	56		 push	 esi
  00021	57		 push	 edi
  00022	74 62		 je	 SHORT $L93041

; 128  : 
; 129  : 	SQLRETURN sqlret = SQLFetch( m_hstmt );	

  00024	50		 push	 eax
  00025	e8 00 00 00 00	 call	 _SQLFetch@4

; 130  : 	if(TSQL_FAIL(sqlret))

  0002a	66 85 c0	 test	 ax, ax
  0002d	74 6c		 je	 SHORT $L93040
  0002f	66 3d 01 00	 cmp	 ax, 1
  00033	74 66		 je	 SHORT $L93040

; 131  : 	{
; 132  : 		if( !TSQL_NODATA(sqlret ))

  00035	66 3d 64 00	 cmp	 ax, 100			; 00000064H
  00039	74 4b		 je	 SHORT $L93041

; 133  : 		{
; 134  : 			int cntrec = 1;
; 135  : 			SQLDIAGREC diag;
; 136  : 			ZeroMemory(&diag, sizeof(SQLDIAGREC));

  0003b	b9 83 00 00 00	 mov	 ecx, 131		; 00000083H
  00040	33 c0		 xor	 eax, eax
  00042	8d 7c 24 10	 lea	 edi, DWORD PTR _diag$93043[esp+552]
  00046	be 01 00 00 00	 mov	 esi, 1
  0004b	f3 ab		 rep stosd
  0004d	8d 49 00	 npad	 3
$L93046:

; 137  : 
; 138  : 			while(SQL_NO_DATA != SQLGetDiagRec(
; 139  : 				SQL_HANDLE_STMT, m_hstmt, cntrec++, diag.state,
; 140  : 				&diag.err, diag.msg, MAX_SQLDIAGREC_MSG, &diag.cbmsg))

  00050	8d 44 24 14	 lea	 eax, DWORD PTR _diag$93043[esp+556]
  00054	50		 push	 eax
  00055	68 00 02 00 00	 push	 512			; 00000200H
  0005a	8d 4c 24 1e	 lea	 ecx, DWORD PTR _diag$93043[esp+566]
  0005e	51		 push	 ecx
  0005f	8b 4b 0c	 mov	 ecx, DWORD PTR [ebx+12]
  00062	8d 54 24 1c	 lea	 edx, DWORD PTR _diag$93043[esp+564]
  00066	52		 push	 edx
  00067	8d 84 24 26 02
	00 00		 lea	 eax, DWORD PTR _diag$93043[esp+1086]
  0006e	50		 push	 eax
  0006f	56		 push	 esi
  00070	51		 push	 ecx
  00071	6a 03		 push	 3
  00073	e8 00 00 00 00	 call	 _SQLGetDiagRec@32
  00078	46		 inc	 esi
  00079	66 3d 64 00	 cmp	 ax, 100			; 00000064H
  0007d	75 d1		 jne	 SHORT $L93046

; 141  : 			{
; 142  : 				ATLTRACE(_T("[%s] %s\n"), diag.state, diag.msg);
; 143  : 			}
; 144  : 			FreeStatement();

  0007f	8b cb		 mov	 ecx, ebx
  00081	e8 00 00 00 00	 call	 ?FreeStatement@CSqlBase@@QAEXXZ ; CSqlBase::FreeStatement
$L93041:

; 145  : 		}
; 146  : 		return FALSE;

  00086	33 c0		 xor	 eax, eax

; 147  : 	}
; 148  : 
; 149  : 	return TRUE;
; 150  : }

  00088	8b 8c 24 24 02
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+552]
  0008f	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00094	5f		 pop	 edi
  00095	5e		 pop	 esi
  00096	5b		 pop	 ebx
  00097	8b e5		 mov	 esp, ebp
  00099	5d		 pop	 ebp
  0009a	c3		 ret	 0
$L93040:
  0009b	8b 8c 24 24 02
	00 00		 mov	 ecx, DWORD PTR __$ArrayPad$[esp+552]
  000a2	b8 01 00 00 00	 mov	 eax, 1
  000a7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ac	5f		 pop	 edi
  000ad	5e		 pop	 esi
  000ae	5b		 pop	 ebx
  000af	8b e5		 mov	 esp, ebp
  000b1	5d		 pop	 ebp
  000b2	c3		 ret	 0
?Fetch@CSqlBase@@QAEHXZ ENDP				; CSqlBase::Fetch
_TEXT	ENDS
PUBLIC	?BindParam@CSqlBase@@QAEFFFPAUtagTIME_STRUCT@@@Z ; CSqlBase::BindParam
EXTRN	_SQLBindParameter@40:NEAR
; Function compile flags: /Ogty
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAUtagTIME_STRUCT@@@Z
_TEXT	SEGMENT
_pt$ = 8						; size = 2
_pi$ = 12						; size = 2
_ptr$ = 16						; size = 4
?BindParam@CSqlBase@@QAEFFFPAUtagTIME_STRUCT@@@Z PROC NEAR ; CSqlBase::BindParam, COMDAT
; _this$ = ecx

; 155  : 	return SQLBindParameter(m_hstmt, pi, pt,
; 156  : 		SQL_C_TYPE_TIME, SQL_TIME, 0, 0, ptr, 0, &m_liPARAMS[pi-1]);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _pi$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 08
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+2060]
  0000e	52		 push	 edx
  0000f	8b 54 24 10	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	8b 54 24 10	 mov	 edx, DWORD PTR _pt$[esp+8]
  0001a	6a 00		 push	 0
  0001c	6a 00		 push	 0
  0001e	6a 0a		 push	 10			; 0000000aH
  00020	6a 5c		 push	 92			; 0000005cH
  00022	52		 push	 edx
  00023	50		 push	 eax
  00024	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 _SQLBindParameter@40

; 157  : }

  0002d	c2 0c 00	 ret	 12			; 0000000cH
?BindParam@CSqlBase@@QAEFFFPAUtagTIME_STRUCT@@@Z ENDP	; CSqlBase::BindParam
_TEXT	ENDS
PUBLIC	?BindParam@CSqlBase@@QAEFFFPAUtagDATE_STRUCT@@@Z ; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAUtagDATE_STRUCT@@@Z
_TEXT	SEGMENT
_pt$ = 8						; size = 2
_pi$ = 12						; size = 2
_ptr$ = 16						; size = 4
?BindParam@CSqlBase@@QAEFFFPAUtagDATE_STRUCT@@@Z PROC NEAR ; CSqlBase::BindParam, COMDAT
; _this$ = ecx

; 161  : 	return SQLBindParameter(m_hstmt, pi, pt,
; 162  : 		SQL_C_TYPE_DATE, SQL_DATE, 0, 0, ptr, 0, &m_liPARAMS[pi-1]);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _pi$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 08
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+2060]
  0000e	52		 push	 edx
  0000f	8b 54 24 10	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	8b 54 24 10	 mov	 edx, DWORD PTR _pt$[esp+8]
  0001a	6a 00		 push	 0
  0001c	6a 00		 push	 0
  0001e	6a 09		 push	 9
  00020	6a 5b		 push	 91			; 0000005bH
  00022	52		 push	 edx
  00023	50		 push	 eax
  00024	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 _SQLBindParameter@40

; 163  : }

  0002d	c2 0c 00	 ret	 12			; 0000000cH
?BindParam@CSqlBase@@QAEFFFPAUtagDATE_STRUCT@@@Z ENDP	; CSqlBase::BindParam
_TEXT	ENDS
PUBLIC	?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z
_TEXT	SEGMENT
_pt$ = 8						; size = 2
_pi$ = 12						; size = 2
_ptr$ = 16						; size = 4
?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z PROC NEAR ; CSqlBase::BindParam, COMDAT
; _this$ = ecx

; 167  : 	return SQLBindParameter(m_hstmt, pi, pt,
; 168  : 		SQL_C_TYPE_TIMESTAMP, SQL_TIMESTAMP, 23, 0, ptr, 0, &m_liPARAMS[pi-1]);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _pi$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 08
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+2060]
  0000e	52		 push	 edx
  0000f	8b 54 24 10	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	8b 54 24 10	 mov	 edx, DWORD PTR _pt$[esp+8]
  0001a	6a 00		 push	 0
  0001c	6a 17		 push	 23			; 00000017H
  0001e	6a 0b		 push	 11			; 0000000bH
  00020	6a 5d		 push	 93			; 0000005dH
  00022	52		 push	 edx
  00023	50		 push	 eax
  00024	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 _SQLBindParameter@40

; 169  : }

  0002d	c2 0c 00	 ret	 12			; 0000000cH
?BindParam@CSqlBase@@QAEFFFPAUtagTIMESTAMP_STRUCT@@@Z ENDP ; CSqlBase::BindParam
_TEXT	ENDS
PUBLIC	?BindParam@CSqlBase@@QAEFFFPAM@Z		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAM@Z
_TEXT	SEGMENT
_pt$ = 8						; size = 2
_pi$ = 12						; size = 2
_ptr$ = 16						; size = 4
?BindParam@CSqlBase@@QAEFFFPAM@Z PROC NEAR		; CSqlBase::BindParam, COMDAT
; _this$ = ecx

; 173  : 	return SQLBindParameter(m_hstmt, pi, pt, 
; 174  : 		SQL_C_FLOAT, SQL_REAL, 0, 0, ptr, 0, &m_liPARAMS[pi-1]);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _pi$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 08
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+2060]
  0000e	52		 push	 edx
  0000f	8b 54 24 10	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	8b 54 24 10	 mov	 edx, DWORD PTR _pt$[esp+8]
  0001a	6a 00		 push	 0
  0001c	6a 00		 push	 0
  0001e	6a 07		 push	 7
  00020	6a 07		 push	 7
  00022	52		 push	 edx
  00023	50		 push	 eax
  00024	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 _SQLBindParameter@40

; 175  : }

  0002d	c2 0c 00	 ret	 12			; 0000000cH
?BindParam@CSqlBase@@QAEFFFPAM@Z ENDP			; CSqlBase::BindParam
_TEXT	ENDS
PUBLIC	?BindParam@CSqlBase@@QAEFFFPAN@Z		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAN@Z
_TEXT	SEGMENT
_pt$ = 8						; size = 2
_pi$ = 12						; size = 2
_ptr$ = 16						; size = 4
?BindParam@CSqlBase@@QAEFFFPAN@Z PROC NEAR		; CSqlBase::BindParam, COMDAT
; _this$ = ecx

; 179  : 	return SQLBindParameter(m_hstmt, pi, pt,
; 180  : 		SQL_C_DOUBLE, SQL_DOUBLE, 0, 0, ptr, 0, &m_liPARAMS[pi-1]);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _pi$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 08
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+2060]
  0000e	52		 push	 edx
  0000f	8b 54 24 10	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	8b 54 24 10	 mov	 edx, DWORD PTR _pt$[esp+8]
  0001a	6a 00		 push	 0
  0001c	6a 00		 push	 0
  0001e	6a 08		 push	 8
  00020	6a 08		 push	 8
  00022	52		 push	 edx
  00023	50		 push	 eax
  00024	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 _SQLBindParameter@40

; 181  : }

  0002d	c2 0c 00	 ret	 12			; 0000000cH
?BindParam@CSqlBase@@QAEFFFPAN@Z ENDP			; CSqlBase::BindParam
_TEXT	ENDS
PUBLIC	?BindParam@CSqlBase@@QAEFFFPAH@Z		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAH@Z
_TEXT	SEGMENT
_pt$ = 8						; size = 2
_pi$ = 12						; size = 2
_ptr$ = 16						; size = 4
?BindParam@CSqlBase@@QAEFFFPAH@Z PROC NEAR		; CSqlBase::BindParam, COMDAT
; _this$ = ecx

; 185  : 	return SQLBindParameter(m_hstmt, pi, pt, 
; 186  : 		SQL_C_SLONG, SQL_INTEGER, 0, 0, ptr, 0, &m_liPARAMS[pi-1]);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _pi$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 08
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+2060]
  0000e	52		 push	 edx
  0000f	8b 54 24 10	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	8b 54 24 10	 mov	 edx, DWORD PTR _pt$[esp+8]
  0001a	6a 00		 push	 0
  0001c	6a 00		 push	 0
  0001e	6a 04		 push	 4
  00020	6a f0		 push	 -16			; fffffff0H
  00022	52		 push	 edx
  00023	50		 push	 eax
  00024	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 _SQLBindParameter@40

; 187  : }

  0002d	c2 0c 00	 ret	 12			; 0000000cH
?BindParam@CSqlBase@@QAEFFFPAH@Z ENDP			; CSqlBase::BindParam
_TEXT	ENDS
PUBLIC	?BindParam@CSqlBase@@QAEFFFPAJ@Z		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAJ@Z
_TEXT	SEGMENT
_pt$ = 8						; size = 2
_pi$ = 12						; size = 2
_ptr$ = 16						; size = 4
?BindParam@CSqlBase@@QAEFFFPAJ@Z PROC NEAR		; CSqlBase::BindParam, COMDAT
; _this$ = ecx

; 191  : 	return SQLBindParameter(m_hstmt, pi, pt, 
; 192  : 		SQL_C_SLONG, SQL_INTEGER, 0, 0, ptr, 0, &m_liPARAMS[pi-1]);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _pi$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 08
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+2060]
  0000e	52		 push	 edx
  0000f	8b 54 24 10	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	8b 54 24 10	 mov	 edx, DWORD PTR _pt$[esp+8]
  0001a	6a 00		 push	 0
  0001c	6a 00		 push	 0
  0001e	6a 04		 push	 4
  00020	6a f0		 push	 -16			; fffffff0H
  00022	52		 push	 edx
  00023	50		 push	 eax
  00024	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 _SQLBindParameter@40

; 193  : }

  0002d	c2 0c 00	 ret	 12			; 0000000cH
?BindParam@CSqlBase@@QAEFFFPAJ@Z ENDP			; CSqlBase::BindParam
_TEXT	ENDS
PUBLIC	?BindParam@CSqlBase@@QAEFFFPAF@Z		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAF@Z
_TEXT	SEGMENT
_pt$ = 8						; size = 2
_pi$ = 12						; size = 2
_ptr$ = 16						; size = 4
?BindParam@CSqlBase@@QAEFFFPAF@Z PROC NEAR		; CSqlBase::BindParam, COMDAT
; _this$ = ecx

; 197  : 	return SQLBindParameter(m_hstmt, pi, pt, 
; 198  : 		SQL_C_SSHORT, SQL_SMALLINT, 0, 0, ptr, 0, &m_liPARAMS[pi-1]);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _pi$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 08
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+2060]
  0000e	52		 push	 edx
  0000f	8b 54 24 10	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	8b 54 24 10	 mov	 edx, DWORD PTR _pt$[esp+8]
  0001a	6a 00		 push	 0
  0001c	6a 00		 push	 0
  0001e	6a 05		 push	 5
  00020	6a f1		 push	 -15			; fffffff1H
  00022	52		 push	 edx
  00023	50		 push	 eax
  00024	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 _SQLBindParameter@40

; 199  : }

  0002d	c2 0c 00	 ret	 12			; 0000000cH
?BindParam@CSqlBase@@QAEFFFPAF@Z ENDP			; CSqlBase::BindParam
_TEXT	ENDS
PUBLIC	?BindParam@CSqlBase@@QAEFFFPAD@Z		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAD@Z
_TEXT	SEGMENT
_pt$ = 8						; size = 2
_pi$ = 12						; size = 2
_ptr$ = 16						; size = 4
?BindParam@CSqlBase@@QAEFFFPAD@Z PROC NEAR		; CSqlBase::BindParam, COMDAT
; _this$ = ecx

; 203  : 	return SQLBindParameter(m_hstmt, pi, pt, 
; 204  : 		SQL_C_STINYINT, SQL_TINYINT, 0, 0, ptr, 0, &m_liPARAMS[pi-1]);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _pi$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 08
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+2060]
  0000e	52		 push	 edx
  0000f	8b 54 24 10	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	8b 54 24 10	 mov	 edx, DWORD PTR _pt$[esp+8]
  0001a	6a 00		 push	 0
  0001c	6a 00		 push	 0
  0001e	6a fa		 push	 -6			; fffffffaH
  00020	6a e6		 push	 -26			; ffffffe6H
  00022	52		 push	 edx
  00023	50		 push	 eax
  00024	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 _SQLBindParameter@40

; 205  : }

  0002d	c2 0c 00	 ret	 12			; 0000000cH
?BindParam@CSqlBase@@QAEFFFPAD@Z ENDP			; CSqlBase::BindParam
_TEXT	ENDS
PUBLIC	?BindParam@CSqlBase@@QAEFFFPA_J@Z		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPA_J@Z
_TEXT	SEGMENT
_pt$ = 8						; size = 2
_pi$ = 12						; size = 2
_ptr$ = 16						; size = 4
?BindParam@CSqlBase@@QAEFFFPA_J@Z PROC NEAR		; CSqlBase::BindParam, COMDAT
; _this$ = ecx

; 209  : 	return SQLBindParameter(m_hstmt, pi, pt, 
; 210  : 		SQL_C_SBIGINT, SQL_BIGINT, 0, 0, ptr, 0, &m_liPARAMS[pi-1]);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _pi$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 08
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+2060]
  0000e	52		 push	 edx
  0000f	8b 54 24 10	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	8b 54 24 10	 mov	 edx, DWORD PTR _pt$[esp+8]
  0001a	6a 00		 push	 0
  0001c	6a 00		 push	 0
  0001e	6a fb		 push	 -5			; fffffffbH
  00020	6a e7		 push	 -25			; ffffffe7H
  00022	52		 push	 edx
  00023	50		 push	 eax
  00024	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 _SQLBindParameter@40

; 211  : }

  0002d	c2 0c 00	 ret	 12			; 0000000cH
?BindParam@CSqlBase@@QAEFFFPA_J@Z ENDP			; CSqlBase::BindParam
_TEXT	ENDS
PUBLIC	?BindParam@CSqlBase@@QAEFFFPAK@Z		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAK@Z
_TEXT	SEGMENT
_pt$ = 8						; size = 2
_pi$ = 12						; size = 2
_ptr$ = 16						; size = 4
?BindParam@CSqlBase@@QAEFFFPAK@Z PROC NEAR		; CSqlBase::BindParam, COMDAT
; _this$ = ecx

; 215  : 	return SQLBindParameter(m_hstmt, pi, pt, 
; 216  : 		SQL_C_SLONG, SQL_INTEGER, 0, 0, ptr, 0, &m_liPARAMS[pi-1]);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _pi$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 08
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+2060]
  0000e	52		 push	 edx
  0000f	8b 54 24 10	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	8b 54 24 10	 mov	 edx, DWORD PTR _pt$[esp+8]
  0001a	6a 00		 push	 0
  0001c	6a 00		 push	 0
  0001e	6a 04		 push	 4
  00020	6a f0		 push	 -16			; fffffff0H
  00022	52		 push	 edx
  00023	50		 push	 eax
  00024	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 _SQLBindParameter@40

; 217  : }

  0002d	c2 0c 00	 ret	 12			; 0000000cH
?BindParam@CSqlBase@@QAEFFFPAK@Z ENDP			; CSqlBase::BindParam
_TEXT	ENDS
PUBLIC	?BindParam@CSqlBase@@QAEFFFPAG@Z		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAG@Z
_TEXT	SEGMENT
_pt$ = 8						; size = 2
_pi$ = 12						; size = 2
_ptr$ = 16						; size = 4
?BindParam@CSqlBase@@QAEFFFPAG@Z PROC NEAR		; CSqlBase::BindParam, COMDAT
; _this$ = ecx

; 221  : 	return SQLBindParameter(m_hstmt, pi, pt, 
; 222  : 		SQL_C_SSHORT, SQL_SMALLINT, 0, 0, ptr, 0, &m_liPARAMS[pi-1]);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _pi$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 08
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+2060]
  0000e	52		 push	 edx
  0000f	8b 54 24 10	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	8b 54 24 10	 mov	 edx, DWORD PTR _pt$[esp+8]
  0001a	6a 00		 push	 0
  0001c	6a 00		 push	 0
  0001e	6a 05		 push	 5
  00020	6a f1		 push	 -15			; fffffff1H
  00022	52		 push	 edx
  00023	50		 push	 eax
  00024	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 _SQLBindParameter@40

; 223  : }

  0002d	c2 0c 00	 ret	 12			; 0000000cH
?BindParam@CSqlBase@@QAEFFFPAG@Z ENDP			; CSqlBase::BindParam
_TEXT	ENDS
PUBLIC	?BindParam@CSqlBase@@QAEFFFPAE@Z		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPAE@Z
_TEXT	SEGMENT
_pt$ = 8						; size = 2
_pi$ = 12						; size = 2
_ptr$ = 16						; size = 4
?BindParam@CSqlBase@@QAEFFFPAE@Z PROC NEAR		; CSqlBase::BindParam, COMDAT
; _this$ = ecx

; 227  : 	return SQLBindParameter(m_hstmt, pi, pt, 
; 228  : 		SQL_C_UTINYINT, SQL_TINYINT, 0, 0, ptr, 0, &m_liPARAMS[pi-1]);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _pi$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 08
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+2060]
  0000e	52		 push	 edx
  0000f	8b 54 24 10	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	8b 54 24 10	 mov	 edx, DWORD PTR _pt$[esp+8]
  0001a	6a 00		 push	 0
  0001c	6a 00		 push	 0
  0001e	6a fa		 push	 -6			; fffffffaH
  00020	6a e4		 push	 -28			; ffffffe4H
  00022	52		 push	 edx
  00023	50		 push	 eax
  00024	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 _SQLBindParameter@40

; 229  : }

  0002d	c2 0c 00	 ret	 12			; 0000000cH
?BindParam@CSqlBase@@QAEFFFPAE@Z ENDP			; CSqlBase::BindParam
_TEXT	ENDS
PUBLIC	?BindParam@CSqlBase@@QAEFFFPA_K@Z		; CSqlBase::BindParam
; Function compile flags: /Ogty
;	COMDAT ?BindParam@CSqlBase@@QAEFFFPA_K@Z
_TEXT	SEGMENT
_pt$ = 8						; size = 2
_pi$ = 12						; size = 2
_ptr$ = 16						; size = 4
?BindParam@CSqlBase@@QAEFFFPA_K@Z PROC NEAR		; CSqlBase::BindParam, COMDAT
; _this$ = ecx

; 233  : 	return SQLBindParameter(m_hstmt, pi, pt, 
; 234  : 		SQL_C_SBIGINT, SQL_BIGINT, 0, 0, ptr, 0, &m_liPARAMS[pi-1]);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _pi$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 08
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+2060]
  0000e	52		 push	 edx
  0000f	8b 54 24 10	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	8b 54 24 10	 mov	 edx, DWORD PTR _pt$[esp+8]
  0001a	6a 00		 push	 0
  0001c	6a 00		 push	 0
  0001e	6a fb		 push	 -5			; fffffffbH
  00020	6a e7		 push	 -25			; ffffffe7H
  00022	52		 push	 edx
  00023	50		 push	 eax
  00024	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 _SQLBindParameter@40

; 235  : }

  0002d	c2 0c 00	 ret	 12			; 0000000cH
?BindParam@CSqlBase@@QAEFFFPA_K@Z ENDP			; CSqlBase::BindParam
_TEXT	ENDS
PUBLIC	?BindParamStr@CSqlBase@@QAEFFFPADJ@Z		; CSqlBase::BindParamStr
; Function compile flags: /Ogty
;	COMDAT ?BindParamStr@CSqlBase@@QAEFFFPADJ@Z
_TEXT	SEGMENT
_pt$ = 8						; size = 2
_pi$ = 12						; size = 2
_ptr$ = 16						; size = 4
_len$ = 20						; size = 4
?BindParamStr@CSqlBase@@QAEFFFPADJ@Z PROC NEAR		; CSqlBase::BindParamStr, COMDAT
; _this$ = ecx

; 239  : 	return SQLBindParameter(m_hstmt, pi, pt, SQL_C_CHAR, SQL_VARCHAR, len, 0, ptr, len, &m_liPARAMS[pi-1]);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _pi$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 10	 mov	 esi, DWORD PTR _ptr$[esp]
  00009	0f bf d0	 movsx	 edx, ax
  0000c	8d 94 91 0c 08
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+2060]
  00013	52		 push	 edx
  00014	8b 54 24 18	 mov	 edx, DWORD PTR _len$[esp+4]
  00018	52		 push	 edx
  00019	56		 push	 esi
  0001a	6a 00		 push	 0
  0001c	52		 push	 edx
  0001d	8b 54 24 1c	 mov	 edx, DWORD PTR _pt$[esp+20]
  00021	6a 0c		 push	 12			; 0000000cH
  00023	6a 01		 push	 1
  00025	52		 push	 edx
  00026	50		 push	 eax
  00027	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0002a	50		 push	 eax
  0002b	e8 00 00 00 00	 call	 _SQLBindParameter@40
  00030	5e		 pop	 esi

; 240  : }

  00031	c2 10 00	 ret	 16			; 00000010H
?BindParamStr@CSqlBase@@QAEFFFPADJ@Z ENDP		; CSqlBase::BindParamStr
_TEXT	ENDS
PUBLIC	?BindCustomParam@CSqlBase@@QAEFFFFFPAXJ@Z	; CSqlBase::BindCustomParam
; Function compile flags: /Ogty
;	COMDAT ?BindCustomParam@CSqlBase@@QAEFFFFFPAXJ@Z
_TEXT	SEGMENT
_pt$ = 8						; size = 2
_pi$ = 12						; size = 2
_ct$ = 16						; size = 2
_st$ = 20						; size = 2
_ptr$ = 24						; size = 4
_len$ = 28						; size = 4
?BindCustomParam@CSqlBase@@QAEFFFFFPAXJ@Z PROC NEAR	; CSqlBase::BindCustomParam, COMDAT
; _this$ = ecx

; 244  : 	return SQLBindParameter(m_hstmt, pi, pt, ct, st, len, 0, ptr, len, &m_liPARAMS[pi-1]);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _pi$[esp-4]
  00004	56		 push	 esi
  00005	8b 74 24 18	 mov	 esi, DWORD PTR _ptr$[esp]
  00009	0f bf d0	 movsx	 edx, ax
  0000c	8d 94 91 0c 08
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+2060]
  00013	52		 push	 edx
  00014	8b 54 24 20	 mov	 edx, DWORD PTR _len$[esp+4]
  00018	52		 push	 edx
  00019	56		 push	 esi
  0001a	6a 00		 push	 0
  0001c	52		 push	 edx
  0001d	8b 54 24 28	 mov	 edx, DWORD PTR _st$[esp+20]
  00021	52		 push	 edx
  00022	8b 54 24 28	 mov	 edx, DWORD PTR _ct$[esp+24]
  00026	52		 push	 edx
  00027	8b 54 24 24	 mov	 edx, DWORD PTR _pt$[esp+28]
  0002b	52		 push	 edx
  0002c	50		 push	 eax
  0002d	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00030	50		 push	 eax
  00031	e8 00 00 00 00	 call	 _SQLBindParameter@40
  00036	5e		 pop	 esi

; 245  : }

  00037	c2 18 00	 ret	 24			; 00000018H
?BindCustomParam@CSqlBase@@QAEFFFFFPAXJ@Z ENDP		; CSqlBase::BindCustomParam
_TEXT	ENDS
PUBLIC	?BindCol@CSqlBase@@QAEFFPAUtagDATE_STRUCT@@@Z	; CSqlBase::BindCol
EXTRN	_SQLBindCol@24:NEAR
; Function compile flags: /Ogty
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAUtagDATE_STRUCT@@@Z
_TEXT	SEGMENT
_ci$ = 8						; size = 2
_ptr$ = 12						; size = 4
?BindCol@CSqlBase@@QAEFFPAUtagDATE_STRUCT@@@Z PROC NEAR	; CSqlBase::BindCol, COMDAT
; _this$ = ecx

; 250  : 	return SQLBindCol( m_hstmt, ci, SQL_C_TYPE_DATE, ptr, 0, &m_liCOLS[ci-1]);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _ci$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 04
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+1036]
  0000e	52		 push	 edx
  0000f	8b 54 24 0c	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	6a 5b		 push	 91			; 0000005bH
  00018	50		 push	 eax
  00019	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _SQLBindCol@24

; 251  : }

  00022	c2 08 00	 ret	 8
?BindCol@CSqlBase@@QAEFFPAUtagDATE_STRUCT@@@Z ENDP	; CSqlBase::BindCol
_TEXT	ENDS
PUBLIC	?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z
_TEXT	SEGMENT
_ci$ = 8						; size = 2
_ptr$ = 12						; size = 4
?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z PROC NEAR ; CSqlBase::BindCol, COMDAT
; _this$ = ecx

; 255  : 	return SQLBindCol( m_hstmt, ci, SQL_C_TYPE_TIMESTAMP, ptr, 0, &m_liCOLS[ci-1]);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _ci$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 04
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+1036]
  0000e	52		 push	 edx
  0000f	8b 54 24 0c	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	6a 5d		 push	 93			; 0000005dH
  00018	50		 push	 eax
  00019	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _SQLBindCol@24

; 256  : }

  00022	c2 08 00	 ret	 8
?BindCol@CSqlBase@@QAEFFPAUtagTIMESTAMP_STRUCT@@@Z ENDP	; CSqlBase::BindCol
_TEXT	ENDS
PUBLIC	?BindCol@CSqlBase@@QAEFFPAUtagTIME_STRUCT@@@Z	; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAUtagTIME_STRUCT@@@Z
_TEXT	SEGMENT
_ci$ = 8						; size = 2
_ptr$ = 12						; size = 4
?BindCol@CSqlBase@@QAEFFPAUtagTIME_STRUCT@@@Z PROC NEAR	; CSqlBase::BindCol, COMDAT
; _this$ = ecx

; 260  : 	return SQLBindCol(m_hstmt, ci, SQL_C_TYPE_TIME, ptr, 0, &m_liCOLS[ci-1]);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _ci$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 04
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+1036]
  0000e	52		 push	 edx
  0000f	8b 54 24 0c	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	6a 5c		 push	 92			; 0000005cH
  00018	50		 push	 eax
  00019	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _SQLBindCol@24

; 261  : }

  00022	c2 08 00	 ret	 8
?BindCol@CSqlBase@@QAEFFPAUtagTIME_STRUCT@@@Z ENDP	; CSqlBase::BindCol
_TEXT	ENDS
PUBLIC	?BindCol@CSqlBase@@QAEFFPAN@Z			; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAN@Z
_TEXT	SEGMENT
_ci$ = 8						; size = 2
_ptr$ = 12						; size = 4
?BindCol@CSqlBase@@QAEFFPAN@Z PROC NEAR			; CSqlBase::BindCol, COMDAT
; _this$ = ecx

; 265  : 	return SQLBindCol(m_hstmt, ci, SQL_C_DOUBLE, ptr, 0, &m_liCOLS[ci-1]);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _ci$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 04
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+1036]
  0000e	52		 push	 edx
  0000f	8b 54 24 0c	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	6a 08		 push	 8
  00018	50		 push	 eax
  00019	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _SQLBindCol@24

; 266  : }

  00022	c2 08 00	 ret	 8
?BindCol@CSqlBase@@QAEFFPAN@Z ENDP			; CSqlBase::BindCol
_TEXT	ENDS
PUBLIC	?BindCol@CSqlBase@@QAEFFPAM@Z			; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAM@Z
_TEXT	SEGMENT
_ci$ = 8						; size = 2
_ptr$ = 12						; size = 4
?BindCol@CSqlBase@@QAEFFPAM@Z PROC NEAR			; CSqlBase::BindCol, COMDAT
; _this$ = ecx

; 270  : 	return SQLBindCol(m_hstmt, ci, SQL_C_FLOAT, ptr, 0, &m_liCOLS[ci-1]);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _ci$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 04
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+1036]
  0000e	52		 push	 edx
  0000f	8b 54 24 0c	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	6a 07		 push	 7
  00018	50		 push	 eax
  00019	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _SQLBindCol@24

; 271  : }

  00022	c2 08 00	 ret	 8
?BindCol@CSqlBase@@QAEFFPAM@Z ENDP			; CSqlBase::BindCol
_TEXT	ENDS
PUBLIC	?BindCol@CSqlBase@@QAEFFPAH@Z			; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAH@Z
_TEXT	SEGMENT
_ci$ = 8						; size = 2
_ptr$ = 12						; size = 4
?BindCol@CSqlBase@@QAEFFPAH@Z PROC NEAR			; CSqlBase::BindCol, COMDAT
; _this$ = ecx

; 275  : 	return SQLBindCol(m_hstmt, ci, SQL_C_SLONG, ptr, 0, &m_liCOLS[ci-1]);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _ci$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 04
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+1036]
  0000e	52		 push	 edx
  0000f	8b 54 24 0c	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	6a f0		 push	 -16			; fffffff0H
  00018	50		 push	 eax
  00019	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _SQLBindCol@24

; 276  : }

  00022	c2 08 00	 ret	 8
?BindCol@CSqlBase@@QAEFFPAH@Z ENDP			; CSqlBase::BindCol
_TEXT	ENDS
PUBLIC	?BindCol@CSqlBase@@QAEFFPAJ@Z			; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAJ@Z
_TEXT	SEGMENT
_ci$ = 8						; size = 2
_ptr$ = 12						; size = 4
?BindCol@CSqlBase@@QAEFFPAJ@Z PROC NEAR			; CSqlBase::BindCol, COMDAT
; _this$ = ecx

; 280  : 	return SQLBindCol(m_hstmt, ci, SQL_C_SLONG, ptr, 0, &m_liCOLS[ci-1]);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _ci$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 04
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+1036]
  0000e	52		 push	 edx
  0000f	8b 54 24 0c	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	6a f0		 push	 -16			; fffffff0H
  00018	50		 push	 eax
  00019	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _SQLBindCol@24

; 281  : }

  00022	c2 08 00	 ret	 8
?BindCol@CSqlBase@@QAEFFPAJ@Z ENDP			; CSqlBase::BindCol
_TEXT	ENDS
PUBLIC	?BindCol@CSqlBase@@QAEFFPAF@Z			; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAF@Z
_TEXT	SEGMENT
_ci$ = 8						; size = 2
_ptr$ = 12						; size = 4
?BindCol@CSqlBase@@QAEFFPAF@Z PROC NEAR			; CSqlBase::BindCol, COMDAT
; _this$ = ecx

; 285  : 	return SQLBindCol(m_hstmt, ci, SQL_C_SSHORT, ptr, 0, &m_liCOLS[ci-1]);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _ci$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 04
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+1036]
  0000e	52		 push	 edx
  0000f	8b 54 24 0c	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	6a f1		 push	 -15			; fffffff1H
  00018	50		 push	 eax
  00019	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _SQLBindCol@24

; 286  : }

  00022	c2 08 00	 ret	 8
?BindCol@CSqlBase@@QAEFFPAF@Z ENDP			; CSqlBase::BindCol
_TEXT	ENDS
PUBLIC	?BindCol@CSqlBase@@QAEFFPAD@Z			; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAD@Z
_TEXT	SEGMENT
_ci$ = 8						; size = 2
_ptr$ = 12						; size = 4
?BindCol@CSqlBase@@QAEFFPAD@Z PROC NEAR			; CSqlBase::BindCol, COMDAT
; _this$ = ecx

; 290  : 	return SQLBindCol(m_hstmt, ci, SQL_C_STINYINT, ptr, 0, &m_liCOLS[ci-1]);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _ci$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 04
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+1036]
  0000e	52		 push	 edx
  0000f	8b 54 24 0c	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	6a e6		 push	 -26			; ffffffe6H
  00018	50		 push	 eax
  00019	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _SQLBindCol@24

; 291  : }

  00022	c2 08 00	 ret	 8
?BindCol@CSqlBase@@QAEFFPAD@Z ENDP			; CSqlBase::BindCol
_TEXT	ENDS
PUBLIC	?BindCol@CSqlBase@@QAEFFPA_J@Z			; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindCol@CSqlBase@@QAEFFPA_J@Z
_TEXT	SEGMENT
_ci$ = 8						; size = 2
_ptr$ = 12						; size = 4
?BindCol@CSqlBase@@QAEFFPA_J@Z PROC NEAR		; CSqlBase::BindCol, COMDAT
; _this$ = ecx

; 295  : 	return SQLBindCol(m_hstmt, ci, SQL_C_SBIGINT, ptr, 0, &m_liCOLS[ci-1]);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _ci$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 04
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+1036]
  0000e	52		 push	 edx
  0000f	8b 54 24 0c	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	6a e7		 push	 -25			; ffffffe7H
  00018	50		 push	 eax
  00019	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _SQLBindCol@24

; 296  : }

  00022	c2 08 00	 ret	 8
?BindCol@CSqlBase@@QAEFFPA_J@Z ENDP			; CSqlBase::BindCol
_TEXT	ENDS
PUBLIC	?BindCol@CSqlBase@@QAEFFPAK@Z			; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAK@Z
_TEXT	SEGMENT
_ci$ = 8						; size = 2
_ptr$ = 12						; size = 4
?BindCol@CSqlBase@@QAEFFPAK@Z PROC NEAR			; CSqlBase::BindCol, COMDAT
; _this$ = ecx

; 300  : 	return SQLBindCol(m_hstmt, ci, SQL_C_SLONG, ptr, 0, &m_liCOLS[ci-1]);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _ci$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 04
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+1036]
  0000e	52		 push	 edx
  0000f	8b 54 24 0c	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	6a f0		 push	 -16			; fffffff0H
  00018	50		 push	 eax
  00019	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _SQLBindCol@24

; 301  : }

  00022	c2 08 00	 ret	 8
?BindCol@CSqlBase@@QAEFFPAK@Z ENDP			; CSqlBase::BindCol
_TEXT	ENDS
PUBLIC	?BindCol@CSqlBase@@QAEFFPAG@Z			; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAG@Z
_TEXT	SEGMENT
_ci$ = 8						; size = 2
_ptr$ = 12						; size = 4
?BindCol@CSqlBase@@QAEFFPAG@Z PROC NEAR			; CSqlBase::BindCol, COMDAT
; _this$ = ecx

; 305  : 	return SQLBindCol(m_hstmt, ci, SQL_C_SSHORT, ptr, 0, &m_liCOLS[ci-1]);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _ci$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 04
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+1036]
  0000e	52		 push	 edx
  0000f	8b 54 24 0c	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	6a f1		 push	 -15			; fffffff1H
  00018	50		 push	 eax
  00019	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _SQLBindCol@24

; 306  : }

  00022	c2 08 00	 ret	 8
?BindCol@CSqlBase@@QAEFFPAG@Z ENDP			; CSqlBase::BindCol
_TEXT	ENDS
PUBLIC	?BindCol@CSqlBase@@QAEFFPAE@Z			; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindCol@CSqlBase@@QAEFFPAE@Z
_TEXT	SEGMENT
_ci$ = 8						; size = 2
_ptr$ = 12						; size = 4
?BindCol@CSqlBase@@QAEFFPAE@Z PROC NEAR			; CSqlBase::BindCol, COMDAT
; _this$ = ecx

; 310  : 	return SQLBindCol(m_hstmt, ci, SQL_C_TINYINT, ptr, 0, &m_liCOLS[ci-1]);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _ci$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 04
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+1036]
  0000e	52		 push	 edx
  0000f	8b 54 24 0c	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	6a fa		 push	 -6			; fffffffaH
  00018	50		 push	 eax
  00019	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _SQLBindCol@24

; 311  : }

  00022	c2 08 00	 ret	 8
?BindCol@CSqlBase@@QAEFFPAE@Z ENDP			; CSqlBase::BindCol
_TEXT	ENDS
PUBLIC	?BindCol@CSqlBase@@QAEFFPA_K@Z			; CSqlBase::BindCol
; Function compile flags: /Ogty
;	COMDAT ?BindCol@CSqlBase@@QAEFFPA_K@Z
_TEXT	SEGMENT
_ci$ = 8						; size = 2
_ptr$ = 12						; size = 4
?BindCol@CSqlBase@@QAEFFPA_K@Z PROC NEAR		; CSqlBase::BindCol, COMDAT
; _this$ = ecx

; 315  : 	return SQLBindCol(m_hstmt, ci, SQL_C_SBIGINT, ptr, 0, &m_liCOLS[ci-1]);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _ci$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 04
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+1036]
  0000e	52		 push	 edx
  0000f	8b 54 24 0c	 mov	 edx, DWORD PTR _ptr$[esp]
  00013	6a 00		 push	 0
  00015	52		 push	 edx
  00016	6a e7		 push	 -25			; ffffffe7H
  00018	50		 push	 eax
  00019	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001c	50		 push	 eax
  0001d	e8 00 00 00 00	 call	 _SQLBindCol@24

; 316  : }

  00022	c2 08 00	 ret	 8
?BindCol@CSqlBase@@QAEFFPA_K@Z ENDP			; CSqlBase::BindCol
_TEXT	ENDS
PUBLIC	?BindColStr@CSqlBase@@QAEFFPADJ@Z		; CSqlBase::BindColStr
; Function compile flags: /Ogty
;	COMDAT ?BindColStr@CSqlBase@@QAEFFPADJ@Z
_TEXT	SEGMENT
_ci$ = 8						; size = 2
_ptr$ = 12						; size = 4
_len$ = 16						; size = 4
?BindColStr@CSqlBase@@QAEFFPADJ@Z PROC NEAR		; CSqlBase::BindColStr, COMDAT
; _this$ = ecx

; 320  : 	return SQLBindCol(m_hstmt, ci, SQL_C_CHAR, ptr, len, &m_liCOLS[ci-1]);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _ci$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 04
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+1036]
  0000e	52		 push	 edx
  0000f	8b 54 24 10	 mov	 edx, DWORD PTR _len$[esp]
  00013	52		 push	 edx
  00014	8b 54 24 10	 mov	 edx, DWORD PTR _ptr$[esp+4]
  00018	52		 push	 edx
  00019	6a 01		 push	 1
  0001b	50		 push	 eax
  0001c	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  0001f	50		 push	 eax
  00020	e8 00 00 00 00	 call	 _SQLBindCol@24

; 321  : }

  00025	c2 0c 00	 ret	 12			; 0000000cH
?BindColStr@CSqlBase@@QAEFFPADJ@Z ENDP			; CSqlBase::BindColStr
_TEXT	ENDS
PUBLIC	?BindCustomCol@CSqlBase@@QAEFFFPAXJ@Z		; CSqlBase::BindCustomCol
; Function compile flags: /Ogty
;	COMDAT ?BindCustomCol@CSqlBase@@QAEFFFPAXJ@Z
_TEXT	SEGMENT
_ci$ = 8						; size = 2
_tt$ = 12						; size = 2
_ptr$ = 16						; size = 4
_len$ = 20						; size = 4
?BindCustomCol@CSqlBase@@QAEFFFPAXJ@Z PROC NEAR		; CSqlBase::BindCustomCol, COMDAT
; _this$ = ecx

; 325  : 	return SQLBindCol(m_hstmt, ci, tt, ptr, len, &m_liCOLS[ci-1]);

  00000	8b 44 24 04	 mov	 eax, DWORD PTR _ci$[esp-4]
  00004	0f bf d0	 movsx	 edx, ax
  00007	8d 94 91 0c 04
	00 00		 lea	 edx, DWORD PTR [ecx+edx*4+1036]
  0000e	52		 push	 edx
  0000f	8b 54 24 14	 mov	 edx, DWORD PTR _len$[esp]
  00013	52		 push	 edx
  00014	8b 54 24 14	 mov	 edx, DWORD PTR _ptr$[esp+4]
  00018	52		 push	 edx
  00019	8b 54 24 14	 mov	 edx, DWORD PTR _tt$[esp+8]
  0001d	52		 push	 edx
  0001e	50		 push	 eax
  0001f	8b 41 0c	 mov	 eax, DWORD PTR [ecx+12]
  00022	50		 push	 eax
  00023	e8 00 00 00 00	 call	 _SQLBindCol@24

; 326  : }

  00028	c2 10 00	 ret	 16			; 00000010H
?BindCustomCol@CSqlBase@@QAEFFFPAXJ@Z ENDP		; CSqlBase::BindCustomCol
_TEXT	ENDS
PUBLIC	??0CSqlBase@@QAE@PAVCSqlDatabase@@PBD@Z		; CSqlBase::CSqlBase
PUBLIC	??_7CSqlBase@@6B@				; CSqlBase::`vftable'
PUBLIC	??_GCSqlBase@@UAEPAXI@Z				; CSqlBase::`scalar deleting destructor'
EXTRN	??_ECSqlBase@@UAEPAXI@Z:NEAR			; CSqlBase::`vector deleting destructor'
;	COMDAT ??_7CSqlBase@@6B@
CONST	SEGMENT
??_7CSqlBase@@6B@ DD FLAT:??_ECSqlBase@@UAEPAXI@Z	; CSqlBase::`vftable'
	DD	FLAT:?GetNumCol@CSqlBase@@UAEHXZ
	DD	FLAT:?GetNumParam@CSqlBase@@UAEHXZ
	DD	FLAT:?AllocStatement@CSqlBase@@UAEHXZ
; Function compile flags: /Ogty
CONST	ENDS
;	COMDAT ??0CSqlBase@@QAE@PAVCSqlDatabase@@PBD@Z
_TEXT	SEGMENT
_pdb$ = 8						; size = 4
_lpszQuery$ = 12					; size = 4
??0CSqlBase@@QAE@PAVCSqlDatabase@@PBD@Z PROC NEAR	; CSqlBase::CSqlBase, COMDAT
; _this$ = ecx

; 14   : 	Init(pdb, lpszQuery);

  00000	8b 44 24 08	 mov	 eax, DWORD PTR _lpszQuery$[esp-4]
  00004	56		 push	 esi
  00005	8b f1		 mov	 esi, ecx
  00007	8b 4c 24 08	 mov	 ecx, DWORD PTR _pdb$[esp]
  0000b	50		 push	 eax
  0000c	51		 push	 ecx
  0000d	8b ce		 mov	 ecx, esi
  0000f	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSqlBase@@6B@
  00015	e8 00 00 00 00	 call	 ?Init@CSqlBase@@QAEXPAVCSqlDatabase@@PBD@Z ; CSqlBase::Init

; 15   : }

  0001a	8b c6		 mov	 eax, esi
  0001c	5e		 pop	 esi
  0001d	c2 08 00	 ret	 8
??0CSqlBase@@QAE@PAVCSqlDatabase@@PBD@Z ENDP		; CSqlBase::CSqlBase
_TEXT	ENDS
PUBLIC	??1CSqlBase@@UAE@XZ				; CSqlBase::~CSqlBase
; Function compile flags: /Ogty
;	COMDAT ??1CSqlBase@@UAE@XZ
_TEXT	SEGMENT
??1CSqlBase@@UAE@XZ PROC NEAR				; CSqlBase::~CSqlBase, COMDAT
; _this$ = ecx

; 18   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 19   : 	FreeStatement();

  00003	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00006	85 c0		 test	 eax, eax
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSqlBase@@6B@
  0000e	74 0f		 je	 SHORT $L93439
  00010	50		 push	 eax
  00011	6a 03		 push	 3
  00013	e8 00 00 00 00	 call	 _SQLFreeHandle@8
  00018	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$L93439:
  0001f	5e		 pop	 esi

; 20   : }

  00020	c3		 ret	 0
??1CSqlBase@@UAE@XZ ENDP				; CSqlBase::~CSqlBase
_TEXT	ENDS
PUBLIC	?Call@CSqlBase@@QAEHXZ				; CSqlBase::Call
; Function compile flags: /Ogty
;	COMDAT ?Call@CSqlBase@@QAEHXZ
_TEXT	SEGMENT
?Call@CSqlBase@@QAEHXZ PROC NEAR			; CSqlBase::Call, COMDAT
; _this$ = ecx

; 85   : 	return Open(TRUE);

  00000	6a 01		 push	 1
  00002	e8 00 00 00 00	 call	 ?Open@CSqlBase@@QAEHH@Z	; CSqlBase::Open

; 86   : }

  00007	c3		 ret	 0
?Call@CSqlBase@@QAEHXZ ENDP				; CSqlBase::Call
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
; Function compile flags: /Ogty
;	COMDAT ??_GCSqlBase@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GCSqlBase@@UAEPAXI@Z PROC NEAR			; CSqlBase::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx
  00003	8b 46 0c	 mov	 eax, DWORD PTR [esi+12]
  00006	85 c0		 test	 eax, eax
  00008	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET FLAT:??_7CSqlBase@@6B@
  0000e	74 0f		 je	 SHORT $L93454
  00010	50		 push	 eax
  00011	6a 03		 push	 3
  00013	e8 00 00 00 00	 call	 _SQLFreeHandle@8
  00018	c7 46 0c 00 00
	00 00		 mov	 DWORD PTR [esi+12], 0
$L93454:
  0001f	f6 44 24 08 01	 test	 BYTE PTR ___flags$[esp], 1
  00024	74 09		 je	 SHORT $L93456
  00026	56		 push	 esi
  00027	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0002c	83 c4 04	 add	 esp, 4
$L93456:
  0002f	8b c6		 mov	 eax, esi
  00031	5e		 pop	 esi
  00032	c2 04 00	 ret	 4
??_GCSqlBase@@UAEPAXI@Z ENDP				; CSqlBase::`scalar deleting destructor'
_TEXT	ENDS
END
